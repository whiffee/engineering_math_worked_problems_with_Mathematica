(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    267876,       6881]
NotebookOptionsPosition[    253030,       6397]
NotebookOutlinePosition[    253418,       6414]
CellTagsIndexPosition[    253375,       6411]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
Note: In this problem set, expressions in green cells match corresponding \
expressions in the text answers.\
\>", "Text",
 Evaluatable->False,
 CellChangeTimes->{
  3.7691123253137712`*^9, {3.769112378843519*^9, 3.769112379433229*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell["1 - 4 Contour Integration", "Text",
 CellChangeTimes->{{3.7585419437301598`*^9, 3.7585419669921217`*^9}}],

Cell[BoxData[
 RowBox[{"Integrate", " ", 
  FractionBox[
   SuperscriptBox["z", "2"], 
   RowBox[{
    SuperscriptBox["z", "2"], "-", "1"}]], " ", "by", " ", 
  RowBox[{"Cauchy", "'"}], "s", " ", "formula", " ", "counterclockwise", " ", 
  "around", " ", "the", " ", 
  RowBox[{"circle", "."}]}]], "Text",
 CellChangeTimes->{{3.758541970130192*^9, 3.758542009856485*^9}}],

Cell["1.  Abs[z + 1] = 1", "Text",
 CellChangeTimes->{{3.7585420132635183`*^9, 3.758542034823924*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[TextData[{
 "The formula for a circular plot in the given format needs to be recalled :\n\
  ",
 StyleBox["ParametricPlot[{r Cos[t] + a, r Sin[t] + b}, {t, 0, 2 \[Pi]}",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.7585718220700397`*^9, 3.758571893208129*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"1", " ", 
       RowBox[{"Cos", "[", "z", "]"}]}], "-", "1"}], ",", " ", 
     RowBox[{
      RowBox[{"1", " ", 
       RowBox[{"Sin", "[", "z", "]"}]}], "+", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0", ",", 
     RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "150"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{
          FractionBox["95", "255"], ",", 
          FractionBox["130", "255"], ",", 
          FractionBox["179", "255"]}], "]"}], ",", 
        RowBox[{"Arrowheads", "[", "0.1", "]"}], ",", 
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1.805"}], ",", "0.6"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1.85"}], ",", "0.55"}], "}"}]}], "}"}], "]"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{
          FractionBox["95", "255"], ",", 
          FractionBox["130", "255"], ",", 
          FractionBox["179", "255"]}], "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "0"}], "}"}], "]"}]}], "}"}]}], "}"}]}]}],
   "]"}]], "Input",
 CellChangeTimes->{{3.7585717252345953`*^9, 3.758571782831396*^9}, {
   3.758571833205789*^9, 3.7585718385898046`*^9}, {3.7585720282255983`*^9, 
   3.758572028591711*^9}, {3.75857207797614*^9, 3.7585720793103867`*^9}, {
   3.758572174020194*^9, 3.758572181947145*^9}, {3.758576672347073*^9, 
   3.758576686329911*^9}, {3.75857674754277*^9, 3.758576841300764*^9}, {
   3.758576883156107*^9, 3.75857696957584*^9}, {3.758577108997398*^9, 
   3.758577147650371*^9}, {3.7585771923375273`*^9, 3.758577374507619*^9}, {
   3.758579900686144*^9, 3.758579944026054*^9}, {3.758579986849742*^9, 
   3.75857999097666*^9}, {3.7585800336408033`*^9, 3.758580046230854*^9}, 
   3.7585802550767717`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
8Y0vkw3g//2XHMMDVgmBhIzi/wNUXf37
     "]]}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{{
     RGBColor[
      NCache[
       Rational[19, 51], 0.37254901960784315`], 
      NCache[
       Rational[26, 51], 0.5098039215686274], 
      NCache[
       Rational[179, 255], 0.7019607843137254]], 
     Arrowheads[0.1], 
     ArrowBox[{{-1.805, 0.6}, {-1.85, 0.55}}]}, {
     RGBColor[
      NCache[
       Rational[19, 51], 0.37254901960784315`], 
      NCache[
       Rational[26, 51], 0.5098039215686274], 
      NCache[
       Rational[179, 255], 0.7019607843137254]], 
     PointBox[{-1, 0}]}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->150,
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-1.9999998831351729`, 0.}, {-0.9999998592812047, 
   0.9999998782744886}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.758580293397822*^9}]
}, Open  ]],

Cell[TextData[{
 "This problem is covered in the s.m. As the s.m. points out, the first task \
is to find out where the problem function is not analytic. By inspection this \
is seen to be at the points ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", "0"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "=-1 and 1. The point 1 is not a concern since it is not inside the domain, \
but the point -1 is. The non-analytic condition will occur when ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", 
    RowBox[{"0", " "}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "=-1."
}], "Text",
 CellChangeTimes->{{3.75857299648304*^9, 3.7585730532559566`*^9}, {
   3.758573098390935*^9, 3.7585731255901318`*^9}, {3.758578329310132*^9, 
   3.758578353571679*^9}, {3.758580076518855*^9, 3.758580128059795*^9}, 
   3.7585804571707697`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "[", "z_", "]"}], "=", 
  FractionBox[
   SuperscriptBox["z", "2"], 
   RowBox[{
    SuperscriptBox["z", "2"], "-", "1"}]]}]], "Input",
 CellChangeTimes->{{3.758578096546328*^9, 3.758578139098855*^9}}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["z", "2"], 
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   SuperscriptBox["z", "2"]}]]], "Output",
 CellChangeTimes->{3.7585781613092422`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Factor", "[", 
  RowBox[{"g", "[", "z", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.758578147039253*^9, 3.758578152714316*^9}}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["z", "2"], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "z"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", "z"}], ")"}]}]]], "Output",
 CellChangeTimes->{{3.7585781538285923`*^9, 3.758578164766912*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Intending", " ", "to", " ", "use", " ", "numbered", " ", "line", 
  " ", 
  RowBox[{"(", "1", ")"}], " ", "on", " ", 
  RowBox[{"p", ".", "660"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[ContourIntegral]", "C"], " ", 
   RowBox[{
    FractionBox[
     RowBox[{"f", "[", "z", "]"}], 
     RowBox[{"z", "-", 
      SubscriptBox["z", "0"]}]], 
    RowBox[{"\[DifferentialD]", "z"}]}]}], "=", 
  RowBox[{"2", " ", "\[Pi]", " ", "\[ImaginaryI]", " ", 
   RowBox[{"f", "[", 
    RowBox[{
     SubscriptBox["z", 
      RowBox[{"0", "]"}]], ",", 
     RowBox[{"which", " ", "is", " ", 
      RowBox[{"Cauchy", "'"}], "s", " ", "integral", " ", "formula"}], ",", 
     " ", 
     RowBox[{"the", " ", 
      RowBox[{"s", ".", "m", ".", " ", "pulls"}], " ", "out", " ", 
      RowBox[{"f", "[", "z", "]"}], " ", "from"}]}]}]}]}]}], "Text",
 CellChangeTimes->{{3.758578643106934*^9, 3.758578775246687*^9}, {
  3.758579008215357*^9, 3.758579015670793*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "[", "z_", "]"}], "=", 
  RowBox[{
   FractionBox[
    SuperscriptBox["z", "2"], 
    RowBox[{
     SuperscriptBox["z", "2"], "-", "1"}]], "\[Equal]", 
   FractionBox[
    RowBox[{"f", "[", "z", "]"}], 
    RowBox[{"z", "-", 
     SubscriptBox["z", "0"]}]], "\[Equal]", 
   FractionBox[
    RowBox[{"f", "[", "z", "]"}], 
    RowBox[{"z", "-", 
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}]}]]}]}]], "Input",
 CellChangeTimes->{{3.7585788284742117`*^9, 3.758578833284719*^9}, {
  3.758579001904587*^9, 3.758579044997965*^9}, {3.758579129829586*^9, 
  3.758579179665588*^9}, {3.758579210890136*^9, 3.758579219441457*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   SuperscriptBox["z", "2"], 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    SuperscriptBox["z", "2"]}]], "\[Equal]", 
  FractionBox[
   RowBox[{"f", "[", "z", "]"}], 
   RowBox[{"z", "-", 
    SubscriptBox["z", "0"]}]], "\[Equal]", 
  FractionBox[
   RowBox[{"f", "[", "z", "]"}], 
   RowBox[{"1", "+", "z"}]]}]], "Output",
 CellChangeTimes->{3.758579238466123*^9}]
}, Open  ]],

Cell["\<\
and then operates on the first and last terms, multiplying by (1+z), yielding\
\
\>", "Text",
 CellChangeTimes->{{3.758579243168584*^9, 3.758579263127014*^9}, {
  3.7585793018871727`*^9, 3.7585793394686327`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "z_", "]"}], "=", 
  FractionBox[
   SuperscriptBox["z", "2"], 
   RowBox[{"z", "-", "1"}]]}]], "Input",
 CellChangeTimes->{{3.758579357873691*^9, 3.758579382339295*^9}}],

Cell["Now moving to numbered line (1),", "Text",
 CellChangeTimes->{{3.7585795138400803`*^9, 3.758579521470668*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[ContourIntegral]", "C"], " ", 
   RowBox[{
    FractionBox[
     SuperscriptBox["z", "2"], 
     RowBox[{
      SuperscriptBox["z", "2"], "-", "1"}]], 
    RowBox[{"\[DifferentialD]", "z"}]}]}], "==", 
  RowBox[{
   SubscriptBox["\[ContourIntegral]", "C"], " ", 
   RowBox[{
    FractionBox[
     RowBox[{"f", "[", "z", "]"}], 
     RowBox[{"z", "-", 
      SubscriptBox["z", "0"]}]], 
    RowBox[{"\[DifferentialD]", "z"}]}]}], "==", 
  RowBox[{
   SubscriptBox["\[ContourIntegral]", "C"], " ", 
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox["z", "2"], "/", 
      RowBox[{"(", 
       RowBox[{"z", "-", "1"}], ")"}]}], 
     RowBox[{"z", "-", 
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}]}]], 
    RowBox[{"\[DifferentialD]", "z"}]}]}], "\[Equal]", 
  RowBox[{"2", "\[Pi]", " ", "\[ImaginaryI]", " ", 
   RowBox[{"f", "[", 
    SubscriptBox["z", "0"], "]"}]}], "\[Equal]", 
  RowBox[{"2", " ", "\[Pi]", " ", "\[ImaginaryI]", " ", 
   RowBox[{"f", "[", 
    RowBox[{"-", "1"}], "]"}]}], "\[Equal]", 
  FractionBox[
   RowBox[{"2", " ", "\[Pi]", " ", "\[ImaginaryI]", " "}], 
   RowBox[{"-", "2"}]], "\[Equal]", 
  RowBox[{
   RowBox[{"-", "\[Pi]"}], " ", "\[ImaginaryI]"}]}]], "Input",
 CellChangeTimes->{{3.7585795428635817`*^9, 3.758579712103359*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell["And the way to the text answer is neatly demonstrated.", "Text",
 CellChangeTimes->{{3.758579768511945*^9, 3.758579777582635*^9}, {
  3.758579810093505*^9, 3.7585798113174677`*^9}}],

Cell["3.  Abs[z + \[ImaginaryI]] = 1.4", "Text",
 CellChangeTimes->{{3.758542046846937*^9, 3.758542074366868*^9}, {
  3.758555819053018*^9, 3.758555821274116*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"zirg", "=", 
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"1.4", " ", 
        RowBox[{"Cos", "[", "z", "]"}]}], "+", "0"}], ",", " ", 
      RowBox[{
       RowBox[{"1.4", " ", 
        RowBox[{"Sin", "[", "z", "]"}]}], "+", "1"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"z", ",", "0", ",", 
      RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "150"}], ",", 
    RowBox[{"Epilog", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"RGBColor", "[", 
          RowBox[{
           FractionBox["95", "255"], ",", 
           FractionBox["130", "255"], ",", 
           FractionBox["179", "255"]}], "]"}], ",", 
         RowBox[{"Arrowheads", "[", "0.1", "]"}], ",", 
         RowBox[{"Arrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1.305"}], ",", "1.5"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1.35"}], ",", "1.4"}], "}"}]}], "}"}], "]"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"RGBColor", "[", 
          RowBox[{
           FractionBox["95", "255"], ",", 
           FractionBox["130", "255"], ",", 
           FractionBox["179", "255"]}], "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], "]"}]}], "}"}]}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7585807084739513`*^9, 3.7585807619677362`*^9}, {
  3.758580805710889*^9, 3.758580935585799*^9}, {3.758581654659081*^9, 
  3.7585816765860653`*^9}, {3.758581811999222*^9, 3.758581813710051*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
bA==
     "]]}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{{
     RGBColor[
      NCache[
       Rational[19, 51], 0.37254901960784315`], 
      NCache[
       Rational[26, 51], 0.5098039215686274], 
      NCache[
       Rational[179, 255], 0.7019607843137254]], 
     Arrowheads[0.1], 
     ArrowBox[{{-1.305, 1.5}, {-1.35, 1.4}}]}, {
     RGBColor[
      NCache[
       Rational[19, 51], 0.37254901960784315`], 
      NCache[
       Rational[26, 51], 0.5098039215686274], 
      NCache[
       Rational[179, 255], 0.7019607843137254]], 
     PointBox[{0, 1}]}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->150,
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-1.3999998363892419`, 1.4}, {-0.3999998029936864, 
   2.399999829584284}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.758580643363147*^9, {3.758580749094035*^9, 3.758580763528222*^9}, {
   3.7585808424554358`*^9, 3.758580937922336*^9}, {3.758581655861517*^9, 
   3.758581677334053*^9}, 3.758581814385974*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "2"], "+", "1"}], "\[Equal]", 
    SuperscriptBox[
     RowBox[{"(", "1.4", ")"}], "2"]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.7585813971199903`*^9, 3.758581481488159*^9}, {
  3.758581558325983*^9, 3.758581610884006*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "0.9797958971132711`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.9797958971132711`"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{{3.758581433371023*^9, 3.758581482643469*^9}, {
  3.7585815598532*^9, 3.758581565785995*^9}, {3.75858160486819*^9, 
  3.758581611492922*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"y", "-", "1"}], ")"}], "2"]}], "\[Equal]", 
    SuperscriptBox[
     RowBox[{"(", "1.4", ")"}], "2"]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0.97", ",", "0.99"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "0.02"}], ",", "0.02"}], "}"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "185"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.758582552389176*^9, 3.758582592828547*^9}, {
  3.7585826260035343`*^9, 3.758582687257579*^9}, {3.758582903412126*^9, 
  3.7585829081143923`*^9}, {3.7586480665763683`*^9, 3.758648108612968*^9}, {
  3.758648143117004*^9, 3.758648149334854*^9}, {3.7586484742131023`*^9, 
  3.758648531953495*^9}, {3.7586485659367447`*^9, 3.7586486118071012`*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
   "], {{}, {}, 
    TagBox[
     TooltipBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
         19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
        53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 
        70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 
        87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100}]},
      RowBox[{
        RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
             RowBox[{
               RowBox[{"-", "1"}], "+", "y"}], ")"}], "2"]}], "\[Equal]", 
        "1.9599999999999997`"}]],
     Annotation[#, $CellContext`x^2 + (-1 + $CellContext`y)^2 == 
      1.9599999999999997`, "Tooltip"]& ]}],
  AspectRatio->1,
  DisplayFunction->Identity,
  Frame->True,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->185,
  Method->{"DefaultBoundaryStyle" -> Automatic},
  PlotRange->{{0.97, 0.99}, {-0.02, 0.02}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.758582569101975*^9, 3.758582593917644*^9}, 
   3.75858264870887*^9, 3.7585826881526613`*^9, 3.7585829095629807`*^9, {
   3.7586480766550922`*^9, 3.758648109366444*^9}, 3.758648151237982*^9, {
   3.758648504444332*^9, 3.7586485330391817`*^9}, {3.758648569011677*^9, 
   3.758648612720517*^9}}]
}, Open  ]],

Cell["\<\
Whereas in the parametric plot it looked like the unanalytic points might be \
at 1 and -1 exactly, a closer looks shows that they are not exactly on the \
curve. In fact they are outside the domain, which means that Cauchy\
\[CloseCurlyQuote]s theorem has a chance to take effect.\
\>", "Text",
 CellChangeTimes->{{3.758582925577366*^9, 3.758582981215722*^9}, {
  3.7585830626235857`*^9, 3.758583096155908*^9}, {3.7586359624217253`*^9, 
  3.758635966271006*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "z_", "]"}], "=", 
  FractionBox[
   SuperscriptBox["z", "2"], 
   RowBox[{
    SuperscriptBox["z", "2"], "-", "1"}]]}]], "Input",
 CellChangeTimes->{{3.758583241080502*^9, 3.7585832450707817`*^9}}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["z", "2"], 
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   SuperscriptBox["z", "2"]}]]], "Output",
 CellChangeTimes->{3.758583245842064*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{
   RowBox[{"f", "[", "z", "]"}], "/.", 
   RowBox[{"z", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{"x", "+", 
      RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7585832669546413`*^9, 3.7585833031654654`*^9}}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"x", "+", 
     RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], "2"], 
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"x", "+", 
      RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], "2"]}]]], "Output",
 CellChangeTimes->{3.758583304841448*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComplexExpand", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.758583435261743*^9, 3.758583440514133*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    SuperscriptBox["x", "2"], 
    RowBox[{
     RowBox[{"4", " ", 
      SuperscriptBox["x", "2"], " ", 
      SuperscriptBox["y", "2"]}], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["x", "2"], "-", 
        SuperscriptBox["y", "2"]}], ")"}], "2"]}]]}], "+", 
  FractionBox[
   SuperscriptBox["x", "4"], 
   RowBox[{
    RowBox[{"4", " ", 
     SuperscriptBox["x", "2"], " ", 
     SuperscriptBox["y", "2"]}], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["x", "2"], "-", 
       SuperscriptBox["y", "2"]}], ")"}], "2"]}]], "-", 
  FractionBox[
   RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", "y"}], 
   RowBox[{
    RowBox[{"4", " ", 
     SuperscriptBox["x", "2"], " ", 
     SuperscriptBox["y", "2"]}], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["x", "2"], "-", 
       SuperscriptBox["y", "2"]}], ")"}], "2"]}]], "+", 
  FractionBox[
   SuperscriptBox["y", "2"], 
   RowBox[{
    RowBox[{"4", " ", 
     SuperscriptBox["x", "2"], " ", 
     SuperscriptBox["y", "2"]}], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["x", "2"], "-", 
       SuperscriptBox["y", "2"]}], ")"}], "2"]}]], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox["x", "2"], " ", 
    SuperscriptBox["y", "2"]}], 
   RowBox[{
    RowBox[{"4", " ", 
     SuperscriptBox["x", "2"], " ", 
     SuperscriptBox["y", "2"]}], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["x", "2"], "-", 
       SuperscriptBox["y", "2"]}], ")"}], "2"]}]], "+", 
  FractionBox[
   SuperscriptBox["y", "4"], 
   RowBox[{
    RowBox[{"4", " ", 
     SuperscriptBox["x", "2"], " ", 
     SuperscriptBox["y", "2"]}], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["x", "2"], "-", 
       SuperscriptBox["y", "2"]}], ")"}], "2"]}]]}]], "Output",
 CellChangeTimes->{3.758583441745549*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"u", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["x", "2"], 
     RowBox[{
      RowBox[{"4", " ", 
       SuperscriptBox["x", "2"], " ", 
       SuperscriptBox["y", "2"]}], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["x", "2"], "-", 
         SuperscriptBox["y", "2"]}], ")"}], "2"]}]]}], "+", 
   FractionBox[
    SuperscriptBox["x", "4"], 
    RowBox[{
     RowBox[{"4", " ", 
      SuperscriptBox["x", "2"], " ", 
      SuperscriptBox["y", "2"]}], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["x", "2"], "-", 
        SuperscriptBox["y", "2"]}], ")"}], "2"]}]], "+", 
   FractionBox[
    SuperscriptBox["y", "2"], 
    RowBox[{
     RowBox[{"4", " ", 
      SuperscriptBox["x", "2"], " ", 
      SuperscriptBox["y", "2"]}], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["x", "2"], "-", 
        SuperscriptBox["y", "2"]}], ")"}], "2"]}]], "+", 
   FractionBox[
    RowBox[{"2", " ", 
     SuperscriptBox["x", "2"], " ", 
     SuperscriptBox["y", "2"]}], 
    RowBox[{
     RowBox[{"4", " ", 
      SuperscriptBox["x", "2"], " ", 
      SuperscriptBox["y", "2"]}], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["x", "2"], "-", 
        SuperscriptBox["y", "2"]}], ")"}], "2"]}]], "+", 
   FractionBox[
    SuperscriptBox["y", "4"], 
    RowBox[{
     RowBox[{"4", " ", 
      SuperscriptBox["x", "2"], " ", 
      SuperscriptBox["y", "2"]}], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["x", "2"], "-", 
        SuperscriptBox["y", "2"]}], ")"}], "2"]}]]}]}]], "Input",
 CellChangeTimes->{{3.7585835178504677`*^9, 3.758583540462956*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    SuperscriptBox["x", "2"], 
    RowBox[{
     RowBox[{"4", " ", 
      SuperscriptBox["x", "2"], " ", 
      SuperscriptBox["y", "2"]}], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["x", "2"], "-", 
        SuperscriptBox["y", "2"]}], ")"}], "2"]}]]}], "+", 
  FractionBox[
   SuperscriptBox["x", "4"], 
   RowBox[{
    RowBox[{"4", " ", 
     SuperscriptBox["x", "2"], " ", 
     SuperscriptBox["y", "2"]}], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["x", "2"], "-", 
       SuperscriptBox["y", "2"]}], ")"}], "2"]}]], "+", 
  FractionBox[
   SuperscriptBox["y", "2"], 
   RowBox[{
    RowBox[{"4", " ", 
     SuperscriptBox["x", "2"], " ", 
     SuperscriptBox["y", "2"]}], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["x", "2"], "-", 
       SuperscriptBox["y", "2"]}], ")"}], "2"]}]], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox["x", "2"], " ", 
    SuperscriptBox["y", "2"]}], 
   RowBox[{
    RowBox[{"4", " ", 
     SuperscriptBox["x", "2"], " ", 
     SuperscriptBox["y", "2"]}], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["x", "2"], "-", 
       SuperscriptBox["y", "2"]}], ")"}], "2"]}]], "+", 
  FractionBox[
   SuperscriptBox["y", "4"], 
   RowBox[{
    RowBox[{"4", " ", 
     SuperscriptBox["x", "2"], " ", 
     SuperscriptBox["y", "2"]}], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["x", "2"], "-", 
       SuperscriptBox["y", "2"]}], ")"}], "2"]}]]}]], "Output",
 CellChangeTimes->{3.758583636391341*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"v", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{"-", 
   FractionBox[
    RowBox[{"2", "  ", "x", " ", "y"}], 
    RowBox[{
     RowBox[{"4", " ", 
      SuperscriptBox["x", "2"], " ", 
      SuperscriptBox["y", "2"]}], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["x", "2"], "-", 
        SuperscriptBox["y", "2"]}], ")"}], "2"]}]]}]}]], "Input",
 CellChangeTimes->{{3.758583548048966*^9, 3.7585835747483387`*^9}, 
   3.75858369625877*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"2", " ", "x", " ", "y"}], 
   RowBox[{
    RowBox[{"4", " ", 
     SuperscriptBox["x", "2"], " ", 
     SuperscriptBox["y", "2"]}], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["x", "2"], "-", 
       SuperscriptBox["y", "2"]}], ")"}], "2"]}]]}]], "Output",
 CellChangeTimes->{
  3.758583639732876*^9, {3.758583697799677*^9, 3.75858370669427*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"u", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", "x"}], "]"}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.758583606279953*^9, 3.758583613060589*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"-", "2"}], " ", "x", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["x", "2"]}], ")"}], "2"]}], "+", 
   RowBox[{"4", " ", "x", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["x", "2"]}], ")"}], " ", 
    SuperscriptBox["y", "2"]}], "+", 
   RowBox[{"6", " ", "x", " ", 
    SuperscriptBox["y", "4"]}]}], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["x", "4"], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["x", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["y", "2"]}], ")"}]}], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["y", "2"]}], ")"}], "2"]}], ")"}], "2"]]], "Output",
 CellChangeTimes->{3.758583614235733*^9, 3.758583646538252*^9},
 Background->RGBColor[0.9, 1, 1]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"v", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", "y"}], "]"}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.758583677478579*^9, 3.758583682649991*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"-", "2"}], " ", "x", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["x", "2"]}], ")"}], "2"]}], "+", 
   RowBox[{"4", " ", "x", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["x", "2"]}], ")"}], " ", 
    SuperscriptBox["y", "2"]}], "+", 
   RowBox[{"6", " ", "x", " ", 
    SuperscriptBox["y", "4"]}]}], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["x", "4"], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["x", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["y", "2"]}], ")"}]}], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["y", "2"]}], ")"}], "2"]}], ")"}], "2"]]], "Output",
 CellChangeTimes->{3.758583683880262*^9, 3.758583714536406*^9},
 Background->RGBColor[0.9, 1, 1]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"u", "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", "y"}], "]"}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.758583790497744*^9, 3.7585837951585817`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", "y"}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "x"}], ")"}], "2"], "+", 
      SuperscriptBox["y", "2"]}], ")"}], "2"]], "-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", "x"}], ")"}], " ", "y"}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "x"}], ")"}], "2"], "+", 
      SuperscriptBox["y", "2"]}], ")"}], "2"]]}]], "Output",
 CellChangeTimes->{3.75858379647886*^9},
 Background->RGBColor[1, 0.925, 0.925]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"v", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", "x"}], "]"}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.758583819343473*^9, 3.758583824397696*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", "y"}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "x"}], ")"}], "2"], "+", 
      SuperscriptBox["y", "2"]}], ")"}], "2"]], "-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", "x"}], ")"}], " ", "y"}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "x"}], ")"}], "2"], "+", 
      SuperscriptBox["y", "2"]}], ")"}], "2"]]}]], "Output",
 CellChangeTimes->{3.75858382549469*^9},
 Background->RGBColor[1, 0.925, 0.925]]
}, Open  ]],

Cell["\<\
Cyan and pink cells match. The function proves to be analytic for all real x \
and y. It meets the requirements of Cauchy\[CloseCurlyQuote]s theorem, and \
therefore the contour integral equals zero.\
\>", "Text",
 CellChangeTimes->{3.758583903813141*^9},
 Background->RGBColor[0.88, 1, 0.88]],

Cell["5 - 8 Integrate the given function around the unit circle.", "Text",
 CellChangeTimes->{{3.758547868912985*^9, 3.758547882830377*^9}}],

Cell[BoxData[
 RowBox[{"5.", "  ", 
  FractionBox[
   RowBox[{"Cos", "[", 
    RowBox[{"3", " ", "z"}], "]"}], 
   RowBox[{"6", " ", "z"}]]}]], "Text",
 CellChangeTimes->{{3.758547891650172*^9, 3.758547920390971*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell["\<\
This problem admits use of Cauchy\[CloseCurlyQuote]s Integral Formula. It is \
first split up,\
\>", "Text",
 CellChangeTimes->{{3.7586386598497753`*^9, 3.7586386757513237`*^9}, {
  3.758638710134354*^9, 3.758638717229806*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "z_", "]"}], "=", 
  FractionBox[
   RowBox[{"Cos", "[", 
    RowBox[{"3", " ", "z"}], "]"}], 
   RowBox[{"6", " "}]]}]], "Input",
 CellChangeTimes->{{3.758638733823207*^9, 3.758638755805058*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "6"], " ", 
  RowBox[{"Cos", "[", 
   RowBox[{"3", " ", "z"}], "]"}]}]], "Output",
 CellChangeTimes->{3.758638758837731*^9, 3.758640573630168*^9}]
}, Open  ]],

Cell[TextData[{
 "The point of difficulty is ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", "0"], TraditionalForm]]],
 "=0 ."
}], "Text",
 CellChangeTimes->{{3.7586406067896433`*^9, 3.758640625235948*^9}, {
  3.758736302866868*^9, 3.758736324567335*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "0", "]"}]], "Input",
 CellChangeTimes->{{3.758640546578846*^9, 3.7586405483117847`*^9}}],

Cell[BoxData[
 FractionBox["1", "6"]], "Output",
 CellChangeTimes->{{3.7586405494070463`*^9, 3.75864057671835*^9}}]
}, Open  ]],

Cell[TextData[{
 "And to put it in the form of Cauchy\[CloseCurlyQuote]s Integral Formula, \
numbered line (1) on p. 660,\n ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    StyleBox[
     SubscriptBox["\[ContourIntegral]", "C"],
     FontSize->22], 
    StyleBox[" ",
     FontSize->22], 
    RowBox[{
     StyleBox[
      FractionBox[
       RowBox[{"f", "[", "z", "]"}], 
       RowBox[{"z", "-", 
        SubscriptBox["z", "0"]}]],
      FontSize->23], 
     RowBox[{"\[DifferentialD]", "z"}]}]}], " ", "=", 
   RowBox[{"2", "\[Pi]\[ImaginaryI]", 
    FormBox[
     RowBox[{"f", "[", 
      SubscriptBox["z", "0"], "]"}],
     TraditionalForm]}]}]]]
}], "Text",
 CellChangeTimes->{{3.7586389258236427`*^9, 3.758638941487215*^9}, {
  3.758640407691992*^9, 3.758640459837159*^9}, {3.7586404965119457`*^9, 
  3.7586405064157352`*^9}, {3.758640930979785*^9, 3.758640955777604*^9}}],

Cell["\<\
Checking the Cauchy conditions. Is the unit circle, D, simply connected? Yes. \
Is f[z] analytic in D? The cosine function is analytic and holomorphic, and \
multiplying by real 1/6 will not disturb this. Nevertheless I will check it.\
\>", "Text",
 CellChangeTimes->{{3.758639166024057*^9, 3.7586392417501793`*^9}, {
  3.758639725712837*^9, 3.7586397431829567`*^9}, {3.758639796693173*^9, 
  3.7586398133967123`*^9}, {3.758639875882812*^9, 3.758639882546748*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{
   RowBox[{"f", "[", "z", "]"}], "/.", 
   RowBox[{"z", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{"x", "+", 
      RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.758639890853574*^9, 3.758639942961113*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "6"], " ", 
  RowBox[{"Cos", "[", 
   RowBox[{"3", " ", 
    RowBox[{"(", 
     RowBox[{"x", "+", 
      RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}]}], "]"}]}]], "Output",
 CellChangeTimes->{3.758639945638969*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComplexExpand", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.758639952556402*^9, 3.758639957473797*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "6"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"3", " ", "x"}], "]"}], " ", 
   RowBox[{"Cosh", "[", 
    RowBox[{"3", " ", "y"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "6"], " ", "\[ImaginaryI]", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"3", " ", "x"}], "]"}], " ", 
   RowBox[{"Sinh", "[", 
    RowBox[{"3", " ", "y"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.758639958610381*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"u", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{
   FractionBox["1", "6"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"3", " ", "x"}], "]"}], " ", 
   RowBox[{"Cosh", "[", 
    RowBox[{"3", " ", "y"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.758639977797555*^9, 3.75864000476194*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "6"], " ", 
  RowBox[{"Cos", "[", 
   RowBox[{"3", " ", "x"}], "]"}], " ", 
  RowBox[{"Cosh", "[", 
   RowBox[{"3", " ", "y"}], "]"}]}]], "Output",
 CellChangeTimes->{3.7586400068645678`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"v", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", "6"]}], "  ", 
   RowBox[{"Sin", "[", 
    RowBox[{"3", " ", "x"}], "]"}], " ", 
   RowBox[{"Sinh", "[", 
    RowBox[{"3", " ", "y"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.758640018608089*^9, 3.758640040615436*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "6"]}], " ", 
  RowBox[{"Sin", "[", 
   RowBox[{"3", " ", "x"}], "]"}], " ", 
  RowBox[{"Sinh", "[", 
   RowBox[{"3", " ", "y"}], "]"}]}]], "Output",
 CellChangeTimes->{3.7586400415988398`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"u", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.7586401364731483`*^9, 3.758640145002442*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "2"]}], " ", 
  RowBox[{"Cosh", "[", 
   RowBox[{"3", " ", "y"}], "]"}], " ", 
  RowBox[{"Sin", "[", 
   RowBox[{"3", " ", "x"}], "]"}]}]], "Output",
 CellChangeTimes->{3.758640145965493*^9},
 Background->RGBColor[0.9, 1, 1]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"v", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", "y"}], "]"}]], "Input",
 CellChangeTimes->{{3.758640156287404*^9, 3.7586401664901037`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "2"]}], " ", 
  RowBox[{"Cosh", "[", 
   RowBox[{"3", " ", "y"}], "]"}], " ", 
  RowBox[{"Sin", "[", 
   RowBox[{"3", " ", "x"}], "]"}]}]], "Output",
 CellChangeTimes->{3.758640169571594*^9},
 Background->RGBColor[0.9, 1, 1]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"u", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", "y"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.758640176406632*^9, 3.758640190073455*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "2"]}], " ", 
  RowBox[{"Cos", "[", 
   RowBox[{"3", " ", "x"}], "]"}], " ", 
  RowBox[{"Sinh", "[", 
   RowBox[{"3", " ", "y"}], "]"}]}]], "Output",
 CellChangeTimes->{3.7586401917953787`*^9},
 Background->RGBColor[1, 0.925, 0.925]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"v", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.758640194598744*^9, 3.758640205688759*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "2"]}], " ", 
  RowBox[{"Cos", "[", 
   RowBox[{"3", " ", "x"}], "]"}], " ", 
  RowBox[{"Sinh", "[", 
   RowBox[{"3", " ", "y"}], "]"}]}]], "Output",
 CellChangeTimes->{3.75864020674144*^9},
 Background->RGBColor[1, 0.925, 0.925]]
}, Open  ]],

Cell["\<\
The function f[z] is analytic. The preliminaries having been taken care of, I \
can now write the rhs of the Cauchy Integral Formula,\
\>", "Text",
 CellChangeTimes->{{3.758640287809637*^9, 3.7586403062392197`*^9}, {
  3.758640689851452*^9, 3.758640728624681*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", "\[Pi]\[ImaginaryI]", " ", 
  FormBox[
   RowBox[{"f", "[", "0", "]"}],
   TraditionalForm]}]], "Input",
 CellChangeTimes->{{3.758640734283139*^9, 3.758640749680105*^9}}],

Cell[BoxData[
 FractionBox["\[Pi]\[ImaginaryI]", "3"]], "Output",
 CellChangeTimes->{3.75864075346762*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"7.", "  ", 
  FractionBox[
   SuperscriptBox["z", "3"], 
   RowBox[{
    RowBox[{"2", " ", "z"}], "-", "\[ImaginaryI]"}]]}]], "Text",
 CellChangeTimes->{{3.7585479363804007`*^9, 3.758547975829114*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell["\<\
This problem also invites use of Cauchy\[CloseCurlyQuote]s Integral Formula. \
First splitting it up,\
\>", "Text",
 CellChangeTimes->{{3.758641079504438*^9, 3.7586411025731783`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "z_", "]"}], "=", 
  FractionBox[
   SuperscriptBox["z", "3"], "2"]}]], "Input",
 CellChangeTimes->{{3.758641198854445*^9, 3.75864122289742*^9}, {
  3.758642148846223*^9, 3.758642149484647*^9}}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["z", "3"], "2"]], "Output",
 CellChangeTimes->{3.75864122452372*^9, 3.758642150933908*^9, 
  3.758642317452444*^9, 3.7586570705816193`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   StyleBox["The",
    FontFamily->"Charter"], 
   StyleBox[" ",
    FontFamily->"Charter"], 
   StyleBox["point",
    FontFamily->"Charter"], 
   StyleBox[" ",
    FontFamily->"Charter"], 
   StyleBox["of",
    FontFamily->"Charter"], 
   StyleBox[" ",
    FontFamily->"Charter"], 
   StyleBox["difficulty",
    FontFamily->"Charter"], 
   StyleBox[" ",
    FontFamily->"Charter"], 
   StyleBox["is",
    FontFamily->"Charter"], " ", 
   FormBox[
    SubscriptBox["z", "0"],
    TraditionalForm]}], "=", 
  RowBox[{
   FractionBox["1", "2"], "\[ImaginaryI]"}]}]], "Text",
 CellChangeTimes->{{3.758641248008189*^9, 3.758641278427187*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  FractionBox["\[ImaginaryI]", "2"], "]"}]], "Input",
 CellChangeTimes->{{3.758641286835917*^9, 3.7586413527576313`*^9}, {
  3.7586413836781883`*^9, 3.758641390084442*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["\[ImaginaryI]", "16"]}]], "Output",
 CellChangeTimes->{{3.758641296129682*^9, 3.758641353694927*^9}, 
   3.75864139096462*^9, 3.758642161072506*^9, 3.758642320764147*^9, 
   3.758657074081295*^9}]
}, Open  ]],

Cell["Checking analyticity,", "Text",
 CellChangeTimes->{{3.758641518288176*^9, 3.7586415241279793`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{
   RowBox[{"f", "[", "z", "]"}], "/.", 
   RowBox[{"z", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{"x", "+", 
      RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}]}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"x", "+", 
     RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], "3"]}]], "Output",
 CellChangeTimes->{3.758641544626645*^9, 3.7586422284627247`*^9, 
  3.758642325508285*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComplexExpand", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.758641555499757*^9, 3.758641560160449*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   SuperscriptBox["x", "3"], "2"], "-", 
  FractionBox[
   RowBox[{"3", " ", "x", " ", 
    SuperscriptBox["y", "2"]}], "2"], "+", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"3", " ", 
       SuperscriptBox["x", "2"], " ", "y"}], "2"], "-", 
     FractionBox[
      SuperscriptBox["y", "3"], "2"]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.758641561144869*^9, 3.758642236116694*^9, 
  3.758642328178927*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"u", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{
   FractionBox[
    SuperscriptBox["x", "3"], "2"], "-", 
   FractionBox[
    RowBox[{"3", " ", "x", " ", 
     SuperscriptBox["y", "2"]}], "2"]}]}]], "Input",
 CellChangeTimes->{{3.7586415820404177`*^9, 3.758641599992674*^9}, 
   3.7586423595051126`*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   SuperscriptBox["x", "3"], "2"], "-", 
  FractionBox[
   RowBox[{"3", " ", "x", " ", 
    SuperscriptBox["y", "2"]}], "2"]}]], "Output",
 CellChangeTimes->{3.758641601222424*^9, 3.7586422393897247`*^9, 
  3.758642361169215*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"v", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{
   FractionBox[
    RowBox[{"3", " ", 
     SuperscriptBox["x", "2"], " ", "y"}], "2"], "-", 
   FractionBox[
    SuperscriptBox["y", "3"], "2"]}]}]], "Input",
 CellChangeTimes->{{3.758641602654477*^9, 3.758641618496073*^9}, 
   3.75864237244917*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"3", " ", 
    SuperscriptBox["x", "2"], " ", "y"}], "2"], "-", 
  FractionBox[
   SuperscriptBox["y", "3"], "2"]}]], "Output",
 CellChangeTimes->{3.75864161968799*^9, 3.758642242470133*^9, 
  3.758642373598894*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"u", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.758641625309478*^9, 3.758641633308646*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"3", " ", 
    SuperscriptBox["x", "2"]}], "2"], "-", 
  FractionBox[
   RowBox[{"3", " ", 
    SuperscriptBox["y", "2"]}], "2"]}]], "Output",
 CellChangeTimes->{3.758641634118984*^9, 3.7586422462287283`*^9, 
  3.758642377234399*^9},
 Background->RGBColor[0.9, 1, 1]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"v", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", "y"}], "]"}]], "Input",
 CellChangeTimes->{{3.758641636067525*^9, 3.758641645844284*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"3", " ", 
    SuperscriptBox["x", "2"]}], "2"], "-", 
  FractionBox[
   RowBox[{"3", " ", 
    SuperscriptBox["y", "2"]}], "2"]}]], "Output",
 CellChangeTimes->{3.758641647133898*^9, 3.758642250115171*^9, 
  3.75864238033785*^9},
 Background->RGBColor[0.9, 1, 1]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"u", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", "y"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.758641650171131*^9, 3.758641660115861*^9}}],

Cell[BoxData[
 RowBox[{"3", " ", "x", " ", "y"}]], "Output",
 CellChangeTimes->{3.758641661502636*^9, 3.758642252512014*^9, 
  3.758642383818223*^9},
 Background->RGBColor[1, 0.925, 0.925]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"v", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.75864166384133*^9, 3.758641673363533*^9}}],

Cell[BoxData[
 RowBox[{"3", " ", "x", " ", "y"}]], "Output",
 CellChangeTimes->{3.758641674190707*^9, 3.7586422552744703`*^9, 
  3.758642387048644*^9},
 Background->RGBColor[1, 0.925, 0.925]]
}, Open  ]],

Cell["Retrieving the rhs of the Cauchy Integral Formula,", "Text",
 CellChangeTimes->{{3.758641767665887*^9, 3.7586417795920353`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", "\[Pi]", " ", "\[ImaginaryI]", " ", 
  RowBox[{"f", "[", 
   FractionBox["\[ImaginaryI]", "2"], "]"}]}]], "Input",
 CellChangeTimes->{{3.7586417837480907`*^9, 3.758641822318849*^9}}],

Cell[BoxData[
 FractionBox["\[Pi]", "8"]], "Output",
 CellChangeTimes->{{3.758641795536817*^9, 3.758641823673327*^9}, 
   3.7586422617871113`*^9, 3.758642390242611*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["\<\
11 - 19 Further Contour Integrals
Integrate counterclockwise or as indicated. \
\>", "Text",
 CellChangeTimes->{{3.758550900827353*^9, 3.7585509305379066`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"11.", "  ", 
   RowBox[{
    SubscriptBox["\[ContourIntegral]", "C"], " ", 
    FractionBox[
     RowBox[{"\[DifferentialD]", "z"}], 
     RowBox[{
      SuperscriptBox["z", "2"], "+", "4"}]]}]}], ",", "  ", 
  RowBox[{"C", ":", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"4", " ", 
      SuperscriptBox["x", "2"]}], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"y", "-", "2"}], ")"}], "2"]}], "\[Equal]", "4"}]}]}]], "Text",\

 CellChangeTimes->{{3.758550933658656*^9, 3.758550934617128*^9}, {
   3.758550965426166*^9, 3.758551064007763*^9}, 3.75855143741861*^9, {
   3.758552603210032*^9, 3.758552604081077*^9}, {3.758638824429943*^9, 
   3.758638827099077*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell["I think I should have a look at the domain.", "Text",
 CellChangeTimes->{{3.758657484078706*^9, 3.7586574926450653`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"y", "/.", "\[VeryThinSpace]", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "2"], "+", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"y", "-", "2"}], "2"], ")"}], "2"]}], "\[Equal]", "1"}], 
     "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Re\>\"", ",", "\"\<Im\>\""}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.75865783551061*^9, 3.75865786509723*^9}, {
  3.758657896203537*^9, 3.75865791278362*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
+wdguz0n5ufxx4TJ6KqJXNF+HD1Rm4cyf/JCxaLwp5kg6C2G65JO+xIFGdat
5BY/6kLphjd+e0gEPftdmlJ3I/IzD629ihd5fU1VP1eJG6YDsjvaaj1In/2h
kZ3Jm6G7642560tXEkh3nZ0jZgNGrXoizyTdJXG7jaPnnWjhTriqOd/Yk2Rp
btGK8llFfv6opWIjC9L50Pai2vUhxbPljFcuXTchPioNrAqUBsWi+FrW6lJV
4s/6xDgo863imYS1omRRKVhfiqKLtHJW9H5lPpQ/rwceNtdqjnulijszTm9S
sjdHqmEMp41bt6ILg1WztpQtlObHNxncnFQcfCed4HfgNlwqrzebsi4raprS
2H3Z7wLWEQ75gmsMKGKvUpzadx8iss28tRpsiOg+6xPC/gA0nJFtjtc4UfNe
3EosyBsdUVbLfjd2YF0Qh1bFxkfgzyzt5HjOC5lrC0eN/fyQ4flqvbCJAGzk
O/mWGAMh5GAe/iBQGMkcJUxh3kEoNH/0RWDnf7C+3TjP5fkEEvQ5I48YDyLx
fH5X1moIhq1FNc0eSwP5+xvcFMJQmn259ly0LNr3vig/5xqON4Ylsz/b5cH+
1zOtf/EZhnSqQp3nj+Ot+Z+4bJnnaCqVfUl6T+J0g3mo+90oOLJIhv7qPwW3
VBWXbbMxMGMeDnh2+By2bS20GpCMxeY23UYZr/PI9ZAwybGPA1NogXfOiBpm
3zILCC68RNdVjeVImosQ9aIyF91OQP87p+Ny6bowlONgSudPhJlKq5a7vj4C
Z6QZouoTwa3VuO4qpwEoZu5rDiLJcF4bDt3+/jJylFj/CHWmIJLRLS9Oywx9
yxJTnP6pyM4R89W6dhWceVoU2iNvYPxUU93I7Rpu74sZ/vXkLRRWuxQtS69D
hlG0M1gpA3UfUmv8X1viZqFau+tUBrbvojcYnbZC1B371puxmRg4OSYUf8oG
7jMdw3yuWYi75i8SQGOHbjOBvr/N2XhPc1uUa9gBr5TetWb65YJuo9CNL9dd
8In3lI5gTy7ECsO0T525h8bllqYY6TxwPi3c6ybmCvq8pR9+fXnYl3r85cqa
G67tO1FjpvABvyk//JNGPCDM+KOIe+ojBGqDOXK2PsSx36YIUv4EI0Mddr+E
h9Av/POFPvYTTPN0Ko5K+sD/zraCqXMFuHcuVeiA3iOMD17Jq078DNpjm2+a
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
RsXv4+na+gVr+B83JyF0
     "]], LineBox[CompressedData["
1:eJwV13c8Ve8fAHDXdl33aEmSUKQoSYTi+SgtIZGR1Leski2UkZBCZSSUkTLK
DBkN5BFSZCUr2auL615KisLv/P46r/frPOd1zus5z2dJWbkY2XJycHD4UTg4
/n99mdSbFLvMxhONLW3aWzng7o5ZeadFNjaYUU3KsuOAVD7b36k/2JjGkmH2
jHPA64H2qq7vbPyCf+SCvgYFmt4ciqD3srHWVvbPCW8KjES/OqXTysZOZsJL
ygUUWHCQk/H5wMYP39jzmQxQQPhg/HR+ORvvHbHko9A4Yd9vn5D1GWyc9e3q
ifenOMGoZdLoRBIb+266u13gGidczLKUCLnHxhvk3F5fSOaE2NNaJT982diE
byHGp4cTcnfnB8i5sXFtUcqBqHlOqBKS1Dtrx8ZjelFOt9dwAQtThusM2fij
rP6qJF0uOLT5vXCKDBt/nf2W5pTDBZaLKj0dYmwsaMO1X6CKC9w7nmXQhNnY
fDvVSrSLC5JDQ7WuLrCwzvZ7W0o4uWGOeczxeDML156LWSg24gZabfmemzUs
fDHh8dp3ttwg/Xg7V9kbFs74JxjheZUbDE4QCbLpLMzFSBZnJHFDRknrh8Wr
5Fd97/hrOsQN5v6nNuVKs/DVww7/3p7nAcFKtZoEURbWfXLe+p0LD1RQRG3D
6CwcsZRln3SNB2RudjyzW5jCfYsaHH0PeeDHHeNtUq1T+Ow3/eXcRh64G6+v
FBc4hZcKaj33K/FCZbE2ChhgYqt/G6cnR3jh8pzkgHMH6S/B845sXpBV4wg8
08DETBPRqO55Xggvq6jSeM3EF98LvfWj84FF1d5DvyKZ+E/73tlRVT6YbVbR
v4SY+AIFYu8E84Hc5NbTJ5MnsY2a7Nba1fxQEtx6/9L9SRxkYUNZKcEP+yV8
GwJCJ/F4yZX441v4wfJEg+Zz90k8xvHz4xN1foh65SzJe5j0bcqWJ2f4Yf5G
0egr9gT+aguFe9L4oV5c03W99gQu3XYs4b2MAJi9HM1UUp3APfsktWK3C8DI
8YjBw/ITmCnEy3taRQCWgvqNPNZMYPEuMds6HQHYNR6o0jg+jtVuFCwqWwtA
Qkntgn/0OLbqFVU6mSwADgaGN4eGGXhp66TkMToVlnR3tsl/ZWCmXnoRYzUV
og8Lb/JsYuAX1qLrr6+nQim0VPK9YeC4rMnHcXJU4Fc2/KcQwcCK9Wf/ue2n
wrO1hpevqDHwQvpvrVEPKgwNHD9PC/+OKwV+HiLaqWBx+bimquoY1pJLiQwP
FoQ7XY/OqymM4Y+qhtmWYYJQrsm8qSE9hl+Iv0rcEiEIEvxhTVr0MWzJp7/2
xQNBGEyq+u/w2CjuaNy5HJ0tCBdrVYLM40bxayWzjrhmQfBaJ/7BZ24E746T
8KgQocF9zDDEL4dx29EeSccEGiT7cQiN5wxjJVGqZEYyDTLVRetWpgxjjsj2
832pNKgoOqxtd2cY66kolWvn0ICR8UxJ6BzpqvRdPWU00IqyWXlaYBh7aC9o
W/fQYPzcwJe500PYp03m4GcxIUCcXaY7KIM4WcUsuTVcCMa2nGUI/x7AL1LW
XV2MEoII/RHvn8wBbHTPv1AmRgj6Hk4nve4awBXIz9A5QQj8FQWG9xcMYP8f
2dYDz4Sg3FLDxey/Adyz2OZyFAuBh7M6QfHtx3Fn7jdqsITgUleV69OfPTjl
yfvzbB06OH05X/2mtwc3mI/llhymg2sTh0jThx5caCxz0luXDldqtMrmEnuw
28r1b/8cp0NwQSnPEZ0eTDOW2NRlQSfjvTBhIuYbXrd7MlTMlQ5f1FJrFFW7
8RpFlZBXD+nQoay9VkeyG3MPbt6gkEiH7h0D9ubUbjwd7bE3+REdBjZLEIF9
X7HuJRkR31Q6sIQTTrXe+ooX+GZt1+bSgX/8HsujswvnwHfvbxV02BcfKFp6
tRNr1O21jh+ig75F5IPd1p34dtMfzVcjdDi7/pFIvn4nPlru3N06Rofrj16v
TpfuxC95jCy5JulQlcIWjmjowHcOqCcf/UmHw9lnBKwkO3DH5xffHbgIMCpT
XxD42IbF07zyhKQJsPY77B1c2IYLRGN9RzcR4KFp8mcpqQ2fthSSLZMhIBa7
zv10a8MB8ptFzm0loKs640fv+jYszW10NWonAWca1ky+cPmCL21unbyjRcDF
3plvp9a2Yn5Hi7Af5gQUufTwHOJqxcIrogwdLQhYonxQ3MX+jP3T7xwfOU1A
jGzSDeqHz3hEvH+u6SwBlS6H5Mu8PuOorFXzETYEiHIm+oh3tGDdlt/qpS4E
ROmH7qrY2oyT74n+rgwmQNb9zK04SjNmiug+5bxFQHncrm7nr0244J5Ywv4Q
Ahj9PYEbw5qwRJ/2qbdhBIC70ucARiNOz96snhxBwHRct8uBjAb8yLO+S+gh
AccHFJ5/3FyPr4ldg4wsAvRstpxD83XYSClg5mM2AboMqVUvG+twinVzFiOH
AJ1pEe80rzqsdYVrl3QeAWoclIP+Hz9i1RKH3GuFBEhLtvcoO37AKYfepnWU
ErAxvTkyGz5gfaGQha4yAsTl6vdLrfmAaX+Xz34tJ2DtTpxJr6jFd9k+Rm0V
BNAgy2OcqMWuGnVThVUE/PrvGu1xUQ3eDzU6q+oJ+DF8Ba8JrcHDqUYpc6Sn
L7i737WswScLpVZ0fSJgwuVClzdPDT6XWi8f20hA3/UT6SfNqrGuhJjpnxYC
Pj6W2Uf9+w5vPllZZdVJgCpO7JwIrsCHOnR+1Q0RIEbjHk9WrsBRn7acsB0m
YNHcccFo6C2urFLiWyZd82PfhjL0Fss5egdtHyXAWLbP6s5CGZ5ymy71+k6A
a7gkS971DV5ZFmhROknAye7Q5X6JN/jv5xXOe5kE7NkyIxzT+BqfeXmzr5T0
UuU75X/bXmPzmJKO4ikC7s5aeTeMvsT/xM7LxbIJyDr9lNvpdDG+4BjhyveT
vJ8pJCJFLcY179OsnUm7/vLc0v66CCvafCn5Qlot8pCupkgRNhJYvBI/S0Bt
1fdIoc8vsF9ihdeKOQKyCcOUd9dfYIY5y9aBdLjl60LPHS/wQWPpkmrSJ+dC
23vvFOAlc04Pl9/k88YnVS3D87DekKdX0R9y/dTmUzUTzzGhl3yRY55cH/LL
V+HIcwyRMWXHSA+Xxr37x5mLjccOBveS5pD+qvfoahbueiORNrVAwIeyLBee
jkzcYyyevP0vAREmPtFOypk43+TeggNp8bD1XZqsZ9h0SKFrmLT69BnrPut0
fDZmg1zlPwIcS9PHr9Sk4cfNGrt/kE4OnnRZIZOGrW+6F0ovEsC1zttPZywF
5/nZ81wnrTqMOfsOpeCazAPd2aQvPucNu5LxBD/Z7CzVTjr+hpy8yedkfKN/
hFdmifwfa1/uCY1+hNNtjzzVJW2Ve0CnzDgJ99dte+lMWqH97BmpjngcXR6r
WEj6nj3T/uSDh7hpWunhZ9Jzi95eIeYPcJ2Bx2U26UrZ2Mip7hhc2ykUJLtM
gEyZdJJk0n3MKeBZgkjfPl6QaXwmGge7pp42I80e1iy5JXEPs9hJHk6kM6bj
blzGkXjrr0scQaRd1xUmfdUOx84+K5djSGvsbyxBNbexMW+86zPS3A6MpqeH
QvGnHC6Tl6Sb7nMxBOtu4j1Us9wa0g/LJSjux25gW/0HXp9JW42qi3U1BuDE
7R+LekibiWfb+T3xw/FspvUY6QmngYdHnl7BT2z4Q1ik/bHIp9XZ7thjQnzD
L9LS0gkL7844YBsHBdkF0kff8/5nceE8PnRWLXWRdGVKo9Cnan3sX6t9b5n0
kbTlymfyu9GS8tGf/3dwqt3317/N0ZFqg49LpNfnHSJ03O2Q4wYj4X+kfXic
2k12uyLqVaNPv0mPFammhSl6Ir1Yg/kZ0sZWHG5vt/kgZrVOwsT/3ydcrzUj
cx3J9+/KGyQd13/0VrRwEGoxEFHpJN3wcoeTQkQwkuFj7vhEmjNi1clawRD0
I7Qg8S1pNds/GufCwpDX4H++eaRd9vVKLfDeRXbZvxofkX62qoo/JjgCDQk4
3b9D2tnzy2+RwCjkWlj56QrpdL3XfQVL0SjdbjTmGGn0elvrNc0YRI3NklEm
3b3p0Xtdv1g0dWLn1nWkhf8G5o7MP0AW1XahA+R5ybGbffxCLR7Z/OMZeUf6
UKvdff8rCai54VBhCulrWcd8RH8loQDtkGeWpEXXVDiNKiejoHr3hj2kiwN2
ni90f4wOF3farCD9K4e6WfbPE9TmSTbB5HmXv8GmVnqmoYmWB+ZU0pZ7V/E/
l05HIrYqLW1kPN39qcqT0JyO4p5ev/yINMvaf/ny1mdoIKhx31bShTpCs1t6
M1HFk5Vd28j4HP63c2b17SzUNtubPUbG9+qSkyzKnmwkLp+b+YS0p0wS41tU
DoIj05sJ0mq88r2ROnkoul1vQweZT+wrDLr9ZvLQvJb9wRukE7zcO+2T85Ei
z8sHO0j7/+xhSPkVoEYNh9LrZD7qt948/Lf9BQo4ODErSOarVJ2izvywYuTD
PCbV8IOAUsmDprIDxShFxaT3NOkv/zraklRL0GtJ53fjM2R8lCx8DhsuQQr9
ihQO0rYy+xusNV+hFTs8LUTIfCvH+7ly7cwbpOzK1J+YIOvnkBWKOFyK0rPY
XpakT1XMvuVOLkW6WervG8bJ+PUSLZvRLUMvTbtaMhgEMMf+K/mUXo4qWXHJ
h8cIyP/AyrpujlFQauTI9kGyHp0VuqaYhVHX28ym8AEC6HPyhv3zGEG0mSiz
n8xX0bt9H+tXooWlvLq0PrJfqHSTWmZVotJ9RcnL3wg4sYHpVKFUhUqnKocv
dpD1/qKvmYhFFSpwKsvLaycgoJiq7RxUheQy2e0/2ggoOLZ1tcSXKsSxb72a
1xfyfT52pdc8qtEjq3kde7Ie1ncM8Gq+qkFs/RZdDrKeWkm7Tsf01yCjkZZy
+ToC5p2WvzL53iMah3SIyUdyf3gknieZv0dHH2RsSq8lIET5tPG/+ffIPajc
Y3s12R9EtT8u2/cB+bC51KfJev/2aL2aRlUdKld309idS54nld3VP6fqkOGD
3g+ryH5CQjpZ//m6epT+/IT5DNl/+C+4WUm61SOttNiAZxnk/uesu8sr+Qnt
Ntw79CeVrL80+/7Waw1otcn1YM148vub+W45qDcj98Zwxn6yP1oocxOWsW1G
pdlzrMEgArZlfkvoi2pGQ6b1DP9AAu4E5OefYDSj0aFrxYX+ZDw/zGEmHmtB
KrouSRRvsj4cNRYJWmhBX+xGtu9zImAyO9XewLwVDUZGikmeJPN790XO906t
6KLxzbXBRmR9E1RM3HujFS1JzfCNGRIg4lDWIJfXijQ/RlWm6ROwX75NkYv7
C3J/4uvPe5jMvzk8c6/yv6A4dlbsRXVyv3IvBknxtaOFs/nqCeJkP9azY/1D
8Xa0y01Kv0yMAAvaryL6rnZUfpui2S1K5iPHwNG/lu1ow76uvBVryHhRSDjS
UdiOasIVauyEyH4o9xP9ztkO5CHg8jdzkQ6Pnu9InC3pRIO7KTdCeujgTBMN
m6/rRBGrDK6HdNNBy4FyZam3E12wLbx1s4sOfXJtRvy8XSjua3SRbxsdJNO9
qeKmXeiZ6lYXwwY6pCfUeB+Y60JexnolCWV0yA2xMI9W7UahM41eueR8UH7+
1pqdr3rQZoFS7ig9OnwV7v0y2tCDfPv2yrUfpcMcVo5OHOpB1D0zJWvJ+WSn
xCCdj96LduYuCcRq0yGtey9/n00vqsX6l1xV6XDbeGbhzso+dC7JpCBzIx3M
D1oOfHfqR8I7Ho2smhYCn9Xx7cdXDqKTG2xPuYQKgQOXab+b+CDatXp6eu9N
IbD8sXL8vuwgCqJ19PMEkfNZy91/nRqD6Nl60fJ7vkLAfTdg0znrQXSh8Kpa
mDM5n3FddHMtHkRx7zVu/jIWgrQfqkL3TIdQ+5ZtzcXiQtDQ0qbTmjCMSt/l
Gh97SoOXlhZq79KHEcMgR941hQYpjH75grxhpPPn1OC9RzTw4phcGVE1jI78
Ven+FEsDyZ2UwaMTwyg3LDl/3S0aeEZuv/ZOfQRNDUTuF7OjgYTBrZKCrhGk
tOx45eEmGvB3C2Y9HhpBEcYXZow20uCn7b2kCOYIUs3v6RdYT4OP15JuOHKM
ImH39YJOK2lw+XnhCTm5UWTrsFeRn0Lep/VPPb4yiswFlJQjegXB7dMe2UiR
MfRk+Jlp2X1BCFr+GWgqNYYU+Js+xJDzdrRyQe8GhTGkt6/2gj05jxcnysXm
ao+hd8EyYtzXBeGPwzruescxlLwlPGLJXhD8aX8HuavH0Nx9hQwKEoTb+hWP
fFy+I7/q652Co1RIDPSZ1/b5jqwJZ7pmPxVyS1RNBG5+RwaUDX4Xv1KhcUM+
7WHCd+TcotHxvJEKwqzHviXvvyObY8evzpRQ4UFE4Knp9QwkGv0rxfgmFdKb
ddbYfWSg1XF8GSobqSCaGJ3o0cpAQQWKadR1VLhjNyB1o4eBKhfnTb6upIL7
ou+OJ9MMZF7bXGDNSwVt+aLD3aLjiEd3aHLblAD03ZLyMbAfR3M6nvZX3wiA
qNZSnyp1AnXwT1Xm6gnAXQE924OrJ1Btxhmv5IMCsNwWP2ksMYG6O6ZpoVoC
MOag8sd11wSq4UHR+3cKQEm844ociwnEfNfVY7RKAIx+dR/YmDOBvp9XPtbU
yQ93c19l8ulNouQJQvr2KX6Qldz3gGU6iZ4k2txNMOSHyvuVN9vPT6ICP8Wy
R4f54adPnVXalUkUECL02leFHyyOfhNHaZMox8x61z1hftg6thTltTCJtMd2
X5+r5oOqUzeun+FhIrmAjV7ipXxg2cjnrCPMRLzci2ylAj6IKhY+tlKWicwz
jS9tS+KDP0HSPHknmKgi0Ipb9zIf1G485D2ayUQjlWdtKRJ8cO5+/YWGIiay
5zaVXlzJBwu8x02LKpgovMzBapiPD3awzJQD25goL3W8yWmGF2LL7afEOaZQ
SnP2YedqXrA5FX7+pNkU8mX4xeRb8cJSwwrDvVZTiGLq2CBmygsPIU5L2mkK
eYTLb7h4lBc+bXm8fjpoCjEHO2SfKfLCrrmC9jt5U+jcsuZw/AIPUO63Ha3m
YaHU+MbbkWE8sPRowmqGYCHqLcGz+b48sJDJ4bdRjIUu2YnOPnPigdkKhTzf
HSzE/Sr+kugJHhibCF6524yFdF1XRPeu4YHhXwnyVudZSN01nBnDywMDHC90
ohxYKPpwALfob274KtLrxbzOQm3Dm6K8O7mhYb/Kt/RMFiq7ut3CIZYb6vSP
zbYWshBdkBa5P5gbas3PC1HestBG8+aqz+7cgJ3D0ZnPLFQ6F+lCPc4NhQmj
aWsWWEih6Ny1y1zckP/0b/kBbjY60J4dm8DmgtyCFR1udDYCe5uvJ79xwdNa
Tf4maTZ6hWfL7V5wwcMfsY63jrGR14pLD/nNuCB2MedmsQkbGQRZmLZpcUE0
f1Xy0H9sdPySSEevDBfckWC1aHmwUQ2XuZ7lDCeEbuWecPRnI5tbL6+mtHNC
8G4xrsRQNrrXJ9tV9ZoT/HUPqfxOYiMPJTX/eR9O8DGxNJDJYCPDnlm79FOc
cOWc+wXjF2w0I6GjbaDKCR4OoQGBZWzU0jC6M0qYE1y9kuPz37NRuEK32bfv
FHAKLC7sbWajudxUxtkyCly6W/9JsJuNdlVzh3wJo4Ddg4ER9RE2Gp85MLNs
SAHr1LnFCyw26qj8l6dPo8C557S1cX/YSH/Q01stjwOeGjSffrnMRsR/W02M
pTngf5pTgAs=
     "]]}},
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Re\"", TraditionalForm], 
    FormBox["\"Im\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-2, 2}, {0., 3.9999999052729427`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7586578670333014`*^9, {3.7586578983733873`*^9, 3.758657914058778*^9}, 
   3.758670065775847*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "[", "z_", "]"}], "=", 
  FractionBox["1", 
   RowBox[{
    SuperscriptBox["z", "2"], "+", "4"}]]}]], "Input",
 CellChangeTimes->{{3.75864897148385*^9, 3.758648980436192*^9}, {
  3.758649039442212*^9, 3.758649040593862*^9}, {3.758669372695427*^9, 
  3.7586693731584682`*^9}}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"4", "+", 
   SuperscriptBox["z", "2"]}]]], "Output",
 CellChangeTimes->{3.758648982521632*^9, 3.75864904143915*^9, 
  3.758649076577035*^9, 3.75866937422875*^9, 3.758670070472912*^9, 
  3.7586708171730556`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["z", "2"], "+", "4"}], "\[Equal]", "0"}], ",", "z"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.758669015634718*^9, 3.758669035257028*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", 
     RowBox[{"2", " ", "\[ImaginaryI]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.758669036029418*^9, 3.758669378462932*^9, 
  3.7586700742019672`*^9}]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", "0"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "=2 \[ImaginaryI] lies in the domain, whereas ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", "0"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "=-2 \[ImaginaryI] does not. Using Cauchy\[CloseCurlyQuote]s Integral \
Formula, \n",
 Cell[BoxData[
  RowBox[{
   RowBox[{"g", "[", "z", "]"}], "=", 
   StyleBox[
    RowBox[{
     FractionBox["1", 
      RowBox[{
       SuperscriptBox["z", "2"], "+", "4"}]], "=", 
     RowBox[{
      FractionBox[
       RowBox[{"f", "[", "z", "]"}], 
       RowBox[{"z", "-", 
        SubscriptBox["z", "0"]}]], "=", 
      FractionBox[
       RowBox[{"f", "[", "z", "]"}], 
       RowBox[{"z", "-", 
        RowBox[{"2", "\[ImaginaryI]"}]}]]}]}],
    FontSize->21]}]], "Input",
  CellChangeTimes->{{3.758669325733857*^9, 3.758669329503748*^9}, {
   3.758669409182899*^9, 3.758669457662517*^9}}]
}], "Text",
 CellChangeTimes->{{3.758669128943063*^9, 3.758669169908827*^9}, {
  3.7586693011707983`*^9, 3.758669318823798*^9}, {3.758669466429069*^9, 
  3.758669468102982*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{
      SuperscriptBox["z", "2"], "+", "4"}]], "==", 
    FractionBox[
     RowBox[{"f", "[", "z", "]"}], 
     RowBox[{"z", "-", 
      RowBox[{"2", "\[ImaginaryI]"}]}]]}], ",", 
   RowBox[{"f", "[", "z", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.758669596953521*^9, 3.758669650749915*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"f", "[", "z", "]"}], "\[Rule]", 
    FractionBox["1", 
     RowBox[{
      RowBox[{"2", " ", "\[ImaginaryI]"}], "+", "z"}]]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7586696518689404`*^9, 3.758670083941593*^9}]
}, Open  ]],

Cell["and, initializing", "Text",
 CellChangeTimes->{{3.7586696868376627`*^9, 3.758669711259758*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "z_", "]"}], "=", 
  FractionBox["1", 
   RowBox[{
    RowBox[{"2", " ", "\[ImaginaryI]"}], "+", "z"}]]}]], "Input",
 CellChangeTimes->{
  3.75866972118073*^9, {3.7586701640478573`*^9, 3.758670165661832*^9}}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{
   RowBox[{"2", " ", "\[ImaginaryI]"}], "+", "z"}]]], "Output",
 CellChangeTimes->{3.758669723773621*^9, 3.758670088416492*^9, 
  3.758670168024872*^9}]
}, Open  ]],

Cell[TextData[{
 "so that I can calculate ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "[", 
    SubscriptBox["z", "0"], "]"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ","
}], "Text",
 CellChangeTimes->{{3.7586697290430098`*^9, 3.758669729810726*^9}, {
  3.758670291322728*^9, 3.758670307481224*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"2", " ", "\[ImaginaryI]"}], " ", "]"}]], "Input",
 CellChangeTimes->{{3.758669737647574*^9, 3.758669749748358*^9}, 
   3.758669859056343*^9, {3.75867003086771*^9, 3.758670050850835*^9}, {
   3.758670119592885*^9, 3.758670120754129*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["\[ImaginaryI]", "4"]}]], "Output",
 CellChangeTimes->{
  3.758669750558384*^9, {3.758669837221148*^9, 3.758669860190083*^9}, {
   3.7586700324965143`*^9, 3.758670051493074*^9}, 3.7586701224738092`*^9, 
   3.758670172830536*^9}]
}, Open  ]],

Cell["resulting in the rhs of Cauchy\[CloseCurlyQuote]s Integral Formula,", \
"Text",
 CellChangeTimes->{{3.75867019834853*^9, 3.758670200038085*^9}, {
  3.758670315832755*^9, 3.758670324392729*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", " ", "\[Pi]", " ", "\[ImaginaryI]", 
  RowBox[{"(", 
   RowBox[{"-", 
    FractionBox["\[ImaginaryI]", "4"]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.758670208738764*^9, 3.7586702272439327`*^9}}],

Cell[BoxData[
 FractionBox["\[Pi]", "2"]], "Output",
 CellChangeTimes->{3.758670229139392*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["\<\
Matching the answer in the text. All very well, but I didn\[CloseCurlyQuote]t \
yet check the analyticity of g[x].\
\>", "Text",
 CellChangeTimes->{{3.75867035531166*^9, 3.758670391790678*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{
   RowBox[{"g", "[", "z", "]"}], "/.", 
   RowBox[{"z", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{"x", "+", 
      RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.758648989608305*^9, 3.758649025114601*^9}, {
  3.758670407527791*^9, 3.758670407718339*^9}}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"4", "+", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"x", "+", 
      RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], "2"]}]]], "Output",
 CellChangeTimes->{{3.7586490143570232`*^9, 3.758649044706728*^9}, 
   3.758649079661484*^9, 3.758670409249447*^9, 3.758670734839541*^9, 
   3.758670823946795*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComplexExpand", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.7586490555512657`*^9, 3.758649061586432*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["4", 
   RowBox[{
    RowBox[{"4", " ", 
     SuperscriptBox["x", "2"], " ", 
     SuperscriptBox["y", "2"]}], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"4", "+", 
       SuperscriptBox["x", "2"], "-", 
       SuperscriptBox["y", "2"]}], ")"}], "2"]}]], "+", 
  FractionBox[
   SuperscriptBox["x", "2"], 
   RowBox[{
    RowBox[{"4", " ", 
     SuperscriptBox["x", "2"], " ", 
     SuperscriptBox["y", "2"]}], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"4", "+", 
       SuperscriptBox["x", "2"], "-", 
       SuperscriptBox["y", "2"]}], ")"}], "2"]}]], "-", 
  FractionBox[
   RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", "y"}], 
   RowBox[{
    RowBox[{"4", " ", 
     SuperscriptBox["x", "2"], " ", 
     SuperscriptBox["y", "2"]}], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"4", "+", 
       SuperscriptBox["x", "2"], "-", 
       SuperscriptBox["y", "2"]}], ")"}], "2"]}]], "-", 
  FractionBox[
   SuperscriptBox["y", "2"], 
   RowBox[{
    RowBox[{"4", " ", 
     SuperscriptBox["x", "2"], " ", 
     SuperscriptBox["y", "2"]}], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"4", "+", 
       SuperscriptBox["x", "2"], "-", 
       SuperscriptBox["y", "2"]}], ")"}], "2"]}]]}]], "Output",
 CellChangeTimes->{{3.7586490626218967`*^9, 3.758649084094391*^9}, 
   3.758670414696396*^9, 3.7586707392608967`*^9, 3.758670828723283*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"u", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{
   FractionBox["4", 
    RowBox[{
     RowBox[{"4", " ", 
      SuperscriptBox["x", "2"], " ", 
      SuperscriptBox["y", "2"]}], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"4", "+", 
        SuperscriptBox["x", "2"], "-", 
        SuperscriptBox["y", "2"]}], ")"}], "2"]}]], "+", 
   FractionBox[
    SuperscriptBox["x", "2"], 
    RowBox[{
     RowBox[{"4", " ", 
      SuperscriptBox["x", "2"], " ", 
      SuperscriptBox["y", "2"]}], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"4", "+", 
        SuperscriptBox["x", "2"], "-", 
        SuperscriptBox["y", "2"]}], ")"}], "2"]}]], "-", 
   FractionBox[
    SuperscriptBox["y", "2"], 
    RowBox[{
     RowBox[{"4", " ", 
      SuperscriptBox["x", "2"], " ", 
      SuperscriptBox["y", "2"]}], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"4", "+", 
        SuperscriptBox["x", "2"], "-", 
        SuperscriptBox["y", "2"]}], ")"}], "2"]}]]}]}]], "Input",
 CellChangeTimes->{{3.7586705053786373`*^9, 3.758670529476596*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["4", 
   RowBox[{
    RowBox[{"4", " ", 
     SuperscriptBox["x", "2"], " ", 
     SuperscriptBox["y", "2"]}], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"4", "+", 
       SuperscriptBox["x", "2"], "-", 
       SuperscriptBox["y", "2"]}], ")"}], "2"]}]], "+", 
  FractionBox[
   SuperscriptBox["x", "2"], 
   RowBox[{
    RowBox[{"4", " ", 
     SuperscriptBox["x", "2"], " ", 
     SuperscriptBox["y", "2"]}], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"4", "+", 
       SuperscriptBox["x", "2"], "-", 
       SuperscriptBox["y", "2"]}], ")"}], "2"]}]], "-", 
  FractionBox[
   SuperscriptBox["y", "2"], 
   RowBox[{
    RowBox[{"4", " ", 
     SuperscriptBox["x", "2"], " ", 
     SuperscriptBox["y", "2"]}], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"4", "+", 
       SuperscriptBox["x", "2"], "-", 
       SuperscriptBox["y", "2"]}], ")"}], "2"]}]]}]], "Output",
 CellChangeTimes->{3.758670535311626*^9, 3.758670747191053*^9, 
  3.75867084471043*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"v", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{"-", 
   FractionBox[
    RowBox[{"2", " ", "x", " ", "y"}], 
    RowBox[{
     RowBox[{"4", " ", 
      SuperscriptBox["x", "2"], " ", 
      SuperscriptBox["y", "2"]}], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"4", "+", 
        SuperscriptBox["x", "2"], "-", 
        SuperscriptBox["y", "2"]}], ")"}], "2"]}]]}]}]], "Input",
 CellChangeTimes->{{3.758670538946566*^9, 3.7586705559488573`*^9}, {
  3.758670692734429*^9, 3.75867069412568*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"2", " ", "x", " ", "y"}], 
   RowBox[{
    RowBox[{"4", " ", 
     SuperscriptBox["x", "2"], " ", 
     SuperscriptBox["y", "2"]}], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"4", "+", 
       SuperscriptBox["x", "2"], "-", 
       SuperscriptBox["y", "2"]}], ")"}], "2"]}]]}]], "Output",
 CellChangeTimes->{3.7586705572990723`*^9, 3.758670696559084*^9, 
  3.758670755575512*^9, 3.758670850771121*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"u", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", "x"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7586705663859997`*^9, 3.7586705757769003`*^9}, 
   3.758671119145864*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.7586710846722527`*^9, 3.758671088849918*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"-", "2"}], " ", "x", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"4", "+", 
       SuperscriptBox["x", "2"]}], ")"}], "2"]}], "+", 
   RowBox[{"4", " ", "x", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "4"}], "+", 
      SuperscriptBox["x", "2"]}], ")"}], " ", 
    SuperscriptBox["y", "2"]}], "+", 
   RowBox[{"6", " ", "x", " ", 
    SuperscriptBox["y", "4"]}]}], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["x", "4"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "4"}], "+", 
        SuperscriptBox["y", "2"]}], ")"}], "2"], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["x", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"4", "+", 
        SuperscriptBox["y", "2"]}], ")"}]}]}], ")"}], "2"]]], "Output",
 CellChangeTimes->{3.7586710903072166`*^9},
 Background->RGBColor[0.9, 1, 1]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"v", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", "y"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.75867059235807*^9, 3.758670607384021*^9}, 
   3.758671123856154*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.758671099510257*^9, 3.7586711039619923`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"-", "2"}], " ", "x", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"4", "+", 
       SuperscriptBox["x", "2"]}], ")"}], "2"]}], "+", 
   RowBox[{"4", " ", "x", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "4"}], "+", 
      SuperscriptBox["x", "2"]}], ")"}], " ", 
    SuperscriptBox["y", "2"]}], "+", 
   RowBox[{"6", " ", "x", " ", 
    SuperscriptBox["y", "4"]}]}], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["x", "4"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "4"}], "+", 
        SuperscriptBox["y", "2"]}], ")"}], "2"], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["x", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"4", "+", 
        SuperscriptBox["y", "2"]}], ")"}]}]}], ")"}], "2"]]], "Output",
 CellChangeTimes->{3.758671104696671*^9},
 Background->RGBColor[0.9, 1, 1]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"v", "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", "x"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7586711555294237`*^9, 3.75867117042207*^9}, {
  3.758671228738872*^9, 3.758671233492131*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.758671174314082*^9, 3.7586711832551813`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", "y", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3"}], " ", 
      SuperscriptBox["x", "4"]}], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "4"}], "+", 
        SuperscriptBox["y", "2"]}], ")"}], "2"], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox["x", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"4", "+", 
        SuperscriptBox["y", "2"]}], ")"}]}]}], ")"}]}], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["x", "4"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "4"}], "+", 
        SuperscriptBox["y", "2"]}], ")"}], "2"], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["x", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"4", "+", 
        SuperscriptBox["y", "2"]}], ")"}]}]}], ")"}], "2"]]], "Output",
 CellChangeTimes->{3.7586711840498238`*^9, 3.758671237642456*^9},
 Background->RGBColor[1, 0.925, 0.925]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"u", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", "y"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.75867118756367*^9, 3.758671198245566*^9}, {
  3.75867124287853*^9, 3.7586712474521637`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.758671201978738*^9, 3.758671208534968*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", "y", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3"}], " ", 
      SuperscriptBox["x", "4"]}], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "4"}], "+", 
        SuperscriptBox["y", "2"]}], ")"}], "2"], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox["x", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"4", "+", 
        SuperscriptBox["y", "2"]}], ")"}]}]}], ")"}]}], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["x", "4"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "4"}], "+", 
        SuperscriptBox["y", "2"]}], ")"}], "2"], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["x", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"4", "+", 
        SuperscriptBox["y", "2"]}], ")"}]}]}], ")"}], "2"]]], "Output",
 CellChangeTimes->{3.758671209924378*^9, 3.758671250739478*^9},
 Background->RGBColor[1, 0.925, 0.925]]
}, Open  ]],

Cell["\<\
Thus showing that g[x] is indeed analytic, and that the green cell above is \
valid.\
\>", "Text",
 CellChangeTimes->{{3.758671284243486*^9, 3.758671314929908*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"13.", "  ", 
   RowBox[{
    SubscriptBox["\[ContourIntegral]", "C"], " ", 
    RowBox[{
     FractionBox[
      RowBox[{"z", "+", "2"}], 
      RowBox[{"z", "-", "2"}]], 
     RowBox[{"\[DifferentialD]", "z"}]}]}]}], ",", " ", 
  RowBox[{"C", ":", " ", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{"z", "-", "1"}], "]"}], "\[Equal]", "2"}]}]}]], "Text",
 CellChangeTimes->{{3.7585510740634823`*^9, 3.758551131540969*^9}, 
   3.758551428763015*^9, {3.75855259591448*^9, 3.758552597225172*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell["Again, I will first plot the domain.", "Text",
 CellChangeTimes->{{3.758671537766564*^9, 3.758671546578478*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["ParametricPlot",
   FontWeight->"Bold"], 
  StyleBox["[",
   FontWeight->"Bold"], 
  RowBox[{
   StyleBox[
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", "t", "]"}]}], " ", "+", " ", "1"}], ",", " ", 
      RowBox[{"2", " ", 
       RowBox[{"Sin", "[", "t", "]"}]}]}], " ", "}"}],
    FontWeight->"Bold"], 
   StyleBox[",",
    FontWeight->"Bold"], 
   StyleBox[" ",
    FontWeight->"Bold"], 
   StyleBox[
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", " ", 
      RowBox[{"2", " ", "\[Pi]"}]}], "}"}],
    FontWeight->"Bold"], 
   StyleBox[",",
    FontWeight->"Bold"], 
   RowBox[{
    StyleBox["ImageSize",
     FontWeight->"Bold"], 
    StyleBox["\[Rule]",
     FontWeight->"Bold"], 
    StyleBox[
     RowBox[{
      StyleBox["15",
       FontWeight->"Bold"], "0"}]]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Re\>\"", ",", "\"\<Im\>\""}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], 
  StyleBox["]",
   FontWeight->"Bold"]}]], "Input",
 CellChangeTimes->{{3.7586720062759933`*^9, 3.75867207867447*^9}, {
  3.758672116092177*^9, 3.758672128329094*^9}, {3.758672173761517*^9, 
  3.7586721747766333`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
V97I2RZM9a/hx6vVdKdhtEPVUfg11e/aa/qUm6bhBRs+uGpLotKS3cnx/mlo
vM9nrXaPxN/vdix/npuGDItk983W1Ptno/6qTTOgznQXSrpJYvCxQrkCoxmw
GlgqszGi6r+iwL6tcwaU9avOaxIkjl1Km7edmIEtFwuiwg6TmCJ6y5GPfRbm
/J9IDCqTuCrqSsBBiVmQ/H3129W9VP7euGz+yGwWTpTzrKNvo/oh64Df66FZ
cIu/sd2YlUQLd9ZbHIw5aJL//Tk5g4lT1e8eEyzzwPWXFkBQ+/mmDlO9x3zz
sMfw+UxhAhP3Brjo9u+eB4kOf4HMaGq/X39WMMpiHupeWbedDGAi89Eq1+Tu
efDe6ft+wYqJO5Pu90/WLUALe8Thws1MvGdxpq+zawFij3pmmApS84Z2+P4K
xgLkhT+vmlvDxHBiNu893yIQxFIZL42JKb6d64U0F0HheO6urvFlHJ3d8tgz
dxHMCetcqfxl5FX+VH44bgnOnGxXVDZdRp+fqwY5s5ZgSXyj5rX/lvFS/M8L
ZWVL8F7BsO+F/jK+Lk3ZqDm8BGF/2pNTTyxjluDvBBGZZRBO5O6OlVlGxfPB
ijzRy8A5FW/IwVjCmdL9ggOhTIjNenH//sMljI8Xz5b/xgSns1/3BtxZwudP
fkjZZTFh21X6j283ljAkeO/e+RYmpFqs3lF0YQn/K5P7WChIwly3QLv//iV0
0Xsq6eVDAq1t94fYaWqeFdKIuggsxM3Umxeqbi2i1Narfn4nWAjzn+vPCV5d
RE3LIPny0yxEpX1I0gVq/p31Pu2oZMRC/MhYCMw9tYhqt7I30h+xEAf2pagf
3L6IsUJ5fmOJLMTpM83Pc9sW8OCix28hMVZiQ1H0lgMnFnCNSawo1w5W4hVr
0NybwwsoN9g6NL6HlSCuXHPpll9ArX9ptdkqrIT0wH9Z1qILGNjml3TIgJXY
4Z8zrzA3jzxvVGnp3qzEO6k6fuMv8yimU17xbYGVeK2comXKPo9fNbq861nY
CP54Nk2v+Tk84v2sd46LjRjVOXA4gT6H0qnmxw+uYyPoBWMsfa1zaJyq9/3D
TjbiIXfm+ZUpc1g8b9Iy+R8bIfLK/+zeq3M4e2HfzR+ZbMSnPq4KwV+zuPSD
Ufgqh43gazzZ65I0ixYO+S9MitiIG7rfYCR6FqdE2fax1rIR2Vq7Cr/6zqLX
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
vnvi
     "]]}},
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Re\"", TraditionalForm], 
    FormBox["\"Im\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->150,
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-0.9999997662703457, 3.}, {-1.9999997185624094`, 
   1.999999756548977}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7586720792329607`*^9, {3.758672124037963*^9, 3.758672130060361*^9}, 
   3.758672176242237*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "[", "z_", "]"}], "=", 
  FractionBox[
   RowBox[{"z", "+", "2"}], 
   RowBox[{"z", "-", "2"}]]}]], "Input",
 CellChangeTimes->{{3.758672240050231*^9, 3.758672253095357*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", "+", "z"}], 
  RowBox[{
   RowBox[{"-", "2"}], "+", "z"}]]], "Output",
 CellChangeTimes->{3.7586722553524647`*^9}]
}, Open  ]],

Cell[TextData[{
 "I will adopt the procedure again of assuming that g[x] is analytic in the \
domain, though I may check it later. The problem point is ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", "0"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "=(2,0). It seems straightforward to assign"
}], "Text",
 CellChangeTimes->{{3.75867222015936*^9, 3.7586722793960114`*^9}, {
  3.7586723138427477`*^9, 3.758672363953285*^9}, {3.758672416145706*^9, 
  3.758672426423667*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "z_", "]"}], "=", 
  RowBox[{"z", "+", "2"}]}]], "Input",
 CellChangeTimes->{{3.758672430162314*^9, 3.758672435991601*^9}, {
  3.7586724941501913`*^9, 3.758672497061425*^9}}],

Cell[BoxData[
 RowBox[{"2", "+", "z"}]], "Output",
 CellChangeTimes->{3.758672504993616*^9}]
}, Open  ]],

Cell["and", "Text",
 CellChangeTimes->{{3.758672522756439*^9, 3.758672522988566*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "2", "]"}]], "Input",
 CellChangeTimes->{{3.758672527496541*^9, 3.758672538901103*^9}}],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.758672539494837*^9}]
}, Open  ]],

Cell["So that assembling the Cauchy Integral Formula, I get", "Text",
 CellChangeTimes->{{3.7586725787233553`*^9, 3.758672594090172*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", " ", "\[Pi]", " ", "\[ImaginaryI]", " ", 
  RowBox[{"(", "4", ")"}]}]], "Input",
 CellChangeTimes->{{3.758672602366899*^9, 3.758672616962117*^9}}],

Cell[BoxData[
 RowBox[{"8", " ", "\[ImaginaryI]", " ", "\[Pi]"}]], "Output",
 CellChangeTimes->{3.758672618669018*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["\<\
which matches the answer in the text. As for the question of analyticity,\
\>", "Text",
 CellChangeTimes->{{3.758672658280238*^9, 3.758672675463954*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{
   RowBox[{"g", "[", "z", "]"}], "/.", 
   RowBox[{"z", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{"x", "+", 
      RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7586727286325293`*^9, 3.7586727592616796`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", "+", "x", "+", 
   RowBox[{"\[ImaginaryI]", " ", "y"}]}], 
  RowBox[{
   RowBox[{"-", "2"}], "+", "x", "+", 
   RowBox[{"\[ImaginaryI]", " ", "y"}]}]]], "Output",
 CellChangeTimes->{3.7586727611775293`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComplexExpand", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.758672766503406*^9, 3.7586727717438173`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["4", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
     SuperscriptBox["y", "2"]}]]}], "+", 
  FractionBox[
   SuperscriptBox["x", "2"], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    SuperscriptBox["y", "2"]}]], "-", 
  FractionBox[
   RowBox[{"4", " ", "\[ImaginaryI]", " ", "y"}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    SuperscriptBox["y", "2"]}]], "+", 
  FractionBox[
   SuperscriptBox["y", "2"], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    SuperscriptBox["y", "2"]}]]}]], "Output",
 CellChangeTimes->{3.758672772638625*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"u", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["4", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
      SuperscriptBox["y", "2"]}]]}], "+", 
   FractionBox[
    SuperscriptBox["x", "2"], 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
     SuperscriptBox["y", "2"]}]], "+", 
   FractionBox[
    SuperscriptBox["y", "2"], 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
     SuperscriptBox["y", "2"]}]]}]}]], "Input",
 CellChangeTimes->{{3.7586727826631413`*^9, 3.7586728058699293`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["4", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
     SuperscriptBox["y", "2"]}]]}], "+", 
  FractionBox[
   SuperscriptBox["x", "2"], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    SuperscriptBox["y", "2"]}]], "+", 
  FractionBox[
   SuperscriptBox["y", "2"], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    SuperscriptBox["y", "2"]}]]}]], "Output",
 CellChangeTimes->{3.7586728078218317`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"v", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{"-", 
   FractionBox[
    RowBox[{"4", " ", "y"}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
     SuperscriptBox["y", "2"]}]]}]}]], "Input",
 CellChangeTimes->{{3.7586728120646276`*^9, 3.7586728474748497`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"4", " ", "y"}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
    SuperscriptBox["y", "2"]}]]}]], "Output",
 CellChangeTimes->{3.7586728490016823`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"u", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", "x"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.75867285737262*^9, 3.758672869042107*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.7586728718155127`*^9, 3.7586728764194527`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"-", "4"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"]}], "+", 
   RowBox[{"4", " ", 
    SuperscriptBox["y", "2"]}]}], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
     SuperscriptBox["y", "2"]}], ")"}], "2"]]], "Output",
 CellChangeTimes->{3.758672877794407*^9},
 Background->RGBColor[0.9, 1, 1]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"v", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", "y"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.758672881168594*^9, 3.758672891409911*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.758672893110026*^9, 3.7586728986290617`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"-", "4"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"]}], "+", 
   RowBox[{"4", " ", 
    SuperscriptBox["y", "2"]}]}], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
     SuperscriptBox["y", "2"]}], ")"}], "2"]]], "Output",
 CellChangeTimes->{3.758672900472468*^9},
 Background->RGBColor[0.9, 1, 1]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"v", "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", "x"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.758672929449751*^9, 3.758672941303706*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.758672943786248*^9, 3.7586729480493603`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"8", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "x"}], ")"}], " ", "y"}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
      SuperscriptBox["y", "2"]}], ")"}], "2"]]}]], "Output",
 CellChangeTimes->{3.75867294936378*^9},
 Background->RGBColor[1, 0.925, 0.925]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"u", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", "y"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.758672952178887*^9, 3.758672981430647*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.758672966495022*^9, 3.758672971128385*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"8", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "x"}], ")"}], " ", "y"}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "+", 
      SuperscriptBox["y", "2"]}], ")"}], "2"]]}]], "Output",
 CellChangeTimes->{{3.758672971889319*^9, 3.758672986105731*^9}},
 Background->RGBColor[1, 0.925, 0.925]]
}, Open  ]],

Cell["Demonstrating that the function g[z] is analytic.", "Text",
 CellChangeTimes->{{3.758673061756328*^9, 3.75867307778769*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"15.", "  ", 
   RowBox[{
    SubscriptBox["\[ContourIntegral]", "C"], " ", 
    RowBox[{
     FractionBox[
      RowBox[{"Cosh", "[", 
       RowBox[{
        SuperscriptBox["z", "2"], "-", 
        RowBox[{"\[Pi]", " ", "\[ImaginaryI]"}]}], "]"}], 
      RowBox[{"z", "-", 
       RowBox[{"\[Pi]", " ", "\[ImaginaryI]"}]}]], 
     RowBox[{"\[DifferentialD]", "z"}]}]}]}], " ", ",", " ", 
  RowBox[{"C", ":", " ", 
   RowBox[{
    RowBox[{
    "the", " ", "boundary", " ", "of", " ", "the", " ", "square", " ", "with",
      " ", "vertices"}], " ", "\[PlusMinus]", "2"}]}], ",", 
  RowBox[{"\[PlusMinus]", "2"}], ",", 
  RowBox[{
   RowBox[{"\[PlusMinus]", "4"}], "\[ImaginaryI]"}]}]], "Text",
 CellChangeTimes->{{3.758551197453149*^9, 3.7585513165342093`*^9}, {
  3.7585513900680733`*^9, 3.758551432826848*^9}, {3.758552588634675*^9, 
  3.7585525905373898`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell["\<\
Something is wrong with the statement of the problem. The domain square is \
messed up, I will assume it is the square with corners \[PlusMinus]2+0\
\[ImaginaryI], and \[PlusMinus]2+4 \[ImaginaryI], as so:\
\>", "Text",
 CellChangeTimes->{{3.7586734172743883`*^9, 3.7586735025982723`*^9}, {
  3.7587364900264482`*^9, 3.75873650049028*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"Line", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "150"}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Re\>\"", ",", "\"\<Im\>\""}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.75867373012936*^9, 3.758673840093751*^9}, {
  3.758673872037176*^9, 3.7586738731087437`*^9}}],

Cell[BoxData[
 GraphicsBox[LineBox[{{-2, 0}, {2, 0}, {2, 4}, {-2, 4}, {-2, 0}}],
  Axes->True,
  AxesLabel->{
    FormBox["\"Re\"", TraditionalForm], 
    FormBox["\"Im\"", TraditionalForm]},
  GridLines->Automatic,
  ImageSize->150]], "Output",
 CellChangeTimes->{{3.758673759599324*^9, 3.758673841670287*^9}, 
   3.758673874901581*^9, 3.758674306419875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "[", "z_", "]"}], "=", 
  FractionBox[
   RowBox[{"Cosh", "[", 
    RowBox[{
     SuperscriptBox["z", "2"], "-", 
     RowBox[{"\[Pi]", " ", "\[ImaginaryI]"}]}], "]"}], 
   RowBox[{"z", "-", 
    RowBox[{"\[Pi]", " ", "\[ImaginaryI]"}]}]]}]], "Input",
 CellChangeTimes->{3.758674319367432*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"Cosh", "[", 
    SuperscriptBox["z", "2"], "]"}], 
   RowBox[{
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Pi]"}], "+", "z"}]]}]], "Output",\

 CellChangeTimes->{3.758674323667701*^9}]
}, Open  ]],

Cell[TextData[{
 "It looks like the problem point is ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", "0"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "= (0+\[Pi] \[ImaginaryI]), which does belong to the domain pictured. This \
would mean that"
}], "Text",
 CellChangeTimes->{{3.758674392180943*^9, 3.7586744711452503`*^9}, {
  3.7586745065201387`*^9, 3.758674509855844*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "z_", "]"}], "=", 
  RowBox[{"-", 
   RowBox[{"Cosh", "[", 
    SuperscriptBox["z", "2"], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.758674530876889*^9, 3.758674545864264*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"Cosh", "[", 
   SuperscriptBox["z", "2"], "]"}]}]], "Output",
 CellChangeTimes->{3.758674551825837*^9}]
}, Open  ]],

Cell[TextData[{
 "and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "[", 
    SubscriptBox["z", "0"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "] would be"
}], "Text",
 CellChangeTimes->{{3.758674575421852*^9, 3.758674590157857*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"\[Pi]", " ", "\[ImaginaryI]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7586745945066423`*^9, 3.7586746068393908`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"Cosh", "[", 
   SuperscriptBox["\[Pi]", "2"], "]"}]}]], "Output",
 CellChangeTimes->{3.7586746084673843`*^9}]
}, Open  ]],

Cell["So the rhs of the Cauchy Integral Formula would just be", "Text",
 CellChangeTimes->{{3.758674649187443*^9, 3.758674663723424*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", " ", "\[Pi]", " ", "\[ImaginaryI]", " ", 
  RowBox[{"(", 
   RowBox[{"-", 
    RowBox[{"Cosh", "[", 
     SuperscriptBox["\[Pi]", "2"], "]"}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.758674674742962*^9, 3.758674699970078*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
  RowBox[{"Cosh", "[", 
   SuperscriptBox["\[Pi]", "2"], "]"}]}]], "Output",
 CellChangeTimes->{3.758674701504477*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.758674804574584*^9, 3.758674809456294*^9}}],

Cell[BoxData[
 RowBox[{"0.`", "\[VeryThinSpace]", "-", 
  RowBox[{"60738.575725307935`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.758674810816359*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["\<\
Both green cells above match the text answer. So this one is done, except \
that the analyticity of g[z] has not yet been checked. (And by the way, the \
assumption about the vertices of the domain seems to have been confirmed by \
the answer.)\
\>", "Text",
 CellChangeTimes->{{3.75867483308702*^9, 3.7586748737247753`*^9}, {
  3.7586760074991493`*^9, 3.758676042072794*^9}, {3.758736548520825*^9, 
  3.75873655364076*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{
   RowBox[{"g", "[", "z", "]"}], "/.", 
   RowBox[{"z", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{"x", "+", 
      RowBox[{"y", " ", "\[ImaginaryI]"}]}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.758674888359663*^9, 3.7586749130693083`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"Cosh", "[", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "+", 
       RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], "2"], "]"}], 
   RowBox[{
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Pi]"}], "+", "x", "+", 
    RowBox[{"\[ImaginaryI]", " ", "y"}]}]]}]], "Output",
 CellChangeTimes->{3.7586749150587187`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComplexExpand", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.7586749232235527`*^9, 3.7586749281807747`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"x", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "x", " ", "y"}], "]"}], " ", 
     RowBox[{"Cosh", "[", 
      RowBox[{
       SuperscriptBox["x", "2"], "-", 
       SuperscriptBox["y", "2"]}], "]"}]}], 
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "\[Pi]"}], "+", "y"}], ")"}], "2"]}]]}], "+", 
  FractionBox[
   RowBox[{"\[Pi]", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "x", " ", "y"}], "]"}], " ", 
    RowBox[{"Sinh", "[", 
     RowBox[{
      SuperscriptBox["x", "2"], "-", 
      SuperscriptBox["y", "2"]}], "]"}]}], 
   RowBox[{
    SuperscriptBox["x", "2"], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "\[Pi]"}], "+", "y"}], ")"}], "2"]}]], "-", 
  FractionBox[
   RowBox[{"y", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "x", " ", "y"}], "]"}], " ", 
    RowBox[{"Sinh", "[", 
     RowBox[{
      SuperscriptBox["x", "2"], "-", 
      SuperscriptBox["y", "2"]}], "]"}]}], 
   RowBox[{
    SuperscriptBox["x", "2"], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "\[Pi]"}], "+", "y"}], ")"}], "2"]}]], "+", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"\[Pi]", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "x", " ", "y"}], "]"}], " ", 
        RowBox[{"Cosh", "[", 
         RowBox[{
          SuperscriptBox["x", "2"], "-", 
          SuperscriptBox["y", "2"]}], "]"}]}], 
       RowBox[{
        SuperscriptBox["x", "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], "+", "y"}], ")"}], "2"]}]]}], "+", 
     FractionBox[
      RowBox[{"y", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "x", " ", "y"}], "]"}], " ", 
       RowBox[{"Cosh", "[", 
        RowBox[{
         SuperscriptBox["x", "2"], "-", 
         SuperscriptBox["y", "2"]}], "]"}]}], 
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], "+", "y"}], ")"}], "2"]}]], "-", 
     FractionBox[
      RowBox[{"x", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "x", " ", "y"}], "]"}], " ", 
       RowBox[{"Sinh", "[", 
        RowBox[{
         SuperscriptBox["x", "2"], "-", 
         SuperscriptBox["y", "2"]}], "]"}]}], 
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], "+", "y"}], ")"}], "2"]}]]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{3.758674929336591*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"u", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"x", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "x", " ", "y"}], "]"}], " ", 
      RowBox[{"Cosh", "[", 
       RowBox[{
        SuperscriptBox["x", "2"], "-", 
        SuperscriptBox["y", "2"]}], "]"}]}], 
     RowBox[{
      SuperscriptBox["x", "2"], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "\[Pi]"}], "+", "y"}], ")"}], "2"]}]]}], "+", 
   FractionBox[
    RowBox[{"\[Pi]", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "x", " ", "y"}], "]"}], " ", 
     RowBox[{"Sinh", "[", 
      RowBox[{
       SuperscriptBox["x", "2"], "-", 
       SuperscriptBox["y", "2"]}], "]"}]}], 
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "\[Pi]"}], "+", "y"}], ")"}], "2"]}]], "-", 
   FractionBox[
    RowBox[{"y", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "x", " ", "y"}], "]"}], " ", 
     RowBox[{"Sinh", "[", 
      RowBox[{
       SuperscriptBox["x", "2"], "-", 
       SuperscriptBox["y", "2"]}], "]"}]}], 
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "\[Pi]"}], "+", "y"}], ")"}], "2"]}]]}]}]], "Input",
 CellChangeTimes->{{3.758674933942339*^9, 3.758674953382051*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"x", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "x", " ", "y"}], "]"}], " ", 
     RowBox[{"Cosh", "[", 
      RowBox[{
       SuperscriptBox["x", "2"], "-", 
       SuperscriptBox["y", "2"]}], "]"}]}], 
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "\[Pi]"}], "+", "y"}], ")"}], "2"]}]]}], "+", 
  FractionBox[
   RowBox[{"\[Pi]", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "x", " ", "y"}], "]"}], " ", 
    RowBox[{"Sinh", "[", 
     RowBox[{
      SuperscriptBox["x", "2"], "-", 
      SuperscriptBox["y", "2"]}], "]"}]}], 
   RowBox[{
    SuperscriptBox["x", "2"], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "\[Pi]"}], "+", "y"}], ")"}], "2"]}]], "-", 
  FractionBox[
   RowBox[{"y", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "x", " ", "y"}], "]"}], " ", 
    RowBox[{"Sinh", "[", 
     RowBox[{
      SuperscriptBox["x", "2"], "-", 
      SuperscriptBox["y", "2"]}], "]"}]}], 
   RowBox[{
    SuperscriptBox["x", "2"], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "\[Pi]"}], "+", "y"}], ")"}], "2"]}]]}]], "Output",
 CellChangeTimes->{3.758674955868579*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"v", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"\[Pi]", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "x", " ", "y"}], "]"}], " ", 
      RowBox[{"Cosh", "[", 
       RowBox[{
        SuperscriptBox["x", "2"], "-", 
        SuperscriptBox["y", "2"]}], "]"}]}], 
     RowBox[{
      SuperscriptBox["x", "2"], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "\[Pi]"}], "+", "y"}], ")"}], "2"]}]]}], "+", 
   FractionBox[
    RowBox[{"y", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "x", " ", "y"}], "]"}], " ", 
     RowBox[{"Cosh", "[", 
      RowBox[{
       SuperscriptBox["x", "2"], "-", 
       SuperscriptBox["y", "2"]}], "]"}]}], 
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "\[Pi]"}], "+", "y"}], ")"}], "2"]}]], "-", 
   FractionBox[
    RowBox[{"x", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "x", " ", "y"}], "]"}], " ", 
     RowBox[{"Sinh", "[", 
      RowBox[{
       SuperscriptBox["x", "2"], "-", 
       SuperscriptBox["y", "2"]}], "]"}]}], 
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "\[Pi]"}], "+", "y"}], ")"}], "2"]}]]}]}]], "Input",
 CellChangeTimes->{{3.75867495750765*^9, 3.758674972701612*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"\[Pi]", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "x", " ", "y"}], "]"}], " ", 
     RowBox[{"Cosh", "[", 
      RowBox[{
       SuperscriptBox["x", "2"], "-", 
       SuperscriptBox["y", "2"]}], "]"}]}], 
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "\[Pi]"}], "+", "y"}], ")"}], "2"]}]]}], "+", 
  FractionBox[
   RowBox[{"y", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "x", " ", "y"}], "]"}], " ", 
    RowBox[{"Cosh", "[", 
     RowBox[{
      SuperscriptBox["x", "2"], "-", 
      SuperscriptBox["y", "2"]}], "]"}]}], 
   RowBox[{
    SuperscriptBox["x", "2"], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "\[Pi]"}], "+", "y"}], ")"}], "2"]}]], "-", 
  FractionBox[
   RowBox[{"x", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "x", " ", "y"}], "]"}], " ", 
    RowBox[{"Sinh", "[", 
     RowBox[{
      SuperscriptBox["x", "2"], "-", 
      SuperscriptBox["y", "2"]}], "]"}]}], 
   RowBox[{
    SuperscriptBox["x", "2"], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "\[Pi]"}], "+", "y"}], ")"}], "2"]}]]}]], "Output",
 CellChangeTimes->{3.758674974448471*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"u", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", "x"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.758676053349677*^9, 3.758676065743702*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.7586760677335577`*^9, 3.758676072897092*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["x", "2"], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"\[Pi]", "-", "y"}], ")"}], "2"]}], ")"}], "2"]], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Cosh", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", "y"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"x", "+", "y"}], ")"}]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"\[Pi]", "-", "x", "-", "y"}], ")"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"\[Pi]", "+", "x", "-", "y"}], ")"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "x", " ", "y"}], "]"}]}], "+", 
       RowBox[{"2", " ", "\[Pi]", " ", "x", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"\[Pi]", "-", "y"}], ")"}], "2"]}], ")"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "x", " ", "y"}], "]"}]}]}], ")"}]}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["x", "2"], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"\[Pi]", "-", "y"}], ")"}], "2"]}], ")"}]}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", "2"], "-", 
          RowBox[{"\[Pi]", " ", "y"}], "+", 
          SuperscriptBox["y", "2"]}], ")"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "x", " ", "y"}], "]"}]}], "+", 
       RowBox[{"x", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], "+", "y"}], ")"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "x", " ", "y"}], "]"}]}]}], ")"}], " ", 
     RowBox[{"Sinh", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", "y"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"x", "+", "y"}], ")"}]}], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.75867607686436*^9},
 Background->RGBColor[0.9, 1, 1]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"v", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", "y"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.758676089778607*^9, 3.758676100510868*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.7586761054047813`*^9, 3.758676110335696*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["x", "2"], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"\[Pi]", "-", "y"}], ")"}], "2"]}], ")"}], "2"]], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Cosh", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", "y"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"x", "+", "y"}], ")"}]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"\[Pi]", "-", "x", "-", "y"}], ")"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"\[Pi]", "+", "x", "-", "y"}], ")"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "x", " ", "y"}], "]"}]}], "+", 
       RowBox[{"2", " ", "\[Pi]", " ", "x", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"\[Pi]", "-", "y"}], ")"}], "2"]}], ")"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "x", " ", "y"}], "]"}]}]}], ")"}]}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["x", "2"], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"\[Pi]", "-", "y"}], ")"}], "2"]}], ")"}]}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", "2"], "-", 
          RowBox[{"\[Pi]", " ", "y"}], "+", 
          SuperscriptBox["y", "2"]}], ")"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "x", " ", "y"}], "]"}]}], "+", 
       RowBox[{"x", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], "+", "y"}], ")"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "x", " ", "y"}], "]"}]}]}], ")"}], " ", 
     RowBox[{"Sinh", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", "y"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"x", "+", "y"}], ")"}]}], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.758676111686657*^9},
 Background->RGBColor[0.9, 1, 1]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"v", "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", "x"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.758676142746461*^9, 3.758676162428741*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.758676164009529*^9, 3.758676168134266*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["x", "2"], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"\[Pi]", "-", "y"}], ")"}], "2"]}], ")"}], "2"]], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"2", " ", 
     RowBox[{"Cosh", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", "y"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"x", "+", "y"}], ")"}]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"x", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], "+", "y"}], ")"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "x", " ", "y"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"\[Pi]", "-", "y"}], ")"}], "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", "2"], "-", 
          RowBox[{"\[Pi]", " ", "y"}], "+", 
          SuperscriptBox["y", "2"]}], ")"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "x", " ", "y"}], "]"}]}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "\[Pi]", " ", "x", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"\[Pi]", "-", "y"}], ")"}], "2"]}], ")"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "x", " ", "y"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Pi]", "-", "x", "-", "y"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"\[Pi]", "+", "x", "-", "y"}], ")"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "x", " ", "y"}], "]"}]}]}], ")"}], " ", 
     RowBox[{"Sinh", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", "y"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"x", "+", "y"}], ")"}]}], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.758676172408228*^9},
 Background->RGBColor[1, 0.925, 0.925]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"u", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", "y"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7586761764969997`*^9, 3.758676188716164*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.758676192665654*^9, 3.7586761992451277`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["x", "2"], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"\[Pi]", "-", "y"}], ")"}], "2"]}], ")"}], "2"]], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"2", " ", 
     RowBox[{"Cosh", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", "y"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"x", "+", "y"}], ")"}]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"x", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], "+", "y"}], ")"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "x", " ", "y"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"\[Pi]", "-", "y"}], ")"}], "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", "2"], "-", 
          RowBox[{"\[Pi]", " ", "y"}], "+", 
          SuperscriptBox["y", "2"]}], ")"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "x", " ", "y"}], "]"}]}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "\[Pi]", " ", "x", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"\[Pi]", "-", "y"}], ")"}], "2"]}], ")"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "x", " ", "y"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Pi]", "-", "x", "-", "y"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"\[Pi]", "+", "x", "-", "y"}], ")"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "x", " ", "y"}], "]"}]}]}], ")"}], " ", 
     RowBox[{"Sinh", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", "y"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"x", "+", "y"}], ")"}]}], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.7586762007884493`*^9},
 Background->RGBColor[1, 0.925, 0.925]]
}, Open  ]],

Cell["Confirming the analyticity of g[z].", "Text",
 CellChangeTimes->{{3.758676235379678*^9, 3.7586762445621643`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"17.", "   ", 
   RowBox[{
    SubscriptBox["\[ContourIntegral]", "C"], " ", 
    RowBox[{
     FractionBox[
      RowBox[{"Log", "[", 
       RowBox[{"z", "+", "1"}], "]"}], 
      RowBox[{
       SuperscriptBox["z", "2"], "+", "1"}]], 
     RowBox[{"\[DifferentialD]", "z"}]}]}]}], " ", ",", " ", 
  RowBox[{"C", ":", " ", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{"z", "-", "\[ImaginaryI]"}], "]"}], "\[Equal]", 
    "1.4"}]}]}]], "Text",
 CellChangeTimes->{{3.758551451917145*^9, 3.758551530169723*^9}, {
  3.7585525809628077`*^9, 3.75855258268145*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell["First to examine the domain.", "Text",
 CellChangeTimes->{{3.7586763861829967`*^9, 3.75867639140554*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["ParametricPlot",
   FontWeight->"Bold"], 
  StyleBox["[",
   FontWeight->"Bold"], 
  RowBox[{
   StyleBox[
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1.4", " ", 
       RowBox[{"Cos", "[", "t", "]"}]}], " ", ",", " ", 
      RowBox[{
       RowBox[{"1.4", " ", 
        RowBox[{"Sin", "[", "t", "]"}]}], "+", "1"}]}], " ", "}"}],
    FontWeight->"Bold"], 
   StyleBox[",",
    FontWeight->"Bold"], 
   StyleBox[" ",
    FontWeight->"Bold"], 
   StyleBox[
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", " ", 
      RowBox[{"2", " ", "\[Pi]"}]}], "}"}],
    FontWeight->"Bold"], 
   StyleBox[",",
    FontWeight->"Bold"], 
   RowBox[{
    StyleBox["ImageSize",
     FontWeight->"Bold"], 
    StyleBox["\[Rule]",
     FontWeight->"Bold"], 
    StyleBox[
     RowBox[{
      StyleBox["15",
       FontWeight->"Bold"], "0"}]]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Re\>\"", ",", "\"\<Im\>\""}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], 
  StyleBox["]",
   FontWeight->"Bold"]}]], "Input",
 CellChangeTimes->{{3.758676459108232*^9, 3.758676466667947*^9}, {
  3.7586780219415083`*^9, 3.7586780318438883`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
bA==
     "]]}},
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Re\"", TraditionalForm], 
    FormBox["\"Im\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->150,
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-1.3999998363892419`, 1.4}, {-0.3999998029936864, 
   2.399999829584284}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.758676478471922*^9, 3.758678032871578*^9, 
  3.758723277219885*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "[", "z_", "]"}], "=", 
  FractionBox[
   RowBox[{"Log", "[", 
    RowBox[{"z", "+", "1"}], "]"}], 
   RowBox[{
    SuperscriptBox["z", "2"], "+", "1"}]]}]], "Input",
 CellChangeTimes->{{3.758722424242806*^9, 3.758722428202849*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"Log", "[", 
   RowBox[{"1", "+", "z"}], "]"}], 
  RowBox[{"1", "+", 
   SuperscriptBox["z", "2"]}]]], "Output",
 CellChangeTimes->{3.758722429300803*^9, 3.758723282270356*^9, 
  3.7587236359839*^9}]
}, Open  ]],

Cell[TextData[{
 "It is apparent that the obstacle point will be ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", "0"], TraditionalForm]]],
 "=0+\[ImaginaryI], which is included in the domain. Suppose I make"
}], "Text",
 CellChangeTimes->{{3.758676507691053*^9, 3.7586765603923492`*^9}, {
  3.758677672503742*^9, 3.758677733371944*^9}, {3.7586777961938753`*^9, 
  3.7586778637602663`*^9}, {3.75867805269811*^9, 3.758678095344878*^9}, {
  3.758722283046987*^9, 3.7587222885909853`*^9}, {3.7691116280303373`*^9, 
  3.7691116315637217`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "z_", "]"}], "=", 
  FractionBox[
   RowBox[{"Log", "[", 
    RowBox[{"z", "+", "1"}], "]"}], 
   RowBox[{"z", "+", "\[ImaginaryI]"}]]}]], "Input",
 CellChangeTimes->{{3.75872223320586*^9, 3.75872227399932*^9}, {
  3.7587223409840517`*^9, 3.7587223427528276`*^9}, {3.758722433771226*^9, 
  3.758722434074765*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"Log", "[", 
   RowBox[{"1", "+", "z"}], "]"}], 
  RowBox[{"\[ImaginaryI]", "+", "z"}]]], "Output",
 CellChangeTimes->{3.758722292815917*^9, 3.758722344679039*^9, 
  3.75872243493349*^9, 3.758723285770615*^9, 3.7587236388162117`*^9}]
}, Open  ]],

Cell["then", "Text",
 CellChangeTimes->{{3.758722297190514*^9, 3.7587222975504017`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "z", "]"}], 
  FractionBox["1", 
   RowBox[{"z", "-", "\[ImaginaryI]"}]]}]], "Input",
 CellChangeTimes->{{3.758722302779662*^9, 3.75872231783009*^9}, {
  3.758722349878977*^9, 3.758722351388317*^9}, {3.758722438570672*^9, 
  3.758722439058271*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"Log", "[", 
   RowBox[{"1", "+", "z"}], "]"}], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], "+", "z"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"\[ImaginaryI]", "+", "z"}], ")"}]}]]], "Output",
 CellChangeTimes->{3.758722321735203*^9, 3.758722352974168*^9, 
  3.758722440248734*^9, 3.7587232888668423`*^9, 3.75872364202273*^9}]
}, Open  ]],

Cell["\<\
which is just what I want, because it will fit directly into the Cauchy \
Integral Formula.\
\>", "Text",
 CellChangeTimes->{{3.758722374645523*^9, 3.758722378404174*^9}, {
  3.758722499033869*^9, 3.7587225150640907`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "z", "]"}], "2", "\[Pi]", " ", "\[ImaginaryI]"}]], "Input",\

 CellChangeTimes->{{3.7587225322593613`*^9, 3.758722539110528*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
   RowBox[{"Log", "[", 
    RowBox[{"1", "+", "z"}], "]"}]}], 
  RowBox[{"\[ImaginaryI]", "+", "z"}]]], "Output",
 CellChangeTimes->{3.758722542583234*^9, 3.758723292566051*^9, 
  3.758723645479547*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "\[ImaginaryI]", "]"}], "2", "\[Pi]", " ", 
  "\[ImaginaryI]"}]], "Input",
 CellChangeTimes->{{3.758722681204793*^9, 3.758722682385791*^9}}],

Cell[BoxData[
 RowBox[{"\[Pi]", " ", 
  RowBox[{"Log", "[", 
   RowBox[{"1", "+", "\[ImaginaryI]"}], "]"}]}]], "Output",
 CellChangeTimes->{3.7587226837610903`*^9, 3.758723296922286*^9, 
  3.758723648462742*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.7587226161780653`*^9, 3.75872261836622*^9}}],

Cell[BoxData[
 RowBox[{"1.088793045151801`", "\[VeryThinSpace]", "+", 
  RowBox[{"2.4674011002723395`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.7587226195027237`*^9, 3.75872269135196*^9, 
  3.7587232999630117`*^9, 3.758723651847619*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[TextData[{
 "The green cells above match the text answer. All that remains is to check \
analyticity of g[z]. This turns out to be more difficult than expected. So I\
\[CloseCurlyQuote]m going to weasle out on this one. According to Wikipedia, \
the log function is analytic on any open set in its domain, and polynomials, \
like ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["z", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "+1, are analytic. According to ",
 StyleBox["http://kisonecat.com/teaching/2011/math660/lecture02.pdf",
  FontSlant->"Italic"],
 ", the quotient of analytic functions is analytic, as long as the \
denominator is non-zero."
}], "Text",
 CellChangeTimes->{{3.7586769773804893`*^9, 3.758676998634615*^9}, {
  3.758722739883212*^9, 3.758722813983013*^9}, {3.75872426494858*^9, 
  3.758724294626199*^9}, {3.758727012784389*^9, 3.758727094123724*^9}, {
  3.75872720072187*^9, 3.7587272429193296`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"19.", "  ", 
   RowBox[{
    SubscriptBox["\[ContourIntegral]", "C"], " ", 
    RowBox[{
     FractionBox[
      RowBox[{"Exp", "[", 
       SuperscriptBox["z", "2"], "]"}], 
      RowBox[{
       SuperscriptBox["z", "2"], 
       RowBox[{"(", 
        RowBox[{"z", "-", "1", "-", "\[ImaginaryI]"}], ")"}]}]], 
     RowBox[{"\[DifferentialD]", "z"}]}]}]}], ",", " ", 
  RowBox[{"C", ":", " ", 
   RowBox[{
    RowBox[{"consists", " ", "of", " ", 
     RowBox[{"Abs", "[", "z", "]"}]}], "\[Equal]", 
    RowBox[{"2", " ", "counterclockwise", " ", "and", " ", 
     RowBox[{"Abs", "[", "z", "]"}]}], "\[Equal]", 
    RowBox[{"1", " ", 
     RowBox[{"clockwise", "."}]}]}]}]}]], "Text",
 CellChangeTimes->{{3.758551577721528*^9, 3.758551668101733*^9}, {
  3.758552556251811*^9, 3.758552572899577*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell["\<\
This problem is included in the s.m. First I will make a sketch.\
\>", "Text",
 CellChangeTimes->{{3.7587273830918627`*^9, 3.758727389218424*^9}, {
  3.758727542941346*^9, 3.758727548581318*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["ParametricPlot",
   FontWeight->"Bold"], 
  StyleBox["[",
   FontWeight->"Bold"], 
  RowBox[{
   StyleBox[
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", " ", 
         RowBox[{"Cos", "[", "t", "]"}]}], " ", ",", " ", 
        RowBox[{"1", " ", 
         RowBox[{"Sin", "[", "t", "]"}]}]}], " ", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", " ", 
         RowBox[{"Cos", "[", "t", "]"}]}], " ", ",", " ", 
        RowBox[{"2", " ", 
         RowBox[{"Sin", "[", "t", "]"}]}]}], " ", "}"}]}], "}"}],
    FontWeight->"Bold"], 
   StyleBox[",",
    FontWeight->"Bold"], 
   StyleBox[" ",
    FontWeight->"Bold"], 
   StyleBox[
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", " ", 
      RowBox[{"2", " ", "\[Pi]"}]}], "}"}],
    FontWeight->"Bold"], 
   StyleBox[",",
    FontWeight->"Bold"], 
   RowBox[{
    StyleBox["ImageSize",
     FontWeight->"Bold"], 
    StyleBox["\[Rule]",
     FontWeight->"Bold"], 
    StyleBox[
     RowBox[{
      StyleBox["20",
       FontWeight->"Bold"], "0"}]]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Re\>\"", ",", "\"\<Im\>\""}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{
          FractionBox["95", "255"], ",", 
          FractionBox["130", "255"], ",", 
          FractionBox["179", "255"]}], "]"}], ",", 
        RowBox[{"Arrowheads", "[", "0.08", "]"}], ",", 
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.708", ",", "0.687"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.74", ",", "0.66"}], "}"}]}], "}"}], "]"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{
          FractionBox["223", "255"], ",", 
          FractionBox["155", "255"], ",", 
          FractionBox["52", "255"]}], "]"}], ",", 
        RowBox[{"Arrowheads", "[", "0.08", "]"}], ",", 
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1.26"}], ",", "1.55"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1.48"}], ",", "1.35"}], "}"}]}], "}"}], "]"}]}], 
       "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.75872746588253*^9, 3.758727536614704*^9}, {
  3.758727729706358*^9, 3.758727885291984*^9}, {3.758727916283799*^9, 
  3.758728113775522*^9}, {3.7587281450685043`*^9, 3.758728225314457*^9}, {
  3.758728264937949*^9, 3.7587283042950153`*^9}, {3.7587285044906187`*^9, 
  3.758728700722694*^9}, {3.758734517088797*^9, 3.758734589763104*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
WHxm8f8DJChnmQ==
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1:eJw1m3c41f///42KyChKpaKFFBWl3aOiYWRENLyzUpLM0jBTUlFkJyMpW2ZW
8rB3tuxs2ftwnPX6vT7X9fv6h9v14lzn+Xw+Ho/n/XZdx3ZjqyumHGxsbA85
2dj+9/3/f535vx+M9+0TZRAEvFxVpeTnawXiX1MtZkh+3nPhgbevC7CD30IX
yZ7fP5QMJ3kAM6clrZDkV2tPCbj6esPxLJeYcJI/37Nref3TD7jzPzbakey0
arSlJikIBo/LHjpL8l6RHUK8nz+BjYtyzSqSXXPPBZ3zjYCnRcshJSwCRK4f
VThWFAmDYhqfn5GsWnevVu1nFPwMvtklRbJWmMrHmxnfYJuQvEYdk4Dy6hlR
06QYOHdjnPqA5NuJdp1m0XFgvi20fQXJ3Uvj+nciEoChp3GGXCAkm0nmqn1I
Bs6Yt2UhdAIauNZpbi5NAQWJAy/XkXwsRUn2bWEqlJ0+Ez22TEDuSs9M/dx0
kGif41Eluci0eCg/MwMSv0XERFEJcA5/yrMl/QfsTPR6c2qJAL4NmafLErLg
Pt+uOudFAnTazJvWxWbDg2mTy9kUArYG0+5e/5oDz/Q+LwgtENCSL/KpKfQn
6Hypnn8wQ0AlfrR99A5BJf36CptpAm50ZMaUKhXAdN5FDYspApKMfT7XFBWA
rZligOoEAavODirU5hfC4wrx0cR/BLw29/gUmlkMNO7VzTbDBDxy6XF7eagE
ysue02WHCCjsvONyN60Ejg8Zsvv2EyDc+OTUtu+l8DNicJbWRcBSw+6Hqt/K
wdztStXzTgJwrUUC984KeKdF62PrIODjyCRHwecKyFO2rv/3hwA1B6XgLaGV
wNBMyLhWT4C4ySznW99qUHp7fLGskAA/Z9Edos51MMcVaBeDBNC/oBCdox6Y
ZnJdzr8IeDvIyTF4oR4CY2Nt1uWQ52Pj2xRTWw+xF55gTTIBw4In91K6G+Az
3dv5/ScCLI0EfgTQm6Dy3i+iO5gA1jvB9gPQDLfaFB/vCiQg3/6VXJlbM3jf
dFQL9CHg3h2Xoz2rW0Bv99poPneynjR+21WI/IFfUWMNqhbk+ToMlN2Ra4Ma
/SZR3nsEiN3XVAh91AaXR4vuFZoSwPYkL7oquw0K+RzXCxkQUDuaeWodtMPI
+cvlKloEvIuMl1ZR7QAFY8+Haw4R8D5E8oSacReIrMhw7J1jweg7/4LV53th
X+HthJopFgSO/kmfMemFyuvaO1PHWMBl+tOnya0X5mdXzBv3s+BbZOiIV0Ev
nNnTJ2vewAIXc71jv0/0gaLTCm7u7yxQnO6NdjrYD9FGnuJvjFjw5/UfGbNN
g6D3e0ewqz4LOEdpTr+ODIJFrp2TtR4LDueZF/PpDsKlDs3AY5dZULVxViDC
dxC2ClfusjnKgv9sT3e94B0C8a2m7fZ8LNDYpZKgwRiCSPkLe4ZTmWBxlcj4
2f4PYv7K0XkTmTCZaqlVs/gPfl+zTpGOZoKmxYP9rUIjUP/FrepKCBPkpc75
d14egdNHhwcvuzHhaG3m6fDCEbBqubQ0o8mEM4p/V62MHYX/dkkIUkYYcD28
44CU9TgY/lotdbyfAVG6cuF2XuPg1Bam/aSTAbKs3TbZsePwJFt7ouc3A9j+
q9gn2zcOv9uytPTTGJDq/O1UpdYEjAd2GPA+Y0C5v1Vv1sFJOLDBzUF9BQOO
jfrqXpqYghvlW+2FGXRQ4ZHlXcUzDZk0Ka/GeToYm3xn5UpOQy61V+jIAB3W
B3a78phMwzuJj02RhXSoPbzMBe3T4P/WYQ+bEx32JRVY0I1mQFK3R212kgY5
XSOj8sqz8H1A2QQHaSDjr5HkrDcLt20mBtw7aVAfF+RVYjoL99oUZRkVNFgn
mf7+rNssWW+fDryPosFSYtYBtp+z4DrQd0pFjwZy6/0eeO2dg13RHE8P5yzD
NN+LHaXc8yDQfvpQcfIylI4wvrmtn4fNi2KfVaKXgbfjytMTO+ZBZ1jc74Lf
MuhQhDgjTsyDxXyU5LzFMiQFp6nKWM7DSNik6HaxZeC8bEs3aZyH12GevH3O
VGgKyzfZFbQABqVrHOIeUoEoshg/H7UAl8JDRu6bU+FPwxkj4+QFsG2fLP97
lQpmBo94vcoXYFAA/jruo8Iq2bVcX5YW4JtR/tfQtiW4VXqK648uBRLvFuc7
7luCSJO6OuW1i8C19gh7hPgSXAqY2pmzdRFkxN2DcoWX4GbPxw07pBfB/Mf9
392MRZC/pFTZe24R9rJP5jfXLAKrbAvb2oeLMH79SrHHffK59KdPx1oW4evj
OW7RrxRoE6yW9vNdgmIjiQ+WQRRwYHa/3B++BGIDX//+fEsBA/0P/KVxS2DY
I92maEOBqPVOUZ0FSyCvZ5C4+jQFvj/VtM+cWoKqQGMR6z8LUP0nvltMmQov
wqwUizgWQK06lyeBSoVdon33/CnzsCxZQT3EuQxdaracRiPzcCv42FwW3zIs
XvkaPvp7HlzMPtJjdyxDhq91V3bwPHTcmtpwRG0Zsncvpl+RIfd91HCcLXwZ
Ct5mCr2/MgcUloX6kZM0aHi8s+2H0hxctti6u/s8DWSfC7xuU5iDLXefJDlo
0GDD5cYcftE54J9wrPhiTIPCvRoNpwdmoTb0Rnfwa7LuDDYdSbWdhY7184d3
NNHgc5LMf7R3MzDwVyUhyJgOLSG8Iy6uM7BU1knPNqeDYU7RQ3a7GbgnfyC+
yZYOE801n6l6M2CpeHkjxY0OtprU8KztM+DBbOEc+UKHi9fWSi2aTcMLIf17
Xn10iL7+ac+t75MgduPu5aLrDOA5MuVq7zsJ1W/k43iNGLBti3uKh/0kKKbs
kVQ3Y4Cl65t0/9OTsPrPe7d8ewb0vghcdaN2Apwf2L9S82NAluaXpqCJcbD9
s+Lclmry7+38lgR2jYHs8ucO58NMCLlnYjOwYgzMdkha2p1kwv0De14mD41C
+l+dFANFJihFbA4+GDMKSQEVR8W0yOcjsbZ/94zCXlPXncctyDl0sr6wX2YE
WriepXd/ZsL37KaE5gPDkFh9s6WWkwV7z2aH1wgOg3mO6Kcfq1mQ9OuFSv7M
EJRlbG3xE2ABnFSbfZ8yBF8zT0YoiLKgr8nSYXj/ENyxK/xvvRwLYh6vemUv
Q85h17zNCrdYYHDaa+LGrn5y7gxVLyezIOwHG7ViZT90tOdoPMtgAfuLx55y
//pA9bynwnw2CzoeFZtR4/rA8FW2VG0hCzwvP2rQ2N8H89tjXKWaWJA4Uc55
6Fgv+H+4JWi5wAJKWavYrc29UHp9s+JDKgvOZ7s7cC/1QEsMtdyWwQLlpDcn
3jj0gHyIVMm1FQTUc1e/kXn5F/YurLtfIUSAu5VyDb9/Fyz1n4o4fJCAA2bD
VmNXuyDIyv55AXmPhT4eXoMiXUAT/huteJQAL9dca+1PnTBQW5AlBwSEf83z
lv7SAU5vxtrT1cic4zOXEvG9DeyCGu+cvUPAfc+jUuus2+BPSbKIJnmvxu5T
83E+2Aal2eksXfLeVdk1ZX0+oxXYdQ9aXLYloDlpXOJdzh+oUX2a0uVEgEXS
NNu64mY4EKR05qUfASmPNb/edW+G7V3B4qvJe17QuMMk+2IzPEzY+OwVmQNa
TRVsVWuaoPnQqUDzMAJmXo/cPdbSCK9eTBm3RZPPbU1e3wtqBHOxuwzxOAKy
L+QfD7jeCPxvnXmMEwgQSuH06SFzRoaPqdtvMnewHQn6eHa4HjzdHBqVswkw
+tI0pBFbDwnbznPo5pK5Smvs2A3zehDp8vtyI4+APEOLe2VddSC9+Y/c5QIC
NBMbd/lM/IZl2ZGXreUE6OVdzmvmqQItLY53ri3k/vnf3ev6vhKsVt/0Fmol
4N8Txxe711VC6TcDengbAYFPxU1vbaqArXYU/ggyhzGFDPZ5SZaBHPvjzUp9
5P4l6GznSSiFp83nDUPIHKc39WzCTbYUqm6z840OEDBWucbR9HAJbPZiD7Ei
c+CdQUucPVcEevw9T7ePEyCwieebclkhFCsUTB0nc+QhvRvqYcqFsLH5XIXa
JAFbLGeMj2oWgNuRPbHXyRx6dviiEFsMwsSYwHcdMqcuBNW1eCTlw6qpMJFL
swQ0VfPGPs/NA5+USuGN8wQYcsXLLhT8BLceaswCyf1nTm40LM8FxVNzYZVk
7h1u386xuzkbJK4/S9Unc/Kl9/efOndkQShPXO1mMkfvqg0429ibCV8b+i43
kGw94JF2bzIDVjiX2kiSOfwO51Fuu7/pILLlsHozySmFXNX2dWnA2q8p94RG
5uJS+oVHBalA4MhWITLXU2U3V1impkCAbpPgN5L7+VoOlSslgzvHPx5Z0guu
Ko8LxUokwaAuk/c7yT/PVvdpjcWCVOfXHX6kRwiylbBtqYmGA+WUI1SS1y95
5/YkfYWVzRXaOqSXMJ6oxoR5f4FR6RX2MSRfeSJsoGvzGRKf+oTPkiyWJ7wg
HB0KMXPXfsuR3tOZ90n80b1gqFFT5bhPsu0n9oe1+/zhW7HeqRCSfdpFTin1
esMNERvnApLvZHNG9t/xgEwvr9Jukp9cSx5Z6HACqcnIdXMkWwR8vHW0/h6U
vUowZZJcx94fxbZXEzX3RecTJNMqlm59Yj7E/Yc/bF0mWVyz5NpRqhvaO1m6
jZJ8fntRcpiNJ/aanpusJzkkZzbOifIBm5qEbiWTvOa8mq2kXCBePzjR/JLk
9tPxbNWWIbj9QauWFsmr58p23U0Ix6e0gWZhkrV79usx7SJRtWHHrTpy/dUK
IQrnfKNws2XMpCvJz4pfBD9P+Ya0Bo8Xe0g+olM3mFsbg55uXWKV5P6+tTB6
MTkRh7NvCooMSP5kJd61kTcR6+y1LCbJ8+mqWtA9uec7ntBP3mJL8nWfwaSE
nSmY08BomiTPN+XY+bgMuVSUnb/la0jyM0n/huyzadhqyNSrIutD/llVR5Zm
OgJw7N5LcsD6doNvlj8w/tFCSwPpdYU7ExT9nDKxJeFcrgjJ39SutT3zysJp
/pxoHbIe7fRVBg/H5+CmUnpwOul1koMSR7SHfuH3RLvRlXMEnDA3uLJqIR8n
zbzWryD746rBDYNr7AV47HWl6jLZT49KXWUoAoWoVv+3tYLst/AcE+mFfcVo
aaz4mDFCwIvOvBaJjGLke3aCmUZ6ncEBIZr2iRKc4KZ4G5L97BXCsyFMuRSL
aqW7P5P9PsBe9mjYtBwdr0duz+wmIEqv/1jvQDm6CfUcPkN63Q0bRalmowoU
3MjrVkR6nKR/BXf8f5XIVve1OJmcPx67+h14rlbjLsbrxX0NBPCYbDvc2FiN
dcUtzU/qCFDfnrLDT7MGV7fsn8r7TfZnPU2MTe03PjHFJpmq/3l96MUX5+rQ
0irCPq2IgIzVIxfXFtSh2f3QYwXkPJQ56lZcva0eRbfDibJ8AiItPXZeCK1H
h3lTRi45T4NST+auDmrArt+HXl5MI+dv4Fh3vmcTsu8cFZuMIMDRSDPmTFUT
ap7X5nUh5ztXrO6nX9zNOGZBnFpNeuGZD8fKYt2bcR/1lcMq8n44zVJ3POfS
ggoFoWZfPQnwLn693t6mFe2yb32yfETWW5tZpJ1WJ/6t+6V8VpGAuBcl6x/4
d6KYmcohf/J+u7Z9MeJWayeu99sj+fcE2Q/aK+P2/NeFhcW7pPXI+/GRgOPD
/8y6kc3Jrbh7F1n/kb0ye5168JbgPzhN3rc872w4w7AHf09zHeZgI+vfXvUv
B3svrgjNUfpFZ0H1pfSy/xR7UccpO3vjPAveW6xV6SzvxXe7hTaY9rGg6Ux0
9URdH+a5rinTyWPB2OYPt9pm+jCWs5HxNosF2cIPq/PX9mM9/4JxdhoL9tQY
8Dlq92PA4/YiaiwLOpfq9mT96UfBXW+oAgEsODUn+VayawB/Ps13/nifBQyO
U6bJ/UPYH2jhv3MdC74cVNC9zDGMdGGK7K01LLi60HNgaPswjipQn/qsYsGI
irYrh9Ewaul2SXbRmBCw28Fv7u8w6mwKFxQcYMK47Pupz+3/MNn205tx0hv1
t+TML1eOYuZUhoyTMhPmVw6ql4yM4vPSBbHUc0yI6gl28eAaQ75Ae1rXCSb0
rw4BqtIYat2st9oiywTX6lNqbjiGM0KqH46vY8Jmi/oDB9PHUe3CdmNKGwNE
ghpvoP8kNhamnrczZMCTqMnvH1ImkUvVq0KWzKPBccl/9Wsm0VM69umAFgPO
c1pkdnNOoZhW/IOjigywesLyfG07hZrxhrU+uxngrs5HOKpP48s4+RXMETrc
vG1hdd11Bum/XHfWk3mZ02ZhrPLdDIZK6S1kkHn6WPza+wqfZnDyeo6s3w06
qM1st+DMnMH9xZR/J1TosPDvvsiD8RkcFH0SdXoPHa4pmyk5Xp3FLs1NTJ5h
Mu93HMi1k5jD98/9XX/foIFD2S0Z+0NzKM2c5NuhRQPPhz+f2p0jeX+tlNVF
GrDq9r2/dWsOVc6KrZuXp0Fikt2RxYA5ZAUasX1ZQ4Ou0fdbpFbMIzNx/6/w
PNIb16zgduiaR5t+tnRJkWXotrBd1zA6jxumWsz91izDnstqz7YvzeMKz9Vr
qOzLoL1VTjt17QJq8PtsSJygQvvXxAKvCwsYeiHqMxZSoUS298L+5AXkPJIq
H0R6oaq+x/HVjhRMe7lXaFvWEuw/qcKq8aCg37SGinXiEjxZccLO04+CLYOG
CXmRS1AztM6UGk/B8IetFEWvJXgc0y3i207BreGai2uMlkDvqtLRosOL+Gz/
BP3t6iUYV28PYx9bxNLzPiIquovAf0N05QbKInJtvlIyrLII/cFOxbvYllD1
l9ScEyyC0be84wc3LGGWoG7XJ6lF4Fi3p3zluSVc7iw/FkijwOR9B0ZI8BLW
5u8O9AijwIlnLcomZ6koelmB06ZnAeZuJIeFqFGx6r2bolHjAkjJTI9U6VFR
+e6Ao2rpAixpfb+2wZKKAUK8Y3wJC9Cdxzh3LYSK+wQfbFS1XwBJqT1P3Gep
uHFxaVs87wKIGys5WoUsY/ieNdT1cvOQ+PNlOH5dxjne+Ea1XfMw4/ZOhzt5
GVfMtu9w3jAPH8+vs35RvIxvpibl62mkB+ZuWCc+sYwD8vJv5Irn4FFekO3M
CRr+2l/mMU9648OXX0PbW2h485W4yQvLWVAxquHh7aEhSzFgv47hLPw4F7p8
aISGvt5DO8SvzMIZBl3dlkbD0P0L7+IOz0LR1tgPvtvoqGAjPOTGmAE9Ksf5
u6Z0DFVav0H7zQxseJN1XnOSjgETF5/xwjT4/YhlelHoeP2G1rVX26fBrsVr
pJBJxzPeBa+onNMgbsSlLszPwArfWkpRxRQcmT648aYsA9X9d66Y1ZqCP6em
0i0fMDDq2ZXdOcaT8PiSckP4EAOHOMMEDzmPw8FXblZGEwykSxwnfhiNwzWP
fK6t8ww8q5hy8eD5cbhnkinmwsZE3Ytd7MJrxoGyRaVgajMTx1Vdut9+HIMN
maW3nqkzUfyQi7JS+ihsbIg4ezSFiUs939hF+v9B+H2fDSKZTJQzsMloKPkH
F3++zpj6ycQvuYmRr2L+wXH3ofOvy5lIXB+52GPxD5x1Vgbd/svEvDOLb9WW
SC9s0cgv4GEhK5Jt31beYaiXNW5n/sfCXEfKzkrZQbj8ZwP+Z8LCAa99D7T5
B+Gz22FqhhkLVz1vYLRODkCXVsgtZTsW1og7CdcnDsA1h6mG1a9ZiGP/7XGS
HoCob5d5RpJZuMvxLX8T6Y0y7Nsf5WWwsH88d/OqFf3w9dquLa9zWPiYYcVx
aKAPlkoVN60sZqFdY/8b18g+MLi/Pz6ghYUGm4Ndurf2wd/3SuyCyywc/6Fy
Jnl9L1ROafroMVm431WhTWq0B/iTmy4EshPoXscUGovugSN8d3YvryZQe+Lr
C60dPSBNsfLQ2UzgK4rF1cyNf6F1aKHL8BiBPB21N0c4u6C/kH62wppAs65V
R+yaW2HT5PLWX3YEOrzZZpAR0AqXVGwl4u0JzBxqjZ3WbQXzlWM5Fo4EPkiN
79Fp/wP9Xnytfh4EVjc5+XR2twBKqWndCyXw8tOalH9DTXA4uymyN5zA4DVq
lxqjm8D6+SZhzUgCf7hT6Vl3m8BH9tFNkWgCrcRjFx+ONoLpt5nbF5MJXJLS
mc2caACD+JdD+woIdG2/5twwWAcm0c/5JIoIVIp/OLPxTh2oCtiri5QQ+CzK
yvfav1r4cPDapv5yAvnCZQYLRn/Dd0lK6cY6AlcJ/Cd3bKoaQo74xTbWE+gY
vxR43qoa6meff37ZSD4PWJRUnakCngdRtfUtBMbauV8+N1cJP9dFbeTpIvBa
FSE6SCmHd2Aa8rKbwH1HKq/9si+Hgjsaskt/CfSoH8n3WSqDbaX7PEv6CMzV
KXCXWC4Fe1lbAbZ/5PlsO/JwLaMYZqtrNp4YIXCRm98WHYuhn/r1oOUogSlL
bwLNmEXwSyvcJ2+cQE2nA42JrEII6G6hkzkTp97+8GRjLwCLDofQmRkCr9v2
cW7kRsg+FPCxZ5bAbw3PXkry54O3AsRGzxM4Pn/g4MHNeTC+2iTHeYHAwh09
zXvFf8ITX3EJDQqBFwSa6GISuSB2OGpt+yKBDQ8KiigHs2HdZh4f3yUC1/zQ
62g9kgUcKur3lKgEcl+yvp1xKhP+nizb+2GZwACaFf6nnAGb7scL76MRyO5N
cO3VSAd6bo0ekrzypFHavE4aXMs4M1FLJ9BCmyr6xDAFisy1TqkyCOwXzP9m
VvMdivW3jSDJw2ELP9pbEyEoynNiH5Ncz1GVXsWBeGjc56LiS3KarX1ozFQs
3M/tZZ8hWf2unPFKWjT86v+47gKLwKrwo3H/rfwGvoKBjv4k988qjaYIRsGO
F0XQSXKIhXAIIRoJW9T59TcTBB6/U3XHXz0coq+bN5Deg/IVE9d3mIaAqXFl
xHOSTy8KMOMcAsF5Waw8juQp8x+wz9cXgl/evlhFskgz7tDRege9p7zFB0j2
fi9RfMnZHbgOhVxZILklXdPFWtcBVFWed5Meh/z80P3B8C5YHz1XSHocBqQ5
PeBN1sDSt11M0uNwc7R7K0+oHe76ouU38b/XDzStEIl8jlPpX5+3kly688fk
7odvUKCqoyKX5M58bVZglA/Si2hmgSRv5dvMK/LOH+O1+IzNSbbZGy/jax+M
IcwtGQokuy8+t+cyDMXqHQoGdHI/wvQE6bm7PmP27B2TbJLnQ17cstz0BW9a
YcEDkut2dD3Yyv8Vdz7SeixK8smr+qnlHNE4n3LAo5Dc/4lfF1MtlmJwyzfb
GdLr8I/0AIWX9LySIac6d/I8584oWR5pScJufYfzfCTLNoWkFVUm48M+xfXv
yHqAXCPZnT0pOOeRVvSIrJe4pZ7nIU1pOGv/6fNfsr5Swj++rvudjt58LW1A
cvTfzkaiPAMlx5qujZP1GZH87ZxWXibmhI99PkxyOM+rGZvMLFzZtqD4hKzn
4e+f57xSsjGpMeTTMFn/fNNKK1K/5uL9zf6Bd8l+WX+mqzHei/S63aplBmQ/
Qe0ziZpPiGd9E6nqZL9dGycn39UCfHDk6511kwRSup6VO94uxHJ2C2sZsn+1
Ag0br7oV42z8vfzuYYLM/2K5+atJr6vKX+s+RGAtJy9r+4cS3Ma5WJndT5Cv
y2BvjSjFgvYmzwxynpj+yqpbzCtHHr4sga2d5DxpO20pq1SBsp5nQh3bCaz3
unTUoLoCOau2Noj/IfC9T2pmQnslnlGyzWLWEjg2NSY/QalG60uaY6uRwO3z
xUsPN9Sj5yTf4YE8Al06rh9vuF6P06XzPum55P5cquqXCqvHwW8pzscyyfn7
x3xT1c4GrJspV+xIJPDE/Qu8jQcacYuQNa91MNl/bL22/5Sb8ZvuyuzcAAJ5
lSPlZ72a0VijwpXhS+DNwci9lLpmXPl45p7pO/I8cPrR+NUWtFRcmVrznMC2
Ixy3vY3+4JYFjZpZM7L+M1tkvj5uw21sTsnDpgQqtkgJtfxowxHhZ71NxgRK
iM6NEvNt6Bo7KhukT/bz+IKsonU79sjL+BVqEPh3i42Fs1kH5giN7o0+RM7n
G/xmuXpd2MUfqiJ+kMDGx0GKLwK68OsX/hJfGQLfCLzcer6pC+cOplQZShBo
Es/wTlfvxuxNvyBShEDDk2wVx87/RfbGvoAMKgt/cFtIWm3sxVo+id8ZCyy8
f4lgihzpRUPJ5QdJMyy8kLehM+9qL+avODvjMcLCrVj+lubbi22jtkL9rSw8
tlJ8SomvD0sfaf3c+4OFk//uHRFg78czO4L2bDFnYfaDlsjzQwN44cHJy4W3
yd/PdfceXjmIHb8iU/4zYGH4hhs5zyUGcbFl4KSjDsl6A5+i7w7ilL9ukOZp
FrZ4rAiMGx3Ex6HZeXqCLPxy59UBr4khFBZI9x1PYqIIc+uE2+Q/LP3g1OsQ
w8StKuka1/lG0Pvfq6+ckUx0j7Etk5IZwd3U6sBlPyY+66itSLMYQfV3/ddc
npL5qY97u+34CFqdNGRfOMfEWPgoEfhvFHdxXmv2rmMg0yVO5lDHOLIsu8oP
VzDwjrvHSk/qOBbxx+U3FTDwRpr65o4NEzgsqpG/lMpAl0lKm6H2BD6My4Je
PwYqPk5GgZoJPPzCdfthXQbuuqPUP/5zEn30t79mNtOR/t8uS5OAabR+Y88V
W0PHx0/fFKWmTePpqP46lRI6MtwEVJfqpnHNO5XzT9Pp2HKffUJ+5QwKG3Zz
PvtAx/O/9AhLmMEf9/YOrFGj44PXl7J502dw/T8JuTc/aejVn+RQHDiLl1Pj
3vWl0dA5OP3fQNQsqr3d8Fg+noYVY05r2VJncbiGvKWDabjjQfaHvdWzyDgV
tjr4EQ11Be5OqBOz+MLLW5BfloZrP0upltyZQ+HBMJ6zpB9MJoyPasvN4zfn
EM06n2W038nPPnx6HqsSX5vreSwjv85PWzvVeaxcNth59eEyujUFXXe9PY/S
K66PrlJfxj9CZb1GgfP40F6p9jzbMlI9Nx46uzyPKYtmHmcNqajaILdL/+cC
blEV3iB3lYoNjfJKuhULGLcgkSeqQsVX2jFOKi0LqJkuerNDnoqntA/Kbp9e
wGcX+0+u5KLiZpEzYh47KDhxC24KJy6hGZfmOrnXFHT3nS2SnV3EpzaN28bV
F/HQuatOl4YW8eR2NsvtNxex2SUg62b7Ig78VrytdXcR6fZHcywLF1Er6sjR
cJdF/M6hrHnxwyJuOm24dTx5EW/+Cfpdun8R46Mle9QFljBQ95uJoBkFA4+s
+CFRuYRVZv9YR/UpKFlc51XZtIRqmZe09DUp6BL81OXO3yUMc5WU9DtKQbmG
kfj380soJ9E8WshNwTvn1zQEbSU9TmqziUTsAvqkza73tKYiz1jlHvGBedzJ
EZo4sHYZi/fY23z7M48hlU+HS0SXUW0hqn531TwqZwqORexextaGgT6R1HlU
SolXUjy2jNGzLdGFzvM4oxXPCYbLuLPC8ZHspnn0+Vv2njtpGfk0vU+8UJnD
kRPMG01naXh2k8Lj9FNzOJRdavtThYanZUL0ew6Q/v5USSVMm4ZNHrUHpEXm
8EPp/H51UxraZnjreA3Mom/v1U+3X9PQQYjruLvDLD4VWBA3/k1DK936wwax
M/jOSCLpwxU6nnru/I3n0wzWKegXJt2gY4PEwx1p72ZQlBahU2xMR5fVI5oU
2xlsCfky02FLRzbHle1qp2aQArsqf/rSsV7dtvjVl2nc6p9+9VwDHVM09hZX
Tkxi9KAg46oy2cddf6r+1E6iiH918kktBn48efFZZ8ok3t8tZi96nYEUV965
6oeTeIer+GChGQPXqmYdUGFMoC13u2SSBwM1jMrVi1dPYOcHc5mVJQw8V3vu
68C2MXQ+abcyRoGJKwZNhBaJUXTr7ZjzPMUk57z8Cfa+UbSZTE8xU2Liycde
rexRo+htwBe4+gr5nP2iQpLEKJZz7GocsWBi2puPezP2jWDGocgHouTcGmHl
XSuQH8ZzhuYflThZ6J35tEF0wzCqdTZ2/uRm4ddSjREb6hBOBzvX7OVn4dBP
eT7+X0N4q1InnbKRhWsfB7JWXRhCutsV24OyLDRXbWxn1xvEK8clAy/qsTBg
SOGF+qN+vNhwqG0oioXKFSvbefX60cLS66F1LAt1iOjMkqP9+KDkRPB8IgtX
XBiS2MPow4E7p2wGyDnfbbk//pdbH77Z90j1XjnpZRKGmaLevUj0LqevGWUh
rSO9A5W7kWfHF40E8h4Sb+RaWMPVjTpS/osfpElPSJT5pVXShVr736ZYyZL3
6nmThKLTXWjIKXJdUIHAF44SAkrynfjkns6tYSUC7eQ4c1o2t6NYX7X6oCGZ
cz3qKqNb2/C3T270idsEfr6q9Mvavw2bo/ewv71L5vZZyY/TfG2Ia4pyeC0J
tGSqnPnE1oq0k3SxqGcEJjybkfk52IxXr3PQxMl7XVX7pt3OyGaMACbfiD+B
vyrV693/a8YYjtcbooMI3P/0wrZjf5rQxWkvB1cYgWc+rt+jX96IQZyasvox
BLKJ6CoHvWjEKov/GjriCHx58siW39CIyx00Y00yZ9w45y65J7sB0/eIaIin
ElgpcXHha2w9Tv0uOKJN5pTTPE8rs27XY6KV5Mk3ZI6xqS2ZKBWvx0N2JXsy
8wl8zMvRGnuwDu1OSOQvkB64s9qi5cna3xg/npu7oprA9rw+mm9dBSoKX3S3
InPUGaGg3pOaFWiiuFaF2kEg896qjN76ctxg8XDzUzKHCeqoRm1oLMMXFz26
jHvI8zmovA2aS7A4t73zzyCBMpXhEz91SDa5Ni9G5jyvXMUY+ZZirJqMFjIi
vW5rao+h8J8ivND78EE16XHuKQZG4a0FWKni5XRmisAPPyX4F/UKsFX0UJMy
mSv/O3JRzS8F8RKH8X5VMndm2L+TrUr9hWEMTdrhOTI3Zt0xvJGWh03Pg8zE
SI/by1V6dyDtJ8oSll1sZI49bHN6sTc9B2u/zzYlkB4XEr7AuJqRjd7n5PQe
kbm3q8e0rSQjC99+kO1RIHMxZUfhmg8/fuAVwU+MSNLjHry9MjT1IwNt/FI+
qJK5WiJ18sPFzHR8/qRGepLkobjwO2OZqajKfGy2kczplgp3+A9npWDAQN6a
LySnfz8stGSZjCtybDN2krm+7NKBA45WSSi39alBGMnXDB/NL1sl4OXvqXwC
pBd4zWGXtXUciq1mwyckv0yrud9nHYOilcp2HSQ7/rsurmbzDa+/tpc+RHrG
X3XJZ6k2URjTYzXoTrIJi0JdaxuJHne2R9aRfPml4LGuwXBUSH9iuJb0GlfK
uUqvoRD8ccN0hyrJyOL9ojAciKUzbcOOJBcTlKKOYV+c5SpPiiY5wnOT3kLt
O/Q5uPtxBcn13rmZe+vdsYw5dq6f5P6Elos/vzjgK/ratf/zOJUD2x4fULmL
AdkBff/zuNOb3g4qGGuBV6Fdxv88TsOaI1hO9yE0RSa8+Z/HcW0wPzi6xw0S
Bk4bjZMsd/z7uwypt7BT8OCJFpJX+Lal5Al9ALFkD5Esks+y9rZuFgqAKxdV
Fn1IHlh1Ptdu3UeAW26txiRbhgXfKFsbBvJPTvzcR3JdpHrX69ef4dLGF5FT
5H5ExJiaS7/+AvoFZm9jSV7yrdUr9/gKArPMRzdIdsor32XgEQ24R/f2CpL9
Sny0Zl/FgvvIq6vR5P5ziQdXc7xKBKmxhjON5Pn9PLZf95nDd3Bn44u4RbLn
k6GLj46mwPymcY0B8vwv2WsHtcukgYcPd3wL6W2rYz9puUulg0T0a21Fkk3u
ZNru25kBOftlNOPIetpnhtT7GzPBU/up4i2y/iR8bg1xCmXBOhPr40lkfaZJ
y10K5MsGgQZp9wWyfpVzh13iOHLhJCV0gwVZ3+bbhne+mPgF0xnFsgTpbYpV
rrIjw/kgLL2hUpBkz216tef7EN4eLsreTPaT7HTi1MJYATTsXP9RhOw/rFTV
vttTBEZz3rd/kP35M8pm8Il+MSTVeKa8IT3u3OBsnXt7MZw+NqmtS/Zz2Pj8
qQ9NJdCfufpLG9n/dEqPzP3yMkhMlL39nJwPssrpyjpK5cARVWe38S+BmkuD
dUcKy+FEjV53DDlPOr87RU3mVoCDxXNMJudPfs1b8bXfqyAx7EaVSROBx7nV
L1VJV8NaHuX0Xw1k/d+sHHOMqYYtFeuXBeoJ9Pl1UKr2cw3c+zwSGlZDYOsd
CdjqVwsNB/Zr/VdK4JEAxmK4QB1kFufve1ZMzvvCS8c3edWRTvPRzLuQwFM2
fY8cztUDDycXZ9QvAp03revcc6IBrl7bWm/5g1zf8tq7eXuboCfi74mPUaRX
rlnxiWbZBF4ze4q4Iwm0iuW6Ip/WBIvru65bhRNYIqbL9DvaDOtX3y3Y/pH0
3sTxw4LnW2CyV9FF9D35/h0ufhrQbwUPDnxkYk/O35l/WwsjWuHPQwFrJTsC
t9yPXgjqb4Uc8/TXW6xJprKuHDRrA2XW641p90gP5llfLGjXDpYjjGpb0vuU
Dwkt2Xh0wlGdOl3VMwRmPm4f7qzshG3XSqLDT5Ke55zIPLWmC6j+DrtGjxJ4
INj56phPF0iUmySZkB54JOJpZN/HbrhQwys0vZ30zhWfNY7H98Cr5Lu7DdkJ
bBLk/MPd3wetcuXf0nNYOBJ5mOLK1g+rurkCzpD3uXxBafTCtn7Yf+PFYmkK
C42lV0fV3uyHXb3+wrkxLPSU/iqr1tIPTe+suy4GsJAxu5HnbvkAeO/1JfeR
hbq3R2v/xQxBB2fkydItLBxuDq8pLh2ChLNvc4xFWJgYdsYqZGAIij6/qKOu
ZeHZ51PuR8SG4cwZRjU/FwvNdhfvPRA4DPLnC/f1zzCxY/rUgvCLf2B2xrpQ
spj0OutLH59eGwWNi38PHTVm4vbHmxp5n4wCY+cm1ds3mZh763FyYNAofJK/
Meyhw0TRgHvygX9GIbz9b/qPC0x8uv+90QmdMRBN5RlIkGbivUS5exvUx2Hl
QvKNFbMMnAywkq0/MQkJeR4PHz5m4C2Di46mNybB9UrcwQArBq5astSYezIJ
202ms5LuMvCIvInx3I9J+GHOt6dMj4GZgUZKnvungDog/Nf/CAO5YqhqG7dP
A1eXTEQChY5nD/irpTrPwL0f9/Tq7tNR/UyZhOS7GTD7uf6qiAkdA9sOmAZ/
moFap9A0PTL/Tol9Yllkz0BWDi2w8BIdPf44yv+dnYFjhzOUj++mo+7Bl5Ld
JrNwWaPtRWEXDe0WhbwPKs3BhrKYbccukB5XpAtrrszBO/Zg6oeTNDRqzGrp
M5iDMwa3Xw7I0TA4/8E3J4c5kBq5mWctRsN9OZKmj9PmYI9/wbI8dRk37PDg
txabhxDJJkHD2GVU+hz86SZlHt4fzVAz5lzGKwElYnHsCyCYzKHqtUxFp22c
1bN8CzCpeexkyjQVNc0b3j6UWIDpkim24U4qFpjH6IPeAjzmydVdnUFF7/ni
jH9ZC7D1nf+VgyZUnEo2b7R8RIGvw6t+i/xawmWrAU/R5xQQ+HNx6GXaEjYz
XgkUe1HgrlYSTMQs4QisMOf4SoF8tX2lcb5LuAk3bD3XSAHZsEM3e+8uYdyF
stXFMosgXFS2fGrtEnaZuKZl9S7CiZGzDr8NFjH51zO3bxOL0HNB5r6/9iJW
i6RXeVEX4SXnLEvn4iLOWGlkXhRcAi1+qlix7CJm5ed+soQlGE2TiNdmUlBA
OSbVKXQJEi8vUy59pOBglQjbWy0qXJiucwmrWcB0rY/mn/WpwL+rqC4CFzBy
0X0w+S4VCjdGKISmLaDSOW5ajhMVEsSn9V4EL6DgO4r2szgq1Ptv0+K9vYAO
23etiSOo4OI9fHslbR5Pyx0+FRe9DLeT9SPzts/jLQX5l7Ipy3C6REZuTnge
3/TfM0/KWYaaevFVO7nn0cZTmDe4Zhn8UiRe2k/NYe4zvCk+twyastxyQ7lz
uKkqXo5+gga9Ld92Dl6ZQyFR1d+VVTRIeafO7+IyiwFrON84N9HgeIK44k7b
WYy5F/FpXxcNFGoEdxbfnsX1CiN5DydpMNvkP0tRnsX/wqrSMwTocHbpvoSU
8CxmsP8Onr1CB+28uq7CmBk85hdTrtlMh6PZj0+VBE2jtOVg24ouOjylHzjg
4ziN1l8uKaUN0KEszyVCx2gar2cf2rE8R4fK/G6+culpzOfOKFdYywClz0TP
lV9T+PyTuqS1GgNGLxSuW9M3iRvLFZi1vxgwqTvaJLdzAnnCMobiSxiQFXB8
nSjXBBIr/8y4VDOAa9f9z4yxcbxW5mK2vp0Bc97nyhPSxvH+fwdSJucZoD/P
R889O46l2o9PXpFiwrM3V/q/3BrD/UE8Dr2eTHA/++hYhd8IJlSWfzTwZQKb
yCotu4cjKHFoh/mfYCaIGe18K3J1BHmqH2xM+MaEY2lnXqpuGMGXgVuezuQz
Qap5m7dx8D80TXlQMDpNcqdevs6nYUyJkPZ+q8qC8fCkdo/QQczneP6WocmC
PZIP9MwcB1HabIz9ji4L1GO2CCvqDyKyD94SM2KBPMvc8p/oIGqtehqz154F
Zra0qImQAQy6AnvjwlnkfExjnw3qx7nfFidlR1mQdrVNbfv7XhRu2GtxbpIF
NucFnnlZ9WLbtB+vxiwLeFqPfZnX7MXgk/cDtJZZ8CXiOnumUC/empjOoXMT
0PVe8KOIXA+aminYDkgQ8HtNocaKC91Y2fprj7M0ATWfSgSNuLvx6NuFs2tl
CfjZzJWdWdWFLTfnfMQPE+Dn/4WiptGFCbHSHwbOESC75W+TxLVObNrmYUjT
JyDb00MvzKwdT/fsz99sSMAFX/oHb+l2FDp130rehABjuZKvDhNtaK7gX3n5
HgGtYQI+Z63b0Fpo9qLEIwLkDbklXz1uxdSwtb9NPQlwD2ZEEy9bMOK+OB/v
ewJcFyo8Ai+04MGP7gGxPgRI7Xc9JMXdgklLpY41AQQINhXLnvRsRuXSRL+s
CAJkHj26IvWhCQV+Z/63OY2AJsMtOdtCGzB190D2iwwCVvJ+V9im24DxzDvm
A5kEKFtH398o2ICEit9v958EnO7do8V8UY+rji266pYQkJteV7ChtRZv1551
sC0jIL5d/G+pSi3Gljwoe1lBwH9t3AX3838ju+aAmlcNAWrhOY6h32rwYZTW
aslmAo410z0C7aqw4HrwU0oLAamnLj9h+1eJ6w+vVMhtJSBxIe2F8Y1KLL29
74NEJwHrm/cECZytQP5g7aK3fQQoCKkZreMvw6sZ1915BwjQtvvRcfZ5KfpS
X/u4DZLr9VYpM18oQefcUCftfwRM/UqIiOsoRv0bTdGuEwQ0WoTz9UYXYsHB
SxHpkwR0VydU9WwqxI8F0V1dUwTYSDtqdXgV4OvPObvWzRIwFhFV7zqUj5Nx
hbLb5ghYkxgZeq2a9L7OG47i8wRcc1mjI5mah77V3H1cFAJMvsh2xzvmIh/x
emmCZG7/6RuGxjloed5Gs2KRgP36B7bwX8pGg1CbCiMqAX/1DQq1hTKxp2/N
P7FlAriEzbUmqBmo8XXDxf99rpL9voyT8990VMkIrRKjE3B5swzbh7hUHKCm
T2aSnPcqgHOddwp+ibXSUmIQ8IB/66Lo6HdUSPxKKSf5zO3bT3kyErFzULrj
LJOAH6JHT804x+O9fd2sVJKFJhomfyvHosHVjyYbWeR5slse+SocjePSZ7gf
kaxRo1Jm1xOFi9Y/JspJHqyIvXAqPhL3DfYIkh4HCQH+lRxj4bjyeNxDTZLl
/IY/PncJwQpxlsgrko31G3WpwoHoD7W0VJKvHBu6Zhb/AU0V1mxt/t/nFBf1
Z7+5vEWR8CTnif99DlLWeatd/HO8x51ALpcAYuW32kfxNvh//y/HpS8sLxFd
mPf/AAa41As=
     "]]}},
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Re\"", TraditionalForm], 
    FormBox["\"Im\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{{
     RGBColor[
      NCache[
       Rational[19, 51], 0.37254901960784315`], 
      NCache[
       Rational[26, 51], 0.5098039215686274], 
      NCache[
       Rational[179, 255], 0.7019607843137254]], 
     Arrowheads[0.08], 
     ArrowBox[{{0.708, 0.687}, {0.74, 0.66}}]}, {
     RGBColor[1, 0, 0], 
     PointBox[{0, 0}]}, {
     RGBColor[
      NCache[
       Rational[223, 255], 0.8745098039215686], 
      NCache[
       Rational[31, 51], 0.6078431372549019], 
      NCache[
       Rational[52, 255], 0.20392156862745098`]], 
     Arrowheads[0.08], 
     ArrowBox[{{-1.26, 1.55}, {-1.48, 1.35}}]}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-1.9999997662703457`, 2.}, {-1.9999997185624094`, 
   1.999999756548977}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.758727747905789*^9, 3.758727886180313*^9}, {
   3.7587279172130823`*^9, 3.7587281149245043`*^9}, {3.758728146972052*^9, 
   3.7587282266066*^9}, 3.758728305900024*^9, 3.7587285225311527`*^9, {
   3.75872855660964*^9, 3.758728632271381*^9}, {3.758728663714344*^9, 
   3.7587287017220097`*^9}, {3.758734518720978*^9, 3.7587345907229233`*^9}}]
}, Open  ]],

Cell["\<\
I see two obstacle points, one at 0+0\[ImaginaryI], and another at 1+\
\[ImaginaryI]. Only the second problem point is in the domain.
So I will just write\
\>", "Text",
 CellChangeTimes->{{3.758734340027495*^9, 3.7587344554693823`*^9}, {
  3.758734673275963*^9, 3.758734677878656*^9}, {3.769111670018546*^9, 
  3.769111673410247*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "[", "z", "]"}], "=", 
  FractionBox[
   RowBox[{"Exp", "[", 
    SuperscriptBox["z", "2"], "]"}], 
   RowBox[{
    SuperscriptBox["z", "2"], 
    RowBox[{"(", 
     RowBox[{"z", "-", "1", "-", "\[ImaginaryI]"}], ")"}]}]]}]], "Input",
 CellChangeTimes->{{3.7587346824036703`*^9, 3.758734685632352*^9}}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   SuperscriptBox["z", "2"]], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "-", "\[ImaginaryI]"}], ")"}], "+", "z"}], ")"}], 
   " ", 
   SuperscriptBox["z", "2"]}]]], "Output",
 CellChangeTimes->{3.758734728819412*^9}]
}, Open  ]],

Cell["\<\
and, leaving in the denominator of the original g[z] only what seems to \
handle the problem point, I will have\
\>", "Text",
 CellChangeTimes->{{3.7587346905280237`*^9, 3.7587346907507267`*^9}, {
  3.7587348945061913`*^9, 3.758734957903029*^9}, {3.75873662483045*^9, 
  3.7587366273184443`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "z_", "]"}], "=", 
  FractionBox[
   RowBox[{"Exp", "[", 
    SuperscriptBox["z", "2"], "]"}], 
   SuperscriptBox["z", "2"]]}]], "Input",
 CellChangeTimes->{{3.758734694011854*^9, 3.758734721910034*^9}, 
   3.758734802286517*^9}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   SuperscriptBox["z", "2"]], 
  SuperscriptBox["z", "2"]]], "Output",
 CellChangeTimes->{3.758734724449731*^9, 3.75873480362598*^9}]
}, Open  ]],

Cell["I need to have the problem point ready to hand", "Text",
 CellChangeTimes->{{3.758734974822534*^9, 3.758734983414275*^9}, {
  3.758736658997202*^9, 3.758736669421146*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["z", "0"], "=", 
  RowBox[{"1", "+", "\[ImaginaryI]"}]}]], "Input",
 CellChangeTimes->{{3.758734755353319*^9, 3.758734782035639*^9}}],

Cell[BoxData[
 RowBox[{"1", "+", "\[ImaginaryI]"}]], "Output",
 CellChangeTimes->{{3.7587347839369926`*^9, 3.75873480649457*^9}}]
}, Open  ]],

Cell["and also the value of f evaluated at the problem point", "Text",
 CellChangeTimes->{{3.758734993170432*^9, 3.758735014717278*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  SubscriptBox["z", "0"], "]"}]], "Input",
 CellChangeTimes->{{3.758734786276155*^9, 3.758734792316009*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"2", " ", "\[ImaginaryI]"}]]}]], "Output",
 CellChangeTimes->{{3.758734793724895*^9, 3.7587348094418783`*^9}}]
}, Open  ]],

Cell["then to assemble the rhs of the Cauchy Integral Formula", "Text",
 CellChangeTimes->{{3.7587350226601553`*^9, 3.758735040180389*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", " ", "\[Pi]", " ", "\[ImaginaryI]", 
  RowBox[{"(", 
   RowBox[{"f", "[", 
    SubscriptBox["z", "0"], "]"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.7587348549345093`*^9, 3.758734871041799*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"2", " ", "\[ImaginaryI]"}]], " ", "\[Pi]"}]], "Output",
 CellChangeTimes->{3.758734872717938*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["\<\
The above cell matches the text answer. The analyticity of g[z] is vouched \
for in the same way as the last problem, Wikipedia specifically mentioning \
the exponential function as being analytic.\
\>", "Text",
 CellChangeTimes->{{3.7587350581800547`*^9, 3.75873506403587*^9}, {
  3.758735105298152*^9, 3.758735116978238*^9}, {3.758736124326977*^9, 
  3.758736161212463*^9}}]
},
WindowSize->{1366, 843},
WindowMargins->{{4, Automatic}, {Automatic, 4}},
Magnification:>1.5 Inherited,
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 10, \
2015)",
StyleDefinitions->"Charter1.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 246, 6, 51, "Text",
 Evaluatable->False],
Cell[649, 21, 73, 1, 45, "Input"],
Cell[725, 24, 111, 1, 51, "Text"],
Cell[839, 27, 371, 9, 77, "Text"],
Cell[1213, 38, 138, 2, 75, "Text"],
Cell[1354, 42, 73, 1, 45, "Input"],
Cell[1430, 45, 276, 6, 86, "Text"],
Cell[CellGroupData[{
Cell[1731, 55, 2200, 57, 220, "Input"],
Cell[3934, 114, 19423, 339, 243, "Output"]
}, Open  ]],
Cell[23372, 456, 846, 20, 124, "Text"],
Cell[CellGroupData[{
Cell[24243, 480, 240, 7, 81, "Input"],
Cell[24486, 489, 183, 6, 81, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24706, 500, 153, 3, 45, "Input"],
Cell[24862, 505, 282, 9, 83, "Output"]
}, Open  ]],
Cell[25159, 517, 994, 26, 112, "Text"],
Cell[CellGroupData[{
Cell[26178, 547, 664, 19, 84, "Input"],
Cell[26845, 568, 404, 14, 84, "Output"]
}, Open  ]],
Cell[27264, 585, 222, 5, 51, "Text"],
Cell[27489, 592, 214, 6, 79, "Input"],
Cell[27706, 600, 116, 1, 51, "Text"],
Cell[27825, 603, 1372, 42, 147, "Input"],
Cell[29200, 647, 187, 2, 51, "Text"],
Cell[29390, 651, 199, 3, 75, "Text"],
Cell[29592, 656, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[29690, 661, 1777, 50, 192, "Input"],
Cell[31470, 713, 19688, 344, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51195, 1062, 335, 9, 54, "Input"],
Cell[51533, 1073, 403, 11, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51973, 1089, 939, 22, 90, "Input"],
Cell[52915, 1113, 3875, 77, 267, "Output"]
}, Open  ]],
Cell[56805, 1193, 473, 8, 120, "Text"],
Cell[CellGroupData[{
Cell[57303, 1205, 242, 7, 81, "Input"],
Cell[57548, 1214, 181, 6, 81, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57766, 1225, 346, 10, 47, "Input"],
Cell[58115, 1237, 358, 12, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58510, 1254, 132, 2, 45, "Input"],
Cell[58645, 1258, 2228, 77, 182, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60910, 1340, 2023, 68, 182, "Input"],
Cell[62936, 1410, 1858, 65, 182, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64831, 1480, 565, 18, 90, "Input"],
Cell[65399, 1500, 473, 15, 90, "Output"]
}, Open  ]],
Cell[65887, 1518, 152, 5, 45, "Input"],
Cell[CellGroupData[{
Cell[66064, 1527, 131, 2, 45, "Input"],
Cell[66198, 1531, 968, 32, 128, "Output"]
}, Open  ]],
Cell[67181, 1566, 152, 5, 45, "Input"],
Cell[CellGroupData[{
Cell[67358, 1575, 131, 2, 45, "Input"],
Cell[67492, 1579, 968, 32, 128, "Output"]
}, Open  ]],
Cell[68475, 1614, 174, 6, 45, "Input"],
Cell[CellGroupData[{
Cell[68674, 1624, 133, 2, 45, "Input"],
Cell[68810, 1628, 748, 27, 114, "Output"]
}, Open  ]],
Cell[69573, 1658, 152, 5, 45, "Input"],
Cell[CellGroupData[{
Cell[69750, 1667, 131, 2, 45, "Input"],
Cell[69884, 1671, 748, 27, 114, "Output"]
}, Open  ]],
Cell[70647, 1701, 303, 6, 110, "Text"],
Cell[70953, 1709, 140, 1, 51, "Text"],
Cell[71096, 1712, 253, 7, 95, "Text"],
Cell[71352, 1721, 73, 1, 45, "Input"],
Cell[71428, 1724, 237, 5, 51, "Text"],
Cell[CellGroupData[{
Cell[71690, 1733, 240, 7, 76, "Input"],
Cell[71933, 1742, 189, 5, 76, "Output"]
}, Open  ]],
Cell[72137, 1750, 257, 8, 53, "Text"],
Cell[CellGroupData[{
Cell[72419, 1762, 122, 2, 45, "Input"],
Cell[72544, 1766, 115, 2, 76, "Output"]
}, Open  ]],
Cell[72674, 1771, 876, 27, 107, "Text"],
Cell[73553, 1800, 474, 7, 86, "Text"],
Cell[CellGroupData[{
Cell[74052, 1811, 342, 10, 47, "Input"],
Cell[74397, 1823, 257, 8, 76, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74691, 1836, 132, 2, 45, "Input"],
Cell[74826, 1840, 450, 14, 76, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75313, 1859, 336, 10, 76, "Input"],
Cell[75652, 1871, 234, 7, 76, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75923, 1883, 358, 11, 76, "Input"],
Cell[76284, 1896, 253, 8, 76, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76574, 1909, 199, 5, 45, "Input"],
Cell[76776, 1916, 285, 9, 99, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77098, 1930, 199, 5, 45, "Input"],
Cell[77300, 1937, 285, 9, 99, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77622, 1951, 218, 6, 45, "Input"],
Cell[77843, 1959, 293, 9, 99, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78173, 1973, 197, 5, 45, "Input"],
Cell[78373, 1980, 290, 9, 99, "Output"]
}, Open  ]],
Cell[78678, 1992, 274, 5, 86, "Text"],
Cell[CellGroupData[{
Cell[78977, 2001, 198, 5, 45, "Input"],
Cell[79178, 2008, 144, 3, 100, "Output"]
}, Open  ]],
Cell[79337, 2014, 261, 7, 98, "Text"],
Cell[79601, 2023, 73, 1, 45, "Input"],
Cell[79677, 2026, 193, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[79895, 2034, 238, 6, 79, "Input"],
Cell[80136, 2042, 184, 4, 79, "Output"]
}, Open  ]],
Cell[80335, 2049, 673, 26, 69, "Text"],
Cell[CellGroupData[{
Cell[81033, 2079, 206, 4, 75, "Input"],
Cell[81242, 2085, 240, 5, 76, "Output"]
}, Open  ]],
Cell[81497, 2093, 105, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[81627, 2098, 276, 9, 47, "Input"],
Cell[81906, 2109, 273, 8, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82216, 2122, 132, 2, 45, "Input"],
Cell[82351, 2126, 502, 16, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82890, 2147, 354, 11, 79, "Input"],
Cell[83247, 2160, 268, 8, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83552, 2173, 349, 11, 79, "Input"],
Cell[83904, 2186, 265, 8, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84206, 2199, 197, 5, 45, "Input"],
Cell[84406, 2206, 317, 10, 103, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84760, 2221, 197, 5, 45, "Input"],
Cell[84960, 2228, 314, 10, 103, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85311, 2243, 218, 6, 45, "Input"],
Cell[85532, 2251, 189, 4, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85758, 2260, 196, 5, 45, "Input"],
Cell[85957, 2267, 191, 4, 69, "Output"]
}, Open  ]],
Cell[86163, 2274, 134, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[86322, 2279, 210, 4, 75, "Input"],
Cell[86535, 2285, 206, 4, 95, "Output"]
}, Open  ]],
Cell[86756, 2292, 170, 4, 86, "Text"],
Cell[86929, 2298, 753, 22, 102, "Text"],
Cell[87685, 2322, 73, 1, 45, "Input"],
Cell[87761, 2325, 127, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[87913, 2330, 849, 23, 128, "Input"],
Cell[88765, 2355, 16942, 293, 338, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105744, 2653, 314, 8, 77, "Input"],
Cell[106061, 2663, 254, 6, 77, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106352, 2674, 233, 7, 54, "Input"],
Cell[106588, 2683, 372, 11, 45, "Output"]
}, Open  ]],
Cell[106975, 2697, 1139, 35, 105, "Text"],
Cell[CellGroupData[{
Cell[108139, 2736, 392, 12, 77, "Input"],
Cell[108534, 2750, 290, 9, 75, "Output"]
}, Open  ]],
Cell[108839, 2762, 101, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[108965, 2767, 252, 7, 75, "Input"],
Cell[109220, 2776, 196, 5, 75, "Output"]
}, Open  ]],
Cell[109431, 2784, 314, 10, 53, "Text"],
Cell[CellGroupData[{
Cell[109770, 2798, 281, 5, 45, "Input"],
Cell[110054, 2805, 271, 6, 75, "Output"]
}, Open  ]],
Cell[110340, 2814, 199, 3, 51, "Text"],
Cell[CellGroupData[{
Cell[110564, 2821, 225, 5, 75, "Input"],
Cell[110792, 2828, 132, 3, 94, "Output"]
}, Open  ]],
Cell[110939, 2834, 203, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[111167, 2842, 391, 11, 47, "Input"],
Cell[111561, 2855, 350, 9, 82, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111948, 2869, 134, 2, 45, "Input"],
Cell[112085, 2873, 1440, 46, 94, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[113562, 2924, 1129, 37, 94, "Input"],
Cell[114694, 2963, 1041, 35, 94, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[115772, 3003, 563, 17, 90, "Input"],
Cell[116338, 3022, 473, 14, 90, "Output"]
}, Open  ]],
Cell[116826, 3039, 248, 7, 45, "Input"],
Cell[CellGroupData[{
Cell[117099, 3050, 133, 2, 45, "Input"],
Cell[117235, 3054, 947, 32, 128, "Output"]
}, Open  ]],
Cell[118197, 3089, 243, 7, 45, "Input"],
Cell[CellGroupData[{
Cell[118465, 3100, 133, 2, 45, "Input"],
Cell[118601, 3104, 945, 32, 128, "Output"]
}, Open  ]],
Cell[119561, 3139, 290, 8, 45, "Input"],
Cell[CellGroupData[{
Cell[119876, 3151, 133, 2, 45, "Input"],
Cell[120012, 3155, 1002, 33, 128, "Output"]
}, Open  ]],
Cell[121029, 3191, 267, 7, 45, "Input"],
Cell[CellGroupData[{
Cell[121321, 3202, 131, 2, 45, "Input"],
Cell[121455, 3206, 1000, 33, 128, "Output"]
}, Open  ]],
Cell[122470, 3242, 174, 4, 51, "Text"],
Cell[122647, 3248, 570, 16, 102, "Text"],
Cell[123220, 3266, 73, 1, 45, "Input"],
Cell[123296, 3269, 118, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[123439, 3274, 1268, 44, 75, "Input"],
Cell[124710, 3320, 19230, 329, 242, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[143977, 3654, 213, 6, 75, "Input"],
Cell[144193, 3662, 157, 5, 75, "Output"]
}, Open  ]],
Cell[144365, 3670, 485, 11, 88, "Text"],
Cell[CellGroupData[{
Cell[144875, 3685, 218, 5, 47, "Input"],
Cell[145096, 3692, 92, 2, 45, "Output"]
}, Open  ]],
Cell[145203, 3697, 85, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[145313, 3702, 120, 2, 45, "Input"],
Cell[145436, 3706, 70, 1, 45, "Output"]
}, Open  ]],
Cell[145521, 3710, 137, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[145683, 3715, 174, 3, 45, "Input"],
Cell[145860, 3720, 156, 3, 69, "Output"]
}, Open  ]],
Cell[146031, 3726, 163, 3, 51, "Text"],
Cell[CellGroupData[{
Cell[146219, 3733, 346, 10, 47, "Input"],
Cell[146568, 3745, 249, 7, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[146854, 3757, 134, 2, 45, "Input"],
Cell[146991, 3761, 925, 34, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[147953, 3800, 824, 29, 86, "Input"],
Cell[148780, 3831, 698, 26, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149515, 3862, 396, 13, 82, "Input"],
Cell[149914, 3877, 286, 10, 82, "Output"]
}, Open  ]],
Cell[150215, 3890, 217, 6, 45, "Input"],
Cell[CellGroupData[{
Cell[150457, 3900, 135, 2, 45, "Input"],
Cell[150595, 3904, 549, 20, 118, "Output"]
}, Open  ]],
Cell[151159, 3927, 218, 6, 45, "Input"],
Cell[CellGroupData[{
Cell[151402, 3937, 133, 2, 45, "Input"],
Cell[151538, 3941, 549, 20, 118, "Output"]
}, Open  ]],
Cell[152102, 3964, 240, 7, 45, "Input"],
Cell[CellGroupData[{
Cell[152367, 3975, 133, 2, 45, "Input"],
Cell[152503, 3979, 468, 16, 114, "Output"]
}, Open  ]],
Cell[152986, 3998, 218, 6, 45, "Input"],
Cell[CellGroupData[{
Cell[153229, 4008, 131, 2, 45, "Input"],
Cell[153363, 4012, 493, 16, 114, "Output"]
}, Open  ]],
Cell[153871, 4031, 130, 1, 51, "Text"],
Cell[154004, 4034, 934, 25, 110, "Text"],
Cell[154941, 4061, 73, 1, 45, "Input"],
Cell[155017, 4064, 349, 6, 86, "Text"],
Cell[CellGroupData[{
Cell[155391, 4074, 919, 26, 75, "Input"],
Cell[156313, 4102, 359, 9, 254, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[156709, 4116, 332, 10, 85, "Input"],
Cell[157044, 4128, 254, 9, 85, "Output"]
}, Open  ]],
Cell[157313, 4140, 387, 10, 53, "Text"],
Cell[CellGroupData[{
Cell[157725, 4154, 220, 6, 54, "Input"],
Cell[157948, 4162, 143, 4, 54, "Output"]
}, Open  ]],
Cell[158106, 4169, 247, 9, 53, "Text"],
Cell[CellGroupData[{
Cell[158378, 4182, 163, 3, 45, "Input"],
Cell[158544, 4187, 149, 4, 54, "Output"]
}, Open  ]],
Cell[158708, 4194, 137, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[158870, 4199, 257, 6, 54, "Input"],
Cell[159130, 4207, 244, 6, 78, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[159411, 4218, 120, 2, 45, "Input"],
Cell[159534, 4222, 205, 4, 69, "Output"]
}, Open  ]],
Cell[159754, 4229, 434, 8, 120, "Text"],
Cell[CellGroupData[{
Cell[160213, 4241, 344, 10, 47, "Input"],
Cell[160560, 4253, 394, 12, 89, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160991, 4270, 136, 2, 45, "Input"],
Cell[161130, 4274, 2776, 92, 177, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[163943, 4371, 1463, 48, 91, "Input"],
Cell[165409, 4421, 1320, 45, 91, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[166766, 4471, 1462, 48, 91, "Input"],
Cell[168231, 4521, 1320, 45, 91, "Output"]
}, Open  ]],
Cell[169566, 4569, 218, 6, 45, "Input"],
Cell[CellGroupData[{
Cell[169809, 4579, 133, 2, 45, "Input"],
Cell[169945, 4583, 2220, 69, 193, "Output"]
}, Open  ]],
Cell[172180, 4655, 218, 6, 45, "Input"],
Cell[CellGroupData[{
Cell[172423, 4665, 133, 2, 45, "Input"],
Cell[172559, 4669, 2221, 69, 193, "Output"]
}, Open  ]],
Cell[174795, 4741, 240, 7, 45, "Input"],
Cell[CellGroupData[{
Cell[175060, 4752, 131, 2, 45, "Input"],
Cell[175194, 4756, 2171, 67, 193, "Output"]
}, Open  ]],
Cell[177380, 4826, 220, 6, 45, "Input"],
Cell[CellGroupData[{
Cell[177625, 4836, 133, 2, 45, "Input"],
Cell[177761, 4840, 2173, 67, 193, "Output"]
}, Open  ]],
Cell[179949, 4910, 119, 1, 51, "Text"],
Cell[180071, 4913, 636, 19, 102, "Text"],
Cell[180710, 4934, 73, 1, 45, "Input"],
Cell[180786, 4937, 111, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[180922, 4942, 1219, 43, 75, "Input"],
Cell[182144, 4987, 19140, 327, 235, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[201321, 5319, 271, 8, 77, "Input"],
Cell[201595, 5329, 237, 7, 77, "Output"]
}, Open  ]],
Cell[201847, 5339, 540, 11, 53, "Text"],
Cell[CellGroupData[{
Cell[202412, 5354, 357, 9, 75, "Input"],
Cell[202772, 5365, 271, 6, 75, "Output"]
}, Open  ]],
Cell[203058, 5374, 88, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[203171, 5379, 292, 7, 75, "Input"],
Cell[203466, 5388, 402, 11, 79, "Output"]
}, Open  ]],
Cell[203883, 5402, 232, 5, 51, "Text"],
Cell[CellGroupData[{
Cell[204140, 5411, 173, 4, 45, "Input"],
Cell[204316, 5417, 325, 8, 99, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[204678, 5430, 184, 4, 45, "Input"],
Cell[204865, 5436, 249, 6, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[205151, 5447, 121, 2, 45, "Input"],
Cell[205275, 5451, 292, 5, 69, "Output"]
}, Open  ]],
Cell[205582, 5459, 943, 19, 190, "Text"],
Cell[206528, 5480, 869, 24, 145, "Text"],
Cell[207400, 5506, 205, 4, 51, "Text"],
Cell[207608, 5512, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[207706, 5517, 3054, 93, 299, "Input"],
Cell[210763, 5612, 38262, 651, 317, "Output"]
}, Open  ]],
Cell[249040, 6266, 344, 7, 86, "Text"],
Cell[CellGroupData[{
Cell[249409, 6277, 341, 10, 90, "Input"],
Cell[249753, 6289, 342, 12, 91, "Output"]
}, Open  ]],
Cell[250110, 6304, 306, 6, 51, "Text"],
Cell[CellGroupData[{
Cell[250441, 6314, 273, 8, 86, "Input"],
Cell[250717, 6324, 198, 5, 86, "Output"]
}, Open  ]],
Cell[250930, 6332, 177, 2, 51, "Text"],
Cell[CellGroupData[{
Cell[251132, 6338, 172, 4, 45, "Input"],
Cell[251307, 6344, 129, 2, 45, "Output"]
}, Open  ]],
Cell[251451, 6349, 136, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[251612, 6354, 142, 3, 45, "Input"],
Cell[251757, 6359, 254, 6, 75, "Output"]
}, Open  ]],
Cell[252026, 6368, 139, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[252190, 6373, 224, 5, 45, "Input"],
Cell[252417, 6380, 208, 5, 74, "Output"]
}, Open  ]],
Cell[252640, 6388, 386, 7, 86, "Text"]
}
]
*)


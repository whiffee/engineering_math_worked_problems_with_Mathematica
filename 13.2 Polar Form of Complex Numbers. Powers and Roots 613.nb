(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    413592,       9284]
NotebookOptionsPosition[    400066,       8852]
NotebookOutlinePosition[    400454,       8869]
CellTagsIndexPosition[    400411,       8866]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
Note: In this problem set, expressions in green cells match corresponding \
expressions in the text answers.\
\>", "Text",
 Evaluatable->False,
 CellChangeTimes->{{3.769107049796307*^9, 3.7691070715300426`*^9}}],

Cell[BoxData[""], "Input",
 Evaluatable->False,
 CellChangeTimes->{3.7691070486380053`*^9}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7571702327870617`*^9, 3.757170252257174*^9}}],

Cell["\<\
1 - 8 Polar Form
Represent in polar form and graph in the complex plane as in Fig. 325. \
\>", "Text",
 CellChangeTimes->{{3.7571711688222017`*^9, 3.757171191644032*^9}}],

Cell["1.  1 + I", "Text",
 CellChangeTimes->{{3.757171198996615*^9, 3.757171206443634*^9}, 
   3.757171392782682*^9, 3.7571726021977377`*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"z", "=", 
  RowBox[{"1", "+", "\[ImaginaryI]"}]}]], "Input",
 CellChangeTimes->{{3.757173874363883*^9, 3.75717388671417*^9}}],

Cell[BoxData[
 RowBox[{"1", "+", "\[ImaginaryI]"}]], "Output",
 CellChangeTimes->{
  3.757173890042651*^9, 3.757186413682847*^9, {3.7571878449830008`*^9, 
   3.757187863006298*^9}, 3.757187933136771*^9, 3.757189285431706*^9, 
   3.757190685615519*^9, 3.7571908298307943`*^9, 3.757190864114402*^9, 
   3.757190991076748*^9, 3.757191350783126*^9, 3.7571914470584793`*^9, 
   3.757191536202944*^9, 3.757191571212089*^9, 3.7571916261829243`*^9, 
   3.757196030431209*^9, 3.757196104674045*^9, 3.757200031175229*^9, 
   3.757200145952938*^9, 3.757250329519659*^9, 3.7572507156799793`*^9, 
   3.757429269581313*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"ComplexToPolar", "[", "z_", "]"}], "/;", 
    RowBox[{"z", "\[Element]", "Complexes"}]}], ":=", 
   RowBox[{
    RowBox[{"Abs", "[", "z", "]"}], " ", 
    RowBox[{"Exp", "[", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"Arg", "[", "z", "]"}]}], "]"}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.757187109040161*^9, 3.757187109052063*^9}, {
  3.75718749061864*^9, 3.757187492716419*^9}, {3.757191165894586*^9, 
  3.757191171364616*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dd", "=", 
   RowBox[{"Abs", "[", "z", "]"}]}], ";", 
  RowBox[{"ee", "=", 
   RowBox[{"Arg", "[", "z", "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ComplexToPolar", "[", 
   RowBox[{"dd_", ",", "ee_"}], "]"}], ":=", 
  RowBox[{"HoldForm", "[", 
   RowBox[{"dd", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cos", "[", "ee", "]"}], "+", " ", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"Sin", "[", "ee", "]"}]}]}], ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.757190637413149*^9, 3.7571907001920424`*^9}, {
  3.757190770093865*^9, 3.757190815322856*^9}, {3.757190908395389*^9, 
  3.757190952665442*^9}, {3.757191606924159*^9, 3.757191620634631*^9}, {
  3.757429209161139*^9, 3.757429253621538*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComplexToPolar", "[", 
  RowBox[{"dd", ",", "ee"}], "]"}]], "Input",
 CellChangeTimes->{{3.757190711652994*^9, 3.757190717672215*^9}, {
  3.757190849247466*^9, 3.757190881029449*^9}, {3.757190963570223*^9, 
  3.757190967592355*^9}, {3.7571910045201187`*^9, 3.757191041860128*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{
   SqrtBox["2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Cos", "[", 
      FractionBox["\[Pi]", "4"], "]"}], "+", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"Sin", "[", 
       FractionBox["\[Pi]", "4"], "]"}]}]}], ")"}]}],
  HoldForm]], "Output",
 CellChangeTimes->{
  3.7571907186986427`*^9, 3.757190784097039*^9, {3.7571908207993526`*^9, 
   3.757190882329844*^9}, {3.757190957367991*^9, 3.7571909687569942`*^9}, {
   3.75719100750942*^9, 3.757191048429923*^9}, 3.757191360422669*^9, 
   3.757191455154642*^9, 3.757191542451818*^9, 3.7571915773707733`*^9, 
   3.7571916366437063`*^9, 3.7571960403802233`*^9, 3.7571961154376*^9, 
   3.7572000432459373`*^9, 3.757200154534275*^9, 3.757250338585101*^9, {
   3.7572507057147417`*^9, 3.7572507238065147`*^9}, {3.757429215143866*^9, 
   3.757429277305979*^9}},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PolarPlot", "[", 
  RowBox[{
   SqrtBox["2"], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", 
     FractionBox["\[Pi]", "4"], ",", 
     FractionBox["\[Pi]", 
      RowBox[{"4", 
       RowBox[{"(", ".999", ")"}]}]]}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "130"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.757195943029261*^9, 3.757195991520671*^9}, {
  3.757196462625448*^9, 3.757196479856587*^9}, {3.757196516127841*^9, 
  3.757196535366767*^9}, {3.757196826286913*^9, 3.7571969734084682`*^9}, {
  3.757197011663163*^9, 3.757197013079033*^9}, {3.757197445986576*^9, 
  3.757197447856585*^9}, {3.757197519638461*^9, 3.757197528061985*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}}, {}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJwtzXlM03cYBvBfOSbXjBA5K04OWy6RG+T6UTk2hwVbMZM5mSJCtqyyqTi5
BINUmCBUQAU6IGKc1Imgg1Ll7AoDgkGq6ISFoQirAmuzMcbNnm+yN3nz5vPH
8z428cn841oURXGx5DIoMhqa+v9WVhacW19X0zsaZSHETt6Wq2twzNFT54lZ
8R5Lq7CofUqLARfVJswtw4qvHutqwe6KXtW/sMn1CkMduDmjaEgNc528zPXg
rn6z2t9hTlCC6yaY+SursBUOy9ousyF905H9lfAn9kFWHnBs27M76fBWAx3H
3fCD4ahnB+HZf+xK95N+6WS0H3yEVTV8DN4VnWRiCodsPnEqBb5p/3HqX2tq
Opsx0y6EvaQ8TyW84tI7fhU+NBzgdQ+2oObjbsM27VF5l2E9iwsPWuCa9f7s
E3BhoKKpF458btMZCTcb8TePwHnedXxnWEyF7XkHn63ScdGD+2KzR5ZJfryn
bnJVTRtnCSzfZ2joLeVdad2wdofc1Rq29s27cgN24cXVuMJvD1xaPQ/7aCeo
guGoX/bfi4OD234s2AeP2Qt1A+HIgR/GjsITiyv1TLhjftOGk7D7nFv1woqa
TjSWXcqBGSl3X7+AN0YPTZXAZpS4XwprNNXqWniqmV4shQ1y62Ka4F1Nnumn
4bUt7OJuOJz3PJQHO3/+G/sFzPxW1eAKZygiBCqYM8z/ZiOcw3LMX4CVdcfO
Ti+raak1zTDQ0tAy+RNlPzxqPhhtBadmNg1J4BKOxV4nmPnIzzwPDtEV3QyA
fRc+aEiCN0guPo2ETXdWF4XBVK0k7jBseEYot4Prc7mdAvj1l6pybbjF+s5g
Jjzw2Yh0fElNL+m7BxTBo7aBjp3wQ7l/ZjV88gD7lRg2FX7BbIRTfvouKI24
jZckh0+PHp+NheMfdeUr4eIw+YQPHHiXr/cG5uRU7DCDxQLB4TlYpP83c34R
+YbwIzraGpo/qtj3FH6j8u8whV+GWL28D8c8aZvbDk/e2PYRMdNqaxALTtBi
Sxvh8vhzucT3ZZ5lDXC7OtiMDZfpc3n18K2lDl8HOMs1q68O/lPZleZE/he8
ktXA8YUKaie8Kv7Dgdiu3n4PsUgye60a/v7xBRGxUftiShXcohdu6wbv7TH2
EMOFyd2h7vDMIY7kGly/3i30hJmhH1oSzxiyBolb2dy8q/CEmdDcC+a+PZhY
Bi85RNwmfsj92rYEVgT19HnDydvOiK7AP9MsEx+4VJNOEaeGCD8l9si/OFYM
GwVHTBNLeIVc4nf+tzx94RLzktYiOMvnvQzimZHrzsQDbokK4ubKqorLsNKx
x8gP/g8ism1j
      "]]}}, {}, {{{}, {}, {}, {}}, {}}},
  Axes->True,
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->130,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRange->{{Automatic, Automatic}, {Automatic, Automatic}},
  PlotRangeClipping->True,
  PlotRangePadding->Scaled[0.02],
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.757195992516768*^9, 3.7571960430275908`*^9, 3.757196118095512*^9, 
   3.75719648253561*^9, {3.7571965183540916`*^9, 3.757196536138691*^9}, {
   3.757196853247414*^9, 3.757196974694228*^9}, 3.757197014350811*^9, 
   3.7571974486567717`*^9, 3.75719752985504*^9, 3.7572000461521473`*^9, 
   3.7572001576662807`*^9, 3.7572503414890003`*^9, 3.7572507271212378`*^9}]
}, Open  ]],

Cell["\<\
An extra plot thrown in (above) just to show something in polar coordinates.\
\>", "Text",
 CellChangeTimes->{{3.7571994327349987`*^9, 3.7571994494302673`*^9}, {
  3.75720017968743*^9, 3.757200182582095*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"FromPolarCoordinates", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"dd", ",", "ee"}], "}"}], "}"}], "]"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Re", ",", "I"}], "}"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{
       "\"\<r=\!\(\*SqrtBox[\(2\)]\),\[Theta]=\!\(\*FractionBox[\(\[Pi]\), \
\(4\)]\)\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"1.1", ",", "0.45"}], "}"}]}], "]"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.757198950183412*^9, 3.757199030068328*^9}, {
  3.7571991235949793`*^9, 3.7571991366007433`*^9}, {3.757199842100192*^9, 
  3.757199857601056*^9}, {3.757199905953361*^9, 3.757199949711583*^9}, {
  3.757250220140872*^9, 3.757250275639916*^9}, {3.75725067509765*^9, 
  3.757250679925727*^9}, {3.757250763538228*^9, 3.7572507839032173`*^9}, {
  3.7572508874023123`*^9, 3.757251023679823*^9}, {3.7572512579780807`*^9, 
  3.757251264968153*^9}, {3.7572515798028383`*^9, 3.7572515869554*^9}, {
  3.757251626138627*^9, 3.757251665254353*^9}, {3.7572518659373837`*^9, 
  3.757251896783104*^9}, {3.757251949885213*^9, 3.757251959187086*^9}, {
  3.757252342820525*^9, 3.757252353452405*^9}, {3.757252387618568*^9, 
  3.757252466780848*^9}, {3.75725250363512*^9, 3.757252504459044*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[{{1., 1.}, {1., 1.}}]}, {}}, {}},
  Axes->{True, True},
  AxesLabel->{
    FormBox["Re", TraditionalForm], 
    FormBox["\[ImaginaryI]", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    RGBColor[1, 0, 0], 
    LineBox[{{0, 0}, {1, 1}}], 
    InsetBox[
     FormBox[
     "\"r=\\!\\(\\*SqrtBox[\\(2\\)]\\),\[Theta]=\\!\\(\\*FractionBox[\\(\[Pi]\
\\), \\(4\\)]\\)\"", TraditionalForm], {1.1, 0.45}]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{},
  PlotRange->{{0, 2.}, {0, 2.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.757251884079051*^9, 3.757251897914372*^9}, 
   3.757251960476297*^9, {3.757252345978352*^9, 3.757252354740039*^9}, 
   3.757252389014852*^9, {3.757252432003474*^9, 3.75725246759615*^9}, 
   3.757252506970317*^9}]
}, Open  ]],

Cell["\<\
I reluctantly convert away from polar coordinates to cartesian, due to a \
shortcoming in Mathematica plotting capabilities, or to my ignorance.\
\>", "Text",
 CellChangeTimes->{{3.75719945626199*^9, 3.757199546314927*^9}, {
  3.757249610592032*^9, 3.757249643591764*^9}, {3.757255880832312*^9, 
  3.757255881733576*^9}, {3.7691064378228188`*^9, 3.769106483762487*^9}}],

Cell["3.  2 I, -2 I", "Text",
 CellChangeTimes->{{3.757171216540893*^9, 3.757171236314603*^9}, 
   3.7571713962292356`*^9, 3.757172612803979*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"z", "=", 
  RowBox[{"2", "\[ImaginaryI]"}]}]], "Input",
 CellChangeTimes->{{3.757192011156946*^9, 3.7571920132593603`*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", "\[ImaginaryI]"}]], "Output",
 CellChangeTimes->{3.757192015531804*^9, 3.757199210157031*^9, 
  3.757252623467641*^9, 3.7574293377597027`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"dd", "=", 
   RowBox[{"Abs", "[", "z", "]"}]}], ";", 
  RowBox[{"ee", "=", 
   RowBox[{"Arg", "[", "z", "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ComplexToPolar", "[", 
   RowBox[{"dd_", ",", "ee_"}], "]"}], ":=", 
  RowBox[{"HoldForm", "[", 
   RowBox[{"dd", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cos", "[", "ee", "]"}], "+", " ", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"Sin", "[", "ee", "]"}]}]}], ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.757429324501533*^9, 3.757429325036413*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComplexToPolar", "[", 
  RowBox[{"dd", ",", "ee"}], "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Cos", "[", 
      FractionBox["\[Pi]", "2"], "]"}], "+", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"Sin", "[", 
       FractionBox["\[Pi]", "2"], "]"}]}]}], ")"}]}],
  HoldForm]], "Output",
 CellChangeTimes->{3.7571920499344187`*^9, 3.7571992221193933`*^9, 
  3.757252632668388*^9, 3.7574293461123667`*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"FromPolarCoordinates", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"dd", ",", "ee"}], "}"}], "}"}], "]"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", ".7"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Re", ",", "I"}], "}"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "2"}], "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{
       "\"\<r=2,\[Theta]=\!\(\*FractionBox[\(\[Pi]\), \(2\)]\)\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0.5", ",", "1"}], "}"}]}], "]"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7571992510390673`*^9, 3.757199270228286*^9}, {
  3.757252609496223*^9, 3.757252617718326*^9}, {3.757252655669282*^9, 
  3.757252717727785*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[{{0., 2.}, {0., 2.}}]}, {}}, {}},
  AspectRatio->0.7,
  Axes->{True, True},
  AxesLabel->{
    FormBox["Re", TraditionalForm], 
    FormBox["\[ImaginaryI]", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    RGBColor[1, 0, 0], 
    LineBox[{{0, 0}, {0, 2}}], 
    InsetBox[
     FormBox[
     "\"r=2,\[Theta]=\\!\\(\\*FractionBox[\\(\[Pi]\\), \\(2\\)]\\)\"", 
      TraditionalForm], {0.5, 1}]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{},
  PlotRange->{{-1., 1.}, {0, 4.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.757199234296636*^9, 3.757199271297213*^9}, {
  3.757252635710496*^9, 3.757252718902788*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"z", "=", 
  RowBox[{
   RowBox[{"-", "2"}], "\[ImaginaryI]"}]}]], "Input",
 CellChangeTimes->{3.7571921119976463`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}]], "Output",
 CellChangeTimes->{3.757192113205915*^9, 3.757192158248398*^9, 
  3.757192195178309*^9, 3.757199298593762*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"dd", "=", 
   RowBox[{"Abs", "[", "z", "]"}]}], ";", 
  RowBox[{"ee", "=", 
   RowBox[{"Arg", "[", "z", "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ComplexToPolar", "[", 
   RowBox[{"dd_", ",", "ee_"}], "]"}], ":=", 
  RowBox[{"Hold", "[", 
   RowBox[{"dd", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cos", "[", "ee", "]"}], "+", " ", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"Sin", "[", "ee", "]"}]}]}], ")"}]}], "]"}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComplexToPolar", "[", 
  RowBox[{"dd", ",", "ee"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Hold", "[", 
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"-", 
       FractionBox["\[Pi]", "2"]}], "]"}], "+", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"-", 
        FractionBox["\[Pi]", "2"]}], "]"}]}]}], ")"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.757192140302375*^9, 3.7571921671689243`*^9}, 
   3.75719220507862*^9, 3.757199307289934*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"FromPolarCoordinates", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"dd", ",", "ee"}], "}"}], "}"}], "]"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", ".7"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Re", ",", "I"}], "}"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "2"}], "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{
       "\"\<r=2,\[Theta]=\!\(\*FractionBox[\(\[Pi]\), \(2\)]\)\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0.5", ",", "1"}], "}"}]}], "]"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.757199316292528*^9, 3.75719931901068*^9}, {
   3.757252750935218*^9, 3.757252756231189*^9}, 3.757252794631523*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[{{0., 2.}, {0., 2.}}]}, {}}, {}},
  AspectRatio->0.7,
  Axes->{True, True},
  AxesLabel->{
    FormBox["Re", TraditionalForm], 
    FormBox["\[ImaginaryI]", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    RGBColor[1, 0, 0], 
    LineBox[{{0, 0}, {0, 2}}], 
    InsetBox[
     FormBox[
     "\"r=2,\[Theta]=\\!\\(\\*FractionBox[\\(\[Pi]\\), \\(2\\)]\\)\"", 
      TraditionalForm], {0.5, 1}]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{},
  PlotRange->{{-1., 1.}, {0, 4.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.757199310734376*^9, 3.757199319779194*^9}, 
   3.75725275822114*^9, 3.757252796028619*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"5.", " ", 
  FractionBox[
   RowBox[{
    SqrtBox["2"], "+", 
    RowBox[{"\[ImaginaryI]", "/", "3"}]}], 
   RowBox[{
    RowBox[{"-", 
     SqrtBox["8"]}], "-", 
    RowBox[{"2", " ", 
     RowBox[{"\[ImaginaryI]", "/", "3"}]}]}]]}]], "Text",
 CellChangeTimes->{{3.7571712407485437`*^9, 3.757171301376647*^9}, 
   3.7571726265517*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"z", "=", 
  FractionBox[
   RowBox[{
    SqrtBox["2"], "+", 
    RowBox[{"\[ImaginaryI]", "/", "3"}]}], 
   RowBox[{
    RowBox[{"-", 
     SqrtBox["8"]}], "-", 
    RowBox[{"2", " ", 
     RowBox[{"\[ImaginaryI]", "/", "3"}]}]}]]}]], "Input",
 CellChangeTimes->{{3.757192292361145*^9, 3.7571923034760923`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   FractionBox["\[ImaginaryI]", "3"], "+", 
   SqrtBox["2"]}], 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"2", " ", "\[ImaginaryI]"}], "3"]}], "-", 
   RowBox[{"2", " ", 
    SqrtBox["2"]}]}]]], "Output",
 CellChangeTimes->{3.7571923066141043`*^9, 3.7571923644076138`*^9, 
  3.757199350657991*^9, 3.757252822854884*^9, 3.757429375735063*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"dd", "=", 
   RowBox[{"Abs", "[", "z", "]"}]}], ";", 
  RowBox[{"ee", "=", 
   RowBox[{"Arg", "[", "z", "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ComplexToPolar", "[", 
   RowBox[{"dd_", ",", "ee_"}], "]"}], ":=", 
  RowBox[{"HoldForm", "[", 
   RowBox[{"dd", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cos", "[", "ee", "]"}], "+", " ", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"Sin", "[", "ee", "]"}]}]}], ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.757429371212902*^9, 3.7574293717315073`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComplexToPolar", "[", 
  RowBox[{"dd", ",", "ee"}], "]"}]], "Input",
 CellChangeTimes->{{3.757192343392088*^9, 3.757192356339498*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Cos", "[", "\[Pi]", "]"}], "+", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"Sin", "[", "\[Pi]", "]"}]}]}], ")"}]}],
  HoldForm]], "Output",
 CellChangeTimes->{{3.7571923585216722`*^9, 3.75719237379885*^9}, 
   3.757199360925243*^9, 3.7572528310327682`*^9, 3.757429384071987*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"FromPolarCoordinates", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"dd", ",", "ee"}], "}"}], "}"}], "]"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", ".7"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Re", ",", "I"}], "}"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.5"}], ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<r=-0.5,\[Theta]=\[Pi]\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.3"}], ",", "0.3"}], "}"}]}], "]"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7572528420668707`*^9, 3.757252982969759*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[{{-0.5, 0.}, {-0.5, 0.}}]}, {}}, {}},
  AspectRatio->0.7,
  Axes->{True, True},
  AxesLabel->{
    FormBox["Re", TraditionalForm], 
    FormBox["\[ImaginaryI]", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    RGBColor[1, 0, 0], 
    LineBox[{{0, 0}, {-0.5, 0}}], 
    InsetBox[
     FormBox["\"r=-0.5,\[Theta]=\[Pi]\"", TraditionalForm], {-0.3, 0.3}]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{},
  PlotRange->{{-1., 0}, {-1., 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7571993648154907`*^9, {3.757252836718545*^9, 3.75725284688645*^9}, {
   3.757252880575485*^9, 3.7572529840336323`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"7.", "  ", "1"}], "+", 
  RowBox[{
   FractionBox["1", "2"], "\[Pi]", " ", "\[ImaginaryI]"}]}]], "Text",
 CellChangeTimes->{{3.757171307337484*^9, 3.7571713425512867`*^9}, 
   3.757171399046934*^9, 3.7571726304770393`*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"z", "=", 
  RowBox[{"1", "+", 
   RowBox[{
    FractionBox["1", "2"], "\[Pi]", " ", "\[ImaginaryI]"}]}]}]], "Input",
 CellChangeTimes->{{3.757192472833736*^9, 3.75719248003154*^9}}],

Cell[BoxData[
 RowBox[{"1", "+", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "2"]}]], "Output",
 CellChangeTimes->{3.757199385742477*^9, 3.7574294145745*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"dd", "=", 
   RowBox[{"Abs", "[", "z", "]"}]}], ";", 
  RowBox[{"ee", "=", 
   RowBox[{"Arg", "[", "z", "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ComplexToPolar", "[", 
   RowBox[{"dd_", ",", "ee_"}], "]"}], ":=", 
  RowBox[{"HoldForm", "[", 
   RowBox[{"dd", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cos", "[", "ee", "]"}], "+", " ", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"Sin", "[", "ee", "]"}]}]}], ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7574294106841183`*^9, 3.757429411178462*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComplexToPolar", "[", 
  RowBox[{"dd", ",", "ee"}], "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{
   SqrtBox[
    RowBox[{"1", "+", 
     FractionBox[
      SuperscriptBox["\[Pi]", "2"], "4"]}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"ArcTan", "[", 
       FractionBox["\[Pi]", "2"], "]"}], "]"}], "+", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"ArcTan", "[", 
        FractionBox["\[Pi]", "2"], "]"}], "]"}]}]}], ")"}]}],
  HoldForm]], "Output",
 CellChangeTimes->{3.757192513791234*^9, 3.757192549416606*^9, 
  3.757199395448153*^9, 3.757429424791194*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"FromPolarCoordinates", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"dd", ",", "ee"}], "}"}], "}"}], "]"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", ".7"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Re", ",", "I"}], "}"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.5"}], ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<r=-0.5,\[Theta]=\[Pi]\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.3"}], ",", "0.3"}], "}"}]}], "]"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.757253111221582*^9, 3.757253148116488*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[{{-0.5, 0.}, {-0.5, 0.}}]}, {}}, {}},
  AspectRatio->0.7,
  Axes->{True, True},
  AxesLabel->{
    FormBox["Re", TraditionalForm], 
    FormBox["\[ImaginaryI]", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    RGBColor[1, 0, 0], 
    LineBox[{{0, 0}, {-0.5, 0}}], 
    InsetBox[
     FormBox["\"r=-0.5,\[Theta]=\[Pi]\"", TraditionalForm], {-0.3, 0.3}]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{},
  PlotRange->{{-1., 0}, {-1., 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.75719939963361*^9, {3.7572531235947037`*^9, 3.757253149916543*^9}}]
}, Open  ]],

Cell["\<\
9 - 14 Principal Argument
Determine the principal value of the argument and graph it as in Fig. 325.\
\>", "Text",
 CellChangeTimes->{{3.7571714387418833`*^9, 3.7571714846262703`*^9}, {
  3.757173031441415*^9, 3.757173033029883*^9}}],

Cell["9.  - 1 + I", "Text",
 CellChangeTimes->{{3.757171493996971*^9, 3.75717150202592*^9}, 
   3.757172634828842*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[TextData[{
 "In Mathematica the ",
 StyleBox["Arg", "Input"],
 " function always returns a value between -\[Pi] and \[Pi], so it is okay to \
just barge ahead with the calculation."
}], "Text",
 CellChangeTimes->{{3.757254020691325*^9, 3.7572540662636137`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"z", "=", 
  RowBox[{
   RowBox[{"-", "1"}], "+", "\[ImaginaryI]"}]}]], "Input",
 CellChangeTimes->{{3.757253851328258*^9, 3.757253862681432*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1"}], "+", "\[ImaginaryI]"}]], "Output",
 CellChangeTimes->{3.757253864077347*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dd", "=", 
  RowBox[{"Abs", "[", "z", "]"}]}]], "Input",
 CellChangeTimes->{{3.757254128082114*^9, 3.7572541322536488`*^9}}],

Cell[BoxData[
 SqrtBox["2"]], "Output",
 CellChangeTimes->{3.757254132845531*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ee", "=", 
  RowBox[{"Arg", "[", "z", "]"}]}]], "Input",
 CellChangeTimes->{{3.757253869199244*^9, 3.7572538755951967`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"3", " ", "\[Pi]"}], "4"]], "Output",
 CellChangeTimes->{3.757253876379711*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"FromPolarCoordinates", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"dd", ",", "ee"}], "}"}], "}"}], "]"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Re", ",", "I"}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{
       "\"\<r=\!\(\*SqrtBox[\(2\)]\),\[Theta]=\!\(\*FractionBox[\(3  \[Pi]\), \
\(4\)]\)\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.1"}], ",", "0.5"}], "}"}]}], "]"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.757254179060452*^9, 3.7572541868257523`*^9}, {
  3.757254217432342*^9, 3.757254324378334*^9}, {3.757254384592827*^9, 
  3.757254406005871*^9}, {3.757254609053261*^9, 3.7572547361403112`*^9}, {
  3.757254811185814*^9, 3.757254908122908*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[{{-1., 1.}, {-1., 1.}}]}, {}}, {}},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{
    FormBox["Re", TraditionalForm], 
    FormBox["\[ImaginaryI]", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    RGBColor[1, 0, 0], 
    LineBox[{{0, 0}, {-1, 1}}], 
    InsetBox[
     FormBox[
     "\"r=\\!\\(\\*SqrtBox[\\(2\\)]\\),\[Theta]=\\!\\(\\*FractionBox[\\(3  \
\[Pi]\\), \\(4\\)]\\)\"", TraditionalForm], {-1.1, 0.5}]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{},
  PlotRange->{{-2., 0}, {0, 2.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.757254151505056*^9, 3.7572541884786873`*^9, 3.757254218806396*^9, {
   3.757254253573945*^9, 3.7572542770292892`*^9}, {3.75725431019363*^9, 
   3.7572543255267277`*^9}, {3.757254387706225*^9, 3.7572544070139627`*^9}, {
   3.757254614519945*^9, 3.7572546376289*^9}, {3.757254680086972*^9, 
   3.7572547126135178`*^9}, {3.757254816385418*^9, 3.757254845553141*^9}, {
   3.757254891014057*^9, 3.7572549089412193`*^9}}]
}, Open  ]],

Cell["11.  3 \[PlusMinus] 4 I", "Text",
 CellChangeTimes->{{3.757171505291871*^9, 3.757171527976734*^9}, 
   3.7571726405005198`*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{
  RowBox[{"z1", "=", 
   RowBox[{"3", "+", 
    RowBox[{"4", "\[ImaginaryI]"}]}]}], ";", " ", 
  RowBox[{"z2", "=", 
   RowBox[{"3", "-", 
    RowBox[{"4", "\[ImaginaryI]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7572549470207043`*^9, 3.757254949792201*^9}, {
  3.757255013420766*^9, 3.757255049331005*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dd", "=", 
  RowBox[{"Abs", "[", "z1", "]"}]}]], "Input",
 CellChangeTimes->{3.7572550741855917`*^9}],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.757255075867405*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ee", "=", 
  RowBox[{"Arg", "[", "z1", "]"}]}]], "Input",
 CellChangeTimes->{{3.757255079663782*^9, 3.7572550862028103`*^9}}],

Cell[BoxData[
 RowBox[{"ArcTan", "[", 
  FractionBox["4", "3"], "]"}]], "Output",
 CellChangeTimes->{3.75725508738374*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dd2", "=", 
  RowBox[{"Abs", "[", "z2", "]"}]}]], "Input",
 CellChangeTimes->{{3.757255091339252*^9, 3.757255100401596*^9}}],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.757255101118021*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ee2", "=", 
  RowBox[{"Arg", "[", "z2", "]"}]}]], "Input",
 CellChangeTimes->{{3.757255103685083*^9, 3.757255112840765*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"ArcTan", "[", 
   FractionBox["4", "3"], "]"}]}]], "Output",
 CellChangeTimes->{3.7572551138172092`*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"FromPolarCoordinates", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"dd", ",", "ee"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"dd2", ",", "ee2"}], "}"}]}], "}"}], "]"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Re", ",", "I"}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", 
           RowBox[{"-", "4"}]}], "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{
       "\"\<r=5,\[Theta]=ArcTan(\!\(\*FractionBox[\(4\), \(3\)]\))\>\"", ",", 
        
        RowBox[{"{", 
         RowBox[{"4", ",", "2"}], "}"}]}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{
       "\"\<r=5,\[Theta]=-ArcTan(\!\(\*FractionBox[\(4\), \(3\)]\))\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", 
          RowBox[{"-", "2"}]}], "}"}]}], "]"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.75725515775885*^9, 3.757255206028319*^9}, {
  3.757255260057088*^9, 3.757255284702951*^9}, {3.757255323950365*^9, 
  3.757255326236402*^9}, {3.757255370467969*^9, 3.757255474476572*^9}, {
  3.757255575600792*^9, 3.7572556965762167`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[{{3., 4.}, {3., -4.}}]}, {}}, {}},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{
    FormBox["Re", TraditionalForm], 
    FormBox["\[ImaginaryI]", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    RGBColor[1, 0, 0], 
    LineBox[{{0, 0}, {3, 4}}], 
    LineBox[{{0, 0}, {3, -4}}], 
    InsetBox[
     FormBox[
     "\"r=5,\[Theta]=ArcTan(\\!\\(\\*FractionBox[\\(4\\), \\(3\\)]\\))\"", 
      TraditionalForm], {4, 2}], 
    InsetBox[
     FormBox[
     "\"r=5,\[Theta]=-ArcTan(\\!\\(\\*FractionBox[\\(4\\), \\(3\\)]\\))\"", 
      TraditionalForm], {4, -2}]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{},
  PlotRange->{{0, 6.}, {-4., 4.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7572552078386517`*^9, 3.757255286151523*^9, 3.757255327772941*^9, {
   3.7572553810270433`*^9, 3.7572554752939587`*^9}, {3.757255600139654*^9, 
   3.7572556146050797`*^9}, 3.75725566342583*^9, 3.75725569783366*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"13.", "  ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "20"]}]], "Text",
 CellChangeTimes->{{3.757171532035077*^9, 3.757171546360124*^9}, 
   3.757172644532406*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"z", "=", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "20"]}]], "Input",
 CellChangeTimes->{{3.75725601302948*^9, 3.757256015687109*^9}, {
  3.7572560654297132`*^9, 3.7572561168801327`*^9}, {3.757256178750888*^9, 
  3.7572561896287413`*^9}, {3.757256223923048*^9, 3.757256224178802*^9}}],

Cell[BoxData[
 RowBox[{"-", "1024"}]], "Output",
 CellChangeTimes->{
  3.7572560180860987`*^9, {3.757256068121385*^9, 3.757256118128832*^9}, 
   3.75725619090346*^9, 3.757256225044594*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dd", "=", 
  RowBox[{"Abs", "[", "z", "]"}]}]], "Input",
 CellChangeTimes->{{3.757256275932678*^9, 3.757256283464905*^9}}],

Cell[BoxData["1024"], "Output",
 CellChangeTimes->{3.757256284289064*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ee", "=", 
  RowBox[{"Arg", "[", "z", "]"}]}]], "Input",
 CellChangeTimes->{{3.757256286755308*^9, 3.7572562918722773`*^9}}],

Cell[BoxData["\[Pi]"], "Output",
 CellChangeTimes->{3.757256293546133*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"FromPolarCoordinates", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"dd", ",", "ee"}], "}"}], "}"}], "]"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Re", ",", "I"}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1024"}], ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<r=1024,\[Theta]=\[Pi]\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "600"}], ",", "0.2"}], "}"}]}], "]"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.757256376084161*^9, 3.757256439079022*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{-1024., 0.}, {-1024., 0.}}]}, {}}, {}},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{
    FormBox["Re", TraditionalForm], 
    FormBox["\[ImaginaryI]", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    RGBColor[1, 0, 0], 
    LineBox[{{0, 0}, {-1024, 0}}], 
    InsetBox[
     FormBox["\"r=1024,\[Theta]=\[Pi]\"", TraditionalForm], {-600, 0.2}]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{},
  PlotRange->{{-2048., 0}, {-1., 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.757256392579126*^9, 3.757256440313699*^9}}]
}, Open  ]],

Cell["15 - 18 Conversion to x + \[ImaginaryI]y", "Text",
 CellChangeTimes->{{3.757171549449871*^9, 3.757171554879949*^9}, {
  3.75717163176821*^9, 3.757171658732245*^9}}],

Cell[BoxData[
 RowBox[{"15.", "  ", "3", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{
      FractionBox["1", "2"], "\[Pi]"}], "]"}], " ", "-", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{
       FractionBox["1", "2"], "\[Pi]"}], "]"}]}]}], ")"}]}]], "Text",
 CellChangeTimes->{{3.757171664556793*^9, 3.757171736481152*^9}, 
   3.757172652084333*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"z", "=", 
  RowBox[{"3", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{
       FractionBox["1", "2"], "\[Pi]"}], "]"}], " ", "-", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        FractionBox["1", "2"], "\[Pi]"}], "]"}]}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.757256563453246*^9, 3.757256565329112*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "3"}], " ", "\[ImaginaryI]"}]], "Output",
 CellChangeTimes->{3.757256567343424*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"17.", "  ", 
  SqrtBox["8"], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{
      FractionBox["1", "4"], "\[Pi]"}], "]"}], "+", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{
       FractionBox["1", "4"], "\[Pi]"}], "]"}]}]}], ")"}]}]], "Text",
 CellChangeTimes->{{3.757171740978903*^9, 3.7571718005516977`*^9}, 
   3.757172658683943*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"z", "=", 
  RowBox[{
   SqrtBox["8"], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{
       FractionBox["1", "4"], "\[Pi]"}], "]"}], "+", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        FractionBox["1", "4"], "\[Pi]"}], "]"}]}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.757256584531417*^9, 3.757256591887652*^9}}],

Cell[BoxData[
 RowBox[{"2", "+", 
  RowBox[{"2", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.757256593818349*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["\<\
As can be seen from the two cells above, Mathematica does this section \
through automatic simplification.\
\>", "Text",
 CellChangeTimes->{{3.7572566194937973`*^9, 3.757256655578689*^9}}],

Cell["\<\
21 - 27 Roots
Find and graph all roots in the complex plane.\
\>", "Text",
 CellChangeTimes->{{3.75717233756612*^9, 3.757172359396394*^9}}],

Cell[BoxData[
 RowBox[{"21.", "  ", 
  RadicalBox[
   RowBox[{"1", "+", "\[ImaginaryI]"}], "3"]}]], "Text",
 CellChangeTimes->{{3.7571723627101393`*^9, 3.7571724509615707`*^9}, {
  3.7571726635562763`*^9, 3.7571726735711737`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pts", "=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Re", "@", "#"}], ",", 
       RowBox[{"Im", "@", "#"}]}], "}"}], "&"}], "/@", 
    RowBox[{"(", 
     RowBox[{"x", "/.", 
      RowBox[{"Solve", "[", 
       RowBox[{
        SuperscriptBox["x", "3"], "\[Equal]", 
        RowBox[{"1", "+", "\[ImaginaryI]"}]}], "]"}]}], ")"}]}], 
   ")"}]}]], "Input",
 CellChangeTimes->{{3.757256687965163*^9, 3.757256702254434*^9}, {
  3.757256786476321*^9, 3.7572568132527514`*^9}, {3.75725705628646*^9, 
  3.757257077216865*^9}, {3.75725792021137*^9, 3.757257943025085*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
       RowBox[{"1", "/", "3"}]], "]"}], ",", 
     RowBox[{"Im", "[", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
       RowBox[{"1", "/", "3"}]], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"1", "/", "3"}]]}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
        RowBox[{"1", "/", "3"}]]}], "]"}], ",", 
     RowBox[{"Im", "[", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"1", "/", "3"}]]}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
        RowBox[{"1", "/", "3"}]]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"2", "/", "3"}]], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
        RowBox[{"1", "/", "3"}]]}], "]"}], ",", 
     RowBox[{"Im", "[", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"2", "/", "3"}]], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
        RowBox[{"1", "/", "3"}]]}], "]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.757256815756947*^9, 3.757257078617846*^9, {3.7572579245388327`*^9, 
   3.757257944283794*^9}, 3.757259637982738*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ContourPlot", "[", 
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{
       SuperscriptBox["x", "3"], "-", 
       RowBox[{"(", 
        RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
     RowBox[{"Contours", "\[Rule]", "15"}]}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Graphics", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"Text", "[", 
               RowBox[{"#", ",", "#"}], "]"}], ",", "11"}], "]"}], "&"}], "/@",
            "#"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Opacity", "[", ".5", "]"}], ",", "Orange", ",", 
           RowBox[{"Thickness", "[", ".01", "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Arrow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", "#"}], "}"}], "]"}], 
             "&"}], "/@", "#"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Red", ",", 
           RowBox[{"PointSize", "[", ".02", "]"}], ",", 
           RowBox[{"Point", "@", "#"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"Axes", "\[Rule]", "True"}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"PlotRangePadding", "\[Rule]", "1"}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], "&"}], "@", 
    "pts"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.75725724007579*^9, 3.757257253057589*^9}, {
   3.757259520479412*^9, 3.757259537148672*^9}, 3.757259611220254*^9}],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJykvXd4VUX3v51CAgkhQUVFLFRpKoqiIiI5oEiXJoo0RRGkKgiCqIhgQ6WI
gg07IiIoRQEpJoJgATWAFEF6b9IhJAFen7PO/dnfs/Lket7r+uWfnfus2Wv2
zF7T18wu++CjrR6Oi4mJ+f3imJj/XO2veCbXv2f33jC7d1Hx3P/ghkTxmxUa
ja3QKE68ORw+NwMeH5YfFb8b5m1iu2YtgF8xeTo8yu4XrzX94jEWfwj+xp5P
vM6eXxy5elY6/ZX0wqQXJr0w6YVJb3Q+Zi2ASS9MemHSC5NemPTCpNe9N8/5
0gX7K+mFSS9MemHSG20nWQtg0guTXpj0wqQXJr0w6XV26Tnfe/Ppgv2V9MKk
Fya90eUgawFMemHSC5NemPTCpBcmva7cec5nl/69+XTB/kp6YdIbXc6zFsCk
Fya9MOmFSS9MemHS6+oVz/nKnbdL/958umB/Jb3R9VjWApj0wqQXJr0w6YVJ
L0x6Xb3pOV+94sudt0v/3ny6YH8lvTDphUkvTHph0guTXpj0unbBc75609cr
vtx5u/TvzacL9tfo9ihrQXR7lLUguj3KWhDdHmUtiG6PshZEt0dq9zznaxd8
venrFV/uvF369+bTBfsr6YVJL0x6YdILk17XrnvO1+75dsHXm75e8eXO26V/
bz5dsL+SXpj0wqQXJr2u3+I5X7vu2z3fLvh609crvtx5u/TvzacL9lfSC5Ne
mPS6fpnnfP0W3677ds+3C77e9PWKL3feLv178+mC/ZX0wqTX9Ts95+uX+X6L
b9d9u+fbBV9v+nrFlztvl/69+XTB/kp6Xb/ac75+p++X+X6Lb9d9u+fbBV9v
+nrFlztvl/69+XTB/kp6CxpH+H6274f6fprvx/h23reDrl3IV4/6esaXQ2+n
/j36dPprn/8En10skyvph+eF9Z3MgLeH9e3Px9z3Sfh5VkoOI19l4dORzzT9
+Zjwvez3kHu+kH++xmP/E1GSngcmfpj4YeKD0VfxP7eNLSR9MPpg9MHog9EX
GXtLH4w+GH0w+mD0cUUfjD4YfTD6CtLjr+iD0Qejr6Dn8Hr8FX0w+nw6hhkr
HphwMPpg9ME+X3y6/HP5K/oKylefLz5dXo+/oi/vXPhP+mD0weiD0QOjr5zZ
Ywh9MPpg9MHog9F3p5UX6YPRB6MPRh9MOaac+3JPfDDxwcTn5dQTrv7R8xCe
54GRE97VRyHC+auvl0gH9T+/U//DLj71ewvKF/RRX6EP5n6Y8NRHhIcJDxOe
+obwMOFhwvOeCA8THiY874nwMOFhwvMeCQ8THiY85Z3wMOFhwvMeCA8THiY8
dkF4mPAw4SmPhIcJDxOe8kZ4mPAw4SlPhIcJ78sb9sr92Bn3w9zv7dyXT/pJ
vDeY9wKTjzD5BKOPfhb6YPTB6IPRB6OPfhr6YPTB6IPRB6OPfh76YPTB6IPR
BxdULrzdezv1dlhQOfTlzJcjb/fertFn7z1rQXT9mrUgun7NWhBdn2UtiK4/
sxagj34u+mD0weiD0Qf7esbXI76e8OXal1v00c9GH4w+GH0w+mD00U9HH4w+
GH0w+mD00c9HH4w+GH0w+mD0MU5AH4w+GH0w+uDvw7wr48pw/ZSSmR2u1g6l
w8hjw/ZQRHIY+cawvnjJYeT9wvXPmQzkMPLK4fiOSw4j54rc/z4znO5FksPI
l4WfZ0M6ctjr9Vfkd4Tr49P6HUbeIMyxIeQw8p7h9CZIDiMfHX7eZMnhQuF8
Pqz3U8byRe8H+RsWXvkNI/fvDzn6PBOe+x+155V+GLl//8jR55nw3N/E8kv6
YeTefpCjzzPhub+pvS/ZA4zc2x9y9HkmPPdzRX9Bv6Of39Hn2evZb/YqPTBy
b//I0eeZ8MpfY8ULI/flB7ny2zHhuf8r0yv9MHJf7pCjz3NB+Yh+n6++/CIv
6Ep47u9h9iT9MHJf/pGjzzPhuf8vKw+qD2Dkvv5Ajj7PhOf+M+H7Cks/jNzX
P8jR59nXT9a/TZF+GH0w98O049RnMPUPTH0BU75hyiPMc6jfELF3GPuEeU6Y
9w/zvmDyFyY/5oTVpmZy5TlgyqFn628Vz2ScQ7+ffhNMOeB+nhsmfz2j36JL
Dfn4qf+Jn/Eo8fvxKuG5n/qd+xmfcr8fvxKe+6m/uZ/xKvf78SzhuZ/62c8b
FdTvJLyvR/28le/3cr+vl7n6eS7fT+Z+fx/1J/dz5X4/HiY892MXfl7N98u5
n/C+XfDzcL4fz/2+XaF+437Gx9zvx8+E537qL+5nvMz9fjxNeO6nfuJ+xs/c
78fXhKccUC7Q5+sz5OhnPI1+GHmkvLnxf1Afos9fKae+/uB37A45dgnzXqlP
YcorTP0KUx5h6luY8gZT/8KUJ5j62LfzBfUDvB1TXyu+iL3D1N+wv/6vfgT1
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
4ILOFS7o3N+Czgku6Bzfgs79LejcUn9OaUHnmpIf/ty1gs4pJb/8/IA/p3Om
tZ/Kj4LOTUNOeH/OpT9XDTnh/bmW/tw15IT356KRH/6cNC/nfvLDn0vnz0Ek
PPnl5xvoX5BfjN9VP0Xkmv+LMHLCq36KyDUfGGHkhFf9FJFrfjDCyAmv+cGI
XPVThDU/6OTR5ymkSE5+wcjd/Ea++YuCznH9X+c0IvfnbBd0biNyf252Qec4
IvfnlP+vcw693J/768819Oce+nML/XyIP9fWn7Plzy3355r7c7j8OeT+nHJ/
Tpc/V9yfO+7PHftf5yZ7uT8ny5/z6M9N9ucS+PkVf66U32fi/br9OVN+H4r3
6/bnTvl9Kt6v259D5fdd+XOYvJ+xl/t9A8jJL39uk/f79/M13q/J96ML8mNC
7vuRBfk1Iff9qIL8nJD7eZ3/5Qfk5dHngeT3+/F+QW5+KN/8jx9X/a9xRUHj
kIL61QX1wwvqVxbUDyUdyP2VcAX9Tn7wO/kFI/frgn5c4McBBY0bCuoHF9Rv
9u/VP5d/buYhwpfe+fxWM938Rj4/QD/u43fm0fw4h/Qh9/160oPc2x3P7/fn
wH7egOdh3o7fYeKD0R89T5si9vMM6GfeD/0w4WD0R8/zpojR78cnzBuiH0Y/
jP7oeeIUMfp9fx7/OfTD6IfRH33eQoq4oHPk//+ec4t+f66sP4eX/lW0/0PW
AvTD6Iejz7HlvIQUsT83G/34C6IfRj+M/ujzEFLE/hz+aL+oo84v6qjzizrq
/JKOOr+k4Nxh3377fZZ+H6Xfp+f33fl9db69wz8S/TD6YfRH77tOEft5OPQz
L45+GP0w90Wvg6SIvd87+mH0w+iH0R+9jpIS8vdH6qtQtP0VD0XbX3HNp0f7
iaWIvV+M79cxv8p93u+Qet7fH90uMT9bON+6GnL25/l1NeTsx/vv5zLFhNh/
hzx6fB4TYr+dzgu28i35yjDPlDx6/BUTYj8d8ujxRkyI/XP//RykYN/Of/cT
jQmxP86vGyJnP5xfN0SOH5d/T77dQh69HytF6xnR9pAmO/H7r/z5AcTj70Ov
j6egdaTofVzBeQTR/cCiSifs142Q0+8Iqx0brPN4P0rvZ/nf9+UWy9cv4Lmi
v6Ockm89y8fnv5fozzFAH8/v17XQR7jofmJwH+zvI16el/dKuOh9YcXyrYf5
8xCiz1HFroJ84/mI159zEH3+gt5XvnPznP+n2O8/9PsIeW6/jufWA0PR9VGy
6ifOC4A5DwBmvz/Mfn6Y/fpwK6tvVD+w3x5mPz3s95GxHx5mvzvMe46uf4u6
+jbRpS8uM7o+zc2ITt9RcXT/ifaB/k6M65/EuP5EjGv/Y1x7HePa1xjZuT13
isYP2Kfzz813xR7xn+V33r9nX+59/YK9Y6fo937A2K0rZ9IXvV8v8OOPXi9P
U7r9c3q/YNifQ+TXz7EPrvxOeqiniC96Py/xBeXTr2fzfC5/I1f8CQJ/aPI7
+pwszmVlv2DA5Ef0OVpFnDxgs+8i7pytQk4esJXv4DwB9qci3xL+/ZzYysdZ
7d9nv2q0/KTYxl8nFJ79q8itfO0TFw4/7x6Fzw1fl0le3MqfeE34ulTh2d+K
vEQ4v/4U1wzH/5f2QbLfFbnVTwfEX4ev/yg8+18Vf/j3gK3+yk735R65lf+A
rfzHuHPOEpy8kNjsPDhPgP2y0fKArR+VJHs2e08LcZ/vH3H1ftauP675COSu
f675CD//APvvoHi/Ie9H7/3WvZ+394v2fmLer4p2GvZ++d4P3vuNez9r73fm
/bSID/Z+/t6v3vuhe79t78fm/b6IDyY+2jfig4kPJj6Y+GDig4kP/n/9zkRB
333w3yHy37WgfY6eT8taED1/lrUger4sa0H0/FjWAv/dEuKDiY/2n/hg4oOJ
DyY+mPhg4oP/X7/jWNB3FWHig/05Nv6cGn8OjT9nxp974s81IT5/Tg79I3/u
nj9nz5+r58+ZIz6Y+GC/j8bvW/H7PPy+CO8n6v0qiQ+mXqUf4vfB+H0jfp+F
9zv1fpobrB4P+XFjpH7Nt6/G70Px+za8H6vbf+yuwbqYf6/RdpWTznNGj6OK
5fM7wS8Fpp9Bf41+oMXvxzep+faRRvt3Fss3L0x8MPFxvpr3WyE8THjOV/N+
K4SHCc/5aoTnSniY8Jyv5r+zTHiY8Jyv5r/LSXiY8JyvJj+ccH4s0rkKMOHn
h+9flu87hYSHCc/5av67z9HnoBxXeM5XI7w/NwUmPOer+XMM/D5swnO+mvcT
IjxMeM5X835ChIcJHz2OCsbxzn82Ug7TMm3aKxhfuPNMVK9E31fcjc+C8T3l
BcaeYewVxh5h7A3GnmDsBcYeYN43zPuEeV8w7wMmv2Hyk/qE8Vj0+Ly4yhP1
vPdz4/1E119J7rymYvn8U/Ff9X5wfp8a+pkPRp/338S/0/vJ+X1t6GP+GH3e
vxH/R+9H5/fBoY/5Zl8v+nrYf2fBf5cAfcxPo6+g76r678ajD0Yf89no8/5j
+Jehb6bVT9IHo29lmGcG+2oj9Zn/LiX6mB9HH4w+5ssL+o40/knoYz4dfTD6
mF+PPpcq8M/Bf8d/185/98Cf04W+gr6L5s899edUoI/5e3+uRvQ5c4VUP9KP
8Pss0cd8P/oK8iv3fp1+Xyb6WB/wfp1+nybhw5d/+yPkE3LqXa6Ei96PwH73
tFB0eU9z5TXoTzC/CjO/CjO/CjO/CjO/Crcye9b7Zn4VZn4V9ueMMb8KM78K
05+M7t8Uc/2XoL5jvkn9A6vf9bz+ynwQnGvth5j5HJj5GoWPzMdEt88xel7m
U6LPVUsS0374c8N439H7TZivDM5b9O/Xr0MxvxBtD4H/A/MB0fYR+C8wfo+u
XwP/A8bb0fYT+A8wPkbu1/+tuchaEN0eBuv3jD+R+/V3xovR9U2wfu7nCf36
N+Ox6PogWL9m/BRtr4nOXoN1Mdrz6P5NMTevm+L6O8H6Lfar/kzEfr1dwdgv
jP3C2C+M/Sp8xH6j+zvBFfuFsV+/bxK57w9hx8wj+/PtyA/KefR8P/VesJ5k
+Z/i8jEl37ol8fr1Ph8P5Yh5b4s34Gg7DfZ/RffTKK+s6wbnZvn5ep6LeX3S
SX5F+5Xk5TtfG2Z+1Z4r2Z0fmeDm9xPc/H6CO08yxs3vx7j5/eD8SH++Nkx4
649lq57352vDhM8IX/9ReH++Nkz4tuH0/KXw883eNd8Naz0gfF2q8yH9+dow
4U+F7WO3wvvztWHCW3/nhML787Vhwlv9dFbh/fnaMOGtvxPv1iWLuHW9Im5+
v4g7D7iY7sduuR/mfuw/2p8lLTIOYTwSrIP59V30WXuWqvIbfT5PsA7uz+WJ
Lp9pkfo5RUz5h6P9IYN1Nr8u5s7hipTTYiqvlENLT8DUU6Q3ur4o6s7tSVF7
zDgYeXQ9GPhVRs/zpmRG+5cE51pyP/LoeIL5L/Tyvr2c9h+5P9+b9h+5P8+b
9h+5P7+b9h+5P687+rv1efnO56b9R74yHD44j5v2H7k/f5v2H7k/bzv6XP28
fOeI0f4j9+dp0/4j9+dn0x9A7t6nP0csXztCO8P7jz7njX3Qwbmw2Df2Aft+
DOmIPgc74Oj3HfgZwsgZPyCHkTOeQA4jZ3yBHEbOeAM5jJzxB3IYeSuzF71n
GDnjE+QwcsYryGHk0eFy8/3OeAY5jJzxDXIYOfVXtB9n8L1qX59jH9Hlp7gr
32l6H96fKLo+Leb8KIL99tH1uj/HML9fEvUr7QX1NHqIl/bG+UWofqT+Ij3R
+4by3L6gPLfvJ8/t68lz39nMk/8iPDP8AIvEzLfAzJfAzHdEv49YvZ/ofUN5
bp9QXro/T92dwxei3WE+gXyh30X+IKd+R079jpz6HTn1O3Lqd+TU78ip35FT
vyOnfkdO/Y6c+h059Tty6nfk1O/R50gelZz6Hbnvl/pzKKkXkVMvIqd+R079
jpz6Hbmf76HeRk558ufoMO7i/WNH0ePEYH49nI0Vgvof+4k+XyI333gg+ryJ
3Hz9/+jzJ3Lz9fejz6PIzde/jz6fIjdffz76vIrcfP33flbe0pGPDwcP+uvR
51nk5uufR59vkZuvPx593kVuvv539PkXufn629HnYeSqfx3dH08RR89r5qo/
7c+ZhKn3GCf4/hqM3PfXYOS+vwYj/+/fW8nTupXvr8HIfX8NRk55Rg4j9/01
GLnvr8HICzr3Fbnvr8HIfX8NRk55ju7vBefK0355P0H6dTD6fPsMR89jBO0h
+qkfqD9g6o9h82de2zY+2E8w9dG4FwtfUVT1xYzqw1PePFtY8k8qx1QpuzBR
8h+ubFSxZmbgL5WZW2/6c5fnavzw3szq759YEhdCnhXT8pb1KYnyjxpz576W
V90f+E9NqfbmshUTA/+p20s0jf/0zeC80suuaDjr6OA0yXl+2iueF+Z5YOKH
iQ9Gv87Fi+invUM/jH4Y/TD6YfTrXL2IftpL9MPoh9EPox9Gv87li+invUU/
jH4Y/TD6YfTD6Ke9Rj+Mfhj9MPph9MPop71HP4x+GP0w+mH0w+inv4B+GP0w
+mH0w+iH0U9/A/0w+mH0w+iH0Q+jn/4K+mH0w+iH0a9xTEQ/jH76O+iH0Q+j
H0Y/jH595zOin/4S+mH0w+iH0Q+jX+dORvTT30I/jH4Y/TD6YfR7ffTXBpQd
UuKZS3J17mG0PRYPRdtjcd2/evCF1TeOSVF90q1EfN8V44qqPsksn922ce0U
1SfJ6Q32v3dTSmZixw1lWj+TFlp939h5Dx0O6sNO/coUTetbWPUVV/Tfvuyx
pi/HF5b+CesfrhE7pbD07zrxzdJWEwurvprQ/I34px4oLP21qozatWRTUB+O
3HN4d+Ne8dJfetimSul9g/pw0Our0uZeHC/9i6aW+yTp/HjpH5QYu7n670F9
eHXmqeGn385TfbKqzsIX4785o/rkZN+3Ew8sDOrDyWOGrdmYfEb1Se2fyuQO
PZen+uTzwRv7rxiYp/pk+zWranXrf0z6R0x9+7a+o49L/7TNjy+8752gPux0
tuPIJruOSf+xGnkz/ll/TPo77Zl7VXrrY9Jf4+aO27/4cIf0D62xZ8/C1buk
/+d3P9gzam9QH1Zd1+/lfsN3Sn/r+l+vmNtrp/RXnVp5yX0dd0j/+eM+ernq
NzOl/7v0p9s9fP0i6Z+59KtfGxd7U/qXTmg249GV30l/0cTquR9f9p30L6yd
N/6Lj6dL/5byPYbV2blZ9UnDKncPvOjJDapPOnx17NZ5k7eqPjm6tU7NaZdv
Un3yceGln5Vpskn1Sc6E7vcfqrFF9UndSzP2br38iPS/N+H0rrVxh6V/YPcr
uh3KPiL9SxvXeOvMl4elv3qJ8f3azTks/Usf+Cs7Kf2I9L8ybfv1/evlSP/2
aldc16PSaenniv7UjW23jM46Lf2DJ82bf2DDaelPO3am7oSHcqR/X+lCdYbP
ilX5feuBj2ufvTJW9UnCT7PyksoG9eHUOd+XeH1wrMr/gxMeHZY+NFb1ydR6
r9e/+MdY1Vep3cc/uLx+UB/O/+KGzg3mJkh/leJ3lm09K6gPuaL/xZ2xn798
flAfZr1avscD9wT6Nh9d8sKYxsnS1+y+dfUn1A/qv+ONtncs/2Gy9HGlvtl8
QaO8pP3J0pdYu+2Uv/5Olb7+n/TosXNtmvRd+saAYb2qp0nPioEVD5e6OS1U
eOA7ZatOKZa5Ov3P715bXCzz8+/uyuu38GTGoBvP/LpuSbHMOS2f+aVW/WKh
eXaV/O4DPSaNviFJfN2n65678+NC4pR2d3Y8kxoj/q3sI30fOX0yA04u/VKL
qV/sFx86/tTTaT+sFNe4+6LJt6xYkQ5Pvevurj9U3y/+0K7ivU0er5+w7Zy4
5KEmPzUZXigE1665af+bFyYpvQl2lfzB5x4rvunzYiHSy/XLpNiU+UVTQ9dM
6/VHbufg97IPHz7v6cqpYtoT9NNf5n3p/NE+ffIGV0jL9NfXezXs+8C/442K
V35VqvovqaGGs4u0nnIwYH+90+TSR/zIYeyBeT0Y/zMY/zEY/y8YvxcY/ysY
/ykY/ycY/yXVj5F5FJh1aBj/Hxj/HZj8HDzmsj+/n39S51WMeWPZIwlVkjO/
+bvjyLvmp2ZeltB/3p1lkjInPNItr+L8YpJXXp921yMzUzLnZy4cmd0qITO+
9bY1rwxMzXzvnZG3VPgmPvP0K/PbxoxLlfyvh14tdPXJlMy3rp6xZuOTZzOu
rN9p2IEnUzMnj/pt7WujCoX2jHtq3lvziomPlzlapvSsYpn7LrhmVLfRRUK/
3vdV5cSmqZkDP2p33ozPk0If7j1wY84tqZKf3zFj5vSyxTJfXF3u5x7dUzMf
fG3Mp2XXJmXO/PSaPWX+/ref8eu035ueS8p84cGJD+37oljmDUVvbj28epLC
X//23H/i+hVR+riS/kGlV6/dWDlJvxd6/ZkqpcsUUfo2J7WYWXdnktK/um6V
GnPikiX/ttTpzdseKqL0x+Yt6/jp7iSl98eme8fdVTngrLX3563+N17SN6n4
ZYUWfpeUWWJQs4pLJyaFStpV8n/smjmx1y+lYm4vFjov9vwJvd9OyqzyeOf9
ZZJTQ4lV/1i6dmBS5vt7twyd+nNqaPBHd3V46KZkhR9e/uaTs6cXUX7Uuf3s
kHV3JCj/tg29dEp87wTlX9qiidVqfVhI4VObV/z1u83xyp9ejW+5Y8H4BOXf
3WvqzXpzfCHJtzTYX2jNyHjlD1fyb0b2+LQ+jwW/v76i6/x3VsQr/zbOvOWW
dm0SlF8fxd/bN+Ff/fBUuyp/hv00YvPjlRKUf8erzY995vyEwL5+fbf7FWfi
lR8H5zw7sEJigvJv25ban4zaWUj5d8+9C24uNTFB4e9fP3FF7yuC/CiV07Pd
6Jkxyr/vbx7xwrz1Mcq//YPOTz6SEqPwq4pWbrL13bMZ5E/D2M9LP14oVvl3
3cjpo5oUilH+DTozI/OSU2cyyJ+3Bl7V/evMGOXfyK8L7a+wKUb5t6H4F9d8
PORsBvn3XffPS5y3OEb59fS8H5suiA847dUnur6UfS6D/Ok05NS8quNilH9Z
OytvvGFojPKvWfx5r0xZfTaD/Pilz8FWGx6PUf59/9aUZ+q3jlH+XZ9a9YIV
58Uq/54od2W7RiXPZZAf+zvP6vlaKDuD/Ku+8eAP28ZkZ5B/r94fs6z5iZMK
P+LJ+LjmT5xQ/t35WJWTrXdkZ5B/F71c+89CO05KXq3nyIEvrTyu/Nve4foR
yztkZ5B/fyzf8dqct7Ilf33I8ztS251Q/lWqW3XL6M7ZGeTX19u6tNi17aR4
SXbLy0+sOqn869vj16sXJ2RnkH/33HJN39UbTkke3/dAqOSME8q/hk1md6iw
+FQG+Xf9+9fNzH7uVAb5d+kr125MO5et8FePiTlvzrETyo/6H15e//jN/yj/
Vo0be+Sjdf8o/158d078Ux/vV/jnfl/Y98lP9yh/8uYntRv+7CHl37v7r71o
55D9kv86Y0WHfe13K39uGnfp0P6P/aP8Sx0w9KXGu/6RfMy6jJtO99ij/Pu+
Y9FquU/+o/xa/tHQ1MlP7xfnLG83eUmn/cqfVtOb/NR50UHl36V3ndfixT4H
Je+/cPShopfsVX7E9CtfqcJtB5V/f15YcuXyeQeUf5MOXVg595tDCr80d87o
Rh/sVX48fGLywx9uXKv8G7pt7PfZV/yl/Nuz/+9tU6evVPjvP1/5TOvuvyh/
VlZ7bvTCXuuVf+eN+q3wcz1XSr6jRrmqFzf5UfnTcOvEDR/etU75l/1Rn31N
av0lefYf619v9dLPyr+2/Z6/eVrndcqvAdl9shO7rRT/0aL81fWuWqn8efbi
hB6Dj65R/p3fesxTixuvkfyVh0oNeD99mfLj73e/qXJu92rl3/Pb3n+2xfY/
lX8Vx79z1bS16xU+q8P8E2/c/ZvyY4jlRzr51+C3s8s+2rU0nfyr3fHbuhO2
rkiXvVp+p5M/Ey1/0sm/C+b/eNnPFVdKPtPyN538mWv5k07+tW3RoH/O10sl
r2z5m07+vT3t0vU3d/45XeXX8kvcxvIznfxpbPmTTv5VOBDfqujo5ZLfb/mb
Tn6MsfxIJ/9Cv+1pdKTjH+nkX+7DR47cPGCxwi+w/FZ+9LXyqPzbvrbhkuVx
e5R/160qP+voLfsV/kYr78qfeVY+lX+XDfvyo5c77Jf8gJVv5c9QK5/Kv8nZ
7a4tf2K35BWtfCv/stOyXu7XeY/ya5+VV/ECK8/Kny5WPpV/75X+tevuXnsl
r2flW/kx28qj8m/bvYt3fFRmn/Kv+JAlo/pV3K3wh/uGy7vy4zlrD5R/t579
+cvsK08o/7Y+NfuTV384qfDbrb1R/lS09kH5d0/rwe+sWXlS8jrWvih/Rlj7
oPx7P3XllvKlT0i+wdoX5V/9d18b2aTNCeXXQmsvxJ9be6L8yX0s3D4o/y76
ZERewoYTkne39kX5UcHaA+VfrTovzt9W46Tyr2XLl8Ysm3Nc4UPW3ig/lll/
RPn3wpiDx19pfFb5d1Xqhv2X7zqn8BdZfydE/jxm/RPl30c7P9j2yKlzyr87
rH8TIn9WWf9E+bf7o5NVZt9+Vvn3hvVvQuTfaLsqvwpbf0U8yPozIfKnvvVP
lH8P1Piq/tvnzir/2ln/JkR+9LH+iPLv+awphQbcd0759972L//q+PcZ5d8S
6++EyI9k6w+HyL+u5yV9OGpOfIj8uyXr2VJtXyik8LWsv638+9v6xyHy7/j8
rePOjCwk+SPWv1b+jbT+cYj8e8uuks+xq/Kv5+Z9aTX/iA+RX/46wfrTyr+l
1j8OkX93P9S9wYXnB/Ih1r9W/rW3/nCI/Os6Y/ek+PRCIfLvaK1Hzhs0NF7h
91p/W/lRzcZjyr9X2r23eG2jIsq/jpecn/7xxUkK38nGe8qfGBufKf9K2lXy
1+yq/Jlh4zPl3/xtpTv1vrOI5BtsfBfYX+VnajzXuYjya7mN18SZNp5T/nAl
/wZNze3ZaWLw+yc2vlN+PGvjMeXfKzlPLmu6oojy76Lnc2784fwiCl/MxntK
35U2Plf669yVuHn0zGKSz7LxvdK31sbnSv/Wq2YOm70uRfJYG98r/d/2Tbvv
12MpSu9RG6+Ld9l4XukrbuNzpf+DEyPHfH5TIP/ZxvehaTmhP0Y8kxZKevzd
3ds7pml+gvkXmPkXmPkXmPkXmPkXmPkXmPkXmPkXmPkXmPkXmPkXmPkXmPkX
mPkX0vuVXTPhZEt/5oezVg4a+EzwvWnsnfVj3q+fv9H6deR9Iud9Iud9Iuf9
Ied9Ied9IVd/McI8H+vPPA+s/lqEiQ9GP4x+GP2sP6MfRj+Mfhj9MPph9LP+
jH5Y8z0RRj+Mfhj9MPpZf0Y/jH4Y/TD6YfTD6Gf9Gf0w+mH0w+iH0Q+jn/Vn
1bcRRj+Mfhj9sMZrEUY/68/oh9EPox/WeCbC6IfRz/oz+mH0w+iH0Q+jH0Y/
68/o174M6tsIox9GP4x+GP2sP2u+MsIab0cY/TD6YY1XIox+1p81Hxxh9MPo
h9EPox9GP+vP6IfRD6MfRj+Mfq+P+ftoeyweirbH4qFoeyyu9SvaG/yJ9N2x
W3pUfW9jiq7xF8QOqZH47/j22fLLOl7xf+T3zbvi1J0p8h/i/vFdSnRY/U5M
aM0Tn5yXeHnA/S8ddvNrhVMy5zR6/fGEX1JDFXr/3W3GxIArXtlw65ZnA320
f9w/85riBxe8UkTcYuWh828fUFjhaR+Rj9rxzM+PZ8eLrx7R8Z/T2+IUnvYT
+aqb1jZos/xsBlx86Pg3On+cl0F42lfkIybOPLvo8xPinw72bfzH08cUnvYX
+dAKl/XsnLhXnDf73bjB03coPO0z8u/ONXno2PFfxfe88dqwL2vNUnjab+QN
Gh3o98fFa8XNKxy6/YPFm9MJT/uO/KZGGU1SVh8Ud2xfZv2TFx5ReNp/5Ntv
KvRoybRs8aSDd5RPqZWj8PQPkPtrdkaNm5p/HRsiPP0H5POmTRp6xdUJ4suS
fmr3dt1Ehad/gXzTyZqfdfs+4FCr+57duipZ9k3/A/vWd/Mi9jv7mfgZl45J
DWHfb97cuPh9zVMDecdZCzIqpil+7ie+hNCyX6a3SBV3e2//p1W7pknfX5/2
6jisW5rKzzjTn7lycvf7/iiflpmcWmjY7kYp4tDzZX6asj4l8+7KdZ58qWdq
5qL4E7seLBcw5Yv1WRj/O5jypPNea2Z90uPxlNDfdhX3ue/uSZVmpKj/9Uel
HccfuiVV/bMuj1z24qm2wfMWtucN8TwZ9nxaX2zQ+Moe92xIUfpj7Cq+w+oP
5W85qz+kj/xlfRT/R9KLvNL9dw5f+0ZRce02y2/7pV+KmPSXt/okRHpjhrxf
s2lOqrhXx0tuHL0gYOpHPX+kPzj27bqj1v/7fBuqdl3ba0ya9BPfazXLd2k0
Jdg/uirxqWcK9UrNvPydD5eOHxOs3+LfyXox6WN9GOZ9/GbvQ9ym7FfX7myb
Gjr7YYu+zVP+fb+3ds17dUqauOH1A+ZtvS5g0oN9PmL2qfruDisv4jJW3sR5
Vl7FX1l5V330sNUX4ketvhGvGRuur1QfHLD6Tpxh9aW4iNW34spWX+v5m1p9
r/Vd/OHhluYf4fybAvnqQ99tmto0WM/GXx6+xvw1xLk1m8af3BTIZ0yqNO+h
ecH6N/70cJL5k4jXhuML5CM7jhtXqnKwXo6/vfyN7Cp+qFnz/j/1D+QrKidu
++SqU2L88eFnzR9HfOn8qlfd2CKQn3fN4uplUw+I8dfXern5C4nv/LTky69+
9bf4TPHjdU6PWCXuV8H8+bVe/2PYn0k86K1dfU+OyhBXqvnBzuZFVojx95f/
r/lbiYeeeuGB+FsD+Wehki80/W2fmP0Akps/mDhpVLfTF9QL5O/NnP5qzVcD
fwL8tOF/zF9N3LrMa/UmdQ3kO+9Y/eevXwf+B+wnUH6bP53z1wnkb+3PG1Wt
R+CvwH4DON38/cR9w/45Ac+vMXrWwLwiKg99rT8lOfsT4C7mnygeH44/kG95
puy6zFHFxF+F7TuQU5/BA8xfyPknBnw6XF6C/h7jZVf/Bu2P1b8Kz/gXZrwK
M75UvyIyHoQZv8GMt2DGR+ofRsYzsPYpRpjxAkz/HtY56pH2zPvTsI8Afsfy
X8x+tuj8Dfw/2d8WXb8FzH43uL3Zq5j9byr/Vh7E7IeTf7CVt8A/0cq3ONvK
s5j9cvIPsvpCzP45+AKrj8Tsg9LzW30nZn+d/IOsPhWz3w4+ZfW1mP130eUz
OfTwW7M6N9uUkvnDjE2LcmelqX3Pd53eYnyfiqmZrr0VN7b2Vv5bvG/a62Kj
R+xqVaOY+KVxGV+uKFFM+l+3a0hs8ak/4q+9rL+m8Ngb/lzsJ4HZ9yn/MZOH
YjJ/u/ip/5xv/cStx6qPDeKn/6H+Tr0Bm2OapAXyratmlj8b9D/8tcIXdWed
fiFV/SHir1Zz6m+v/du/WdThxP0zRgV8sviuexY0TcvkecZ2eWrwFxXSQsgH
/Zp1UekeQX+U/aZHZj0wLGtScuiSM0cnXXJLwG02LV76wzOp6g9Tfzn/r9A1
nR+tfeBNnd+m+dqPbL5W/etQ640dTx5M0fzglAnj5+47GMwX1vphc+O0m4P+
6XsPjXkm89lU6bu+1Npyy59N8/WD3k/TPqH0we3TNP7OmvvmlBbT0zTfN+9s
2y2v5aZK/kG5cotfSQy4zptNSl7dLfBXKze3RG6VfsH4+UTfi09UG56m+cEX
69866/a8NMmf7P7hoKk3pIp333HPrpf2BfuBHmr2+4PJtQJ/tXv6Xl/58b6B
fEXlF7J2Hk6W/MG8yaNyugfyNmWK3f3Qx0nixbmLf6jTNhivpxeqXeeHz4vo
/usrfxRfdXOi5NM2H/1yQqdg/rTOrIt6zFgbyKuvHXxtqbQE8Yd2FV86/4tL
Bl0Y+Eulbi62eUvTQD5i/AMvtV4eK3mpHs/Xf6R+IC82ak/yiqdjgvxcWedI
227BfMA/26vt65h4TvOLf151qv+1A3Il/+XdCUtK9M+RfF/dHXXrdA3kWSOm
Lk9bfUo8NVRq8tJ6wfzBxJbJHy/bekL3v/rOyqveb3FU8qFFBj09rPkRyT/+
OiP7y7qBPO1QWuHcBw6Kl3bYv/CR2sF8w5why77uN3iv7n8+tcOSC9tuk7zP
gUldt7TZIvn0Wjfdf0OtQJ7z5si9U69dI643vPy8ejW+Fr/5SNITNZcs1/0x
21dd2XVbxyD8sHB4zQ/GLA7LNZ9wt90v7mTPI15v8ev+j+z5JJ9t6ZW8v6VP
8s8t/eJBlp/ic/+E80/3v2P5K/lEe1+SD7f3I/kEe3/iH8wexD/b+9f928w+
JD9o9ib5crMvyXeZ/YlfMHvWfEWS2a/mAy8y+5acK/JkKx/6/WIrP+IvrDyK
r7Hyp/trWfmUPMPKu+TVrHxLfquVf/FvVp+IW1r9ofs7Wf2i+ZwiZ9dd13Vh
MB9a2uo/yWtb/Rhy9at4gtWnuv87q28V/3arDxV/K6v/JO9s9aM4Ut+KB1r9
GnL1r9qLwrY/SHybtTdqPyZZe6P+C+0H7eFla07VfrjG/5lfONtr3tHZaZqP
iZ0bU/bH2cHz0B93+5tUv9H/VvmN9L9h+t8w/W+Y/nf0ftKsBTD9b5j+N0z/
G6b/DdP/hul/u/2woej4i2t9nfkw1tdh3j9M/wDm/Xk589PIYeTMRyOHkTP/
jBxGznwzchg588vIYeTMJyOHkTN/jBxGznwxchg588PIYeTMByOHkTP/ixxG
znwvcpj3yfwb7xOWf7abT1xl+1fUH+u1bNTj18SlSt486fseC34P+J33ts26
61iw/+XyldlxpfcE88MxxSvnTPsmTc9LfDwvTHnGfhgPVF93adEJS4P1FPrf
6q//3WjWnnPBfpCe5Wc3vTgm6F+in/UhzX9G5hObPLG0/f2j0sQ9T5Von9os
6M/HvFa4UOONaZp/pb9MfPnGA5H5S+Y/kdPfHvdJ2XUX/JWm8f2cQ7cNKbs1
Tf3xcsu+23RfXMB/1Rw37qeNwfx10+JnRj33TTA/MGf/oEPfrS6W6fbLaHxx
RcdeJ3sfC8ZjfZ4qvLnq4jT1rx+bs/KhxQcD7nXu3YHHnv0/47ejq9bWK5nm
98+Iy/V+olrn9sF4cPbpbfPmzE31+2cUnvzj/TIeo74eMeOrKaH9AQ+6q2Wb
jBJpmW5/kMZHpdoNeiphczBe+uCCh259JC9VzPiK9MCMhz58bE/a3Z8E/EeP
3zu+VCJVrO8qkt8RduuLqp9gN1/u/Se0/sJ4mPoZfn90iz0zDwfnVH+6dWLz
88skie+evrDN7w0TxF2+fin7pfmJYvxBQubvo/2tAy5OK/ntGymSJ99xRY+4
fkUzx9dLWB/3ebzub/1+0s/nZseK8R/Zbv5A4m5d+y3d0CQl896S2eff3P6s
/HPwJ5lj/kHiN8pcePin61Iy17aZX+NIbHDO8JxK9Vdv+7cfBG+d1q9Z45eL
iLVfvc/VhxvsSckslvZ7RvszRXX+d6/pTy1/YFWK+NeWVf56+Iti4p4xn5WZ
cXmy+IFlP14zplRwP/XlKPMvU/vX2fzLtJ934sjNxw+PKqLw/T/rUrvy7MIK
//Gug5md9iTq/aGf9wfz/mDeHyx/3ciV99fy96eP9Ywtot935bxa/7t/x4O8
P+7n/cG8rwzzZxPffvmWj8d+V1jvj/B6X+bfJn507bBlQz4orPdHeN4fzPuD
eX9dr3x32dk2RTIbNB9S+/oPkyTPSRpzW4kJyeLnSh0602JsUXHz0lk33/tI
ivjyCjP6dqxTTEz5etr86dR/uyy5yS3T2heR/MXWhd78uH3hzGp7znUoWjhV
9yf92DH08vcB7/hwfvmEJ9LE+N+NMv877V8pZf532v/ddXqvvOc/LKLw/RNe
rDGrWmGF3/NUwq91DhaW/dLfwX5h7BfGfmHsF8Yee5h/qezxNvMvlf0OvaNZ
1ud58QrfosPKizeXD8I/8377CRfeEyf7RT/2C2O/MPYLY5/Z5q8q+73mhX2/
l3s0XvJFM06XeaxZnOyX+7FfGHv119J/NnumUaV42S/hZa/m3ypuMurwpBtT
4mW/hMd+YewXxn7r/V34828Xx8t+kWO/MPYLY78w9gtjn23Nn1b2m505t0SX
X+IlfzC536Ntf4mT/XI/9gtjvzD22MP8b2WPJ83/VvZbr9v6tbcWC8K3WHAs
rceEOIX/8frHPzvRLl72S38c+4WxXxj7hbFfGHscaf7l2l9zg/mXaz//nJMD
7l3451ntx7m34tBdV5U/o/DTJ4899PZLuRnYL/qxXxj7hbFfGPucbP7qOp/g
vEHT75713Rnt57l1xe/ZzZ7IzcB+uR/7hbHXQ+bPrv09Jy4cOCOm6pkM7Jfw
2Ku/NntlQaG/juVlYL+Ex35h7BfGfmtX3F/orwfPZmC/yLFfGPuFsV8Y+4Wx
z0fMn17nM3x+qOmWG/uc1X6jp4ZljLuiT14G9sv92C+M/cLY42vmf6/9R5+a
/73Of6hde0zXnSfOar9S212L1tQtkafwdVf9EHvf62cysF/Gi9gvjP3qOwkR
+4WxX33XImKPt9v+EtnjXttfIvvt3aVl6lXTTyh8sTfbv//O2WMK3+2iPpMS
Hzoq+0U/9gtjvzD2C2OfnWy/iuz3p52vFi077rjkR+tM+Xp+y6OyX+7HfmHs
9TPbzyL+cnirR/okHJf9El72avtbxPHZb82/849jsl99VypivzD2C+t8jjeW
zr+zzgnZL3LsF8Z+YewXxn5h7PMK208j++3YsfJbnzY6Ifn1h99t+lqjY7Jf
7sd+YewXxh7r2f4b2eN9tv9G9nv0i56Xt15xQuFT7/5g5NeHjir8qdD7c5f2
Oi77ZT4D+4WxXxj7hbFfGHs8ZvvLZI8h218m+2048b5Xql+8V+FHxPeZnPrN
ToW/rcgb8/Y8vU32i37sF8Z+YewXxj6vtv1qst+8Sb8/f/nWXZK3uq/ob63a
bZP9cj/2C2Ovc20/m3jJtvZ15v6wU/ZLeOy1SPHw/jbxgGW7djzSZqfsl/DY
L4z9wthvq/g7dj5ywx7ZL3LsF8Z+YewXxn5h7PNL208n+60yvvCEco33SL5y
/oHE4412yH65H/uFsV8Yezxq++9kj2Vs/53st/W1oyY/d99ehX91+LGXa43f
rvAdOh7Z9MiYXbJf5tuwXxj7hbFfGPuFsceXbH+p7LGD7S+V/W44W3fLDTWX
Kfy8UxVntLh3vsI/tvpIhRLbnpT9oh/7hbFfGPuFsc8bbL+q7PfLpIt+3X7/
IsmHZtRYVKtaZ9kv92O/MPb6tu1nDfjIuAfe/3G+7Jfw2Os6298qvuTmg2+W
e3Cu7Jfw2C+M/cLYb+xT+5uc98VPsl/k2C+M/cLYL4z9wthnF9tPK/vttPR0
xez4nyU/991lnz2VOF32y/3YL4z9wtjjUNt/K3u8tWt4/63sN/GqEvf1r7tc
4V8/9FmP+1dMVPgq2z+6/rzLf5D9Mh+M/cLYL4z9wtgvjD0+YPvLtb/yZ9tf
rvOaZjfqW+Pak2sU/qZXG2b3X7BR4XeHznV/4MJt6dgv+rFfGPuFsV8Y+zwy
MrxfXedP3XXHS+n3PrhB8pWHXrz35M3b0rFf7sd+Yex1ne1nF3+/vNfysh9v
TMd+CY+91rT97eJOufc8m/nkpnTsl/DYL4z9wtjvxFcnDMlcuC4d+0WO/cLY
L4z9wtgvjH0ebRXeT6/zt048fOF5zcask7zVyM8ub9NwSzr2y/3YL4z9wthj
F9t/r/2nibb/Xud7fXxDkexRfdco/DtLPngvNW+Lwo9ZW/fVzPi/07Ff1iuw
Xxj7hbFfGPuFscfFdr6E7PEJO19C9tvnl+eurv3jQYW/+NubXvr6jcMKv/D6
CkPqXXtU9ot+7BfGfmHsF8Y+X7HzKmS/85amXN8i55Dk1yfv6T8ydFT2y/3Y
L4y9nu0fPs9C/OSS9AXrXzss+yU89vqVnW8hLtsy55G4xYdlv4THfmHsF8Z+
u/R4a0Whyf/IfpFjvzD2C2O/MPYLY59F7TwN2e/ItatKNXn9n8C+255au6Dh
Edkv92O/MPYLY48/2vkbssfxdv6G7PehOs1SDzx3UOEvOnFs/DufHFH4a4qc
6DnsysOyX9bTsF8Y+4WxXxj7hbHHKna+jOxxuJ0vI/s998TD909PzFb4+xu0
z6o797TCJy5p+NOfrXNlv+jHfmHsF8Z+Yewz1c6rkf1+dqLqg/PKnpb8qQkp
35d+OFf2y/3YL4y9/mTn2Yh/uLdLQu8Zp2W/hMdeS9v5NuLu26+Y+ebu07Jf
wmO/MPYLY7+DGxye8eagbNkvcuwXxn5h7BfGfmHs8y47T0f2mzZk1Jqbe2dL
fuv+S8s2750j++V+7BfGfmHssaqdvyN7vMDO35H9Dq7epMXLO08pfKeXSm65
6qcchR/w7iXflmh8WvbLei/2C2O/MPYLY7+w+rN2vpTWe3fb+VJab5pYqP7d
H4+L0frwnwcyUnr0iVX4z7+86eUbaseFsF/0Y78w9gtjv7DGb3Zelc5XPLX4
8zYVy8dqP/qDb70d/9cdcSHsl/uxXxh7HWHnWWl/esKAOz4/1yM2hP0SXvvT
7Xwr7Vf/a97Hz1zwYmwI+yU89gtjvzD2u63XK8+88XtMCPtFjv3C2C+M/cLY
L4x9LrfztOTvcvXLf6Xt/DlG69mL6pT59vDPsSHsl/uxXxj7hbHHeXb+ls4P
qGbnb+l8zW1b5zQt9kKMzhv487UPSmw+EavwD1xU+tnWN8eGsF/8EbBfGPuF
sV8Y+4Wxx012vpzssaidLyf7/bnZ2kH7KiUofPaNrarPiklU+GXHf5769O+J
sl/0Y78w9gtjvzD22cLOq5P9Xlqs1uBHv02Q/MUtVSuXW5so++V+7BfGXqfZ
eXbiKt+vWdbwTILsl/CyVzvfTnwmvsYnHUomyn4Jj/3C2C+M/SbOvuyTvx9I
kP0ix35h7BfGfmHsF8Y+D9t5erLfFit61qjWPkHyXS/N/OuW9omyX+7HfmHs
F8YeN9n5e7LHVnb+XigYvzXue8/FCQqfvfq6Wyq/nKjwz98/49MJvyTIfvGX
wX5h7BfGfmHs1/vbxNn5krLHa+18SdnvgfHd379hXhD+smd3tMkbm6zwh25r
v2LJA0Vlv+jHfmHsF8Z+Yeyzv51XKftNv2f5B3MbJEs+pcrCpj27F5X9cj/2
C2OvK+w8S3Gzwt0Pvz46WfZLeNlrbvh8S3HZZkuXfjYlWfZLeOwXxn5hnS99
7qulVx5Lkv0ix35h7BfGfmHsF8Y+5ccesd/+pc62HXgw+D15xR1nhx1Mlv1y
P/YLY78w9hhn52/KHp+w8zdlv1X7/z3uwy+C8JeVXtyxb6miCj958u0/72wf
7N/Fvwj/EZj9metsf6140y997tv/eJrsC38o7AvGvmDsC9Z5gHYerOyr64ed
FseuT5V8Zb/mfb/JTZN9cT/2BWNPp+y8WPGAFrklNpRNk30RHnsqb+fHihuN
b7v/n9ppsi/5e0XsC8a+YOyrZcO6+/u8EOwn9dfb4t97MP1wmvbHDCw978nu
o1Pln9bb/OW0nok/D+Ub5vwDmPct/5/I+4bxX/P3s5+N+GDig/Ffe2HUtQ9e
G1dMnDT+kutO3Pl/9hvbNfD/27+p24iegX/giGlfP5bzQYr86dDP88M8P4z/
1tqVy37eGx/sPy5r5xuIe8/pVfXxicF50Z0H/r2o8u7g/tgdH5//W/dUv39X
+6/9fp45364f90WFYP/S37ZfRzzH9uto/3i4uDYK9nPD6ON7b3BYPDbYL9Tn
0r1tHvg/3Ou951+45z/7lyPpY3+R858T4z+IvT3ZI3R3tf2BPOKvF3L+evKv
ZL8vzP5dmP24MPtrYfbLwux/hfuF9S+Sfyr7U2H2m8LsH4XZDwqzvzPa3zVF
+wft/Io0+Y8UtvPZxd2svsl09Y2+77NvXoV+s7am6Tygni//Ob5FeiB/vszY
3EqrA/+2SH0j+dHcht3jXwu+F9R2/IbNo94uJn19q71zR9dqKfp+0DWxMW9e
MDBNXHf97L9+Sk/NdPWT5F9/27vBpyeLit/7e3bsoWsCf7fL7Lx5cSurn/S9
oQqVjnSp93SazjOa+FyR+qt7pEne+JslRd6pFZyPjf8i7Zn8GSPh545++on+
R4LvGY2Nm7zy8huC87dr3vjw+K1xKZmDjnRsN6RcmvzLaF++bbe+5i2rk+Vv
dNj6O6oPy1h/R/XhMevvSF/o6Wc6HJpbWLxo+LBPizcIzqPO6tbgvDMjC8tf
kqvOT/p26fzbuyfr98F/jf6gbv/Af267fS9AfLv1h2Q/X1l/SPfv+ebOlMuv
CuIr1eS7Y9v+DM4HP9tn2JotmwvLPpb2HdusR/Oiso8G6fX6FZ6WLPkDa8+t
2VQv8Mdraf0nyX+fOfuOeacTxTWaNZpfPzFJ+prtTCxz+YTCspekub0f/XVH
svjy1yt8O2Ra4L93pfW3JH+114Zy7boE9w98o8LGz94rIvvKtu8liKtZfyv4
vtWmTqHTe5NlD0NrPlHmtXXJklfsecOO5pOT5L/0lV3Fg6w/JftLtf6U7n/T
ruI+31341Z8fFVF8JQ6s7Pv2Y4UzOd9iZOq4G8Y3KJrJ+RZPlkx7cuIjwXnm
FzYc+vKG08kK/06tM4dnNk5S+GnXDf9y4n/Od4/0v6pZ/0vtcRnrf6k9nmr9
L+krfNE3nUbFFpa+S1NqXTJ0S/B8uXubfNz3bBHJdx9bsuvZ0sH57M/+/XNS
o+aBveOvpe+j2PczxMtt/KvylGfjX5WnP2z8K32X3bD/5kkV48Uf1Do85Kd/
7Y7yNPWKbw/Myo2Tfb9c8bHO378anNfWr1eNt3LWJEh+z5gzT2ZvDfz5Mux7
HuLSNj5WeXrFxse6/8ee3+xe9XYQ38nYSn+8Uy84D379lYdnvNUsXvbPFfsv
f/LrZt+XCn6vPar3zHHTA//Aa2w8LfmU7hXK9O0WJy5eaM74vMcLSV+VCf1z
VyXFqzzs7LOh8XOtEsWnG4wdc+OlCcF5/YXC42/Ju5VvdLb4yjhx68Zj53ZI
CvwF/7SrONnG37Lvv99cfun0e4Pz7joc2p5b785EyePKfZyReFGCys8r9j0U
8d02vlZ52mfja93/2Jl7r9m2PC5oDx4bPuLV1OA8/MOfhJo13xQne+2+JC6t
2beJstc2fzx9d/s1wfn2R84efGhst0SFH3Ckx/Lucwsp/Ijdh19s/1aCytOf
9r0WcbKNz1W+8mx8rvL1so3PpX/78rK16j8aJ/2nFn1+/Ka74iVf+9F3T1fu
FcS/eMoNi24aGZzf3/6Nm3aeWxAn+8efjPL0j33/RjzZ5kdVvtbZ/KjK15c2
Pyp9h1fNqDiv8pkM+Pi2+d/k3XFW5+MV/7L+mNUr8zKw9y4bN9YecDpW9n5X
+U/6zbgjVuXh+gY923zdPEbl6T37Ho841+ZPVb662vyp7k+vf8eLFxYL4pvY
t0qbjx84p/P/en03v9T7T5zJoDwM2dy70LqqwXmJ56ZeXmXAy7EqLyXrbxjZ
9IrAfzHJ5lslT65b4VTzKbnS99eARju6Lj6n8wWTJv047cJDeRmUD39dffZc
zwMvB/6OG21+VvIXv+k9a/Szwf0d42IqV/rnrPwRptv3iFS+dtn8bNCfaVLr
VNclsUH/ZVLLtaf/fd/IN61LfW/h8BiVp672PSPxdTb/qvK11OZfdf9bj7x6
3vUD8jLgZndt++X57LM6P/GtWR1aprydl4G91n/6sX3x5QN7rv7ivmvPvyP4
/sFv37ZPb7Q6VvbdcvK6z8tUjFH4hz/o9OD5CbEqT9Pte0viXTZ/q/K1zuZv
Vb662Pyt9A8pXPqq7O9yM9A/6VjVjzYMPKPnffjru6Z/P+uc5LctrnfrhhNn
dB5knzcbPte7TZ7sH383ytNY+36VuPDA8PqZ/G+62fqZ/G9Sbf1M+ibVHbmx
UqHj4ikt3urZo0zwfYOfSpZtcPtXx2Tvz1Z+67q2v+fI3lt9U3pCVpfTkpfK
m9F5+eBT8sfZb9/TEk+z9TX55wy39TXdf3Jm6duG7zkqbre5UEpa7eB7EuUq
vbUiudVxlYdvrp6TcXn14LzQb3+6KKntgdOS7zz1+srEkqfkz/OLrcdJ/sNX
56YtfOGoePT2Cu/9+cFJ6cu44KMuw389pvJR87ve8Zva54g799ww6s6Dp+T/
09fW7yS/rVyjHmfaBfdf8NiGTW/+ckLl6yL7nph4mK3fyd4rJbT47NauObL3
SvOGPNz59hzJ+5Y+fWDPtlPy5xlm3yMTX2zrc/Lvud3W54LytKbrzx+2OCaO
X7Bw6NFVJxRfs7I1iwx+/JjsNdR1wasDygb2XHLw9IvGPnRa9trir7E3xryY
o/D3ff9a4teVTin8c1Pefmrszmz5A11s30sTD7P1PfkHdbX1PfkHPWPre9J/
44CcrQ+POyr9HTsn3tuo9XHJL728arerR5+U/Nh1VxxtuOK4nrdCXIWaG647
JvvHH4/y1Mi+PyceYv4VKl+lzb9C5WuJ+VcE5bXTispXZewUL3p65x3TT+1W
+cpNOZ3b+YKdsvebxvfbveSLI7L35HK5reqEDkv+6apS1ftPPaDy9Kl9D0/8
q/lfqHzVMv+LoDzVPbl760vbxeXfzXzhdLV9im9mlZ3Fj7TbpfLQ892xT7ya
EpyX2/vGoxlLfjos+S3L1p+/d1fg//mc+WtIfrjm7F/uWbRNPPKTmInPH98n
fQfjTt20rclOlY9DFRvNa3LzEXH1mb1ffeT1gypfVcy/Q/I9pRvVW9Nrh3jc
/N5XJTTeq/L0u30PUNzf/Dtk75v7XdXhi7pHgvOEK7W77I8rjkjeqtQXDaY9
fVDl6Rb7nqD4ffPfUPnKMf8N3V/k5efPlmq7Q9y/9fWPZnbaq/iKXFFpyB/v
75C9nlr1Vr3teUdkr3/sfvW3c3UOy16LNOhzoHfnIwpfpm3W4FsSDyh83+v2
dIkZdkjl6Xf73qH4cfP/UPm6wvw/VL5uNP8P6V+75Mvqn2/dJv2VPlh8aZ+O
uySfdGHR2jVW75O8zW3HWva+b7eed87msxtfL7lD9o+/oL7XWyH8/UjxGvO/
U/m6x/zvVL5Omf+d9NVbUfebGtPnixc/0PfXavOWqnw1uf3ZZvtbzpa9ry88
oXa35K2y90Lp7SpN7/O35OU6fXrbh0v/VHl6xL5nKe5j/nkqX9vMP0/3P798
RbvV+z8V375m42+t3/pD8Q0t8VhO9QaZKg93FP+73dE/tqo8jHrtpg2/vbZJ
8rualY8dcesqla9N5s8n+dCL/9OBHCU+mdunfOY9K6Rv3dE+Vx68cK7KR9Mq
jbb1u3KLuM6ljY6+NGaNytcQ8/+TfPr6c8+OvHyGOKXD2C7D4perPJ2/Lfw9
T/GP5v8ne7/qh2IVq9XaInu/9541TY/t2Sz50P0ZPc7rtkbl6Qf7Hqj4wq5h
/z6VrwfNv0/3z750Q+dZA6eLR8yf+Pij9yxXfN8uO9Tp3s9myl47Dt919OPp
W2Wvl9zz/nmzu/8te32m+xt3znlyi8Jf1i11RZXBqxR+4cV1PpvTd73KU/L7
4e+Vin8w/0CVry/MP1Dla7r5B0r/Z5XvPtC6+BvSf8+uvVdWbJkpeeVtw1uX
LrlC8tSHJp8tV/fHoL2d2X7+nyenyv7xZ1T/8M3w91/F75l/tvxZapl/tvyr
Hvst7J+djr4//3zu1K2TNooXvX1fRvUb/9L52C0HXd/y9zOb0mX/y8L2r/O4
Q2bvksdbeZC/1ZP2PVpxT/Pfln/L0K/D/tu6/1crv+I4K6+Kb0edcHlOV/m4
IFw+dB54WysPkq+x8iL/l5Lm7y15DSuf4mpWHqWvj5XXdMrHdVZexMvbh8uL
/GXeuSnsHy55bSuP4iusPMof5k77Hq/4h8Fh//B07P0ms3+dZ36j2bvkjaw8
yF/r1YTw93zFV5j/t/xjnjX/b91/qZVf8QNWXhXfzVae02XPFcP2nI69XmT2
rPPVW8wI26vCFzH7VvjfHwzbt/y9brPvDQff760a9h+Xv83r/4T9x+X/tXdb
2H9c+ptZeZf+023C5V3yvK7h8i35+1a+9by9rT6Q/eNvSXmqYN9vFte0/Tsq
X0/a/h2Vr2ts/470DSmc0KDsqMPi44dP9F24/R+Vr47X9d2YsOOw7L2x9d9k
759Yf03yC6w/p/L0mH1PWnzA9veofNWz/T26v5r1P8VvWH9T8cVZf1TlYYv1
71QeNlp/TvJnrL+n8vWt7QeS/CHrX4qrWH9S+h62/qbKxzrr74lfsP6eytfD
tn9I8t3WnxSXtf6kylMp+562uJ7tH5K9Z78U7r/J3rMvD/fXJO9i/TmVp9vt
e9ziS2x/kMrXItsfpPvXWv9TXM/6m8H3Caw/Knv9yfpjsteLrT8me/3c+lsK
P976Zwpf3/pnKk+l7Hvh4tttf5HK11O2v0jlq6ntL5L+Q9Zflf6frL8qeXHr
n0re2fqnet4Y68/K/vEH1X4i+/66+GHb36nylWD7O1W+7rf9ndK39J0qY2bN
PB20X6+Ujus7Plvla9KicRXfLpIje//H5h9k76VsvkHyVjYfofL0nH0PXpxh
+z9VvvbZ/k/dP9DmT8Tn23yJ4mts8ykqD9/Z/ITKwxybj5D8JZuvUPn61PaL
Sj7V5kfEG20+RPqm2XyJyseNNl8hLmrzFSpfuafC+0uD9s7mQ8T32XyIytM9
ZzuObLLrmHif7S+Vvde3+QfZe32bb5A8d354PkLlaX+NvBn/rD8mbmP7R1W+
qtr+Ud1f2uZPxN1tvkTxlbb5FNnrNTafIHttY/MJstfLbL5A4S+w+QWF32/z
CypP9+yZe1V662Pifbb/VOUr0fafqnwdsv2n0l/T5lukv7jNt0je0uZXJH/S
5lf0vA1tPkb2j7+q2q/MU8NPv50n/tr2/6t8Nbf9/ypfk23/v/QVuejzA5/0
jA3BL6Z+8tlzG4Pvsw2quvHmceNj5T91s82fy9672Hy5ysMEm09XeVpWZ+GL
8d+cESfZ+QAqXzfY+QC6/wGb/1d81Wy+X+dxNbb1gBDlIc7m11UeYm0+XeVl
hc23q3wdtPMEJB9s8/vSV8Lm8/U9lFyb7w9RPobYfLvKSxubbw++V2jnD0i+
0K66f4XN58uf6qMxw9ZsTD6j8lXDzh+QvY+2+XPZ+2ibLw/Kn82nqzzV+KlM
7tBzeeIP7XwBla/H7XwB3f+Nzf+H4PU236/vvdSw9QB9L+EJmw+XvX5g8+Gy
16423y377mjz4wp/o82Pqzx9OHhj/xUD88Q17HwCla8Wdj6Bytctdj6B9Ne1
9QJ9v+EaWy/Q8zaz9QHJO9v6gPyzfrH1BNk//rSUp5uqjNq1ZFOc+Gk7H0b+
ZE3tfBj5kz1p58NI39X333LegTMJ4in31vj110eD7/dNePzRDpsqJ8reM239
V/a+xtZ7JT9q68HyJxyx5/Duxr3ixVXs/Bj5F35v58fo/udt/VrcytarFV8f
W89WeZhk68MqD1faerDkKbZeLH/ES+28Gck/sKu4pq1HS19pW69W+XjI1ovF
zW29WP6LDex8Gsm32nq0+IStR6t89X99Vdrci+PFdex8Gtl7L1v/lb0fsPVe
ye+09WD5u34/tdwnSefHi4/b+TPyf+1k58/o/nW2fi0+Wza8Xq342tp6tux1
s63nyl6P2Xqu7PVeW69V+FW2vqvwGba+K3/Z/omxm6v/HieuY+fXyB+xqZ1f
I3/ETDu/RvoftvVu6W9p692S97X1bclfsPVtPe9BWw+X/ePvS3lq169M0bS+
hcUf2flhKl+P2flhKl/v2/lh0tdi8rIbbxyTLP79o6X/XBCXrPKVuSD2uUrz
k2XvO8xfSfaeY/5Jkl9k/ksqT9PsKm5m54upfG2z88V0/2S7ip8w/yrFN9b8
r1QefjV/JpWHRua/JPl15t+k8pVu55FJvsj8qcQdzH9K+m43/yqVj5fMv0n8
uPk3Bd87tfPLJE8w/ynxJeY/pfL09vqHa8ROKSx+0M4vk71z1fctzT9Jv/cw
/yWVp20nvlnaamJhcUk7n0zla5idT6b78zaG/a3E5cy/SvE9bf5Xstd480eS
vV5s/kiy16fM30jhT5l/ksJvN/8klae3m78R/9QDhcUP2vlmKl+P2flmKl87
7Hwz6R9h/lnSP8D8syQfZ/5Ykn9h/lh63vPMf0v2uXLwhdU3jkkR97PzDGWv
iXaeoezlH/PflL30Nn9Nye8xf07Z30N2nqHkEf9R8TDzFw05f1LZz1Tz5xS/
bf6cwfdi7fxDya82f1FxyPxFZW8Ly2e3bVw7RfySnX8oe/jG/DWD/oz5Zwb2
af6b4oi/qLih+YeGnP+o/I/xR3bnJ2e685PF+GNTX91t9Zf8q0923/VH8nfJ
kq+0+kz+LdxP/cJ5zOQ/TH7B5A/3y78qIsfeYOwN5nmus/6M/OM+sv6L5F9Z
/0bPx3nQPB/M8+n7p/ijRJjngXkemPhSbPyi53naxiuSv2LjGT0P51HzPDDP
o++l4m8ZYZ4H5nlgtT82X6H1q69sfkLz+7/a/IXWlzgPm+eBeR59X5X1zgir
vxBhngfWeM7mJ/U8D9t8pOSFjoTnK/U8nMfN88A8j77HGnkeWPNVEeZ5YM2P
2nqEnqevrT9Ivs3WJ/Q8nAfO88A8j77fGnkemOeBeR5Y80lZ4fXH4Hvu9cLr
jRofD7f1SI1PrfxkLeB5YJ4Hlj9whHkemOeBNT4wfwM9z37zLwjm18z/QM/D
eeg8D8zz6PuwkeeBeR6Y54HlD2v+RXqeDPMnkvwT8zfS83AeO88D8zz6nmzk
eWCeB+Z5YOLbY/6Eep4i5j8o+QHzL9TzcB48zwPzPPr+LPO5Edb6eYR5Hpj4
Spr/sPqbk81fWP3Rd82fWP1BzqPneWCeR9+rpX2KMM8D8zww8dW2/QF6nuW2
H0Dy722/gJ6H8/DljxVhnkfft6U9jTDPA/M8MPH58/Vh4oO1PhBhjZ8iTHww
8Xl9kfYtFF0ei4eiy2Nx7dfiyn6uR20/l35/zfZzaf9Gs8+u/Glp1WLyf6V9
ZHwCs1+H/Wjs13kt/D3Zopns37puWq8/cjsH39t81PZ3Sd7F9nfJXxH99Cd9
fHwPLPp7jYUl53tg0d9vjJOc74Hpe6jnj/r2uuF52t/E98CQn3q2e68POh2T
nO+BIe+wYcSdJfvvkHym7Y+S/K7ZCZ+8f+8MyfkeGPKfexfZdN0VW7Q/iu+B
Ib/ml8pzp9xwRHK+B4b8ifbNYm9rmyM53wNDviX8/ddY7a/ie2DIC4W/z5oo
Od8Di/6+ZLL2j446r2GJw/VSNZ5l/xD2//91de5xPZ59HE/1S/WrfnkwOSQZ
y2yeZg5zePDDw0Yt2/Bgz8ZiLCzL8XEYc4rNItpaZitmW20MC6tRVNR6aCux
lCLkEGJJCR233d/787l0//V7vX3v+/7ovq/rex2+13V9wbj+ouw3JYfL/SyP
2K8HOxh2PA/1DeUNjPKB/XrjdnTLWjLHlf3NwXXObaMvmMkfyv5Hsovsf2R5
NOaPhR7qJxj1E4zz+V+UX/LhsgN1b8xW+WS7Zvq+GRmm7HYrCkaUh6v8s12z
qsrqotR5/5tjQ/z7HHLh+febrXEfTLhoJoekTFz5XSeVT03fj8j3UVlRu9wj
wcz9ngPlfVhhN+4PlfLjSjuY648M+03hn+AfwPieo8Wf0B8Naf+xT9BSlQ+w
IHbEZcdDZtqTri4oiAp1sSJfnHF/KZ4P/wDG32+WfHK8v8PtBLvqVmo/aZtr
iUs+O2bmfsz8wsSOXivNtF9p99K6mYNUvhnsp8b3B+P7gw35Hcjeks+B+ekS
JN8D7fmS30HZJZ8D7X6S74EM/47/rzG/7ufu76U2lqp8DKhP+J4o3xivfSL5
M8jBkj+D5akyZFHbPVlu1MN4EOUPbMgvofLtSv4IZdduUOPJxK7n83tGqP21
qO9N85Gr/LuO4q/IV8W/kVeIP6T/7SP+k1wg/pac/ZPmn+lP/cWfk8vF/5P7
SXtBlnzaKv/l29IekT+S9pD7xdubwj2SDj22/1jyZZDnjNk3c8s5V+avOJU5
9vn5h1V+xS43SyK3xijG+8L3KJT91WR8b+wXbnjyqpPHCcW259tXl/Z97Pm6
/8D3P173dnSqxYX5G2W/p8rPsrv41VPt4hTfHPEgzWmnC/+ed+XvUfmvC5/s
lh2sOPiTxE3bH2OUZ9Q/1H/UPzDqn3F/+Ubxj+Rg8Y+sP83E35I3in9l/ess
/lflm9T3a2M/d1H19uMDR6n6ADv0jPu76+R9q3wo8r6thu9pRb6Ta087Ht+W
pfKfVIdN9+iwU7Ex3yy+x8GYUaemetUOeTOnS1B8uOL/xiQEJPspfmF8l+7z
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
6RapGM//E3aBSiU=
    "], {{
      {RGBColor[0.148, 0.33, 0.54], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNnHe4VdW1xffel6O3wI2C5xxAQEFsydMktjwTX4w0RUWk2BAJAooaFCkq
CiJgwYIltkhVEOliJ4qABMECFlAiQiwISlWaFCnqGz/muJ/5Y31r3rXXXnuV
Wcacc53bsEvPttdlSZJUPyBJSlRPTpNkqxqOFN2wMkmmVkuSu4pJ8rXaz1Mp
Vxmltrnq/JX69VY5Q+VXav8/1aepdNW7R+rd6ep3j95tLPpZ0W+IPlb0C7wv
errGeEqltd79UKWpyol69zXVj6oUVb5XedB0H409TPUhKq+q/N30DVnQdVQe
UqnFOxpnq+r7VfIqi9TnYdNnZtGvtso/PX5NlcfcNkbvrlN9vkoNlZkqj3v8
MpUuet5LZThr0vxXaryWKmcxrtpfUNvTKher706Vi/zuM+r/ptq/Vr89+vsS
lXoq4ys0Pz1rqr1ppWfnqjypcfbpWQeVBiqT9Hy+3v1Gz8ao/zv6+wz136Bn
bdLYf87hL5yJ3q2tZ+PVZ5b2+VS1/a9Ke7V/oX7nqORUVqm0UillHuo/Uf1n
q//hoqeIniO6Mo21DlKpUxlrGKT2+pUxp9tFP6t5PalyrvruSmOf66qMUKmv
8qzenaV6pNeyWaWt9/wOzesIlT+KfkJ1A5VTWY/qSar/pPKzynCVhiprVe70
ubyicq/p+9KYK/M8Xe/e5b8rRU9QfQLfF904izG3qJ6Yxre2iZ7K/qkcLHqa
6iYqx4t+3/Sb8Df8o/FPKgm6sejN6jNE5ST4gn1WLVFKjisJmv6b1D5I5UT9
PSMNHua83smCPw9S2ahyt+leah/qPrstC/BJ0yzWCX9/57Wzh697f+jzgfr8
w/t/ThY8zRn8mEb7YSpL1D7K9E1Z8DbnkoqvmqkkFfEOcsDZ/Ul9Bpv373IN
T7ycxjzRCd+o3K5SobIgi7VAf6kykD1ReVFliHnvWvW51XTPLNoZ5yvO0Dw5
L4sxefclnzvtyCjyzfy2i74wDf3wvPZ8nMoFopeptFD5SX3u1Thnwkecneh2
qpupLFVbc5V9oq9R++9V9oq+R3Uzte8R/bss+p6scpXo41R2iv7AfLFLdKK2
jubPF/X98SqXMh/t4xLJyJmVMdbJ/u4UPR9VEvpucRrf2p3E9/neKaI/8tyY
zyPIpfp/oWelGusJ/f2q5C4n+nHRvUSXVYY+6it6SRpjM2YPvXMyCl5//08W
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
fSNG+/9bN2TM
          "]], PolygonBox[CompressedData["
1:eJwll3mUFNUVxgu6C7qnp5thmKoaNhWBGEQkOUlOjifJiUlcQBFlURZREASU
EIlGo8YlMZIYEpQoYthhEBz2LYCJ4i6GsAwMTFQ4QQYIIwOETfY1vy/fH/f0
99336vWrV/d+9742g0f1fKhhEASNGwRBmt8OSRA0KgqCL7NBcCQOgh/CW8GP
wRuBF0dBsC0TBAPDICgpDoIf4GvB+FHG0+DvYKXw/8LP8/z18Nbwr+AZ8Dex
AvwA/DTjHeEZ+D74Mfi34CXwg/Cz8M7wYvh++En4dfAYfhgegL+HlcOPwBuC
v4uVwQ/BLzK/E7wIXg8/Dn8IPp4XvRXfz8GNC0EwUZz3GZoLgp/i+zO8C+M/
Ay/ifaPQ77wE3BZfwNjYVBDUsV57eAP4eHg9/ErW+4z5i1ijHfhxxqeCezPn
SfATiXE1c4oYvwr7HLyMOR3ALbB/wSvhrcBtmH+JvY9m/Z2sX80eDrGXYcxJ
OP/LmPMpeD7zrwAvZPwzxsvwzQWHib/NbJ4fyvO9sCngYfh6g4/xzg+C5+P7
Wj4Isom/1RvwBxlvCT8PHwlfB28KPwW/AV4JbwY/De8GXwyvxbZlHTOKnV9h
M9hbH/jT4Bx2nPFOzH+ZuXn4Cfi34ZPgd2JTU97TXeAmjJ8Efx/fzNhnoLPQ
f+wCt2b8AvhRfNXwy+EX4U/DP4c3h5+D3w//CL6ZM2kV+gy3gKdhVeCm+CaB
12MtwQfwbQRviIyH4os579s54x28z3/g3cEdseVpf0N9y37YQXg9vC+4D1YP
3we/C9wDq4Xvhd8BvhOrg38J7w2+GauG18JvAj/P/ufCB3F+vwO/yn5KGFvH
nl4D92LOHsbr8PUE/wRbD/8C/mPwj7C18B3w68E3YlXwnfAbwJWsUcNazeCv
g6/Btw28gjnXgmfhq2a8FN/0yGtqbZ3ZVPhEnVnGe9Le9B/6L/n+An8q8bff
gq/AWIzVgGezfjm4qzh4F74u4GeYPwven2d+Db5V+QTfzfgt4FJsK7gCXxn4
Nmw7eA++buAP+M/m4L38/0fghDXO8v0H8P1X8/1fwqbBh7N+Od/zXGytmcH4
3eALsbVrJvwecCqxtrwOHwI/E1u7psP7gY/G1srJ8B7gr2JrmXJMuXYqtnZN
g/cBnyTfHoMvhl9NvjVIrGWz4Pcx/g72ftYaKi09EVu7lBPKDb2D3kVz3gVf
iq11FfgGgg9jdfCJ8C7gVdjbWWuqtHU/fJdynzN6UvEA3531mYyLrWHSMs05
EFvjpHVfwPfpXWNjabq0XWeks9I73Qv+GFuTtQZLi6UZ/9cOfBvAW7BNWWu2
tHslvHfKe3wzdo4qV7XGGvD62M9K86X9ynHlutbYCo7wncl6Da11ivN9Ar4E
3pHzPQF/BL4I3iFvDZGWLNSZg1/BKrKueap9k+GVWdck1SZpiLSkBt/22Bon
rVsFXwpeEhurpqm2bYs9VzVRtVEaJ63Tf4yPrXHSOv3HFPBcbFnWNU61riL2
3lSzVLuksdJazZkHbpy4Fs/BNzx2TCo2n5XGKT5zxsvwdco7RhWro/D1Bx/P
GS/E9/W8Y1KxORJfX8VvzngBvqvyjinFls50UOwcUa7oTAeATzP/KZ0FvmuY
fwH+AnwF/Bvwc/DR8L/CO+cd44p1PTM4dk1SbXoOPix2zVHt0RojYr+j3lVr
PKBx3v9GzmYD8XuS9d4hx3eT64PhzcjnRsT05tA1PQMeo54FPIxn/gQeyH5u
Ca2xS8H9sK6hNXF+zj2AegFp0irw41j30Jq/Vv0B1i20Jq0GP4zdFlqDPgT/
nv9YAB7C//0B3Atfl9CaPDvnmq3arT21Z38F+D2he5IG8Obw4aFz+BDv+wBr
vJj2O49Q/WS8P+Mr8XVmfjH87tBzznAezQrWRu1Ze8/Bp6S9Z+29CXx62nvW
3k/xzFj4zdJX+CX4K2mfic5GNU+1T+/UhmdT2IS0z1BnOQbrEbqGbQdPwHqF
roF7wZOx68B9eZ/94HFYz9A1sRb8PHZH6BpWA34Guz10jawCn2M/49I+Q51l
xH7uD10TW7OXFxKftXog9ULKceW6ND9OHOOKdWlEWeKYVmyrZymFXwtfnnKP
dUXinFHuqIe4LHGNUK1Qjb+64JhWbKvna8f4yMS94kb+/yxj7bF5KfcshcQa
JC1SD9UiseZL+9WTlCfOGeWOephW8LbwypR7pCL4TbHPThotrf5j4lhWj6le
s5T93Re6x2pacA4oF1RDI3hT+KDQPWi+4J5dvfskeBbeBH4v/DV4CC+DD4HP
gTeH5+EDQvfEF9jbi/z/iCL3COoV2uGbm3IPV5w4hhRL6jmm59xTqrdUz1jC
+NjEsas1XkqsCdIG9dRXwp9NXPtV41XrOxXci4xRTQe/T77vId/L4avBjyZ+
lx4880vwm6r5jO1kzt/BjyUekyZIG/4WeUxnprObELmXUk4ptz6BtwDvw7cW
/I/IWDGn2FMPpF5oM76ZkXts9dqfwueDZ0Qe05np7CbDN2aco8pV9ZjqNeWb
Ap4X+Vl9A32L2fCtGWuCtEEaJ61Tjp7O+5317tK8dyP3VOqtlNMl4IvMqQqd
wwG8IbYpdM6mC75z6O4hTSgGH835LqCYVex+GLl3UgwoFp5TjS9yz6bebTnj
MfjfzFkROeYV+8rR8/qWkccUc4o99ZTqLfVOc8C/SRxbWvO34Bp8hzPuydWb
j0p8N9M76F0eThyb3fH9Qvlc8F1JGiOtWccz9Rl/M327ywu+C0mTpE1tC76L
SXOkPZuYczDjHl+9/hqsLuOeUb1jUnBvKg2SFr2NrzbjmFJsjU7ci+uOprva
MnzbM74j6q64CtuR8RnprFoWfJeTxknr1KOrV9d/fhz5DqC7gGL6PfgR5gzJ
OqeUW+pp1dtqzZWRe3b17urJKyL3zOqddedbEPnOobuHznRr5J5ZvbP2uBT+
SOKzVEwoNnTH0F1Dd4A3It9RdFfRGVVF7mnV22pPPWPfeXT30Zm8FbnHVK85
gPGuse8wusvom/xTd9Wcx6Rp0razOdd6aa6093+/hVYX
          "]]}]}, 
      {RGBColor[
       0.24642567069142113`, 0.38468092816190064`, 0.6321764217586325], 
       EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
bqLxHbSXlUXPQxxylcZdh/yr/bxoGnkbUPTZcC7L6rZN62lfc8ruX1XwOXA2
8L9SNN/h+Sd161233M/bzkP9b9dtL9Yh7hZ/57NPtXuqfVT9h2vMg/Cp7Phg
m6LpfUR/VrPPuz+3XLAOZOO/id8hRl+h55PLjmEeK3tO/MFXie+J7y/RGqbA
F7WfFk3jdy7T/VTRl6qt6htf6pvd9c0vdd9FPFtd8WaaO17uUUN5bBvIab6v
W6aI9V6o226sIfqPum0Vuc6NdetJi+j2ufnXU/N0yL1XYqJS5A7kEOgPvugD
PWuM/IU8pl3kU+RVSW6+dtO739Yt+/j/2+vmT6voWXXzp2NumUfe2dvXdZ8b
ccGCuu3q6qJHih4v+jy1H4s/E0UvEn/+r+h+Yrz/FC1vxFGj6+b5RWo/K5qH
xIqj6pbbC9Wer2uC6H+q/ahoGh/6r7rnv4A11n1GmdbwW926SH42t27dzEX/
UvcZkqutqvvMyc9+rFsWyLcO0fzzNf6kgt+DJl7EL2NviQHJM/EzqyqOW/tF
/Iz9IufhjMmxhoeMHaL24LLlAJtG3ouvJEc/JmIA/CQ+G195Z/Cfc0BX0CXO
+6aQAWRhWsRRxFOLQ2aQnTlxXrMi58AWc67Lw48gF0eUbfs4v3GRf5GH9Wxy
TLlYa1seOovu4gd/S7xG4o1fEscT2IbR4R8/DZ1Fdz8PO/ZZxHcXlh2fYCe/
TsxTdOrLxDqGHfgo7DM++tvEPhu//2Nivz5HPO8jel+d0fyIz/YXvU7Ffot4
iDh9/YjViTdWJfbH2Fh8Gv70tYg9iEEeIgfRmCGa537RfUUPzu27v0/s14lt
2+K81Ryfnl+2LqEHxG3owlrhx/Hhd6u9NHFMfnXEDMQO3VPjGV3Vrpsad1k7
tc3EJ5PP9k49x/pp2A70rGIbhi1r03Pd99R1ub5xX+I4kXwTOaRFv8AV+gUO
Q7xJvo6+PBAxJffkxBtGvryhvnc/cp3aPmInn5Zd7aHn3SveDzERfgVf8HDo
2oORy44I2/hM2IEFkTefUbb9Iv84u2x7ByZxYtjb+aGbcyPvPzV8KP6OXAFg
i9wBGt/XOTXmVFc7U2u6OPEz4mHOFx/6bMQ03L8b/gK/QY7TVHEe0k1t14rf
x/5/kZjHxCCfRhyCb/8k/DtxR1v8oW/vVrc+71q3LycfwbfuF/pGrg8mw3gw
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

          "]], PolygonBox[CompressedData["
1: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
P0+oy/Y=
          "]]}]}, 
      {RGBColor[0.3375516780458201, 0.4223344555432595, 0.6206405470912751], 
       EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
          "]], 
         PolygonBox[CompressedData["
1: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
SHLxP7vJdc4=
          "]]}]}, 
      {RGBColor[0.43535242384396233`, 0.456705324673597, 0.5631474569096196], 
       EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtlVlsVVUUhrel3NL29Nx7hsRoIrFNEDXaUo2RqBiHQERIjGhM2hI0+KCg
La1KRcVaSuOEoq0yq620Flsoap2QAk5gRejkgEMQ1ETjgwk+4IQS/Fb+/bDz
/2fttdde4z6lC5fMq8tzzu1jTWBtC51rnOjcdvAV1r3wusC5dQXOlRc6twqd
82LnysDVqXPHMs79xl4+333gJehshI9knatg7zZ0W5FPRb4ceSOypRnZKQXj
Atk6Al6PzhC8FfnKjOxMiaVzDT7sBq9Apxf5cCob9YlzY8ivRb6D79P4XgAO
sN/K4tONRfhDLCuIZTiU33bnX8hvj+Wn+VuMjWnwq9j7m70E3oh8byrfL8NY
NtX9R8GTk5xLM7I16u2fwM9FiWLeCS9lLUb+BPsbuGsG+iewWZvIptmezepH
Xs2dX+cU/zfg1pzytQ3ckignh+ANiXLYl5N/5ucfkXLQmVEe1nPfEu5dB9aw
tx35fHCDl8/Cr3Z4LbwNfM7zi5BXRLIzzWOHt7kLHDQf4DcW6tv4iki8JVIN
7S6ro2G/592+l7pC9Uirr6/V1vJoObS8WH7Wkqcp1lPoVSJvgJ8Nr3Xqozsz
yt0pi3uSamx1SHwtbP8Or3NWiXOPcu/33Du9QDW2+s6Bx/Ab4IdD6RwBH8np
fDO4AJ0zCtVPfewtRacXrMbPQusZ4j0ZS6+dvBWn6tE/4bWse9B/Gf2uRL1q
PduRaJZG2L8w1gxszqqWVtM69jtDnd0cqo/t/hF0R1lz0DkH3TzuboN/h34X
58vg3eCPnHmMs5OJuygjPy0/lqcizy3uKzOK3XCG582R6lvHnVX4V4+dTdbX
8PvgW0LdaXNutWtIpW/nrDctLouzJ5T+q+BXifR/sjckVT0vII7BVPXMZ39j
qLteAHtT+bIenc5UtVoI/8HHdRT81OoEHwLvz6r2y2wOUvVqeaRZst6blaqP
LD+Vfm5tfg9zbyU+3Y2dZ7CzKNUbdCZ5Wx1K/ix4LFX/XudjNR37tv6yvrQY
Lk2Eg/5+6wG7YyLyKr7n5TS3lqNuZPu9/78E8qvU+/Yl8pXIvwAvTmS/B51f
U81fDM7kuw6dNaHis7fP9o6nmsV68PlQOmttpr3/FoflxfzLpeo1e6NsRsxH
62Hrs/FIPWM9/niot2vgdOrofQvJT01WvTQfnOl9Mx+vTuVPUYne0Qr/lh5K
1S89iWb0lO/DrX6mWojp20Q6plvj5/+WQHNfnVF+h2LNbVMgH+3fY/+dp7Fz
F3bKkO+APwjfGWquLLfnx4rBYnkS+ZpYfll/WW0s/jzu/5i9h9H5PNBM2Hth
epcnqncTuk/5u1aF+he1Z1Rri9V8tjp2sNeATnWgM3Z2OjY+8vY/BHcH8vM9
+LusB+B9yMbgLeaD+RnoX9wP/zerWf0vq/9wo/+HvmEzYLVG99ZY99ucve7l
r4FzM3o3rL4ved9eBA/EmjWbOXtTTOcgsrZYsS/G5tSczp8L7uLMQ5wdtDll
bxn8TfhoVvUeAz/juxn5QXAvqwn+CTiO/nL4+/CbcqrpzR6rfH1/j9Qb5ege
j9Qj9g8fjlTn2cW844neIHv/7G2e6+P6J9C9B7D/c6B798H3hLr3A8u5939P
oLq1+drtj9RLkwPlwHrM8lJSolqMc+4dX6O3wQmRzueDA6Hy8Bb4P073PVA=

          "]], PolygonBox[CompressedData["
1:eJwtlndsllUUxi9CW0u/934TEjUSwRAnghIDwRHRuDXGEZOqAaMxClqGCk6G
QBQntNACFQQBq0VERFCU4RaRjeIK7mhiXKigOAj+Hp77x0me+57znnPv2d2v
G37ZsINCCG9DnaAeuRBurgphHrQvhrCZ84yaECZWh7CjEMI1xRCWgC+oDWFA
1xA2lkK4kPMl/LsBvBb5e/h3KZTlQ6iDloDvhNrhnQQ1gOdD+9HfGH2eAv0I
7ojOQ9A9CJv70DeiEsJH6F6FjZHga/nWG3wi3waDv+2C3MEhlJDvyflK9Pes
scwmbB9UDqEePAj5DuBv4C+C38i3DrxlHTbHYXsmtBu8h29leIiG3eDH+TYC
3lTo3Iw7Yq9TrW1cjb1joe7I90D+GHAv/pnLeR7UG7wq2h8t0O/gd6Gx4OXQ
8+j7Pmf7Ohe5bx5aBr4X2gavMzJbsfUc+urRN7NkX5/GeRZ4DDG5EXwTNA78
cHT8HoV+AG9FXx94ddz5D+7+PN/ugDcd2gX+Bxv3gV+CyshO4DwKvAiq0V0y
8ySzGfmWkm2fwR2aweOKjs1q6D7wdmQmILsSWsG/T3K+FdwIXcx5U7SuWdAe
cBU2nqmyTAO2+xL/s2r95oHEuyXn+y6GapHtWXC+XQQdVfAdddfbdUdkv0Dn
/eC10BrsHYm+k2sd8x0EtSnn3FJOXMr/8zL/f+DN/Hsc8qcivwaZOuz/mTNW
TBVbvUlvmwh9iHwndDYE66sqO0aKlWrkanAb/4+scYwUqxn8Mzzl00/gdr6N
gjcaeha8kxjtIZ/3c97F/+3Rd5sG/QpuhoalehnIXc7JWd9CqAO+eBX+3an+
2uG/Cn9SjW3I1taic7uW8zbwv9gr8d4LkVlHPNsy1+tdygnFsujYXorMQHwz
J3O8bpNN+NtSvBXPMfA6coe2KtdMPbav0vur/E28v4quFdXY3qJrULXYBHUE
z4mWV778rLfmbEs2lSvLo3uJ7qi7XldyLqrery/5zXq7am41sgui/2+CfgH3
Kbo2lWPKteNL7iWq4V4l14DyfTz0N7bf4J8x4BnQH9E5pdx6APqK80Lke1S7
J6g3dMvMk8wRefdQ9dKhUHf0fUIMJlU7J5WbX0bLz4b2ggdkrt0DNcx5Sub/
dX6E8zupf+g+I1Vf+dR/oAXgF5N/VN+D4Y/K29cV6A7wwrJ7+cO8eQH4BmSa
U7xf5t+no2tJ/rocXj/oJ3LjV/5Zj+/mp3pWPJQLf3JurXLN7QT3LzvXVRP9
wK2ZY6+YPhGds8pd9fxp0Tmr3FVOn41/Pk/1K50TkR2AjnuDdZ5Sdk+Tf26B
HgMfiswXNe5B6kUzMutTTcyEf07F9bgSHWeD6/PO/c6qT3CpYp7qu1xxT1Iu
K6e3RsdcvpbP346eETNTfrwP/i3af6q5leDXonu3+v3Nmakl5eOa6De1pv6x
g/NnZed/K3f4FFyo+C7tnPMVz4yWNA/Wqh4qfus6+A0V19ys1J+3qLdnvp9m
yvroHNH9lcNvcZ4a7TvN3+nwzqtYl3x0fsUzXbNdPh3C+ZXUT/RG5UpL6j/y
sXw9vuDZcxT/lPn3hJx7l3JOudct59yRz+V72Zyf4t+Erueg0am/1cPbWfbb
5ZPPwUcX3Ou1E2g32J7zWzQjNSuvgH8V/CPg13X1TjE/5ceJyB6mO9V6h5mL
vrE59zrNEM0SzQD1bum4vOAdR/WhGv244B1maYrvGv1bxz2qXc+TsbW44N4t
G7KlHWZKyufp0TuIepNm8Ja8Z/zylE/foW9z0b7R7rUJPKLs2lS/HgmekuKl
nFdvUE9Zm+rtcM4LMs9Gzcilqv28a107kXaj11M+yl+Lke2S9/xSfmecH4x+
i950sWZxqn/NRM3GjdG5rp6oXeChJK+epN6kmCv2mjFDuO9Q3tS/xjvC3+i7
Ju9a00zTbNuQ9ClHlavaqaamep0Fb1HOvUj9XbujelBTmjdPwW8ru1YUo6fB
nYqeHZrZmt3q8ZLXG9qidwb5RznWnHOOKdc0U5+FvyTln2Tky/+QP73aM1Gz
UW/QW/TtX3DMXLvyoXypnUq7ld7cWPLM0uxSj5yn/bnk3VP5tqXkHFWuaifo
y/3PzHl3VQ9XL5+d9k31TPXOFdH+UP2p1wwrOzfUExvK3iGXp3p/L3qnkD+l
ozV652pM/Xdu9M6n2aAZsQz8QfR71JPUyzUzpqd8eiE6Z5al/vFm9A4yLflz
MXhy5tmlGfY15/8BAeaxLA==
          "]]}]}, 
      {RGBColor[0.5331531696421046, 0.4910761938039345, 0.505654366727964], 
       EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
          "]], 
         PolygonBox[CompressedData["
1:eJwtlXto1WUYx186h13a75yd3zmLLNHSqCzLzUsNpBWu1h9lIF4qnYm4TGbT
YFKJpMuh1SSxZRNqxahcaivK/EMsVpGIrLS52XBgZWskgRADu3gp6vPt+/vj
he/zPpf3ub+TVjw1f+0VIYSXOWnO3+UhjKVCeIBzGbylLITq0hBeKgphCDwt
H8LVxSH8WxLCQuiThRDGobgB+ZEohOfQuQOcRuZSHMJe6JqUdSrRHUTmaejx
6BzOhnAC/q/QtZx+cDU6u3lrK/Qs8I68+fKnEd3F0D8l8ougW9AZV+Q39fZe
/HmTt6rweRP+LedkwLOQ2Q9+hVNX6jdGwB/nQliDbhs669D9Ap8Kafs4gP0t
8FeCn4FfA7+iIoSvwHdjY1uZj/Au7J0GNxds6xbu1kN/n7Mt+bQP3sXYublA
/ubCfzhyLIqpntgOIL+hyD7Jt2szIbSDq/Cpkbffxr9z0A9x1qDbCT0KruMs
hk5j//qkHqnYOVQu5fNV6L+IzaYix6TYjmRdi43Qv6B/V8GxTsb/ZvyrR2YZ
8o/BfxTcQI6z0NOgl4Of564E/RXQLeDhnPuhGfoUuAh7Ddgbj70m7NXyxmx4
w5wbiTfkHEsNMp3QDfj7Cfa3yz74VeSXgC9w/oF/f+R+Usyv4/u9iT3lbwr8
idBTwcc4feg/kuRXPbQMfit31WnndDN4V+TYUtztx96pcveK8vkd+I28fVMP
qZc+RX51yjE3EtvS2LXZpvqBB7AxNW3/M9TuG+gb0q7BRXSrkJkC3QpdCX4C
mxXYruXNg5ovZGbAO84Zi90j6hXlvAu8u9yxKuZ3wT9gfyb2OqAn8N49FbYv
f0qhZ0SejdOcnciWZcyTz/chWxK79h8R4xnimRy5toOc7eqNpP+Usybkdyb1
+H9ZIH8m592gHlevX5fkX/4fi70jtCs0o92aD2yM8tZczQz0C7F91906eGsj
98N5TjfvVyb5UL+cRzabcW4V8xD8Fvjzk/74mlp1YnMBtr/kvXPgJZFrqZnp
Qn515F2ifmhH/smE1s57Dbos9iwrJ8rNjwXnRjtQu7AV+UXajZwe7G1K3pf+
UfTbYr+tmBTbxIzxbPwdQf5S5F5Qj/SrN/KOTfWcA6+0wvOr/vgjco6UK83E
WfC3kWcrh0wXvp2N7Kt6rA97h1TjtPdHL7wDWfe25n0f9G05+z+PmAZ4+4Oc
bamne8CpnHtRNdBsnshbVj2qXt2TdW1kYzP2fo68azTzQwXvCM2TZr4Yuj/x
V/x3oBfm3DvqoQXgtwp+XzLHkR1N7CkHw/Au511bybfDO5J3rpXzjdDTC7an
/dMN/Vfk3GkGspqFnPUlfzP4w6xrJx871MvEVERsNxFzD3hVwbOtfByC/2di
T/6UYa8j61nSDqpT73A3VOw/RX+LdqZ2p3bmYfBnyb5QjE0F70zN1+/wT8be
idqN86B7wUdj7y7N0AR0d2Q9i5rh6dC/xZ4tzcTt0O9Fjl05mFnwn6e/T39I
P/jzyL2gP6036z9Jf5P+gD5wT7ljVzz6q/ck9pSDO7F3ZbIvlM85xDoY2/cx
Yt4K3YbNgZRjmhR5Z2s+lZMH4b8fuffUkwc1zznHqv5RL64vd/8rnmfBS8sd
n+KvBz9OvW8tdo1UK+1kzbPuVsJbVeFdph11Db7+BznqGM0=
          "]]}]}, 
      {RGBColor[0.6309539154402468, 0.525447062934272, 0.4481612765463086], 
       EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtlW1M11UUx6+yofD/I/x+99fTwjXNtK0MMh5mK8PUFz5km9lCDQUfAMXU
ISN6IF8ksnqRjznnUwJzifRC8kVrka2VD1GJIoKoCNRGa040HXNJWZ+zc178
9v3e8/vec88999xzxy1fv2DdSOfcEb4EvvdTnXso0blN4NzIuWZ4YeDcRcbP
wUtD56bHnQtGOfc4vDzmXCXzXvDOHca+Afuz8EyvfAp4LM25d5h7HGxnTj76
o/hey9wSeCKa0V75cezT+NqYmwcmpSh/CT4+1HUngLuZew59OfZbkfIFYCp+
ClhrEWt9TTwfoi/BtplxGfZasDimMZzDTzFzetCUgrO8amrQbEPzPZo52Avh
s+F70Q8x7oW/DWajL2duFljsda1SMMfsn7P+n5H6SQc/wM8uyTX/OyyfXaBj
vAz9TvQ7WWMqfAe4y3gZ9tGcwafoY+AefD3PtJxQ9yn7TcbHZf6lwIvw+QCa
BngWtrpI41+Lvhpfc/B5Ej6PeNKx/42mkfm16K/i7zZjh+YvcDhQzRZ8bEbf
AL/m9fwkh/X4aYm0BsZgfyRF81mCbSvfU9hHoPkv1D3eBzNDtcv/KnzWyDky
txv7q8QwOU3rQOrhErY7Fk8Gsf/Ktxt+AP1+r/wgOM1rDBKLY/50/CSAq9Hn
otmKn7OR5v9dtBvh36HZgu97/CtA8w9Yxr8a+BqpI8YT4W9KnYSac8l9Pz4b
sV9A0+v1XOR8sgPN+cNojnpdS9bMZ+4E9IvBpebzDXxcj2kt7QNPMXeQuWfA
sXHlp+FlUm8Sj9wX44+S45/5dwtNKzgT+3nsMezzrN6k7rIsnlzwk1DzsA1s
9xp/B/h6XGNbhL0h1LyNIG8bvd5ZubtJVnu/YauwuyZ37heL4TF81DBmedce
aK1IzXTDawPNcyW2eubvYa029EN8LfAk7JewN8F/x9YRqJ9XyEmF19o4iabL
NJ1gn9c67Iq0VqRmOoh9f6h1LvX+JNyjn4HP7XE93+FQ9yZ7PAj/mDW+RB9F
eufl7ufhe5LNnQg2W++qxD4y1N5Yzf3KhT8Bb4Q/bTFkgEWB9sz5+Kyz/R6S
/hbpfpMjrTnJyUfgi9ZzpD/l211eAqagO4E+LuduNfkN+3gr1L4h/fjBSOPv
i7RHy7orwDE29y76njS911/gY2FM790z+Pgx1D5wCjxv9072kWH7OoL/wlTt
JyvAppjW/2JwrPUWqfc/rP6lRj6zfiJ9pdl6pvTOVRaz9LzDFoPE8pq9L5Kz
e4HmVt6fK3Yucj7f2hshb8UP9tbIm1Nl91fqa5T1fMlfm/VY6bUD9kbIW9Fs
/U3y8Z7VtpztT9Z/pA9dsP4p+y6yvXdi+8reC3k39tkdkR5TbW/lv2j67b2Q
d+Oi9UnplzPsbr4stcp53Ec/GGjdSJ6nhHp+st8Br3kXe1Oq5lpyvjLUWhef
x7zeB4l5JrxV+jj+N8W1d8see2VfZj8D3gh03Zvg/84MEhs=
          "]], 
         PolygonBox[CompressedData["
1:eJwtlV1olmUYx28/2Ds/nr17PqYJSqgpgZBa4rQPm6GSOgrmyaS2IHXGXDqm
qH1AkMjoQANZEmouHII6D1oeCFGKaF9DcM6czqGzDvQgHMnswA3F35//c3Dz
/q/P57qv63/d78wPt9VsHRtCaOaM56zJQrjAb1dJCGvBuziDyOeRd4P3cf4v
hBBzZiUhbCiGEGGbjk/7pBDqoxDS0hA+wB7SEN7JnEs5q8EbYss9yPfwb8mM
lX87+HtiviV2DjmuI68i3yhyynmR7z0kPhRcg2o5im45satRHwFXEb8FeSfy
MnA7PmPIVYn/fuyN5HseeS9yE/bnsHfg/yP+U8Ct5Y7fi/wn9Z1AV8B/Df6X
iB/E3oq9A/t17CXk2AyuQ1cA93E68Z1HzB1iD2au/wVOLfFlqWuTfxFcEzn/
Uuxt2P/gVIMjdF2Ze6BenETXi/9F5GnIe5AbkKsj328ucj2x3fTnP3I/QN6D
72bObXAlPl/i+1Pm+TSjW0D8ksi+irlM7IrUd1cPVoI3Rv5eCz6LVTvnk7w/
O8CfctqCdZ+BH8fmwlTkEXBLnk/27eCFqb+tGsSV75APFjwTzea9cvdGPbpI
fz9HtxDbOXzKqP0l7jgP2xx85mue4ie21/AZBldF5oY4Mhy7B7rfU/UEuSbn
mzi4DrwzM/ek2wF+P3Ev1VNx5xhybTDHOsBfxfbXTvxLfePKbZPPWeQz5b6r
enIFeW5i7ooD4sKBxLPWzMWt13M+qN9viEupZ6ueq/f3M9//Crpl4MXEv5rf
vxL8dWJuq15xoTkyX7RDx8h1Ip+POHsSPDvx7qpH6tWd1Fz+RncCf1H07NTj
49R/OfNsNKMj2BtT7450sv2TOlY57qbmvLj/Mz6l6m9kWTtxE/tQZi6Kkw3g
6fl7ox2cAf4hr0f1doGfJn5LxBdxN8u8q/KvAC9KzU31S7vxEf6vlLhHDeAb
Rct6H7q4zyi6uny/aqltY95P+WwC98V+zzCFv8CVsb+lGv8mfkLmu+lOuttQ
nHOr4F1qSvwt5fsY/Gbm2WmG4vKk2P3SHQbI11n0LFVDJ/LkzFyXv2Z/OnUv
NMNT4LfxeYRtCN1v5BqT74NmNhb8cuJ80i0At0beDe1IU+Y76+56Y7oTvzGS
1ZMR5EN5/eL0YfBb2K/m74dmpzdEWLoVyPPh+7slfgN/obZrqd8qcVBcfBK7
Nr0Jo+CbiX0V0w/+PfZddKeBCnqe2KZ96gX35Psn3VXwxNTvg3KUgtcnflu1
X/qvuJe6t+rxffCvid9u7Zve2t7Ys9WMr4H78/dK8i3wM4ZI6Ps=
          "]], 
         PolygonBox[CompressedData["
1:eJwtks0rhFEUh08K4b7xvq+NEFPysZBSkh3NTmw0b0pNymo05WvlI1nInqZk
gVImyV8gstRM0lDKSpI9ksnG4DmdWfzq3Of+zjn33HtjM/MTcxUi0oIq0Zov
soqaPZHnapF0o0jEOoHqYPewOOwwFNklvnUidw1w9BOIJGE7sDHW46ikHL3C
zth7JO8a3yjxOqydvRjqhy/AsrBl1iuolj6XsCKsm/49vvXRfgXYHntH5C3W
k4v6YAL7LHs15xt2BfOolUJPxE2ezaiz5tBblUgrvgQ1InSA9lEcFuLv4rwd
yCcecbanngd6n8JenM1YKs+iM23oHbCXD6ym1m6DfdDrhp551jk0CevElwxs
Zp39BLYEG6B+Ec8XSsOGYBl8Kfgm8TnsGH8WvVPzl9q9zu5C72Qb7yC+WWc1
tJZ6NecCtqXvG9o76XtlYNOwP/KmdGbiyNk59bzD3F8BVuPZf9B/8Q+tqVEx

          "]]}]}, 
      {RGBColor[0.7287546612383891, 0.5598179320646096, 0.39066818636465306`],
        EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtlW1olmUUxy83bOr92LPnvm9UQo1lGTWEpZlGoKMsM9LoUdmwjF7WGmZT
0ebW7INJsKQsKpSFjytf8GVGJkRkUMhsab6AbVNnUCnZ9IOK1hDUZb8/53y4
+J/7XP/rXOec65xzl728JF9fFELYySpmHUlDWAsuSkLoQ/4WOQP+ztqBfAL9
jxk4JSG8ibwzCqECfTU4Jg7hzttC+CwbQp7vMvSj0RWQgTAT3OJ67R8vDWE1
/E3YWZGYzQbwa+5aCOcgh445pwvMDud+OLPZn8LeHcgPgb2R+dYCLmUtRr4f
O4sis/MvnHp8ymFnOTjVz84ijnJ4r6JvwP66yOKdiv3OnOXjSXQ9fLcif67Y
OTsL/lj4XyTmm+I4nzP7uqcUfS32W7Gfdfl28CScfjg94HXOfIh8CzzAdwly
nrM7uGsOd33MPec5s5ezF7CTh9MOpwr8E/0e9GfBufAmoO/k7L7UYv8PXUVi
snQ1rO/gNHL2dfTLkbdx7yXFCedRsIPVjPwg+/8g96gGUuOJX4f+emz51PtM
43slPlSC7RmTpyOfhjMX+V10X5G76fBfAI8mFq/iroksxh/g9rOq0D+FflVk
tbce7gbPrd5/mb/dZfy/mLNaWoMPh7IW+wLVHbXxl2oS/YrU5AawIbK4XsTe
vV6fhazVqOQ28Kjfq/sP+1vMz1q96q6+nJ0R/24UP7tN2S4rtXroRH8hsry1
gtWx9cV6+RJZnj+NrG7EHwfW6+3wcyG5esPlxWAxZwpwxnPvO5HV3pHE3ljx
HgaL4JXAHwR2e12dAK+y9wjyNbCCvVFwJoKn2buGvhd8yWtgMz70O/8jOH94
/asPxmXMpmq22ns8D2dmxmw+ENu76n1bkH9z+/ewX+y+TUaexBqMfDNn9a3c
VoFdHpfiu5EzzgDY5zX/d2L5Ut5eIR93xTY3PkC+6r2mumjx3i9K7c1k/6Dq
3Gu+WTYz1i9nsPl0ajNkTmrxKw/bwXl8n0Kfo442ctc05E3g6tTmQAd2Dnnv
6831NnqjcrA2sXpQDz2cWp+qX5uQz2GnDJuNLq8E7/Ozw5BrsVmOvi62mla9
/cL+gM+Hbmw/wWqC8yVxtKWW8+chdvFdQN+uOeD+59WbPrc1v2/A6UA/Evl7
n4eai7Xe+5oBW7BVCWcz+FzG/HkNeQNyDfLQxOaj5mQz+Gtib6e5eMv7dzb6
IYnxh4HvxVZXqsclGctnAd033vuaAVv93mXsr2E9i9ylGeMzTf39mOdzPjk5
ENtZzchP3L7qd7/PfM1+zRH584z8jM1mN7gutrwpfyNSy8kosMnjmqj/DqsN
/R5wV2K53Q1uTGw+6N940ueY3mcM3z/BGZ2af/KzMrVcyIebsdWf6rAO/SrO
vg9/P7E+7m86Axzu/a66aHT+2+Bk/zfJx7F+1wBne33GngKH+H9Z/+dmt/9W
YnNHPTs+tp5R71zB5l6PsQc7/wMW/xco
          "]], PolygonBox[CompressedData["
1:eJwtlGuIVlUUhneOzYyNn/Ods48ZXpkSBYeByUoUcxSLSDAlFRRRMLUvSVHJ
RE0LhAiVyEjwAk5eIS8/EkMkikLU8Zb+cLwWlIKl/hA1GgZL0+fl3T8O5117
rfXuva4NsxdNWtglhLCYryvf2CKENv77q0N4DbwzD2FMTQjdakPYhzyxHMJU
dAuwOVKHXQyhFX0D+gWlEJ7Cvga5k2899sf5+qBbh/whtt2RD+PbCkcJPDXz
XbrzBnzt8K9G3oLcjvxLNF7P2Vnwp9wxAr4r8E3Bfy3yKOQ/kVcgfx3tvw6f
reBrnDWhP4r+WfCkwr7iuAdeXrL+IGe3sP8/d2yK8TF4Ovp69JPR/4r8MLdu
Jjb/gv/JjXXWAX4LzkvYvoTPJ/i2cTYO3QRsjoE/4Gwwum3YHOS+lcT7LvqV
6E8QbzfO5tb4Tt19uzCXOMeDvyusk00ttl2Q96R8VoEvF+Y/gP4a+tF8y8A9
OZsF32b0j5Ab+Sq8Z3vKr3K2A1wpuV4r0L+h2mLTAq7ibAK6kylexXQK/FPu
2CT/rNzxNSX7Hco3cjP6JvSTwRuja6P7NoHnpH77HnkueFnhWqqmHeAZ+IxO
/jPB8/BZkvJVAV/JXRvlRLmZV5hLnBXw47J7Rzm6Sn6XRveiYlSsL5T9dsX0
A/rGzLlUj/6B/HFmvovIt5GX1IeQITcg76pzD6mXbqi/C8es2JWzrbzt9ehc
6j7NQif+I1M/HML/bmY+TMMd8IHo3lANVcuTnNWotujbwB+h/zzN2zn0NzP7
iuMWeBv8A6qd8711rpneo5osVO/Wm08+rehfBDyX5nUstoNSvcQxGLy0cGyK
UbN3NPNbxHEM3FcznvpdvaodoV3xNmfn8T+d3if7M5l7UL1YQV8mlr+iZ08z
qFm9iE0Htg+Qf+/JDOSuvd40TfNVZ51sLmD7Ze58qke+AE8p+X7trN3IQ6Pn
SzPdDH6Iz9Po7vO9iu2ZevPL/1u4fyz8Ps1MC/aXontHPXQZ/H7hXlBPzAe/
HN2LuuMV8JjC+0z901I4p8qtdmIV73mmcH+Jsxb8Xu5Z1Ey+ie2a1O+KaS34
qzRfkjfk3qniU82ac+9c9YJ6YlU0h7h68w1Hf5V4O6sd72f4Dk/7V28cUbiH
5K8dvg//Ybl9xaFdcT9zr6u//gb3iK6dcqRc9Sq8W1U/7dK+ue3VP/3A7bl7
QTVRbZRzvUVv+g2+IdG1Uf4ao3emekk91R/ub8qed+2Ms9RnYG5u3fE8+Hr0
rtO8aLcqRvGrxv/BfyG6dtpx58GzUr3E+Y7qmfaR5PngJ3oi6EY=
          "]], 
         PolygonBox[CompressedData["
1:eJwlkM8rw3EYxx+rWdZX2/fHYYm05KQ50LhpF8lFsRNy2DfJheUyJC7aSO5y
wMHJr7L9A5L8BWyhOIjkD5CDVl5Pz+Fdz+f1vJ9fn3RYnFqOiEgniqIVRyQX
Ezn1RFqSIhF0CFuAJXyRad4zyG0XeYLlA5GCKxK65tWaY2pHyBUd82pNnNp5
2AGsjPLEz/gy5PrRVkJkEzXpEyU3iKeOToir1L7ieUNXsHXYKKzMu5K02brD
BLs0dE922+W9g0qwD1g3rIa3ikrU7sFuHOupvS9hR7AH2BB1WZSi9g72B2ui
e+KuwHLqiaM29E7tNbkvPLdon3jDt1k6cw6WgS1xb50bGyjNPp+wtcD21H1D
eEHzxD+tIj2O3ad35ui3iv/Csf/Sf3uk3yRsG3ZO3RkagKVgY47N0XmLsD7Y
LCyLYsQRz/5b/70X9su8F9fm6x7jsA58w5711f7fsJre6dvdev8/8HZLIA==

          "]]}]}, 
      {RGBColor[0.8265554070365314, 0.5941888011949471, 0.33317509618299757`],
        EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtlW9o1WUUxx+2ldnvubv3d++cL9RyOnuh05K8tXI1KLAVNE2HDrWwaUoY
s0yj2hxWajMoeyFqL7TCSNOFZEWkkEpFoK4X3fmnNFcwmYN8la6gWX2+nPPi
4Xzv93f+Ps8559a0rZnfXhZCOMAp58zIhbAQsDmGsBj8FPg98BvReH2/MSaE
a+AEnCmEMAK+qTqEX/KGF2dCaEtDeAecgs9mQ5gDfhIf7ej8AW6GL3qsu5Dn
8uZTvq9yBsCfY/eR8y3ovwUujgphFX4u4L8PvgG+DPtm8AvwIW98Pz4ucUrg
M+guiZaDcon87gJfgXsb25XgbmQLtpPwvwB+geP5yAr3/zz8h57/dXwfwNeD
4EfhX5Wfm0PoRH7BaYc/Dr/U73AX+JWqEGZXhLCVnG/n7FBccvmOcxXbb5Hf
Ox6H/o/c7T5y6Affhm0dtl0Zq1k1jqD7DPxFdMbCnSSfGdieRh5KDJ8CD0ar
91b0f/W3OJ+1I7yU7xOoK4uf8XmrTTX2873I74vgy3DXwUvQuYbsqrT870Cn
A3wnuAbcQj6zyHMT+QxUGm6gNzqppQr8HPwx7Jvw8w3yuOMOchjt96z7LpH/
6+RfAk/HvhbbAvn/lDO+D7mRePegP0v34/k3RounuKtTy0N4PXkVq+0OG+Ff
zpjPsfBzyC2CV8L1+Js26b2cH4PdZ87rey+5rSOHfeTwSDRevfBDYj3QAb/V
e7Vbd+V5FtHd4v32KTiD3wr8L4fbDh7G9nxq8RR3G/zHOYu1HzmMnwbw38hh
f4tt0XpCdT1OLdPIuR1+KnJNtPvUfJT7Oz6E7h7sJ+LnA2Q98baol6LNjPpq
A+9Wn7cZbEL/ae9h9XIzpxXbecjVrqN5VX/I/5v4POtzNxvbKdQyntwG0f+N
8xJ8H7FyBat9GTonEvM5l+8Tqq1PjoIfdh3dU53XtRfbSXx7DP1a5CeJ1fK+
7thruYHO1z6DmsWjielPBu+MVot2m2pT/quo48vE7vYv/Owk1nZi7UDex532
guuRK3yn5bDbi34e/RfRP1ywGtfCr80avw55d7R31/tfdh3dh2ZANR4sWP2q
sRE8hM8j2G5IbS9ovmr4ns1YXO3Uhfi6BZ1W5MFovaSeSn2nabcNcUbQmRZt
JjWbteBnPX/V0Ua816jrK/h/sX8X/QDfTw57ZAuem7V9tbHSdrR29Sb0p6am
U5fartfOH42/Xt9XpwvWx+rnc+oNf3e9/y6/21P4ud/vdpR6zPNZVrA5VP+v
B/+cWG7/YdvmtUyJtstU7xD4SsFmWTN92N/9BPwAtj3YLkK3nFhH8F+GLEXL
51LO/reU/73gydH8K47+n7QDd2v/u+2fiuV3O4g8Fi2WYu5O7F0WZc2v/J/h
+wPek5qzcVWWp/aZ/s/0v1bC/wrf4cuRm31XaLcd8p2pmej2vdGDz3+i+VS/
q+fUV7+j+4T/R2jPac41jzPztqPVSxPhOlPrsS71Umr304r8H7QjCS0=
          "]], 
         PolygonBox[CompressedData["
1:eJwtlV2IVWUUhhdzhjOO5+jZ++w9pyjxr6kLmYpqTllWRoE/QWGDxIAlpWWU
MFqoEE1DWpYEWRdiemEUBRUaUtFFCqVEdKPdzNiQGVKMjCN1UyFRJ+h5eb+L
DWt97/r71nrXtxdt2DI00hURz/F18704N2KiEnEj3wvIg/WIWys+i2ZEVyvi
yt6IdT0Rl9F/KSLm4TgGPo3tMzXj91cjjiMvmhOxH2wZNs+XEauwuRv9HF8b
/yXEW4b9MeJ1g//diLgT35yzf/oiijyiP8XPkffg08Z2Nvh64u8n/z7069FH
0WtZxF/YPsjXixz4vFV1DuU6Qv5NYN3EvA/fXfgMgu3CZhz5qpZjKeYB8EvU
UEFfjL6W3I9xthP5Os52YH8W/M9ZER38Z8jVbBmTzQZsxzg7BraGs3vADhHj
t1TfFmrJ6c9e5EHqWVs6pvw34fMdclfp3qj+PegHa46lmDPI84jXAO9QwxB6
luINEO8hfIfp56yqa1Stj5BzBfgU32Z8P29Y1kw+Rd5KjAXEH8bnJPLslvUR
cgxwn05uLogTtxDrfMP3UcyfkZ9qOp70deCvNTxr2e9Gns7dK9Wzkvgzdc9W
M75I/AHwd8DvJefN5D4BPgJeF3/AvyL+qh7z4wn8f+3z3dWD+WCPpvupphH0
V9AfrpgTk+gb6ck5bFdrxvhvo6Zm1TEUazRz7zUDzVIcE9du4OxozT2WrXze
r3kmmo049iPyTU3fV/1cSe7thWvXHb5G7697ty5jv4/4x8lXJvxLcbfp3dIO
aZd2p/o7fGfBVqf9UY+Xoi8vzGVx+jDYydQvxRwt3GP1Whw4hHwGfEfFO/sZ
+GSfaxnn7AfkZ+vmpvr1AfHXZOaCOCAutOHXJer7nbNvmdWZ3L6KMYk8XPO+
LET/GPnNzPdXfW9k3lHt1zbw0zXPWLM+Tcw7mM1B8q9P+5lRXzu9P+pphXpO
cfZhT9pZ/K9N/RQnfyL/xcQn3e8CthOZd1v2i8nVn/ltUn/1lj1Qele0Mw3u
NtT0rusOuot85Kuc3xPvitJcfRX7f8n1Uea76E56O8RJcVNv2BfI/9Vtqxzz
S/dIvVLN14Atz43J5i7kb3L3Vj3eif27DfdS9egtGgY/UjV/b2/5kyxOP4n9
S3P91urNHUM+XJgLmvk4+ZaW7rV6vpf6PknvoWa0Atvtpd8i+S+gH1sTH7RP
79Gb3sJc1IzeBrstsy6OtpE3Zp6d8MeRx5vmkvCXsT/V8C5pp/7ocw2qRTt/
Hnlz7vyax9O5d1T3052nkJcUfovER71VC9P/RT5T3LeT+q0ZXV36H6J56M04
QS0HEr9U85zCNagW/VNeB59I+6GeHQWfzswlnV1A/h9xZuNi
          "]], 
         PolygonBox[CompressedData["
1:eJwtkU8oRFEUh0/EWNAz903Nwv9RlFd2FmrKVhT1XhllRWL3ppB/w2LsrFgo
RY0yZTb2ajY2okxDsVW2NjYmFMJ3um/xdd58c37n3Hdfz1zWD+tEpB0aoNgs
EsZEPFdktVVkDWItIlXccELEj4sEUMSfQglWGkXOqEn6nuibp2+dng24YF4e
N+vafs3dwx08wg7ZB2obfa88X5HxHXaAh/vBveBCfmehn+c+8KDAfwNx26uZ
DDThpqg1smX21idsv+YquAPcoWv36zn0jHrWbSiT3aIekz+CE+jGFaLdeoZl
MLglx96D3kcGznUv9ZkdJXZU2fHF/G+o0fsGn5Cm74M6jh+DSZjGTVBv8NdQ
gUHcLXWReUPM2zV2hs4KcClcYGy/5nK4UdwlrpNZXRH63Ku7mJeKvqd+1xws
4Dape2RnyL4beyY92wjOwXUYexd6J/ou+k5/sE/2l/oPaTJPvg==
          "]]}]}, 
      {RGBColor[0.9038907592387657, 0.6297268980969144, 0.3020613536401738], 
       EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtlX9olWUUxx9MN/W+733f+9656TVaiqCsgVRuYaDTTNBulNtkM6jIyVpT
cBXVnLtZhs0ynEL+MRjY1Bj9Ycksyn6QQpYwJSvMQT9cTNfKgmiG/UT7nH2f
Px7O9577Pec5z/c5z3nnNLXVbZ7knBtg3cDalDhXWezcg4FzK0PnhnGuwXc9
41wR/mvYCv67FX9L5FwtnN/AH8FpLnFu4WTnFpc6dzLl3CNFzjXFzv0zQ5y/
4M/lvzI45/CP4x/Dfwa/S5R/EbnP4/99qnND2AL77YXTgW1gvQyux9bBWw4+
Huk/45RRy0Zffyt2EWsW+HbsJPb9E8489v0Z/mnwN+Sv8pxV5MuxKvD/m8bC
2Q6ej12KfzH4VfbamVZsNXtdI1eH8bHTyX/dtALnwBFnfAN8D3s0TnHuOeK+
ZVXj7yJ2BH360WdpRmfthrOS9Su/h8hTE0pH03MdvmWlit0GPpJ1bj81n6Ou
mxLxR9hnSUY5a7Bj5H8HvBHcmhHehK2PdMbZxH4Mpw5/dax4y/MU/1+eoXvv
A1fF4tyBTaihmBoK4FOR9K8nT28kfWpMP2IbOEeBszaG0nycGiuILSfWZaS7
abiOuH34D07jXoj9irxP4D9rukXS45m09DWdh+G8y2oF9+JbgQ5b0OFwoPuw
nKMZaWdnybHvEt+T2/EVheqfPJw1+IeIvR9b63HM/xcC7XWF/PlQ/dlFni3s
9Qqc9qx6wnrjCtzBQDWfgn8QvB7cBr7L17Y8q361fYvJ9yl4EFwFPk/eOjhf
Y7uJfQD/CmJDYprx9+ALPE5hO3wNJ/AP+dgd4P5YmhzCXoIzgP8idn2sN7gB
e2+kfXegZ4PvAeuFJyO95Tbsqkh9eBnOzEhvambo3wP4RvZqT+te7H5e4B5f
Ao/gu5QWvhn+1lg6tGPvi3WuPHYuqxZcjr1K/GrTEJtD/5PUPAs7HkjbcnSa
7f3/4dsaKLaM2FF/xp/wHUCHGvDj4NLQ12xn9f1pffpooL1+Ae/3vWo92+dj
X0t0ftPhFri30ZPz6ZlKapiT6C3YLMz7e5wK7uft5NC2K9J923lfDzSPbN+1
4Gn474aTwr4Yib8Teywl/3T829KaD8+ndWY7+x/Edqb1jp5Nq26r/7FAfW93
fQzclxLH3txh8AJyHoV7fIre1MQ8SSm/zaHv+a8azjD2s1C81ZF6zu5oLzkX
ZvXGN1h/ErsL/o+xZp/ptgxOT1bzzebcd3B64CTUPrlEb9zeepPPMzEzSqRn
Z6h3Yu/lDHk+z+pbYN+EFq9/Jf4vs8rzNPxmv1cruNfz28CjsWobw2YyqiGL
vej70HqzzPdbIdB7tnf9Q6CeMz1bwG/5WfomtjKrGW6zfK2/d5uFea/PHviN
iWaCzYZdHtt37Kw/1+lA9Vmdg+TbnejbZ99Jm0E2i4bS0sI0qUabh0LtuwD+
34mw+ewOTMOHs9JiYn7CH4h0129jP0k0Y23WnvB72ffW9DLd9hH7PrUV4H+I
/SIl/AH4aEr9cCHS7LC+eo/6r/qc9s3cjX8znD3YO/092vto9z1/yGZgSpzu
WG/bNO/E/z/yyhXc
          "]], PolygonBox[CompressedData["
1:eJwtlGmIVWUcxl+amXuMc++5y7l3zNGWKSuZJkTCaW+SFvJDLpONRRBpTCaS
0UI2400LKktJDYSEQs1i6EMiLZRQVKD14SpRkd6gyNCGITAiK1sg6/fwvB9e
+D/n+e/L6V3+4NDqM0IIY7xOXrMYwuKOEP7k7a+F8Dv4KeSLIZN6CNeDrwQf
5fXCHwI/hDwV/uU8hG+qIdzUFcLuM0PY1h3CzKLlj/nWWw5hSimE59Gfjf61
+JsO3wdu8T7Fdiv4TuT/eH/j/+nMnHR64C7hzUE+yPsJ/Q/R+aXDOY/BnYX/
rcgD+P8W29f5tgycgGeT38maa1OMzXB/lW0/n3cKeVHNtc3jDcHPrFhf/s9H
vr9oXdm8gO6j2LQ7nNPDyNuIUe50T1roLqq4FsVbgBzI+Vz4UfBp8KzcvHLc
jX4rdy/Ffw++o+xaVf8w8tcV8/L/FfIbFcdbCR5Hvjt3rcLvYd+sGMv/GHJ/
1bPUTPuQd5Vdr2a6A/lZapqM/bhP8auelWY2jHyobF79aSEP1O1PfIHe98f5
qCcn0G9nttdMuuHXVT0b4SbyK2kIXYUQlrIfJ5CXFO1bMZaSS0/NvpTfdXAT
VfdDMfrAM+L+6NsGYoW6+6v6TsIlcd+U41Vw03gHkhAG2clNxPst7rdsOuHW
xv3XfD8h9nnYP0du+3kXUe87vFnkm2D/cyOELXFftSOn0D9csq5sjme2EVZ9
68DHMnO3Yv8S8e9lJvfg7wJwiXs5WvTsNePPmeVKfPYnjndX6piS9W0V3DK+
ZeABfLyN/EfDeBD+VfgVfGuAb4TfhzxJvI3IV/Dtwm7fpG5zmLeW3Abjfavn
52CfVmwrH//iu5lZVzafUev8aK+bXwP3Wrw37XQ/+X+AfRP7OdifTbxB5jcO
vhk8V/WWnbtyVu6PZfa1mXcL3PrMvVMP1dsV8f60HxvJb2q8d+3YSN05Ktch
6m/DbyH+avz38a1BvJz42wue/6XgJ2I9/0whF2yfjPG0kwuJfzn2Q8gz0O9C
//2ib0s3tZz6VuHv3YLneQ38Bmx6wAE8gb+rS67lV/wfAR+M/0vd7PbcOSm3
TeQ7Ct5Z8+zUD8223bCteqJ/q3JW7trh6XX3UL1sgxfXvdPiVeN3yKOp/asH
rdQ5Klft4I+Zd1BYNUwinyZGIXE/FoBfTO1fMzuGfBn5TUtc3+3ghXXHlo50
ZSNb9XRX6h5IVzZza7YRVo/GU/dc+ooZ4PfQgx2J92V96h3Vrr7Ftwm4H+J9
6F6/BB/PzUnnmdRPsnb8CPK+OC/1ewTdR1Lfmm7uAPLhmndFO6NbeSD1rDXz
j5Bvi/8j/SOX1LzDyk057s19k7pH/RPeRE75NpLYh3ypBunrBr5IvUPipFNC
d03u2WtGmpX+Acrvcb7dADcvt6xvyv1//TjvyA==
          "]], 
         PolygonBox[CompressedData["
1:eJwtkD0vQ3EUxp+IVshttL0dsNkMBpISBiTSoaPcuRIad9ChjB0MJIiXMHdq
TKaSVGpgMvgI4mUgJIgPIeF3cs/wy7n3yXOe/zlntLoR1XskDUEKZnPSDPwG
0n2fNFKQPrLSOzygtdAuQ2mA/1Ja6qf2Qgoy9AXwg6+D7xPf/iAZ+Pao27AD
03gjtCnqBExCjb4u2jp1DWK4Ru/CHXnH5DXC5B17bxNtAe0sL12Q2YYy2jBa
ES1Pf5O8nM9ksx3SdwBtfA18i2Eyj81VREuj/eGbh3N65/wWdpNl+irQxBfj
C+g95b+O78RzLf8WttBufHbb4RuO0L78jnbP2PfMZqQn8pYKyR3sHru8EaE9
skeV/xV6V/19m+OKecfQOr637f9md0V7pT7Di2PfFfLGyauR9w+3Zj96
          "]]}]}, 
      {RGBColor[0.9195138815707373, 0.6687847039268434, 0.3504930328692858], 
       EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtlmtsVFUQx49IW8Levdu9967YCoHqB5CnFKjBIlE08jDSh9YHSlEELE1q
E422Yk0R2C2IEgg0DWoiEkASaWOoNiiFBDQYKhH40ApIGiilROgXkESNkfqb
zHw4mbn//Z85M3Nm5mzB8tryN4c55zpZd7OSoXNVyG8j52YGzo3Pdq414dxr
MecWgX8Btg39OHoJnBb0s+h9vnNvoL+E3g3n5zh7hjtXyN6amNqMYftl9GL0
1XB60Pegp5HlnnMFOc6VghewctEfAxtn+lhkccq5DVnOneOsOZz9K/hXo5wb
A14FngbPsFajl3FuW0L9n8Pedeh56Dnos1mTOXcrNj40PINsxVZ6pHMnkRf4
ngX+Fty38a8O/uP4/x56Br0O/TT7m9Ez6IfhzcefI8ijFq/E/ZPtFRsn4e2D
8wuy11O9C/1Gjp4rfu+MND/zsHPI8il5fZoYG0aQJ2QPua0mt03oQ0n1X+JI
Wz6vYPNMTH1rRJ63WHqRF/luB98c0yV6HmfOxR8fP/I5t8tilFgbzU4rNvMC
5dyHrA3UT/H3BfQHwJ/DxgG7X7nn0pT6Kf7ugvMEPmTlOpfNnsPws5DT+S4D
L0Km4cwEb5LaCBSX36sD9V/iyLG9tzlrlaf8DL9vQV+Cfkvyj6+b4Pfl6nly
7kjkJlYN+hbkGk/vqxP+Ur6XgS9HLsbvMfh/h7zuhlMDZwL2HkppPUtd3xPX
OvyNWhsfKudBZI+vuNTpQesX6ZvRodqvxH6T1edobG+Ed5Q7XZ/SHpNaPYjs
5+x/0b+kDstD9fkj9k6VfMKfhJwB7yns1GNvEP5/cCZj83m7iwrk8EBjaSJn
Ez21eRXuYqslqamKmPbCDLg3A83hn8hB8EvgnyOfTan+DHKX5UfydMPOvY4s
CbR/y5Ab8fl98A58fpWz29FXwekHb0GPJ7XHpOYPIK9HOk8mID3LldzJ5Ujr
8xbY74H2wtdghVYzvWC3zaaPze9y9dwfkI/afBjBXTmwO1mar9nw9vI9F/k3
+1+B8xeyg/ysRa8M1Vfx+UVszGKdAn8YWUeuh7CxMKF3I/kcgHvNZqDMwiH2
fw//rkjjFN+CpJ4tPvgSj6ccB2elnVWNPMve/eCX+P2M6aeRCxK69102H4l0
nuSDD1iPSD6Whur/MuRYy5vkr3mU+nYT/Yqv/dhNTrLjGlcR+DyrMekP4Qm/
MtJ6lbuIJP/sTePDvXGduZLbYjjvJBU/z+9T4dWCTwk1TxKz9Mw+qzGptTXW
yzJfP0Evgl9FvBMjvZdHsPcj+ELwBvCPjbMZuTfQntoNN9v6ej/YceMfC3S/
2LkfToXVldTXP3bXW7E5LaH3UII/6319O+QN6ba52gjWHurckxkvc0TmSYfF
JfUksX0qHGzuRF6w/Eg+Ttjb1+Crr+JzfaA9LHleBL/NZtRlsM/MzilP61vq
vC3Q90ny5qGfi3S2d8Lts/dX3uEu9mxn7w7weus76YNvbN5KnqT/pWenEGOp
9aPUnbzx8k71wz0R6cwvxcb8UGtMaq3DemotmB/oWyNvab6nedtAjNPs3vd4
2odS84Ng20P1rTnUOCXeAWS+3bX04h+hxiXxTbL5VpjSmSizsYVae9L+h8h7
vhL+Omwe4qwPQvVZfJc5KHcyHc4K47yO/B/g7jIW
          "]], 
         PolygonBox[CompressedData["
1:eJwtlW1olWUcxm/Ec064neeccz/PchuWrAJjZJovg7AXstJcL66BWJFWSuAG
NghqkkY23dGw+mJDQig/pPVBRRxEUxlkEWRRCbVeLAldi2x9SAQpyfW7uB44
N+f6P//3t/tuW9fX/dy0EMI2znTOuzGETv7vLYawDzyrMYSeQgjvcK4kISxo
CqH3mhCeQXg++O00hKFSCDfx7dsshBbOMPr70W8Fr+Wchh6Gfhq8q2xbslnH
3s18O5nLt4NX5rTku8A/IjOI7F7O5cQxSH8Dp5XYOolhC75/RWeyIYSviecD
4mnn2y/oDyaWlY5898OvI7sZ+5vA5znvQe+BHgcfUj7Qr0EfBjdwNkA/Bd0I
/piarMB+I/aPYL87999LPbrAc5Hpg9/Mt5PwL9RC+A/dS3x7HXo2+lXwv5wh
6Pa8ntfhYx/x98BfAl6MTi/47rJ1ZWMSW5uh5yN/nG8l9N/C327w9Xzrgfc9
+W4n1w7oV6FHkIngjcjMSR2TYtsKvQZ6GT6nFV2jbejekLkX6uFs8BeZbcvH
buTXVV2LfvifovtY5l6pZ6syxyD5AeSfRf6umu2Jfw75DvQfLbqmo9Bno+nH
oc+A15cdn2o4D/2JzPl+Cb0Y/Cb6G4vu4Sn0O1PTimc5+DI2niw5Z+W+NXWv
Jf8y+FjVtHr8Dfp/Za6VajZG/hc4/MJV6AcqIWSp81W8Nc1W9G5oR/ZH11j6
X+HzTmydQuZAvg998Hprro924Hf81dFZBD/AfxD+UXzMKbrnB+HfBr2s4Bjm
gR9u8mxrxh4Bj6BzrOCd+Amhw9G1U0xHwF2ctny+7kf2lcSzKX3tSgl+S9Hz
Nh28Pd8PzcBD+GvlW1LyzGn26hXL34L8AeJrTV1r1WQW+DfyuwL+E/mOsndO
uzcCPQW/ueJ4Vd9r4Y9H11I9nwAXMs+yeqxe/5DPr3SU68Jo36rRInA930/1
cCd4QcV3kWq2EHwx9exqny+BT+T7rX0eBXfl+6+Z6QYvydw79VCzsAIbUwXb
/Az/O5pcv1H4O8HnEvdS9AB0yJyrcn4B+fWpZ187oN1Zm3rXNNOabfVcvb+R
b6vJJ9Ycq2L+mfq+j04R/nL4x7UbZdMd0G9E3xnqrXq8MvpOUa/UsxboGVXP
gmbiI+w1lz0rqqd6oZmQvu6gNuQHMvdOPRwnll3RvuRTseyZ6VyV89BM91jy
ur936P5Ofbdo39aUXZPR/D48r7s6c76a+UFsPx99t2ne+8BnK6a1T0eJ9yA+
BmfYh2L7Lp9vzcsY+GrNs6uZnAJvSdwr3aG6S19MvLtBNrG9KX/P5OOl6J3U
burN2ps6ZsWuO+Mf+Pfk8635WApeFd0r5aBcTkT3RvVRbyaqni3N2FiDZ0Cz
oDfoNPqTqfsr/h+p30j51x3xOfSHqfU108OpY1bsmsH+xG+M3ponkP9b81/2
W6ienoG/umy+3qRP4C/N3w/ty33qZea7U/ult6Mx3yfVL9F8VdxL1fwQtb8Y
7Us2ZXtuk+ut+t4KviPatmzcDv4f3IgNfw==
          "]], PolygonBox[CompressedData["
1:eJwlkMErw3EYxh/KOHzHZorawZYTyUlctNSUZBdLDlJKwoWfsxzk4iKp2QUn
LfkLRBK5EEv+Ajm5zMl2UFI+b+/h0949z/N7v8/3m12KihvNknqgxX4TUjds
B2mqVXrolG5hknkruGeZ+w7pDmbR+vDmyDR1SdfM32i9SSkDp2RP4AptF285
JW3yP4IKWoQ2hFbn+3nmA7Q83gR8sb8Ga2gjePtk9mCYeSW4Z5kC50xDW1x6
xRujR5mdJeZnco/seoJPMr8xaQBt1fbCIrkdcpfBe1rfGc7IohWD39HuegQl
GEdL4GXI9PPtOvNZ8PvYvRpQhw+0C7y3lL+DvUcD7QYtRr9RqNoc9+52B+tj
vQbJ/dGzlvTe1r+KViZ/zL4XOGd+D36WnZmmTztaLnhP62tvaG95iLaA90Pm
H8ksRGo=
          "]]}]}, 
      {RGBColor[0.9351370039027089, 0.7078425097567724, 0.39892471209839775`],
        EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtlW9o1WUUx0+WF7fLvXO/353XmOWGLyTEzU1FpbJeiE7I1hVUiNbCTSgm
ThkWKM5m2BI3EHRpJQa+UaHCF/7XYE77Ywu0FNkW+ioktCg1mL6yz+l7Xjx8
z/3+znOec77Pec6tXdu5csMEM9vHepq1eZLZ/HKzLnCoYLYFbnZq9s9ks/6M
2TjYB18Df7fSbBrrC/gZYE3YT/H9MesVYvTnzDIZ2S8/Y/YX/HfsfRHcwWKL
fVU0q64ya8HnPP6nM7LfxH8Yn134tJHDj5y9nW8D2APw9fDTE7N/I7dh+G+y
ZovhW8CjWfmsAQ9nlXMJPMFa4THBEdYR7F7wNZI5RpwFxP6V3wfge8B3yOXt
yP9QQfFXce67FWYV+N9h31n4Dvhx+OPYb2FfxD5S0Fm7sX/Oqpat4B34U9gT
wRsFnfUZ+R+glk3E/BJcOMWsqcysFX2m8nsZ/LfEmR97PcZG+Db4F9i7Puwu
8FXWKuxl4HBRNUxH472pcnBde6LGIbgl4f+Q+FdS8Z5XIc6tBi9Q7yzsS+D9
RDV6recT1ei1/sm3Rfj0Juojz997qSm0bQYvxz0Og7cK0v8qZ/4Re/8GZ6bS
03Xdw+/n4PeDLal60ntzX/DVnDUYuZWwD4aGrfgOZhWnEzyXVc7vgTsT3aPf
56VU/eM9vguNBsl3XZ5csbdhj9KTj1P1tvd7fUG1eE2l6KuEeK34fsjy93Qy
kW6u3ycRs7dKd+maXMupL70/m/DtT6WJa/N6nLsC3J5IE9emM2qpwXdzVjqs
xq7HrwP/Kzn1sev5KFWf+V33perf1sjtXqK79h5Znkg3v9u2eBcn4G5Xqrfb
K6SX63YXvi7Omg3WVinmIOemie7C72osr7d71mtMdRfe1/1Z9W0d+jUnqt3f
8c28ZoLPhnns/22i2Q/oNA5/A34UfDaRzj57dtBXPeXa0x5vsAM8zJ5u+Fvk
fh18MEmzZ1u5eJ81v1cKffZ8XdT3Ens/ykubpeTYF5p7L5/JaB55Hrcjf6+j
NtVb8zf3f3+XKR+fn10xuz7Oa2bsRofnQyvXzPO6Hvl8H/fo9+l6+b6RvOp3
HRqxn6S6U38rHstj7oSfG1o1gs1lytXzbOfb+8T/tKg56H3eTU0vRd/6nGvA
Z4y9c9g7EjmNgj8Rfz12A3ZN3Km/s/oK+TeA1+K9+Nwdij73+fQo+spnyZwq
xWkEf8lJl8XY96KvfHa2R2/4ex0oKuf9jpWq5QPwaFH3fczvqqA36P8zdaG/
z7/P4+34/8Pq6GefB29wXjfnrgQv5jQDfRaO5cSX4P8DPYbvrQ==
          "]], 
         PolygonBox[CompressedData["
1:eJwtlltslUUQxxfTlqOl5/R836mNlkqxD4pEoEWitlwSlbRCsBTSisRSEKMP
GFGLN0y5BgpIEw0xCj6oJUIbsWhsgchFLhFCMCleYnqzRq0Yi8ZQNcCT/v6Z
efifM7M7O7s7+5+Zb+ITqxc9e0MIYS/IAvsKQ9h4UwibQDvyftc7ckKYmQnh
aF4IDYkQDqOvSYdwOg7hHda1op9B/hmbn8Ao8t+gPBXCQDb/+DjH2h7G9rv9
ReQP8N/MHK7CMD9fMHZCfvJD+AWcZE0j+y0D4wtCeN/tU6wfwr4W24VgEVgM
Xo1CeAWsBa+BRsaex3Yt/huQm/C50vWzuSHsZGw78nrGWpF/Y80lUI7ddNCC
fD9zs7HZgjwptvWr0O9AHsNd382xO/2HXst9c9BnEcytyRAu5Jtvxegb9rs3
Y7E8hD4D+Tg+q9AXoB9FLso3/XH0z7GvQq/z/U6ivxWbP515l2Ic2bzsryAf
IV5Ls+yNiojXi2l7K431c55G9lwGloMVoBX7OQk780LOXsmaJvQv8fc99vXY
1IERcBm8HtlZFZOdyOsii4309cgHCu0tv+WNzheaT/kexWdvgb2h3nI5OMXe
fQU2pzVzuV950vgyhjXzWTslY7FSzKYiJ9hjLMgC2WBHnsVad7jO/IQC860x
zb3J2BtgHLZ54Gk2egosYewxkO3+9YY5yClskmATe28Gh4nxIfAZ6AIPMvcA
eAjMBdOw6ee8Wax/BLkPH73gGLbHQZ3HZzLz9cgdhZZbiu8u7jvIGTckjOO3
cfZrnh86z3Xkv1IWW8W8K9dySrn1D/g3thgr1orxx8ilaVurOw1hX+zxVo5v
JrazxYmE8UFcWeP8OAJeSptP+U4ip8CfyH+A38GI3+mY56hydUvSYq09tFdv
0nyLQ+JSNXee6vd/GLmP+e+C7SluLsCmGdv1YDHyQJ7JGqtB7yaWXWCYtb+C
C7HVDuXTeeQfGRsCA2BQuZ807ohD04nde/mW/8qXr3LtDrqL3khv1cj8MpBh
rACUiENew1TLVnp9kI8nkVvAVrBN42CC36+Y+RLkWWCmagaoiKyGqJbojDqr
OK3ziTNlSeOwuNzCXtvAHrA7YxwT1w5i35kyn/JdH1vt0nkeRY4YK/H948g4
JW5V3xjCfTeTr+y9A8zDdj5YB5rBWfY4lzEOi8vaQ3uVMna7x0CxiLBNx/YG
3V4DVAvuBJPAc6xdHdmZdfaLebb3DDjZAB8nM3YXqOCtK8E+bD8EbYztdUhW
zVbtLuPNn0lYv1haaDVBtWEdeht6meebYqi3rvBYK8eV6x3I7b6H9trub3WI
GBwGG5E3eAwUi0HnzkesPQA+Rf4E5GA7FlRjUyXeM3dC9wM9GeOAuHC3v4d6
wpTYeo56T7/6HmhCfsFjpFjt9n6pGr7Ha4pqS4/71hqt1Zomr1njvCapNh3U
W/kZdVblqHJVOapcLYmtV+g8E2O7s+6uO+vul9LWO9VD1XuLGLsVjAfFsfVc
9V7VPNW+q5H5U4+5FllNVG1UDVYtHoms92j+MvLVfMtP1bBe3m5VyvYTR9vQ
u7x/qMd1I9fkWu3Um07F9u2UcVk51c5cbWS1Q3qN+mPkuYZ+C/LLaatdNXBu
Dnw/kzJ71dxO1ldmLB/0DaNvmUnOXXFS3BQnxU1xvtQ5IC50eqxP+f103tM6
b9p6kfzpW0kcF9dVU7/Os5xSbumbRN8mqlnD/k2hb4sV3nvVg9SLRpGveE9u
9J60xHuueq9qUsZzMPIcnuecFDfFUXFVnBf39Y2l3FEOTSOXfkhb7ui99e2k
nNK86uM9Kftm0reTaoRqRbFzQTVRtVGcF/fFEXFlJG2x15teRv4fl4BdIA==

          "]], 
         PolygonBox[{{3545, 2173, 5454, 5451, 5452}, {5256, 5255, 5421, 2155, 
          5423}, {5457, 2174, 5456, 3542, 3543}, {5452, 5451, 5458, 2174, 
          3546}, {6038, 2678, 6037, 5361, 5362}, {3543, 3542, 5511, 2240, 
          5513}, {3685, 2240, 5512, 5507, 5508}, {3529, 2155, 5422, 5419, 
          5420}, {5508, 5507, 6039, 2678, 3684}, {5420, 5419, 5426, 2156, 
          3530}}]}]}, 
      {RGBColor[0.9507601262346805, 0.7469003155867014, 0.4473563913275097], 
       EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtln1MllUYxk/5EZPn5X1fXp6XFQqSbeViiuZa+Y2IIWRoOSUrG2o151ci
6iqHthWlgdSaVi6GM1eam02B/KgmfudHTNgqCT/+aK2GMZzNFP9o/S7v88fZ
dT33c5373Pe57/OcJ3fBimeX3+uca2P0Y+zKdO7rgc59CbamOjcH/lTMub/S
4fc5tzFwLgMewBuSzl2Dl8O7wUNJ4x+gud7fuf0pzi0Er8ad68PPVt63oCtC
0wzmJpxbAh8K7ue5EL6auZWMAvhX2MqS5qeXWPYnbe5a3rcmbW4jvChmcRaD
p7FXY2/Cfgl+AN4LP8/8SjSNaPoSZr8N/oStBv9LibMhZprtYAlr56DZiY9/
0bXAe/DzH37OyQ85nYIvgq9Cfwn9bDRXwW50TfBrzOtOGO8BawLTXEazgTEa
vgf/s3m3Dr5P/hmn4LkZzh2NODefuAaH7A31mEycd7DnM86i+Z25j8J/hA8H
i/HzJrwUrGXuROZuJs78Qc5VpJivXJ4/J+aHwJHezwhwh/dfRE4VPHdhfxm8
kmr6YegvwjfDb5HvjLj1yUzwZszst4Ws/RFz24jtQ3xOHYDPKP2UbjXdDWaj
Waz+IdehGZbvMHCIt2eBeT6ve8hjdWg9oF6442un2lbD6+Bvgzd9jf4BTzB2
wn9GczZiPZiHj2OB6dcn7J00XdgW+HxDtM/5WswCNzHq4SfRjGT+Dfj7aD9m
H6qIZzf5VabRJ+Q4LWpDfCW2x9AvQzMmtLUVwxn8Px1ar3XCn0GfjT4fXIO9
CX0pcY0Pzf9kcCPjBJpf0U9FdxteCL6D/Q5+XmGtR3g+if1FbKXwg9hHYx+V
Zly2LN4dQnMQP9vixpPY+8inAb4J+w34WNbdSl5fxO1s1IXWE+qNTnhd3PR9
+D7MnBfwPyxqQ/x7bJWh1V3119lSbMpZ62ndB6IWh/jE0HJTjrNC2z/NVdwd
9G37IHvWmZNGOe8NrM+nJ8z3sv7mX3uZ4+eq7+/2f8T2THa91znYw1jOu+O+
T46BK2N2lqvAVp53YO9knRWh6eelWU+rt08Hdm51fhcGtnfak5zQ9kX8Fns5
N9POXj24hXheZc3P4naedRZbmZcdWiyXIlY/5TOc/SkLLa+uiPWF+l/f1Hrv
sxzMVt2xTWLNMVF7Pw/7zKjlXhexHlTfqv+q4laj77BPoaYFjAv4qvNntjZh
8+VnFOvPTdi3dA74rf9u6xu8RX3LXn0atXtC34EyfE/338xiaRlD4IVgwt8X
6eCuVJv7CXNf53kE9lXgUZ7zVGNwb6rx4/D5gWlWoqkhpiPk8y64KM16QedA
PaI8VPdJSduTtXHrm3ZvF6qfCrClk38nPudSo8OsVcxaWdR9LGtkYZ8AtpHX
BN7V4meN3zftX5R3g9BEwAGMFHgK+HhgfCB8HSMfXoFtn7/XvgF34C/GWkui
1ss6X+rbmPf5JPrFUdMsBe+PWWyDdb9lWMzPZ1jd7tZvgPVGgefKcYqvqe4t
1aIsMFu7z113tmoxDntjptmq0myO/Kj203ztZqC54u/u7Wj/9P8Af4AXQ+sx
9Zq+GaqL6qHvhfJyzH0p03r+AvtdkrS1tGZHxOw6E+n01mv69uou9nuuvd8W
mD2RsLiafP+/5ff2DbBHa7PWdf/9axtoZ0b/GYr5YXz87f9P9G9SElh9x2E7
4s/4D2C573P9O+hO1Z3Yjxg7WHcDfs6x/81otmM/ALb7+JXfRn9HvAf+Epim
Bf5bxGqr7/34VMtLZ369v/erwTMx838efND/C+m/Rnut+C+zP08k7S7QndOc
avn2ku//cAZYtg==
          "]], PolygonBox[CompressedData["
1:eJwtlmtolmUcxu/E7Z17fLd37/M8vtFsbqNIQdY8ELFUHNOY9sEWNkeSkloh
qas1DUumflArnCFClBjJjLIDBbp1sNOKechDLD+5yooiEAsaBrUWSL+r6/3w
wP1/r//pvv6H+61b03nfpgkhhAN8E/l6syEs4PBKSQj/JCFMzYXQWhpCYRLg
lBC25kNozKBbFsIR8FbwdvAa8DLwy+DLwcvB78fX5Sr8gC9E7iuEUJ+GsAr/
86MQLiCf55sXOV4vunEcwqPY59Bfif0o+pPwPZvfduB7WdaxlcM25L8T2yrn
vWC16D8kvDyEFfgerQyhifg5fIyBjaTORfqXOD+BjwZ8Xedbgv1L6NegPwH9
K8IrQpiG/zG+RWD7ivzIRwv+S7Evw/Ya33ywDejksP8X/CfsV5Pfd2BNyNc4
N8o/vj7Exyx8N8JZM7HOotMI/mDk+87Ex7ucTxNjmLuMoj8X2zeI11zkX1w8
BWcnwVbybeF8EzoflVg+AT5UaV/yKS7vwr4a+zG+FvA6Yp7i3IC/rcjd5NSM
/UVinin4TrrbRvA52M9KnctavrNg56n/DvzPwX8tdzmYmEtx+jixpqWuj2p8
ruCYil2uGoPvTywrpybke/BxvMw5LOX8G/hc5BHwds4t6NxcrJdi7cqaW3G8
Rv2omBnXbwUxB+inw8j16GxUbPLdR75N4NPlH/w4+HTwJ8HbyHeI2Bu437fI
zya+v2pckvcMaBY6kH/Pu2eUi3K6G3l2hWurmql2f5DDsTLfaQu+d4JvAn8b
uRP5QJW5lM5m5HuR3yK/buR5yOOJe00z9CPYisRciJPtxL6t0vmeA79OrMGs
50szUIf9LdgcKnWPqdcOIY+Dfw6+G/xl5EcmumcOcv4q63x059vBd6XWFcfi
egbxTqK7G/kX5AcqfBfF0+yNZM3dRr5lqXWke4EcjuB/fWT+tFNORJ4x1Uo1
Wwp/ayPPqma2P/KOUa+r518H/5WvvbgfBsD+pH4Dxf79GTkPPjnj+WuLXHPV
/gV+ez62jWy1Y/LaNeBTkbchL0feW+XdpH7VbtIOkr5iXsH3cGJ/6qn+2DEV
WzNUy7kfncUZ30F3UY1UqzP8NhO8m/5bx91uBc9RjyX4eBpsijjMegblT3f6
K3ZPqjf7kAeRw2RzqZqr9tm8Z0kz9P8spY6tHN4HG8Pmg4z7fQ/5vFrlXlEP
qBee4beZYF38dj7yztbubsHmWN45Kbf1yDX4aovNlTg7nbjHVHv1dA3nveD7
M/Yp33ticy/OxF07ck/G998MvhqO7yh3v98JH1fzni31iHrl09h3Fwcj2K8q
6qtnL2rfgz+W8fvTiX517FyV82faHal3l3pas9aT91uifahd+2bBsTVzRwu2
ka1q0hp7B2oXLoLvrtR31t17wXvAGxLvbs1XL/46Cn57NIN662Ykrr16QLvs
vby5FcfvJP501pv5PdiNU8ydONyH/xuo99elnrnp1HtB6lnV/b/h/p9kvev1
BtSAf4nNaxnv453kszD1/cSZuHux4FlW/ddVWEe62uEXOS+u9F315nWBD2cd
S/aqlXpIvaQdeiky5+Je/wEGI+9U4eq58dg7WPOtN/Vo5DdC8ZTjEPjDFc5F
/fxc6p5Qb2hGTkXmVNxqh/1QfEM0m+L3i6zfWM26Zj7Je+Yl6w3u43w4594W
p+J2e+zaqYaafc2g4qknO2L/h9F91FP1sXtOvac34iryx0W+VYNqYv8H/TIm
fQ==
          "]], PolygonBox[CompressedData["
1:eJw1k01IVGEUho+KOsiVuXPHWYRNMrhokahUCGpBEkP+IIKF5kbzDxNLUYmg
oh8MQdTKhZiiKOImF6aITAslyp8y94JM5MKgHxFzIeFGfA7fdfHy3e/53nO/
M+89E6prK2+NFZFsFI/qLZGLiSLPHJHfXpE/KAqbgi37Rf7ZIgeoDJYGK8K3
iGcJxSSLfIVdSBHJ94lcQQ/wXYfN4UukzoMG8L5BQ+hcgsgg6xy+J/huckcv
nj7UC7sN26X2GvsC9BJvF/LAPJzl4FlFr3nuoTaC5wMagzXDgrAa9nfQOKwF
FoLdY38f2fToRXuwec7+4mnk/Q2oBdn018y6BZ/k/CO+Hep+oi+wAVg/bIX9
KpqHPYVVwt6yH7ZNhprlPsrjfXtek6Fm+R+9gh2y7lMbofaI2rP0FPSZXDXf
ZZSB7xNrLr4kfF7HZKGZ1MKyYY9hUfbf0Sx6j67CUjkrxnOZey6hbdgtWLdl
ctV8b6AK7gif5o9K6OURvhl8D1GY5wVqUzgLuBlqlp2ogdp2N2vNPEBtE/4R
y+SgeYyjDnxjrPlwi3O/Y+ZB56IHVgH75Zg+td8AcxWF1TJXTWRyF53Hd8R7
fvjMt2p0f7P+9k5qM/FXW+ab6LfZQM/xr7t9a/+pqBB2xjZZa+bpaBQWYo3j
3m+8J4t7C9kXuXdrD1WwLc6cZDPnOu/psDXYsWXmQ+ckQgYTsE1YKQryHHbM
d9Hvo/8H/V+8gxVw1mGZe/S+MjRNL6U6n/AFzg/9Zl51bnXOdd5fwPo5+4zn
BH+oghE=
          "]]}]}, 
      {RGBColor[0.9663832485666521, 0.7859581214166305, 0.49578807055662166`],
        EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFVm1olWUYfk7lOJ0973nPztl73rIcKmQJ1Z90K2drttyYpkIok2qbW8Gi
zQ23VAaCFKY2l80GkVsS1I/+SJtRFGtQTLc+KISgIlCIrDW2jvanlR/Nrsvr
hn483Pe53+u+n/v7Octau57ovMk59wXOzThbI+dWJ5y7XuzcfM65u25xrjdw
bkWp+Pvzzn0O+RLwPZD/afwKyD/JONcFI5PeuXuBvw/y/cCMAROBLwNmZyD+
o5zs0uYyYPsMw+8HwAfg83np004DMFtN3hbobt47B1kZziLwLZDtyzpXgA9b
AuGI34/vM5D/C/lTkD1tvpXD/gacxlud2wg6u8i57TgFfDtpduaRjwTO9+DX
x85ttrvSwPcj3jbITyHeBdj8A/lbCewH0P0L8m2467ac7i0C/heTLwCTKYFf
4AvQXQv+EPgE8DtTzl2BD5dwxyPA7Uk6tw40Nnwp6MchvoH/EPQCTh34n0GX
A9cK/Hb4GcK3LZB70O8C2WmKFetkkXydwz1Lcdai3nPA7QV+BvQ53PEa+Ah6
o0nh6c8Vw5On7jX73QadZuCfBT0CPyrAHwZ9DOcyvu9KC3fZ7voddvvpTySb
V81OjeWhGvQz66VxUvOnA7QFMZyGPwX0Zz/sVMHO38h9XV78P+ArodMA/IOg
3xi+H7rzpcIQO4TfX0F+HHQfcj5icXaCb7IcDXnFtSOjvBFH+UEv+6sgPwm9
3pR6532vfmBf/OCVz18zymGn6RLfAf4l0IZYvbYUeWhPSc7fNZCXgT+K+B41
fh3oGtDKlGqcDZQT1ur1WHf0ws5wLH+GQMeA+RR+LQ7V6+z5WuBfLVFOmBvO
LefoYkb+MXb2xoRX/jnTt4eycwfoprwwj+eVM/Yr++EYbE5B30XaEZzrxZA1
4vcR4JpBD1hvPOTVOwWr+4JX3TkHzEu7xVgD/89DXom5qQf/G/hd4Adt7gZA
34XOXtx1IVCumfOfYO8dyL+GPydKNPOcwVxOM8kZPJ/VvuAs1+c0G5yRavh5
NqU60ZdW9MxqYF4OtFO4E96D7qzXPHKOd0eKfRD8EsQ4jpgmYt1NH+rxvTxU
jxyHvDutvl8P2VuGeRu022tmk4ijqlj1Zh66I+X6S+hu8Jr90VDfiWMtG9Oa
yYpQftCfVdBr8toP59gDXvlnHa7aPDL/jO1GjMDXxtJlPTts7nKBZpI1uu61
d+jDRq8ankqqBzosb+zhvqTqXp4QHTD+DOhUUjUrtZ0252Vj1OzMWB1/9IqT
d23ytgvAn/bKBXPyQlp9wH4Y8eoz3jdtO6Yv+X9/kK6EvW9j5ZX70tue7PHa
F5zrQ16zTf4Vr7mibz2gFyP14VioeNttljnDjPvJtHYxc97s9ebxXZvIqK68
azfk1Vn19jT0zsSysS3Se8Mem4aNB+zdeRi+T8bqy6lYvykvgo3arPzhfLTa
jngGtCvSW/ZiWm8P+78K9y8U632/O9Qbxv5/nvlOqTb8Rp/o21Fg9ph9xp0x
nzmXqax84Nt4zuJt8dohI1bHHfYunIC8M6073uScRdoxl+BLXaTeq4l0yHej
LwYi9UkX9IZtV18D/myR+pzvyMFIs8MZOmy7pcLrfeWMZzN6k+jDsNf/Cf4f
eMP29qy99cdi7efBWPNQsDeuzGZ5HPGuCSVvSmsH39gNSeWROXNeM0/8nZDd
E6rfE5D/B8vlR4M=
          "]], PolygonBox[CompressedData["
1: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
lrQ/h/4eTb72/geid7OI
          "]], 
         PolygonBox[{{5441, 2166, 3538, 4501, 4502}, {3068, 1737, 4506, 3862, 
          3863}, {3053, 1731, 4493, 3833, 3834}, {4502, 4501, 4505, 1737, 
          4507}, {4495, 4494, 3470, 2590, 5954}, {5368, 2110, 3468, 4494, 
          4495}, {5953, 2590, 5955, 5370, 5371}, {5437, 5436, 5440, 2166, 
          5439}, {3863, 3862, 3866, 1467, 3865}, {3834, 3833, 5367, 2110, 
          5366}}]}]}, 
      {RGBColor[0.9820063708986237, 0.8250159272465595, 0.5442197497857337], 
       EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtVmtsVFUQPn1s3eJ97N29d1fUEsFYW4xGErUUW23xUUBtilFiQyFQHhaV
bkGU4hOMP0wFiiWpBQxQ3/5QiZaQaGKEtIXyilGjRK3iC8UAaUvSiCXF78t3
ftyc2TnfmTMz55uZndyYfbA51xhzGl8evvzLjamcYMxz+casioxpihvT5xrz
QNqYFZBLoXs0Lv1vwO+CfjoOVjrGdEG+GXIp5DXAmZgxT2L9CvoW6Aeg/x5y
K+RByCXW1vVYzwG7N64z//jGzAJmKTD7oevBNwJ/6guF570fBDgDXYNnTHaC
zhIzWGDMZuCep/9pxfFxRjFV4FuN3z9Dvx72h2F/ewKxQO6B/J8n22eRg78Q
8zpg58O3d4GvAmYuMNWwsSmuvbEQMUFfDfvzItl+D371AF8H/TrgOzLybyvW
PMQ2CkwTviwwr8LPuKPY91v/l/vKYQn0fwLzCuQYfDkSE573LvFkpw13HoPt
gzHdXeTL9rfAz8R9vchFO/wpiglHzJRAsU/CWgP8MHQLYW+Gr9zz3Sp9+fo4
9Odj8o97b+LMUdi8hPx0W3l3oDvpz9QcY9YijkMFko/iziP4stirRSx38X1h
fwS26mO6+xtXZ16IdO6gPcsYaPcq+LI8rliYa9o6DJuLc7TSPnEnCpSjGL6p
OHORufS0Tz8Yz/uBcnWDL+5QXoV1B3LVCsy2jPDE0mZtoPzPwXqjr7sH4dcT
nmTqhoA9g2+MfiXE8/6EuJaHPJXl6B7mn3dxPW5lrvzN9xlNqC5GEjrHOiR3
ezPC9VsOU0/bB3xx8gusOwLlrTMQN1kD5P8VSXAdmLvh8yeOeD6Ad7jP6k8j
5zWwew35CUwh9sahnw0fJkL2YKM7ofPEbwXfO3zVewXs1cLOKeYH+9OALwb+
OvhwgfXM+gK2FPpJ0F+AnWdcYf6Anacd1QhrZTiSnT7gd0K/CPIB6JuBTwP/
NfBt0D8C/efQv5yU/TpX+WLefsL+YsRSjliWYL0De99B34aza1z58GOo/sE+
Qj79GgmzEvfmunpr1lwJzsdg58VQ+WWe62D/rULpycMN7Itx8a3YUc2y/wX4
CnDXU/DrZCAs+8RoqN7CHrPP+s88tUeysxnr5LTiPYazMxOKdyNsNzrqhx9i
v9GV/S9D1T/rrhE20wnls9XRG/Ot90K+zFFt7IEvdwJ/E/CVkT7KcwPllHdt
cpR35r8b8nxPdcJe25yQfjf0GV81ehFcfD1Q3ZbDXosnLm9H/vZYvi7NyG/6
vwxnPw3Ez55AvrP2aavJFd8GQnG5JS7/yiLJx7F/r+XqPVgbXHF1H/DnHPU0
9vUfHPGBc+b3QO9LLvTb2jzkiK/k2xuh/KOfyzKqB/J8G+Kb4YjnnG85+EYh
F8HGBst5cpb84zu+AzvzXGE+glzriDOcG/2O7uUMjJLyh7zrtDVbzffPKG/M
H/s1ufkv+WL7/kJgHorEuS5g10aaia3smSlxmxxnX2OvaYG+wFGPfcnTamy/
PZuUn4zpMyvT99X2ffnOJ13NCs60nXY+ck6yt3D+8f22RPKNPjZm1M9+cdVH
2Z/Y9/gfgfwh7ztc9f9LoWY1Zwrn3Qnon8XvRbAxLVR/YC95O1BPLfN1Z5W9
d0Gk3vY3zo3Z2NljuE8c5+Mtobiz3lW/zLM9k7Oc+6fIJVtfrLNbfc2Tq7EW
p1RfrLPxlPxh32JsjPFh9sxIPs/GujFSD8giz4/Z2c0ZzvdZYWf6eKjYOQMZ
J8/OYo+0/3P4f6c9Jf6z70609cU64zw6bGdop+297MFz7GzKh18dKfUN9ssr
bR9gP+AM5DnGxlnOubYS62sZ+XV/Wv2Sb8TY+P+iyuawz9pkT7o2pVrjfLjN
19vmOsppkf3vMZQUhnVZ4et9b8fa62p+FyPeBhsja52cPG95WW9zzt7JNz9j
udrsKbfM8QJPuho7u+k3eVXuCz/dlz+t1qdy+3+iK9B/HfaHIUfYEWv/f0VP
g7M=
          "]], PolygonBox[CompressedData["
1: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
9yzqXf4HulvidQ==
          "]], 
         PolygonBox[{{4498, 4497, 5376, 2115, 3474}, {3475, 2592, 5958, 4497, 
          4498}, {5448, 2171, 5447, 5443, 5444}, {4512, 1740, 4514, 4509, 
          4510}, {5378, 5377, 5957, 2592, 5959}, {4510, 4509, 5449, 2171, 
          3544}}]}]}, 
      {RGBColor[0.9976294932305954, 0.8640737330764885, 0.5926514290148457], 
       EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
X08sfwM6rOB4q3805py3m3Oe7YS5lX3+Bxej4Es=
          "]], 
         PolygonBox[CompressedData["
1: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
          "]], 
         PolygonBox[CompressedData["
1:eJwtkTEvw2EQh3+RIE2U9q+qki4Gi8VaDRENJhZhskgTUoNqEyaJxYKUhLCI
xdbEYqDRgZBIfAWxtWkHUvEVPJf/DU8u9+Tuvfe9dzS/s1zskpSCbijGpW1I
RKWvXmktIV3FpFKPdEk8hwuYhhXcFHESslAbkB5hsU9K0zsTSCfkx5DBRXAR
XJzaBXpjxCj0Q9tqcC1iA5qQ5B5D0KH3gd6/wbDWenZxOdwd572QP8M77gx3
SN0P+Td84m5xddwb+QEzXr3e+po+b526Cer2gvB99s573D5uid5N8g24wRVw
w7hf8grndXyWzSxz3xqu5Hu0fZ5yfhpX8V3YTubxVdwccRZysEV/HlfwWTZz
BH+NS/kubCd1+sdxT75v23vW/+GI+61yv0YQnmlni7/8wI3xl//48EDD
          "]]}]}, 
      {RGBColor[1., 0.95, 0.75], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtln1o1WUUx590d7t3d3fXe3dfiMBUNqJSyRcsxDnTrD9SiMrKzT+mYaTV
zLaBTU3RypctX4aZkULmG2kWZeoWmTkr5yzCJAI1aFtTC6d/JGqQ0OfrORce
zrnnd57znPM9L88zdM6CJ+sGBH53hDAQ0lEYwjFWN3xvcQg7WHP5dikewi/I
tkAvlobQHEEGHT8ohKfQr4T2oPshqxe9N6MhfARfXxDCC3ybjc486PZik0tH
Ns4ib+fgGHwhayvONPB9IetGge3Xnlrk/8LPY92PPxNzISzijMlZ8/ccazM6
A7DR6HoVmRD2IJ+cwg42XmMtYM/+lOl9krIlfj6xnOBbMXyU1Ql/I2L/O1kT
3W4VNlbHQljF9xrsH8R+HTa+Ibalwg46Fp2TigGdtexbDF8JHZ2w/xc4a0jc
4lEsQ+P2XzEfYU9HxL4Jp+2OYYPbvAl/ELyaCgyT9eivi9r/Q8kQ7hWe0Bw+
vQ9/Z8r8qPfYG4vNlrAVHvXO/43fzej3DzI9ffsuWF4qPTdNyFqgE1j7UobJ
K+RhctKwejhpftS7b8OTht2n6L4VtZrQt25w6EL+a9by1hKz3Alr2dGZt8qI
p4j/0Bl8f5Wz/2Hv0zGrUdWnfG90/9dELTfKy+9g+SXfW+JWj6rLuciLPLeq
sW8j9r8/2Lkxl6tWVDNTU5arSv+2KW8+NGUNv0bP70zko+A7iOnrqOVNOVJO
GzxfirvHa74X+XFoK/RaxGpPtboLO8vUb9AecHsQH/qgrcoH/LvQEnQTrI8H
WC0mfG8SWupy1ZHO1rk12BqDzR/x7WqZ1YPqQrpx11ftqoYXpsyWzlBNzspb
Hf+csLob67Fcj5jNqPuSdDuqXZ2tvWvx+y5svgP9Ddku4n07bucmvY+EzVCv
+Vb6aCQ6wzlzCfxF8r44Y3m+UGT93TnQ5Kr9N/gGHKGcXJzGxmb45dDno5YL
fYt67yqn7WVW26rx8ZzxHt83IFuDnbvh70P2AXwl/Ej4iayD8P+hMwF+N/wP
8A/Br4avht+Pfg38aGQ74afBP5C3/A9x/DWbNKMehU7yHB0eaHrSX5G2/bLT
Bv9FyvrhMj01DvnripGzOjN2rs4/nTH/FcfljPXoaOilIsNHOPVmzH/FkfQ8
CfMpPsfkw8oym1eaW8Jd+OfSFr9wmJY2XIRPN36dzRgOwmMsaz78FXSOZsxP
+Vvos4G03463yuvsdKHNBeVO/VRQbHqVrq99p8BsFfuaoIcyZl/nfM//RfAN
0DHITxLjiIzZ1r1xJljMsk3phXvyZn8UdXuUPfOQ1an2iHMqfqSgT/B/MPKd
eZvNBT6fVWt9MctBf874Ydg5AVY7VIfQUwmbHcMIMk/8ceSptNW36vwKOi/n
bCZHSuxs+ZBD3g5fDf9i3Jb4P9j7DPwI5Qt+P/wE+FnQjVm7k1qhxxM2wyrg
Zyh38gcctuZtLm/L271xzWdCLG09qF6cmrW7vAud6WU2TzRXlmVtZi2HzuZO
+gp+adawneR10uD4T2PfSzm7+z7P274jPu9qY4ZJv/eh+rEN/T0el+Kbw3oc
fm/aanCK1+Rf/H+WWD4jllsRm7mat2tT1v/NKauRFq8rzVHNU2GxlL2j2LuN
vT8l7N4al7W7pdn9L/WzxB/zPJ5Bvxl+A3wXfHfa3jB6y2zxd04lsR5A/gg6
u9FZgt027NeWWswdjrPuG2GiN5JwEf9nwu6Her8jDnjswqC+1OLX/XnbXsxw
U547/f2RL7P3kt5NLX6XlWtWIZ+PP23yP+u5xt5ezl3JWfugVWl7A+gt0OQ9
tYJ9fQm7I6uzdn6XYzLCe6ovY1hN8p59Lmt39sys3aHCW/O1Immxl0Prcna/
657XHS77uscfw4fB2NyUsR6t8rNu+J1+Hvm+tPWj+vKkv0mE1XTfKxsrPb/K
cw943UT/PLTd86L8qGfP+Zt1o+dUua1wrISZ3hS3vK6uer2p7jQz9E7R3Kjx
nlJvFZTYzNqdsjeY6k1393afG5ofmmfr/D1z3n1bnrFZW+K1kfL50JyxflZf
N6Ttzu/0+m/2OSZ8hN8qx1Dnr/d3nXrrur9X1KOHo/YWqs2aD5o3jWl7M+jt
0OpvjOqM6arOVGPX/f1T5D1R6j7EfVZrlv4P+NyY9g==
          "]], 
         PolygonBox[CompressedData["
1:eJwllG1olnUUxk/qtmdbz7bnfu5nDxEYmSv6UDDXG+G0F9eXJkQW5ha0FQZb
tCkmmHNprkh9rNSsiDKI6YSJBtpsi8KalUuLsIjAClprug++fCjKDwn9Lq4P
h/v63//zcp3zP+dc/2Tvwz2zIqIHmYO05SO28O2viGgHn6+P+KU8Yroy4gJ4
RSHi5UzEGpSHcxGNWeyqIvqQ94sR87mvw76R8wrO99ZG/FsWMYHNG9w1c7kM
f13oHKuOWM6/lzL2+Rj4RmwWltnnTeB7sP+H8+fIKWJthtMr4oePAfA1cHgH
/BH/fsPfvKy5noX/+jTiJ3yexHYRsqYm4lX8XYv+LejvR38UH2+BS/wbAx8i
5iCxp5AWbKfx8Q2+RtCZAj9bb18TSA94DH83Y7uQ+4P4uwObXnL5kvN59Oen
5rYfnQbw7dxnsG3CfzuxvqhzLuJwGvuv4TAEHiTmCfBZOG9D/wqyFnyhzlz3
ofMz+uNZ1/opYt4gvvC5k/sHuT/CfRf6nZzXcf6q2j7kS29yH7ptcDrO3Qg6
7eJLzOc5dxO/Afxt1lz1BnqLX9E5WmGOZ8CD5LCxyjWtTCIu5s1Nb3IJ3Aan
rXDbzpusol53c75M79yGzePKP3WvKeYx8Mmia7/yqojZV0f8mLoWb6s+4AWp
a6s3aZI+sqPCPTsBfhH/nxHvU2QjuCXn2ivHKfKvh+Ot4GpsiuDnEr+darYW
3ES+28l1PRzeg0sDPlZm3KPq1fq8e1c1LYJHU9eqm39HwXuQRs7NnN8F/47P
tnDPT4KH+LeE+1b+7U2do3LdQn2eUW8l7k311GJwPzE/IfZf1OwJ3m5Twbmp
hqrl5sS+FHMgcY1Va83sYXJ/mhwWV/kNpsntQ2Iu12yrX8FlxH+Nu9eRzoJF
+DT2c7gbTawrzmPgTdhcLveMvwCuROcM5xI1Owe/P7PORTEVWztCu0IxOvB9
KOfZmYUcBA/lHGtkNn0DXgL/R7Gfi/8PeK/WxLWcS/yl4O+z7p3V+LsLf615
93YvPpaC/8t7VtWjV8C70DmR8cxp9krEGEf3EWLcT6x5td4tHZwf4tyHzscZ
17yzxjEUSzP9HbFnapyrdsok52ZsfiDeOu4Xgd+sMxftqFPwX53zbA3AeZh6
7Mi7l9WzO8E59FvK3SNj6HfXuDZ/IyViX0zcW3qzS+CuGt+NIw1wL6Xu5evQ
2ar5rfWdZkCzoJ2r3asa7Cx4J2o3qgbbcq65an+Ofxu460uNZ5D+1Dtdu107
aAH57k79FpqhXeAO+IxmXDPVbjJnLuqRP8B7ip4l7XTt9gNF10I1myHf4cS7
SjU4kPgN9BbyuQF/DxRcW+1k7WbNgGZhFefd8l0wVs+od/YW3TvaSfuK3ona
jZrh4/D/H3En+GI=
          "]]}]}}, {{}, 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["

1:eJwV0UsopWEYB/BHmYVyiXFZSs7ZiElD0km2NmyUXBfY0WAxCwt3VjobZCc7
LFzGQomVUGZSkqbZyMZIqGksZzPK7yx+Pe///77f19f7VQyOtY9mRcQ4ObkR
T/kRz9znRfwqifhqvVMYMVIaMUp1QcQ3eY9dhu2nnRsyk/YSzMkzzJKiryzi
2vsara/MBvNPccRn6qjhkQeanf3/MeKNf9zpbmnSX8jfOeWn7oaUfkleJs2l
7geN+h65l47MM7oTGvQJOUk5R7pD6vV/iyJeeWFft5f5Rv2RfMwBW7oNavXz
8gJTrOvW+KRvldtoYVW3QrW+VC6jkLRukSr9vXv8zR2zumkS7qjb3pn7qrQ+
N5NmJ12ZPbad7ze/+C8f/LsB62xzS7/JpPdMMMU7Ar9Hag==
          "]], 
         LineBox[CompressedData["
1:eJwV0c9L03EYwPEnOkmlrh8bHRtW5wovwqbO1qkgOnjYgmqHUQQzoV2Wgqh4
sDy0FDxYEBXCRoIK4i5Fhy6tS6dOgv1YRLT6F3p1ePF8eT+ffb7w3anSxLXK
gYiY58KRiLVUxFPOcJZz2jPzvPmjN6JKri9ilCcnIh5TZ5Cicx+dG7Frm2nz
ajJiyu6m3z0wb5nT5g1z2fma54vOPD/kLC+1V7yg52jEojuWWLcbJ6sNs6O1
eK1d575W5avWYVsr0dCa9PZHJGhpt9nXvjCkZXirVUgei0hR1u7w/v/dXNau
UNdWaGs1ZrU53mjv+KTNsKu1+KV1+awt8Ef7SzIRcZI97REDxyNOk9PyfNPq
FLQiFW2Shu/S5KfdKhnfLkvOd7zEhl3e/GAePBxx127T83f/R9nsmAX7e/qW
+36bXdJ6zXsWtYeMaf8AaGlM3g==
          "]]},
        "60"],
       Annotation[#, 60, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["

1:eJwV0EsrRHEcx+EfC+Q24zKGLGRlx5KJSE2NhVL2alKi5FLUWCtFyWQoG4kX
IIRSUoqFl2ClREmpycqSx+Lp9P38OzPnnO7ppcnFiohYpLY+4rIp4ooLltoi
arTeRES167l2RjEVscNLQ8SJfcwRz3Y+HTHmLMuKtswCrc6mWiP6/WbOzjJK
6D16n95pt5Piy/99tzjTy0mbT571W71Lf7DvueNR39DT+oG9zy7n+oSe0Oft
OWY41Dv0an3EHiLDpv7WHPHr+VvsJA2s6qf6j/7he7zzSl4v6GX91r7hmnF9
VP/Qi/Y2WwzodXqlnvOt9rx/yfuWXH99hyfXgrM1Zhs9l3sGGaHKvevaHJn/
32KYPzZqPB0=
          "]], LineBox[CompressedData["
1:eJwV0b9LlHEcwPGPQZsmppari16K24EUnFOTg1iDizc9dSJolwcR1NA1NB0E
UYo3HEWEv4J+Uig2JFaHNyRSgdBxIv1Yo/6B8HXDh/fzeb+/PMc9397k6sV8
S0QUzdSJiIH2iEZbxBDO2j+cjriCMybDJVjqjriEt/Crs+WOiLOeF3He7HLD
9tuY7oo4jr9PRRzDH/iLu+n5f2fEv9aIA+4P1rGuXdN2tAa3z33Hb/hFy2v3
tRq3x1XxM9a0aS2rveVq3Gus4paWaH3aY26be4jvcV3Lan9PRtzl3nEl3MDn
2oS2qd3g3nDX8RUuaePaHS3HPeMSfIoVbVQb0y5wy9wYPsEH2nmtR8twj7hz
WGn+rjai/fQNz3Blrg8XsKil3EW6+T982494z7l+zynzyV7ArHtZ4ydxzj7o
zlbtK2bCfuhcznsum5fmhSl4/xEFjE/D
          "]]},
        "56"],
       Annotation[#, 56, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["

1:eJwVkT9IAmEchl+jJfqrpWJlYBLU6GBTEToUFUQFDY1ZNARZBMGt7YLgYKQg
NbS1FQQNgdKJBNESTkYKLQVGOkiXDT03PLz3vc/dfff9LhA7WI87JBnQ0SNN
90tnXikLGTjsk0yyCA+w4ZbeeqUY19uwBfVu6Zf7WkPSgkf6IZNOKYqLQJt1
lfUpbpI9dtljD/ahxvvcLimHm8Gl6NL2N8AHbhl3iVvF3dMVwIQG7gR3hdvB
fdJ92T1YuFvcNc7AeQakYfCDg66OuyMTuCjdPCxCF11wUMqT57g43REcg5Nu
E1cib3AZuhxcgI8uiXsmS7gi3SM8QYDOxJXJCq5J1wILpujauFfyGzfGjMZh
AkJ0Ieb2TnYy7yW6FViDWc43BxFIs87CH//Ay9l9MAIvPOO358X8R8kw/AOz
8kmM
          "]], LineBox[CompressedData["
1:eJwV0c0rhFEYhvHHxsLX+ByyUDbKxhJRmpKRMAvZ+ZiSUtJMPlL2iiJhSko2
slQ2Skkp/ghbjUKpycpyxs/i6n7u6/Sezjlv91J+JlcVEev4qo9YaIvI4sM8
Jz/loizKY5lviDiUOXneHjFrrtRGXDVFXGJCH8coNvQ81tDi+/nWiP5kRFof
RQqVuogevo/v1NvRim/+p8UaX2rU8YVX/oHv4p/1Jzzihd/lk/yZXsAxbvkM
38Cv6itYxgXfwVfzI/owBrHHF5sjys7frCdQh03+hv/9f5tExDvekOW3+RL/
oN/jDpN8iv/gj/QD7GOAr+Gr+DHvl8aJ+4aecZayt+g1T5uncGK9gFPs8JvY
wpC9Fv2DcbkgB+S1ff4ANDE/hQ==
          "]]},
        "52"],
       Annotation[#, 52, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["

1:eJwV0L0rBVAYgPH3LlK+rstlUyaUjZQwXZQr3RIZSK6FEnJ9lFIWFFHKJjIY
bEIpo5TyFyjFxCCSzSg/w9tznuecTp1TPzk/OJeIiBmTKI1orIgYS0c04WtZ
xGllxB4Pew3ab0nEiXZktvTN/3FusjoijdN6Ckf4OjZjAjv1X3fU81X+UxXx
xZP6B37yRf0Wn/hbMuIRr/msvoP3/Ea/w3U+pQ/hJd/Vz7GP5/U6POYT+iFW
8VH9PRWxzVv1LXzhw/oVLvNivYBnPKevYZ4/e/s4LvA+vRcH+IWexQ6e0ZPY
zjf0NiziXXqLf2o1B967jLmaiG9/uWLdb501J7URS+URD1jQ97HHPQWtFxew
GzPmD40+OUc=
          "]], LineBox[CompressedData["
1:eJwN0Uso5WEch/GfbCzGbVwGoeNSLO2pIU0NJbKZk4UFWSiXFNmyxplmQY46
jcXs7ChFFEWawkJZUZQNRVjIZeWzePr2Ps/p1Pv+awbGe8eyImIK3/MiqvMj
dnIj6uy2rbClWCmMSGMRZ3z/t4jWkogW9HBd6EC2dlMa0VQMW8/VoAqPXyIu
uY+iiEb7VhDxgmdcaOfcgZawx9x/HOJIO+VSWpld5TJIY0M74pJagZ3kJjCK
v9oeV6vl2J/cD7RhTtvi7r+6uK3kylGCaW2d29Te3O/J/R9wh0FtTZvRnrQD
bh+76Nb+aZ3arbbMLeIPmrWMVqxdayPcMIbQoC1pV97ow7u1e9uUd0w5z9tX
7t23WXA+1ubtqT1Brf9K2t/4hYRzn9+O21n7CU85RyQ=
          "]]},
        "48"],
       Annotation[#, 48, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["

1:eJwN0D8oBHAYx+HXIJZzHJdBikyi/J3IJKVOdJRikYtsKJOUEsVlshisSil1
KboJ48Vk06EUSZGF7J7h0/Pr2296W3Mrk8sVEZHTUyJiIh1R5hgfmeUD81ys
idjhAg8bI34aIuY0r6W6iBlO60vt6tCgvY0tetVvfcSfkvZvfqpsv+KN3moj
irzQvX2XeRXtW9xUyZ7llPbtGY7q2t7EZs3Z00zp0v6eivhQn/2FzzqzF3iu
KvspT3RsX+eGnpIRa1zVkX2YIyrYhzigA3uCSW3bq1mpPXuXe926Xyfv2MNZ
t+v3r8Ret8x497Cb4/oHC+E5EA==
          "]], LineBox[CompressedData["
1:eJwN0D0oxHEcx/GvWfJwHgaXh+ysJizC5GFw06UwELnB06DIpORKGdjoBp3F
RAnDecjCgIniZjGwcZvX8Orz6/3//4f/r3U8MzJXFhFTvFVENNVFtFJwTtor
e98Q0ey86VyqjcjaocqIF+2V3vKInHfeqyMObNFOej5DzrNhamoiEmxru+S1
FP3aAJfaDcdamlVtjQ/tmxNtghPtlNqqiEbOtWk+tS96tD4KWoaWhP9hVpvn
TltkVEuxp+3zoK2wpWW51e551ta51m740X550Tb400ok/XMbRS1Lu3vqoF8b
5NC95Dlix/PO+ogx50d3mbZPtstdntlGe2EXfLfEMt3e/weaUEBn
          "]]},
        "44"],
       Annotation[#, 44, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["

1:eJwV0L8rxHEcx/H3DSzym5DkTDKwyXBGmZROsV0KgwmLf4CO4W7jBpIy3UJZ
LyluchkYJJRNN/gxiDobD8Oz57fn+7N8XwMLqzMriYjIYLIhYrMpoq8zIsu5
xogtTjdHnHRFVHCMjY6Il9aII99VXnZ/41fk3XraInqxqye5HwV9mtO40Od4
Fod6lrfxruc5h6J+xufoboko8yVO9U/+woT+wzWU9MH2iCGs6SM8jLKe4Xkc
6Eu8iGt9hwu40vd5D3d65f+Ob/2Wb/Cs/3KCk/6znutQxSjGMKWPc9EuKf7A
vf1S9nzgkj2feN27R67hD72+PCo=
          "]], LineBox[CompressedData["
1:eJwV0L8rxHEcx/G3EgOO46SkxCTy60xkklKE66RMFwajK9OllCguk0WyKqWU
FJkwMtokSpEUWcgf4HHDo+e3V5/v8m5bzGeXyyJigemqiN7aiH4KiYgBTXNX
E9HX6JsueuhmOxVRXh9RyYZ3Ca1m1z6ow5zaR3WEA3teV3iyr2qBQ/uRHlNR
F3FW+o8T+7O+kLZ/6DsX9mRDRIqcvUWbubaP6Tg79qxmuLWv6TqX9qJucW8/
L2282W/0ikf7p36TSEb86S+v9lbaGbJ3agdfzDLHkn1ec/yw1xSxz6Z7FUs3
48E9M5plgikmmeEfJyY2Jw==
          "]]},
        "40"],
       Annotation[#, 40, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["

1:eJwV0LErxGEYwPHHcItzh8PgNqtNpCyKiRuclOkyuJJcYVCOUhdFSSmTRbnJ
5AxKyWCSwWRxpaQcUfI34HPDp+f3fp/61fv2FVdnVloiosBJMuKHXE9EJR3x
lIp4N3ecG+ax3RelzogFprsj8hxpDUa1EbJaLwfaCxktxUeX/7Gr1fnsiHjj
QqtR0R650a7Y0Mpsag8cavuMa2OsaXcUtTnatCTL2i3D2gD1jLuwqF3TqiWo
aqfMa5e8tkc8U9KWKGjnzZ1WY0gbZFY7Y0/b5s/dfpnSqvR7ry3vde/9Ju3L
vnPmujlhfpv/Qys3YQ==
          "]], LineBox[CompressedData["
1:eJwN0L0rBVAAxuHXgsE3oZvS3SRls/komRi40Z0YyNfiThYsStdEis0mf4MM
ymBQN4vJoGQxMV0WWTzD6en3dpZziquV0k5DkiWn2pq8tiX97G9PevmiDzne
kzRztjNp5JjeZxN/WpJBe53Ru/bn7uRdf3ckb6zpiv2ST/rRXuOF3rav81Zf
2m+4otfso7zWFfsVh/Sy/bcrOdPT9lPWddn+wAPdZ9/jnV6wn3BLf3rXBqt6
1l7mor63lzivZ+xFTulz+wQLetL+5Z0jetM+zA89Zj/2TwP6jwUecc6df49S
LsE=
          "]]},
        "36"],
       Annotation[#, 36, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["

1:eJwV0M8rw3Ecx/G3pZQmtvlRFJFS7KQc7MJdSb6snVdys5ISlj9gl11XSmol
/4Gri1aIkpOLcrMjtUTJY4fn4fXoU5/P9ztdrmzu9UTEtpYGIm4zERPpiGQw
oqiSXkciPvgCr9j7OtA7n8xGrPAz+1wXavMtnvCWfacHffIa3+Vfdkff+uE3
/IRPDUXMaFapUWd4na/Z69pQP8/nIpr80D5WVVle5te8aV/qSuO8we/5k/2s
l+49/JG/8V/7T+E753nvsDfyue5WXou8wPv8p8QuqqRlvsPH+JFd1alW+T+M
6TBR
          "]], LineBox[CompressedData["
1:eJwV0L8rxHEcx/G3YpD7cufcLVKusCmDb5ST4RabmAy3+LHoCqtENxCLLAar
/UpikcUfIW7RGXxjMdooD8OzPq/Hd/h+v5/K+s7KdldErGouiXguRbyoXYi4
KEeM5SIqAxH7/REH6ngWgxHTvMmPdaKMp3yRt+wb3eqLN3idt+1XdfTNr/gu
785H9KpPv//v50d8yk41ox7fkhQjLnndXtOGEl7jLX5qn+lcJb7HH/mdfa8H
jfBr/sTf7EwfGucZ/+Q5/15QUZN8eCjih8/a81pQypd53p1t2ltqqMrf3dMo
n/Cfh85NLTn/AekAMIQ=
          "]]},
        "32"],
       Annotation[#, 32, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["

1:eJwV0L8rxAEYx/HnGA3n1+iUlMH9A/wFVxb1lZjkuMlwlLoUNzCdxSSiLsUg
000mRXIxcBaT6RaFVaQs5/UdXsv7mZ7PyNJqUs5ExCxHPRGfVPsiNigNRiyz
r70xpyVMahPsaW3y2hjdWhc17ZVOb8QfrYGIJ3a0l5T2zKF2wJbW4lw7pagt
UtEe2NQq5LVx1rRbprUpfvojvlnRrhjVhrnRrilpl/xmI77Y1WosaA0etXtm
tIR57YIT7ZicNpTetDPWtTIffn6noNXTfbSEpnbHti3+ARS4NS0=
          "]], 
         LineBox[CompressedData["
1:eJwNz0ErwwEYx/GHnSzahuVGS65qiRyUchgOHLR2mJT+By5ri1pR2mWIVyAH
NyfLZW9AXsMaRa2c8BpQPoenT9/f7SkkjZ36UERU3PVYxOlkRIFXuYgZNvU5
y8wxsWe4pVuc5t9oxJL9h1P6xP41EfGt0/ZPfuhje5d9PchG9NjRNfsZn3XX
/sSmPrCX+Kgv7R2u6n17lre6ar/hiK7a38YjLvS8vc2eLtvveaSH7Q3e6W17
nXv6JROxy0O9YV/mpn6wr7Oo1+wpLuqWfYG//luxv3NOJ/ZZvuq+G+Qj/gEP
RC95
          "]]},
        "28"],
       Annotation[#, 28, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["

1:eJwVz78rxHEcx/G3TYe44x84XWTT5VaJ5RaL+pZ0FoOuuyKjjGYSZfJzUFar
la7zYyE/tltN53KyyK+H4dGzXvXu0ye7sDyz1BERCcWuiFo6ok7SG3Gj16wP
RDS1xYq9rW9s2AczETn27cM6xK59Vue4ss9riUP7pm7xYd/RbU7tl1oj2+dG
65zZP/WLafuv/nBuH+2PyLNqL+gYF/ZFLXNir2qFW/ueHnBnP9YjHu33+sC3
/VmfaNg7STHinz3azQvjTJDYp3SS1/93KbNmr2qFd/4AtyU3dg==
          "]], 
         LineBox[CompressedData["
1:eJwVz6tLg2EYh+FnpqngPCELGvwDBBHUJgZtuvANg3ELsuChyBTFqEarQQQ1
bRgcq1arQeZhwmAYFJvFJMKuhYsbfvDw8k4Wd5LtVESssdof0RiKeKGQiXjX
JiejEX/6z5G9ZzgixZl9Wmeo2Od1jnP7hpZ4tm/pJlf2C73s3g9G3Og1VfuT
NpiyN/WNuj09EtHHuj2jA9zbF3SRY/uyLvFg39UyNfuhHvBor+otLXtN73i1
t/WDXn/70k/a9jGyzNondJxvVshRsOc14af7LmVO7fu6xy8dA/QziA==
          "]]},
        "24"],
       Annotation[#, 24, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["

1:eJwV0K1KgwEUx+Ejghss+DUvwC6uCBZ3A2oSB6Llxa8kClsxyCxTcWnJ4MKS
MLEohqUlk8lvDIpjxeIVaPJ5w1N+J53/5Pre0u5ARJRo5iJ+OB2NOKaSjyhz
pn2zoSUsaPM0tD6z2gwTWp669kFOy9Ibj/iipr3RG4n45FJrU9UeuNWuqWhl
9rV7TrQaRW0uvWl3rGkrZLQhdrQuBW2Kp7GIR7a1DoNa0NTOSbQb3ocjXtnS
NlnVrlJam4I2zbJ2waF2wJ/fflnUWuk+WsKL9syRLf4BWxwyyg==
          "]], 
         LineBox[CompressedData["
1:eJwVzz0rBWAcxuHbePL+NkhCFotkkQ2R6UwnwmKQOnkJkyRSFqPEyCLyGWQW
iSiLMsluQQYGl+Hp6ncv/57O2ZXSckWSCW+3OllqSlq5UZ+0sKx3OMpKjtsL
HNSbrOF3VdJt/2JBr9mfG5M3/VuXvPJJr9pP+KAf7fc81gv/d3mpT+0XLOs5
ez/P9br9jH16xh4e6KJ9nz8NyZT9ltu6w77FK12yH3JRf9Ym89zTRfsMJ/WN
fYLTeszezRF9ZB9mlx6yf/hnr1619/BdD9jv2K7H7W281i/NyR9l/i9f
          "]]},
        "20"],
       Annotation[#, 20, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["

1:eJwV0M8rw3Ecx/H3mtNGw3CgVtKi5EftoNzmP/Cz1ncnNw6cxIWN/4B/QJqU
+Av8A3IYLouDE8ddlFJC7bHDs0+vx+XT5zO+ubuyk4qIdS30RTwMRBR6Iyq5
iERVvQ1HfPJZvmfv60AfvDgYscQv7IYu1eYJ3+BN+0nP+uKnfJv/2L/66578
nh/xYn/EpKaUHon452d82V7VmrK8lI+44od2TXXl+Ra/49f2jW41xs/5I2/Z
L3rVBG/xd57yvrR6NM2zQxHffMae07xKvMwz/qliJ6pqsXsvH+U1+1gnKvMO
1gcvvA==
          "]], LineBox[CompressedData["
1:eJwVzLErxHEcx+HPL+nS+d0lGU93/gNGm4GbLGS4W67UTXIymQzuFgYZdEo3
yCAhgwy64RhkkEGnjAYD/wMlHsO3p9e7Pt/S8tpCI4mIJW87jXjPRYyzmI8o
8E23+Mocx+wp+3qTz/wejhi1f/FJb9gf+alH7B980Ov2e77ovL3PO71i7/FW
p/Yeu7puv+G5ztrPeK1r9ise6CF7m5e6Yr9gU2fsWzzVi/YTNvSgfZXHet5+
xKoesFfY0WX7Ied0Yp9lW8/Y9zmlfznJPU7bdzmhf1jizv//bv8AIw0vrA==

          "]]},
        "16"],
       Annotation[#, 16, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["

1:eJwV0L8vQ1EcxuFvRSdDq/UPWCSkrERnomsTS5dKza52MYrBbPNrE4TUaLXa
tMUiIaSrzVIhJs8ZnnxO3uTm5Nzp1nY9y0XEOrWJiP5kxIBGIeJZn9ifihjp
Nzv2X/3hwD5bipjj3D6vFY7tTd1gYN/UFmf2Qz3iz36qJ3TtD9pjphjxmL7j
1p4rR4xRt+d1nDv7oi6xa6/qMvf2Lc24sXe0Td9+oZe82K/1Kp3tr/qW7vCe
D31naC9QZMFe1hKfrLBKw17TNb7SvWTs2TvaTv+Mf6buNC4=
          "]], 
         LineBox[CompressedData["
1:eJwVzs0qRHEcx+Gftdhau57ZWbgAF2BuQ0wMyUhIQ0JiEtIMQkJCGpbCVuP9
LUvPb/H06XzPOf9zuvuKPf1tEdFLoT1ioDNioytiUEc6Iko6xBPDlBm3j+ko
rbxmgop9MsszU0xn7bM6wwtzVPPavqDzvLLIUt63r+gyb6yyls/Za7rOe/4n
m/mefVu3+GCHer5v39UGn+xzkOfZj/SQL445yXPtZ3rKN+dc5HfsV3rJD9c0
83v2W73hlzvu2bM/6gN//ANIBES6
          "]]},
        "12"],
       Annotation[#, 12, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["

1:eJwV0L0uw2EYxuFHii7/hlKmDpVYqMHX0thEYpcUS9swSztjQTkDiSMoXXAC
TkEUE42to1HE4Ovq8Bvua3nyvlO7jY36QESUVcpEPGQjCklEZSSiqpreJiI+
+Tzftw90qB4vjkWs8ZZ9qSu98x2+zR/tJz3rg1/wPf5j/+pP3/yeH/GZ0YhZ
FTU4GZEajzjnZXtTW0p4ibf5sX2ipnK8we/4tX2jW+V5i3f4i/2qrqZ5l/f4
kPcNK605ns1FfPEFe1FLWubrPPFPFbuqmlb6d3meN+1TnWmV/wPMli/J
          "]], 
         LineBox[CompressedData["
1:eJwNy9tPD2AYwPFHko6/Dn4db8yN6zbHDrpyQc6RPyAqitokqZyVHLdcMJYx
xmpZxlI5Vvw3ToVyF/O5ePbd87yfd01De13bsogYNT2JiIPFETM5EQd0Wut1
dW7EraKIm+ZTfsRarq0wokbLdIor1Undzyf5G+x1M8v/cT/ufQtfoq/txTqu
dXwBf429amb4Rfdj3qv5In1lL9SXuo/P4wfYK2aaX3Bv9V7FJ/WFfZWO6V4+
wfezfeYj/9u9xXslX6DP7fk6qnv4bP4ye8l84H+5H/VewefpiD1Xh3U3n8lf
ZC+Y9/xP9yPeN/MJfWbP0ae6i0/nz7PnzDt+3r3Z+yY+W5/Ys/Sx7uTT+LPs
GfOWn3Nv8r6Rz9RH9gx9qDv4VL6X7TFv+B/ujd438On6wL5Sh7SWT+G72dNm
iv/uftj7ej5N79tX6D3dzgffxZ4yk/w390Pe1/Gpete+XO/oNv6feyd70kzw
X90bvJe7/01G3LYv6aBu5ZfcO9gTptn+xX1cP/s76PYffAtZ/Q==
          "]]},
        "8"],
       Annotation[#, 8, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["

1:eJwV0kVTlWEYBuAPW+nGFmNs/QsWBjZYrJxxxhkVBbu7EzZioGJhYaGSEgIW
FubKlRs2/gDF9jqLa97nOe973+cwQ+qi3IycsCAI2igMD4KvTEwKgjTyySMl
IgiGRQXBcAYzlIbkIBjiLPC+lSzzAj4mBsEn3vGB9yTLD3J3SOYIh+lvH8gj
8wBnvo4vzDfPo0XuLa94w2uS9KS62y9zkAP0sfej3tw39B06PjPXPIcXci95
RjPPSdTT290emX3spYe9F3XmnqE7HZ/INGfwRO4pjTymiQQ93d3tlNnNLpLs
KdSak53bdLQw2zwr9PfKNVBLPXXE60kMvZXZwXbi7AnUmOOdG3Q0M9M8g4dy
NVRSTRVxemLdbZbZyhai7DGh9+Zo5yodTUw3T6NcroL7lPGAWD2Roe+U2cRG
utkjqDaHO7N11DLVnE6p3D1uc5c7xOjp6m6tzHrW0cnehSpzZ+diHRVMMU/m
ptwtrlPCDaL1dAz9dpk1rKadvQOV5vbOhTpKmWSeyFW5a1zmCsVE6QlzlyOz
klz+RvrH91mF+Z85S0cJaT6bwEW5SxRxgfNE6vnjbbbMCpbz0/6bcvMvZ6aO
YsbrGMdZuXOc5gyFROj54e0SmWUs5Zu9jTLzd2e6jiLG6hjDSblTHOcEBYTr
Ge3uqEwexxhhH0WjeaSzlf8X/4iT
          "]], LineBox[CompressedData["
1:eJwV0Msz1XEcBuDvKd3cuh/3SpyE3MaYpmkaLbUk3e9Cl4XW/RlYqQ022GBD
m2pTNmUjm2qDDV1m3BKS6PktnvnO+35ec5yT3/SsoS0WQhggKzWE+XgIC9Rx
ifmUEArSQkjOCCGFdl0nHRTLi94l6mlg0b7QPtUtjS7dS15QKi97f3GZxuhv
7RP26W776db10kOZvOL9zRWusmx/yv6A20H6dAP0UyGvete4xvXos+yL7A+5
HWZQN8wQVfK69w83uMmK/Wn7I25HGdG9YpRqecP7l1vcjv43+2L7uFsGr3Vv
eUONvOn9xx3usmpfYp/plsU73RjvOStvebe5x/3ou9iX2me75fBBN85HzsmB
GA/kJtbtz9jn6vKY0E3yifPyDnbyUG6Ovrt9mf0x3XE+677yhQtyErtokVvZ
sC+3P6HLZ0o3wzS18m728Eh+HP1W9hX2J3UFzOq+McdFeS/7eCI/jX4r+0r7
Ql2C77qf/OB5egj/AfFuYIo=
          "]]},
        "4"],
       Annotation[#, 4, "Tooltip"]& ], {}, {}}}], {{
     StyleBox[InsetBox[
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Re", "(", 
          RadicalBox[
           RowBox[{"1", "+", "\[ImaginaryI]"}], "3"], ")"}], ",", 
         RowBox[{"Im", "(", 
          RadicalBox[
           RowBox[{"1", "+", "\[ImaginaryI]"}], "3"], ")"}]}], "}"}], 
       NCache[{Re[Complex[1, 1]^Rational[1, 3]], Im[
         Complex[1, 1]^Rational[1, 3]]}, {1.0842150814913512`, 
        0.2905145555072514}]],
      StripOnInput->False,
      FontSize->11], 
     StyleBox[InsetBox[
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Re", "(", 
          RowBox[{
           RowBox[{"-", 
            RadicalBox[
             RowBox[{"-", "1"}], "3"]}], " ", 
           RadicalBox[
            RowBox[{"1", "+", "\[ImaginaryI]"}], "3"]}], ")"}], ",", 
         RowBox[{"Im", "(", 
          RowBox[{
           RowBox[{"-", 
            RadicalBox[
             RowBox[{"-", "1"}], "3"]}], " ", 
           RadicalBox[
            RowBox[{"1", "+", "\[ImaginaryI]"}], "3"]}], ")"}]}], "}"}], 
       NCache[{Re[-(-1)^Rational[1, 3] Complex[1, 1]^Rational[1, 3]], 
         Im[-(-1)^Rational[1, 3] 
          Complex[1, 1]^
           Rational[1, 3]]}, {-0.2905145555072516, -1.0842150814913512`}]],
      StripOnInput->False,
      FontSize->11], 
     StyleBox[InsetBox[
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Re", "(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"2", "/", "3"}]], " ", 
           RadicalBox[
            RowBox[{"1", "+", "\[ImaginaryI]"}], "3"]}], ")"}], ",", 
         RowBox[{"Im", "(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"2", "/", "3"}]], " ", 
           RadicalBox[
            RowBox[{"1", "+", "\[ImaginaryI]"}], "3"]}], ")"}]}], "}"}], 
       NCache[{Re[(-1)^Rational[2, 3] Complex[1, 1]^Rational[1, 3]], 
         Im[(-1)^Rational[2, 3] 
          Complex[1, 1]^Rational[1, 3]]}, {-0.7937005259840995, 
        0.7937005259840999}]],
      StripOnInput->False,
      FontSize->11]}, 
    {RGBColor[1, 0.5, 0], Thickness[0.01], Opacity[0.5], 
     ArrowBox[NCache[{{0, 0}, {
        Re[Complex[1, 1]^Rational[1, 3]], Im[
         Complex[1, 1]^Rational[1, 3]]}}, {{0, 0}, {1.0842150814913512`, 
        0.2905145555072514}}]], 
     ArrowBox[NCache[{{0, 0}, {
        Re[-(-1)^Rational[1, 3] Complex[1, 1]^Rational[1, 3]], 
         Im[-(-1)^Rational[1, 3] Complex[1, 1]^Rational[1, 3]]}}, {{0, 
        0}, {-0.2905145555072516, -1.0842150814913512`}}]], 
     ArrowBox[NCache[{{0, 0}, {
        Re[(-1)^Rational[2, 3] Complex[1, 1]^Rational[1, 3]], 
         Im[(-1)^Rational[2, 3] Complex[1, 1]^Rational[1, 3]]}}, {{0, 
        0}, {-0.7937005259840995, 0.7937005259840999}}]]}, 
    {RGBColor[1, 0, 0], PointSize[0.02], 
     PointBox[NCache[{{
        Re[Complex[1, 1]^Rational[1, 3]], Im[Complex[1, 1]^Rational[1, 3]]}, {
        Re[-(-1)^Rational[1, 3] Complex[1, 1]^Rational[1, 3]], 
         Im[-(-1)^Rational[1, 3] Complex[1, 1]^Rational[1, 3]]}, {
        Re[(-1)^Rational[2, 3] Complex[1, 1]^Rational[1, 3]], 
         Im[(-1)^Rational[2, 3] Complex[1, 1]^Rational[1, 3]]}}, {{
       1.0842150814913512`, 
       0.2905145555072514}, {-0.2905145555072516, -1.0842150814913512`}, \
{-0.7937005259840995, 0.7937005259840999}}]]}}},
  AspectRatio->1,
  DisplayFunction->Identity,
  Frame->True,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic},
  PlotRange->{{-4, 4}, {-4, 4}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.757259612567141*^9, 
  3.757259645547448*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
aOvTll+wYAH27dtHWp++qiIlJQWLFi1i3n3G2xYXF4clS5aIbIuJicGKFSuY
d5/ytu0ls390dDRWr14t+N7u3bsRGxuLdevWCbbt2rULERER2LBhg2Ab7dHh
4eHYtGmTYNv27duZbVu2bBFs27p1K3OMbdu2CbZt3ryZ+R75vmAb2TdzDHIs
wbb169cjkgyv5JwE29auXctcHzl3wbaVK1cyxxC+3qVLlzLXIXy9tJ3i4+NF
vkfbMy0tjXnXnb52wbx587pw74NI69N7fvDgQd6w8njboUOMUUj2yN3W2tqK
s2fPimxrbm4mVsdFkW2TJk3ClStXRLZlZGRQ+0JkW2NjI27e5Foan/K2PXr0
CA0NDcRnui343sOHDzFx4kTcu3dPsI18jtTUVNy9e1ew7c6dO8zfku8Ltt26
dYs5jvBxb9y4IbHt3LlzyMzMFNl26dIl5vqEt1HrqKWlReScz5w5w4wfwt/b
v38/dbGYd4zx1oV7C8g2Ka1PPhJp/ZycHMG2ZN62Bw8eIDk5Gf/8849KCm/b
9evXmftOWlGw7fTp0ww7pCUFf0v7PmVM6GzIJlnPZsqUKTh16pTI2dB7QtuQ
tJHgyLSt6X0i90GwjfaNpqYmkbM5ceIEHQOecDbv8L55/+o/qBtZgtmrdzFz
jvgZQvCv6xP38+DSSaSE+2L0zPXt2s8bzH89cJGYbpQUSsbhw4exZ/MaJEQE
oqxuFg4fO4m79x+pqLZj//QUb1/F+lWLsXDhIvKO+GTEwVm8eBEWLFyM0xe4
lvHM0YXE/vUnTgfX06O/U8/P39cbgXHZOH7xXnsPf5cYfaWZcYiIiuaOqeTw
MTHRZDSLxR/7TzB/vH5OA7zc/dD623LSAgexY+MyJIT7o6R2Og4ePYHbYlfP
H1MkDi9GAuOfP8CVy5dod+GCRxyaS5cukveXcOf+A+aPH9y+jNEFyYjPHYGr
dNPVv5ARHYhxszfwbmo3Zrqhnb+goICBiGApuOHEhSfm60X6Q9+RV9LpH1zC
IeKobl6/BPevHQNungRunSSOwGFsWL0QJ4hLgRvH8Ih89uj6MVz9Zw/WLP0N
Z4/+iUdXDuEB+XlIfm6d24c/Vv6Oo7vWkF3u70r2vp8cmPyKY8RzXbdsDm4Q
e/7+OeqC3COv3XD//B4c27kaa5f8imsnt+DemR3ks7v/7KARoDM7cJV4l2sW
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
HbEHmNpBKDKziJr8LNTnJSoph91k/UoPwtMLiiPAW/D0HDcCnE5PUVy/vnGx
GMs1ATjbEqg0AvwbZ8k9LDiGz25nKGuIXXuOAP/alTIMVYXhWwTVvxMIF1WY
doZScW0uX2kE+KWZAjwxVywnYP/46SkmYN99YV5OwO5e7Mf57T785ZeP8Ajw
syPpuDiSQukilLCv3qhjFti3b1YqSdhH13IwUe6vZIHRybnLRH+/0E4ssLsq
W2BfPJWLLmKBbXRm7ssCG20sQkZiEuZHJ+WWr5XJGaQkpCErr2l35Dd5VofI
s9q3gfCoXERl9VNBk3N0JJfOwYmsNccrzr2DpHGa4rHiFSy3ZAvNMOpZzK/q
YYlYqkiadCxV4EHGUnFejvqiXFRnxeGmvKSt9lWjmphhd2fLlMyw5xbL0Zzm
jQ/MyJthlHqrdUHYalQyw75FzLAhori8sJ6mqpfjTWLC0+nU37gtP52aCtq5
0XRcmspR9HI8OVeI89MFcpbYv7w4i4mODLz1iRk5GXvuyjDObvbiT4/ydOrt
QWJyjqcpBs2+dKWaGWLfvf3OHkXhdOp/f6aMeRWf7Are13Tqz23moCPHD6d7
c/blVhyszUNWcgoWx5Tdiov8NOrcwnb0K7gV27tPIvREDmLzRpXcigmFE3Am
SuOJ6ifu61bMFdTSdO8xHqezoYaNX3xnUVMcv3hQn2JzWQFz4l9f6hdK2+Zg
HZuifOs+U5TbM4/g2Ql5n+Lbl0uwSdSS1VpfpSnKF9IxWuqLjy+r7FP89m3y
SFWEMnwrTlG+OJ6Bc2Mq+O+38G+vzGG6OxOvf2RSTto+eJNoF2s9+P1PH1Gf
4m+/NI0NohffmFYaovzZS1UYKQ/G9+7uc4jyU6WYr/bHzT7VhyhTR/HLa9lo
zvTHuYH9hah7KukQ5XQs7RGipsokHZhcWNqteoiamGgxuYNwDSlBdM39Q2a5
AhOtqLpbqYRmuTWb1ZKSta95P1Hqh1Iz2l5ZzCYOc2asfNRMlYnDd0cSVc0M
+c6lDEyQZ+HDCypHzb5zp4Y5Qr505UBRsx9/bh5zvVn4ygfG5KTuUe+vPINf
fn6KZYbcnc9+WJkh/3KnmGWG3BsK31dmyAsnM4ltEYAnRlSdOMyJXXMJnTic
TScOK4nd9OAIEmKTUVLRv6/MkBMZ3fCIqOTGDj9Q7Lgmy8fLZhQH5ey0J7MG
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
jW1ia0kJdFaOTuZyUXcasF8k9ltXfTUKq7uZXSf0CbmwGd297L0jjaWIoX0p
yXYFiLqn90CLHLaBWxo8S07tQokc5uHAaHJKIlgdHyB/bwmgRC/cPLT1TcnF
rkF8y1NKwz5C4mvuCyUKnkYCHl3yvV4RxegfO6+GkhpKqkBJ9a579K5+eC4N
lcl+uDf36HYCUwFKuvuCkkzlKN2CpZsfW/rtkydZ9o+2QOVwiG1lwDI87McC
42K+xkeq3kgdRhFlM0yl6SSgoU5oCh6pY4gcBecvspaz3ahfe6a5AM319ayt
mX/xEktF3mnnfE20bW5LXT3rwST1X3uyeV7ELsufgYGJHjQNfeCWT7YXr2sc
5g/bu3QdZg4e5AnWg2PaPE0ykLP37MhFpqdk6xW3h6ZEh3xV8VDSV4ISTQ7q
7pqCrYk2jGwj0MF5kER/a1z66Pa75xL5/bNXl7A+kodPXO/5O+fS8xX4Hu0G
WuaLD0xE7qv/7kcXuW6g3Ojgx5ZLOu9kuu3BJW0u8aZoBcY21uSWW8M5e5kK
spY0/EZZQL7M0N6HybK2oSXc85dZ+E1rDz8TZQeNyFPrjHqxaHtSarWd5f1M
5+T8TDZyfiauxWIGllqycbUzmvFJqmPRFgHF1Z0MgZRRUse2ib0TNER6cMpc
YImWlFtcZjSzBq0F18urYB6G5qbQ1HWGa57U163NRxPXoH/InZ2ikaULYutv
ys/7bEdgdPl9acVlEhEb08EGEn0L1HZtoX/4b4RWH2vFPz1Tj5nGE/jkzrvv
p0p+/5TQanU4Dy/c7nvMaPXzz01itTsRzyznPCxa/eOtIkxXEhPt3XQLTwvA
1fGig3cLX8Bk/xBORBFrsXpo/7SKeHC38AfRSntftBLaOp6549DXEUFkFsDi
WdrSPGuqRSV0QZN8i0iiA5GWLpxTRygOeEPSiEsB4AstKCro7pMrRlBT24Lx
5iKWznhuT2cU1wH2ckcMrnedoGgS8VkG53gf1VRzIdnVMPkKcrJl27By5ZQ9
m7hRFgH0KFyGdUIP7AvW4UZOw5FoSM7kkD1YSdmuCeiROQAdiQYkVpEsC1J2
euT99tFN0NDUZKeorWdClMEzbN6WucL0b/8oQT/1PXA1RB3jO4j0IsqbSB/Z
tYsYlKYnqYSrflq8knoCF9/bVut0uMEPnszAXLU/nplSGVc/eLoOk3WReOn8
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
Sz2SfZVPYj7BhlvaKHXcje6fnNY3AI1KAeuwCoSuhDH2d72TyhhU2QhjyaBs
+MXV08gxl8EGuyiwcw+Fa2Aq6bLZyaR/4w02xTfWtikWLPmqctNos6W8aZoa
35vuVxtGle9+97sPQ5WvfvWr+PWvf/2HhSq6Vajy3g097bZ/h72uyg8zuugQ
p599GLIoBGjRikQNPWJqhqEx00o+DwZ0EVs+dh6eMLPcwldBxFNuS4lIcM08
3T3vZLtGJMFMYwGfkinDxi91uyMKWEJhg2Ch2y2BS3jTEpz8I2g26UfuNadN
rIWptePsBJVdAl+ZM5ZC/M/WnhD+bM0xOIdEQ6m2YJVJGZVAfCEir+dVeLL8
yMLOA1ndt0Vw0RhUHUlXvJf0b1khtrYR+tjBc4gJCoDGygc7Bs+uMkLv2bQg
fiyEEXBDzTEEv/zlL/HlL395DaRZWFjA/v378dJLL/2hIs1IbRReP1yI77/I
FTTq+Sb300GaxkrUV9aw9+AHhjReMoaUeOQVdmJuwxvLSU0zGN/ZRIa/3P5p
VW5jacpkqDooGDeENBJzysgIW3YVWytEAohOhZmZObyLpS3XRbiGJUJrF4Pg
+jOIaL2MQFr3UsMj96BM++UMeTGYqbXSRnCgHHDqjsPK3hZaz3SWmJ0RMyzx
yTUuGTo91EimPtESA504dnf28CUdS/5IF+AUsBXmzsnUBucPxT+zAQozFVxC
iwwAxYuqsMxd1EhOZg8rZ9c9hqjvB1LmpiA1cRGDA8fg6WDOisxSDB24rJY2
sBg+dbXvhpolXpv4tD7/Twmfbty4gfHxcQwNDWFpaWmNTOib3/wmfve73/1h
4ZMt4dP3rpSgM9sPuVvdkR7hiq3+jjg3UYwfsFeXvc5r4dN6JQq6KrPg6+WH
4YEDWJw2bgw8a4zylKiUjYvwTKwg2k5Iw7KdmCTxKfee7i6yCyhonSCTTtMk
yUaGUQJbgKbkKjPoPFJZvXWeOrKB+V2wC0hHYPUJIlc5G9hDZxBU0gOlmRkc
uWd58xnq9PomCytV1oF58Epvh4WNA8ysaKAvExNfJDUw3nHmawQRrZcUAWLf
WWgHLbP73g8V+w3HeG4yc0ZwznNlz/YkXKNy4ZzQRbwBaZAf3ngCTmFJMOe7
vg5uDJjUcOE65E3Cw/KKLxS0vkJL4JXWAnNWvqms/OG5tZKXbkqq1dTYVjNH
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
0m54sL2xQYbdGyswxNWtXL16FRcuXMDOnTsH0a3ExcWhq6trXLPk/hbPXg3u
ar0aXhErpbJXgz5d78cLSwbo1XDr4zwUJTliu5ZeDYOx1NnZiczMTCQlJQ0i
W/niiy9GNbYrMGzvoHN69g5qN0zvoNTo+JfKkqF7B41NltR6B+2o1stOqeod
tEdL76BBYrv+/v6Xn2OQMm3sikamjV1vIj875Y5htbGLV7Sx02BImo302ESY
mVnBg2cbu+lW4Xhjhi9hiIeYctA2dhEGa2PnBYmVGRpko9DGzgYyXyP+bexm
Yq++bexymDZ2H2lpYzeGU3Uf086qmUxn1U5uZ9XhYeSJb7rdIRvFzqqhHg6w
s7YdvLPqXD06q+pqptSps6q+Zkqms6pIj86qurOk6qy6nn9n1f2G6az6sZbO
qiPBkt4NvycyL2iierPvCaxu3036dftu5dnt+8MSeywSG/Pu9h3t6wg7S+vh
dfs2pd2+Uzndvuc7JeOvU1x07/Y9pI7SULLk592+o7ndvhMC4WVJu31znZTq
3b4/G7TbN8tJqUe37yP6d/umTspjG7V3+/7ZwN2+De6cWM51Thxp81c4J7S4
KAd1TjAuSmMsD5syPOcEPxdlYqAzxOYWWpwTWS90TkwfzDnhrnJO1OstpDQx
D4exmR7OiUkK54SbI3zEc9GeH8cyHQ2hnaBOSmo6ei9TQzuhdFJq007UKrQT
Owp1dlJS7UQs1U6s0Fk7waFHqZ3ICLfBKQ3txHtUO1EShUe3do5NYwvVgykc
Rxa4t5eH48gBqQZ2HDnycxx1DeE4IlMkWFLHkX2QpuOIcVLaRGl3HDlghkel
nk5KheNoyhy9HEdFKseRvXbHkWgKVnKclFzHkYqZUw1ujOeoIsRY0+NKNUdx
w9McndKiOapOtEaTNs2RVLvmKFWL5qh3eTxqxq7mSOnUy7RH1VBOvWYtTr1l
Tsz702BOvYpFRsNx6uUutuZQkx5gCW9b7dRIh3Dq2VCnnngQp95SGqSpx2si
lVPPVUen3otqrIZx6gVznXpZ4R6MjvJFTr1+nk69aKe3cKBC06nnicqIWaiK
4ugoVU69s70h/Jx6OWyn3vkdSqfenmwWOp010WPFqac0uWpBp0XqgMpBTK4J
wzW5LjKYyVUWZAlf27nDMLnaw9LGl9ysVWyTqxumU5NrFMvkKh4wuRZqR2fQ
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
jLmlOFyss5OS3kYpi9wgWrCQY24pyJAxTkqxQ7C6kzIitpSxtpjaRlNrizo9
lh5ZjMd1pme1XnY9gyQZFMaJABd7+NlxnJQF0T7wtTZBj9yTIzxak+3JOCk3
ytjellGss0rtsUwjv/DqYMPkuJWF1nWFzpo57j11qj2xI7/3iFrfjlY5IcrJ
GHmhXElY2hAq18xQD1jOmzcgpVRJwkQWYliL/ZkYTl2rN3OOE2ZYh2kyI/LO
V0jC3EoNYKQMxZS5eknCCsng6eskRpCTuSYz2RGejCRMVU9T1+r1yCSM62hz
tshwww0nrT1UPkGV1v6ZndZ+tbAZorrKdCEepS17bCGlJQcbaZAVvMTzBhdS
zp4ziJDSAZYiH3qv/pG5VyfCbL4bplmE0rQBa9Yj9qM2Sie84zyIjVJnbAxQ
VVXZKEUIcbXiYBPmjkDxVKzJ1WKjzHAjUdrfB2yUeu7OG7SgGjx4QZXZ6Wqj
udN1bGNz+3g5Cgg2O5pfqdEmPYCONtqVlLxHm7nOWkcbH8OONnpVUoccbfIi
JGNltBmiiKox2nQVeqAi1REPTxQzhVQGmyMEm5Txhs1YnduEjc7cRqxlbpM9
TuY2+eNubtNd5Mlg8/PxolcJm7GQWnNAmP3kYaTWnIXUms+4S611K4efn1+t
4YfLEW0xnBU4fVTrPaG2RqiO5VHvKYhHjI897K2sB6n3pMF8npX2ek+Eqt6T
JtR7XlK9RxHLOb1qsZwWmMigJA+cMSow6bMSYYmHHRxE4kFXIlAnJd+VCGYk
0HtjuqewEkGAyXARXvooRXis1XEpBlkdlx6bgHlzLHivjptpHcZPSvnC1XGG
2K06HlfHDc3RaxPhjWaCYQSXafMVU06zGpvLtF+uiMXQEL0u6Ya9dZ6KNo6j
kNwewe1CI253HaXtQmMFIh23C+kS0b1yqW4uRH1MYXXq694LdaxsW335SjBe
21aHsab0VYRoT+3olVnHE0SjubhnzEA0IrmF12Ak2lktmFcM0cJntmFa+LxS
EI3MnOh/KoF59vghvr5wDtdu/kie45gDazTLsq8cWEKLOUMm7fasy2XYukPZ
uqcLWw9/uIjUyEDUrt0/Ftkaza15rxxbQk/UlziNUgH29PZlZMaEYPn6w2MT
MKGtlp6Dl6Jy626Ayu2rx9bIVG7/hfn0exzZuQF19fWor69DXV0dKstLEBYa
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
6kg=\
\>"]]
}, Open  ]],

Cell["\<\
The above sketch, which is a little confusing, applies to the answer, and its \
precursor can be found in the Mathematica documentation on the page \
\[OpenCurlyDoubleQuote]Plot Complex Roots\[CloseCurlyDoubleQuote].\
\>", "Text",
 CellChangeTimes->{{3.757269273627274*^9, 3.75726930735966*^9}, {
  3.757269360349831*^9, 3.7572693753157063`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"jj", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "3"], "-", "1", "-", "\[ImaginaryI]"}], "\[Equal]", 
     "0"}], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.75725972616004*^9, 3.7572597367099533`*^9}, {
  3.757259775182729*^9, 3.7572597871082687`*^9}, {3.757266060964419*^9, 
  3.7572660672776003`*^9}, {3.757266097894145*^9, 3.7572660985000553`*^9}, {
  3.757266200007216*^9, 3.757266215900037*^9}, {3.7572667235554132`*^9, 
  3.7572667400729313`*^9}, {3.757266952620195*^9, 3.7572669601318493`*^9}, {
  3.757267215842822*^9, 3.757267221624708*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
      RowBox[{"1", "/", "3"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"1", "/", "3"}]]}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
       RowBox[{"1", "/", "3"}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"2", "/", "3"}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
       RowBox[{"1", "/", "3"}]]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.757258979157652*^9, 3.7572597386960373`*^9, 
  3.757259788597233*^9, 3.757266068988249*^9, 3.757266100330431*^9, 
  3.757266226058271*^9, 3.7572667425186357`*^9, 3.757266960975878*^9, 
  3.757267222349824*^9}]
}, Open  ]],

Cell["\<\
In order to make the equation easier to work with, I cubed both sides.\
\>", "Text",
 CellChangeTimes->{{3.757268175856002*^9, 3.757268202374342*^9}, {
  3.757273434776497*^9, 3.757273439271068*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "/.", "jj"}]], "Input",
 CellChangeTimes->{{3.757267238249804*^9, 3.757267242782836*^9}, {
  3.757267311212101*^9, 3.757267312418247*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
    RowBox[{"1", "/", "3"}]], ",", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], 
      RowBox[{"1", "/", "3"}]]}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
     RowBox[{"1", "/", "3"}]]}], ",", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], 
     RowBox[{"2", "/", "3"}]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
     RowBox[{"1", "/", "3"}]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.757267244075205*^9, 3.757267313787546*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComplexExpand", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "3"], "-", "1", "-", "\[ImaginaryI]"}], "/.", "jj"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.757267325308187*^9, 3.757267362936192*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.757267364200129*^9}]
}, Open  ]],

Cell["\<\
The above cell demonstrates that all of Mathematica's roots work.\
\>", "Text",
 CellChangeTimes->{{3.757268124019638*^9, 3.757268137818645*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mine1", "=", 
  RowBox[{"N", "[", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
    RowBox[{"1", "/", "3"}]], "]"}]}]], "Input",
 CellChangeTimes->{{3.757257516219672*^9, 3.7572575247932673`*^9}, {
  3.757258449977539*^9, 3.757258451895811*^9}}],

Cell[BoxData[
 RowBox[{"1.0842150814913512`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.2905145555072514`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.7572575265883303`*^9, 3.757258453242519*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["\<\
The green cell above matches the text answer for one root, shown by answer \
below, ans1.\
\>", "Text",
 CellChangeTimes->{{3.757268076648017*^9, 3.757268113724106*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ans1", "=", 
  RowBox[{"N", "[", 
   RowBox[{
    RadicalBox["2", "6"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cos", "[", 
       FractionBox["\[Pi]", "12"], "]"}], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"Sin", "[", 
        FractionBox["\[Pi]", "12"], "]"}]}]}], ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.757258370865068*^9, 3.75725838646587*^9}, {
  3.757258850902258*^9, 3.7572588878413982`*^9}}],

Cell[BoxData[
 RowBox[{"1.0842150814913512`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.29051455550725136`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.7572583880480433`*^9, 3.757258889864512*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComplexExpand", "[", 
  RowBox[{
   RowBox[{"\.08", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1.0842150814913512`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.29051455550725136`", " ", "\[ImaginaryI]"}]}], ")"}], 
     "3"]}], "-", "1", "-", "\[ImaginaryI]"}], "]"}]], "Input",
 CellChangeTimes->{{3.757267432375589*^9, 3.757267455889879*^9}, {
   3.757267535813314*^9, 3.757267595623335*^9}, {3.757267658571411*^9, 
   3.757267705519761*^9}, 3.757267771534964*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1.`"}], "+", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1.`"}], "+", 
     RowBox[{"0.9999999999999998`", " ", "\.08"}]}], ")"}]}], "+", 
  RowBox[{"1.0000000000000002`", " ", "\.08"}]}]], "Output",
 CellChangeTimes->{
  3.757267457489573*^9, {3.7572675499486227`*^9, 3.757267597166007*^9}, {
   3.757267679696855*^9, 3.757267707330853*^9}, 3.757267774167338*^9},
 Background->RGBColor[1, 1, 0.85]]
}, Open  ]],

Cell["\<\
In the above yellow cell the text\[CloseCurlyQuote]s first answer, ans1, is \
proved to be a valid root.\
\>", "Text",
 CellChangeTimes->{{3.757268248331118*^9, 3.757268266593988*^9}, {
  3.757268458414962*^9, 3.7572684602615433`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mine2", "=", 
  RowBox[{"N", "[", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], 
      RowBox[{"1", "/", "3"}]]}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
     RowBox[{"1", "/", "3"}]]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.2905145555072516`"}], "-", 
  RowBox[{"1.0842150814913512`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.757259006746975*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["\<\
The green cell above matches a root found by the s.m. in a cyan cell, sm3, \
which does NOT match a text answer.\
\>", "Text",
 CellChangeTimes->{{3.75726827939307*^9, 3.7572682960317307`*^9}, 
   3.75726846971838*^9, {3.757269045027409*^9, 3.757269059751501*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ans2", "=", 
  RowBox[{"N", "[", 
   RowBox[{
    RadicalBox["2", "6"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"9", "\[Pi]"}], "12"], "]"}], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"Sin", "[", 
        FractionBox["\[Pi]", "12"], "]"}]}]}], ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.757258392960096*^9, 3.7572584010493193`*^9}, {
  3.7572589056522427`*^9, 3.7572589173778152`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.7937005259840997`"}], "+", 
  RowBox[{"0.29051455550725136`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.757258403021093*^9, 3.757258919564714*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComplexExpand", "[", 
  RowBox[{
   RowBox[{"\.08", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "0.7937005259840997`"}], "+", 
       RowBox[{"0.29051455550725136`", " ", "\[ImaginaryI]"}]}], ")"}], 
     "3"]}], "-", "1", "-", "\[ImaginaryI]"}], "]"}]], "Input",
 CellChangeTimes->{3.7572678596002703`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1.`"}], "+", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1.`"}], "+", 
     RowBox[{"0.5245190528383288`", " ", "\.08"}]}], ")"}]}], "-", 
  RowBox[{"0.2990381056766579`", " ", "\.08"}]}]], "Output",
 CellChangeTimes->{3.757267861845543*^9},
 Background->RGBColor[0.94, 0.91, 0.88]]
}, Open  ]],

Cell["\<\
In the above brown cell a text answer, ans2, fails to prove as root.\
\>", "Text",
 CellChangeTimes->{{3.757268306367298*^9, 3.7572683313497343`*^9}, {
  3.757268474564458*^9, 3.757268477132465*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sm2", "=", 
  RowBox[{"N", "[", 
   RowBox[{
    RadicalBox["2", "6"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"9", "\[Pi]"}], "12"], "]"}], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"9", "\[Pi]"}], "12"], "]"}]}]}], ")"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.757268725618547*^9, 3.75726880236819*^9}},
 Background->RGBColor[0.9, 1, 1]],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.7937005259840998`"}], "+", 
  RowBox[{"0.7937005259840998`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.757268803223318*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mine3", "=", 
  RowBox[{"N", "[", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], 
     RowBox[{"2", "/", "3"}]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
     RowBox[{"1", "/", "3"}]]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.757259063500636*^9, 3.757259087715835*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.7937005259840995`"}], "+", 
  RowBox[{"0.7937005259840999`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.757259089143169*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["\<\
The green cell above matches a root found by the s.m. in a cyan cell, sm2, \
which does NOT match a text answer.\
\>", "Text",
 CellChangeTimes->{{3.7572688715886393`*^9, 3.757268911600787*^9}, {
  3.757269011683958*^9, 3.757269013018074*^9}, {3.757269065999111*^9, 
  3.757269068030971*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ans3", "=", 
  RowBox[{"N", "[", 
   RowBox[{
    RadicalBox["2", "6"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"17", "\[Pi]"}], "12"], "]"}], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"Sin", "[", 
        FractionBox["\[Pi]", "12"], "]"}]}]}], ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.757258405352415*^9, 3.7572584127931147`*^9}, {
  3.757258927441654*^9, 3.757258932551796*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.2905145555072514`"}], "+", 
  RowBox[{"0.2905145555072514`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.7572584139541616`*^9, 3.757258934933385*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComplexExpand", "[", 
  RowBox[{
   RowBox[{"\.08", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "0.2905145555072514`"}], "+", 
       RowBox[{"0.2905145555072514`", " ", "\[ImaginaryI]"}]}], ")"}], "3"]}],
    "-", "1", "-", "\[ImaginaryI]"}], "]"}]], "Input",
 CellChangeTimes->{3.75726798211185*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1.`"}], "+", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1.`"}], "+", 
     RowBox[{"0.04903810567665796`", " ", "\.08"}]}], ")"}]}], "+", 
  RowBox[{"0.04903810567665796`", " ", "\.08"}]}]], "Output",
 CellChangeTimes->{3.757267984031959*^9},
 Background->RGBColor[0.94, 0.91, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sm3", "=", 
  RowBox[{"N", "[", 
   RowBox[{
    RadicalBox["2", "6"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"17", "\[Pi]"}], "12"], "]"}], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"17", "\[Pi]"}], "12"], "]"}]}]}], ")"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.757268944408511*^9, 3.757268955398426*^9}},
 Background->RGBColor[0.9, 1, 1]],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.29051455550725136`"}], "-", 
  RowBox[{"1.0842150814913512`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.757268956877696*^9}]
}, Open  ]],

Cell["\<\
In the above brown cell a text answer, ans3, fails to prove as root. The \
answers of the s.m. in this case show that the text answer omits a vital \
\[OpenCurlyDoubleQuote]k\[CloseCurlyDoubleQuote] factor. For example, where \
\[OpenCurlyQuote]17\[CloseCurlyQuote] shows in two places in the cyan cell \
above, it applies to only one place in the text answer.\
\>", "Text",
 CellChangeTimes->{{3.757268346464052*^9, 3.757268351380218*^9}, {
  3.757268503610799*^9, 3.7572685664308434`*^9}, {3.757269090157752*^9, 
  3.7572691629612293`*^9}, {3.7572756069392653`*^9, 3.757275609593848*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dd", "=", 
   RowBox[{"Abs", "[", 
    RowBox[{"ComplexExpand", "[", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
      RowBox[{"1", "/", "3"}]], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.757269522187022*^9, 3.757269570729802*^9}, 
   3.757270135199975*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ee", "=", 
   RowBox[{"Arg", "[", 
    RowBox[{"ComplexExpand", "[", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
      RowBox[{"1", "/", "3"}]], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.757269583439797*^9, 3.75726959866288*^9}, {
  3.7572701412477913`*^9, 3.7572701438953238`*^9}, {3.757270508050376*^9, 
  3.7572705211211576`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"cc", "=", 
   RowBox[{"FromPolarCoordinates", "[", 
    RowBox[{"{", 
     RowBox[{"dd", ",", "ee"}], "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.757269705695745*^9, 3.757269759277622*^9}, {
   3.757269852089862*^9, 3.757269874975079*^9}, 3.757270160726619*^9, {
   3.7572705548406553`*^9, 3.7572705666799583`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dd2", "=", 
   RowBox[{"Abs", "[", 
    RowBox[{"ComplexExpand", "[", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"1", "/", "3"}]]}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
       RowBox[{"1", "/", "3"}]]}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.757270645924663*^9, 3.757270667008128*^9}, 
   3.757270803440694*^9, 3.757270916259952*^9, {3.7572721197907057`*^9, 
   3.7572721248682137`*^9}, {3.757272216640712*^9, 3.75727222669461*^9}, 
   3.757272527782474*^9, 3.757273374850562*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ee2", "=", 
   RowBox[{"Arg", "[", 
    RowBox[{"ComplexExpand", "[", " ", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"1", "/", "3"}]]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
       RowBox[{"1", "/", "3"}]]}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.757270675761498*^9, 3.757270722856275*^9, 3.7572708101046247`*^9, 
   3.75727092005002*^9, {3.75727212998046*^9, 3.7572721329402657`*^9}, {
   3.75727222124858*^9, 3.757272234134272*^9}, 3.7572725316048317`*^9, {
   3.757272640918625*^9, 3.757272643158311*^9}, 3.757272811119358*^9, 
   3.7572733674542522`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"cc2", "=", 
   RowBox[{"FromPolarCoordinates", "[", 
    RowBox[{"{", 
     RowBox[{"dd2", ",", "ee2"}], "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.757271056763132*^9, 3.7572710635228767`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dd3", "=", 
   RowBox[{"Abs", "[", 
    RowBox[{"ComplexExpand", "[", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"2", "/", "3"}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
       RowBox[{"1", "/", "3"}]]}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.757270948489787*^9, 3.75727094872024*^9}, 
   3.757270978801405*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"cc3", "=", 
   RowBox[{"FromPolarCoordinates", "[", 
    RowBox[{"{", 
     RowBox[{"dd3", ",", "ee3"}], "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.757271070738392*^9, 3.7572710775780067`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ee3", "=", 
   RowBox[{"Arg", "[", 
    RowBox[{"ComplexExpand", "[", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"2", "/", "3"}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
       RowBox[{"1", "/", "3"}]]}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7572709511359577`*^9, 3.757270951335986*^9}, 
   3.7572709830035133`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"FromPolarCoordinates", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"dd", ",", "ee"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"dd2", ",", "ee2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"dd3", ",", "ee3"}], "}"}]}], "}"}], "]"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1.05"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Re", ",", "I"}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.1"}], ",", "1.1"}], "}"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"cc", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"cc", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<r=dd,\[Theta]=ee\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0.8", ",", "0.4"}], "}"}]}], "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"cc3", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"cc3", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<r=dd3,\[Theta]=ee3\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.4"}], ",", "0.85"}], "}"}]}], "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"cc2", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"cc2", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<r=dd2,\[Theta]=ee2\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0.1", ",", 
          RowBox[{"-", "1.05"}]}], "}"}]}], "]"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.757269664589342*^9, 3.7572696713791122`*^9}, {
  3.757269823747982*^9, 3.757269829129939*^9}, {3.757269910864802*^9, 
  3.757269914269318*^9}, {3.7572699713540497`*^9, 3.757269985488968*^9}, {
  3.757270019377016*^9, 3.757270111801607*^9}, {3.757270365299054*^9, 
  3.757270391449188*^9}, {3.757270457541465*^9, 3.757270485083294*^9}, {
  3.757270735342635*^9, 3.757270769067006*^9}, {3.757270861583638*^9, 
  3.7572708628136597`*^9}, {3.757270898579527*^9, 3.7572709018688307`*^9}, {
  3.757271012935919*^9, 3.757271021452227*^9}, {3.757271185116576*^9, 
  3.7572712488469467`*^9}, {3.757271291925156*^9, 3.757271322211162*^9}, {
  3.757272150276381*^9, 3.7572721566366463`*^9}, {3.757272313659894*^9, 
  3.7572724966795797`*^9}, {3.7572727017490463`*^9, 3.757272783831912*^9}, {
  3.757272837757069*^9, 3.75727305270251*^9}, {3.7572730968067293`*^9, 
  3.75727330701569*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1.0842150814913512`, 
      0.29051455550725147`}, {-0.29051455550725147`, -1.0842150814913512`}, \
{-0.7937005259840998, 0.7937005259840998}}]}, {}}, {}},
  AspectRatio->1.05,
  Axes->{True, True},
  AxesLabel->{
    FormBox["Re", TraditionalForm], 
    FormBox["\[ImaginaryI]", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    RGBColor[1, 0, 0], 
    LineBox[
     NCache[{{0, 
       0}, {((1 + (Rational[-1, 2] 2^Rational[-1, 3] + 
              Rational[1, 2] 2^Rational[-1, 3] 3^Rational[1, 2])^2 (
              Rational[1, 2] 2^Rational[-1, 3] + 
              Rational[1, 2] 2^Rational[-1, 3] 3^Rational[1, 2])^(-2))^(-1) ((
            Rational[-1, 2] 2^Rational[-1, 3] + 
            Rational[1, 2] 2^Rational[-1, 3] 3^Rational[1, 2])^2 + (
            Rational[1, 2] 2^Rational[-1, 3] + 
            Rational[1, 2] 2^Rational[-1, 3] 3^Rational[1, 2])^2))^
        Rational[1, 2], (Rational[-1, 2] 2^Rational[-1, 3] + 
         Rational[1, 2] 2^Rational[-1, 3] 3^Rational[1, 2]) (
          Rational[1, 2] 2^Rational[-1, 3] + 
          Rational[1, 2] 2^Rational[-1, 3] 
           3^Rational[1, 2])^(-1) ((
            1 + (Rational[-1, 2] 2^Rational[-1, 3] + 
               Rational[1, 2] 2^Rational[-1, 3] 3^Rational[1, 2])^2 (
               Rational[1, 2] 2^Rational[-1, 3] + 
               Rational[1, 2] 2^Rational[-1, 3] 
                3^Rational[1, 2])^(-2))^(-1) ((
             Rational[-1, 2] 2^Rational[-1, 3] + 
             Rational[1, 2] 2^Rational[-1, 3] 3^Rational[1, 2])^2 + (
             Rational[1, 2] 2^Rational[-1, 3] + 
             Rational[1, 2] 2^Rational[-1, 3] 3^Rational[1, 2])^2))^
         Rational[1, 2]}}, {{0, 0}, {1.0842150814913514`, 
       0.29051455550725147`}}]], 
    InsetBox[
     FormBox["\"r=dd,\[Theta]=ee\"", TraditionalForm], {0.8, 0.4}], 
    LineBox[
     NCache[{{0, 0}, {-2^Rational[-1, 3], 2^Rational[-1, 3]}}, {{0, 
       0}, {-0.7937005259840998, 0.7937005259840998}}]], 
    InsetBox[
     FormBox["\"r=dd3,\[Theta]=ee3\"", TraditionalForm], {-0.4, 0.85}], 
    LineBox[
     NCache[{{0, 
       0}, {-((1 + (Rational[-1, 2] 2^Rational[-1, 3] + 
               Rational[-1, 2] 2^Rational[-1, 3] 3^Rational[1, 2])^2 (
               Rational[1, 2] 2^Rational[-1, 3] + 
               Rational[-1, 2] 2^Rational[-1, 3] 
                3^Rational[1, 2])^(-2))^(-1) ((
             Rational[-1, 2] 2^Rational[-1, 3] + 
             Rational[-1, 2] 2^Rational[-1, 3] 3^Rational[1, 2])^2 + (
             Rational[1, 2] 2^Rational[-1, 3] + 
             Rational[-1, 2] 2^Rational[-1, 3] 3^Rational[1, 2])^2))^
         Rational[1, 2], -(Rational[-1, 2] 2^Rational[-1, 3] + 
         Rational[-1, 2] 2^Rational[-1, 3] 3^Rational[1, 2]) (
          Rational[1, 2] 2^Rational[-1, 3] + 
          Rational[-1, 2] 2^Rational[-1, 3] 
           3^Rational[1, 2])^(-1) ((
            1 + (Rational[-1, 2] 2^Rational[-1, 3] + 
               Rational[-1, 2] 2^Rational[-1, 3] 3^Rational[1, 2])^2 (
               Rational[1, 2] 2^Rational[-1, 3] + 
               Rational[-1, 2] 2^Rational[-1, 3] 
                3^Rational[1, 2])^(-2))^(-1) ((
             Rational[-1, 2] 2^Rational[-1, 3] + 
             Rational[-1, 2] 2^Rational[-1, 3] 3^Rational[1, 2])^2 + (
             Rational[1, 2] 2^Rational[-1, 3] + 
             Rational[-1, 2] 2^Rational[-1, 3] 3^Rational[1, 2])^2))^
         Rational[1, 2]}}, {{0, 
       0}, {-0.2905145555072514, -1.084215081491351}}]], 
    InsetBox[
     FormBox["\"r=dd2,\[Theta]=ee2\"", TraditionalForm], {0.1, -1.05}]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{},
  PlotRange->{{-0.7937005259840998, 1.0842150814913512`}, {-1.1, 1.1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.757269425831702*^9, 3.757269618077962*^9, 3.75726967282228*^9, 
   3.757269829926166*^9, 3.7572698823905687`*^9, 3.757269915452723*^9, {
   3.7572699745904303`*^9, 3.757269986430162*^9}, {3.757270029084881*^9, 
   3.7572701125065804`*^9}, {3.7572703663824453`*^9, 
   3.7572703924162693`*^9}, {3.7572704605402184`*^9, 
   3.7572704862745523`*^9}, {3.7572707505312033`*^9, 3.757270769875474*^9}, 
   3.757270902803928*^9, 3.757271022578845*^9, 3.75727110252461*^9, 
   3.757271193342595*^9, {3.757271230370281*^9, 3.7572712507365837`*^9}, {
   3.7572712987125998`*^9, 3.7572713238843737`*^9}, 3.7572721578460712`*^9, 
   3.757272266291642*^9, {3.757272330269684*^9, 3.757272497746537*^9}, {
   3.7572726534170103`*^9, 3.7572726641258993`*^9}, {3.757272709461256*^9, 
   3.7572727849541283`*^9}, {3.7572728178855257`*^9, 3.757272875759172*^9}, {
   3.757272913852845*^9, 3.757273053786676*^9}, {3.75727310578214*^9, 
   3.7572733080089293`*^9}}]
}, Open  ]],

Cell["The above sketch resembles the one in the s.m.", "Text",
 CellChangeTimes->{{3.757273333782084*^9, 3.75727334238056*^9}}],

Cell[BoxData[
 RowBox[{"23.", "  ", 
  RadicalBox["216", "3"]}]], "Text",
 CellChangeTimes->{{3.75717245572367*^9, 3.7571724656650257`*^9}, 
   3.7571726695873632`*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"jj", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "3"], "-", "216"}], "\[Equal]", "0"}], ",", "x"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.757273624549531*^9, 3.757273628108083*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "6"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"1", "/", "3"}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"6", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"2", "/", "3"}]]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.757273630865039*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "/.", "jj"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"6", ",", 
   RowBox[{
    RowBox[{"-", "6"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], 
     RowBox[{"1", "/", "3"}]]}], ",", 
   RowBox[{"6", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], 
     RowBox[{"2", "/", "3"}]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.757273669144558*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComplexExpand", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "3"], "-", "216"}], "/.", "jj"}], "]"}]], "Input",
 CellChangeTimes->{{3.757273733047817*^9, 3.757273741349288*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.757273693889707*^9, 3.7572737428343773`*^9}]
}, Open  ]],

Cell["\<\
The above cell demonstrates that all of Mathematica\[CloseCurlyQuote]s roots \
work.\
\>", "Text",
 CellChangeTimes->{3.7572738576008997`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComplexExpand", "[", 
  RowBox[{
   RowBox[{"-", "6"}], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], 
    RowBox[{"1", "/", "3"}]]}], "]"}]], "Input",
 CellChangeTimes->{{3.757273947314249*^9, 3.7572739582992897`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "3"}], "-", 
  RowBox[{"3", " ", "\[ImaginaryI]", " ", 
   SqrtBox["3"]}]}]], "Output",
 CellChangeTimes->{3.7572739597344017`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComplexExpand", "[", 
  RowBox[{"6", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], 
    RowBox[{"2", "/", "3"}]]}], "]"}]], "Input",
 CellChangeTimes->{{3.757274559510687*^9, 3.7572745612530527`*^9}, 
   3.757274702518791*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "3"}], "+", 
  RowBox[{"3", " ", "\[ImaginaryI]", " ", 
   SqrtBox["3"]}]}]], "Output",
 CellChangeTimes->{3.757274562719071*^9, 3.757274703689555*^9}]
}, Open  ]],

Cell["\<\
The roots in the green cell above match the answer in the text.\
\>", "Text",
 CellChangeTimes->{{3.757274721308481*^9, 3.7572747492416553`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dd", "=", 
   RowBox[{"Abs", "[", 
    RowBox[{"ComplexExpand", "[", "6", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ee", "=", 
   RowBox[{"Arg", "[", 
    RowBox[{"ComplexExpand", "[", "6", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cc", "=", 
   RowBox[{"FromPolarCoordinates", "[", 
    RowBox[{"{", 
     RowBox[{"dd", ",", "ee"}], "}"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7572748430457277`*^9, 3.757274876955367*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dd2", "=", 
   RowBox[{"Abs", "[", 
    RowBox[{"ComplexExpand", "[", 
     RowBox[{
      RowBox[{"-", "6"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"1", "/", "3"}]]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ee2", "=", 
   RowBox[{"Arg", "[", 
    RowBox[{"ComplexExpand", "[", 
     RowBox[{
      RowBox[{"-", "6"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"1", "/", "3"}]]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cc2", "=", 
   RowBox[{"FromPolarCoordinates", "[", 
    RowBox[{"{", 
     RowBox[{"dd2", ",", "ee2"}], "}"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7572749098994427`*^9, 3.757274957951001*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dd3", "=", 
   RowBox[{"Abs", "[", 
    RowBox[{"ComplexExpand", "[", 
     RowBox[{"6", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"2", "/", "3"}]]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ee3", "=", 
   RowBox[{"Arg", "[", 
    RowBox[{"ComplexExpand", "[", 
     RowBox[{"6", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"2", "/", "3"}]]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cc3", "=", 
   RowBox[{"FromPolarCoordinates", "[", 
    RowBox[{"{", 
     RowBox[{"dd3", ",", "ee3"}], "}"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7572749321062117`*^9, 3.757274961742755*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"FromPolarCoordinates", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"dd", ",", "ee"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"dd2", ",", "ee2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"dd3", ",", "ee3"}], "}"}]}], "}"}], "]"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1.05"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Re", ",", "I"}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "6"}], ",", "6"}], "}"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"cc", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"cc", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<r=dd,\[Theta]=ee\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"5", ",", "0.4"}], "}"}]}], "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"cc3", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"cc3", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<r=dd3,\[Theta]=ee3\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.1"}], ",", "5"}], "}"}]}], "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"cc2", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"cc2", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<r=dd2,\[Theta]=ee2\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.1"}], ",", 
          RowBox[{"-", "5"}]}], "}"}]}], "]"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.757275036710548*^9, 3.757275150289898*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{6., 0.}, {-3., -5.196152422706632}, {-3., 
      5.196152422706632}}]}, {}}, {}},
  AspectRatio->1.05,
  Axes->{True, True},
  AxesLabel->{
    FormBox["Re", TraditionalForm], 
    FormBox["\[ImaginaryI]", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    RGBColor[1, 0, 0], 
    LineBox[{{0, 0}, {6, 0}}], 
    InsetBox[
     FormBox["\"r=dd,\[Theta]=ee\"", TraditionalForm], {5, 0.4}], 
    LineBox[
     NCache[{{0, 0}, {-3, 3 3^Rational[1, 2]}}, {{0, 
       0}, {-3, 5.196152422706632}}]], 
    InsetBox[
     FormBox["\"r=dd3,\[Theta]=ee3\"", TraditionalForm], {-1.1, 5}], 
    LineBox[
     NCache[{{0, 0}, {-3, (-3) 3^Rational[1, 2]}}, {{0, 
       0}, {-3, -5.196152422706632}}]], 
    InsetBox[
     FormBox["\"r=dd2,\[Theta]=ee2\"", TraditionalForm], {-1.1, -5}]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{},
  PlotRange->{{-3., 6.}, {-6, 6}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.757274996552178*^9, {3.757275044288426*^9, 3.757275151270952*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"25.", "  ", 
  RadicalBox["\[ImaginaryI]", "4"]}]], "Text",
 CellChangeTimes->{{3.757172467923503*^9, 3.757172492079932*^9}, 
   3.7571726798831043`*^9, {3.75727611022582*^9, 3.7572761103691063`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"jj", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "4"], "-", "\[ImaginaryI]"}], "\[Equal]", "0"}], 
    ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.757275306149745*^9, 3.757275314611742*^9}, {
  3.757276116897656*^9, 3.757276117656975*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"1", "/", "8"}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], 
      RowBox[{"1", "/", "8"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"5", "/", "8"}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], 
      RowBox[{"5", "/", "8"}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.75727532208508*^9, 3.757276119021008*^9, 
  3.7572786508588953`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "/.", "jj"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], 
     RowBox[{"1", "/", "8"}]]}], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], 
    RowBox[{"1", "/", "8"}]], ",", 
   RowBox[{"-", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], 
     RowBox[{"5", "/", "8"}]]}], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], 
    RowBox[{"5", "/", "8"}]]}], "}"}]], "Output",
 CellChangeTimes->{3.757275351801955*^9, 3.757276123620805*^9, 
  3.7572786537862453`*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComplexExpand", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "4"], "-", "\[ImaginaryI]"}], "/.", "jj"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.757275386179399*^9, 3.757275393177384*^9}, {
  3.757276133801613*^9, 3.757276134336315*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.7572753771652803`*^9, 3.757275395175563*^9}, 
   3.757276135613427*^9, 3.757278656241316*^9}]
}, Open  ]],

Cell["\<\
The above cell demonstrates that all of Mathematica\[CloseCurlyQuote]s roots \
work.\
\>", "Text",
 CellChangeTimes->{3.757275412970007*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"hre", "[", "k_", "]"}], "=", 
  RowBox[{
   RowBox[{"Cos", "[", 
    RowBox[{
     FractionBox["\[Pi]", "8"], "+", 
     FractionBox[
      RowBox[{"k", " ", "\[Pi]"}], "2"]}], "]"}], "+", 
   RowBox[{"\[ImaginaryI]", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{
      FractionBox["\[Pi]", "8"], "+", 
      FractionBox[
       RowBox[{"k", " ", "\[Pi]"}], "2"]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7572758603266582`*^9, 3.7572759348157063`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cos", "[", 
   RowBox[{
    FractionBox["\[Pi]", "8"], "+", 
    FractionBox[
     RowBox[{"k", " ", "\[Pi]"}], "2"]}], "]"}], "+", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{
     FractionBox["\[Pi]", "8"], "+", 
     FractionBox[
      RowBox[{"k", " ", "\[Pi]"}], "2"]}], "]"}]}]}]], "Input",
 CellChangeTimes->{3.757276154280352*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tab", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"hre", "[", "k", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "0", ",", "3"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.757275944343622*^9, 3.7572759846775103`*^9}, {
  3.757276181624473*^9, 3.757276182918747*^9}, {3.75727721607799*^9, 
  3.757277219315881*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"Cos", "[", 
     FractionBox["\[Pi]", "8"], "]"}], "+", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"Sin", "[", 
      FractionBox["\[Pi]", "8"], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"Cos", "[", 
      FractionBox["\[Pi]", "8"], "]"}]}], "-", 
    RowBox[{"Sin", "[", 
     FractionBox["\[Pi]", "8"], "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Cos", "[", 
      FractionBox["\[Pi]", "8"], "]"}]}], "-", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"Sin", "[", 
      FractionBox["\[Pi]", "8"], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", 
     RowBox[{"Cos", "[", 
      FractionBox["\[Pi]", "8"], "]"}]}], "+", 
    RowBox[{"Sin", "[", 
     FractionBox["\[Pi]", "8"], "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7572759683999453`*^9, 3.757275985389143*^9}, {
   3.757276168010076*^9, 3.757276183910489*^9}, 3.757277220074815*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"ComplexExpand", "[", 
     RowBox[{
      RowBox[{
       SuperscriptBox["k", "4"], "-", "\[ImaginaryI]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox["\[Pi]", "8"], "]"}], "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"Sin", "[", 
             FractionBox["\[Pi]", "8"], "]"}]}]}], ",", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"Cos", "[", 
             FractionBox["\[Pi]", "8"], "]"}]}], "-", 
           RowBox[{"Sin", "[", 
            FractionBox["\[Pi]", "8"], "]"}]}], ",", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Cos", "[", 
             FractionBox["\[Pi]", "8"], "]"}]}], "-", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"Sin", "[", 
             FractionBox["\[Pi]", "8"], "]"}]}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", 
            RowBox[{"Cos", "[", 
             FractionBox["\[Pi]", "8"], "]"}]}], "+", 
           RowBox[{"Sin", "[", 
            FractionBox["\[Pi]", "8"], "]"}]}]}], "}"}]}], "}"}]}], "]"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          FractionBox["\[Pi]", "8"], "]"}], "+", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"Sin", "[", 
           FractionBox["\[Pi]", "8"], "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"Cos", "[", 
           FractionBox["\[Pi]", "8"], "]"}]}], "-", 
         RowBox[{"Sin", "[", 
          FractionBox["\[Pi]", "8"], "]"}]}], ",", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Cos", "[", 
           FractionBox["\[Pi]", "8"], "]"}]}], "-", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"Sin", "[", 
           FractionBox["\[Pi]", "8"], "]"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", 
          RowBox[{"Cos", "[", 
           FractionBox["\[Pi]", "8"], "]"}]}], "+", 
         RowBox[{"Sin", "[", 
          FractionBox["\[Pi]", "8"], "]"}]}]}], "}"}]}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.757276271021123*^9, 3.757276335513528*^9}, {
   3.7572763675529003`*^9, 3.7572764089289618`*^9}, {3.7572764398398113`*^9, 
   3.757276447821718*^9}, {3.7572764790945463`*^9, 3.7572765558745003`*^9}, {
   3.757276594002975*^9, 3.757276595121047*^9}, {3.7572768436020393`*^9, 
   3.757276914966528*^9}, {3.75727695027746*^9, 3.757276953613185*^9}, 
   3.7572770004213057`*^9, {3.7572770714911327`*^9, 3.7572770730263844`*^9}, {
   3.7572773581373663`*^9, 3.75727741170358*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.757277002898087*^9, 3.757277074458302*^9, 
  3.757277379669716*^9, 3.757277412218443*^9}]
}, Open  ]],

Cell["\<\
The above cell demonstrates that all of the text\[CloseCurlyQuote]s roots \
work. According to the Rouch\[EAcute] theorem there should be exactly four \
roots, so these roots must be the same as Mathematica's, right? To \
demonstrate, I will convert one of them:\
\>", "Text",
 CellChangeTimes->{{3.7572774405192547`*^9, 3.757277450499998*^9}, {
  3.757277600870936*^9, 3.757277633510049*^9}, {3.757288227887582*^9, 
  3.757288232108637*^9}, {3.757288283220694*^9, 3.757288328929337*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TrigToExp", "[", 
  RowBox[{
   RowBox[{"Cos", "[", 
    FractionBox["\[Pi]", "8"], "]"}], "+", 
   RowBox[{"\[ImaginaryI]", " ", 
    RowBox[{"Sin", "[", 
     FractionBox["\[Pi]", "8"], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.757277530066935*^9, 3.757277562210237*^9}}],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "8"]]], "Output",
 CellChangeTimes->{{3.757277536252695*^9, 3.757277563759569*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.7572775799343452`*^9, 3.757277583889165*^9}}],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   RowBox[{"-", "1"}], ")"}], 
  RowBox[{"1", "/", "8"}]]], "Output",
 CellChangeTimes->{3.757277584544279*^9}]
}, Open  ]],

Cell["\<\
On the basis of the above there is green cell above, though the format of \
individual answers is not exactly like the answers in the text.\
\>", "Text",
 CellChangeTimes->{{3.757288661423012*^9, 3.7572887068928013`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dd", "=", 
   RowBox[{"Abs", "[", 
    RowBox[{"ComplexExpand", "[", 
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"1", "/", "8"}]]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ee", "=", 
   RowBox[{"Arg", "[", 
    RowBox[{"ComplexExpand", "[", 
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"1", "/", "8"}]]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cc", "=", 
   RowBox[{"FromPolarCoordinates", "[", 
    RowBox[{"{", 
     RowBox[{"dd", ",", "ee"}], "}"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.757278444086458*^9, 3.757278446486136*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dd2", "=", 
   RowBox[{"Abs", "[", 
    RowBox[{"ComplexExpand", "[", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], 
      RowBox[{"1", "/", "8"}]], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ee2", "=", 
   RowBox[{"Arg", "[", 
    RowBox[{"ComplexExpand", "[", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], 
      RowBox[{"1", "/", "8"}]], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cc2", "=", 
   RowBox[{"FromPolarCoordinates", "[", 
    RowBox[{"{", 
     RowBox[{"dd2", ",", "ee2"}], "}"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.757278474021387*^9, 3.757278477996849*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"N", "::", "meprec"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Internal precision limit $MaxExtraPrecision = \
\[NoBreak]\\!\\(\\*RowBox[{\\\"50.`\\\"}]\\)\[NoBreak] reached while \
evaluating \[NoBreak]\\!\\(\\*RowBox[{\\\"Log\\\", \\\"[\\\", \
RowBox[{SuperscriptBox[RowBox[{\\\"Cos\\\", \\\"[\\\", \
FractionBox[\\\"\[Pi]\\\", \\\"8\\\"], \\\"]\\\"}], \\\"2\\\"], \\\"+\\\", \
SuperscriptBox[RowBox[{\\\"Sin\\\", \\\"[\\\", FractionBox[\\\"\[Pi]\\\", \
\\\"8\\\"], \\\"]\\\"}], \\\"2\\\"]}], \\\"]\\\"}]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/N\\\", ButtonNote -> \
\\\"N::meprec\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.757278667463007*^9, 3.757278918660651*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dd3", "=", 
   RowBox[{"Abs", "[", 
    RowBox[{"ComplexExpand", "[", 
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"5", "/", "8"}]]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ee3", "=", 
   RowBox[{"Arg", "[", 
    RowBox[{"ComplexExpand", "[", 
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"5", "/", "8"}]]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cc3", "=", 
   RowBox[{"FromPolarCoordinates", "[", 
    RowBox[{"{", 
     RowBox[{"dd3", ",", "ee3"}], "}"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7572784995804167`*^9, 3.757278503748283*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"N", "::", "meprec"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Internal precision limit $MaxExtraPrecision = \
\[NoBreak]\\!\\(\\*RowBox[{\\\"50.`\\\"}]\\)\[NoBreak] reached while \
evaluating \[NoBreak]\\!\\(\\*RowBox[{\\\"Log\\\", \\\"[\\\", \
RowBox[{SuperscriptBox[RowBox[{\\\"Cos\\\", \\\"[\\\", \
FractionBox[\\\"\[Pi]\\\", \\\"8\\\"], \\\"]\\\"}], \\\"2\\\"], \\\"+\\\", \
SuperscriptBox[RowBox[{\\\"Sin\\\", \\\"[\\\", FractionBox[\\\"\[Pi]\\\", \
\\\"8\\\"], \\\"]\\\"}], \\\"2\\\"]}], \\\"]\\\"}]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/N\\\", ButtonNote -> \
\\\"N::meprec\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7572786703235683`*^9, 3.7572789213964453`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dd4", "=", 
   RowBox[{"Abs", "[", 
    RowBox[{"ComplexExpand", "[", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], 
      RowBox[{"5", "/", "8"}]], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ee4", "=", 
   RowBox[{"Arg", "[", 
    RowBox[{"ComplexExpand", "[", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], 
      RowBox[{"5", "/", "8"}]], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cc4", "=", 
   RowBox[{"FromPolarCoordinates", "[", 
    RowBox[{"{", 
     RowBox[{"dd4", ",", "ee4"}], "}"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.757278520642077*^9, 3.757278559610265*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"FromPolarCoordinates", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"dd", ",", "ee"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"dd2", ",", "ee2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"dd3", ",", "ee3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"dd4", ",", "ee4"}], "}"}]}], "}"}], "]"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1.1"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Re", ",", "I"}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.2"}], ",", "1.2"}], "}"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"cc", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"cc", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<r=dd,\[Theta]=ee\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.7"}], ",", 
          RowBox[{"-", "0.4"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"cc3", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"cc3", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<r=dd3,\[Theta]=ee3\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0.6", ",", 
          RowBox[{"-", "0.85"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"cc4", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"cc4", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<r=dd4,\[Theta]=ee4\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.6"}], ",", "0.85"}], "}"}]}], "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"cc2", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"cc2", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<r=dd2,\[Theta]=ee2\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0.7", ",", "0.45"}], "}"}]}], "]"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.757278718995864*^9, 3.757278738010707*^9}, {
  3.757278769034519*^9, 3.757278770208877*^9}, {3.75727881781577*^9, 
  3.7572788234071283`*^9}, {3.757278951998035*^9, 3.7572789602664757`*^9}, {
  3.7572790165702744`*^9, 3.757279020880666*^9}, {3.757279054774411*^9, 
  3.7572791719793262`*^9}, {3.757279251817284*^9, 3.757279581110448*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{-0.9238795325112867, -0.3826834323650898}, {
      0.9238795325112867, 0.3826834323650898}, {
      0.3826834323650898, -0.9238795325112867}, {-0.3826834323650898, 
      0.9238795325112867}}]}, {}}, {}},
  AspectRatio->1.1,
  Axes->{True, True},
  AxesLabel->{
    FormBox["Re", TraditionalForm], 
    FormBox["\[ImaginaryI]", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    RGBColor[1, 0, 0], 
    LineBox[
     NCache[{{0, 
       0}, {-Cos[
         Rational[1, 8] Pi] (Cos[Rational[1, 8] Pi]^2 + 
          Sin[Rational[1, 8] Pi]^2)^Rational[1, 2], -
        Sin[Rational[1, 8] Pi] (Cos[Rational[1, 8] Pi]^2 + 
          Sin[Rational[1, 8] Pi]^2)^Rational[1, 2]}}, {{0, 
       0}, {-0.9238795325112867, -0.3826834323650898}}]], 
    InsetBox[
     FormBox["\"r=dd,\[Theta]=ee\"", TraditionalForm], {-0.7, -0.4}], 
    LineBox[
     NCache[{{0, 0}, {
       Sin[Rational[1, 8] Pi] (Cos[Rational[1, 8] Pi]^2 + 
          Sin[Rational[1, 8] Pi]^2)^Rational[1, 2], -
        Cos[Rational[1, 8] Pi] (Cos[Rational[1, 8] Pi]^2 + 
          Sin[Rational[1, 8] Pi]^2)^Rational[1, 2]}}, {{0, 0}, {
       0.3826834323650898, -0.9238795325112867}}]], 
    InsetBox[
     FormBox["\"r=dd3,\[Theta]=ee3\"", TraditionalForm], {0.6, -0.85}], 
    LineBox[
     NCache[{{0, 
       0}, {-Sin[
         Rational[1, 8] Pi] (Cos[Rational[1, 8] Pi]^2 + 
          Sin[Rational[1, 8] Pi]^2)^Rational[1, 2], 
        Cos[Rational[1, 8] Pi] (Cos[Rational[1, 8] Pi]^2 + 
          Sin[Rational[1, 8] Pi]^2)^Rational[1, 2]}}, {{0, 
       0}, {-0.3826834323650898, 0.9238795325112867}}]], 
    InsetBox[
     FormBox["\"r=dd4,\[Theta]=ee4\"", TraditionalForm], {-0.6, 0.85}], 
    LineBox[
     NCache[{{0, 0}, {
       Cos[Rational[1, 8] Pi] (Cos[Rational[1, 8] Pi]^2 + 
          Sin[Rational[1, 8] Pi]^2)^Rational[1, 2], 
        Sin[Rational[1, 8] Pi] (Cos[Rational[1, 8] Pi]^2 + 
          Sin[Rational[1, 8] Pi]^2)^Rational[1, 2]}}, {{0, 0}, {
       0.9238795325112867, 0.3826834323650898}}]], 
    InsetBox[
     FormBox["\"r=dd2,\[Theta]=ee2\"", TraditionalForm], {0.7, 0.45}]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->300,
  Method->{},
  PlotRange->{{-0.9238795325112867, 0.9238795325112867}, {-1.2, 1.2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.757278382106942*^9, 3.7572784012512093`*^9}, 
   3.7572785758303957`*^9, 3.757278677337791*^9, {3.757278751107937*^9, 
   3.757278771304576*^9}, 3.757278824345199*^9, 3.757278961203306*^9, 
   3.757279022315402*^9, {3.757279058209642*^9, 3.7572791727862453`*^9}, {
   3.757279269596548*^9, 3.7572793015625362`*^9}, {3.757279337212583*^9, 
   3.757279410543494*^9}, {3.7572794473506413`*^9, 3.757279581743754*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"27.", "  ", 
  RadicalBox[
   RowBox[{"-", "1"}], "5"]}]], "Text",
 CellChangeTimes->{{3.7571724827869663`*^9, 3.757172512111257*^9}, 
   3.757172683498786*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"jj", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "5"], "+", "1"}], "\[Equal]", "0"}], ",", "x"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.75727816816567*^9, 3.757278174796001*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], 
      RowBox[{"1", "/", "5"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"2", "/", "5"}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], 
      RowBox[{"3", "/", "5"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"4", "/", "5"}]]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.757278176421756*^9, 3.757288825317527*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "/.", "jj"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], 
    RowBox[{"1", "/", "5"}]], ",", 
   RowBox[{"-", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], 
     RowBox[{"2", "/", "5"}]]}], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], 
    RowBox[{"3", "/", "5"}]], ",", 
   RowBox[{"-", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], 
     RowBox[{"4", "/", "5"}]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.7572781938627377`*^9, 3.757288828513583*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComplexExpand", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "5"], "+", "1"}], "/.", "jj"}], "]"}]], "Input",
 CellChangeTimes->{{3.757278214468725*^9, 3.7572782258504763`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.757278208623344*^9, 3.7572782279995537`*^9}, 
   3.7572888312087593`*^9}]
}, Open  ]],

Cell["\<\
The above cell demonstrates that all of Mathematica\[CloseCurlyQuote]s roots \
work.\
\>", "Text",
 CellChangeTimes->{3.7572782472041883`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"tr1", "=", 
   RowBox[{
    RowBox[{"Cos", "[", 
     FractionBox["\[Pi]", "5"], "]"}], "+", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"Sin", "[", 
      FractionBox["\[Pi]", "5"], "]"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.757279909407151*^9, 3.75727996720205*^9}}],

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"ComplexExpand", "[", "tr1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7572799841724*^9, 3.757280012630658*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"-", "1"}], ")"}], 
   RowBox[{"1", "/", "5"}]], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"jj", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.7572803295969677`*^9, 3.757280334003461*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"tr2", "=", 
   RowBox[{
    RowBox[{"Cos", "[", 
     FractionBox["\[Pi]", "5"], "]"}], "-", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"Sin", "[", 
      FractionBox["\[Pi]", "5"], "]"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.757280046110752*^9, 3.757280061444915*^9}}],

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"ComplexExpand", "[", "tr2", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.757280074013929*^9, 3.757280074268384*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"-", "1"}], ")"}], 
   RowBox[{"4", "/", "5"}]], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"jj", "[", 
    RowBox[{"[", "5", "]"}], "]"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.7572803138518887`*^9, 3.75728032349953*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"tr3", "=", 
   RowBox[{
    RowBox[{"Cos", "[", 
     FractionBox[
      RowBox[{"3", "\[Pi]"}], "5"], "]"}], "-", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"Sin", "[", 
      FractionBox[
       RowBox[{"3", "\[Pi]"}], "5"], "]"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.757280091533181*^9, 3.757280107748638*^9}}],

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"ComplexExpand", "[", "tr3", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.757280123308351*^9, 3.7572801234747057`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"-", "1"}], ")"}], 
   RowBox[{"2", "/", "5"}]], "   ", 
  RowBox[{"(*", " ", 
   RowBox[{"jj", "[", 
    RowBox[{"[", "3", "]"}], "]"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.757280293836751*^9, 3.757280299772704*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"tr4", "=", 
   RowBox[{
    RowBox[{"Cos", "[", 
     FractionBox[
      RowBox[{"3", "\[Pi]"}], "5"], "]"}], "+", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"Sin", "[", 
      FractionBox[
       RowBox[{"3", "\[Pi]"}], "5"], "]"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.757280145939004*^9, 3.757280152769753*^9}}],

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"ComplexExpand", "[", "tr4", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.757280167546824*^9, 3.7572801677693243`*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"-", "1"}], ")"}], 
   RowBox[{"3", "/", "5"}]], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"jj", "[", 
    RowBox[{"[", "4", "]"}], "]"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.757280272270771*^9, 3.757280277781571*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"tr5", "=", 
   RowBox[{"-", "1"}]}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{"jj", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.757280192410165*^9, 3.7572802013842087`*^9}, {
  3.75728023416854*^9, 3.757280245486871*^9}}],

Cell["\<\
The above five tests find the text\[CloseCurlyQuote]s roots equal to \
Mathematica's.\
\>", "Text",
 CellChangeTimes->{{3.757282034900206*^9, 3.757282063450452*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dd", "=", 
   RowBox[{"Abs", "[", 
    RowBox[{"ComplexExpand", "[", 
     RowBox[{"-", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ee", "=", 
   RowBox[{"Arg", "[", 
    RowBox[{"ComplexExpand", "[", 
     RowBox[{"-", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cc", "=", 
   RowBox[{"FromPolarCoordinates", "[", 
    RowBox[{"{", 
     RowBox[{"dd", ",", "ee"}], "}"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.757280495041403*^9, 3.75728049768917*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dd2", "=", 
   RowBox[{"Abs", "[", 
    RowBox[{"ComplexExpand", "[", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], 
      RowBox[{"1", "/", "5"}]], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ee2", "=", 
   RowBox[{"Arg", "[", 
    RowBox[{"ComplexExpand", "[", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], 
      RowBox[{"1", "/", "5"}]], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cc2", "=", 
   RowBox[{"FromPolarCoordinates", "[", 
    RowBox[{"{", 
     RowBox[{"dd2", ",", "ee2"}], "}"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.757280516481037*^9, 3.75728052562475*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dd3", "=", 
   RowBox[{"Abs", "[", 
    RowBox[{"ComplexExpand", "[", 
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"2", "/", "5"}]]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ee3", "=", 
   RowBox[{"Arg", "[", 
    RowBox[{"ComplexExpand", "[", 
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"2", "/", "5"}]]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cc3", "=", 
   RowBox[{"FromPolarCoordinates", "[", 
    RowBox[{"{", 
     RowBox[{"dd3", ",", "ee3"}], "}"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.757280550775713*^9, 3.757280555095574*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dd4", "=", 
   RowBox[{"Abs", "[", 
    RowBox[{"ComplexExpand", "[", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], 
      RowBox[{"3", "/", "5"}]], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ee4", "=", 
   RowBox[{"Arg", "[", 
    RowBox[{"ComplexExpand", "[", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], 
      RowBox[{"3", "/", "5"}]], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cc4", "=", 
   RowBox[{"FromPolarCoordinates", "[", 
    RowBox[{"{", 
     RowBox[{"dd4", ",", "ee4"}], "}"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7572805732549057`*^9, 3.757280577718769*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dd5", "=", 
   RowBox[{"Abs", "[", 
    RowBox[{"ComplexExpand", "[", 
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"4", "/", "5"}]]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ee5", "=", 
   RowBox[{"Arg", "[", 
    RowBox[{"ComplexExpand", "[", 
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"4", "/", "5"}]]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cc5", "=", 
   RowBox[{"FromPolarCoordinates", "[", 
    RowBox[{"{", 
     RowBox[{"dd5", ",", "ee5"}], "}"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7572804624409924`*^9, 3.757280472599134*^9}, {
  3.757280594854146*^9, 3.757280598853972*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"FromPolarCoordinates", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"dd", ",", "ee"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"dd2", ",", "ee2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"dd3", ",", "ee3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"dd4", ",", "ee4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"dd5", ",", "ee5"}], "}"}]}], "}"}], "]"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1.15"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Re", ",", "I"}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.1"}], ",", "1.1"}], "}"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"cc", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"cc", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<r=dd,\[Theta]=ee\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.8"}], ",", 
          RowBox[{"-", "0.1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"cc3", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"cc3", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<r=dd3,\[Theta]=ee3\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.55"}], ",", 
          RowBox[{"-", "0.9"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
      
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"cc4", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"cc4", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<r=dd4,\[Theta]=ee4\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.55"}], ",", "0.9"}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"cc5", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"cc5", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<r=dd5,\[Theta]=ee5\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0.55", ",", 
          RowBox[{"-", "0.6"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"cc2", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"cc2", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<r=dd2,\[Theta]=ee2\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0.55", ",", "0.6"}], "}"}]}], "]"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7572807475764427`*^9, 3.7572807720860558`*^9}, {
  3.757280803376369*^9, 3.757281108091301*^9}, {3.757281833964772*^9, 
  3.7572818676184263`*^9}, {3.757281900560959*^9, 3.757281985150422*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{-1., 0.}, {0.8090169943749475, 
      0.5877852522924731}, {-0.30901699437494745`, -0.9510565162951535}, \
{-0.30901699437494745`, 0.9510565162951535}, {
      0.8090169943749475, -0.5877852522924731}}]}, {}}, {}},
  AspectRatio->1.15,
  Axes->{True, True},
  AxesLabel->{
    FormBox["Re", TraditionalForm], 
    FormBox["\[ImaginaryI]", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    RGBColor[1, 0, 0], 
    LineBox[{{0, 0}, {-1, 0}}], 
    InsetBox[
     FormBox["\"r=dd,\[Theta]=ee\"", TraditionalForm], {-0.8, -0.1}], 
    LineBox[
     NCache[{{0, 
       0}, {-((Rational[5, 8] + 
           Rational[1, 8] 
            5^Rational[1, 2] + (Rational[1, 4] + 
             Rational[-1, 4] 5^Rational[1, 2])^2)/(
          1 + (Rational[1, 4] + Rational[-1, 4] 5^Rational[1, 2])^(-2) (
            Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])))^
         Rational[1, 2], (Rational[1, 4] + 
          Rational[-1, 4] 5^Rational[1, 2])^(-1) ((Rational[5, 8] + 
           Rational[1, 8] 5^Rational[1, 2]) (Rational[5, 8] + 
           Rational[1, 8] 
            5^Rational[1, 2] + (Rational[1, 4] + 
             Rational[-1, 4] 5^Rational[1, 2])^2)/(
          1 + (Rational[1, 4] + Rational[-1, 4] 5^Rational[1, 2])^(-2) (
            Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])))^
         Rational[1, 2]}}, {{0, 
       0}, {-0.30901699437494745`, -0.9510565162951535}}]], 
    InsetBox[
     FormBox["\"r=dd3,\[Theta]=ee3\"", TraditionalForm], {-0.55, -0.9}], 
    LineBox[
     NCache[{{0, 
       0}, {-((Rational[5, 8] + 
           Rational[1, 8] 
            5^Rational[1, 2] + (Rational[1, 4] + 
             Rational[-1, 4] 5^Rational[1, 2])^2)/(
          1 + (Rational[1, 4] + Rational[-1, 4] 5^Rational[1, 2])^(-2) (
            Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])))^
         Rational[1, 2], -(Rational[1, 4] + 
          Rational[-1, 4] 5^Rational[1, 2])^(-1) ((Rational[5, 8] + 
           Rational[1, 8] 5^Rational[1, 2]) (Rational[5, 8] + 
           Rational[1, 8] 
            5^Rational[1, 2] + (Rational[1, 4] + 
             Rational[-1, 4] 5^Rational[1, 2])^2)/(
          1 + (Rational[1, 4] + Rational[-1, 4] 5^Rational[1, 2])^(-2) (
            Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])))^
         Rational[1, 2]}}, {{0, 0}, {-0.30901699437494745`, 
       0.9510565162951535}}]], 
    InsetBox[
     FormBox["\"r=dd4,\[Theta]=ee4\"", TraditionalForm], {-0.55, 0.9}], 
    LineBox[
     NCache[{{0, 
       0}, {((1 + (Rational[5, 8] + 
             Rational[-1, 8] 5^Rational[1, 2]) (Rational[1, 4] + 
              Rational[1, 4] 5^Rational[1, 2])^(-2))^(-1) (Rational[5, 8] + 
          Rational[-1, 8] 
           5^Rational[1, 2] + (Rational[1, 4] + 
            Rational[1, 4] 5^Rational[1, 2])^2))^
        Rational[
         1, 2], -(Rational[1, 4] + 
          Rational[1, 4] 5^Rational[1, 2])^(-1) ((Rational[5, 8] + 
           Rational[-1, 8] 5^Rational[1, 2]) (
            1 + (Rational[5, 8] + 
              Rational[-1, 8] 5^Rational[1, 2]) (Rational[1, 4] + 
               Rational[1, 4] 5^Rational[1, 2])^(-2))^(-1) (Rational[5, 8] + 
           Rational[-1, 8] 
            5^Rational[1, 2] + (Rational[1, 4] + 
             Rational[1, 4] 5^Rational[1, 2])^2))^Rational[1, 2]}}, {{0, 0}, {
       0.8090169943749475, -0.587785252292473}}]], 
    InsetBox[
     FormBox["\"r=dd5,\[Theta]=ee5\"", TraditionalForm], {0.55, -0.6}], 
    LineBox[
     NCache[{{0, 
       0}, {((1 + (Rational[5, 8] + 
             Rational[-1, 8] 5^Rational[1, 2]) (Rational[1, 4] + 
              Rational[1, 4] 5^Rational[1, 2])^(-2))^(-1) (Rational[5, 8] + 
          Rational[-1, 8] 
           5^Rational[1, 2] + (Rational[1, 4] + 
            Rational[1, 4] 5^Rational[1, 2])^2))^
        Rational[
         1, 2], (Rational[1, 4] + 
          Rational[1, 4] 5^Rational[1, 2])^(-1) ((Rational[5, 8] + 
           Rational[-1, 8] 5^Rational[1, 2]) (
            1 + (Rational[5, 8] + 
              Rational[-1, 8] 5^Rational[1, 2]) (Rational[1, 4] + 
               Rational[1, 4] 5^Rational[1, 2])^(-2))^(-1) (Rational[5, 8] + 
           Rational[-1, 8] 
            5^Rational[1, 2] + (Rational[1, 4] + 
             Rational[1, 4] 5^Rational[1, 2])^2))^Rational[1, 2]}}, {{0, 0}, {
       0.8090169943749475, 0.587785252292473}}]], 
    InsetBox[
     FormBox["\"r=dd2,\[Theta]=ee2\"", TraditionalForm], {0.55, 0.6}]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->300,
  Method->{},
  PlotRange->{{-1., 0.8090169943749475}, {-1.1, 1.1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7572807318157043`*^9, 3.7572807834473352`*^9, {3.757280813805388*^9, 
   3.757281109275519*^9}, {3.757281844748116*^9, 3.757281858449827*^9}, {
   3.7572818953982973`*^9, 3.7572819857926397`*^9}, 3.757288858675109*^9}]
}, Open  ]],

Cell["\<\
28 - 31 Equations
Solve and graph the solutions.\
\>", "Text",
 CellChangeTimes->{{3.757172756400297*^9, 3.757172773406478*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"29.", "  ", 
    SuperscriptBox["z", "2"]}], "+", "z", "+", "1", "-", "\[ImaginaryI]"}], 
  "\[Equal]", "0"}]], "Text",
 CellChangeTimes->{{3.757172777128003*^9, 3.757172802837573*^9}, 
   3.757172849636149*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"jj", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["z", "2"], "+", "z", "+", "1", "-", "\[ImaginaryI]"}], 
     "\[Equal]", "0"}], ",", "z"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.757282173641719*^9, 3.757282177494557*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "1"}], "-", "\[ImaginaryI]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", "\[ImaginaryI]"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.757282178605706*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"z", "/.", "jj"}]], "Input",
 CellChangeTimes->{{3.757282543026348*^9, 3.757282543602195*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "1"}], "-", "\[ImaginaryI]"}], ",", "\[ImaginaryI]"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.757282204255541*^9, 3.757282545814054*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComplexExpand", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["z", "2"], "+", "z", "+", "1", "-", "\[ImaginaryI]"}], "/.",
    "jj"}], "]"}]], "Input",
 CellChangeTimes->{3.757282250199711*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.757282236673152*^9, 3.757282251793511*^9}, 
   3.757282552367476*^9}]
}, Open  ]],

Cell["\<\
The above cell demonstrates that both of Mathematica\[CloseCurlyQuote]s roots \
work. The green cell shows them equal to the text\[CloseCurlyQuote]s.\
\>", "Text",
 CellChangeTimes->{
  3.75728227332578*^9, {3.757282370505179*^9, 3.757282380511738*^9}, {
   3.757288895087717*^9, 3.757288896694393*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dd", "=", 
   RowBox[{"Abs", "[", 
    RowBox[{"ComplexExpand", "[", 
     RowBox[{
      RowBox[{"-", "1"}], "-", "\[ImaginaryI]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ee", "=", 
   RowBox[{"Arg", "[", 
    RowBox[{"ComplexExpand", "[", 
     RowBox[{
      RowBox[{"-", "1"}], "-", "\[ImaginaryI]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cc", "=", 
   RowBox[{"FromPolarCoordinates", "[", 
    RowBox[{"{", 
     RowBox[{"dd", ",", "ee"}], "}"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7572824692639627`*^9, 3.757282472686655*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dd2", "=", 
   RowBox[{"Abs", "[", 
    RowBox[{"ComplexExpand", "[", "\[ImaginaryI]", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ee2", "=", 
   RowBox[{"Arg", "[", 
    RowBox[{"ComplexExpand", "[", "\[ImaginaryI]", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cc2", "=", 
   RowBox[{"FromPolarCoordinates", "[", 
    RowBox[{"{", 
     RowBox[{"dd2", ",", "ee2"}], "}"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7572824819822063`*^9, 3.7572824902765093`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"FromPolarCoordinates", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"dd", ",", "ee"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"dd2", ",", "ee2"}], "}"}]}], "}"}], "]"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1.95"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Re", ",", "I"}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.1"}], ",", "1.1"}], "}"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"cc", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"cc", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<r=dd,\[Theta]=ee\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.8"}], ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"cc2", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"cc2", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<r=dd2,\[Theta]=ee2\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.19"}], ",", "0.95"}], "}"}]}], "]"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.757282513470539*^9, {3.7572825730110064`*^9, 3.7572826222325287`*^9}, {
   3.757282722557151*^9, 3.757282722781087*^9}, {3.7572827640277967`*^9, 
   3.75728282566543*^9}, {3.757282926534451*^9, 3.7572830340187817`*^9}, {
   3.7572830906310577`*^9, 3.757283094800762*^9}, 3.757283527029456*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[{{-1., -1.}, {0., 1.}}]}, {}}, {}},
  AspectRatio->1.95,
  Axes->{True, True},
  AxesLabel->{
    FormBox["Re", TraditionalForm], 
    FormBox["\[ImaginaryI]", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    RGBColor[1, 0, 0], 
    LineBox[{{0, 0}, {-1, -1}}], 
    InsetBox[
     FormBox["\"r=dd,\[Theta]=ee\"", TraditionalForm], {-0.8, -1}], 
    LineBox[{{0, 0}, {0, 1}}], 
    InsetBox[
     FormBox["\"r=dd2,\[Theta]=ee2\"", TraditionalForm], {-0.19, 0.95}]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{},
  PlotRange->{{-1., 0}, {-1.1, 1.1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.757282504593251*^9, 3.757282515125689*^9}, {
   3.757282558839077*^9, 3.757282622953326*^9}, 3.757282724038993*^9, {
   3.757282770991444*^9, 3.7572828263356247`*^9}, {3.7572829282757053`*^9, 
   3.757283034659544*^9}, 3.75728309629988*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"31.", "  ", 
    SuperscriptBox["z", "4"]}], "-", 
   RowBox[{"6", " ", "\[ImaginaryI]", " ", 
    SuperscriptBox["z", "2"]}], "+", "16"}], "\[Equal]", "0"}]], "Text",
 CellChangeTimes->{{3.757172807655217*^9, 3.7571728313807793`*^9}, 
   3.7571728638207617`*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"jj", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["z", "4"], "-", 
      RowBox[{"6", " ", "\[ImaginaryI]", " ", 
       SuperscriptBox["z", "2"]}], "+", "16"}], "\[Equal]", "0"}], ",", "z"}],
    "]"}]}]], "Input",
 CellChangeTimes->{3.757283153145149*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "2"}], "-", 
      RowBox[{"2", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[ImaginaryI]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", 
     RowBox[{"1", "-", "\[ImaginaryI]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", 
     RowBox[{"2", "+", 
      RowBox[{"2", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7572831548202467`*^9, 3.757283807536476*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"z", "/.", "jj"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "2"}], "-", 
    RowBox[{"2", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "\[ImaginaryI]"}], ",", 
   RowBox[{"1", "-", "\[ImaginaryI]"}], ",", 
   RowBox[{"2", "+", 
    RowBox[{"2", " ", "\[ImaginaryI]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.7572831785169992`*^9, 3.757283810967968*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComplexExpand", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["z", "4"], "-", 
    RowBox[{"6", " ", "\[ImaginaryI]", " ", 
     SuperscriptBox["z", "2"]}], "+", "16"}], "/.", "jj"}], "]"}]], "Input",
 CellChangeTimes->{3.757283207727477*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.757283191968388*^9, 3.757283209298236*^9}, 
   3.7572838136495953`*^9}]
}, Open  ]],

Cell["\<\
The above cell demonstrates that all of Mathematica\[CloseCurlyQuote]s roots \
work. The green cell shows them equal to the text\[CloseCurlyQuote]s.\
\>", "Text",
 CellChangeTimes->{3.757283224573966*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dd", "=", 
   RowBox[{"Abs", "[", 
    RowBox[{"ComplexExpand", "[", 
     RowBox[{
      RowBox[{"-", "2"}], "-", 
      RowBox[{"2", " ", "\[ImaginaryI]"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ee", "=", 
   RowBox[{"Arg", "[", 
    RowBox[{"ComplexExpand", "[", 
     RowBox[{
      RowBox[{"-", "2"}], "-", 
      RowBox[{"2", " ", "\[ImaginaryI]"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cc", "=", 
   RowBox[{"FromPolarCoordinates", "[", 
    RowBox[{"{", 
     RowBox[{"dd", ",", "ee"}], "}"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7572833970889797`*^9, 3.757283400616884*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dd2", "=", 
   RowBox[{"Abs", "[", 
    RowBox[{"ComplexExpand", "[", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[ImaginaryI]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ee2", "=", 
   RowBox[{"Arg", "[", 
    RowBox[{"ComplexExpand", "[", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[ImaginaryI]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cc2", "=", 
   RowBox[{"FromPolarCoordinates", "[", 
    RowBox[{"{", 
     RowBox[{"dd2", ",", "ee2"}], "}"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.757283410120488*^9, 3.757283413214335*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dd3", "=", 
   RowBox[{"Abs", "[", 
    RowBox[{"ComplexExpand", "[", 
     RowBox[{"1", "-", "\[ImaginaryI]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ee3", "=", 
   RowBox[{"Arg", "[", 
    RowBox[{"ComplexExpand", "[", 
     RowBox[{"1", "-", "\[ImaginaryI]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cc3", "=", 
   RowBox[{"FromPolarCoordinates", "[", 
    RowBox[{"{", 
     RowBox[{"dd3", ",", "ee3"}], "}"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.757283304226336*^9, 3.757283349735217*^9}, {
  3.7572834226001253`*^9, 3.7572834251040297`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dd4", "=", 
   RowBox[{"Abs", "[", 
    RowBox[{"ComplexExpand", "[", 
     RowBox[{"2", "+", 
      RowBox[{"2", " ", "\[ImaginaryI]"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ee4", "=", 
   RowBox[{"Arg", "[", 
    RowBox[{"ComplexExpand", "[", 
     RowBox[{"2", "+", 
      RowBox[{"2", " ", "\[ImaginaryI]"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cc4", "=", 
   RowBox[{"FromPolarCoordinates", "[", 
    RowBox[{"{", 
     RowBox[{"dd4", ",", "ee4"}], "}"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7572833276334467`*^9, 3.7572833624468317`*^9}, {
  3.75728343448763*^9, 3.757283437231789*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"FromPolarCoordinates", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"dd", ",", "ee"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"dd2", ",", "ee2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"dd3", ",", "ee3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"dd4", ",", "ee4"}], "}"}]}], "}"}], "]"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "270"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Re", ",", "I"}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2.1"}], ",", "2.1"}], "}"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"cc", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"cc", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<r=dd,\[Theta]=ee\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.3"}], ",", 
          RowBox[{"-", "1.9"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
      
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"cc4", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"cc4", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<r=dd4,\[Theta]=ee4\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"1.35", ",", "1.95"}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"cc3", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"cc3", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<r=dd3,\[Theta]=ee3\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"1.55", ",", 
          RowBox[{"-", "0.8"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
      
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"cc2", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"cc2", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<r=dd2,\[Theta]=ee2\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.3"}], ",", "0.95"}], "}"}]}], "]"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.757283486082996*^9, 3.757283491276854*^9}, 
   3.757283550058526*^9, {3.757283585138236*^9, 3.7572837211640472`*^9}, {
   3.757283886792252*^9, 3.7572842201315613`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{-2., -2.}, {-1., 1.}, {1., -1.}, {2., 2.}}]}, {}}, {}},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{
    FormBox["Re", TraditionalForm], 
    FormBox["\[ImaginaryI]", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    RGBColor[1, 0, 0], 
    LineBox[{{0, 0}, {-2, -2}}], 
    InsetBox[
     FormBox["\"r=dd,\[Theta]=ee\"", TraditionalForm], {-1.3, -1.9}], 
    LineBox[{{0, 0}, {2, 2}}], 
    InsetBox[
     FormBox["\"r=dd4,\[Theta]=ee4\"", TraditionalForm], {1.35, 1.95}], 
    LineBox[{{0, 0}, {1, -1}}], 
    InsetBox[
     FormBox["\"r=dd3,\[Theta]=ee3\"", TraditionalForm], {1.55, -0.8}], 
    LineBox[{{0, 0}, {-1, 1}}], 
    InsetBox[
     FormBox["\"r=dd2,\[Theta]=ee2\"", TraditionalForm], {-0.3, 0.95}]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->270,
  Method->{},
  PlotRange->{{-2., 2.}, {-2.1, 2.1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.757283571995463*^9, 3.757283749802373*^9}, 
   3.757283780174111*^9, 3.757283829488517*^9, {3.75728389664539*^9, 
   3.757284220788076*^9}}]
}, Open  ]]
},
WindowSize->{1366, 843},
WindowMargins->{{4, Automatic}, {Automatic, 4}},
Magnification:>1.5 Inherited,
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 10, \
2015)",
StyleDefinitions->"Charter1.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 221, 5, 51, "Text",
 Evaluatable->False],
Cell[624, 20, 91, 2, 45, "Input",
 Evaluatable->False],
Cell[718, 24, 141, 2, 45, "Input"],
Cell[862, 28, 180, 4, 86, "Text"],
Cell[1045, 34, 177, 3, 75, "Text"],
Cell[1225, 39, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[1323, 44, 149, 3, 45, "Input"],
Cell[1475, 49, 609, 10, 45, "Output"]
}, Open  ]],
Cell[2099, 62, 509, 13, 47, "Input"],
Cell[2611, 77, 164, 5, 45, "Input"],
Cell[2778, 84, 601, 14, 47, "Input"],
Cell[CellGroupData[{
Cell[3404, 102, 304, 5, 45, "Input"],
Cell[3711, 109, 897, 21, 96, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4645, 135, 679, 15, 74, "Input"],
Cell[5327, 152, 4376, 104, 211, "Output"]
}, Open  ]],
Cell[9718, 259, 218, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[9961, 267, 1746, 39, 149, "Input"],
Cell[11710, 308, 1302, 36, 321, "Output"]
}, Open  ]],
Cell[13027, 347, 379, 6, 86, "Text"],
Cell[13409, 355, 181, 3, 75, "Text"],
Cell[CellGroupData[{
Cell[13615, 362, 147, 3, 45, "Input"],
Cell[13765, 367, 175, 3, 45, "Output"]
}, Open  ]],
Cell[13955, 373, 164, 5, 45, "Input"],
Cell[14122, 380, 406, 11, 47, "Input"],
Cell[CellGroupData[{
Cell[14553, 395, 92, 2, 45, "Input"],
Cell[14648, 399, 441, 13, 96, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15126, 417, 1083, 30, 120, "Input"],
Cell[16212, 449, 1179, 35, 247, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17428, 489, 142, 4, 45, "Input"],
Cell[17573, 495, 191, 4, 45, "Output"]
}, Open  ]],
Cell[17779, 502, 164, 5, 45, "Input"],
Cell[17946, 509, 336, 10, 47, "Input"],
Cell[CellGroupData[{
Cell[18307, 523, 92, 2, 45, "Input"],
Cell[18402, 527, 456, 13, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18895, 545, 1054, 29, 120, "Input"],
Cell[19952, 576, 1177, 35, 247, "Output"]
}, Open  ]],
Cell[21144, 614, 395, 13, 110, "Text"],
Cell[CellGroupData[{
Cell[21564, 631, 335, 11, 96, "Input"],
Cell[21902, 644, 396, 12, 113, "Output"]
}, Open  ]],
Cell[22313, 659, 164, 5, 45, "Input"],
Cell[22480, 666, 408, 11, 47, "Input"],
Cell[CellGroupData[{
Cell[22913, 681, 158, 3, 45, "Input"],
Cell[23074, 686, 434, 12, 99, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23545, 703, 1005, 29, 104, "Input"],
Cell[24553, 734, 1169, 34, 230, "Output"]
}, Open  ]],
Cell[25737, 771, 293, 7, 93, "Text"],
Cell[CellGroupData[{
Cell[26055, 782, 205, 5, 75, "Input"],
Cell[26263, 789, 173, 4, 75, "Output"]
}, Open  ]],
Cell[26451, 796, 164, 5, 45, "Input"],
Cell[26618, 803, 408, 11, 47, "Input"],
Cell[CellGroupData[{
Cell[27051, 818, 92, 2, 45, "Input"],
Cell[27146, 822, 606, 19, 116, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27789, 846, 1003, 29, 104, "Input"],
Cell[28795, 877, 1117, 33, 230, "Output"]
}, Open  ]],
Cell[29927, 913, 243, 5, 86, "Text"],
Cell[30173, 920, 154, 3, 75, "Text"],
Cell[30330, 925, 266, 6, 86, "Text"],
Cell[CellGroupData[{
Cell[30621, 935, 169, 4, 45, "Input"],
Cell[30793, 941, 122, 3, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30952, 949, 148, 3, 45, "Input"],
Cell[31103, 954, 81, 2, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31221, 961, 148, 3, 45, "Input"],
Cell[31372, 966, 155, 4, 99, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31564, 975, 1316, 35, 154, "Input"],
Cell[32883, 1012, 1532, 40, 323, "Output"]
}, Open  ]],
Cell[34430, 1055, 169, 3, 75, "Text"],
Cell[34602, 1060, 336, 9, 45, "Input"],
Cell[CellGroupData[{
Cell[34963, 1073, 125, 3, 45, "Input"],
Cell[35091, 1078, 70, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35198, 1084, 149, 3, 45, "Input"],
Cell[35350, 1089, 160, 4, 100, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35547, 1098, 148, 3, 45, "Input"],
Cell[35698, 1103, 70, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35805, 1109, 148, 3, 45, "Input"],
Cell[35956, 1114, 182, 5, 100, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36175, 1124, 1806, 49, 204, "Input"],
Cell[37984, 1175, 1477, 42, 300, "Output"]
}, Open  ]],
Cell[39476, 1220, 265, 7, 73, "Text"],
Cell[CellGroupData[{
Cell[39766, 1231, 350, 7, 49, "Input"],
Cell[40119, 1240, 226, 5, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40382, 1250, 146, 3, 45, "Input"],
Cell[40531, 1255, 73, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40641, 1261, 148, 3, 45, "Input"],
Cell[40792, 1266, 112, 2, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40941, 1273, 1059, 30, 104, "Input"],
Cell[42003, 1305, 1103, 33, 307, "Output"]
}, Open  ]],
Cell[43121, 1341, 170, 2, 51, "Text"],
Cell[43294, 1345, 445, 13, 93, "Text"],
Cell[CellGroupData[{
Cell[43764, 1362, 403, 12, 75, "Input"],
Cell[44170, 1376, 160, 4, 69, "Output"]
}, Open  ]],
Cell[44345, 1383, 449, 14, 93, "Text"],
Cell[CellGroupData[{
Cell[44819, 1401, 406, 13, 75, "Input"],
Cell[45228, 1416, 165, 4, 69, "Output"]
}, Open  ]],
Cell[45408, 1423, 198, 4, 51, "Text"],
Cell[45609, 1429, 149, 4, 86, "Text"],
Cell[45761, 1435, 266, 6, 78, "Text"],
Cell[CellGroupData[{
Cell[46052, 1445, 638, 18, 54, "Input"],
Cell[46693, 1465, 1939, 63, 91, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48669, 1533, 1920, 53, 177, "Input"],
Cell[50592, 1588, 254795, 4342, 561, 145538, 2549, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[305402, 5933, 356, 6, 86, "Text"],
Cell[CellGroupData[{
Cell[305783, 5943, 636, 13, 54, "Input"],
Cell[306422, 5958, 1144, 35, 54, "Output"]
}, Open  ]],
Cell[307581, 5996, 209, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[307815, 6004, 166, 3, 45, "Input"],
Cell[307984, 6009, 766, 26, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[308787, 6040, 232, 6, 54, "Input"],
Cell[309022, 6048, 125, 3, 45, "Output"]
}, Open  ]],
Cell[309162, 6054, 155, 3, 51, "Text"],
Cell[CellGroupData[{
Cell[309342, 6061, 311, 8, 54, "Input"],
Cell[309656, 6071, 245, 4, 69, "Output"]
}, Open  ]],
Cell[309916, 6078, 179, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[310120, 6086, 459, 13, 72, "Input"],
Cell[310582, 6101, 208, 3, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[310827, 6109, 503, 11, 54, "Input"],
Cell[311333, 6122, 478, 12, 69, "Output"]
}, Open  ]],
Cell[311826, 6137, 245, 5, 51, "Text"],
Cell[CellGroupData[{
Cell[312096, 6146, 346, 12, 54, "Input"],
Cell[312445, 6160, 219, 5, 69, "Output"]
}, Open  ]],
Cell[312679, 6168, 274, 5, 51, "Text"],
Cell[CellGroupData[{
Cell[312978, 6177, 488, 14, 75, "Input"],
Cell[313469, 6193, 204, 4, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[313710, 6202, 362, 10, 54, "Input"],
Cell[314075, 6214, 361, 10, 69, "Output"]
}, Open  ]],
Cell[314451, 6227, 209, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[314685, 6235, 492, 16, 99, "Input"],
Cell[315180, 6253, 181, 4, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[315398, 6262, 388, 12, 54, "Input"],
Cell[315789, 6276, 219, 5, 69, "Output"]
}, Open  ]],
Cell[316023, 6284, 302, 6, 51, "Text"],
Cell[CellGroupData[{
Cell[316350, 6294, 485, 14, 75, "Input"],
Cell[316838, 6310, 205, 4, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[317080, 6319, 356, 10, 54, "Input"],
Cell[317439, 6331, 363, 10, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[317839, 6346, 495, 16, 99, "Input"],
Cell[318337, 6364, 182, 4, 45, "Output"]
}, Open  ]],
Cell[318534, 6371, 600, 9, 120, "Text"],
Cell[319137, 6382, 354, 10, 54, "Input"],
Cell[319494, 6394, 431, 11, 54, "Input"],
Cell[319928, 6407, 361, 8, 45, "Input"],
Cell[320292, 6417, 688, 18, 54, "Input"],
Cell[320983, 6437, 763, 20, 54, "Input"],
Cell[321749, 6459, 240, 6, 45, "Input"],
Cell[321992, 6467, 492, 15, 54, "Input"],
Cell[322487, 6484, 240, 6, 45, "Input"],
Cell[322730, 6492, 497, 15, 54, "Input"],
Cell[CellGroupData[{
Cell[323252, 6511, 3314, 84, 162, "Input"],
Cell[326569, 6597, 5176, 106, 330, "Output"]
}, Open  ]],
Cell[331760, 6706, 127, 1, 51, "Text"],
Cell[331890, 6709, 204, 5, 78, "Text"],
Cell[332097, 6716, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[332195, 6721, 264, 8, 54, "Input"],
Cell[332462, 6731, 580, 20, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[333079, 6756, 51, 1, 45, "Input"],
Cell[333133, 6759, 431, 15, 78, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[333601, 6779, 209, 5, 54, "Input"],
Cell[333813, 6786, 149, 3, 45, "Output"]
}, Open  ]],
Cell[333977, 6792, 152, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[334154, 6800, 272, 8, 54, "Input"],
Cell[334429, 6810, 170, 5, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[334636, 6820, 279, 8, 54, "Input"],
Cell[334918, 6830, 190, 5, 54, "Output"]
}, Open  ]],
Cell[335123, 6838, 155, 3, 51, "Text"],
Cell[335281, 6843, 529, 16, 104, "Input"],
Cell[335813, 6861, 846, 28, 120, "Input"],
Cell[336662, 6891, 802, 26, 120, "Input"],
Cell[CellGroupData[{
Cell[337489, 6921, 2491, 72, 162, "Input"],
Cell[339983, 6995, 1510, 43, 338, "Output"]
}, Open  ]],
Cell[341508, 7041, 260, 5, 77, "Text"],
Cell[341771, 7048, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[341869, 7053, 324, 9, 54, "Input"],
Cell[342196, 7064, 869, 30, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[343102, 7099, 51, 1, 45, "Input"],
Cell[343156, 7102, 652, 23, 78, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[343845, 7130, 271, 7, 54, "Input"],
Cell[344119, 7139, 209, 4, 45, "Output"]
}, Open  ]],
Cell[344343, 7146, 150, 4, 51, "Text"],
Cell[344496, 7152, 492, 15, 76, "Input"],
Cell[344991, 7169, 399, 13, 76, "Input"],
Cell[CellGroupData[{
Cell[345415, 7186, 365, 9, 45, "Input"],
Cell[345783, 7197, 1008, 30, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[346828, 7232, 2881, 76, 228, "Input"],
Cell[349712, 7310, 204, 4, 45, "Output"]
}, Open  ]],
Cell[349931, 7317, 498, 8, 120, "Text"],
Cell[CellGroupData[{
Cell[350454, 7329, 305, 8, 71, "Input"],
Cell[350762, 7339, 192, 4, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[350991, 7348, 129, 2, 45, "Input"],
Cell[351123, 7352, 158, 5, 49, "Output"]
}, Open  ]],
Cell[351296, 7360, 231, 4, 86, "Text"],
Cell[351530, 7366, 785, 26, 120, "Input"],
Cell[CellGroupData[{
Cell[352340, 7396, 740, 24, 120, "Input"],
Cell[353083, 7422, 832, 15, 51, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[353952, 7442, 792, 26, 120, "Input"],
Cell[354747, 7470, 836, 15, 51, "Message"]
}, Open  ]],
Cell[355598, 7488, 740, 24, 120, "Input"],
Cell[CellGroupData[{
Cell[356363, 7516, 3448, 95, 191, "Input"],
Cell[359814, 7613, 3186, 74, 509, "Output"]
}, Open  ]],
Cell[363015, 7690, 220, 6, 78, "Text"],
Cell[363238, 7698, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[363336, 7703, 261, 8, 54, "Input"],
Cell[363600, 7713, 929, 32, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[364566, 7750, 51, 1, 45, "Input"],
Cell[364620, 7753, 656, 23, 78, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[365313, 7781, 209, 5, 54, "Input"],
Cell[365525, 7788, 199, 4, 45, "Output"]
}, Open  ]],
Cell[365739, 7795, 152, 4, 51, "Text"],
Cell[365894, 7801, 317, 9, 71, "Input"],
Cell[366214, 7812, 171, 3, 45, "Input"],
Cell[366388, 7817, 295, 9, 49, "Input"],
Cell[366686, 7828, 318, 9, 71, "Input"],
Cell[367007, 7839, 173, 3, 45, "Input"],
Cell[367183, 7844, 299, 9, 49, "Input"],
Cell[367485, 7855, 363, 11, 76, "Input"],
Cell[367851, 7868, 175, 3, 45, "Input"],
Cell[368029, 7873, 299, 9, 49, "Input"],
Cell[368331, 7884, 363, 11, 76, "Input"],
Cell[368697, 7897, 175, 3, 45, "Input"],
Cell[368875, 7902, 293, 9, 49, "Input"],
Cell[369171, 7913, 299, 8, 45, "Input"],
Cell[369473, 7923, 175, 4, 51, "Text"],
Cell[369651, 7929, 562, 16, 104, "Input"],
Cell[370216, 7947, 739, 24, 120, "Input"],
Cell[370958, 7973, 790, 26, 120, "Input"],
Cell[371751, 8001, 742, 24, 120, "Input"],
Cell[372496, 8027, 841, 27, 120, "Input"],
Cell[CellGroupData[{
Cell[373362, 8058, 3992, 114, 220, "Input"],
Cell[377357, 8174, 5305, 119, 522, "Output"]
}, Open  ]],
Cell[382677, 8296, 138, 4, 86, "Text"],
Cell[382818, 8302, 294, 8, 73, "Text"],
Cell[383115, 8312, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[383213, 8317, 296, 8, 54, "Input"],
Cell[383512, 8327, 335, 10, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[383884, 8342, 117, 2, 45, "Input"],
Cell[384004, 8346, 208, 6, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[384249, 8357, 219, 6, 54, "Input"],
Cell[384471, 8365, 165, 4, 45, "Output"]
}, Open  ]],
Cell[384651, 8372, 313, 6, 51, "Text"],
Cell[384967, 8380, 649, 20, 104, "Input"],
Cell[385619, 8402, 560, 16, 104, "Input"],
Cell[CellGroupData[{
Cell[386204, 8422, 2158, 60, 133, "Input"],
Cell[388365, 8484, 1368, 36, 552, "Output"]
}, Open  ]],
Cell[389748, 8523, 346, 9, 73, "Text"],
Cell[390097, 8534, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[390195, 8539, 327, 10, 54, "Input"],
Cell[390525, 8551, 629, 19, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[391191, 8575, 51, 1, 45, "Input"],
Cell[391245, 8578, 431, 12, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[391713, 8595, 268, 7, 54, "Input"],
Cell[391984, 8604, 187, 4, 45, "Output"]
}, Open  ]],
Cell[392186, 8611, 214, 4, 51, "Text"],
Cell[392403, 8617, 703, 22, 104, "Input"],
Cell[393109, 8641, 652, 20, 104, "Input"],
Cell[393764, 8663, 661, 19, 104, "Input"],
Cell[394428, 8684, 714, 21, 104, "Input"],
Cell[CellGroupData[{
Cell[395167, 8709, 3345, 96, 191, "Input"],
Cell[398515, 8807, 1535, 42, 421, "Output"]
}, Open  ]]
}
]
*)


(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    244534,       5655]
NotebookOptionsPosition[    233540,       5292]
NotebookOutlinePosition[    233928,       5309]
CellTagsIndexPosition[    233885,       5306]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[""], "Input",
 Evaluatable->False,
 CellChangeTimes->{3.769113766546256*^9}],

Cell["\<\
Note: In this problem set, expressions in green cells match corresponding \
expressions in the text answers.\
\>", "Text",
 CellChangeTimes->{{3.769113769669034*^9, 3.769113787356019*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell["\<\
1 - 7 Contour integration. Unit Circle
Integrate counterclockwise around the unit circle.\
\>", "Text",
 CellChangeTimes->{{3.758737447126975*^9, 3.758737475765106*^9}}],

Cell[BoxData[
 RowBox[{"1.", "  ", 
  RowBox[{
   SubscriptBox["\[ContourIntegral]", "C"], " ", 
   RowBox[{
    FractionBox[
     RowBox[{"Sin", "[", "z", "]"}], 
     SuperscriptBox["z", "4"]], 
    RowBox[{"\[DifferentialD]", "z"}]}]}]}]], "Text",
 CellChangeTimes->{{3.758737479885397*^9, 3.758737480628839*^9}, {
   3.758737930674292*^9, 3.758737949382925*^9}, 3.7587380962757463`*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[TextData[{
 "This problem is in the s.m., and I will use it. The explanation in the s.m. \
clarifies the procedure. Although I am looking at an integral symbol, there \
is really no integrating to be done in the normal sense of the term. On \
numbered line (1) of p. 664 of the text is the formula I will be working \
with, namely\n",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SuperscriptBox["f", 
     RowBox[{"(", "n", ")"}]], 
    RowBox[{"(", 
     SubscriptBox["z", "0"], ")"}]}], "\[Equal]", 
   RowBox[{
    StyleBox[
     FractionBox[
      RowBox[{"n", "!"}], 
      RowBox[{"2", " ", "\[Pi]", " ", "\[ImaginaryI]"}]],
     FontSize->23], 
    RowBox[{
     StyleBox[
      SubscriptBox["\[ContourIntegral]", "C"],
      FontSize->23], 
     StyleBox[" ",
      FontSize->23], 
     RowBox[{
      StyleBox[
       FractionBox[
        RowBox[{"f", "[", "z", "]"}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"z", "-", 
           SubscriptBox["z", "0"]}], ")"}], 
         RowBox[{"n", "+", "1"}]]],
       FontSize->23], 
      RowBox[{"\[DifferentialD]", "z"}]}]}]}]}]]],
 "\nand rearranging and filling in parts of this equation will result in the \
answer to the problem. First step is to get the \[OpenCurlyQuote]integral\
\[CloseCurlyQuote] term by itself"
}], "Text",
 CellChangeTimes->{{3.758743605833993*^9, 3.758743618840526*^9}, {
  3.75874369348629*^9, 3.7587437984909487`*^9}, {3.7587438994732122`*^9, 
  3.758743903228283*^9}, {3.7587439637818747`*^9, 3.758743991829126*^9}, {
  3.75874402186814*^9, 3.758744036811679*^9}, {3.7587666421686907`*^9, 
  3.75876667387236*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{"2", " ", "\[Pi]", " ", "\[ImaginaryI]"}], 
    RowBox[{"n", "!"}]], 
   SuperscriptBox["f", 
    RowBox[{"(", "n", ")"}]], 
   RowBox[{"(", 
    SubscriptBox["z", "0"], ")"}]}], "=", 
  RowBox[{
   SubscriptBox["\[ContourIntegral]", "C"], " ", 
   RowBox[{
    FractionBox[
     RowBox[{"f", "[", "z", "]"}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"z", "-", 
        SubscriptBox["z", "0"]}], ")"}], 
      RowBox[{"n", "+", "1"}]]], 
    RowBox[{"\[DifferentialD]", "z"}]}]}]}]], "Text",
 CellChangeTimes->{{3.758743958719926*^9, 3.758743959845755*^9}, {
   3.758744065642363*^9, 3.758744115085573*^9}, 3.758744167346568*^9}],

Cell["\<\
At this point, looking back and forth between the numbered line (1) \
\[OpenCurlyQuote]integral\[CloseCurlyQuote] and the problem \
\[OpenCurlyQuote]integral\[CloseCurlyQuote], I can identify components. Thus\
\>", "Text",
 CellChangeTimes->{{3.758743804509101*^9, 3.75874389637714*^9}, {
  3.758744411470063*^9, 3.75874448643731*^9}, {3.758766701959415*^9, 
  3.758766720398703*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "z_", "]"}], "=", 
  RowBox[{"Sin", "[", "z", "]"}]}]], "Input",
 CellChangeTimes->{{3.758744491720703*^9, 3.758744499278304*^9}}],

Cell[BoxData[
 RowBox[{"Sin", "[", "z", "]"}]], "Output",
 CellChangeTimes->{3.7587445011023293`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Likewise", ",", " ", 
  RowBox[{
   SuperscriptBox["z", "4"], "\[Equal]", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"z", "-", 
      SubscriptBox["z", "0"]}], ")"}], 
    RowBox[{"n", "+", "1"}]]}], ",", " ", 
  RowBox[{
   RowBox[{"implying", " ", "that", " ", 
    SubscriptBox["z", "0"]}], "\[Equal]", 
   RowBox[{"0", " ", "and", " ", "n"}], "\[Equal]", 
   RowBox[{
   "3.", " ", "So", " ", "now", " ", "I", " ", "can", " ", 
    "identify"}]}]}]], "Text",
 CellChangeTimes->{{3.758744610180375*^9, 3.758744670647255*^9}, {
   3.7587447308693438`*^9, 3.7587447371093197`*^9}, 3.75907037935636*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["z", "0"], "=", "0"}]], "Input",
 CellChangeTimes->{{3.758744788017283*^9, 3.758744797779376*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.758744798743888*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "'''"}], "[", "z", "]"}]], "Input",
 CellChangeTimes->{{3.758744747688398*^9, 3.7587447526287394`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"Cos", "[", "z", "]"}]}]], "Output",
 CellChangeTimes->{3.7587447541642647`*^9, 3.758744803799241*^9}]
}, Open  ]],

Cell["and", "Text",
 CellChangeTimes->{{3.758744758900281*^9, 3.758744759124496*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "'''"}], "[", 
  SubscriptBox["z", "0"], "]"}]], "Input",
 CellChangeTimes->{{3.758744764385693*^9, 3.758744766788237*^9}, {
  3.758744807458783*^9, 3.758744813762608*^9}}],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{3.758744815128603*^9}]
}, Open  ]],

Cell["So now all I need to do is put the lhs together", "Text",
 CellChangeTimes->{{3.758744838285919*^9, 3.758744859737207*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"2", "\[Pi]", " ", "\[ImaginaryI]"}], 
   RowBox[{"3", "!"}]], 
  RowBox[{
   RowBox[{"f", "'''"}], "[", 
   SubscriptBox["z", "0"], "]"}]}]], "Input",
 CellChangeTimes->{{3.758744864981304*^9, 3.758744899106982*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "3"]}]], "Output",
 CellChangeTimes->{3.7587449012593718`*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["\<\
The green cell matches the text answer. This is not difficult. I just need to \
remember that I am seeking the lhs, not the right. One thing I need to \
remember is that f[z] needs to be analytic for this procedure to work. No \
problem so far with that.\
\>", "Text",
 CellChangeTimes->{{3.758744935631905*^9, 3.758744980853339*^9}, {
  3.758745326075597*^9, 3.7587453538252277`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"3.", "  ", 
   RowBox[{
    SubscriptBox["\[ContourIntegral]", "C"], " ", 
    RowBox[{
     FractionBox[
      RowBox[{"Exp", "[", "z", "]"}], 
      SuperscriptBox["z", "n"]], 
     RowBox[{"\[DifferentialD]", "z"}]}]}]}], " ", ",", " ", 
  RowBox[{"n", "=", "1"}], ",", "2", ",", "..."}]], "Text",
 CellChangeTimes->{{3.758737957143757*^9, 3.758737998565357*^9}, 
   3.758738104507368*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[TextData[{
 "Same drill. Putting the working form of the numbered line (1) equation in \
here for reference:\n",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    StyleBox[
     FractionBox[
      RowBox[{"2", " ", "\[Pi]", " ", "\[ImaginaryI]"}], 
      RowBox[{"n", "!"}]],
     FontSize->23], 
    SuperscriptBox["f", 
     RowBox[{"(", "n", ")"}]], 
    RowBox[{"(", 
     SubscriptBox["z", "0"], ")"}]}], "=", 
   RowBox[{
    StyleBox[
     SubscriptBox["\[ContourIntegral]", "C"],
     FontSize->23], 
    StyleBox[" ",
     FontSize->23], 
    RowBox[{
     StyleBox[
      FractionBox[
       RowBox[{"f", "[", "z", "]"}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"z", "-", 
          SubscriptBox["z", "0"]}], ")"}], 
        RowBox[{"n", "+", "1"}]]],
      FontSize->23], 
     RowBox[{"\[DifferentialD]", "z"}]}]}]}]]]
}], "Text",
 CellChangeTimes->{{3.758745204711481*^9, 3.7587452570866632`*^9}, {
  3.758746298940968*^9, 3.758746298941009*^9}, {3.7587463432194147`*^9, 
  3.758746366665205*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "z_", "]"}], "=", 
  RowBox[{"Exp", "[", "z", "]"}]}]], "Input",
 CellChangeTimes->{{3.7587452844386063`*^9, 3.758745294629017*^9}}],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", "z"]], "Output",
 CellChangeTimes->{3.758745295895762*^9}]
}, Open  ]],

Cell[TextData[{
 "And ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["z", "n"], "==", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"z", "-", 
        SubscriptBox["z", "0"]}], ")"}], 
      RowBox[{"n", "+", "1"}]]}], ",", "  "}], TraditionalForm]]],
 "implying that ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", "0"], TraditionalForm]]],
 "==0 and n==n+1. What? How will I handle this? Pretty clear that I will have \
to do it one n-value at a time. So suppose I take n (in the problem integral) \
to be 3. Then n (in the template integral) will be 2. So I can write"
}], "Text",
 CellChangeTimes->{{3.7587453733861027`*^9, 3.7587454679657583`*^9}, {
  3.758745502460909*^9, 3.758745514940357*^9}, {3.758745941616282*^9, 
  3.758746038515791*^9}, {3.758746081835932*^9, 3.7587460849911203`*^9}, {
  3.7587464062077837`*^9, 3.758746406832007*^9}, {3.75874644451054*^9, 
  3.758746444710751*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["z", "0"], "=", "0"}]], "Input",
 CellChangeTimes->{{3.758746087961443*^9, 3.758746098625848*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.75874609997465*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "''"}], "[", "z", "]"}]], "Input",
 CellChangeTimes->{{3.758746106029777*^9, 3.75874611351315*^9}}],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", "z"]], "Output",
 CellChangeTimes->{3.758746116732215*^9}]
}, Open  ]],

Cell["and", "Text",
 CellChangeTimes->{{3.758746126568536*^9, 3.758746126800693*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "''"}], "[", 
  SubscriptBox["z", "0"], "]"}]], "Input",
 CellChangeTimes->{{3.758746132964658*^9, 3.7587461425283117`*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.758746143290853*^9}]
}, Open  ]],

Cell["Putting the lhs together,", "Text",
 CellChangeTimes->{{3.758746170456427*^9, 3.758746175607305*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"2", " ", "\[Pi]", " ", "\[ImaginaryI]"}], 
   RowBox[{"2", "!"}]], 
  RowBox[{
   RowBox[{"f", "''"}], "[", 
   SubscriptBox["z", "0"], "]"}]}]], "Input",
 CellChangeTimes->{{3.758746180139185*^9, 3.758746221517729*^9}}],

Cell[BoxData[
 RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}]], "Output",
 CellChangeTimes->{3.758746223873372*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[TextData[{
 "The text answer is the general sol\[CloseCurlyQuote]n, but yields the green \
cell when n=3. I could write the general sol\[CloseCurlyQuote]n too, ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"(", 
    StyleBox[
     FractionBox[
      RowBox[{"2", " ", "\[Pi]", " ", "\[ImaginaryI]"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "!"}]],
     FontSize->23], ")"}], 
   StyleBox[
    SuperscriptBox[
     StyleBox["\[ExponentialE]",
      FontSize->18], "0"],
    FontSize->18]}]],
  CellChangeTimes->{{3.758746180139185*^9, 3.758746221517729*^9}}],
 "."
}], "Text",
 CellChangeTimes->{{3.7587467739001503`*^9, 3.758746812179071*^9}, {
  3.758746851649549*^9, 3.758746876840868*^9}, {3.758746941678686*^9, 
  3.758747008989959*^9}, {3.758747043997054*^9, 3.758747089529996*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hf", "=", 
  RowBox[{"HoldForm", "[", 
   RowBox[{"Series", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], "!"}]], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "4"}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.758749807778447*^9, 3.758749941463369*^9}, {
   3.7587499737918873`*^9, 3.7587499917496233`*^9}, {3.758750034197852*^9, 
   3.7587500454517603`*^9}, 3.758750216430663*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"Series", "[", 
   RowBox[{
    FractionBox[
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n"}], ")"}], "!"}]], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "4"}], "}"}]}], "]"}],
  HoldForm]], "Output",
 CellChangeTimes->{3.758750217135352*^9}]
}, Open  ]],

Cell["\<\
Except this doesn\[CloseCurlyQuote]t really give me what I want. I don\
\[CloseCurlyQuote]t know how to make a series that looks like what I want.\
\>", "Text",
 CellChangeTimes->{{3.7587474175687637`*^9, 3.7587474246633883`*^9}, {
  3.758749720453741*^9, 3.7587497280937243`*^9}, {3.758750194160057*^9, 
  3.758750202070612*^9}, {3.7587667881658363`*^9, 3.758766814460658*^9}}],

Cell[BoxData[
 RowBox[{"5.", "  ", 
  RowBox[{
   SubscriptBox["\[ContourIntegral]", "C"], " ", 
   RowBox[{
    FractionBox[
     RowBox[{"Cosh", "[", 
      RowBox[{"2", " ", "z"}], "]"}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"z", "-", 
        FractionBox["1", "2"]}], ")"}], "4"]], 
    RowBox[{"\[DifferentialD]", "z"}]}]}]}]], "Text",
 CellChangeTimes->{{3.758738001646367*^9, 3.758738040380127*^9}, 
   3.75873811545155*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[TextData[{
 "Pasting in the target expression again\n",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    StyleBox[
     FractionBox[
      RowBox[{"2", " ", "\[Pi]", " ", "\[ImaginaryI]"}], 
      RowBox[{"n", "!"}]],
     FontSize->23], 
    SuperscriptBox["f", 
     RowBox[{"(", "n", ")"}]], 
    RowBox[{"(", 
     SubscriptBox["z", "0"], ")"}]}], "=", 
   RowBox[{
    StyleBox[
     SubscriptBox["\[ContourIntegral]", "C"],
     FontSize->23], 
    StyleBox[" ",
     FontSize->23], 
    RowBox[{
     StyleBox[
      FractionBox[
       RowBox[{"f", "[", "z", "]"}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"z", "-", 
          SubscriptBox["z", "0"]}], ")"}], 
        RowBox[{"n", "+", "1"}]]],
      FontSize->23], 
     RowBox[{"\[DifferentialD]", "z"}]}]}]}]]],
 "\nso that"
}], "Text",
 CellChangeTimes->{{3.7588105748701677`*^9, 3.7588106129293547`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "z_", "]"}], "=", 
  RowBox[{"Cosh", "[", 
   RowBox[{"2", " ", "z"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.758810605340735*^9, 3.758810633320846*^9}}],

Cell[BoxData[
 RowBox[{"Cosh", "[", 
  RowBox[{"2", " ", "z"}], "]"}]], "Output",
 CellChangeTimes->{3.7588106339002323`*^9}]
}, Open  ]],

Cell[TextData[{
 "and  ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{
     StyleBox["(",
      FontSize->22], 
     RowBox[{"z", 
      StyleBox["-",
       FontSize->22], 
      StyleBox[
       FractionBox["1", "2"],
       FontSize->22]}], ")"}], "4"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "==",
 Cell[BoxData[
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"z", "-", 
     SubscriptBox["z", "0"]}], ")"}], 
   RowBox[{"n", "+", "1"}]]]],
 " implies that ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", "0"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "=",
 Cell[BoxData[
  FormBox[
   StyleBox[
    FractionBox["1", "2"],
    FontSize->22], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "and n==3"
}], "Text",
 CellChangeTimes->{{3.758810666568708*^9, 3.758810733437488*^9}, {
  3.758810987680306*^9, 3.7588110356844482`*^9}, {3.758811070331002*^9, 
  3.758811098750277*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["z", "0"], "=", 
  FractionBox["1", "2"]}]], "Input",
 CellChangeTimes->{{3.758810762383778*^9, 3.758810771132588*^9}}],

Cell[BoxData[
 FractionBox["1", "2"]], "Output",
 CellChangeTimes->{3.758810772782453*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"2", " ", "\[Pi]", " ", "\[ImaginaryI]"}], 
   RowBox[{"3", "!"}]], 
  RowBox[{
   RowBox[{"f", "'''"}], "[", 
   SubscriptBox["z", "0"], "]"}]}]], "Input",
 CellChangeTimes->{{3.758810799285483*^9, 3.758810799427773*^9}, 
   3.758810886411666*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["8", "3"], " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
  RowBox[{"Sinh", "[", "1", "]"}]}]], "Output",
 CellChangeTimes->{3.7588108032234793`*^9, 3.758810887846115*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.758810905796921*^9, 3.75881090940987*^9}}],

Cell[BoxData[
 RowBox[{"0.`", "\[VeryThinSpace]", "+", 
  RowBox[{"9.845342497176858`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.758810909985642*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["The green cells above match the text answer.", "Text",
 CellChangeTimes->{{3.758810935000783*^9, 3.758810942831299*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"7.", "  ", 
   RowBox[{
    SubscriptBox["\[ContourIntegral]", "C"], " ", 
    RowBox[{
     FractionBox[
      RowBox[{"Cos", "[", "z", "]"}], 
      SuperscriptBox["z", 
       RowBox[{
        RowBox[{"2", "n"}], "+", "1"}]]], 
     RowBox[{"\[DifferentialD]", "z"}]}]}]}], " ", ",", " ", 
  RowBox[{"n", "=", "0"}], ",", "1", ",", "..."}]], "Text",
 CellChangeTimes->{{3.758738049477117*^9, 3.758738087826913*^9}, 
   3.758738126443534*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[TextData[{
 "The target expression in this case is confusing, because the ",
 StyleBox["n",
  FontSlant->"Italic"],
 " on the left is not the ",
 StyleBox["n",
  FontSlant->"Italic"],
 " on the right \n",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    StyleBox[
     FractionBox[
      RowBox[{"2", " ", "\[Pi]", " ", "\[ImaginaryI]"}], 
      RowBox[{"n", "!"}]],
     FontSize->23], 
    SuperscriptBox["f", 
     RowBox[{"(", "n", ")"}]], 
    RowBox[{"(", 
     SubscriptBox["z", "0"], ")"}]}], "=", 
   RowBox[{
    StyleBox[
     SubscriptBox["\[ContourIntegral]", "C"],
     FontSize->23], 
    StyleBox[" ",
     FontSize->23], 
    RowBox[{
     StyleBox[
      FractionBox[
       RowBox[{"f", "[", "z", "]"}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"z", "-", 
          SubscriptBox["z", "0"]}], ")"}], 
        RowBox[{"n", "+", "1"}]]],
      FontSize->23], 
     RowBox[{"\[DifferentialD]", "z"}]}]}]}]]],
 "\nso that"
}], "Text",
 CellChangeTimes->{
  3.7588111496683187`*^9, {3.758821203360091*^9, 3.758821253780209*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "z_", "]"}], "=", 
  RowBox[{"Cos", "[", "z", "]"}]}]], "Input",
 CellChangeTimes->{{3.758811165892501*^9, 3.7588111768096657`*^9}}],

Cell[BoxData[
 RowBox[{"Cos", "[", "z", "]"}]], "Output",
 CellChangeTimes->{3.758811178487165*^9, 3.758820844834002*^9}]
}, Open  ]],

Cell[TextData[{
 "and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["z", 
     RowBox[{
      RowBox[{"2", " ", "n"}], "+", "1"}]], " ", "=", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"z", "-", 
       SubscriptBox["z", "0"]}], ")"}], 
     RowBox[{"m", "+", "1"}]]}], TraditionalForm]]],
 " , which implies that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["z", "0"], "=", 
    RowBox[{"0", " ", "and"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.758811189727511*^9, 3.7588112446861486`*^9}, {
  3.758811278962262*^9, 3.758811279665008*^9}, {3.7588212799357443`*^9, 
  3.758821289530073*^9}, {3.758821457623516*^9, 3.758821466001989*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"2", " ", "n"}], "+", "1"}], "\[Equal]", 
    RowBox[{"m", "+", "1"}]}], ",", "m"}], "]"}]], "Input",
 CellChangeTimes->{{3.758811305039414*^9, 3.7588113200121593`*^9}, {
  3.75882130241149*^9, 3.758821329178232*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"m", "\[Rule]", 
    RowBox[{"2", " ", "n"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7588113206211987`*^9, 3.758820847647255*^9, {3.758821310814249*^9, 
   3.7588213299577217`*^9}}]
}, Open  ]],

Cell[TextData[{
 "The way this is set up, both m and n need to be integers. To restate the \
target\n",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    StyleBox[
     FractionBox[
      RowBox[{"2", " ", "\[Pi]", " ", "\[ImaginaryI]"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", "n"}], ")"}], "!"}]],
     FontSize->23], 
    SuperscriptBox["f", 
     RowBox[{"(", 
      RowBox[{"2", "n"}], ")"}]], 
    RowBox[{"(", 
     SubscriptBox["z", "0"], ")"}]}], "=", 
   RowBox[{
    StyleBox[
     SubscriptBox["\[ContourIntegral]", "C"],
     FontSize->23], 
    StyleBox[" ",
     FontSize->23], 
    RowBox[{
     StyleBox[
      FractionBox[
       RowBox[{"f", "[", "z", "]"}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"z", "-", 
          SubscriptBox["z", "0"]}], ")"}], 
        RowBox[{"m", "+", "1"}]]],
      FontSize->23], 
     RowBox[{"\[DifferentialD]", "z"}]}]}]}]]],
 "\nHere ",
 StyleBox["m",
  FontSlant->"Italic"],
 " can only be even, but calculations are not done on the right, but rather \
the left."
}], "Text",
 CellChangeTimes->{{3.758811496855485*^9, 3.758811525157672*^9}, {
  3.758821346913361*^9, 3.7588213672213383`*^9}, {3.758821412839931*^9, 
  3.758821422915285*^9}, {3.7588227204817543`*^9, 3.7588227667749357`*^9}, {
  3.7588236404229803`*^9, 3.7588236426041307`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["z", "0"], "=", "0"}]], "Input",
 CellChangeTimes->{{3.7588113533101177`*^9, 3.758811359330614*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.758811360091552*^9, 3.75882085007469*^9, 
  3.75882144121912*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  SubscriptBox["z", "0"], "]"}]], "Input",
 CellChangeTimes->{{3.758814261712419*^9, 3.7588142693935547`*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.758814270662222*^9, 3.758820853351912*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   StyleBox[
    FractionBox[
     RowBox[{"2", " ", "\[Pi]", " ", "\[ImaginaryI]"}], 
     RowBox[{"0", "!"}]],
    FontSize->16], 
   RowBox[{"f", "[", 
    SubscriptBox["z", "0"], "]"}]}], "/.", 
  RowBox[{
   RowBox[{"f", "[", 
    SubscriptBox["z", "0"], "]"}], "\[Rule]", "1", " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"for", " ", "n"}], "=", "0"}], " ", "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.758820679520419*^9, 3.758820700468355*^9}, {
  3.758820804092237*^9, 3.758820817392951*^9}, {3.7588209233988523`*^9, 
  3.758820927125703*^9}, {3.7588215944957848`*^9, 3.758821615193692*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}]], "Output",
 CellChangeTimes->{
  3.758820703618723*^9, {3.758820818971499*^9, 3.7588208565570517`*^9}, {
   3.758820905185626*^9, 3.758820928228876*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox[
   FractionBox[
    RowBox[{"2", " ", "\[Pi]", " ", "\[ImaginaryI]"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", " ", "1"}], ")"}], "!"}]],
   FontSize->16], 
  RowBox[{
   RowBox[{"f", "''"}], "[", 
   SubscriptBox["z", "0"], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"for", " ", "n"}], "=", "1"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.758820755556909*^9, 3.758820786345922*^9}, {
  3.758821568475648*^9, 3.7588215826587133`*^9}, {3.758821629041026*^9, 
  3.758821650624741*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Pi]"}]], "Output",
 CellChangeTimes->{3.758820787234275*^9, 3.7588208680959873`*^9, 
  3.758821585939562*^9, 3.758821656252905*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox[
   FractionBox[
    RowBox[{"2", " ", "\[Pi]", " ", "\[ImaginaryI]"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", " ", "2"}], ")"}], "!"}]],
   FontSize->16], 
  RowBox[{
   RowBox[{"f", "''''"}], "[", 
   SubscriptBox["z", "0"], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"for", " ", "n"}], "=", "2"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.75882094371124*^9, 3.758820957341008*^9}, {
  3.758821665680524*^9, 3.758821702383195*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "12"]], "Output",
 CellChangeTimes->{3.758820960206647*^9, 3.758821679900762*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox[
   FractionBox[
    RowBox[{"2", " ", "\[Pi]", " ", "\[ImaginaryI]"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", " ", "3"}], ")"}], "!"}]],
   FontSize->16], 
  RowBox[{
   RowBox[{"f", "''''''"}], "[", 
   SubscriptBox["z", "0"], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"for", " ", "n"}], "=", "3"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.758820979645733*^9, 3.758820983276276*^9}, {
  3.758821755205871*^9, 3.758821784404758*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "360"]}]], "Output",
 CellChangeTimes->{3.758820985039056*^9, 3.758821767431329*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox[
   FractionBox[
    RowBox[{"2", " ", "\[Pi]", " ", "\[ImaginaryI]"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", " ", "4"}], ")"}], "!"}]],
   FontSize->16], 
  RowBox[{
   RowBox[{"f", "''''''''"}], "[", 
   SubscriptBox["z", "0"], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"for", " ", "n"}], "=", "4"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.758820993549039*^9, 3.7588209980437737`*^9}, {
  3.758821793868701*^9, 3.75882181989963*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "20160"]], "Output",
 CellChangeTimes->{3.7588209999171753`*^9, 3.7588218040607758`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"dirk", "[", 
   RowBox[{"n_", ",", "N_", ",", "z_"}], "]"}], "=", 
  RowBox[{"Sequence", "[", 
   RowBox[{
    RowBox[{
     StyleBox[
      FractionBox[
       RowBox[{"2", " ", "\[Pi]", " ", "\[ImaginaryI]"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", " ", "n"}], ")"}], "!"}]],
      FontSize->16], 
     RowBox[{
      StyleBox["D",
       FontSize->16], 
      StyleBox["[",
       FontSize->16], 
      StyleBox[
       RowBox[{
        RowBox[{"f", "[", "z", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"z", ",", 
          RowBox[{"2", "n"}]}], "}"}]}],
       FontSize->16], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "N", ",", "N"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.758814913071535*^9, 3.758814919157856*^9}, {
   3.758821963584879*^9, 3.7588219641995564`*^9}, {3.758822026295628*^9, 
   3.758822026581676*^9}, {3.758822090147814*^9, 3.758822117675028*^9}, {
   3.758822174801585*^9, 3.7588221752892447`*^9}, {3.7588222063922997`*^9, 
   3.758822223639741*^9}, 3.758822264798871*^9, {3.7588223203108997`*^9, 
   3.7588223220209913`*^9}, {3.758822371235591*^9, 3.758822379659109*^9}, {
   3.758822825183317*^9, 3.758822825573811*^9}, 3.758823032655945*^9, {
   3.7588233630563307`*^9, 3.758823375077026*^9}, {3.758824500562998*^9, 
   3.758824501146933*^9}, {3.75882453455375*^9, 3.758824535721689*^9}}],

Cell[BoxData[
 RowBox[{"Sequence", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
     RowBox[{
      SuperscriptBox["Cos", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"2", " ", "n"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", "z", "]"}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", " ", "n"}], ")"}], "!"}]], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "N", ",", "N"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.758822323607382*^9, 3.7588223806793947`*^9, {3.758822826941367*^9, 
   3.7588228492702103`*^9}, 3.758823034429636*^9, 3.758823376730196*^9, 
   3.758824502713513*^9, 3.758824536632409*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dirk", "[", 
  RowBox[{"0", ",", "0", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.7588237056081333`*^9, 3.758823715282233*^9}, {
  3.7588245072917223`*^9, 3.758824507506062*^9}, {3.75882454060913*^9, 
  3.758824541097156*^9}}],

Cell[BoxData[
 RowBox[{"Sequence", "[", 
  RowBox[{
   RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.7588237169559383`*^9, 3.758824509016203*^9, 
  3.758824541989139*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dirk", "[", 
  RowBox[{"3", ",", "3", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.7588219905225353`*^9, 3.758821993511444*^9}, {
  3.7588223883145523`*^9, 3.75882238885044*^9}, {3.758822808200481*^9, 
  3.758822808501745*^9}, {3.758822855540546*^9, 3.758822909746621*^9}, {
  3.75882340831736*^9, 3.758823409667622*^9}}],

Cell[BoxData[
 RowBox[{"Sequence", "[", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "360"]}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "3"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.7588219943959007`*^9, 3.758822030908383*^9, 3.758822121549203*^9, 
   3.7588223900313683`*^9, {3.758822809788342*^9, 3.7588229108065023`*^9}, 
   3.7588230377546473`*^9, 3.7588234112504463`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dirk", "[", 
  RowBox[{"4", ",", "4", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.7588230647674713`*^9, 3.758823065037784*^9}, {
  3.7588234183395233`*^9, 3.758823418555379*^9}}],

Cell[BoxData[
 RowBox[{"Sequence", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "20160"], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "4", ",", "4"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.758823065979121*^9, 3.75882342001363*^9}]
}, Open  ]],

Cell["\<\
8 - 19 Integration. Different contours
Integrate. \
\>", "Text",
 CellChangeTimes->{{3.758738175033266*^9, 3.758738194399474*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"9.", "  ", 
   RowBox[{
    SubscriptBox["\[ContourIntegral]", "C"], " ", 
    RowBox[{
     FractionBox[
      RowBox[{"Tan", "[", 
       RowBox[{"\[Pi]", " ", "z"}], "]"}], 
      SuperscriptBox["z", "2"]], 
     RowBox[{"\[DifferentialD]", "z"}]}]}]}], " ", ",", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"C", " ", "the", " ", "ellipse", " ", "16", 
     SuperscriptBox["x", "2"]}], "+", 
    SuperscriptBox["y", "2"]}], "\[Equal]", 
   RowBox[{"1", " ", "clockwise"}]}]}]], "Text",
 CellChangeTimes->{{3.758738204295933*^9, 3.758738256368578*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"p1", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"y", "/.", "\[VeryThinSpace]", 
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["x", "4"], ")"}], "2"], "+", " ", 
         SuperscriptBox[
          RowBox[{"(", "y", ")"}], "2"]}], "\[Equal]", "1"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "250"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Re\>\"", ",", "\"\<Im\>\""}], "}"}]}], ",", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", "2"}], "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7588247061112213`*^9, 3.758824745939296*^9}, {
  3.758825001581129*^9, 3.758825008859234*^9}, {3.7588260873724833`*^9, 
  3.758826112785892*^9}, {3.7588263570681353`*^9, 3.758826364586425*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p2", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Tan", "[", 
      RowBox[{"\[Pi]", " ", "z"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", 
       RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.758826031754319*^9, 3.7588260596030684`*^9}, {
  3.758826092786572*^9, 3.758826108097843*^9}, {3.758826316598412*^9, 
  3.7588263532984667`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"p1", ",", "p2"}], "]"}]], "Input",
 CellChangeTimes->{{3.758826118029894*^9, 3.7588261290663757`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJw12Hk4Vd33AHDK7LpXJVQSlblQIkTnvFIiU1JEIZWSEK9MIUVFGQpJMlRI
pCiUiHVMyZRMlyuueeYeIoT47vd5fr+/zvN5zrT3OXuttfeWtHc1u7iGjY3N
np2N7b+jIiY8trpKI/Q2qwT6f94L5ldkQv4s0oiF82HZx1kvwPexuvTMbxrx
DWNzi7XKgOeEfsXEFI2IO7LlO4WSDVXjVvZD4zRCIFbWV2TiPbCEr7L1DNEI
zrl/X7Xz5IGQjn8So5dGvJtr3BI4nQ92cckddW00Islu2+F75p/hbnmO99cm
GkFnV+Jp6iyELFapMFFPI/SlZNbnmHyBBd0Bs9xyGuFZ4bdvlQ3g0bRs7dNs
GmE1/Vg8vr8UCsQ0HaMzacQla3nTRtcyYOod4w5PoxGhArd2Dc+XgXyS86HA
Z+h6Y/0ff5fLoczgQ5HDPRoRvXaqYby3EmZTDmSp2CJrXlO6r1UNmxsMDXZb
0YhXBg/Ovk+uBnzx7Ij0SRrRm3uTzYS9BsJNA3duPkYjjLTMPygTNSD9tyKB
bT+NEM9iJUkp1oHFKePweiqNYFfQk+pt+Q4Bt2wVqnhphIucS4iLVAOkZl2r
JjhoxPRbkyaJ6w0wtSaaM2+RSvA+VK7i4v0BIdlt/vFDVCJ+lJpn/uIHFPKc
c7lUQiWqrzt3PSlthPruU+2zBVTCwyLFQma4EXo+GurczqUSW5ckhOwpTcB1
UV048TWVGBCTtOs92QRmpbSSpigq8cXtqsGBwSYY9ykROHiJSqxLGKd8nWsG
sfEtb4UEqcSFlcGFpclWUCpbJ/KSj0r4yjIOVfDTQecp9y0lTirxwODNbls5
OlzWmzE3WBQg0o07smgX6JCfUrN8c0CAyNc5xObSRgfjMz6G4wUCRKg1rTD9
YxvcrKePl54TICyknNYmWTGgpz2IeHNGgAgfVN4v5c4AnQHlx48tBIjEM1o5
UaEM4Fq6f9DRSIDYbLjxgWQBA8JksUeCGgLEs7zoY8JCHRAflK5mKyhAyN3P
PRdd1QF5Gt63lksohKa72Fl78U4YTdsksl+MQmTQPqavecyE7/Z9npoiFCLp
216T4+lMyNv2hq69nkIYm9o0PvrMhICnWrG6PBRi2oZaM9LFhPXhthvNZvkJ
qjWH5rRUN2h6pG1wruMnXFLTwwNzu+G+zh7BFD9+gphXT3pi3wPy3Ud5aV18
ROotaYeL53shdUPKLOM2L6FyxKvD/ng/lFvXhAPGQ9QsziVa9g6AWLKYRFwv
F/FaOHx+2GYIjh2y9mkO5SSWJSNi4zKHYduSQ6CcPgcRVt774RmMwO53iYHu
k2uITdirhlP1o9Dj8UKR/pqd8H26jCVkj4FjwqOUhCtsRGpSRTrDaxwsA07v
yNq+AnUZubs5D0yA7LictXnSEpwPoMv+7poAJ2PTO339CzDgMqIoemMSrP41
0VZTmwPXh1JCP9awIBpGTOHjDKStvbT5nRsLsDXtpxTZp8Hi3y0y4QwWDMnY
jAjOT4FabGfIdAcLIowGfGYmpuC+9hmuk50sYMZNJRS0T8FLzfUnN3WzIECJ
t18nZwpaTN/rPhlgwZczmq4WtlMwUrXr3mWSBR4uGjT2GyQwtkZcOsdBwpX2
smtpMxNgwPO28IMCCc7N58o/o3bv4hhYmt9FwrXvbMLfqyYgQuGohpYiCV4V
B4vmnk3AyZvCGaXKJATnFHIe1Z2A91KadoQqCUkhH+LHYsYhMe29XjhGQrP6
ywoltTGIvDJYf9GMBLrKPyK6EmMQJt/UcP8ECR2KPY6WfGPgeiS98Z05CT07
xWm3mKPAd8K3deYUCSzB+NNNd0dhqaa2x82aBJ7RRyyPthEwiVndevACCVpP
b4kWeg+D+RjXhMh1EoysIp/sOz8M7UJttqKeJNhsSRTONhoGI8p8t4gXCTcT
C4RStw/DGe4gTiEfEspekIIRdUPAOGA8wuZPgl7mWV57iSGwDfSWeBtMglmR
xiLvtwGQ3Hx01iSahPN+ej7BHwag65f41r0xJHhon1xYSRiAS+1L5hsek/AY
rs3NuA2ArLbor6ZYEtrL0391bRkA1fO8A0fiSThbt3H8vWs/pJiRn9hfkHC5
a/rnaZE+mM2lppa/JSHXtZPzyNo+iPsSm+P7joQV9iqlvWQvBH5ynlTOJiFG
OiGIr6oXgq/hC/E5JBCuRxSKPHvBIXX5xMVcEkTXPPMVo/cAHpev1FxAwkOj
kL0lct1w61hH84ZyEqTdz96NZe+GMvmNHO+Rv8Tu7XBhMEH7r7aDUQUJI92d
t7aFMqFzPoQIqiQBd9/TGDjSBd08Rt+HqkiYiu1wPZTeCWdTEy3v1pFg0rPr
7bedHRCQH3xdoZUEwwsydtgfBnxz4FxbiGwwIrnhYz0DZqQHkvXoJOhOCfuk
eDJAcHSS266NBHU29sMB39rhp1JY1B0GCdslWjtVrrYBqeSTkNJFwrbUhshM
vA3cQh9I7WCSICZboyO5sQ2Nl8KSF8giyvCaWkKHmzefSiZ0k0DBMzxGaXS4
oh6VeaeXhN+2/pTk3BYYfQ9NCoMk/Or3go0hLSDzNNU+AXnqkrt72JkWcLU2
XksZImHM9VK7D+d/50W8RpCZN4+nmls0Q4x1hFzsCAnfkqW0+JYaQTl6T1nF
OAlq8KxtLPg7sNMFV12mSdhM4RhNUvkO4lHeh74g/7W8umjWVw9nuHQKeH6R
UPFLa2sRVg9Nx9epJCOfkGbaP1ishcxw3KVsBsVbuARL4Vo1+I+lrfb+JsG8
I2S1W7waRoYJw+1zJOyXmRaMqf8GQfrRNeeQV4hSlWX5b3Dc082SiRw2a+9T
N/gV0tJji+vnSciwTuNwtq6A+F7H93f+oPOvBYQl+SrA02kL5TPytd/XZVoL
ygHfWvNkHFk98oiBtnA5uGKKOsaLJHwtG44UaCyFgT/e/bxLJGTSTF+U3iyF
K29vfFVDDj9T8OG6YinI+sV12CObz4W0dj0gwPjz7tgC5K8nzNXOhJfAVXsJ
a6tldP3kztMVY8WgRDWuCkQ2v/f7xq6jxdDZ9u7CK+T+wtjS5TVf4PKWjSok
Mtt2hmGi92e4bUqIe/0loaoow5WTXgB9R5qFniBHnPSNclYpgHRXRa2PyGKh
W9q1WR/BvOCr+C9kjamz55nn86DIoljFboWEq4Wpo14VueBhuEnNBzkpeNx1
nVQuWE20uT1CXrvJx0936D1c2hX8GJDV+mEN88h7KJe57t+KfPktV6hXeg7k
BTckjSE/DZJVONn4DtJ9v4avX0X/Q+Tj/pCot7B76aK1FLJ91iHdohNZYJbl
Yb8feVerzVlJegbc/DEgdhr5keOEo/mT13D109Efl5Hn/vp43rNMh7KPEsVe
yIT048jJjlS4q7fnUDSyVNH2BImEFNBnOHUmI983yXl94uxL2Bosnv0GmezX
zr8r/gLW7zQo+oicPhUb9C8kQ9Vdkq0U+dqmDwmMfxLByYkWWIOsqVOfj1XE
A9zOVG9G5nAa+Z52JA7WuZbK/0T+Hr12hL/6MehWmJ/qQ477Is7ufiwaqrgv
Fo38179Bjc3t9Q/hec6v0yxkC7FMB7/nYWAns7JnBnnMuSfuaNo9UPp679A8
cgAI1wpl3oby9siIReTt2+MXS8/egIsJwhv+IutXctlaXXIDEhNrXPmv/y/q
BWrLz0JD//Nvq8hHU1aJVwq6GHt86p//HPzSYbhg/jIm7CBz4T9veXeEpuvu
ie3VluP5735fTufWk/sCMS6uzMEl5KFctZRQpTsYIy5jeQH5hD2bW7H8fSwI
ZIx+//c+wZqD01KRmLPqzrYp5Nhu/btRglFYVHpS/Dhy3UdF510RMVhAXuyT
QeQ1ERvMv/I/wUwm+L8zkdUvLmjahT7F8n781W5DdtXqklzkSsBYLU7D35Ff
bSjjiQlOwurOnqypRHa53jwvfOs5llP6eagIOdWwgJmz8hIbUJiqTUPGCuSb
/LVTsapYIuYpcseOxEoDvzSsLY3nSRiy4NKtrIE/6VhDx5LeNeQ3DrPJ79Uz
sMrp1Dk75CNNDtEBXpkYe2Qp0xTZP+OYr+jvLCww2dRaEVl0Y4nzoMo7DHtI
kFuQ8wKVz31wz8bU1yQX8yD/fsO3U3ohB6NXvuDsQeNdIYjkI67nYmzSMUfu
IJ85sIHn7fY8jHnpwN0ryGEzapzxDXlYj7lkpzEy63zA6r9yH7GPL5NrhJA/
6ArMynQVYH614h8eo/jsX1aeFrr/GYvO8Uj5F1ko35zFvr8QExGbzTRFvi6V
MPLzYRGW63l+mRtZnUuhK1K3BDty6c1rJ5QfHEuMO/ymS7CTGr8NdJDjPd3b
HJMAG7pkvFYUOWCmc0TSj8B89SQ+EigfdZ/f2b/UWorJp7Tt4EZ+qZvblh1a
gckcXN1yGeW/QonDp6R7KrD6PtutysjNy/SWBLVKrNIjbN/8AoqP/MXG0P5K
jF6qmnob+aKUTt157SrMW/NASATKt7JcjYTIdDWWPWJn44vyN95nj0Xo1WCJ
tbyFKsinS2aLOZJqMAlSWmFiFsWvp2jRtEEtNqybZmSFPDFkm1+bWoc9b2CL
VkD1ILuKlXHTsgFrunZx08spVI9sBPyVMhqwavMnQWbI1DkF0+4/DZiJlLzk
GmS1qH03ko1+YCsWVnM2JJovEG6Sq6wfGN9udR4ai4TjWyecS/Y0YTKhJhVH
Uf0auXzDQtiqCdP98vTcxBgJgXl8/7jcbsLkZzv3RCLnHJMTEm9uwqrM9jo1
jaL3+ToU+ns0Y7tumOImqB7W0Hu4tD+1YOWbB5y3o3pqv/3aVEx3Cza112z/
5wES/jivMia4W7GT6f+omCDLcoq/TbBsxdZHBpd595NwT8X6xPKfVmzj4Y/a
Zahe6z5sTS7SasM+yXgkK6L6Xqxfo65ZxsCCWRearqL5A0t1X/nMJAPj29rS
xkTzC/HtSUZvN3VgogcixkyQAxbd7CXcOrDUTTn7lVrQ93+zKYxL4ieWr465
9jWi+ktx7G7y78Tm9Yf1ttSj9jdw33XS6Ma+ND3SppeRsFjkJih1sRvztBlu
lEOWf/0znvmwG7vBKnPzKyXhQWB29vGRbizOrb5ZnEDxHPdm4tmxHuzHQY9t
lsWoPuifEL692IMtPu76mvCJhPHMl47Gln2Y3YHhbuc3KL93XF5T6dyHbbhs
6vcqE9U3fqVnB4L6sE53XgVmBgnCTkV1su/6sMzwnWDwmgQdhRaltRz9mG89
PyGahvLvG865T9n92EHDIqGQJPS9si7fluQexOZo9XdyH5KQ+Fbx2Wz+MMap
Y7BFwx3lF4po6J/qYWzD7ozdem4kHHRi91rpGsYcBOquml9D40m2xYyHawTb
vHOd21UXEiRSffjETo1gW0v8IqOuoHwUX+FzaG4Es08tWv/JnoSse1aWUWpj
mG7MTJodms9/OXd3o/KnCUxDNMBijxJaVwh2NQ/WTWCbPwsvT+1G/QWVqGd9
E1hE5cSLbLSeUBbvpXJTJ7HAwdYpOXkSUjoO8DAvTGLeivvj1kuheDgxvfhg
PQsrWHoznbuZBMvDZ3qGnUnsi/XghConyudCT1tN1k9j7c/dHii1saDuR4tu
U/wMlnXv86CSJwvcavdLRwrPYR8oL9Nf8bAgtUF3o8O3BWyznNrT3sBJCMv6
9JrbcAlb6RyICpyeAPboFv1yzhUs8XCk3yedCRDJeFOVepQN92U7askXNg70
9MAdnCHsONe9d8VqlWNg/Ub+rnvfGrxQM2/0QusoaD3jPlApxYE31L0U8egc
gf7Iz3M7gznxnp3H1pVnD0Pejpvjkp1c+N9V709+F4agJ8VrL8dWHtzpfvMO
J95BaJI9HDjjzYsfzZwadLHph23xhyW+FfPhgs1sKqeje8FuLGO4tIwPr/dO
q6t40IvWedTsoio+vDjqe55CcC9I/6RrZzfy4eGcMpbjHr2gKHbZOnaQD2/f
wKu151QvaCXdj70gwI9XLAg1NIr0gtXLBgr7WX6cjVnhpPqkB2IzT//RWObH
a1XoRABvN4wbM2aT2Sn49uv/2K78ZgI+YznFyU3BjZmiw859TBg7YDncuI6C
r4vhUxcrYsLB+lOtjjIUfNaw5soHJyYMkifePzWj4FJ61uyvq7tgn6qx45/X
FLwnvf9YvlcnhDLqL9i+o+Df+vYmTZ7rBKa/kV1lLgX3inOkrjPshJCvhhaP
Sij4HqvHd0QlOqHT4thhuRYK/nAyy2hn1U8I9j0qeXoVtSfOyZlt3U9oBh1G
wUkBPL06mFsiigEdSvxXyqwE8NW33H9/+zKgJ7l5sdZWAD+k2vnjw3kGTNy8
INbtKIBHBnctd+9jABd+15YzQACXjRP1Z6O3gwZRPXj8lQDe+budX3hDOyQT
pr/G5tDzz5tIiHjS4ZXypqDZJQE83/Wz8Q5rOmQ9792wwkbFRc+56/HhdCgI
dFddx0/FMwrXujvw0qEJj/Hev42KV3aeZ+rFtwJnadtKkB4V77D+U7AjrwWc
Sm34t8ZR8e6Leo0/y5rAPpkR+yWRik8+fmvKldQEVv7m28+kUHFlPdU7Pd5N
cFTDQOPZOyoe2x1mmbC7CXa+V720qZKKK3Gm0eajGqHzOaV84y8qvuPio420
Yz+gOeCecf48FRfQpG7YLPEDas6s6TD/S8Uf7DNfNhttgALRhaloHho+uFw7
dF+9AWIe9ouv30bDY0d3eAxV14NhYKEv1ZCGr+fQUTZ6VwOHbFS53h2n4evE
8KrBQzWgqZXzyMiCht9likNeWzXILqS9DrOn4YbzrNtxf74Bx7VHdD4fGi6X
azDrtKMKlowo9pkBNNzhPv+u/PSv8Evh3qR+MA1Xt7y1SVXuK/QM+3GERtLw
Qy9uDtB2VEKx7eW93K9oOOe6M0+kxssgT7u/+NUbGu66eX+CvFkZZG2x0T/y
nobXRnO3jeaWQnzbCbs7X2j4QpK/kdJFAh7lfx/fWUbDl2N277F3AAiJ1veq
qKLhhwVkK5Omi8HTBItY20zD7QZ0g/JqCsF5d+GmlHYa3pl18DVd8DNc4FdN
02HS8AP+t/Z3qX4C69Fs5b5+Gm7Wf6JZZE8+mFXJf7k1ivw9WXbP7w+gn5am
J0mi+92v2RQ45QAeJNFMzNLw8nB27s7GTNh/7pmN3SINd1+IUKuffwn/tx+M
//9+8P8AA6Qq6g==
      "]], LineBox[CompressedData["
1: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
tzlMhXY3AbXP8MDHAQr+2K62T3A2w5nE/ynqY8uwi72LMm6GDUG+pa79FDxS
ND29/KcZNh7LUyvFea3xrDmm8HArfJB2jpHH+V50okpFtbQdHkxeabiJ1w+T
SvvLZn62A/eWplYmXl+IbYvWfbepA4QOBY7pY3suOlqKO3ZA/KbMAwpN+Pmn
bnrKIf4DclXAvq8e5y/teneDRycsnBjWEqnB91/H+dDmYDd8aniu1lJKwWKh
I7+kVTfcMhuu34ktm/QjkvmsG9wnSx3dSyh44pWRcWqkG1461jSKkbiew1Mn
Xp3sge9HnLcaF+F8OHFa8P5iDyy96Poc9YGC8ZTY63rGfXDp0HC3bSru7x3X
1lTY9sH6awbub1NwvvEqvDrk0wedTtxyzGQKBG0Kq2XS+yA5YAfSTqJAXa5J
YS1bP7jV8JLCCbj/prLPf8joB9ApFPCLxs8r7dp9Cc5BmGPUPMh+RsHrd/Kv
ZnOHgU1dW+SgE+4vNGH/P1+HYcPu5N1ajhQcsWF1WekaBmu+6ptGDng+yTQZ
cnGMwOYd6xxv2lEgHu/GI3p2BMSK3YOCb+B+FFnudnR+BC7FF67/YElB2iMT
42DlMTgaOpNggdfzny493LjnwwSoCHue26tAQTt/V+Ng9QRs/ii4PLUbjxcp
Br/qm4DAiok3Gfh7Yo9YL52T/hO8B5undspSENdxiIt55Se4yh8IXy+J6+H0
9OKT9ZPwYSl1OnszBcbHLvQM2+J5YDo4ocSO+7lARLP++mlo+9fxiULrJFR/
b9JoiJyBd48+DircngTHbwekggTnIYsWm/iWaxLi6zQ2Wn/5DSI7lSN6vX7C
07QPSZw6S7DSORDsNT0BrCFNJ8rYVyD6WJD7B/UJEEpOrYw/zkK4sRw35nk6
Di2JXtvZ/VgJjkfpRcoVY2CaKvvQqW8NUaCaM3qleRQOv+I8VCHJRtRVxwo5
d45Af9DH+R2+7ETvjpPryjKGIWf7vXGJTg5iZdX1g/uVIeiJc9nHtoWLsHnc
uN2GexAaZI55zbhyE8dTpgbtzPpha+Qx8S9FPAR/I4vi+ZBesBhLHi4p5SFq
XBOqy5/0QqwqPaOwkocoCq7NkfPtBakfLWoZ9TxEALu08bhzL8iLXjMNG+Qh
2jdwH957thcORz8Ou8LHS5T/FqirF+oFk9g6GutFXoKFWW6j9LIHwlLO/zm4
zEtUK7aQntzdMK7XPhvDSiO23fqf+cocE4gZ4yl2ThqhyxQetu1jwtgh4+H6
dTRifSiPimghE47UnG2+Lk0j5nSqbry3YcIgdTorwpBGSGmZsiZ97YL9SnrX
/yTRiJ7E/pO5Lp3g315zxTydRlT27Yv+eakTmB66FhXZNMI1/Dp9nU4n+H3W
Ofe8mEbsNXnxQFi8EzrPnTy2s4lGPP+Zpruj8gf43jkucX6VRuiF29iyrPsB
jUi9Pf8MH5H41ZdTPLgdOhR4b5Sa8BEs6Zx/5+60Q09M4+I3cz5CQ6nz+/vL
7TBx74po93U+Isi3a7l7fztwEA/N2T35CJlwYQ+WljY4SH4dPPWWj/gx18Yr
uKENYkiDX2PzfETSZX1xodst8HbPJp/ZJT4iz/6j3nbTFkj7t3fDCgudELrk
pMVDtEC+l5PSOl46kVKw1smauwUaiFDXA1vpREXnZaZWZDOwl7Su+GjRiXbT
P/nbc5rApsSMd0s4nei20qr/UdoAljHtYZ9e04nJF+8MOKIbwMTDaNuFODqh
oKX0oMe1AY4f1D74Kp1OhHU/NY7a3QA7spSubqqgE/LsCYyF4Hro/JdWtvEX
ndhu9Xwj4+R3aPR8pJe7QCfoqvQNm8W/Q9WFNR1Gf+nEk/1Gy4ajdZAv/Hsq
hItBDCx/G3qsUgehz/rF1m9lEGGj252HvtaAjlfBHboOg1jPpr5HN70Kjpop
caSfwhYlKgePVoHq4cznuucYxEOmGMpp/QoyvxOSnloyiJMLk/fD/3wBNofn
LTxuDEI2W3vWZnslLOnSLFM8GYT1Y95duYmf4Zfco58nfBmEirH3JqWdn6Fn
2J3NP4hBHH1zb4CxvQKKzK/t43zLINjWXXgpOV4KOWr9RW9TGYTD5gNRsoal
kCZidkIzi0FUhXC2jmaXQGTraYsHnxjE72gPXQUrEp7n1o7vKGUQS6G791pa
I/ALOeFSXskgNPlkKqKni+C2PgSubWQQ5gMaPjlVBWC7u2BTXBuD6Eo7ktTC
/xGu8ColqDMZhKqH94EupQ9gOpqxp6+fQRj2n24U2psLhpWyn7xHGcSp2hiZ
vXPv4URCgpYExSA6nRzM8m0ygfARbyRnGUR5ACtnZ30KHLj0ysxikUE4/g5U
rlmIhf/3P5j4//+D/w/gmHjh
      "]]}}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwliQ9MjHEchy9x0fq9b8nfuBUqyVzWMSnrmzNXo3JOylK4iDIkomg6Yus0
F8mhxK0uTRKbdJo/5xstKpeK5QgVp2u9rX936e6Sk/lsz549+yyISxLFT2Kx
WMsn+GcuzOq1WmnkFwiafqwsCozYv1hqttDIyxUsCs6TwEm5n6dhhEZHiWnt
qbyL8JqJjutmaExR9H0UyBWw67ri89uPNErVrod7Ch9A7pBXY/4DGsMTYgO0
T1+AURlwj7eTxqnZpbfDOM3g8i50w7JoGisE6d5flc0QZInt8dxK40KXufaj
3i0gE552d9lIY+19ZdNX/1bwHK8tZK2iMa8yJcsu7gNERYbLNBSN9ktKa6+1
auHJVPGhfWoKxTljWumKLtB0RGqN1RRG8dKjuLIu6FSF8jMrKRycn/a+pLsL
2PF+s27eoVBlTTrHKfwOohpa3XqZwtSr0l0jTjpgTqhJ4D4KRx3SMyt89PBH
+Ci1UUyhJsfxoOq6HqZ73e3aFkPhcZvJ9Q62PeDXJq86upnCkC2Jtxvae+Cc
78HYsgAKs0Xuh57f6oX5zLyKGY4U1hH5XsmxfvB56TS72J5CkZmfxTb3Az/f
7ozPFArPl9Y1PMwYgIRgQ8QGC8H2wTBlXMggVCkbfkt0BHfbtpsmJw7Bm5O4
l3QQDCrfVHz80RB82axqLvhEUFY13Cq0GYZJrOKSqiaCArsjx44qhiE85kQo
U02wpaUumT1gADEvSZVWSdBgaN4ZFmyEFPt4N/Z9govcyhamFRmhoFpodFMS
zOCVCOq2j0D3DK/CSBlBbo2+4kbvLzAzHLYui2C/r3iOKGIUHF45H07OJMgZ
yPYowVHwTbauu5BKsFERY7pUZAKJpo2pERN0rcyPXiq1QKf2LJbHEEz7tsco
txkDvm65XB5FsEO9f3Vgxhiwx7IDE8MIzvbfw3Se+Q0JbD/nLSETv9m7bdm0
cah3+qlfs46gps/3deyVcbjgBbmOqwmaPCSWJY//QD+vL97CI3hg5g+9zyYr
CCHfX8clOGUH91kfYwVOfbvr+olm/V/QXyj+eNg=
      "]], LineBox[CompressedData["
1:eJw1lHs01Gkcxqet31x+U1QiUaJdiYpkqEH7zlYrkRUVQrlF63CQ1iVdRO5O
5XoSnXXdSXILXVC939Y1Te7GjiwRUu4TRjMaa8+efc55zvPPcz7n+etRc/W1
dv+OQqHYLPvfDHBXflzdRgLlP4F/uPSpVwMJlucOkiF1UlypXuHR+IiE6MFN
Jxu9F3HcLZckp0ISIv00kxMHJNhRJPNynkvCDm2Pdmt7Caa89pRXv0fCOlt2
0ne2YmzqvbU2LGqZRz6wSwxewEpdvCnFMBIeURZY1+gLePxAiHLpZRK4E1Nh
uzNEOEG2y7/Pb5m/umutU+M8/qssTs3IgYQnYse+vWgOFyjvt2g/RULLsGuZ
+eAsvhIxHOx5nIRJC0t91+hZrGrDab3zMwm1QdVzRt1f8Pmvc9dmdUgYv5CV
8iJeiPe75hbEa5EQ7360o9tYiMk3x/nb1Em4a6GU6j01g4vvPdxtpURCWFme
T5vdDJ5HLr1Fq0jgWQsFbKNpHBXFY58XMKB5plh+p9c4tpu65C7tYMCekjct
gcIxrGWnkZjazICbs4f0Qi+P4WbN8NGaGgaoNVmO3076jOXf7rujWsyAQLF3
hlXHKM6Ty50VhDNA1ChxK08dxrWltPi3VxnwJ0/g188exsMW3mqvghlwKk1S
L+kbwttj9H/J92FA5g0af2znEM5fbLgfaM+AJq1UhRWtg7hweNxebi8DfD2i
1nOM3+OKpwavjg3QYRM/3UeL2Y07T2bYcnrp4JE38MHwCh/PzSxN6HXToSVi
xeS6yS5ssOu1kvJbOrAgeuNiRyd+luXw26dndDhz9qNENb8dP4+9rhGVQIdq
E2HiVwEP1zg03cSIDrqKg1u0t1Ti1jy5aRNDOsw/X2FvKXyC+yYcrZtZdOBE
/K5u0liBF0KnFP7WpEOhr1WPa2Ap1s7bkCWWo4P2rl7mzXOZOH38bJn+KA10
L0pX+T3KQX5Xv/AfJtDAiSW9wpCrR9fqjdl68TSwlE+ozdNuQPGyURlVkTQw
R0eUtpg3Im62ovPrEBpkRf96uj2qCb2rO/Bp5BwNVi6o66SSLchEJkaixqYB
q0xgrKLRiTZnblZNG6DCBO90+YYNfajobtgadi8VaBb7POIq+9CPKSNiAZ8K
pvYQe9y5HznFlnYp86ggpVWJxXbvUc7Fw/GZT6jwwwmzGPfyAbTD1HueG0+F
u4peDe4JQ6jyYNuHI1FUCN3OEx6ZHkJmBwzaRq9TQb/ggjHLahh57aUUagVS
QVMlO8JMYQQVb05xKXamgrdH6oBt8UfEmqnmPdanQqCm0bafVMZQ3Zhqlc2e
ZV6JRzszeQzZjETeF2lRge3RoRLOGEdB7yzD2apUaOG79NyXjKOqug/7XpBU
IH3SHP3nJ5E5mKqfJaiwljVipBsyhXqritYvLRFw7LMpl0mZRt9KgiY4cwQI
anCRVew04qQzc2v7CTBusS0PLphBbSl+Ce49BMgY5OStmZ9Brre7rlK7CGiv
8+1nHhKiGxGZdqZNy32X6gfBA0JU76Mnw6sgYHUQLYmrO4tsPNMk3iUEiCLc
dOTjZtFHt2+jawoIYDJH+eeHZhH9dEONZSYB33pWi4nMOWR+yOFSRywBaou+
j4O1RUjLP6itNYKAjmkt2e8TRYjMTtZsDiVAYWV2j+y8CDVK3wgaAwgYdTOS
lW1YQCZVxoYvXQh45XnMNTxGjNQ/2SVVOxKgYTbtu5EiQasUAz4/syVA1kmZ
2RYiQTUBRenlFsv7mc5yh0MWEUdXRZLPJiCyvmCh4A8p2upseILLWu4z8gsE
hktIesvmYa4OAXJcUUly5xIyPJODj2oT//8p5x+nNrow
      "]], 
     LineBox[CompressedData["
1:eJwtlItXTHkcwO+98qakqNVDCeWxFL028rNCkVKY7SHlRFFSy2RDZNIbPURJ
2hIqLBVNTS99fyWsXswcUlGqUVLba6ox3Zk7s7tn93PO53z+g4++d9AeH4og
CLd//LfZ6w68C+ZTmPgPrGToKe6opfAno0cna87KYbH5wqgGoLAHbhs5/I0B
q21NauXlFB5MUees82Ag6NAmk5RCCmtEW82+4iCDtizdAPsMCrPpqjscdxom
8ptpyxsUrlQES/7omYR5VQlxy5MpbMMptwb2JGz7JM8lYyl88MG7SYM0CRRq
fu7isSlsG5Pe8E0uhnrDG7/mBFL4mMpbW/tMMfSa71Yk+1F4/eFjYy+RGLRY
oB3oRWFLVXOmMnYCoq9muSy1p/AzYebR+8bjkH3bpVd1O4XfqFkdaukYg8oC
lVOKzRS+nC7edDNhDEYbLyS3mVM4sQONpIpE4DHrYGPSEgqrr/yRb1A/Cusj
9GyYSRI7ByRc2u0/DI7JLfz+cRKHGCdaaQwNwdHspIMtwyTmBG3ILWMPQSYQ
YUU9JH4Yr7b6l8hBmCXrLPXjk3jiNDcorGwAOoOz1zTfJ7FZouNEqF8fhJmd
smu/S2LLK96jptP7QFts5/0lk8SNkrgzc3K/gmvISIroOokTUwKTJL29wD+D
GOVwEttcW7lRGtwDNWHt9bZuJMbcEpepld1wL/YHv7KZJFZz6tC5decjbNkx
eBErkThMsIUrUP4InTOrM14pCJxrPRnOhLaB9uWjb99PENir4rnlfLdWSInn
WYi6CEzsYj2P0vkA0cmsaavKCWxcqfrAt04AfhlX72b4E9jnydoQ48UvYHzG
zjgLHwIn6nh8V8yoBc4pKkjgRWCteEFFzFgNpDqyrWawCLw1hxeXWoehhmDx
2YjANy5fdzdUlMIiH03FTnUCS/INVAa6syBl/6ZiUagCMu2Tb51QKkePTAs4
RicUkHMuIKHTqBLVzNXb5emrAN550mO3YxUaAlL42kkBrZfsvDc5VqPtS1/M
y16mgJORF4VG914g8V/2AbvfyEGjqLLQ9HQTcg1zM3i0RA6kVfGUU3EtaDa2
rE3XlAP3tHyY0GpFVaSmT5yyHBLF922DHreiZVHNub40AxWGoYVz37ch0eW9
K/UFDCgdYT+db9yOrtx0MEkNZ+BwAbfr69wuhD6uFkSGMGCwIpAJ8epCIu05
bPZxBno+4T7eky7kdruO6+TGwPMLqr7urt1oeZ6t5WwTBoaSl73j5QsR5v6M
OJ0ysHCqH4DIXsQW63UGNsvA5fgb/TZhL1puSYQfaJBB2Iisgdr6FcVXVNVY
lcrgksFB/u/T+5B7zYbtE4kySFu9LutTxjc0V0nrqzBKBnGSvJn2U/sR3kbH
CEJlUAzTnGcH9SPD16WvC47IgDFxqLq/fQCNvzFz8Ecy4IRVlpyfPojyVBcM
uZrJIJP9PjErdBC57x1PsF0lgzOu584eGx1E1c1P3y7VkIGwhZVu1j2EEtrX
7vs8JIUTTboqysdHkNHAiv37MqVgJdlTVJomQsWRgmv+16Qwc8QzU6dfhLbo
hjZwYqXw9tWiGQbWY8jDucH68UkpLODHfHDsG0NJvEC9abZSyONGF6uzJpCO
s4ab9kYpWCwEh0PFE+hhP1xdZyIFbf1iVp+GGNXqqE7x0pJCUM6rW+NCMZqM
KOrhDdOwj/vbdGm6BEXreOg2faGhqbrsUZvKJFLnKbl8aaXBTnfM6X3MJFrT
z/pzXi0Nx4N3mhaG06giQk4YltFQMsszoXOKFNnp5P1knU/DovLa0IY4KfJ2
kjz0S6PhpQ39/Xq2DA1/uy28EE/D2OcFh1rWM+hcxA7t1Is0qPQ9vZtTx6DU
kvT4mgAanrHddrybpkDGfF7j2gM0/P/fzX8DWKgCXw==
      "]], 
     LineBox[CompressedData["
1:eJw1lH1QzHkAxmtdKG0v9MLdtSpREyq9kZe+F+slyiQVvVzybhWhUGQdWw45
UhGliFpdmXR5ScJTShJCieR6od1tt13btvvb3d5s183NPTPPPPPMPDOf/x6r
TdH+W2laWlqho/4362dzcqjrSmj9p8odtW7H119UwsVoAEfcRnB5ZiI35IwS
XrnB0bxrGtSnNNaHHVcixNXSJsNIg1mh0ZM27lYi3yhLbTY8jN7egjzWMiX2
L3F3ytEMwjJQXRe5UAmpVdDRnb8Pwu/h0m+7nJU41H7kouukQZQmfnXbx1CC
YatiM10GcGDKz88PqShM8Ssd65mqxk32TnGChEIUhzHU7KhGS9cDw6NfKSTe
uBmS8UaF+cWB6zkNFOIKy8cwTVX4vvicKJlLYbjT0Gh+GQWHgjb62SsUroWN
uay3hUI4fZZzSiqFUMYK04MTKVR+rDuUzqawLsA1XxyjQGIUTT87aJSv43u1
dbkc9975OV31ofD8dlmUhZYcAverAbmLKew5/84ls7wPK7QXZuc7jPKXHeya
4tQH/Yv7HYrHUrj0pKjRyV6GNAj9cF+Bq4N7pWkZEuQkaNFFRQrMmxkjHMuQ
oMBj8ouJuQowE25aLOKK8eTOcq9tyQq4nT0261FFD4Q3uXPoEQrE/JnXmTMg
hGfKlomhugrQZ/TV2JXx4e2b0JCokWNkiXcSM4CPAL3008UKOWJSCjwPynlg
JVbTaO1yRF5KE2g785AeZ60oKJVDL+fGis+PvkIU0dmkCpVj48npd5PVHaAs
+s9ZrpEjvqfjodnqDmhaDX1WLpOD/emTiTa3HSaBpCbbSQ5agDfnZXAbPL1z
7jJ1RvfiJW4z37YifU7YhdTiPjCzF31hyZpBaC1BDtp9YJiTlMb0FxDYhguN
1DIEO3qafj5Th7O+vHiFRAbWZifWraTnaL8ku/KgRQarI7ifFP8MbEfdrsUl
MlzPL7xmwarCo7D50es2yDAxoGRYXlmK2N0ehtqHe1GRF7St27qQ1JQvda7d
1gvL4wv2tTCKiYmOf2Cyfy/q05/2f6b/Re5k7cwyte9F2Habzgj9e0Rel2Vr
/0kKbnnryafGj0n0NA1ZO1eKG4wNi6dza8nOlqd78hUS1B+uNhA/aSK7mjZW
l7dJ4H8/nG8b9J7sadAya3guwSFWhbWr9D05WONZocqS4HUs+/1Hyw8kseSh
zgqmBB2vqY1Tz7eQnJOlmT3pYlw29n75Ia+N5HLWfNOwxfAy3txf69NO8tgy
MoklRoLmVIWBqp0UxTrwFywSI8xist/2GZ3kQUSh4x/8HvSvroqzOvGFNM27
XuPo3oPD3mtSGnfzyAcXL3OmZQ+ittpmrnzLI60Onaz1ej1wt6Vozc580mnD
MDzWLsJUGzuR1xCfSI0ygxtPiLBAZh6wL7Ob9E3wuCXYI4KuLEK1V0dIqLEt
msEQEe6pDhx7vVdIhoZN86Y5imDXci+8erWIjBedl8Z+FMImLVjw7UcxmcBz
8jpVJYRp64apBqliYtDxJi27SIgLlfQgsZ6EmDbTPWqPCiHeYRFlRvtGrKtO
cczthFizwGSka1wvWXj52OSHcd3grJobwq3sI74h5zJcN3ej7NRPqc/05ST8
p2yz277dcP8cYL42RE6OZj8wybPuRrmFKkE6ICdPc3uNzr4SYMwM05gqH4o0
bvp+bnyZAHO2LrLoyadI17QJhpxcAVb6qhZqtJTkB+4MetwBARq2vZg597GS
LC/8VXeT5WhXDN1e5acm6yMjT/6tJ0BJmvY4+wo12TErftw6JR8aTteRYrt+
cro4Xcenno9mH3W8lf4AeVX6Uts9lo+ivqTAsP5B0hbz6beScD4sqz+yDRKG
iNS1e8Tem4/Zg3e2nh4zTAzLaJqpDD6q5+03vsb4TvwrPAZ163iw9/uQx0we
IW4mqyNNynn///Mv/wDF+Rzf
      "]], LineBox[CompressedData["
1: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

      "]], LineBox[CompressedData["
1:eJw1lH0w1HkAxpH3vISojtu4GkmRXq641OMSkZNkyio5oshLIi8hF6rtHLnz
Mpd3eas4JCo14Xuks5VKWdIOacti1y779vNa7rq5uWfmmc8/z3+fmcfkWPiB
4wpycnL0L/2XtmcqnGIfDEPuv/y5uyYoxUSFi6zB9RbC5s/EbcDSMNeIC7rl
yij5tZ/JYQ2qUWsTFwwbW4PovE8kPDSZO+/NRZJQpHeDMU/y1+c79TVwocP4
1s3oyiyp9Pbl/MDkoliU4DltMEvq003jHw1yERh1alNv+Qx5LGj4o151BH7m
yuHL/pomoppnWmk+I9g4Hdx3ee0UmR/IvCEfNQIqPUB5B5Miypp0u7OpI0hj
39/+1UmKGIYNRxy/M4L82+YnZuplxNHiMwvqo/C0iTph4SklRbWWBbK7oxDm
esUlTIrIKY3lqbNPRqHN+S3Us1ZEdobIxy4MjuJcssY2u1AReWfGOqCqPIbO
sELDDexJYlwRp250aAwpW/srdWRCUpHfEWc/NYZ2/wApPYZPomZrA53UeUhy
C39vpMknDvSrB11pPLA2rojbUMkjI/rBGz0dedBRw5Dh2zFilqnNC/6dB7vy
LjVjt1FSc/kwPWsrH7eUIq/TwobJuRF7x6t7+aAdqDZU1R8mrg4WWwp9+KgK
OdPzpOUjmVCQW3KdwUeH3qVTROcjsfqpsvNBHx8FTFH0YDuH3IkSbeXEjIMp
yfdySXtHmv0Y+lZNAmTsf9OudKyXvF0y2MPtEuBeprrJi6csMkU2ZxV8EECs
EnE4cAuLWNE4WipaQpi0bM4WqfWQcvZ21XcBQvAE2dFlLd3kFw/xXJruBJ63
sIcULjIJ3cH7/WjYJPbcT2i1aqoh0bKG4qILk3gmc6+eP32TZJWrHfXImwSa
RtdWrqsgXfJNb1s7JtF562znpMNVYjz0M++ppggZqQdUrlRfQnbBxw+lASJc
55//PrCrEfFL83rddMUIvLmzv+PgM4QsOjQUYSRGeEvZ10m+XfCW6PKyTcUw
fVu2Yk3oc6A7/dOb78SgdRhd8GG8hGJ60ipffzGuBSZ7P/r4ChmLgiJO3xEj
1rXBVbirD+clqxOyWsWI29XboPW6D6c5nIt3mGJY7nnVOu/3Bh7kSO7MgBgX
TcPq3C/2Y3mCG0lSkqCtx3lbWQ8b5ZKtmpmHJMgLtQ2ZKRtCDkdq0Ogrgdc3
qXRFk/dgdNcb9wZLoGk1V7I+4j2C6sy3rDgvgbm2Pj1cjwPLYNqR0hsSpLyg
K9n5fsB9jlLV7RkJ0pU1FDNXclHV3d7QoyDFNfHZ2cgELvLJ+WZKQ4q8OK8a
l34uEotmX9qYSCEcuNT5KWcEu7yEU23OUhxf2RRkbjiGrm7W7tf5X/YD+714
fuO4533Yuq1CCsOmqObmF+MoHRtaV18nxbyXMGHRDgFi5MZ1M9qlELR//cCA
JoSxlTzHmS+Fc2OJf6F0AurNDJa1TIpai+KY/V+8U3s0mGsWpFj12H8fe2wS
T39cdktJVwbNMiM2K1KE6F8tEttsZHDW98mbSRDD17DxdL29DOsEflzFNjH2
3rAOKHGVIdQksninigTGxN4l0U+GZYHrwo9dleDphNcKm1QZZm8vVS3qlIK2
j3G3vl8G87FKJ7MzU1BlL64q+SDDUfkTM8+7pyA9nlmYIZBB+aCHa4rVNJiJ
hRdC5Si4OOqMnpyaxpnaBnczMwqXwooW7hfPwsfG2mHZJgo+MdUP3bXn4PS4
xVrZlsLSF4vZrSlzoA0yVw67UbAxix/OiZwHU2NIWBJLobEufINe/Gc05AZw
MpIpBMhKc9YoLaBoNZ+VmEZBz1u+bnfOAiJtqYdHSihcWdTiH0D+hrHuPVF0
OfX/39r9A2CG3As=
      "]], LineBox[CompressedData["
1:eJwtlHs0lHkcxt/3rVFh4yiR7BLtNKbI6iaX/f6ULbq55NJINWZTuqzKii5W
bnV0IZd1qa0UJUWtikVNfkMnIcRmTGRbCcNg3C/zvmNse3afc57znM95znn+
fBYLjrr7UwRBeH3xv8kVP44/70sD8Z9EHP9naSX7aLhmHN0ZFDGNr1vO/qYy
kAbrEjv737tVOOZ1FrczioY+zq5C14op7D7WssEol4a5Covk8nwGV4g41eaF
NJjNa99utYrB6y6HuNphGqJ3Vmd9eEZjY1Od3bx3NLB91651bVDgAVfnkGSG
hl3l5JSP0SQWGKYpb7MY8Hu1y9qkZAI3STui8rUY0CFcN6zznMCl4RFXak0Z
aEOSF8rkcXw5ryhn1tYv7JBffdNsDLON7dLkXgzEuUumT9eMYlGy6JzYj4GS
DT4q7+OjeOR0lSArlIET1uOWr0Uj2Mf5gyFkMfCizichIXgYjwr3arAfMfDy
fFlT5LfDON6yQ6FZwsAIWP84IBnC5Xr9TS11DOSxLTPUHYawWZcqIYRmIIsl
mT1oMojLedFnd7OUsEQvXNQiHMC+tbMCHbWVMF8+49SCNQM4oUB7iw5bCQGM
QajaCjmejDJhPXJTQtKn1dpS6z5cYbTxVGeOEqTR/kaZGd2Yn1x9oOapEmRt
wWLHld2YVnPxelqqhEBu4UrHSim2kHuvjGxUwtf6Ewssx7twivBgvyExBakJ
Lpse8zvxPl6cn4f3FFwtfVswFNCOyeRG55csFSzKHvCqMm/BqhsywZCWCoxL
ShP705sxnUOEGRmo4Imm87zpmc14tHT5ozMWKtBc+kZW97cEd8lidFZ5q8DM
bo/gSIYY16xf/eFOjgqCLjsEezo04PThlCPnt0xDV1RDK0tchvXu576+40Sg
tOiYjW53haAzZeCcuY1A8T4DdsW3S0HT7WJ1hjuBYvZk9p13EQGlCKi95kug
Cw0rYgXby0HuxH6XcIxAcdz2K7o7KqCi+9bHsHQCHc2yKntztg5COKljHt0E
+uWhYP3VdxI4HsYKde8nECrTeP5W8B6O1AdPugwTqIftXNA6/B4EJ3cwm5UE
qhId3pSs2wLbK7VJB20SKewzlnP3twI74JKmuTWJ5FLekMGNNlgspOO49iTi
sV8Gz+lvA0PtQ1qc9SQ6c6GOd9P+E+gUO+mYbiVRkgPlXdv2CVSz1PQX8kk0
sE1i9WrFZ2i6F2HKiiVRQVzFX3+MdkKHi0ZzYNyXvauKRZ68LhieSIl/n0Qi
vaJbzUa4C+Y65Spyb5BIedC1Z0+8FDZ2i9+6PyXRsaNL4xLtesAjgX9OWEwi
6XT9glu5PSCw7rVhl5IoluvSt8xQBuGxRLaikkRfnaFn9pK9UMRZFnbrI4m2
3qux+ulTH1TUF36n3kGiTm/uw6rd/dB4Ekl/7iHRkeDgeVqt/TBY6em+aZRE
ATDU/+tHOXAORnDkcyjE/v6HA8/CByH9vrjRdjWF+sqDele1DEO2G//iXRsK
dftN2tovH4EChQy0EIXy1T/m9J4dgXpnIrd9M4VCm1g2Z5aPwhwZN/ICn0JC
TJ/wuj4G+kmFa0b8KVSvm2kbNjUGbBvU53uYQvO1I63a+OOw/qKnt2UIhQpV
z4iXFhNwmhthLrlEoaxEfduOnkmI/VP9M0qk0Od2H62OvQpIPZ2S/iCVQr/V
MfrqzQp4Uv1gRvhtCi1IFb7YK6ZBFLS6RJpNoejHyqK2nQzUGYgC3fK+9BwL
tWVtDMgOiZuXFFHoWKJueiuthEkd/pV4IYVuG1/bnxc/BWrPZY6TZRRqSFm4
TG+pCkw0iPw3NRTi1TO7ivdPg22Qx7nwBgr9/6foH2/8sZ8=
      "]], 
     LineBox[CompressedData["
1:eJwtlGlQU2cYhSnkXu69KC6ttQrWsFOLslkZwfC9YK/VWrFsDm6ogOiwU2SR
KruIKDrCIAoWK1BUdkVgcOFTMYWJSDUmqSBGliAKjhCIIQQCTac9M2fOPHN+
vO+vYxIQ6XVQV0dHZ5vW/6ZeSdJudg0BOv/pwZnuu5mkAwE3Nbld7dlzeF9J
BZHiRECMzOnrqMFZzHHI0otxJyA+zTPYo0KDPTw3zvn5EWDfUir2Cp3G3GUO
ScK9BPRGWtu/GFTjiV6uZmsgAQ9v6BobBKnxxahZtWsEAbGnw+I+hUzhgXPN
SvMMAgQuefWZxZPYofzMcMYpAgaenD4as3YSp93bJ5Wd1d53TtTt71Bi7nvi
z7JLBMwFK3pec5TY390r37yWAMliryDBWQWu9rM4lXGbgMLwX4PXrlPgmQjV
MVkzAQX3e8ei30zgoqLioLLHBATUCY+aOU3gl4phR/NuAtR+6VAzJcdWBi1W
GW8IyO+bNp+pluM4k/NGMhkBU26ysWuBcrzEw0mvbJSA0d2GK4aFY9jrWrrQ
jCBhVQi/80XyKO7YaRxtZkcCrBCsjCwYwUZRo0Hp35GwWPWxKdV0BIdkPvIb
cCZhjqYnHWuHMV1/GEpZbf98J2afvseb5jUsMNtNgu2qhkfdy9/hBy3bakwz
SfBkJcKBcRm+bZY8YtJDwol5P4h970lxA1F0xKKPhM69Cf4iEyluHGrUWL8l
QVHk6xOV9Ro3VX5cYDdGgon+k7k+vx58x9F/rStHH+SfH9TvJbox3sg7vstG
H4qbXZIPZIuxIHDaMO+YPuzHUkfLbwS4tzTegbOCgrmhcw/Hn5YjRVfNaIwp
BZd/H/UsXlKJqIVvqwasKGhLd0t0869Ftsd8rFodKHAJrHPJnKpHST72xmmb
KRgLMvLOKriHjIkRQucIBa8a8tNMiDa0M9i/a1pAwZ4rjxMWXhKhsMv5F0Kf
UdDzGafI3U6MUoQd3q/EFNiv5i3a2i5G111dOu/0UrDUav6yGbUEqb78qvWo
koKX6vDBW6Fd6ELb86pJExr2p6bUlKdKkdCaTZlIoCGWbrNL65ehglV8IZlE
Q8muLNsPvEG0x4a1WJ5Ow5FFAt8thYNoyJYVQA4NPxe026p836KZdewXZ6/S
EOBz9Q951xCyYNnr1gIaTobc1A83GkHDm/hql7+0vEY0Xn9qBNVtZrdtF9Hw
fZVNc/zUCHL+iR2PldIg3FH5S+nrD8jDm93QOk5Da7+hsL/5I0o4wD7ba8TA
u4CLfNtDcsQL5JtGcxkIJUWNwdVypHuQjc2wYKAqkZcvVshRzmF2eaUtAyX6
T0NOnBxHJZFskGojA9kXXGOi7k+gQ9H8RoMtDBhQSs41QwWyiWHplR4M5OV6
hscfUKCmOLaG9WOAE75dz3TeJ9RxnFXlhjHQ8KFudUS8Ep1P5v9YHs1AXHyP
EfpbiXaksr81xzHATbWMcFo/ifoyWPfeFAaGjls4TuqpkPI0e2Z1vvbfDWXs
oaYpdDeHL4VCBtwU41ncb9Uo5Rxr73OFASuJJSm5qkZMHitJvKHl6mxRy8Vp
tLKQ5bbfZ8BbUxj1oE6D9g/fGHr4iIGwnK5bFbxZVOJsWHu3jYH1Y1eohs5Z
ZPlKwqt9zsB80dKKac0cKsq9HoG1/P9+wT/fTkav
      "]], LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAACWZuO0UuDUAAAAAAAAAAwIFBxfju
Lw1Av5PDGmzL/7/W5UT0VDUNQMbjXv5GJv+/gC5E6yBADUDSXOxDcev9v9O/
Qtm4VQ1AKrH/ZLis+7/aLwtqwloNQIbAyd4KMPu/4J/T+stfDUBD/oysmLb6
v+x/ZBzfaQ1Aw46O6trM+b8GQIZfBX4NQCqwkxuRGvi/DLBO8A6DDUCrD0YL
RrT3vxMgF4EYiA1AJCGJyEtQ978gAKiiK5INQAKHPmDvjva/OcDJ5VGmDUAB
ofb7WiT1v0AwknZbqw1At/3BelHO9L9GoFoHZbANQGkZNTf+efS/UoDrKHi6
DUBU39ZLPdbzv2xADWyezg1A9L73Esug8r+fwFDy6vYNQBF4hjzAc/C/pjAZ
g/T7DUDNq3e8JTPwv6yg4RP+AA5AVgi8CBjn77+4gHI1EQsOQDIIqMN37u6/
0kCUeDcfDkBg3em7vhLtvwXB1/6DRw5AlqWXCGym6b8MMaCPjUwOQMhmkUYW
P+m/EqFoIJdRDkD8OXEdAdnovx6B+UGqWw5AFBgCcHUQ6L84QRuF0G8OQOG1
F9vxjOa/a8FeCx2YDkC1tCyny7Xjv2Kf2Za8nQ5AQYz8DdZU479afVQiXKMO
QKxvg8/h9OK/SDlKOZuuDkAo2oVJ3zfivySxNWcZxQ5ArvKFmKvI4L/coAzD
FfIOQCEJx//qH9y/TIC6eg5MD0BEg4B58SDSv0NeNQauUQ9A49gdIKWI0b86
PLCRTVcPQIvh9J4Q8dC/KPilqIxiD0DX6dFE5ofPvwRwkdYKeQ9A1u6YylDi
yr+9X2gyB6YPQDfJUHJqx8G/tD3jvaarD0A97np1pafAv6wbXklGsQ9AjI7N
UAsRv7+a11NghbwPQCzwIcEPmLq/dk8/jgPTD0BCzwiNsLGxv20tuhmj2A9A
PxvmzQL0rr9kCzWlQt4PQMCSuH/Thaq/UscqvIHpD0AUTMyKU6yhv0mlpUch
7w9AgemgLliBmr9AgyDTwPQPQN4gAvYLq5G/N2GbXmD6D0CSflA42KqBvy4/
Fur//w9AQppGzuM1ob43m4a6
      "]], 
     LineBox[{{3.4989416355873617`, 2.}, {3.4989600055712446`, -2.}}], 
     LineBox[{{2.499874260725368, 2.}, {2.4998933346815484`, -2.}}], 
     LineBox[{{0.4997669001133373, 2.}, {0.49978912053072405`, -2.}}], 
     LineBox[{{-0.5008135108998583, 2.}, {-0.5007966763853319, -2.}}], 
     LineBox[{{-3.5007776137838595`, 2.}, {-3.5007608458606834`, -2.}}], 
     LineBox[{{-1.4988080785667253`, 2.}, {-1.4987911120473136`, -2.}}], 
     LineBox[{{-2.49983133147187, 2.}, {-2.4998093233861245`, -2.}}], 
     LineBox[{{1.5004738718707622`, 2.}, {1.5004948902572215`, -2.}}]}}},
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Re\"", TraditionalForm], 
    FormBox["\"Im\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->250,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-3.999999836734694, 3.999999836734694}, {-2, 2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7588261298710537`*^9, {3.7588263375171013`*^9, 3.75882637038124*^9}}]
}, Open  ]],

Cell[TextData[{
 "By looking at the plot, the tangent\[CloseCurlyQuote]s asymptotes, which \
will be the location of its nonanalyticities, are all outside the elliptic \
domain of interest. There does remain the origin, however, as the point of \
difficulty. Recasting numbered line (1\[CloseCurlyQuote]) of p. 646,\n",
 Cell[BoxData[
  RowBox[{
   RowBox[{"2", "\[Pi]", " ", "\[ImaginaryI]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"f", "'"}], "[", 
      SubscriptBox["z", "0"], "]"}], ")"}]}], "==", " ", 
   RowBox[{
    StyleBox[
     SubscriptBox["\[ContourIntegral]", "C"],
     FontSize->22], 
    StyleBox[" ",
     FontSize->22], 
    RowBox[{
     StyleBox[
      FractionBox[
       RowBox[{"f", "[", "z", "]"}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"z", "-", 
          SubscriptBox["z", "0"]}], ")"}], "2"]],
      FontSize->22], 
     RowBox[{"\[DifferentialD]", "z"}]}]}]}]]],
 "\ngives me the working target. Again ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", "0"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " will equal 0."
}], "Text",
 CellChangeTimes->{{3.758826183848421*^9, 3.75882627245251*^9}, {
   3.758826537462902*^9, 3.75882656674758*^9}, 3.758826670438303*^9, {
   3.758826717487089*^9, 3.758826723735024*^9}, {3.758826761085492*^9, 
   3.758826774125452*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["z", "0"], "=", "0"}]], "Input",
 CellChangeTimes->{{3.758826859336711*^9, 3.758826863250526*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.758826864685301*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "z_", "]"}], "=", 
  RowBox[{"Tan", "[", 
   RowBox[{"\[Pi]", " ", "z"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.758826712460353*^9, 3.758826739094325*^9}, {
  3.758826802972402*^9, 3.7588268080764837`*^9}}],

Cell[BoxData[
 RowBox[{"Tan", "[", 
  RowBox[{"\[Pi]", " ", "z"}], "]"}]], "Output",
 CellChangeTimes->{3.758826809870946*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "'"}], "[", "z", "]"}]], "Input",
 CellChangeTimes->{{3.7588268169538527`*^9, 3.7588268208358192`*^9}}],

Cell[BoxData[
 RowBox[{"\[Pi]", " ", 
  SuperscriptBox[
   RowBox[{"Sec", "[", 
    RowBox[{"\[Pi]", " ", "z"}], "]"}], "2"]}]], "Output",
 CellChangeTimes->{3.7588268216182327`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "'"}], "[", 
  SubscriptBox["z", "0"], "]"}]], "Input",
 CellChangeTimes->{{3.7588268241791*^9, 3.7588268279637527`*^9}, {
  3.758826869322884*^9, 3.75882687109833*^9}}],

Cell[BoxData["\[Pi]"], "Output",
 CellChangeTimes->{3.7588268288286533`*^9, 3.758826874356452*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", "\[Pi]", " ", "\[ImaginaryI]", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"f", "'"}], "[", 
    SubscriptBox["z", "0"], "]"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.758826882463249*^9, 3.758826899434887*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", "\[ImaginaryI]", " ", 
  SuperscriptBox["\[Pi]", "2"]}]], "Output",
 CellChangeTimes->{3.7588269023423843`*^9}]
}, Open  ]],

Cell[TextData[{
 "The s.m. tips me off to a gotcha. Boxed theorem 1, p. 664, which includes \
numbered line (",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["1", "'"], TraditionalForm]],
  FontWeight->"Bold"],
 "), applies to curves integrated in the counterclockwise direction along \
their paths. The current problem specifies a clockwise direction of travel, \
meaning that I have to negate the result to get the correct answer."
}], "Text",
 CellChangeTimes->{{3.758826937921072*^9, 3.758826948679866*^9}, {
  3.758826988624156*^9, 3.758827065836331*^9}, {3.759070550354911*^9, 
  3.75907055900286*^9}, {3.769112611503169*^9, 3.7691126134762697`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "2"}], "\[Pi]", " ", "\[ImaginaryI]", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"f", "'"}], "[", 
    SubscriptBox["z", "0"], "]"}], ")"}]}]], "Input",
 CellChangeTimes->{3.758827081579915*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
  SuperscriptBox["\[Pi]", "2"]}]], "Output",
 CellChangeTimes->{3.75882708258716*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"11.", "  ", 
   RowBox[{
    SubscriptBox["\[ContourIntegral]", "C"], " ", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", "z"}], ")"}], 
       RowBox[{"Sin", "[", "z", "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "z"}], "-", "1"}], ")"}], "2"]], 
     RowBox[{"\[DifferentialD]", "z"}]}]}]}], " ", ",", " ", 
  RowBox[{"C", ":", 
   RowBox[{"|", 
    RowBox[{"z", "-", "\[ImaginaryI]"}], "|", 
    RowBox[{"\[Equal]", 
     RowBox[{"2", " ", "counterclockwise"}]}]}]}]}]], "Text",
 CellChangeTimes->{{3.75873832222992*^9, 3.758738388417665*^9}, 
   3.758738449073215*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[TextData[{
 "Again reminding myself of the circle formula:",
 StyleBox[" ParametricPlot[{r Cos[t] + a, r Sin[t] + b}, {t, 0, 2 \[Pi]}",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{
  3.7588280642883253`*^9, {3.7588281314770308`*^9, 3.758828144843389*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", " ", 
      RowBox[{"Cos", "[", "z", "]"}]}], ",", " ", 
     RowBox[{
      RowBox[{"1", " ", 
       RowBox[{"Sin", "[", "z", "]"}]}], "+", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0", ",", 
     RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "150"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{
          FractionBox["95", "255"], ",", 
          FractionBox["130", "255"], ",", 
          FractionBox["179", "255"]}], "]"}], ",", 
        RowBox[{"Arrowheads", "[", "0.1", "]"}], ",", 
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.87"}], ",", "1.5"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.93"}], ",", "1.4"}], "}"}]}], "}"}], "]"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{
          FractionBox["95", "255"], ",", 
          FractionBox["130", "255"], ",", 
          FractionBox["179", "255"]}], "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], "]"}]}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.758828469659793*^9, 3.758828638980865*^9}, {
  3.75882871740508*^9, 3.758828726866042*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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

     "]]}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{{
     RGBColor[
      NCache[
       Rational[19, 51], 0.37254901960784315`], 
      NCache[
       Rational[26, 51], 0.5098039215686274], 
      NCache[
       Rational[179, 255], 0.7019607843137254]], 
     Arrowheads[0.1], 
     ArrowBox[{{-0.87, 1.5}, {-0.93, 1.4}}]}, {
     RGBColor[
      NCache[
       Rational[19, 51], 0.37254901960784315`], 
      NCache[
       Rational[26, 51], 0.5098039215686274], 
      NCache[
       Rational[179, 255], 0.7019607843137254]], 
     PointBox[{0, 1}]}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->150,
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-0.9999998831351729, 1.}, {0., 1.9999998782744886`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.758828408270904*^9, {3.758828474823854*^9, 3.758828639698011*^9}, 
   3.758828728456169*^9, 3.7588294868376226`*^9}]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   RowBox[{
    StyleBox["I",
     FontFamily->"Charter"], 
    StyleBox[" ",
     FontFamily->"Charter"], 
    StyleBox["believe",
     FontFamily->"Charter"], 
    StyleBox[" ",
     FontFamily->"Charter"], 
    StyleBox["that",
     FontFamily->"Charter"], " ", "2", "\[Pi]", " ", "\[ImaginaryI]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"f", "'"}], "[", 
      SubscriptBox["z", "0"], "]"}], ")"}]}], "==", " ", 
   RowBox[{
    StyleBox[
     SubscriptBox["\[ContourIntegral]", "C"],
     FontSize->22], 
    StyleBox[" ",
     FontSize->22], 
    RowBox[{
     StyleBox[
      FractionBox[
       RowBox[{"f", "[", "z", "]"}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"z", "-", 
          SubscriptBox["z", "0"]}], ")"}], "2"]],
      FontSize->22], 
     RowBox[{"\[DifferentialD]", "z"}]}]}]}]]],
 "\ncan be retained as the working target. This time ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", "0"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "=",
 Cell[BoxData[
  FormBox[
   StyleBox[
    FractionBox["1", "2"],
    FontSize->22], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". The sine function is entire, and the polynomial (1+z) is nonthreatening, \
so I will assume analyticity for f[z]."
}], "Text",
 CellChangeTimes->{{3.758828815306052*^9, 3.758828914699418*^9}, {
  3.7588289795532837`*^9, 3.758829023544229*^9}, {3.758829175939418*^9, 
  3.758829183475066*^9}, {3.7588298882207737`*^9, 3.758829912764027*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "z_", "]"}], "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "+", "z"}], ")"}], 
   RowBox[{"Sin", "[", "z", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.758829221942676*^9, 3.7588292437159967`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"1", "+", "z"}], ")"}], " ", 
  RowBox[{"Sin", "[", "z", "]"}]}]], "Output",
 CellChangeTimes->{3.758829245475237*^9, 3.758829491794137*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["z", "0"], "=", 
  FractionBox["1", "2"]}]], "Input",
 CellChangeTimes->{{3.758829251792362*^9, 3.75882925823242*^9}}],

Cell[BoxData[
 FractionBox["1", "2"]], "Output",
 CellChangeTimes->{3.758829260637967*^9, 3.758829495059352*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "'"}], "[", "z", "]"}]], "Input",
 CellChangeTimes->{{3.7588292677514544`*^9, 3.758829272664194*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "+", "z"}], ")"}], " ", 
   RowBox[{"Cos", "[", "z", "]"}]}], "+", 
  RowBox[{"Sin", "[", "z", "]"}]}]], "Output",
 CellChangeTimes->{3.758829273483012*^9, 3.7588294985425262`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "'"}], "[", 
  SubscriptBox["z", "0"], "]"}]], "Input",
 CellChangeTimes->{{3.7588292765102787`*^9, 3.758829285519717*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["3", "2"], " ", 
   RowBox[{"Cos", "[", 
    FractionBox["1", "2"], "]"}]}], "+", 
  RowBox[{"Sin", "[", 
   FractionBox["1", "2"], "]"}]}]], "Output",
 CellChangeTimes->{3.758829286380069*^9, 3.758829502124814*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", "\[Pi]", " ", "\[ImaginaryI]", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"f", "'"}], "[", 
    SubscriptBox["z", "0"], "]"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.758829298862417*^9, 3.758829315568218*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     FractionBox["3", "2"], " ", 
     RowBox[{"Cos", "[", 
      FractionBox["1", "2"], "]"}]}], "+", 
    RowBox[{"Sin", "[", 
     FractionBox["1", "2"], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.758829317548564*^9, 3.758829505860715*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.758829331279951*^9, 3.758829334879858*^9}}],

Cell[BoxData[
 RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"3", " ", 
     RowBox[{"Cos", "[", 
      FractionBox["1", "2"], "]"}]}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"Sin", "[", 
      FractionBox["1", "2"], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.758829335535884*^9, 3.758829509480797*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.758829391172946*^9, 3.758829393302021*^9}}],

Cell[BoxData[
 RowBox[{"0.`", "\[VeryThinSpace]", "+", 
  RowBox[{"11.283340288104503`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.758829394073193*^9, 3.758829514633237*^9},
 Background->RGBColor[1, 1, 0.85]]
}, Open  ]],

Cell["\<\
A strange outcome. Though the symbolic result matches the answer in the text, \
the numerical result does not. Seems too simple to misread it. WolframAlpha \
gives the same answer as shown in yellow.\
\>", "Text",
 CellChangeTimes->{{3.7588297300827217`*^9, 3.758829852533844*^9}, 
   3.758837127051146*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"13.", "  ", 
   RowBox[{
    SubscriptBox["\[ContourIntegral]", "C"], " ", 
    RowBox[{
     FractionBox[
      RowBox[{"Log", "[", "z", "]"}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"z", "-", "2"}], ")"}], "2"]], 
     RowBox[{"\[DifferentialD]", "z"}]}]}]}], " ", ",", " ", 
  RowBox[{"C", ":", 
   RowBox[{"|", 
    RowBox[{"z", "-", "3"}], "|", 
    RowBox[{"\[Equal]", 
     RowBox[{"2", " ", "counterclockwise"}]}]}]}]}]], "Text",
 CellChangeTimes->{{3.7587383914589853`*^9, 3.758738464016471*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"p1", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"2", " ", 
         RowBox[{"Cos", "[", "z", "]"}]}], "+", "3"}], ",", " ", 
       RowBox[{
        RowBox[{"2", " ", 
         RowBox[{"Sin", "[", "z", "]"}]}], "+", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", "0", ",", 
       RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "150"}], ",", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RGBColor", "[", 
           RowBox[{
            FractionBox["95", "255"], ",", 
            FractionBox["130", "255"], ",", 
            FractionBox["179", "255"]}], "]"}], ",", 
          RowBox[{"Arrowheads", "[", "0.1", "]"}], ",", 
          RowBox[{"Arrow", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1.213", ",", "0.9"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1.15", ",", "0.8"}], "}"}]}], "}"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RGBColor", "[", 
           RowBox[{
            FractionBox["95", "255"], ",", 
            FractionBox["130", "255"], ",", 
            FractionBox["179", "255"]}], "]"}], ",", 
          RowBox[{"Point", "[", 
           RowBox[{"{", 
            RowBox[{"2", ",", "0"}], "}"}], "]"}]}], "}"}]}], "}"}]}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.758839241389155*^9, 3.758839264235839*^9}, {
  3.7588393202981977`*^9, 3.75883932477776*^9}, {3.7588393619209347`*^9, 
  3.7588396215054398`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p2", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Log", "[", "z", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", "0", ",", "5"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.758839625235774*^9, 3.758839689173197*^9}, {
  3.7588397193260202`*^9, 3.758839719588155*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"p1", ",", "p2"}], "]"}]], "Input",
 CellChangeTimes->{{3.758839691760635*^9, 3.758839696798501*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
vZbtg/7v+3IEBxFNhYxvFf8P3PKctQ==
      "]]}}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
4H/WJOAQ
      "]]}}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1., 0},
  DisplayFunction->Identity,
  Epilog->{{
     RGBColor[
      NCache[
       Rational[19, 51], 0.37254901960784315`], 
      NCache[
       Rational[26, 51], 0.5098039215686274], 
      NCache[
       Rational[179, 255], 0.7019607843137254]], 
     Arrowheads[0.1], 
     ArrowBox[{{1.213, 0.9}, {1.15, 0.8}}]}, {
     RGBColor[
      NCache[
       Rational[19, 51], 0.37254901960784315`], 
      NCache[
       Rational[26, 51], 0.5098039215686274], 
      NCache[
       Rational[179, 255], 0.7019607843137254]], 
     PointBox[{2, 0}]}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->150,
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{1.0000002337296543`, 5.}, {-1.9999997185624094`, 
   1.999999756548977}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.758839697756733*^9, 3.7588397231431293`*^9}}]
}, Open  ]],

Cell["The log function is analytic on any open set of its domain.", "Text",
 CellChangeTimes->{{3.758839835897666*^9, 3.7588398712234592`*^9}}],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   RowBox[{
    StyleBox["I",
     FontFamily->"Charter"], 
    StyleBox[" ",
     FontFamily->"Charter"], 
    StyleBox["believe",
     FontFamily->"Charter"], 
    StyleBox[" ",
     FontFamily->"Charter"], 
    StyleBox["that",
     FontFamily->"Charter"], " ", "2", "\[Pi]", " ", "\[ImaginaryI]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"f", "'"}], "[", 
      SubscriptBox["z", "0"], "]"}], ")"}]}], "==", " ", 
   RowBox[{
    StyleBox[
     SubscriptBox["\[ContourIntegral]", "C"],
     FontSize->22], 
    StyleBox[" ",
     FontSize->22], 
    RowBox[{
     StyleBox[
      FractionBox[
       RowBox[{"f", "[", "z", "]"}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"z", "-", 
          SubscriptBox["z", "0"]}], ")"}], "2"]],
      FontSize->22], 
     RowBox[{"\[DifferentialD]", "z"}]}]}]}]]],
 "\ncan be retained as the working target. This time ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", "0"], TraditionalForm]]],
 "=",
 Cell[BoxData[
  FormBox["2.", TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.7588399073699427`*^9, 3.7588399335775146`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "z_", "]"}], "=", 
  RowBox[{"Log", "[", "z", "]"}]}]], "Input",
 CellChangeTimes->{{3.758839952988243*^9, 3.75883996679772*^9}}],

Cell[BoxData[
 RowBox[{"Log", "[", "z", "]"}]], "Output",
 CellChangeTimes->{3.75883996827323*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["z", "0"], "=", "2"}]], "Input",
 CellChangeTimes->{{3.758839985700961*^9, 3.758839987739438*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.7588399886919603`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "'"}], "[", "z", "]"}]], "Input",
 CellChangeTimes->{{3.758839999537002*^9, 3.758840001571344*^9}}],

Cell[BoxData[
 FractionBox["1", "z"]], "Output",
 CellChangeTimes->{3.758840003008102*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "'"}], "[", 
  SubscriptBox["z", "0"], "]"}]], "Input",
 CellChangeTimes->{{3.758840004552899*^9, 3.758840013122739*^9}}],

Cell[BoxData[
 FractionBox["1", "2"]], "Output",
 CellChangeTimes->{3.758840014113866*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", "\[Pi]", " ", "\[ImaginaryI]", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"f", "'"}], "[", 
    SubscriptBox["z", "0"], "]"}], ")"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}]], "Output",
 CellChangeTimes->{3.758840047834249*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"15.", "  ", 
   RowBox[{
    SubscriptBox["\[ContourIntegral]", "C"], " ", 
    RowBox[{
     FractionBox[
      RowBox[{"Cosh", "[", 
       RowBox[{"4", " ", "z"}], "]"}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"z", "-", "4"}], ")"}], "3"]], 
     RowBox[{"\[DifferentialD]", "z"}]}]}]}], " ", ",", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"C", " ", "consists", " ", "of"}], " ", "|", "z", "|", 
    RowBox[{"\[Equal]", 
     RowBox[{"6", " ", "counterclockwise", " ", "and"}]}], " ", "|", 
    RowBox[{"z", "-", "3"}], "|"}], "=", 
   RowBox[{"2", " ", "clockwise"}]}]}]], "Text",
 CellChangeTimes->{{3.758738494633243*^9, 3.758738578524026*^9}, 
   3.7587386821716537`*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"p1", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"6", " ", 
           RowBox[{"Cos", "[", "z", "]"}]}], "+", "0"}], ",", " ", 
         RowBox[{
          RowBox[{"6", " ", 
           RowBox[{"Sin", "[", "z", "]"}]}], "+", "0"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"2", " ", 
           RowBox[{"Cos", "[", "z", "]"}]}], "+", "3"}], ",", " ", 
         RowBox[{
          RowBox[{"2", " ", 
           RowBox[{"Sin", "[", "z", "]"}]}], "+", "0"}]}], "}"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", "0", ",", 
       RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "150"}], ",", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RGBColor", "[", 
           RowBox[{
            FractionBox["95", "255"], ",", 
            FractionBox["130", "255"], ",", 
            FractionBox["179", "255"]}], "]"}], ",", 
          RowBox[{"Arrowheads", "[", "0.1", "]"}], ",", 
          RowBox[{"Arrow", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "4.25"}], ",", "4.2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "4.47"}], ",", "4.0"}], "}"}]}], "}"}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RGBColor", "[", 
           RowBox[{
            FractionBox["40", "255"], ",", 
            FractionBox["40", "255"], ",", 
            FractionBox["230", "255"]}], "]"}], ",", 
          RowBox[{"PointSize", "[", "0.04", "]"}], ",", 
          RowBox[{"Point", "[", 
           RowBox[{"{", 
            RowBox[{"2", ",", "0"}], "}"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RGBColor", "[", 
           RowBox[{
            FractionBox["223", "255"], ",", 
            FractionBox["155", "255"], ",", 
            FractionBox["52", "255"]}], "]"}], ",", 
          RowBox[{"Arrowheads", "[", "0.085", "]"}], ",", 
          RowBox[{"Arrow", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2.15", ",", "1.75"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2.48", ",", "1.95"}], "}"}]}], "}"}], "]"}]}], "}"}]}],
        "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.758840157520433*^9, 3.7588402210928097`*^9}, 
   3.758840273244672*^9, {3.758840329371272*^9, 3.758840585449029*^9}, {
   3.758840619136162*^9, 3.758840688462027*^9}, {3.758840758719569*^9, 
   3.758840988092164*^9}, 3.758841101512328*^9, {3.75884129528341*^9, 
   3.7588413567045727`*^9}, {3.758841443168551*^9, 3.758841472052291*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p2", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Cosh", "[", 
      RowBox[{"4", " ", "z"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", 
       RowBox[{"-", "6"}], ",", "6"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.758841106493474*^9, 3.758841137350815*^9}, {
  3.758841175862793*^9, 3.758841181149166*^9}, {3.758841233211727*^9, 
  3.758841236971306*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p3", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Line", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2"}], ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "3.75"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "5"}], ",", "0.5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.5", ",", "0.5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "2.5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.5", ",", "2.5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "5"}], "}"}]}], "}"}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.758843609727597*^9, 3.7588436574145937`*^9}, {
  3.75884368785205*^9, 3.75884371398882*^9}, {3.758843747234344*^9, 
  3.75884376225746*^9}, {3.7588438378888083`*^9, 3.758843939171988*^9}, {
  3.758843970756727*^9, 3.7588440815917873`*^9}, {3.758845380141994*^9, 
  3.758845383461689*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p4", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Line", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "5"}], ",", 
         RowBox[{"-", "0.5"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.5", ",", 
         RowBox[{"-", "0.5"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"-", "2"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", 
         RowBox[{"-", "2.5"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.5", ",", 
         RowBox[{"-", "2.5"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", 
         RowBox[{"-", "5"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2"}], ",", 
         RowBox[{"-", "5"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", 
         RowBox[{"-", "3.75"}]}], "}"}]}], "}"}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7588441182865133`*^9, 3.758844195157428*^9}, {
   3.758844226708227*^9, 3.7588443842539454`*^9}, {3.758844426141988*^9, 
   3.758844466955267*^9}, {3.758844502595812*^9, 3.758844578810742*^9}, 
   3.7588446477272778`*^9, {3.75884468574959*^9, 3.758844798240419*^9}, {
   3.7588453325141773`*^9, 3.758845335591564*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p5", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Arrowheads", "[", "0.085", "]"}], ",", 
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "4"}], ",", 
             RowBox[{"-", "3.75"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "5"}], ",", 
             RowBox[{"-", "0.5"}]}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Arrowheads", "[", "0.085", "]"}], ",", 
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "4"}], ",", "3.75"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "5"}], ",", "0.5"}], "}"}]}], "}"}], "]"}]}], 
       "}"}]}], "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.758844819776135*^9, 3.758844850760242*^9}, {
   3.758844940693286*^9, 3.7588449580031137`*^9}, 3.7588450139886017`*^9, {
   3.758845053763492*^9, 3.758845077431528*^9}, {3.758845112401536*^9, 
   3.75884521157117*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"p1", ",", "p2", ",", "p3", ",", "p4", ",", "p5"}], "]"}]], "Input",\

 CellChangeTimes->{{3.758841141400979*^9, 3.758841149175762*^9}, {
  3.758843663101285*^9, 3.7588437067412233`*^9}, {3.758844199765087*^9, 
  3.758844200635682*^9}, {3.758844756609791*^9, 3.758844757065859*^9}, {
  3.758844803984332*^9, 3.758844806064283*^9}, {3.758844962299244*^9, 
  3.758844963723178*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
U555EP/7fzkej8iThx/9zfk/qxbbYQ==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
vZbtg/7v+3IEBxFNhYxvFf8P3PKctQ==
      "]]}}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
aFTiEw==
      "]]}}, 
   LineBox[{{2, 5}, {-2, 5}, {-4, 3.75}, {-5, 0.5}, {0.5, 0.5}, {1, 2}, {
     3, 2.5}, {4.5, 2.5}, {2, 5}}], 
   LineBox[{{-5, -0.5}, {0.5, -0.5}, {1, -2}, {3, -2.5}, {4.5, -2.5}, {
     2, -5}, {-2, -5}, {-4, -3.75}}], {
    {Arrowheads[0.085], ArrowBox[{{-4, -3.75}, {-5, -0.5}}]}, 
    {Arrowheads[0.085], ArrowBox[{{-4, 3.75}, {-5, 0.5}}]}}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{{
     RGBColor[
      NCache[
       Rational[19, 51], 0.37254901960784315`], 
      NCache[
       Rational[26, 51], 0.5098039215686274], 
      NCache[
       Rational[179, 255], 0.7019607843137254]], 
     Arrowheads[0.1], 
     ArrowBox[{{-4.25, 4.2}, {-4.47, 4.}}]}, {
     RGBColor[
      NCache[
       Rational[8, 51], 0.1568627450980392], 
      NCache[
       Rational[8, 51], 0.1568627450980392], 
      NCache[
       Rational[46, 51], 0.9019607843137255]], 
     PointSize[0.04], 
     PointBox[{2, 0}]}, {
     RGBColor[
      NCache[
       Rational[223, 255], 0.8745098039215686], 
      NCache[
       Rational[31, 51], 0.6078431372549019], 
      NCache[
       Rational[52, 255], 0.20392156862745098`]], 
     Arrowheads[0.085], 
     ArrowBox[{{2.15, 1.75}, {2.48, 1.95}}]}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->150,
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-5.999999298811037, 6.}, {-5.999999155687228, 
   5.999999269646931}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.758840274647917*^9, {3.758840344786479*^9, 3.758840361775317*^9}, {
   3.758840394258832*^9, 3.758840586705245*^9}, 3.758840690248509*^9, {
   3.758840773024225*^9, 3.758840988770425*^9}, 3.7588411500635*^9, 
   3.7588411847046824`*^9, {3.758841242038069*^9, 3.758841258353862*^9}, {
   3.758841308974723*^9, 3.758841349603136*^9}, {3.7588414524421453`*^9, 
   3.758841476899035*^9}, {3.7588436657718554`*^9, 3.758843676649238*^9}, 
   3.758843707945643*^9, 3.758843767451762*^9, {3.758843853167231*^9, 
   3.758843894521912*^9}, {3.758843931529352*^9, 3.7588439432273273`*^9}, {
   3.758843986163362*^9, 3.7588440856726093`*^9}, 3.758844201398266*^9, 
   3.758844286248074*^9, {3.758844336394635*^9, 3.758844388366819*^9}, {
   3.7588444760098457`*^9, 3.758844484329298*^9}, {3.758844584330887*^9, 
   3.7588445970643263`*^9}, 3.758844691207659*^9, {3.758844727428176*^9, 
   3.758844758368824*^9}, 3.758844807662188*^9, 3.758844964650731*^9, 
   3.758845020045869*^9, {3.7588450689761667`*^9, 3.7588450817018347`*^9}, {
   3.758845128480358*^9, 3.7588451560833893`*^9}, {3.758845203077159*^9, 
   3.758845216195685*^9}, 3.758845344512195*^9, 3.758845439507606*^9}]
}, Open  ]],

Cell["\<\
According to Wikipedia, the (complex) hyperbolic cosine is holomorphic, which \
I believe means it is also analytic.\
\>", "Text",
 CellChangeTimes->{{3.758841814185391*^9, 3.758841873438755*^9}}],

Cell[TextData[{
 "I will leave",
 Cell[BoxData[
  RowBox[{" ", 
   RowBox[{
    RowBox[{"2", "\[Pi]", " ", "\[ImaginaryI]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"f", "'"}], "[", 
       SubscriptBox["z", "0"], "]"}], ")"}]}], "==", " ", 
    RowBox[{
     StyleBox[
      SubscriptBox["\[ContourIntegral]", "C"],
      FontSize->22], 
     StyleBox[" ",
      FontSize->22], 
     RowBox[{
      StyleBox[
       FractionBox[
        RowBox[{"f", "[", "z", "]"}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"z", "-", 
           SubscriptBox["z", "0"]}], ")"}], "2"]],
       FontSize->22], 
      RowBox[{"\[DifferentialD]", "z"}]}]}]}]}]]],
 " as the working target. The ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", "0"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " I will set as 2, and pull a squared term out as part of the function \
f[z]."
}], "Text",
 CellChangeTimes->{{3.758841920921289*^9, 3.758841945060279*^9}, {
  3.758842024817449*^9, 3.7588420989431973`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "z_", "]"}], "=", 
  FractionBox[
   RowBox[{"Cosh", "[", 
    RowBox[{"4", " ", "z"}], "]"}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"z", "-", "4"}], ")"}], "2"]]}]], "Input",
 CellChangeTimes->{{3.758841989932384*^9, 3.7588420042824993`*^9}, {
  3.7588420562429*^9, 3.758842056672834*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"Cosh", "[", 
   RowBox[{"4", " ", "z"}], "]"}], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "4"}], "+", "z"}], ")"}], "2"]]], "Output",
 CellChangeTimes->{3.758842005592145*^9, 3.758842058412795*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["z", "0"], "=", "2"}]], "Input",
 CellChangeTimes->{{3.7588421277329473`*^9, 3.7588421328063383`*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.758842133809381*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "'"}], "[", "z", "]"}]], "Input",
 CellChangeTimes->{{3.758842139158033*^9, 3.75884214207802*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"Cosh", "[", 
      RowBox[{"4", " ", "z"}], "]"}]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "4"}], "+", "z"}], ")"}], "3"]]}], "+", 
  FractionBox[
   RowBox[{"4", " ", 
    RowBox[{"Sinh", "[", 
     RowBox[{"4", " ", "z"}], "]"}]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "4"}], "+", "z"}], ")"}], "2"]]}]], "Output",
 CellChangeTimes->{3.758842143160046*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "'"}], "[", 
  SubscriptBox["z", "0"], "]"}]], "Input",
 CellChangeTimes->{{3.7588421507011023`*^9, 3.758842160341275*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"Cosh", "[", "8", "]"}], "4"], "+", 
  RowBox[{"Sinh", "[", "8", "]"}]}]], "Output",
 CellChangeTimes->{3.758842161177773*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", "\[Pi]", " ", "\[ImaginaryI]", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"f", "'"}], "[", 
    SubscriptBox["z", "0"], "]"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.758842168041597*^9, 3.758842189052732*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
  RowBox[{"(", 
   RowBox[{
    FractionBox[
     RowBox[{"Cosh", "[", "8", "]"}], "4"], "+", 
    RowBox[{"Sinh", "[", "8", "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.758842192216023*^9},
 Background->RGBColor[1, 1, 0.85]]
}, Open  ]],

Cell[TextData[{
 "I would propose the yellow cell as the answer if only the teal and not the \
orange domain was in the problem. But as explained on ",
 StyleBox["http://www.math.unm.edu/~nitsche/courses/313/s16/lec19_int5.pdf",
  FontSlant->"Italic"],
 ", the orange domain makes a difference. Essentially, working the problem \
can be done using the Cauchy-Goursat theorem, which involves branch cuts. One \
path around the branch cuts is counterclockwise and the other is clockwise, \
and a difference in sign makes them cancel out, giving a total of 0, which is \
what the text reports. Rough paths are shown in the sketch."
}], "Text",
 CellChangeTimes->{{3.758843306969429*^9, 3.758843353638888*^9}, {
  3.7588434077105627`*^9, 3.7588435435290937`*^9}, {3.758845287659175*^9, 
  3.758845295672577*^9}, {3.7588454700996923`*^9, 3.7588455446645317`*^9}, {
  3.758845618960145*^9, 3.7588456246858*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"17.", "  ", 
   RowBox[{
    SubscriptBox["\[ContourIntegral]", "C"], " ", 
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "z"}]], 
       RowBox[{"Sin", "[", "z", "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"z", "-", "4"}], ")"}], "3"]], 
     RowBox[{"\[DifferentialD]", "z"}]}]}]}], " ", ",", " ", 
  RowBox[{
   RowBox[{"C", " ", "consists", " ", "of"}], " ", "|", "z", "|", 
   RowBox[{"\[Equal]", 
    RowBox[{"5", " ", "counterclockwise", " ", "and"}]}], " ", "|", 
   RowBox[{"z", "-", "3"}], "|", 
   RowBox[{"\[Equal]", 
    RowBox[{
     FractionBox["3", "2"], " ", "clockwise"}]}]}]}]], "Text",
 CellChangeTimes->{{3.758738582349777*^9, 3.758738695251423*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[TextData[{
 "This one is somewhat similar to the last. The text answer for this problem \
quotes numbered line (6) in section 14.2. This deals with Cauchy\
\[CloseCurlyQuote]s integral theorem for doubly connected domains. However, \
in that section it was specifically stated that both paths had the same \
orientation. In this problem the orientations of inner and outer path are \
opposite. Again, ",
 StyleBox["http://www.math.unm.edu/~nitsche/courses/313/s16/lec19_int5.pdf ",
  FontSlant->"Italic"],
 "does give some support for zero total integral value, again, making use of \
Cauchy-Goursat. As for analyticity, Wikipedia vouches for the exponential \
function and the trig functions."
}], "Text",
 CellChangeTimes->{{3.7589917275617247`*^9, 3.758991920064588*^9}, {
  3.7589922640627117`*^9, 3.758992299236106*^9}, {3.7589923417228003`*^9, 
  3.758992392073133*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"19.", "  ", 
   RowBox[{
    SubscriptBox["\[ContourIntegral]", "C"], " ", 
    RowBox[{
     FractionBox[
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"3", " ", "z"}]], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", "z"}], "-", 
         RowBox[{"\[Pi]", " ", "\[ImaginaryI]"}]}], ")"}], "3"]], 
     RowBox[{"\[DifferentialD]", "z"}]}]}]}], " ", ",", " ", 
  RowBox[{"C", ":", " ", 
   RowBox[{"|", "z", "|", 
    RowBox[{"\[Equal]", 
     RowBox[{"1", " ", "counterclockwise"}]}]}]}]}]], "Text",
 CellChangeTimes->{{3.758738732579949*^9, 3.75873879710261*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p1", "=", 
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"1", " ", 
        RowBox[{"Cos", "[", "z", "]"}]}], "+", "0"}], ",", " ", 
      RowBox[{
       RowBox[{"1", " ", 
        RowBox[{"Sin", "[", "z", "]"}]}], "+", "0"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"z", ",", "0", ",", 
      RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "150"}], ",", 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.759003697033648*^9, 3.7590037281990137`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1:eJw1m3c41f///42KyChKpaKFFBWl3aOiYWRENLyzUkJmkbJSUih7ZCayZWbz
sHf23hzjHM45rxSlUL/X5/pdX/8ct+vFuc7r+Xw8Hs/77bpeZ6eh5TVjNhYW
lkfsLCz/e/3/P9/g/34zPHBAePkfAS/XNCgE+OuBaFym+TeSn49ceujjbwms
EDA/SLLXZ7+qqTR7WCnoyion+dX6M3yu/i5wMs8lIYrkDw9su14XvQDO0vft
tiQ7raF1NaV5wMRJ6SPnSd4vtEuA+4MXWLsoNq0h2bXwQsgFfx9wqPgdVvWX
AKGbx+VOVPjBhIjah6ckK7c8aFYpCoCi0NuDEiRrRCq9v50TBDsEZNVaVgio
bfwmbJwWAhduzS4+JPluqu2ASfx7MN0R0beK5KFfs7r3osNhWUftnPAyAekm
4oUqftHAnuBZE7ZEQBvHBvWt1R9ATuzQyw0kn8hQkPYsj4Gas+fiZ34TULja
K1e3MBbE+r5zKZNcYVw5WZobB6mfohNiFwlwjnLg2pb9CXaner8584sAnk25
Z2tSEsCMZ0+L808CtHpNOzYkJsJDwuhq/gIB20P/3L8ZlwRPdT7MC8wT0FUq
FN4RkQJaHxt/PPxGQD2+t3n8Nh2Usm+usiYIuNWfm1CtkAFE8WU1cyYBaYa+
H5oqMsDGRD5ImU7AmvMTcs2lmWBfJ0pLnSbgtalHeERuNvzhXNtpPUXAY5cR
t5dHcqC25vmS9CQB5QP3XO5n5cDJSX1W/3ECBNufnNnx+QsURU/M/Rkk4Ffb
3kfKn/LA1O1aw/MBAnC9eQrn7nx4q/FnjKWfgPdUBlvZh3woVrRqne4mQOWZ
Qui2iAJYVk/JudFKgKjRHLunfxEoeJ78WVNOQICz8C5hZ4TvHMG2CUjA0kcU
WGIrgxUTmUHnEgI8J9jZJi6VQXBiovWGAnJ/rP07EprLIPHSE2xKJ2CK//T+
haFy+LDk4/wunAALA74vQUuVUP+g5N9QKAF/3/L3HYIquNMrb78nmIBSu1cy
NW5V4HPbUSXYl4AH91yOj6ytBp296+N53Ml6UvtqWydUAyWxM23K5uT+PqPU
3JOpgybdDmHuBwSImKnLRTyug6u0igflxgSwPCmOb8ivg3Iex40CegQ003LP
bIB6oF68WqukQcDbmGRJJeUGkDP0erTuCAHvwsRPqRg2gdCqHMfR70ygvQ0s
W3uxFQ6U301pYjIhmNad/c2oFepvau7OnGECh3GRb4dbK/yYW/XDcJwJn2Ii
qN5lrXBu35i0aRsTXEx1Tnw91QbyTqs4OT8zQZ4YjXc63A7xBl6ibwyY0P26
W8pkSyfofN0V6qrLBHbaH6eSY51gXmjrZKXDhKPFppU82p1wpV89+MRVJjRs
nuOL9u+E7YL1e6yPM+E/m7ODL7i7QHS7cZ8dDxPU9iilqC13QYzspX1TmQww
v/4vp6ivBxKGZZa4UxnAyLTQaPrZA19vWGVIxjNA3fzhwR6BXmj96NZwLYwB
shIXAgeu9sLZ41MTV90YcLw592xUeS9Ydl359U2dAefkh9esTuyD//aI8S9Q
6XAzqv+QhNUA6JeslTg5TodYbZkoW+8BcOqN1HwyQAfpv3ut8xMH4Em+Jn3k
Kx1Y/qs7ID02AF978zR0s+iQ6fzpTL3GIMwG9+txP6VDbaDlaN7hITi0ye2Z
6io6nKD5a1+hD8Ot2u12gsuzoMQlzb2GawRy/0h4t/+YBUOjz38LxUegcHFU
4BhlFjYGD7lyGY3AW7H3HTHls9B89DcH9I1AoOezfSxOs3Agrcx8yWAUxLVH
VOYYM1AwSKXJKo7BZ4qiEU7MgFSgWpqzzhjctaZT3AdmoDUpxLvKeAwe9MpL
L9fNwAbx7Hfn3cbIegs/9C52Bn6l5h1iKRoDV8rYGSWdGZDZGPDQe/847Iln
czhaQAOC58Wuak4K8PWdPVKZToNq6vInt40U2PpT5INSPA24+685nNpFAa0p
0YBLATTQWhBgjz5FAfMfseI/zGmQFpqlLGVBAWokQ3inCA3Yr9osGbVT4HWk
F/eYMxU6IkuN9oRMgF71umdJj6jwr8J89mLsBFyJCqOamVKhu+2cgWH6BNj0
MWqHr1PBRO8xt3ftBEzwwbDjASqskV7P8fHXBHwyKI2L6J2GO9VnOLq1JyH1
fmWp44FpiDFqaVFcPwUc64+xRotOw5Ug5u6C7VMgJeoeUig4DbdH3m/aJTkF
pl/Mvg4tT4HsFYX60QtTsJ+VUdrZNAV/a7axrH80BbM3r1V6mJHXJcPDT3RN
QZz9d07huEno5W+UDPCfhkoDMT+LkEl4tjL08mDUNIhQ4oaLPCdBT9ePtzpp
GvRHJHvlrSchdqNT7EDZNMjq6KWuPTsJnx3U7XKZ09AQbChk1T0Bjd3JQyKK
VHgRaSlfwTYBKo2FXCmLVNgjPPYgcIECv8XrFo+w02BQxYbdgEqBO6Envufx
0ODntbgo2lcKuJi8X0rcRYMcf6vB/FAK9N9hbjqmQoP8vT+zr0mR607Tn2WJ
okGZZ67Au2vjsPDXXPXY6Rlos9/d+0VhHK6ab987dHEGpJ/zve6VG4dt95+k
PVObgU1X2wt4hceBl+5Y99FwBsr3q7WdpYxBc8StodDXZN3pbTmWaTMG/Rt/
HN3VMQMf0qT++/N2FCjDSikhhrPQFcZNdXEdhV81A0v5prOgX1DxiNV2FB7I
HkrusJkFemfTh0WdUbCQv7p5wW0WbNQXo/J2joLHShc79eMsXL6xXuKnyQi8
ENB94D02C/E3w/fd+TwEIrfuX624SQeuY0xXO/8haHwjm8RtQIcd29wzPOyG
QD5jn7iqCR0sXN9kB54dgrXd79xK7egw+iJ4za3mQXB+aPdKJYAOeeofO0Lo
A2DTverCtkby/20DfvHt6Qfp3x/6nY8yIOyBkTVlVT+Y7BK3sD3NALND+16m
T/ZB9rBWhp48AxSit4YeTuiDtKC64yIa5HVqos3wvj7Yb+y6+6Q5OYdOt5aP
S/VCF8fT7KEPDPic35HSeagbUhtvdzWzM2H/+fyoJv5uMC0QDv+ylglpJS+U
Sr91QU3O9q4APibAaZW5dxldEJd7OlpOmAljHRbPpg52wT3b8v82yjAhwX7N
Kzspcg67Fm+Vu8MEvbPe9Ft72sm5M9n4O50JkV9YFutWt0N/X4Ha0xwmsL6w
95KZbgPli15yP/KZ0P+40mQxqQ30X+VLNJczwevq4za1g23wY2eCq0QHE1Lp
texHTrRCoN8dfot5JizU9Ijc2doK1Te3yj9aZMLFfPdnnL9aoCthsdZmmQmK
aW9OvXnWArJhElU3VhHQytn4RuplM+yf32BWJ0CAu6ViE29gE/waPxN99DAB
h0ymLGeuN0GIpd3zMvIci7CfWodCTfBHcDhe/jgB3q6FVprhjUBpLsuTAQKi
4op9JD82gNObmb5sFTLn+H7PiP5cB7Yh7ffO3yPAzOu4xAarOuiuShdSJ8/V
xAMqvs6H66A6P/uvNnnuKu1hWl3MqQVW7cPmV20I6EybFXtbUANNyg4Zg04E
mKcRLBsqq+BQiMK5lwEEZNirx913r4Kdg6Gia8lznt+w3yj/chU8Stn89BWZ
A3qM5WyUmyqh88iZYNNIAr69pt4/0VUBr14wDXvjyes2Rq8fhFSAqcj9ZdEk
AvIvlZ4MulkBvJ7OXIYpBAhksPuOkDkjx9fY7SuZO1iOhbw/P1UGXm7P2hXz
CTD42DGpllgGKTsusmkXkrlKY+bELdMyEBoM+HirmIBiffMHNYMIklu7Za6W
EaCe2r7Hl14Cv6WpL3tqCdApvlrcyVUIGhpsb127yPULvL/f9V0BWK697SPQ
Q8D0E8cXezcUQPUnvaWoXgKCHUSN72zJh+22C7zRZA5bEdA74C2eCzKs9lsV
xsj1S9HayZXyBRw6L+qHkTlOh/mU7ib9BRrusvLQKATM1K9zND6aA1u9WcMs
yRx4b8IC5y5kgQ7viMPOWQL4tnB9UqzJhEq5MuZJMkce0bmlGqmYCZs7L9Sp
MAjYZvHN8Lh6Brgd25d4k8yh56cuC7AkpAN9hu+zFplT50NaujzSPsMaZqTQ
lTkCOhq5E58XpoJvRr3g5h8E6HMkS8+XpYDbyGLCPMnj505v1q9NBvkz3yPr
ydw71beTbW9nIojdfJqpS+bkK+/MHJz7EyCCK6l5K5mj9zQHnW8fjYe4trGr
bSRbUTyyHjDiYJVztbU4mcPvsR/ntB2OBaFtR1U7Sc4o52i0a/kIfw+qyzz5
Q+bi6qVLj8ti4B9StwuQuX5RemudReYHCNLu4P9E8jhP15FahWhwZ5vmkia9
4LrirECiWCRMaK9wfya56HzjmMZMKEgMxO0KID2Cn6WKZVtTMByqXTi2SPLG
Xz6FI2mBsLqzTlOL9JLlJ8oJkT7+QJNcZZdA8rUngnra1r6Q6uAbNUeySLHg
vGC8NyR8v/FVhvSegeJw0ccPXkOTijKbGck24ayPmg+8hE+VOmfCSPbtEzqj
MOoCt4SsnctIvpfPHjN+zx5yvb2rh0h+ciOdOt//ECQYMRu+k2we9P7O8dab
UPMqxXiF5BbW8ViW/edQ/UB86T+S/9T9uhO+chcPHvXb/ptkUfWqG8cXbdDO
ycKNRvLFnRXpkdbPcNT4AqOV5LCCuSSnhefY0SFwJ53kdRdVbMRlXuHNw/TO
lyT3nU1mabTwxJ0PezQ0SF77vWbP/ZR36PCH0ilIsubIQZ0VWz9Ubtt1p4W8
/0a5MLkL/gG41SKB4Ury08oXoc8zgvBPm8eLfSQf02qZKGwOQS+3QZF6cn09
zQ1eMOjvce5NWYUeyeGWooObuSOwxU7DnEHuz2DDvPbpfVF4Sjd9mw3JN30n
0lJ2f8CCtuUOBrm/GScuJuXIxKD0jzv++iQ/FQ9syz//EXv0V3QayPqQfdrQ
n6ceiwBse/eTHLSxT++TxSdMfjzf1UZ6XfnuFPkAp3jsSrlQKETyJ5UbvU+9
SYPhLYjXIuvRVldp4mhyEm6pXgrNJr1OfELsmOZkGn5OtaWt/k7AKVO9a2vm
PyPDxHvjKrI/ruvd0rvBmoEnXteTGknOj2pXqQW+TFRpHe6pI/stqsBIcv5A
NloYytsvUwl4MVDcJZaTjTxPT61kkV6nd0jgj+apHKRzLvjok/3sHca1KVLx
C1Y0Sw59IPudwlrzeMo4Dx1vxuzMHSIgVmf8xCglD90ERo6eI73ulrW8RKdB
PvJv5narID1OPLCOM/m/AmRpiatMJ+ePx57xZ1zXi3DP8uufB9oI4DLacbS9
vQhbKrs6n7QQoLozY1eAejGu7TrILP5K9mfrHxEWlRJ8YowdUg3/8/qIyy8u
IFpYRttlVRCQs5Z6eX0ZoolZxIkych5KHXerbNxRhsI74VRNKQExFh67L0WU
4bMfxsuF5DwNyTxduDakHAe/Hnl5OYucv8EzQ6Velci6mybCiCbA0UA94VxD
Japf1OR2Iec7R6J2eAlnFc6Y/zuzlvTCc34nahLdq/DA4qtna8jz4exfVccL
LtUoVxZhEudFgE/l64121rVom38n3OIxWW+9JjG2Go043FKieF6egKQXVRsf
BjaiiInSkUDyfLux82f0nZ5G3BiwT3z4FNkPmquT9v3XhOWVeyR1yPPxMZ/j
o/9MviKLk1vl0B6y/mNGpfY7teAd/mk4S563XG+t2SOxBb8SHEfZWMj6t1Me
ZmNtxVURBQolS0xovJJd8598K2o55edv/sGEd+brlQZqW/HtXoFNxmNM6DgX
30hvacNi13U1WsVMmNnqd6f3Wxsmsrcve+YxIV/wUWPp+nZs5Z03zM9iwr4m
PR5HzXYMsu+rWExkwsCvln153e3Iv+fNIl8QE858F/cUH+zAIodS5/dmTFhm
O2OcPt6F48Hmgbs3MOHjYTntq2zduCS4IH1nHROuz48cmtzZjTS5RQffNUyg
Kmm6shl0o4b2oPjgHwYE7X0W8H24G7W2RPHzUxgwK/2O+aGvB9Ntwt/Mkt6o
u63gx+/6Psxl5kg5KTLgx+oJ1SpqHz6vnhfJvMCA2JFQFw+OfuQJtvszeIoB
42vDYFGhHzVut1puk2aAa+MZFTfsx28Cyn4nNzBgq3nrocPZA6hyaafhQi8d
hELab2HgELaXZ1601afDk1jGZ7+MIeRQ9q6TJvNoaFL6sG7TEHpJJjpQNOhw
kd08d4h9GEU0kh8el6eD5ZO/Xq9thlE9Wb/Zdy8d3FV5/jmqjuDLJNlVK9RZ
uH3X3PKm6ygulbjubiXzMrv1/Ez921GMkNCZzyHz9Ink9WZy4aPIuFkgHXBr
FlS+7TRnzx3Fg5UL06eUZmF+2kzo4ewoTgg/iT27bxZuKJooOF4fw0H1LStc
U2Te7z9UaCs2ju+eB7p+vTUDz2ruSNkdGUfJFQbPLo0Z8HpU5GB7geSDzRKW
l2fgb8uBd3fujKPSeZENP2RnIDXN9tjPoHH8G2zA8nHdDAzS3m2TWEXBldSD
JVHFpDeuW8X5bJCC1uMs2eJCNBgyt9nQRqPgJmaXacA6Guy7qvJ05y8KrvJa
u26RlQaa22U0M9dPoBqv76ZUOhX64lLLvC9NYMSl2A9YToUq6dFLB9MnkP1Y
pmwI6YXKuh4n1zpOYtbL/QI78qbh4Gmlv00ekxhAqClZpU7Dk1WnbL0CJrFr
Qj+lOGYamiY3GC8mT2LUo54Fee9psE8YEvLvm8TtUeo/1xlMg851heMVR6fw
6UH6kufaaZhV7YtknZnC6ou+QkraU8B7S3j1poUp5Nh6rWpKaQrGQ50q97BM
o3KJxHcnmAKDT8UnD2+axjx+7cFwiSlg27CvdvWFafw9UHsi+M8kMMyeLYeF
TmNz6d5gj8hJOPW0S9HoPBWFr8qxW49MwPdb6ZFhKlRseOcmb9A+ARJSBLVB
h4qK9ymOytUT8Evj841NFlQMEuCe4UmZgKHi5Qs3wqh4gP/hZmW7CRCX2PfE
fY6Km3/+2pHMPQGihgqOlmE0jNq3bnGjDAVSi15GYRwNv3Mnt6vsocA3t7da
nOk0XDXXt8t5EwXeX9xg9aKShm+YDNnWP6QHFm7aIEqnIUVW9o1M5Tg8Lg6x
+XZqBksO1nj8IL3x0cu4iL6uGbz9StTohcUYKBk0cXGPzOBf+aCDWvpj8OVC
xO8j1Bn095ncJXptDM4tL6na/JnBiIPzb5OOjkHF9kQ//x2zKGctOOm2PAo6
i2wX7xvPYoTCxk2ab0Zh05u8i+qMWQyiX37KDSMQ8CVxxXthFm/e0rjxaucI
2HZ5U8tXZvGcT9mrRfYREDXgUBXkpWOdf/NCRd0wHCMOb74tTUfVwN2r5jSG
ofsMM9viIR1jn17bW2A4BPZXFNuiJuk4yR7Jf8R5AA6/crM0oNNxSezkvy8G
A3DDo5Rj+w86npfPuHz44gA8MMoVcWFhoPblQVbBdQOwsE2pjLmVgbPKLkOe
7/thU271naeqDBQ94qKokN0Hm9uizx/PYOCvkU+sQuM9EGXmu0kol4EyetY5
bVU9cLnodQ6ziIEfC1NjXiX0wEn3yYuvaxn47yb18oh5DzhrrQ65O8zA4nM/
PVV+kV7YpVZaxsXEvzEsB7Zzd0OrtGHfyn9MLHRc2F0v3QlXuzfhf0ZMpHgf
eKjJ2wkf3I4u5pgwcc3ztuUeRgcMaoTdUbRlYpOok2BragfceMZsW/uaiTjz
3z4nyQ6I/XSVi5rOxD2OnrwdpDdKse58XJzDxPHZwq1rVrVD3I09214XMNF+
2ZLtCKUNflXLb1ldyUTb9vE3rjFtoGd2MDmoi4l6W0Ndhra3wfA7BVb+30yc
/aJ0Ln1jK9Qz1X11Vph40FWuV4LWArzpHZeCWQl0b1kRmIlvgWM89/b+Xkug
Jj3uhcauFpBcsPTQ2krgqwXz67mbm6Fncn5Q/wSBXP3Nt6nsTTBevnS+zopA
k8E1x2w7a2EL4/f2ElsCn73ZoZcTVAtXlGzEku0IzJ3sSSS0a8F09UyBuSOB
DzOTR7T6amDcm6cnwIPAxg4n34GhakAJFY0HEQRedWjKmJ6shKP5HTGjUQSG
rlO50h5fCVbPtwiqxxD4xX1xKe9+JfhKP74tFE+gpWjiz0e0CjD+9O3u5XQC
f0lozeXSy0Ev+eXkgTICXftuOLdNIBjFP+cRqyBQIfnRt833EJT57FSFqgh8
Gmvpf2O6FPwO39gyXksgT5TURBmtBD6LL1RvbiFwDd9/MieYRRB2LCCxvZVA
x+RfwRcti6B17vmHl+3k9aCf4srfCoHrYWxzaxeBibbuVy98L4CiDbGbuQYJ
vNHwT3hiIQ/egnHYyyECDxyrv1Filwdl99Skfw0T6NFKLfX9lQs7qg94VY0R
WKhV5i72+wvYSdvwsUyT+7Pj2KP1y9kw19i0+RSVwJ+cvDbomA3ji3GHLWgE
Zvx6E2yykgUlGlG+xbMEqjsdak/9mwlBQ11LZM5EpucXLxbWDDDvfxbx7RuB
N23G2DdzpkP+kaD3I3MEfmp7+lKc9zP4yEFi/A8CZ38cOnx4ayrMrjUqcJ4n
sHzXSOd+0RR44i8qprZA4CW+jiURsWQQORq7vu8ngW0PyyoWDifChq1cvv6/
CFz3Rae/51gCsCmpPlBYJJDzitXdnDPxMHy6Zr/fbwKD/ljif4pxsMUsWfDA
HwJZff5x7FeLhaXCJh0kefVpg6wfWh/hRs45evMSgeaai8JP9D9AhanGGeVl
Asf5Sz+ZNEVBpe4OKpI8FTn/pa8nAkJivegHVsj7Oa40Kk8Jg/YDLkr+JGfZ
2EUkMEPBrHCU9RvJqvdlDFf/CYaS8fcbLv0lsCHqeNJ/q4PAnz/YMZDk8TkF
WgZ/AOx6UQEDJIeZC4b9E/aDbaq8ulv/EXjyXsO9QNV3EH/TtI30HpSto9/c
ZewJxob10c9JPvuTbyXp2Stw/i1Sm0Qy0/QLHPB3g9CXdy83kCzUibu0NJxg
9IyPKIVkn3dilVecHwPHkbBr8yR3Zau7WGmbgbLS8yHS45CXF4b89HXA6viF
ctLjMCjL6SF3OmC15+AK6XG4Nd69hyvCCPd81Aig/+/9g43rhGKskZkd97yH
5OrdXxh7HzkgX0N/XSHJA6Waf4NjXXGp4o9JMMnbebZyC719ickaPIamJFvv
T5byt3uNYSvbcuRIdv/53I5D3xsbd8npLZHrEanDv1S4xxfz5+4Z5ZP8I+zF
HYst/njbEssektyya/Dhdt5A3P1Yw16Y5NPXdTNr2YLxR8Yhj3Jy/ekllzPN
f4Xgtk8230ivw25JygI36XlVk04t7uR+fj+nYHGsKxKHdJ9d5CFZuiMsq6I+
Gh+NyW98S9YDFBpI7x75gN89sioek/WS9GvkeVjHR5yzC/8wTNZXRtT71y1f
Y9GHp6sXSI4fHmj/VxuH4jMdN2bJ+oxO/3RBozgeC6JmPhwlOYrr1Tfr3ARc
3Tsv/4Ss56nPH757ZyRiWntY+BRZ/zyEwqrMuGQ02xoYfJ/sl43nBtuTvUmv
26tco0f2EzQ/FWsKT8fz/qmLqmS/3ZglJ9/1DHx4LO7eBgaBC4NPax3vZmIt
q7mVFNm/GsH67dfdsnEu+UHp0BRB5n+RwtK1pNc1lK53nySwmZ37706/HNzB
/rM+f5wg33eZtSf6C5b1dXjlkPPEuCSv5WdxHnLx5PFtHyDnSe9ZC2mFfJT2
Ohfh2Edgq/eV43qN+cjesL1NtJvAd76ZuSl9BXhOwSZvpZnAGeaMLH2hCK2u
qM+sRQJ3/qj89WhTGXoxeI5Sigl06b95su1mGRLVP3yzC8n1udIwLhFZhhOf
MpxP5JLzt9t0S8Pucmz5Vivfn0rgKbNL3O2HKnCbgBW3VSjZfyyjNtOKVfhJ
e3V+YRCB3IoxsnPeVWioVue67E/g7YmY/QstVbja/tsD47fkfiDxePZ6NVrI
r85sek5g7zG2uz4GNbhtXq1pzoSs/9wuqTj7OtzB4pQ+ZUygfJeEQNeXOqQK
Ph3tMCRQTPg77d+POnRNpEmH6JL9PDsvLW9VjyOyUgHlagQOb7M2dzZpwAIB
2v74I+R8vsVrUqjThIO8EUqihwlstw+RfxHUhHEfeav8pQh8w/dy+8WOJvx+
OKNBX4xAo+Rln2zVr5i/pQRihAjUP81Sd+JiM7K2jwXlLDLxC6e5uOXmVmzm
EfuaM89Esyv/VoSOtaK++O+Had+YeKl400Dx9VYsXXX+mweVidux1vOPfyv2
0mwExnuYeGK1KFOBpw2rH2sU7f/CRMb0g2N8rO14blfIvm2mTMx/2BVzcbID
Lz08fbX8Lvn3he4+U6s7sb8kJuM/PSZGbbpV8FysE392UU47apGsQwmPv9+J
zEDtEPWzTOzyWBWcROtE+4j8Yh1+Jn689+qQN70LBfmy/WfTGCi0sp3uxujB
aj+n0WcJDNyulK12k6cXfaZfxbHHMNA9waZGQqoX9y42Bv8OYODT/ua6LPNe
VH07fsPFgcxPY5w7bWZ70fK0Puv8BQYmwnux4Ok+3MN+o9OnhY4rLklSR/oH
8K/FYO3ROjrec/dY7bU4gBW8SaUdZXS8laW6tX/TIE4Jq5X+yqSjC2OhV19z
EB8l5cFoAB3l7dORr2kQj75w3XlUm4577imMzxYNoa/uztcrnbO49N8eC6Og
EbR6Y8eR2DSL9g5vKjKzRvBs7HiLUtUsLrvxKf9qGcF1b5UuOmTPYpcZK112
9SgK6g+xP/WbxYslOv8sYBS/PNhPWacyiw9fX8nnzh7FjdNiMm+KZtB7PO1Z
ZfAYXs1MejuWNYPOodnTlNgxVPHcZC+bPIN1M07rWTLHcKpp/XJl6Azuepjv
t79xDJfPRK4NfTyD2nz36ar/xvCFtw8/r/QMrv8goVx1bxwFJyK5zpN+wEiZ
pWnKUPCTc5h6iy8N7Xbzsk6dpWBD6mtTHQ8a8moV2dgqU7D+t97u649o6NYR
ctP1LgUlV92krVGlYbdAzahBMAUf2Sk0X2Sh4aLX5iPnf1Mw46eJx3l9Kiq3
yezRLZrAbcqCm2SuU7GtXVZBu24Ck+bFioWVqPhKM8FJqWsC1bOFb/fLUvGM
5mHpncQEPr08fno1BxW3Cp0T8dg1ifQ7cFswdRpNONQ3yLyeRHf/uQrpuSl0
sG7fMas6hUcuXHe6MjmFp3eyWOy8PYWdLkF5t/umkPJV/q7G/SlcsjteYFE+
hRqxx45HuUzhZzZF9ct+U7jlrP722fQpvN0d8rX64BQmx4uPqPJNY7D2JyN+
k0kMPrbqi1j9NDaYTP89rjuJ4pUt3vUd06iSe0VDV30SXUIdXO4NT2Okq7h4
wPFJlGmjJr/7MY0yYp20cs5JvHdxXVvIdtLjJLYaiSVOoG/W3EYvKypyzdTv
E6VQcDdbRCplPQ0r99lZf+qmYFi9w1SVMA1V5mNb9zZQUDGXfyZ6Lw172ihj
QpkUVMhIVpA/QcP4ua74cmcKftNIZgd9Gu6uc3wsvYWCvsM17zjTaMij7nPq
hdI4Uk+t3Oo4P4Pnt8jZZ58Zx8n8apsipRk8KxWmO3KI9HcHBaVIzRns8Gg+
JCk0jn7VPw6qGs+gTY6PljdlDP1Hr4fffT2DzwQ4Tro/G0MHvnlRw68zaKnd
elQvcRTfGoil+V2bxTPPnT9xhY9ii5xuedqtWWwTe7Qr6+0oCv+J1qo0nEWX
tVT1BZtR7Ar7+K3fZhZZHFf3qZwZxQXYU1/kP4utqjaVrz6O4PbA7OsX2mYx
Q21/ZT19COMn+JevK5J9PNjd0N08hEKBjemnNej4/vTlpwMZQ2i2V8RO+CYd
F1y5vzc+GsJ7HJWHy03ouF4575DS8iDacPaJp3nQUc2gVrVy7SAO+JlKra6i
44XmC3GUHf3ofNp2dYIcA1dNGAn8/NeHbqP9373OMMg5L3uKdawPrRnZGSYK
DDxt793DGtuHPno8wWuvkddZL8ulifVhLduedqo5A7PevN+fc6AXc47EPBQm
5xb1b/GNMtluvKBv+l6BnYk+uQ5twpu6UWWgfaCIk4lx1WpU68UuJEKdm/bz
MnGySJaHt6QL79RrZS9sZuJ6++C/ay514ZLbNZvD0kw0VW7vY9XpxGsnxYMv
6zAxaFLuherjdrzcdqR3MpaJinWr+7h12tHcwvuRVSITtf7F51Ydb8eHVadC
f6QycdWlSbF9y21IuXfGmkLO+SGLg8klbm345sBj5Qe1pJeJ6ecK+7Tiv9Hf
2etoTPzTn92Pil+Ra9dHtRTyHBJt55hfx/EVtSQCf/pJkp6QKlWiUdWEGgc9
MyylyXP1olFKxdkm1GcXuskvR+ALRzE+BdlGfPJA686UAoG2MuwFXVvrUWSs
UXVCn8y5Hi318T11+NW3MP7UXQI/XFcosQqsw874faye98ncPif+nuCpQ1xX
UcBtQaDFitK5cJZa/HN6SST2KYEpT79JFU1U4fWbbH9EyXNdWfO27e6YKoyG
FR5qIIEl9aqt7v9VYQLb603xIQQedLi040R3Jbo47WfjiCTw3PuN+3RrKzCE
XV1aN4FAFiFtxZAXFdhg/l9bfxKBL08f2/YVKvB3/x9DdTJn3LrgLr4vvxyz
9wmpiWYSWC92eT4usQyZX8uOaZI55SyXQ33e3TJMtRQ//YbMMdbNVfRq0TI8
Ylu1L7eUQHtutp7Ew4i2p8RK50kP3N1o3vVkfQkmzxYWrmoksK947I9/Sz7K
C152tyRz1DmBkNHT6vloJL9eabGfwJUHa3JGW/Nwk/mjrQ5kDuPXUo7d1J6L
Ly57DBqOkPtzWHEHdOZgZWHfQPcEgVL1UfQiLZKNbvwQIXOed6F8gmxXNjYw
4gUMSK/bnjmiL9idhZdGHz1sJD3OPUPPIKonA+uVvJ3OMQn0KxLj/amTgT3C
RzoUyVz537HLKgEZ6XiFzfCgMpk7c+zeSjdkpmHksvqfo9/J3Jh3T/9WVip2
PA8xESE9bj9H9X1KVgpK/7MYZCFz7FHrsz9Hs5Ow+fNcRwrpcWFR88vXcxLR
54KMzmMy9w6OGPdW5SSgp5/0iByZixd2la/z+/IJr/GHL8eQHvfQ89ok80sc
Wgdk+CmTuVosk+F3OTcWnz9pkmSQPJkUdW8mNwaVV+xNNpM53ULuHu/RvA8Y
RCle95Hk7M9HBX5ZROOqApuc3WSur7ly6JCjZSTKbHfQiyT5hv7jH78tw/Hq
50wePtILvL/joJXVexRZy4JPSH6Z1WQ2ZhWCwvWKtv0kO07fFFWxDsKbr+0k
j5CeMawq/jTTOgATRiwn3Ek2+ruwuN7GDz3u7YxpIfnqS/4TgxPvUC77if56
0mtcFy7Ue0964pdbxruUSca/3B/lpl5h9bfeKUeSK/8tVPRPueEcR21aPMnR
Xlt05pud0PfwXvs6klt9CnP3tz7GmpWZC+Mkj6d0XS76aIavltav/5/HKR3a
YX9ISQeD8oPG/udxZ7d4TsgZngfvctuc/3mcmhVbqIz2XeiISXnzP4/j2GR6
mLbPBlIoZw1mSZY5+fltjsRT2M1/+FQXyav8ezOKBZ6DSLqHUB7J5//u79kq
4A7XLiv99CWZsuZioe2GNwB33HoMSbaIDL1Vs/4tyD45VXSA5JYY1cHXr33h
yuYXMUxyPaITjE0lX/uDbpmJZyLJv/ybdWo9AoFvbuXxLZKdimv36HkEA+7T
vruK5IAqX425V6HgTn11PZ5cfw7R0Ea2VxEgMdN2rp3cv6ITB7WfPosCdxae
6Dskez2ZvPz4+Af4sWVWjULu/xU7zZA+qY/g4cuZ3EV629rEcA13iVgQi3+t
KU+y0b1cmwO746DgoJR6EllPB0xw0WxzPHhpOsjfIetPzPfOJLtAAmwwsjqZ
RtZnlqTMlWCeROBrk3SfJ+tXsXDKJYktGU4vRGwyJ+vbdMfU7hf0NCByKqX/
kd4m3+AqTZ36DIKSm+r5SfbaodN8cSwdPI9W5G8l+0maSGXOz2RA2+6N74XI
/sN6Zc37I1lg8N3n7heyP4tirSee6GZDWpNXxhvS4y5MzLW492XD2RMMTW2y
nyNnf5zx68iB8dy1H3vJ/l9aGJEyq82F1FTpu8/J+SCtmK2opZAHbLEttpuH
CVT/NdFyrDwPTjXpDCWQ82Tgs1MsozAfnpk/x3Ry/pQ2eYqu/1wIqZG3Gow6
CDzJqXqlQbII1nMpZpe0kfV/u37GMaEIttVt/M3XSqBvyWGJ5g/F8OADNSKy
icCee2KwPaAU2g4d1PivmsBjQcs/o/gQcitLDzytJOd9+ZWTW7yRdJr3Jj7l
BJ6xHnv87EIZcLFzsMeWEOi8ZcPAvlPlcP3G9laLL+T9/V5/v3h/JYxED596
H0t65bpV4X8sKsH7274KzhgCLRM5rslmVcLPjYM3LaMIrBLRXgk4XgUb194v
2/me9N7U2aP8F6uBMSrvIvyO/PzPLodTdGvBgw0fG9mR8/fb9Pby6FrofsRn
pWBL4Daz+PmQ8VooMM1+vc2K5MW/1w6b1IHi39ebsx6QHsy1sZLfth4sqMuN
NqT3KR4R+GXt0QjHtVq0lc8RmGvfNzVQ3wg7blTFR50mPc85deXMuiZYDHy2
h3acwEOhztdnfJtArNYozYj0wGPRDjFj77/CpSZuAWIn6Z2rPqidTG6BV+n3
9+qzEtjBz97NOd4GPTK1n7ILmEiNObrgytIOa4Y4gs6R57lsWXX8/I52OHjr
xc/qDCYaSq6Nbb7dDntGAwULE5joJRknrdLVDh1vrQYvBzFxeW4z1/3aDvDZ
70+uIxO179KapxO6oJ895nT1NiZOdUY1VVZ3Qcp5zwJDISamRp6zDKN0QcWH
Fy2L65l4/jnT/ZhIN5w7t9zIy8FEk72V+w8Fd4PsxfID498Y2E+cmRd80QMm
56zKxStJr7O68t7hRh+oXR4+ctyQgTvtt7RzP+mD5d1blO/eZmDhHfv04JA+
CJe9NeWhxUDhoAeywd19ENU3nP3lEgMdDr4zOKXVD8KZXJQUSQY+SJV5sEl1
AFbPp99aNUdHRpCldOupIUgp9nj0yJ6Od/QuOxrfGgLXa0mHgyzpuOaXhdr3
J0Ow04jIS7tPx2OyRobfvwzBF1OefTU6dMwNNlDwOjgMixTB4cBjdORIWFTZ
vHMEOAalolMWZvH8oUCVTOdRePDlgU6L2SyqnqsRE387CiZFG68LGc1icO8h
49DwUWh2isjSIfMvUyT8r3n+KOQV/AkuvzKLHt2OssNzo3DiaI7iyb2zqH34
pfiQ0RhcVet9UT44g7Y/BXwOK4zDppqEHScukR5XoQ3rro3DW9bQRb/TM2jQ
ntc1pjcO5/TuvqTIzGBo6cNPTs/GQYJ6u9hKZAYPFIgb22eNw77Ast+yizTc
tMuD10qEAmHiHfz6iTRU+BAafnuBAu+O56gYstPwWlCVSBLrBPCnsyl7/6ai
0w72xjmeCWConzidQVBR3bTN85HYBBBVTJapASqWmSbogs4E2HMVaq/NoaLP
j8qc6bwJ2P428NphIyoy003bLR5PQtzUmq9CJdP425LiJfx8Evi6L0++zJrG
zuVXfJXek3BfIw3oCdNIhVWmbHGTUKpyoDrJfxq34KbtF9onQTryyO3R+9OY
dKlmbaXUFAhW1Pw+s34aB41cs/JGp+AU9fyzr3pTmF7y1O0TfQpGLkmZBWpO
YaNQdoP34hS8ZJ/7q3V5Cr9ZquVe5p8GDd5FkUrpKcwrLQy3gGmgZYkla65M
Ip9iQqZTxDSkXv29cOX9JE40CLF4alDhEtHiEtk0gdka700/6FKBd09FSzRO
YMxP94n0+1Qo3xwtF5E1gQoXOP8UOFEhRZTQeRE6gfxvFzSfJlGhNXCHBvfd
CXy2c8+6pH9UcPGZurv6DwXPyhw9kxRPg7vpujHFOyl4R072pXQGDc5WScl8
F6Tgm/EHpmkFNGhqFV2zm5OC1l6C3KFNNAjIEHtpxxzHwqd4W/Q7DdSlOWUm
C8dxS0OyzNKpGRjt+rR74to4Cggrf61vmIGMt6q8Li5jGLSO/Y1zxwycTBGV
320zhgkPosMPDM6AXBP/7sq7Y7hRjlr8iDEDcx2BcwuKY/hfZEN2Dt8snP9l
JiYhOIY5rF9D567NgmZxy2B5wiieCEioVe+cheP59meqQkZQ0mKid9XgLDgs
HTrk6ziCVh+vKGRRZqGm2CVay2AEb+Yf2fX7+yzUlw7x1EqOYClnTq3cejoo
fPg3cq1kGJ+Hq4pbqdCBdql8w7qxIdxcK7fSXEIHhjatQ2b3IHJF5kwmV9Eh
L+jkBmGOQfy3uvubSyMdOPaYfVieGcAbNS4mG/vo8N3nQm1K1gCa/Xcog/GD
Dro/eJYKzw9gtab96WsSDHj65tr4xzv9eDCE69moFwPczz8+URfQiyn1te/1
/BnAIrRGw/ZRL4od2WXaHcoAEYPdnkLXe5Gr8eHmlE8MOJF17qXypl58GbzN
4VspAyQ6d/gYhvagccbDMhpB8oBOqVZ4N2ZES/p4KjNhNiqtzyOiE0vZnnsu
qzNhn/hDHRPHTpQ0mWG9p80E1YRtgvK6nYisE3dEDJgg+9fUYlq4EzXWOCTs
t2OCic2fWHpYB4Zcg/1JUUxyPmaxzoW04/ev5qelaUzIut6rsvNdKwq27Te/
wGCC9UW+p96WrdhLBHCrzTGBq+fExx/qrRh62ixI4zcTPkbfZM0VaMU7dKJg
iZOAwXf874VkWtDYRM6GIkbA13XlaqsufcX6npJ9zpIENIVX8RtwfsXjnvPn
10sTUNTJkZ/b0IRdt7/7ih4lICDw44KKWhOmJEr6US4QIL1tuEPsRiN27PDQ
/6NLQL6Xh06kST2eHTlYulWfgEv+S34+kvUocMbMUtaIAEOZqrhn9Do0lQus
v/qAgJ5IPt/zVnVoJTB3WewxAbL6nOKv7GsxM3L9V2MvAtxDl+P/vazGaDNR
Hu53BLjO13kEX6rGw+/dgxJ9CZA46HpEgrMa035VOzYFEcDfUSl92qsKFatT
A/KiCZB6/PiahF8l8n3N/W9rFgEd+tsKdkSUY+ZeSv6LHAJWc3+W26Fdjskr
90wpuQQoWsWbbeYvx39KAV/diwg4O7pPY+VFGa458dNVu4qAwuyWsk09pXi3
+fwzmxoCkvtEh6uVSjGx6mHNyzoC/uvlLDMrLUFWdYqKdxMBKlEFjhGfivFR
rMZa8U4CTnQueQTbFmLZzVCHhS4CMs9cfcIyXYAbj66WK+whIHU+64XhrQKs
vnvAT2yAgI2d+0L4zucjb6hmhecYAXICKgYbeHPxes5Nd24KAZq2X/rPP/+C
/ouvfd0myPv1Uaoxnc9B58IIJ81pApglKdFJ/dmoe6sj3pVOQLt5FM9ofCaW
Hb4Snc0gYKgxpWFkSya+L4sfHGQSYC3pqNHvnYGvPxTs2TBHwEx0bKvr5Gdk
JJVL7/hOwLrUmIgbjaT3DdxyFP1BwA2XdVrimano38g5xrFAgNFH6aFkx2Tk
+ff6F51kzkDilr5hElpctFav+0nAQd1D23ivJKJehHWdwSIBw7p65ZoC8Tgy
tm5a5DcBHIKmGvTFOFSL23T5f89VsppJOTkPx6JSTkSDyBIBV7dKsfglxSBl
MZuRS3LxqyD2DT4f8GOipYbCMgEPebf/FKZFoVxq3EItyefu3nXgyonAgQnJ
/vMrBHwRPn7mm3MYPjgw9DeTZAF6G+OrYijqXX9vtPkvuZ+sFsfiBINxVvIc
52OS1ZqUamxHAvCn1Rd6LckTdYmXziT74YGJEX7S4yAlKLCebeYdrj6Z9Eid
ZJmAqffPXTyxTvSv0CuSDXXbtRcFX2EgNP/JJPnaickbJsnP0Vhu3fbO/z2n
+FN37pPLUxSKSnOm/+85SGnn7bbJ1viAM0VkieR/qz81P042wP/7vhyHrqCs
WHxm8f8DJChnmQ==
     "]]}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->150,
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-0.9999998831351729, 1.}, {-0.9999998592812047, 
   0.9999998782744886}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.759003699341284*^9, 3.759003729148159*^9}, 
   3.75900464209126*^9, 3.7590692924876547`*^9}]
}, Open  ]],

Cell[TextData[Cell[BoxData[
 RowBox[{
  RowBox[{
   StyleBox["I",
    FontFamily->"Charter"], 
   StyleBox[" ",
    FontFamily->"Charter"], 
   StyleBox["believe",
    FontFamily->"Charter"], 
   StyleBox[" ",
    FontFamily->"Charter"], 
   StyleBox["that",
    FontFamily->"Charter"], " ", 
   StyleBox[
    FractionBox[
     RowBox[{"2", " ", "\[Pi]", " ", "\[ImaginaryI]"}], 
     RowBox[{"n", "!"}]],
    FontSize->23], 
   SuperscriptBox["f", 
    RowBox[{"(", "n", ")"}]], 
   RowBox[{"(", 
    SubscriptBox["z", "0"], ")"}]}], "=", 
  RowBox[{
   StyleBox[
    SubscriptBox["\[ContourIntegral]", "C"],
    FontSize->23], 
   StyleBox[" ",
    FontSize->23], 
   RowBox[{
    StyleBox[
     FractionBox[
      RowBox[{"f", "[", "z", "]"}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"z", "-", 
         SubscriptBox["z", "0"]}], ")"}], 
       RowBox[{"n", "+", "1"}]]],
     FontSize->23], 
    RowBox[{"\[DifferentialD]", "z"}]}]}]}]]]], "Text",
 CellChangeTimes->{
  3.75900376237228*^9, {3.75900627567589*^9, 3.759006275675926*^9}}],

Cell[BoxData[
 RowBox[{"can", " ", "be", " ", "retained", " ", "as", " ", "the", " ", 
  "working", " ", 
  RowBox[{"target", ".", " ", "This"}], " ", "time", " ", "the", " ", 
  "function", " ", "will", " ", "be", " ", "a", " ", "little", " ", 
  RowBox[{"complicated", ".", " ", "I"}], " ", "need", " ", "to", " ", 
  "calculate", " ", "what", " ", "n", " ", "is", " ", "equal", " ", 
  RowBox[{"to", "."}]}]], "Text",
 CellChangeTimes->{{3.759003777843936*^9, 3.759003831603498*^9}, {
  3.759006397936187*^9, 3.759006408782114*^9}},
 FontFamily->"Charter"],

Cell["I need to try to unscramble the denominator,", "Text",
 CellChangeTimes->{{3.7590038722419977`*^9, 3.759003913448443*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"4", "z"}], "-", 
     RowBox[{"\[Pi]", " ", "\[ImaginaryI]"}]}], ")"}], "3"], "==", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"4", "z"}], "-", 
     RowBox[{"\[Pi]", " ", "\[ImaginaryI]"}]}], ")"}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"4", "z"}], "-", 
     RowBox[{"\[Pi]", " ", "\[ImaginaryI]"}]}], ")"}]}], "\[Equal]", 
  RowBox[{"4", 
   RowBox[{"(", 
    RowBox[{"z", "-", 
     FractionBox[
      RowBox[{"\[Pi]", " ", "\[ImaginaryI]"}], "4"]}], ")"}], "4", 
   RowBox[{"(", 
    RowBox[{"z", "-", 
     FractionBox[
      RowBox[{"\[Pi]", " ", "\[ImaginaryI]"}], "4"]}], ")"}], "4", 
   RowBox[{"(", 
    RowBox[{"z", "-", 
     FractionBox[
      RowBox[{"\[Pi]", " ", "\[ImaginaryI]"}], "4"]}], ")"}]}], "\[Equal]", 
  RowBox[{
   SuperscriptBox["4", "3"], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"z", "-", 
      FractionBox[
       RowBox[{"\[Pi]", " ", "\[ImaginaryI]"}], "4"]}], ")"}], 
    "3"]}]}]], "Text",
 CellChangeTimes->{{3.759003926017026*^9, 3.759003961703001*^9}, {
  3.759003992302093*^9, 3.759004018086625*^9}, {3.759006465397889*^9, 
  3.759006494515327*^9}}],

Cell[TextData[{
 "I can pull the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["4", "3"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " out of the denominator and modify the coefficient accordingly"
}], "Text",
 CellChangeTimes->{{3.7590040257247753`*^9, 3.759004038588429*^9}, {
  3.7590065330898943`*^9, 3.75900655940112*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"coef", "=", 
  FractionBox[
   RowBox[{"2", " ", "\[Pi]", " ", "\[ImaginaryI]"}], 
   RowBox[{
    SuperscriptBox["4", "3"], 
    RowBox[{"n", "!"}]}]]}]], "Input",
 CellChangeTimes->{{3.7590065692389402`*^9, 3.759006613367655*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], 
  RowBox[{"32", " ", 
   RowBox[{"n", "!"}]}]]], "Output",
 CellChangeTimes->{3.7590069108084803`*^9, 3.759069297819158*^9}]
}, Open  ]],

Cell[TextData[{
 "Looking at what I have left, n=2 and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", "0"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "=",
 Cell[BoxData[
  FormBox[
   StyleBox[
    FractionBox[
     RowBox[{"\[Pi]", " ", "\[ImaginaryI]"}], "4"],
    FontSize->21], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ","
}], "Text",
 CellChangeTimes->{{3.759006655322942*^9, 3.7590066971245813`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["z", "0"], "=", 
  FractionBox[
   RowBox[{"\[Pi]", " ", "\[ImaginaryI]"}], "4"]}]], "Input",
 CellChangeTimes->{{3.759069348539435*^9, 3.7590693662611017`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "4"]], "Output",
 CellChangeTimes->{3.759069367303743*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"coef", "=", 
  RowBox[{"coef", "/.", 
   RowBox[{"n", "\[Rule]", "2"}]}]}]], "Input",
 CellChangeTimes->{{3.7590069352506647`*^9, 3.759006950044537*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "64"]], "Output",
 CellChangeTimes->{3.75900695095951*^9, 3.759069301103469*^9}]
}, Open  ]],

Cell["And inside the integral, the numerator is the function,", "Text",
 CellChangeTimes->{{3.759068881703773*^9, 3.759068895141821*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "z_", "]"}], "=", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"3", " ", "z"}]]}]], "Input",
 CellChangeTimes->{{3.759006821267495*^9, 3.759006837770911*^9}}],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  RowBox[{"3", " ", "z"}]]], "Output",
 CellChangeTimes->{3.759006848897627*^9, 3.759069304653631*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "''"}], "[", "z", "]"}]], "Input",
 CellChangeTimes->{{3.7590068530417757`*^9, 3.759006864023247*^9}}],

Cell[BoxData[
 RowBox[{"9", " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"3", " ", "z"}]]}]], "Output",
 CellChangeTimes->{3.759006867346017*^9, 3.75906930779807*^9}]
}, Open  ]],

Cell[TextData[{
 "Since n=2, I want the second derivative of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", "0"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ","
}], "Text",
 CellChangeTimes->{{3.7590689213009863`*^9, 3.759068957507749*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "''"}], "[", 
  SubscriptBox["z", "0"], "]"}]], "Input",
 CellChangeTimes->{{3.7590068695942507`*^9, 3.7590068801426287`*^9}}],

Cell[BoxData[
 RowBox[{"9", " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"3", " ", 
    SubscriptBox["z", "0"]}]]}]], "Output",
 CellChangeTimes->{3.759006881292534*^9, 3.7590693113374166`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"coef", " ", 
  RowBox[{
   RowBox[{"f", "''"}], "[", 
   SubscriptBox["z", "0"], "]"}]}]], "Input",
 CellChangeTimes->{{3.759006892009828*^9, 3.759006900310041*^9}, {
  3.759007036811738*^9, 3.759007039745303*^9}, {3.759007121064889*^9, 
  3.759007121622821*^9}, {3.759069268012268*^9, 3.759069279328229*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["9", "64"], " ", "\[ImaginaryI]", " ", 
  SuperscriptBox["\[ExponentialE]", 
   FractionBox[
    RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "4"]], " ", 
  "\[Pi]"}]], "Output",
 CellChangeTimes->{3.759007041567615*^9, 3.7590071235064*^9, 
  3.759069318784186*^9, 3.759069372835422*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["\<\
The green cell above matches the text answer, but the text then recasts it.\
\>", "Text",
 CellChangeTimes->{{3.759068974843175*^9, 3.759068997266149*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ans", "=", 
  FractionBox[
   RowBox[{
    RowBox[{"-", "9"}], "\[Pi]", 
    RowBox[{"(", 
     RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}]}], 
   RowBox[{"64", " ", 
    SqrtBox["2"]}]]}]], "Input",
 CellChangeTimes->{{3.759007517669621*^9, 3.759007541385014*^9}, {
   3.759007579839925*^9, 3.759007585151618*^9}, 3.7590077873793163`*^9, {
   3.759069458323442*^9, 3.759069510453562*^9}, {3.7590695821336603`*^9, 
   3.759069623045676*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      FractionBox["9", "64"], "+", 
      FractionBox[
       RowBox[{"9", " ", "\[ImaginaryI]"}], "64"]}], ")"}], " ", "\[Pi]"}], 
   SqrtBox["2"]]}]], "Output",
 CellChangeTimes->{
  3.759007589471348*^9, 3.7590077896426687`*^9, {3.759069479029079*^9, 
   3.759069511551265*^9}, 3.7590696258118477`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.7590696398947077`*^9, 3.759069650531074*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["9", "64"]}], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"-", "1"}], ")"}], 
   RowBox[{"1", "/", "4"}]], " ", "\[Pi]"}]], "Output",
 CellChangeTimes->{{3.759069644181164*^9, 3.7590696514512033`*^9}}]
}, Open  ]],

Cell["The answers agree if ", "Text",
 CellChangeTimes->{{3.7590696788193083`*^9, 3.759069682265727*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], 
    RowBox[{"1", "/", "4"}]]}], "\[Equal]", 
  RowBox[{"\[ImaginaryI]", " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "4"]]}]}]], "Input",
 CellChangeTimes->{{3.759069705989642*^9, 3.75906975261049*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.7590697540015707`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"\[ImaginaryI]", " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "4"]]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.759069786283805*^9, 3.759069792743567*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"-", "1"}], ")"}], 
   RowBox[{"1", "/", "4"}]]}]], "Output",
 CellChangeTimes->{3.759069795353655*^9}]
}, Open  ]]
},
WindowSize->{1366, 843},
WindowMargins->{{4, Automatic}, {Automatic, 4}},
Magnification:>1.5 Inherited,
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 10, \
2015)",
StyleDefinitions->"Charter1.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 89, 2, 45, "Input",
 Evaluatable->False],
Cell[492, 17, 198, 4, 51, "Text"],
Cell[693, 23, 73, 1, 45, "Input"],
Cell[769, 26, 179, 4, 86, "Text"],
Cell[951, 32, 426, 11, 102, "Text"],
Cell[1380, 45, 73, 1, 45, "Input"],
Cell[1456, 48, 1625, 44, 242, "Text"],
Cell[3084, 94, 708, 22, 79, "Text"],
Cell[3795, 118, 394, 7, 86, "Text"],
Cell[CellGroupData[{
Cell[4214, 129, 174, 4, 47, "Input"],
Cell[4391, 135, 101, 2, 45, "Output"]
}, Open  ]],
Cell[4507, 140, 635, 17, 49, "Text"],
Cell[CellGroupData[{
Cell[5167, 161, 137, 3, 45, "Input"],
Cell[5307, 166, 70, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5414, 172, 142, 3, 45, "Input"],
Cell[5559, 177, 141, 3, 45, "Output"]
}, Open  ]],
Cell[5715, 183, 85, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[5825, 188, 211, 5, 45, "Input"],
Cell[6039, 195, 87, 2, 45, "Output"]
}, Open  ]],
Cell[6141, 200, 129, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[6295, 205, 267, 8, 76, "Input"],
Cell[6565, 215, 188, 5, 100, "Output"]
}, Open  ]],
Cell[6768, 223, 395, 7, 120, "Text"],
Cell[7166, 232, 463, 13, 102, "Text"],
Cell[7632, 247, 73, 1, 45, "Input"],
Cell[7708, 250, 1030, 35, 139, "Text"],
Cell[CellGroupData[{
Cell[8763, 289, 176, 4, 47, "Input"],
Cell[8942, 295, 107, 2, 47, "Output"]
}, Open  ]],
Cell[9064, 300, 938, 24, 122, "Text"],
Cell[CellGroupData[{
Cell[10027, 328, 137, 3, 45, "Input"],
Cell[10167, 333, 69, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10273, 339, 138, 3, 45, "Input"],
Cell[10414, 344, 107, 2, 47, "Output"]
}, Open  ]],
Cell[10536, 349, 85, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[10646, 354, 163, 4, 45, "Input"],
Cell[10812, 360, 70, 1, 45, "Output"]
}, Open  ]],
Cell[10897, 364, 107, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[11029, 369, 271, 8, 76, "Input"],
Cell[11303, 379, 146, 3, 69, "Output"]
}, Open  ]],
Cell[11464, 385, 824, 23, 104, "Text"],
Cell[CellGroupData[{
Cell[12313, 412, 582, 15, 79, "Input"],
Cell[12898, 429, 385, 13, 79, "Output"]
}, Open  ]],
Cell[13298, 445, 388, 6, 51, "Text"],
Cell[13689, 453, 487, 15, 112, "Text"],
Cell[14179, 470, 73, 1, 45, "Input"],
Cell[14255, 473, 889, 33, 139, "Text"],
Cell[CellGroupData[{
Cell[15169, 510, 199, 5, 47, "Input"],
Cell[15371, 517, 125, 3, 45, "Output"]
}, Open  ]],
Cell[15511, 523, 931, 38, 70, "Text"],
Cell[CellGroupData[{
Cell[16467, 565, 158, 4, 75, "Input"],
Cell[16628, 571, 90, 2, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16755, 578, 298, 9, 76, "Input"],
Cell[17056, 589, 242, 5, 100, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17335, 599, 119, 2, 45, "Input"],
Cell[17457, 603, 204, 4, 69, "Output"]
}, Open  ]],
Cell[17676, 610, 126, 1, 51, "Text"],
Cell[17805, 613, 515, 15, 102, "Text"],
Cell[18323, 630, 73, 1, 45, "Input"],
Cell[18399, 633, 1061, 40, 139, "Text"],
Cell[CellGroupData[{
Cell[19485, 677, 176, 4, 47, "Input"],
Cell[19664, 683, 121, 2, 45, "Output"]
}, Open  ]],
Cell[19800, 688, 729, 23, 53, "Text"],
Cell[CellGroupData[{
Cell[20554, 715, 304, 8, 45, "Input"],
Cell[20861, 725, 249, 7, 45, "Output"]
}, Open  ]],
Cell[21125, 735, 1332, 44, 173, "Text"],
Cell[CellGroupData[{
Cell[22482, 783, 139, 3, 45, "Input"],
Cell[22624, 788, 115, 2, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22776, 795, 144, 3, 45, "Input"],
Cell[22923, 800, 92, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23052, 806, 644, 18, 79, "Input"],
Cell[23699, 826, 219, 4, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23955, 835, 553, 17, 83, "Input"],
Cell[24511, 854, 197, 4, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24745, 863, 503, 16, 83, "Input"],
Cell[25251, 881, 152, 3, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25440, 889, 506, 16, 83, "Input"],
Cell[25949, 907, 172, 4, 76, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26158, 916, 509, 16, 83, "Input"],
Cell[26670, 934, 159, 3, 76, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26866, 942, 1405, 36, 83, "Input"],
Cell[28274, 980, 739, 21, 107, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29050, 1006, 257, 5, 45, "Input"],
Cell[29310, 1013, 285, 7, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29632, 1025, 351, 6, 45, "Input"],
Cell[29986, 1033, 449, 11, 76, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30472, 1049, 209, 4, 45, "Input"],
Cell[30684, 1055, 274, 7, 76, "Output"]
}, Open  ]],
Cell[30973, 1065, 140, 4, 86, "Text"],
Cell[31116, 1071, 622, 18, 102, "Text"],
Cell[31741, 1091, 73, 1, 45, "Input"],
Cell[31817, 1094, 1155, 29, 125, "Input"],
Cell[32975, 1125, 443, 12, 45, "Input"],
Cell[CellGroupData[{
Cell[33443, 1141, 150, 3, 45, "Input"],
Cell[33596, 1146, 32143, 549, 221, "Output"]
}, Open  ]],
Cell[65754, 1698, 1339, 38, 208, "Text"],
Cell[CellGroupData[{
Cell[67118, 1740, 137, 3, 45, "Input"],
Cell[67258, 1745, 70, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67365, 1751, 253, 6, 47, "Input"],
Cell[67621, 1759, 126, 3, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67784, 1767, 142, 3, 45, "Input"],
Cell[67929, 1772, 182, 5, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68148, 1782, 208, 5, 45, "Input"],
Cell[68359, 1789, 98, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68494, 1795, 237, 6, 45, "Input"],
Cell[68734, 1803, 144, 3, 49, "Output"]
}, Open  ]],
Cell[68893, 1809, 654, 13, 121, "Text"],
Cell[CellGroupData[{
Cell[69572, 1826, 231, 7, 45, "Input"],
Cell[69806, 1835, 197, 5, 73, "Output"]
}, Open  ]],
Cell[70018, 1843, 737, 23, 103, "Text"],
Cell[70758, 1868, 73, 1, 45, "Input"],
Cell[70834, 1871, 269, 6, 51, "Text"],
Cell[CellGroupData[{
Cell[71128, 1881, 1627, 48, 249, "Input"],
Cell[72758, 1931, 19551, 342, 253, "Output"]
}, Open  ]],
Cell[92324, 2276, 1526, 51, 159, "Text"],
Cell[CellGroupData[{
Cell[93875, 2331, 244, 7, 47, "Input"],
Cell[94122, 2340, 191, 5, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94350, 2350, 157, 4, 75, "Input"],
Cell[94510, 2356, 112, 2, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94659, 2363, 140, 3, 45, "Input"],
Cell[94802, 2368, 249, 7, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95088, 2380, 162, 4, 45, "Input"],
Cell[95253, 2386, 265, 8, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95555, 2399, 237, 6, 45, "Input"],
Cell[95795, 2407, 360, 10, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[96192, 2422, 127, 2, 45, "Input"],
Cell[96322, 2426, 391, 11, 99, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[96750, 2442, 120, 2, 45, "Input"],
Cell[96873, 2446, 224, 4, 69, "Output"]
}, Open  ]],
Cell[97112, 2453, 317, 6, 86, "Text"],
Cell[97432, 2461, 597, 18, 103, "Text"],
Cell[98032, 2481, 73, 1, 45, "Input"],
Cell[98108, 2484, 1783, 50, 220, "Input"],
Cell[99894, 2536, 338, 9, 45, "Input"],
Cell[CellGroupData[{
Cell[100257, 2549, 148, 3, 45, "Input"],
Cell[100408, 2554, 22305, 388, 236, "Output"]
}, Open  ]],
Cell[122728, 2945, 143, 1, 51, "Text"],
Cell[122874, 2948, 1142, 42, 109, "Text"],
Cell[CellGroupData[{
Cell[124041, 2994, 173, 4, 47, "Input"],
Cell[124217, 3000, 98, 2, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[124352, 3007, 137, 3, 45, "Input"],
Cell[124492, 3012, 72, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[124601, 3018, 138, 3, 45, "Input"],
Cell[124742, 3023, 90, 2, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[124869, 3030, 160, 4, 45, "Input"],
Cell[125032, 3036, 90, 2, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[125159, 3043, 171, 5, 45, "Input"],
Cell[125333, 3050, 146, 3, 69, "Output"]
}, Open  ]],
Cell[125494, 3056, 769, 22, 103, "Text"],
Cell[126266, 3080, 73, 1, 45, "Input"],
Cell[126342, 3083, 3003, 81, 333, "Input"],
Cell[129348, 3166, 436, 12, 45, "Input"],
Cell[129787, 3180, 1177, 33, 104, "Input"],
Cell[130967, 3215, 1340, 39, 104, "Input"],
Cell[132310, 3256, 1250, 36, 75, "Input"],
Cell[CellGroupData[{
Cell[133585, 3296, 427, 8, 45, "Input"],
Cell[134015, 3306, 62742, 1055, 247, "Output"]
}, Open  ]],
Cell[196772, 4364, 206, 4, 51, "Text"],
Cell[196981, 4370, 1027, 35, 107, "Text"],
Cell[CellGroupData[{
Cell[198033, 4409, 347, 10, 82, "Input"],
Cell[198383, 4421, 261, 8, 82, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[198681, 4434, 141, 3, 45, "Input"],
Cell[198825, 4439, 70, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[198932, 4445, 137, 3, 45, "Input"],
Cell[199072, 4450, 522, 19, 82, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[199631, 4474, 162, 4, 45, "Input"],
Cell[199796, 4480, 176, 5, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[200009, 4490, 237, 6, 45, "Input"],
Cell[200249, 4498, 300, 8, 99, "Output"]
}, Open  ]],
Cell[200564, 4509, 905, 14, 189, "Text"],
Cell[201472, 4525, 830, 24, 103, "Text"],
Cell[202305, 4551, 881, 15, 224, "Text"],
Cell[203189, 4568, 681, 20, 106, "Text"],
Cell[203873, 4590, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[203971, 4595, 621, 17, 75, "Input"],
Cell[204595, 4614, 19046, 324, 243, "Output"]
}, Open  ]],
Cell[223656, 4941, 1060, 40, 74, "Text"],
Cell[224719, 4983, 559, 10, 90, "Text"],
Cell[225281, 4995, 128, 1, 51, "Text"],
Cell[225412, 4998, 1204, 39, 71, "Text"],
Cell[226619, 5039, 339, 9, 52, "Text"],
Cell[CellGroupData[{
Cell[226983, 5052, 256, 7, 78, "Input"],
Cell[227242, 5061, 196, 5, 76, "Output"]
}, Open  ]],
Cell[227453, 5069, 434, 16, 68, "Text"],
Cell[CellGroupData[{
Cell[227912, 5089, 200, 5, 75, "Input"],
Cell[228115, 5096, 129, 3, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[228281, 5104, 177, 4, 45, "Input"],
Cell[228461, 5110, 151, 3, 76, "Output"]
}, Open  ]],
Cell[228627, 5116, 137, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[228789, 5121, 206, 5, 50, "Input"],
Cell[228998, 5128, 152, 3, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[229187, 5136, 141, 3, 45, "Input"],
Cell[229331, 5141, 175, 4, 49, "Output"]
}, Open  ]],
Cell[229521, 5148, 254, 8, 53, "Text"],
Cell[CellGroupData[{
Cell[229800, 5160, 165, 4, 45, "Input"],
Cell[229968, 5166, 202, 5, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[230207, 5176, 333, 7, 45, "Input"],
Cell[230543, 5185, 369, 9, 100, "Output"]
}, Open  ]],
Cell[230927, 5197, 165, 3, 51, "Text"],
Cell[CellGroupData[{
Cell[231117, 5204, 464, 12, 86, "Input"],
Cell[231584, 5218, 393, 12, 100, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[232014, 5235, 133, 2, 45, "Input"],
Cell[232150, 5239, 265, 8, 76, "Output"]
}, Open  ]],
Cell[232430, 5250, 105, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[232560, 5255, 384, 11, 56, "Input"],
Cell[232947, 5268, 75, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[233059, 5274, 283, 7, 66, "Input"],
Cell[233345, 5283, 179, 6, 49, "Output"]
}, Open  ]]
}
]
*)


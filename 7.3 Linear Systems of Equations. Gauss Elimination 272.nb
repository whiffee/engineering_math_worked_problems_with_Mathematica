(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    274293,       5830]
NotebookOptionsPosition[    269016,       5658]
NotebookOutlinePosition[    269404,       5675]
CellTagsIndexPosition[    269361,       5672]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[""], "Input",
 Evaluatable->False,
 CellChangeTimes->{3.768776840684407*^9}],

Cell["\<\
1 - 14 Gauss elimination
Solve the linear system given explicitly or by its augmented matrix.\
\>", "Text",
 CellChangeTimes->{{3.768773476709379*^9, 3.768773500667582*^9}},
 Background->RGBColor[
  0.9600061036087587, 0.9600061036087587, 0.9600061036087587]],

Cell["\<\
1.  4 x - 6 y = -11
-3 x + 8 y = 10\
\>", "Text",
 CellChangeTimes->{{3.768773506997615*^9, 3.76877355349115*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.675550057365863*^9, 3.675550058924439*^9}, 
   3.768773363075932*^9, {3.772905207424858*^9, 3.772905207973764*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"4", " ", "x"}], "-", " ", 
     RowBox[{"6", "y"}]}], "\[Equal]", 
    RowBox[{"-", "11"}]}], "&&", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "3"}], " ", "x"}], "+", 
     RowBox[{"8", " ", "y"}]}], "\[Equal]", "10"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.675550067453611*^9, 3.67555010149767*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "2"}]}], ",", 
    RowBox[{"y", "\[Rule]", 
     FractionBox["1", "2"]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.6755501023820744`*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["The green cell above agrees with the text answer.", "Text",
 CellChangeTimes->{{3.768776660524271*^9, 3.7687766703308477`*^9}}],

Cell["3.  x + y - z = 9, 8 y + 6 z = -6, -2 x + 4 y - 6 z = 40", "Text",
 CellChangeTimes->{{3.768773572539468*^9, 3.768773637718832*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.675550132443122*^9, 3.675550133873967*^9}, 
   3.768773367386641*^9, {3.772905212606309*^9, 3.772905213093507*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "+", "y", "-", "z"}], "\[Equal]", "9"}], "&&", 
   RowBox[{
    RowBox[{
     RowBox[{"8", " ", "y"}], "+", 
     RowBox[{"6", " ", "z"}]}], "\[Equal]", 
    RowBox[{"-", "6"}]}], "&&", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "x"}], "+", 
     RowBox[{"4", " ", "y"}], "-", 
     RowBox[{"6", "z"}]}], "\[Equal]", "40"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.675550139308194*^9, 3.675550177423061*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", "1"}], ",", 
    RowBox[{"y", "\[Rule]", "3"}], ",", 
    RowBox[{"z", "\[Rule]", 
     RowBox[{"-", "5"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.675550178143063*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["The green cell above agrees with the text answer.", "Text",
 CellChangeTimes->{{3.768776720282289*^9, 3.76877673272825*^9}}],

Cell[BoxData[
 RowBox[{"5.", " ", 
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"13", "12", 
      RowBox[{"-", "6"}]},
     {
      RowBox[{"-", "4"}], "7", 
      RowBox[{"-", "73"}]},
     {"11", 
      RowBox[{"-", "13"}], "157"}
    }], "\[NoBreak]", ")"}]}]], "Text",
 CellChangeTimes->{{3.76877365344965*^9, 3.768773724839384*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"65.`", ",", "60.`", ",", 
     RowBox[{"-", "30.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "20.`"}], ",", "35.`", ",", 
     RowBox[{"-", "365.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"55.`", ",", 
     RowBox[{"-", "65.`"}], ",", "785.`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.768773702817649*^9}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.675550196760912*^9, 3.675550198351315*^9}, 
   3.768773374082602*^9, {3.772905219103107*^9, 3.7729052195492983`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"13", " ", "x"}], "+", 
      RowBox[{"12", " ", "y"}], "+", 
      RowBox[{
       RowBox[{"-", "6"}], " ", "z"}]}], "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "4"}], " ", "x"}], "+", 
      RowBox[{"7", " ", "y"}], "-", 
      RowBox[{"73", " ", "z"}]}], "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{"11", " ", "x"}], "-", 
      RowBox[{"13", " ", "y"}], "+", 
      RowBox[{"157", " ", "z"}]}], "\[Equal]", "0"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6755502037617598`*^9, 3.675550258147975*^9}, {
  3.675550293596797*^9, 3.6755503011307497`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "6"}], " ", "z"}]}], ",", 
    RowBox[{"y", "\[Rule]", 
     RowBox[{"7", " ", "z"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.675550259863014*^9, 3.6755503027839193`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"A", "=", 
  RowBox[{"(", GridBox[{
     {"13", "12", 
      RowBox[{"-", "6"}]},
     {
      RowBox[{"-", "4"}], "7", 
      RowBox[{"-", "73"}]},
     {"11", 
      RowBox[{"-", "13"}], "157"}
    }], ")"}]}]], "Input",
 CellChangeTimes->{{3.675550364508327*^9, 3.675550402542728*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"13", ",", "12", ",", 
     RowBox[{"-", "6"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4"}], ",", "7", ",", 
     RowBox[{"-", "73"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", 
     RowBox[{"-", "13"}], ",", "157"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.67555040611117*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"RowReduce", "[", "A", "]"}]], "Input",
 CellChangeTimes->{{3.675551129731731*^9, 3.6755511362143793`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", 
     StyleBox["6",
      Background->RGBColor[0.88, 1, 0.88]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", 
     StyleBox[
      RowBox[{"-", "7"}],
      Background->RGBColor[0.88, 1, 0.88]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Input",
 CellChangeTimes->{3.768776780579329*^9}],

Cell[TextData[{
 "Above: It is seen from inspection that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    RowBox[{
     RowBox[{"6", " ", "and", " ", "y"}], "=", 
     RowBox[{"-", "7"}]}]}], TraditionalForm]]],
 ", the same values found in the text."
}], "Text",
 CellChangeTimes->{{3.675551198643664*^9, 3.675551236169058*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{"7.", " ", 
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2", "4", "1", "0"},
     {
      RowBox[{"-", "1"}], "1", 
      RowBox[{"-", "2"}], "0"},
     {"4", "0", "6", "0"}
    }], "\[NoBreak]", ")"}]}]], "Text",
 CellChangeTimes->{{3.768773762078121*^9, 3.76877381656402*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"14.`", ",", "28.`", ",", "7.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "7.`"}], ",", "7.`", ",", 
     RowBox[{"-", "14.`"}], ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28.`", ",", "0.`", ",", "42.`", ",", "0.`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7687737981909323`*^9}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6755512997167463`*^9, 3.675551303112458*^9}, 
   3.768773380042544*^9, {3.772905226460722*^9, 3.772905226852766*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"A", "=", 
  RowBox[{"(", GridBox[{
     {"2", "4", "1", "0"},
     {
      RowBox[{"-", "1"}], "1", 
      RowBox[{"-", "2"}], "0"},
     {"4", "0", "6", "0"}
    }], ")"}]}]], "Input",
 CellChangeTimes->{{3.675551308875761*^9, 3.67555134667708*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "1", ",", 
     RowBox[{"-", "2"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "0", ",", "6", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6755513480843163`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e1", "=", 
  RowBox[{
   RowBox[{"RowReduce", "[", "A", "]"}], "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.6755518687670717`*^9, 3.675551890338086*^9}, {
  3.6755525340271273`*^9, 3.675552535299049*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", 
      FractionBox["3", "2"], "0"},
     {"0", "1", 
      RowBox[{"-", 
       FractionBox["1", "2"]}], "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.67555187738097*^9, 3.6755518917490587`*^9}, 
   3.6755530774673653`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"x", "+", 
      RowBox[{
       FractionBox["3", "2"], "z"}]}], "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{"y", "-", 
      RowBox[{
       FractionBox["1", "2"], "z"}]}], "\[Equal]", "0"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "z"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6755520241691723`*^9, 3.6755520741554403`*^9}, {
  3.6755521687469177`*^9, 3.675552169039934*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "3"}], " ", "y"}]}], ",", 
    RowBox[{"z", "\[Rule]", 
     RowBox[{"2", " ", "y"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.6755520749607687`*^9, 3.675552175359297*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[TextData[{
 "Above: The text sets ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", "t"}], TraditionalForm]]],
 ", but this is not necessary.  Either one is arbitrary in value. To accord \
with text, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"x", "=", 
     RowBox[{
      RowBox[{"-", "3"}], " ", "t"}]}], ",", " ", 
    RowBox[{"z", "=", 
     RowBox[{"2", " ", "t"}]}]}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.6755529660602694`*^9, 3.675553062903407*^9}, 
   3.675590471176505*^9}],

Cell[BoxData[
 RowBox[{"9.", " ", 
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      RowBox[{"-", "2"}], 
      RowBox[{"-", "2"}], 
      RowBox[{"-", "8"}]},
     {"3", "4", 
      RowBox[{"-", "5"}], "13"}
    }], "\[NoBreak]", ")"}]}]], "Text",
 CellChangeTimes->{{3.768773870690771*^9, 3.768773872495118*^9}, {
  3.76877393376147*^9, 3.768773968453361*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.`", ",", 
     RowBox[{"-", "18.`"}], ",", 
     RowBox[{"-", "18.`"}], ",", 
     RowBox[{"-", "72.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27.`", ",", "36.`", ",", 
     RowBox[{"-", "45.`"}], ",", "117.`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.76877395465609*^9}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6755530953944187`*^9, 3.675553097152153*^9}, 
   3.768773386113874*^9, {3.772905235182782*^9, 3.7729052356361027`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "y"}], "-", 
      RowBox[{"2", " ", "z"}]}], "\[Equal]", 
     RowBox[{"-", "8"}]}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{"3", " ", "x"}], "+", 
      RowBox[{"4", " ", "y"}], "-", 
      RowBox[{"5", " ", "z"}]}], "\[Equal]", "13"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.675553128418108*^9, 3.675553194363388*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"3", " ", "z"}]}]}], ",", 
    RowBox[{"y", "\[Rule]", 
     RowBox[{"4", "-", "z"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.6755531616489763`*^9, 3.675553196199524*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[TextData[{
 "Above: The answer agrees with text, provided a parameter t is invented such \
that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"z", "=", "t"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.675553246480831*^9, 3.6755532982311983`*^9}}],

Cell[BoxData[
 RowBox[{"11.", " ", 
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "5", "5", 
      RowBox[{"-", "10"}], "0"},
     {"2", 
      RowBox[{"-", "3"}], 
      RowBox[{"-", "3"}], "6", "2"},
     {"4", "1", "1", 
      RowBox[{"-", "2"}], "4"}
    }], "\[NoBreak]", ")"}]}]], "Text",
 CellChangeTimes->{{3.768774007564878*^9, 3.768774066569914*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.`", ",", "55.`", ",", "55.`", ",", 
     RowBox[{"-", "110.`"}], ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"22.`", ",", 
     RowBox[{"-", "33.`"}], ",", 
     RowBox[{"-", "33.`"}], ",", "66.`", ",", "22.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"44.`", ",", "11.`", ",", "11.`", ",", 
     RowBox[{"-", "22.`"}], ",", "44.`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.768774044787901*^9}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6755533226723003`*^9, 3.675553324555069*^9}, 
   3.7687733910259027`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"A", "=", 
  RowBox[{"(", GridBox[{
     {"0", "5", "5", 
      RowBox[{"-", "10"}], "0"},
     {"2", 
      RowBox[{"-", "3"}], 
      RowBox[{"-", "3"}], "6", "2"},
     {"4", "1", "1", 
      RowBox[{"-", "2"}], "4"}
    }], ")"}]}]], "Input",
 CellChangeTimes->{{3.675553342241671*^9, 3.675553397035554*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "5", ",", "5", ",", 
     RowBox[{"-", "10"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "3"}], ",", "6", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "1", ",", 
     RowBox[{"-", "2"}], ",", "4"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.675553398667069*^9, 3.675590691190236*^9, 
  3.675600963965227*^9, 3.768774206097259*^9, 3.768775145198954*^9, 
  3.768775186875038*^9, 3.768775253222926*^9, 3.7687755709008102`*^9}]
}, Open  ]],

Cell["\<\
Below: The row reduction comes up with a null row. Is that an ominous sign?\
\>", "Text",
 CellChangeTimes->{{3.768775992673015*^9, 3.768776012456418*^9}, {
  3.768776593789176*^9, 3.768776603127015*^9}, {3.7697209001495037`*^9, 
  3.7697209014612217`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e1", "=", 
  RowBox[{"RowReduce", "[", "A", "]"}]}]], "Input",
 CellChangeTimes->{{3.675553403942821*^9, 3.675553418068712*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "1", ",", 
     RowBox[{"-", "2"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.675553418927472*^9, 3.6755906934095707`*^9, {3.675600943601186*^9, 
   3.675600967638178*^9}, 3.768774209618554*^9, 3.768775147986143*^9, 
   3.7687751901063643`*^9, 3.768775257088275*^9, 3.768775573803927*^9}]
}, Open  ]],

Cell["\<\
The dot product has fewer equation seeds than there are rows in the A matrix. \
I play around with the assigned positions and signs of t1 and t2 to try to \
come up with the text answer.\
\>", "Text",
 CellChangeTimes->{{3.768776026255748*^9, 3.768776071718482*^9}, {
  3.768776321638124*^9, 3.768776351069305*^9}, {3.773064653470686*^9, 
  3.773064653675873*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e2", "=", 
  RowBox[{"e1", ".", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z", ",", "t2", ",", 
     RowBox[{"-", "t1"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.675553499170895*^9, 3.675553542694874*^9}, {
   3.675553980160283*^9, 3.675553987110778*^9}, {3.6755540619253798`*^9, 
   3.675554071925376*^9}, {3.675590644460972*^9, 3.675590644699353*^9}, {
   3.675590787615859*^9, 3.675590788094018*^9}, {3.675599799115451*^9, 
   3.675599805251011*^9}, {3.6756008490779543`*^9, 3.675600852893403*^9}, {
   3.675600890372637*^9, 3.675600915995426*^9}, {3.675601089574613*^9, 
   3.6756010945249987`*^9}, {3.6756011942273207`*^9, 3.675601201731764*^9}, {
   3.675601386012632*^9, 3.675601406826262*^9}, {3.768774214653201*^9, 
   3.76877422119575*^9}, {3.768774343896937*^9, 3.768774350687316*^9}, {
   3.768774569721837*^9, 3.768774575143886*^9}, 3.7687746700544252`*^9, {
   3.7687751339187937`*^9, 3.768775139053214*^9}, {3.768775561352488*^9, 
   3.768775561671505*^9}, {3.7687755931825447`*^9, 3.768775594038393*^9}, {
   3.768776140676642*^9, 3.7687761735648937`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "t1"}], "+", "x"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", "t2"}], "+", "y", "+", "z"}], ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.6755908387325783`*^9, 3.675599806404378*^9, 3.675600854364172*^9, {
   3.675600897555346*^9, 3.675600970652341*^9}, 3.675601096200111*^9, 
   3.675601206253111*^9, 3.675601409022366*^9, 3.768774223512138*^9, 
   3.7687742834850807`*^9, 3.7687743524635773`*^9, 3.768774576394672*^9, 
   3.7687746712312393`*^9, {3.768775150502726*^9, 3.768775192969462*^9}, 
   3.768775261101201*^9, {3.7687755630811*^9, 3.768775595998898*^9}, {
   3.768776145759907*^9, 3.768776183910989*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "t1"}], "+", "x"}], "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], "t2"}], "+", "y", "+", "z"}], "\[Equal]", "0"}]}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.675553566165038*^9, 3.675553578814658*^9}, {
   3.6755538494710283`*^9, 3.675553862179037*^9}, {3.6755539963344593`*^9, 
   3.675554003103134*^9}, {3.6755540876526413`*^9, 3.6755541228978767`*^9}, {
   3.675554211622593*^9, 3.675554267276753*^9}, {3.67555432759586*^9, 
   3.675554328106057*^9}, {3.6755997855095663`*^9, 3.675599820138487*^9}, {
   3.67560080640129*^9, 3.6756008065430117`*^9}, {3.675601005354063*^9, 
   3.675601013111917*^9}, {3.675601116109988*^9, 3.6756011437098303`*^9}, {
   3.675601226315209*^9, 3.67560126559912*^9}, {3.67560141925317*^9, 
   3.675601428532523*^9}, {3.675601514704266*^9, 3.675601515350788*^9}, {
   3.675601637082427*^9, 3.67560163753028*^9}, {3.675601706328249*^9, 
   3.6756017089837513`*^9}, {3.6756017490148783`*^9, 3.675601764086162*^9}, {
   3.768774235387107*^9, 3.768774261570263*^9}, {3.768774366648293*^9, 
   3.768774387310096*^9}, {3.768774586977023*^9, 3.768774595255226*^9}, 
   3.7687746801657*^9, {3.768774800008541*^9, 3.768774800592704*^9}, {
   3.768775275339594*^9, 3.768775283952623*^9}, {3.7687753175689993`*^9, 
   3.76877531774345*^9}, {3.768775365038295*^9, 3.768775379221423*^9}, {
   3.7687756180070753`*^9, 3.768775618325623*^9}, {3.7687761011901007`*^9, 
   3.768776101317861*^9}, {3.768776154141699*^9, 3.7687761611876383`*^9}, 
   3.7687761955629473`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", "t1"}], ",", 
    RowBox[{"y", "\[Rule]", 
     RowBox[{
      RowBox[{"2", " ", "t2"}], "-", "z"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.6756012279914637`*^9, 3.675601266306574*^9}, 
   3.6756014317538033`*^9, 3.675601516601261*^9, 3.6756016383369293`*^9, {
   3.675601709775032*^9, 3.675601765345923*^9}, {3.768774265918681*^9, 
   3.768774269427499*^9}, 3.768774389515766*^9, 3.7687745991787653`*^9, 
   3.768774690276595*^9, 3.7687748017784348`*^9, {3.7687751707824783`*^9, 
   3.7687751963341303`*^9}, {3.7687752663507147`*^9, 3.768775288252267*^9}, 
   3.768775319011833*^9, {3.768775368565941*^9, 3.768775379913693*^9}, 
   3.768775619542244*^9, 3.768776102713271*^9, {3.768776162994739*^9, 
   3.768776200246014*^9}},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[TextData[{
 "Let me trot out the text answer: x = ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["t", "1"], TraditionalForm]]],
 " arb.; y = ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", 
    SubscriptBox["t", "2"]}], TraditionalForm]]],
 " - ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["t", "1"], TraditionalForm]]],
 "; z = ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["t", "2"], TraditionalForm]]],
 " arb. Rearranging the text answer results in the equation y = 2z - x. If I \
adopt the stance that z = ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["t", "2"], TraditionalForm]]],
 ", then I can make the same equation out of the results above, that is, y = \
2z - x. "
}], "Text",
 CellChangeTimes->{{3.675601546300927*^9, 3.6756015613167152`*^9}, {
  3.675602038060627*^9, 3.675602046340274*^9}, {3.768776364116764*^9, 
  3.768776576093915*^9}, {3.769720842090308*^9, 3.769720845967211*^9}, {
  3.769720956605158*^9, 3.7697209855306053`*^9}}],

Cell[BoxData[
 RowBox[{"13.", " ", 
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "10", "4", 
      RowBox[{"-", "2"}], 
      RowBox[{"-", "4"}]},
     {
      RowBox[{"-", "3"}], 
      RowBox[{"-", "17"}], "1", "2", "2"},
     {"1", "1", "1", "0", "6"},
     {"8", 
      RowBox[{"-", "34"}], "16", 
      RowBox[{"-", "10"}], "4"}
    }], "\[NoBreak]", ")"}]}]], "Text",
 CellChangeTimes->{{3.768774920746456*^9, 3.768774986034075*^9}, 
   3.768775019034624*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.`", ",", "130.`", ",", "52.`", ",", 
     RowBox[{"-", "26.`"}], ",", 
     RowBox[{"-", "52.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "39.`"}], ",", 
     RowBox[{"-", "221.`"}], ",", "13.`", ",", "26.`", ",", "26.`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"13.`", ",", "13.`", ",", "13.`", ",", "0.`", ",", "78.`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"104.`", ",", 
     RowBox[{"-", "442.`"}], ",", "208.`", ",", 
     RowBox[{"-", "130.`"}], ",", "52.`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.768774987366619*^9}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.675602065327248*^9, 3.675602066980927*^9}, 
   3.76877339623407*^9, 3.76877346264881*^9, {3.77290524633494*^9, 
   3.77290524677936*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e1", "=", 
  RowBox[{"(", GridBox[{
     {"0", "10", "4", 
      RowBox[{"-", "2"}], 
      RowBox[{"-", "4"}]},
     {
      RowBox[{"-", "3"}], 
      RowBox[{"-", "17"}], "1", "2", "2"},
     {"1", "1", "1", "0", "6"},
     {"8", 
      RowBox[{"-", "34"}], "16", 
      RowBox[{"-", "10"}], "4"}
    }], ")"}]}]], "Input",
 CellChangeTimes->{{3.675602317718431*^9, 3.6756023864406557`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "10", ",", "4", ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "17"}], ",", "1", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "0", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", 
     RowBox[{"-", "34"}], ",", "16", ",", 
     RowBox[{"-", "10"}], ",", "4"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.675602388062914*^9, 3.7687754328077927`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e2", "=", 
  RowBox[{"RowReduce", "[", "e1", "]"}]}]], "Input",
 CellChangeTimes->{{3.6756023974290037`*^9, 3.6756024096489487`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "6"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.675602410686822*^9, 3.768775442673954*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e3", "=", 
  RowBox[{"e2", ".", 
   RowBox[{"{", 
    RowBox[{"w", ",", "x", ",", "y", ",", "z", ",", "t1"}], 
    "}"}]}]}]], "Input",
 CellChangeTimes->{{3.675602473274626*^9, 3.675602491237105*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"4", " ", "t1"}], "+", "w"}], ",", "x", ",", 
   RowBox[{
    RowBox[{"2", " ", "t1"}], "+", "y"}], ",", 
   RowBox[{
    RowBox[{"6", " ", "t1"}], "+", "z"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6756024926660833`*^9, 3.7687754462361927`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e4", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"4", " ", "t1"}], "+", "w"}], "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{"2", " ", "t1"}], "+", "y"}], "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{"6", " ", "t1"}], "+", "z"}], "\[Equal]", "0"}], "&&", 
    RowBox[{"x", "\[Equal]", "0"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.675602504425061*^9, 3.675602567738462*^9}, {
  3.675602663305572*^9, 3.675602706950053*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"w", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "4"}], " ", "t1"}]}], ",", 
    RowBox[{"x", "\[Rule]", "0"}], ",", 
    RowBox[{"y", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "t1"}]}], ",", 
    RowBox[{"z", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "6"}], " ", "t1"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.675602568532523*^9, {3.675602700249618*^9, 3.6756027075861177`*^9}, 
   3.768775448695726*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e5", "=", 
  RowBox[{"e4", "/.", 
   RowBox[{"t1", "\[Rule]", 
    RowBox[{"-", "1"}]}]}]}]], "Input",
 CellChangeTimes->{{3.675602709282589*^9, 3.675602723349175*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"w", "\[Rule]", "4"}], ",", 
    RowBox[{"x", "\[Rule]", "0"}], ",", 
    RowBox[{"y", "\[Rule]", "2"}], ",", 
    RowBox[{"z", "\[Rule]", "6"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.675602724662468*^9, 3.7687754516506157`*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["Above: The answer matches the text.", "Text",
 CellChangeTimes->{{3.675602867913356*^9, 3.675602875087825*^9}}],

Cell["\<\
17 - 21 Models of networks
In problems 17 - 19, using Kirchhoff\[CloseCurlyQuote]s laws (see example 2) \
and showing details, find the currents:\
\>", "Text",
 CellChangeTimes->{{3.774185487058043*^9, 3.7741855309662647`*^9}},
 Background->RGBColor[
  0.9600061036087587, 0.9600061036087587, 0.9600061036087587]],

Cell["17. As shown in diagram below.", "Text",
 CellChangeTimes->{{3.7741916616825953`*^9, 3.774191674528974*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"LightOrange", ",", 
       RowBox[{"Rectangle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1.1", ",", "0.2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.9", ",", "2.1"}], "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"LightGray", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1", ",", "n"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"3", ",", "n"}], "}"}]}], "}"}], "]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "0", ",", "2.2", ",", "0.1"}], "}"}]}], "]"}]}],
         "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"LightGray", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"n", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"n", ",", "2.2"}], "}"}]}], "}"}], "]"}], "}"}], ",", 
           
           RowBox[{"{", 
            RowBox[{"n", ",", "1", ",", "3", ",", "0.1"}], "}"}]}], "]"}]}], 
        "}"}], ","}], "*)"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1.3", ",", "1.3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.3", ",", "1.18"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.22", ",", "1.15"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.37", ",", "1.1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.22", ",", "1.05"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.37", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.22", ",", "0.95"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.37", ",", "0.9"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.3", ",", "0.87"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.3", ",", "0.7"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "0.7"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2.05", ",", "0.7"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.7", ",", "0.7"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.7", ",", "0.95"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2.7", ",", "1.3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.7", ",", "1.45"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.77", ",", "1.48"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.62", ",", "1.53"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.77", ",", "1.58"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.62", ",", "1.63"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.77", ",", "1.68"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.62", ",", "1.73"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.7", ",", "1.76"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.7", ",", "1.85"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.05", ",", "1.85"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1.65", ",", "1.85"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.3", ",", "1.85"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.3", ",", "1.75"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.22", ",", "1.72"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.37", ",", "1.67"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.22", ",", "1.62"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.37", ",", "1.57"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.22", ",", "1.52"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.37", ",", "1.47"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.3", ",", "1.44"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.3", ",", "1.3"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2", ",", "1.85"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.6", ",", "1.85"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2.7", ",", "1.3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.7", ",", "0.9"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2.4", ",", "1.3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.67", ",", "1.3"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<1 \[CapitalOmega]\>\"", ",", "Medium"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"2.05", ",", "1.4"}], "}"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<2 \[CapitalOmega]\>\"", ",", "Medium"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"2.55", ",", "1.6"}], "}"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<2 \[CapitalOmega]\>\"", ",", "Medium"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.45", ",", "1.6"}], "}"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<4 \[CapitalOmega]\>\"", ",", "Medium"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.45", ",", "1"}], "}"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<32 V\>\"", ",", "Medium"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"2.02", ",", "0.54"}], "}"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<RC-circuit\>\"", ",", "17"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "0.32"}], "}"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<16 V\>\"", ",", "Medium"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"2.04", ",", "2"}], "}"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1.3", ",", "1.3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.87", ",", "1.3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.9", ",", "1.35"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.95", ",", "1.2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "1.35"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.05", ",", "1.2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.1", ",", "1.35"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.15", ",", "1.2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.18", ",", "1.3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.4", ",", "1.3"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2", ",", "1.775"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "1.925"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2", ",", "0.63"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "0.77"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2.05", ",", "1.8"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.05", ",", "1.9"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2.05", ",", "0.65"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.05", ",", "0.75"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0.113", ",", "0.686", ",", "0.925"}], "]"}], ",", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2.15", ",", "1.95"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.85", ",", "1.95"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0.113", ",", "0.686", ",", "0.925"}], "]"}], ",", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2.15", ",", "0.6"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.85", ",", "0.6"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RGBColor", "[", 
        RowBox[{"0.113", ",", "0.686", ",", "0.925"}], "]"}], ",", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1.3", ",", "1.3"}], "}"}], ",", "0.03"}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RGBColor", "[", 
        RowBox[{"0.113", ",", "0.686", ",", "0.925"}], "]"}], ",", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2.7", ",", "1.3"}], "}"}], ",", "0.03"}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<\!\(\*SubscriptBox[\(I\), \(1\)]\)\>\"", ",", "17"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.65", ",", "1.94"}], "}"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<\!\(\*SubscriptBox[\(I\), \(2\)]\)\>\"", ",", "17"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"2.63", ",", "0.95"}], "}"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<\!\(\*SubscriptBox[\(I\), \(3\)]\)\>\"", ",", "17"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"2.6", ",", "1.2"}], "}"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Q\>\"", ",", "Medium"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.2", ",", "1.3"}], "}"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<P\>\"", ",", "Medium"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"2.8", ",", "1.3"}], "}"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1.76", ",", "0.7"}], "}"}], ",", "0.1", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.85"}], ",", "\[Pi]"}], "}"}]}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1.89", ",", "0.7"}], "}"}], ",", "0.1", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.85"}], ",", 
           RowBox[{"\[Pi]", "+", "0.85"}]}], "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2.02", ",", "0.7"}], "}"}], ",", "0.1", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.85"}], ",", 
           RowBox[{"\[Pi]", "+", "0.85"}]}], "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2.15", ",", "0.7"}], "}"}], ",", "0.1", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"\[Pi]", "+", "0.85"}]}], "}"}]}], "]"}]}], "}"}]}], "}"}],
    ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "300"}]}], 
  RowBox[{"(*", 
   RowBox[{",", 
    RowBox[{"Ticks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", "3", ",", "0.1"}], "]"}], ",", 
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", "2.2", ",", "0.1"}], "]"}]}], "}"}]}]}], "*)"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.774185799321097*^9, 3.774185848622957*^9}, {
   3.774185909821609*^9, 3.7741859142999687`*^9}, {3.7741861688526297`*^9, 
   3.774186179204549*^9}, {3.774186219379195*^9, 3.7741862494005213`*^9}, {
   3.7741862988944597`*^9, 3.774186348514863*^9}, {3.7741864040502577`*^9, 
   3.7741865313847446`*^9}, {3.774186568984548*^9, 3.7741865959332523`*^9}, {
   3.774186629532193*^9, 3.7741866345389957`*^9}, {3.774186665938738*^9, 
   3.774186689055969*^9}, {3.774186761076934*^9, 3.774186781578691*^9}, 
   3.774186830369766*^9, {3.77418686763881*^9, 3.7741868817890863`*^9}, {
   3.774186944858576*^9, 3.774186945369643*^9}, {3.774186977848583*^9, 
   3.774187012565889*^9}, {3.774187112746214*^9, 3.774187147910637*^9}, {
   3.7741872338506823`*^9, 3.774187240801168*^9}, {3.7741872753521214`*^9, 
   3.7741872991898317`*^9}, {3.7741873361009197`*^9, 
   3.7741874954349613`*^9}, {3.774187570192731*^9, 3.774187611340455*^9}, {
   3.774187642259533*^9, 3.774187671065072*^9}, {3.774187713928513*^9, 
   3.77418774381295*^9}, {3.774187876855816*^9, 3.7741879055500517`*^9}, {
   3.77418794415401*^9, 3.774187944497346*^9}, {3.774187979928297*^9, 
   3.7741879816794043`*^9}, {3.774188018389439*^9, 3.7741880754845552`*^9}, {
   3.7741881172105837`*^9, 3.774188135094871*^9}, {3.774188177444704*^9, 
   3.7741881795324163`*^9}, {3.774188214819067*^9, 3.774188254664225*^9}, {
   3.774188308847925*^9, 3.7741883225724163`*^9}, 3.774188811274613*^9, 
   3.7741888517210817`*^9, {3.774188935549005*^9, 3.7741889789919777`*^9}, {
   3.77418901797323*^9, 3.774189031404963*^9}, {3.774189072787278*^9, 
   3.774189080266254*^9}, {3.774189113127934*^9, 3.774189272342506*^9}, {
   3.774189370293399*^9, 3.774189371618129*^9}, {3.774189406601186*^9, 
   3.774189504124342*^9}, {3.7741896205353317`*^9, 3.7741896234920483`*^9}, 
   3.7741896996905003`*^9, {3.77418980151574*^9, 3.774189802225913*^9}, {
   3.774189834832922*^9, 3.774189837711738*^9}, {3.774189872639627*^9, 
   3.774189898620699*^9}, {3.7741899361884193`*^9, 3.774189963114196*^9}, 
   3.774189998003056*^9, {3.7741901679039927`*^9, 3.7741901685190067`*^9}, {
   3.774190216326374*^9, 3.774190275385893*^9}, {3.7741903091361637`*^9, 
   3.774190314466174*^9}, {3.774190370890305*^9, 3.7741903745512123`*^9}, {
   3.77419043421275*^9, 3.774190487399248*^9}, 3.774190537494729*^9, {
   3.7741906598560753`*^9, 3.774190678749716*^9}, 3.774190712590166*^9, 
   3.774190752572029*^9, {3.774190958618917*^9, 3.774190963361861*^9}, {
   3.774190997257238*^9, 3.774191071386066*^9}, {3.7741911596805687`*^9, 
   3.7741915654094477`*^9}, {3.774191606360982*^9, 3.774191626206272*^9}, {
   3.7742042365038557`*^9, 3.774204255440963*^9}, {3.7742042863607817`*^9, 
   3.774204476820977*^9}, {3.774206915478812*^9, 3.774207134153845*^9}, {
   3.7743592825537863`*^9, 3.77435928680939*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[1, 0.9, 0.8], RectangleBox[{1.1, 0.2}, {2.9, 2.1}]}, 
   {Thickness[0.004], 
    LineBox[{{1.3, 1.3}, {1.3, 1.18}, {1.22, 1.15}, {1.37, 1.1}, {1.22, 
      1.05}, {1.37, 1}, {1.22, 0.95}, {1.37, 0.9}, {1.3, 0.87}, {1.3, 0.7}, {
      2, 0.7}}]}, 
   {Thickness[0.004], LineBox[{{2.05, 0.7}, {2.7, 0.7}, {2.7, 0.95}}]}, 
   {Thickness[0.004], 
    LineBox[{{2.7, 1.3}, {2.7, 1.45}, {2.77, 1.48}, {2.62, 1.53}, {2.77, 
     1.58}, {2.62, 1.63}, {2.77, 1.68}, {2.62, 1.73}, {2.7, 1.76}, {2.7, 
     1.85}, {2.05, 1.85}}]}, 
   {Thickness[0.004], 
    LineBox[{{1.65, 1.85}, {1.3, 1.85}, {1.3, 1.75}, {1.22, 1.72}, {1.37, 
     1.67}, {1.22, 1.62}, {1.37, 1.57}, {1.22, 1.52}, {1.37, 1.47}, {1.3, 
     1.44}, {1.3, 1.3}}]}, 
   {Thickness[0.004], ArrowBox[{{2, 1.85}, {1.6, 1.85}}]}, 
   {Thickness[0.004], ArrowBox[{{2.7, 1.3}, {2.7, 0.9}}]}, 
   {Thickness[0.004], ArrowBox[{{2.4, 1.3}, {2.67, 1.3}}]}, InsetBox[
    StyleBox["\<\"1 \[CapitalOmega]\"\>",
     StripOnInput->False,
     FontSize->Medium], {2.05, 1.4}], InsetBox[
    StyleBox["\<\"2 \[CapitalOmega]\"\>",
     StripOnInput->False,
     FontSize->Medium], {2.55, 1.6}], InsetBox[
    StyleBox["\<\"2 \[CapitalOmega]\"\>",
     StripOnInput->False,
     FontSize->Medium], {1.45, 1.6}], InsetBox[
    StyleBox["\<\"4 \[CapitalOmega]\"\>",
     StripOnInput->False,
     FontSize->Medium], {1.45, 1}], InsetBox[
    StyleBox["\<\"32 V\"\>",
     StripOnInput->False,
     FontSize->Medium], {2.02, 0.54}], InsetBox[
    StyleBox["\<\"RC-circuit\"\>",
     StripOnInput->False,
     FontSize->17], {2, 0.32}], InsetBox[
    StyleBox["\<\"16 V\"\>",
     StripOnInput->False,
     FontSize->Medium], {2.04, 2}], 
   {Thickness[0.004], 
    LineBox[{{1.3, 1.3}, {1.87, 1.3}, {1.9, 1.35}, {1.95, 1.2}, {2, 1.35}, {
      2.05, 1.2}, {2.1, 1.35}, {2.15, 1.2}, {2.18, 1.3}, {2.4, 1.3}}]}, 
   {Thickness[0.004], LineBox[{{2, 1.775}, {2, 1.925}}]}, 
   {Thickness[0.004], LineBox[{{2, 0.63}, {2, 0.77}}]}, 
   {Thickness[0.004], LineBox[{{2.05, 1.8}, {2.05, 1.9}}]}, 
   {Thickness[0.004], LineBox[{{2.05, 0.65}, {2.05, 0.75}}]}, 
   {RGBColor[0.113, 0.686, 0.925], Thickness[0.004], 
    ArrowBox[{{2.15, 1.95}, {1.85, 1.95}}]}, 
   {RGBColor[0.113, 0.686, 0.925], Thickness[0.004], 
    ArrowBox[{{2.15, 0.6}, {1.85, 0.6}}]}, 
   {RGBColor[0.113, 0.686, 0.925], DiskBox[{1.3, 1.3}, 0.03]}, 
   {RGBColor[0.113, 0.686, 0.925], DiskBox[{2.7, 1.3}, 0.03]}, InsetBox[
    StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(I\\), \\(1\\)]\\)\"\>",
     StripOnInput->False,
     FontSize->17], {1.65, 1.94}], InsetBox[
    StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(I\\), \\(2\\)]\\)\"\>",
     StripOnInput->False,
     FontSize->17], {2.63, 0.95}], InsetBox[
    StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(I\\), \\(3\\)]\\)\"\>",
     StripOnInput->False,
     FontSize->17], {2.6, 1.2}], InsetBox[
    StyleBox["\<\"Q\"\>",
     StripOnInput->False,
     FontSize->Medium], {1.2, 1.3}], InsetBox[
    StyleBox["\<\"P\"\>",
     StripOnInput->False,
     FontSize->Medium], {2.8, 1.3}]},
  Axes->False,
  ImageSize->300]], "Output",
 CellChangeTimes->{{3.774191306797347*^9, 3.7741913603446608`*^9}, 
   3.774191409101598*^9, {3.774191448027259*^9, 3.7741914729115267`*^9}, {
   3.774191509150477*^9, 3.7741915661730967`*^9}, {3.77419161485955*^9, 
   3.7741916270947742`*^9}, {3.774204242205146*^9, 3.7742042562335997`*^9}, 
   3.774204288290663*^9, {3.774204343252466*^9, 3.774204379485037*^9}, 
   3.774204435870644*^9, 3.7742044781164303`*^9, {3.7742069577556057`*^9, 
   3.774207037386771*^9}, {3.774207093939052*^9, 3.7742071006268597`*^9}, 
   3.774207135126408*^9}]
}, {2}]],

Cell[TextData[{
 "Considering only node P, and trying to put the Wikipedia information into \
effect, I have the equation ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["I", "3"], "-", 
     SubscriptBox["I", "2"], "-", 
     SubscriptBox["I", "1"]}], "=", "0"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " (Kirchhoff\[CloseCurlyQuote]s current law, which is strictly relative to \
P, not a clock) plus the two equations -",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", "1", ")"}], "*", 
      SubscriptBox["I", "3"]}], "-", 
     RowBox[{"2", "*", 
      SubscriptBox["I", "1"]}], "-", "16", "-", 
     RowBox[{"2", 
      SubscriptBox["I", "1"]}]}], "=", "0"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["I", "3"], "+", "32", "+", 
     RowBox[{"4", 
      SubscriptBox["I", "2"]}]}], "=", "0"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " (Kirchhoff\[CloseCurlyQuote]s voltage law, in which each loop is \
considered with clockwise considered as positive)."
}], "Text",
 CellChangeTimes->{{3.774355501090981*^9, 3.774355831764*^9}, {
   3.7743561435161247`*^9, 3.774356180681885*^9}, {3.774356294953269*^9, 
   3.7743563045449343`*^9}, {3.7743565191078653`*^9, 3.774356551166884*^9}, 
   3.7743571006425753`*^9, {3.774357183816321*^9, 3.774357233710812*^9}, {
   3.774357536191771*^9, 3.774357538006217*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    FormBox[
     RowBox[{
      RowBox[{
       SubscriptBox["iI", "3"], "-", 
       SubscriptBox["iI", "2"], "-", 
       SubscriptBox["iI", "1"]}], "==", "0"}],
     TraditionalForm], "&&", 
    FormBox[
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", "1", ")"}]}], "*", 
        SubscriptBox["iI", "3"]}], "-", 
       RowBox[{"2", "*", 
        SubscriptBox["iI", "1"]}], "-", "16", "-", 
       RowBox[{"2", 
        SubscriptBox["iI", "1"]}]}], "==", "0"}],
     TraditionalForm], "&&", 
    RowBox[{
     RowBox[{
      SubscriptBox["iI", "3"], "+", "32", "+", 
      RowBox[{"4", 
       SubscriptBox["iI", "2"]}]}], "==", "0"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["iI", "1"], ",", 
     SubscriptBox["iI", "2"], ",", 
     SubscriptBox["iI", "3"]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.774355840794961*^9, 3.774355972628166*^9}, {
   3.774356202917725*^9, 3.774356203325212*^9}, {3.774356311522491*^9, 
   3.7743563241696997`*^9}, {3.774356368584757*^9, 3.774356402071518*^9}, {
   3.774356598281933*^9, 3.774356626488872*^9}, 3.774357141658125*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["iI", "1"], "\[Rule]", 
     RowBox[{"-", "2"}]}], ",", 
    RowBox[{
     SubscriptBox["iI", "2"], "\[Rule]", 
     RowBox[{"-", "6"}]}], ",", 
    RowBox[{
     SubscriptBox["iI", "3"], "\[Rule]", 
     RowBox[{"-", "8"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.774355930032338*^9, 3.7743559753555*^9, 3.7743562051714077`*^9, {
   3.774356335652622*^9, 3.774356338821044*^9}, {3.7743564385183153`*^9, 
   3.774356443784829*^9}, 3.774356480427104*^9, 3.774356636333848*^9, 
   3.774357152646593*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[TextData[{
 "The above green cell matches the text answer, the signs of current being \
uniformly opposite to the text answer merely informing me that all \
assumptions about current direction should be reversed. I can also get a \
solution to the steady state current online, at ",
 StyleBox["https://falstad.com/circuit/",
  FontSize->14,
  FontSlant->"Italic"],
 ". The online version is live, and by double-clicking the three branches, \
the correct current for each branch is revealed. Thus I have two separate \
ways, other than state space, to track down the steady state current. "
}], "Text",
 CellChangeTimes->{{3.7743572784612083`*^9, 3.774357341347458*^9}, {
  3.774364173915154*^9, 3.774364206042536*^9}, {3.774461220631583*^9, 
  3.774461303107574*^9}}],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
xuPvyZj7hgJhT+u+ngT2Hmx/S8b5TyR89FnDes6x79/N3qvq1xQIOKP7etKe
U+HoBRmffd6wFu5l9l7dzt6rypeU8HqyGfWcZp5jzquh+ar5OUQ7vsh7Lw+z
vPjllzK++VqF778zwE8/GuHnn4yFjz9wEX2RHeuLMWNshZgnogtjB5dj5oRc
bFsfh9desW5033BnX7PE7m2RWDC9B8YPK9VZPROGl2DJrO7YtzMcb5y1uGY9
r75kg81rEzGtugDVg8p1Vs+UUUVYuywVx+4NwJvnza5Zz79esMPqxV1FLSP7
Veqsnulj87F1fTwePeGB/75l3KCOzz6T8fHHSjz9pDOWzO6uszq0Zk3Mxd4d
4Xj2KUdceMewQT0ff6xidZrgkYe9sLAm+5rPM6CkBPnduyM2PFxkEX2fpzu7
6+UQC/YemJubi3vi8jXJ+NwOjt+j7kqTJk3C4MGDRR7hvRG95xA+58BWgqJI
AdVjKmh+ZJ/Nv9R+Jmt+0wj1P6tbIviSBhP+VOHIXwp88rcMQLrKH8x3zAPs
8fTfG/bJ21okq2fxn0o89ZeML/+WGtTzE/MOq3PH/xRIugn1JFxSY8ufCrzJ
6vmhkXq+Zt97gT22ktUcfenG3ovmSGOv+TB77V+w7V5Cw3o+Zd9/kNUzldUT
chPq6c7qeZIdG3+xbf/dSD3vs/dqF6t3yB8q+F2nHu3x3NRx3VQO4b1sPmb1
3HMN67j8fn1pjReeTMChHeVYv2Rs7bzV6dNr1ZvLeiPWzJuErauH4+SRbHz2
icM16/nioh1OP5yOXesHYt2CCW1aw5VuXzgOezf3xVOPpOLLz2yvWc/Fj5zw
0KFe2LR8FG6bM1ln9WxYWo377i7GS8/G4puvrK5Zz0fvu+LQzjKsZrWsmDlN
Z/XweUMnjuTg/OvB+OE78wZ1/MX+Tv3BjuELb3lj75Z+OqtDa9ttw3HmZBre
+68nfv7RpOHn8h9qUee/Xw3F7o0DG32OZeyYnjdhAsax81kuO585NXE+Izcn
h/A+CJ9nmpWVheXLl4vMwO/JW9+ePXvE9bl8zRC+dojecwjLIHKqDMUsBdSv
qGszyK9tdx6hHEI5pL3kEINLtW52DuGf18soh1AO6WQ5hFs0ZQpmjRmDyoIC
uDk76/083dldL4c4ODiI+8MUFxdfvg8evydvfXzO6f79+697v7qblkOcWA7J
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
    "], {{0, 396}, {546, 0}}, {0, 
    255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1: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
29bYXrFD7dztBHbr7TpGEUZ5jRKOqht1y55qH2hfbN9g/8iB4RDtMNehyeHV
aPPR6aOXjz47+pujm2Oe4xbHe05aTmOd5jq1OL1xtnXmONc4X3ehuYS5zHJp
dnntaufKc611ve1Gd4txW+DW6vbV3cNd7L7bvdvD3CPDY53HLU9tz3jPxZ7n
vAheQV6zvA57ffJ29y7y3uf9l4+9T67PDp/nY6zG8MZsGdPpa+rL9t3kK/Nj
+mX4bfST+Zv4s/3r/B8HmAVwA7YGPAu0CcwJ3Bn4KsgxSBx0MOhDsHfwjODj
IVhIeEh5SFuoVmhSaHXowzDTsOywhrDecLfwaeHHIwgRURHLI25FGkZyIusj
e8d6jJ0x9lQUNSohqjrqcbRttDi6JQaNGRuzMuZ+rEWsMLYpDsRFxq2MexBv
FV8Y/8c44rj4cTXjnrKcWNNZZxPoCZMTdiS8TwxKXJp4L8k6SZrUmqyePCG5
PvlDSkjKihRZ6ujUGakX0/TTBGnN6aT05PSt6X3jQ8evHt81wW1C2YSbE60m
Tp14fpL+pLxJRyarT2ZP3p9ByEjJ2JHxhR3HrmP3ZUZmrsvs5QRz1nBecgO4
q7jdPF/eCt6zLN+sFVnPs32zV2Z38/35lfweQbCgWvA6JyJnQ86H3LjcbbkD
eSl5e/LJ+Rn5h4RawlzhqQKjgqkFHSI7UZlIVuhduLqwVxwl3ipBJBMlzUXa
cKtzSWot/UX6qNivuKb445TkKfunak4VTr1UYluyqORZaVjpb9PwaZxprdNN
ps+Z/mhG4IxNM5GZmTNbZ5nNmj+ra3b47O1zKHNy51ye6zh3xdx381Lmtcw3
nD97fucv4b80lKmVictuLfBZsGEhvlCwsG2Ry6K1i76Vc8svVDhWVFZ8WcxZ
fOFXp1+rfh1YkrWkban70tplxGXCZTeX+y/fvkJzRemKzpUxKxtXMVeVr3q3
evLq85WulRvWUNZI18iqoqua15qvXbb2SzW/+kZNUM2edQbrFq37sJ67/mpt
QO3uDYYbKjZ83ijYeHtT+KbGOsu6ys3EzcWbn25J3nL2N8/f6rfqb63Y+nWb
cJtsO2v7qXqP+vodBjuWNqAN0obunRN2tu8K2dW82373pj2MPRV7wV7p3he/
Z/x+c1/Uvtb9nvt3H7A4sO4g/WB5I9JY0tjbxG+SNac1dxwae6i1xafl4B8O
f2w7bHK45ojOkaVHKUfnHx04Vnqs77joeM+J7BOdrZNb751MPXn91LhTbaej
Tp87E3bm5NnAs8fO+Z47fN77/KELnheaLrpfbLzkdungZbfLB9vc2xqveFxp
bvdqb+kY03H0qv/VE9dCrp25Hnn94o3YGx03k27evjXhluw29/bzO3l3Xt8t
vtt/b/Z9wv3yBxoPKh8aPKz7l82/9sjcZUcehTy69Djh8b1OTufLJ5InX7rm
P6U9rXxm/Kz+ufPzw91h3e0vxr/oeil62d9T9qfmn+teWb868FfAX5d6U3u7
XotfD7xZ/Fbv7bZ3ru9a++L7Hr7Pf9//ofyj3sftnzw/nf2c8vlZ/5QvpC9V
X22+tnyL+nZ/IH9gQMQWsxVbAQw2NCsLgDfbAKClwb0DPMdR1JTnL4UgyjOj
AoF/wsozmkLcAdgWAEDSbACi4R6lFjYLiKnwKt9+JwYA1MVluA2KJMvFWRmL
Ck8xhI8DA28NASC1APBVPDDQv35g4OsWSPYOAMcLlec+uRDhHn+j/GwFLpst
AD/LvwEmSHLX
      "], "RGB", "XYZ"], Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{114.32031249999932`, Automatic},
  ImageSizeRaw->{546, 396},
  PlotRange->{{0, 546}, {0, 396}}]], "Input"]], "Text",
 CellChangeTimes->{{3.774443649389923*^9, 3.774443663703273*^9}, {
  3.77444370997899*^9, 3.7744438482340393`*^9}, {3.774444121826799*^9, 
  3.774444175032271*^9}, {3.77446131391488*^9, 3.774461331238708*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3Qu8jVX+x3Gk+btTuRcdpTp01TQkUrlVSoWmRCUqHbqYXEO5/DVTESJd
XIsSopkuSsbdRKUME0aRkKYxIzIUIv3Gb/Vf+7/PPnufy+qc8+xnr8/79Xqm
c56z9pl19t6e77PW83vWrtWlR9uuxYoUKdKrxLH/adu53xU9e3bu3674sW+a
9u99d5fjjn2x6di2tmiRIrpTAABxHTlyRNasWSPffvtt0F0BACDpLViwQLp1
6ybHH3+8FCtWTHbv3h10lwAACIXDhw9L0aJFpV69ekF3BQCA0HjvvfdEL3H1
6tUr6K4AABAaQ4cONfn59ttvB90VAABCo0mTJlK8eHHZv39/0F0BANmzZ48s
XrxYRo8eLWvXrjX7VqxYIQ8//LB8/fXXAfcO+Nn3338vv/rVr6Rhw4ZBdwUA
ZOPGjTJq1CgpVaqUmRfbsGGDTJ8+XUqXLm2+HzBgQNBdBIx58+aZ9+TAgQOD
7goARNSpU0eqVq0q69evN3m6atUqqV+/vixfvjzorgFG7969TX4uWrQo6K4A
gPHdd9+Za0rt27eXHj16yE8//RR0l4As9J6VEiVKyMGDB4PuCgAY7777rjmv
b9SoUeT6J5BMvvnmG3PfZ9OmTYPuCgBE9OzZ0+TnzTffHHRXgLhmz55t3qOP
Pvpo0F0BgIhzzjnHHJtWrlwZdFeAuDIyMniPAkgqen+KHpfS09OD7gqQUO3a
taVMmTJm7XgASAZTp041+TlkyJCguwLEtWPHDvMebdWqlfn+9ddfly1btgTc
KwC+69ixozk2/e1vfwu6K0Bcc+fONe/RwYMHm/nbSZMmBd0lAJ7T+1SqVKki
aWlpQXcFSEg/61M/r6xChQoyaNCgoLsDAIZmKPd7Itlt2rRJtm/fHnQ3AAAA
AAAAAAAAAAAAAAAAAADwzooVK+Wtt97KsZ2ujTBt2ks5ttvyxRcycdIk+eGH
H7Jt969//UueHz9e9u7dm+u+AkCY/f3vf5d33nlHZs6cJYuXLJGdO3cG3SU4
0s/srFipspQoWUq2b/8y27bnX1BP/qdESVm+/C/Ztrvu+htMu5deejnbdj16
/M60GzaMz8JAYrt375bp01+RB3v2kptubi+tr7te7r33PvP++uc//5mp7aFD
h8y54ICBA+WWDh1N27vv7ioTJk6Urdu2ZWr7448/yoKFC2XI0KHS8dZbTds7
OneWp59+WjZu3Bi37eAhQ6RDx2O/t/V1cuNvb5L7739AJk+ZkqUfQDQ9zv7+
93+QM8480xzzYrfLLr9c3nzzzaC7iTyaOm1a5DXUsWAiX2zdGmn3UP/+Cdt9
//33Uq58BdNOj1/Zse+lixte4tx/pK7//Oc/8uCDPaVsufJxjzm6lSxV2mTq
Rx99ZHKvWvWTE7bV7eqrW8mixYtNHp9eu3a2bRs1vlT++Mc/yqxZr0rtM87I
tm2p0mXkrrvull27dgX9tCHJrFq1SmqddnrkvaJfX39DG7nt9tulZcsrpcIJ
J0Z+pmMP5uPC4/Irrsj02iUy7plnIu10HJqIrjFq21WqXEUOHz4ct9369esz
HX84f0c0PV9LT69j3hs6N6LjvVGjRps13+fNmydjxoyRG9q0lTJly2XJsoaX
NJJHH/29zJnzmvlM9+eef96cy514UsUsbc87/wJ5ZNAgk5HadsoLL0iXO++M
m8PnnHuePPzIIz+3nT/fjBc0s3UcWrpMWdMmrdZpsmHDhqCfPiSJpcuWRcYT
jS9tIsuWLc+yTtuBAwfM2OXkU2qYdvUu/LU5d0Ry++yzz8zrdcKJJ5n/lq9w
gnkt47n22taZjiV6fItH59Wi2y1ZujRuuxEjnszU7oUXX8yvPyvUOI8Qc/5d
t+7ZkbkJvV6UiF47sm3tmFHnWhP93ujzRZ3/2L9/f9y2Bw8ejFyH0K1qterZ
vjb676FZ8+aR8cW///3vvP3RSDlfffVV5DxMj4s5fWbel1/ukAvqXWjat2nb
rpB6CVc6D6uvVUZGN7mkUWPztV7XjqVz9zqHpuMAnW/Qds88+2zc33na6bUj
82T63779+sVt17RZs0ztdA4OYsYvf16wIOhuBOqBB3qY98SFv74oYb5ZOhbV
tjq2rFK1mvlax57xfPLJJ2a+Vzd9nrVt1673xG2rNXB23rhOnbrmv1dddXW2
azzrtddLm1xm2uoYFn7T+Xx9L+hcbW7XBtcaFJu5+t5GctJzoRo1TzWv0wcf
fGBqePRrrYeIpfUY+jM9NmjNhn6t82mx9PikPzs1rZaZp9Cvzz3v/Czt9uzZ
Y45hOuelc13a7qSKlXKs1/WBXkfT52PQ4MEJx1GpTD+HXd8X+jz89a9/zbF9
k8t+ziudz9W5Dv1ac0/P/WPdettt5udah6T1QTrfot9//PHHWdra2rY777rL
jHHtv5XXXnst2/7o79U5ZT3X3LaNdep9pfcW6HtA3wuxdWs5GTdunHmv6VgF
yUmv3ehrpPMFavXq1eZ7rZOI1a1bd/Ozxx573MxL6ftC5/S1Vija448/ERnP
aj7b8cDnMZ9RrHXb9nxe/fqi35jvFy5aVEB/bXjY/NSteYsW8o9//CPoLhUq
vcapf3v7Wzrk2NbWtOl1dnvdQeto441B9b2qdRr63tXP0Vb9BwwwbbU+N9rR
o0fllBo1zc/0Or0aP2FCro9pWsOrbfXfA/yk16Nc52H37dtnclePBTrWQPLR
11Vf36eeGmO+1/mFmqemmX3r1q3L1NbWjq1du9Z8b+eoYu8Z1Rps3f/GG2+Y
7+35vp5PRet0xx2RMYPSmgz9vlfvPgXyt4ZJdH7qpjUFPs3n2uvss2fPybHt
pMmTTVutY7S0Bkj36bg0mj6Hsft1rGjnS6LZeRSdt7W0nkPHxTpvEnveGOtP
f/pT5NoE/NSnb1/zHhg9+imnxze4uOHP81CDBsuLU6eyJdGmaxvY+dPoOge9
FqSv2fDhIyL7NDNtTYT1hz88ZvZ1735vZN8333xjfqeeN9lrVnqPgLa75ppr
I+10TtLO7+tnMSpdv0G/r3v2OZneQzqG1fmygn4+dLygNVQ6nxf0FlvzaTcd
Oz05cmTg752C3mwNol5/zMnvfvegaas1sJbeK2qvB0Sz49rYczS991n36+Os
GTNmmn06lo2m12N1f07zynZcrH9L0M9nKm16H0hY2DkIPQa6qH1G/PtE2ZJn
u7n9LZleM3vefEXTppF98bJyzZo1Zp/WClk2K1u1uiayT++F0/kyvR6lNUgq
kpV1z46000zV+sboTFUjR44K/DliC2ZLVAceTe8b0bZ6T0s0O4aPvndKc1P3
2TkPy9bubv7888g+nZPRfb379M3U1ta65XSdQc8fg37+UnHT40ii++GSjT23
S1RnmZP6DRqYx1/3f+t/sCXXdt9992c5x7fz7jqOtOfjieZqbf2irumnEs3V
2voOO6ebaK729k6dshzf9H473afHyYJ+Pu64o7N06nRH4Ft2x4+mTZsF/r4p
jE3vNc4Ne39JbM24zc/o+wVsTa/eCxrN1tZGX6O3522x64TY/NT1F3KiY+Kg
n8dU2vSYpM99TnPnyUKPY9pfrcHNK33fVq5S1TzeXqtHONhjhM5hxRs/WtE1
RTp+TFQrFF1TpBLVCsXWFH344Yfme70m61Mdauz1T33+dV47Xk74TudP9HmJ
ronV+zbtWCWa3kel+3UeN5qtE4q+t1PHDLpPa3Cj6f3vul/r1VG47Bo9YclP
e2+9zqvpuCQvdKyhj9VjJcJl7Nix5rXT8eDLL083X2tNRyxbv6vjy7/85T3z
tY4XY+n4VH+m41W9t0m/jnevSvQ9Lfp+0/Gxtu330EMF9rcmo+j81GO7nmfo
/WPkZ1Y9e/U2z8sTTwyP7LM1QWefc26mtnY8EH0dQs8JdZ/WkmvNrWWPX9HX
7ZXNWr3HBoUrbPmptH4+3jxGdvS6ha6JpY979rnnCrB3KAibN2+OnDfZ8/t4
c/jRayrcc0+Gaac1Z/HYNRX02KX/TbRWgl1T4ZVXZkTmL3xbC83mZ4sWLSPH
afIzPl1HT58XXfvD0nXQdF/s2svvv/+B2a/vRV3nQNlaXV2zKJpeu9BzOT1m
2/o6m8uaoSh8YcxPXZPZzjvrWCQnem1X79vS9nrffFiu9SIzO1+o2aj/TbRW
n56fR7dLtFafXdPPtku0Vp9d089eW9V1TH2j5yT6eSDRc9bkZ3x6DmfvrdL1
fnS9W7tmrmZrNL0/q36Di83P9PnU+2M0N/X76Hpzy9Ym6fV/vbZgXwN9L6Pw
hTE/lV0LQTetR0u0NrzeM2jXltT7mT/99NNC7inyi77O9jXXuYREoteU1/sA
Ep0vRa8pH3utKVrsmvKutWthFu8chPxMTO/rtOs3203Ho/Gumeu9WNVPPiVT
W10DN971KV2L9Kyz0jO11TmRnD7jDwUjrPmp9Dhm55X0OKm1lk8+OdKsyfG/
w4aZdZPt2EI/E8jeZ49w0vpCe8zIbu5e63dtu+zWi4n+TLOcxpT2M820Djj6
njyfkZ/Z03N1/ZwzPS7puofffvttwrZaz6jrDum9nXqemF19o16T13Utta3W
78Z+JigKT5jzU+k9w7Y2M96mx0e9/sUxL/x0HKk1Pvq66jq22dF5em2nnyOa
Hf1sYm2n51vZsfcZxN6b6jPyE74Le35auiayjjv1HE5rJPV4qJ8xm9PnJCBc
Jk+ZYu4Bjq5LjEfrcPUep5xqtHXdBF23L9663tH0/het/c3uM6t8Q37Cd6mS
nwAKF/kJ35GfAFyQn/Ad+QnABfkJ35GfAFyQn/BdquWnrr+mdd26TimAgkN+
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
AAAAAAAAAIC8+i+mhlj+
    "], {{0, 218}, {464, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1: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
29bYXrFD7dztBHbr7TpGEUZ5jRKOqht1y55qH2hfbN9g/8iB4RDtMNehyeHV
aPPR6aOXjz47+pujm2Oe4xbHe05aTmOd5jq1OL1xtnXmONc4X3ehuYS5zHJp
dnntaufKc611ve1Gd4txW+DW6vbV3cNd7L7bvdvD3CPDY53HLU9tz3jPxZ7n
vAheQV6zvA57ffJ29y7y3uf9l4+9T67PDp/nY6zG8MZsGdPpa+rL9t3kK/Nj
+mX4bfST+Zv4s/3r/B8HmAVwA7YGPAu0CcwJ3Bn4KsgxSBx0MOhDsHfwjODj
IVhIeEh5SFuoVmhSaHXowzDTsOywhrDecLfwaeHHIwgRURHLI25FGkZyIusj
e8d6jJ0x9lQUNSohqjrqcbRttDi6JQaNGRuzMuZ+rEWsMLYpDsRFxq2MexBv
FV8Y/8c44rj4cTXjnrKcWNNZZxPoCZMTdiS8TwxKXJp4L8k6SZrUmqyePCG5
PvlDSkjKihRZ6ujUGakX0/TTBGnN6aT05PSt6X3jQ8evHt81wW1C2YSbE60m
Tp14fpL+pLxJRyarT2ZP3p9ByEjJ2JHxhR3HrmP3ZUZmrsvs5QRz1nBecgO4
q7jdPF/eCt6zLN+sFVnPs32zV2Z38/35lfweQbCgWvA6JyJnQ86H3LjcbbkD
eSl5e/LJ+Rn5h4RawlzhqQKjgqkFHSI7UZlIVuhduLqwVxwl3ipBJBMlzUXa
cKtzSWot/UX6qNivuKb445TkKfunak4VTr1UYluyqORZaVjpb9PwaZxprdNN
ps+Z/mhG4IxNM5GZmTNbZ5nNmj+ra3b47O1zKHNy51ye6zh3xdx381Lmtcw3
nD97fucv4b80lKmVictuLfBZsGEhvlCwsG2Ry6K1i76Vc8svVDhWVFZ8WcxZ
fOFXp1+rfh1YkrWkban70tplxGXCZTeX+y/fvkJzRemKzpUxKxtXMVeVr3q3
evLq85WulRvWUNZI18iqoqua15qvXbb2SzW/+kZNUM2edQbrFq37sJ67/mpt
QO3uDYYbKjZ83ijYeHtT+KbGOsu6ys3EzcWbn25J3nL2N8/f6rfqb63Y+nWb
cJtsO2v7qXqP+vodBjuWNqAN0obunRN2tu8K2dW82373pj2MPRV7wV7p3he/
Z/x+c1/Uvtb9nvt3H7A4sO4g/WB5I9JY0tjbxG+SNac1dxwae6i1xafl4B8O
f2w7bHK45ojOkaVHKUfnHx04Vnqs77joeM+J7BOdrZNb751MPXn91LhTbaej
Tp87E3bm5NnAs8fO+Z47fN77/KELnheaLrpfbLzkdungZbfLB9vc2xqveFxp
bvdqb+kY03H0qv/VE9dCrp25Hnn94o3YGx03k27evjXhluw29/bzO3l3Xt8t
vtt/b/Z9wv3yBxoPKh8aPKz7l82/9sjcZUcehTy69Djh8b1OTufLJ5InX7rm
P6U9rXxm/Kz+ufPzw91h3e0vxr/oeil62d9T9qfmn+teWb868FfAX5d6U3u7
XotfD7xZ/Fbv7bZ3ru9a++L7Hr7Pf9//ofyj3sftnzw/nf2c8vlZ/5QvpC9V
X22+tnyL+nZ/IH9gQMQWsxVbAQw2NCsLgDfbAKClwb0DPMdR1JTnL4UgyjOj
AoF/wsozmkLcAdgWAEDSbACi4R6lFjYLiKnwKt9+JwYA1MVluA2KJMvFWRmL
Ck8xhI8DA28NASC1APBVPDDQv35g4OsWSPYOAMcLlec+uRDhHn+j/GwFLpst
AD/LvwEmSHLX
      "], "RGB", "XYZ"], Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{188.01822916666634`, Automatic},
  ImageSizeRaw->{464, 218},
  PlotRange->{{0, 464}, {0, 218}}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"LightOrange", ",", 
       RowBox[{"Rectangle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1.3", ",", "0.2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"4", ",", "1.6"}], "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"LightGray", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1", ",", "n"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"4", ",", "n"}], "}"}]}], "}"}], "]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "0", ",", "2.2", ",", "0.1"}], "}"}]}], "]"}]}],
         "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"LightGray", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"n", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"n", ",", "2.2"}], "}"}]}], "}"}], "]"}], "}"}], ",", 
           
           RowBox[{"{", 
            RowBox[{"n", ",", "1", ",", "4", ",", "0.1"}], "}"}]}], "]"}]}], 
        "}"}], ","}], "*)"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2.0", ",", "0.7"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.7", ",", "0.7"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.7", ",", "0.95"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2.4", ",", "1.3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.67", ",", "1.3"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<r\>\"", ",", "Medium"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"2.05", ",", "1.4"}], "}"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<e\>\"", ",", "Medium"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.48", ",", "1"}], "}"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(c\), \(2\)]\)\>\"", ",", "Medium"}], "]"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"3.72", ",", "1.06"}], "}"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<MMA statespace elec example\>\"", ",", "17"}], "]"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"2.7", ",", "0.45"}], "}"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<\[ScriptL]\>\"", ",", "Medium", ",", "Bold"}], "]"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"3.25", ",", "1.46"}], "}"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1.6", ",", "1.3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.87", ",", "1.3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.9", ",", "1.35"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.95", ",", "1.2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "1.35"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.05", ",", "1.2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.1", ",", "1.35"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.15", ",", "1.2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.18", ",", "1.3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.4", ",", "1.3"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<\!\(\*SubscriptBox[\(i\), \(1\)]\)\>\"", ",", "17"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"2.15", ",", "1.02"}], "}"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(c\), \(1\)]\)\>\"", ",", "Medium"}], "]"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"2.63", ",", "1.06"}], "}"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<\!\(\*SubscriptBox[\(i\), \(2\)]\)\>\"", ",", "17"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"3.28", ",", "1.02"}], "}"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<P\>\"", ",", "Medium"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"2.8", ",", "1.36"}], "}"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2.7", ",", "0.7"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"3.8", ",", "0.7"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2.7", ",", "1.3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.96", ",", "1.3"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"3.55", ",", "1.3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"3.8", ",", "1.3"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"3.8", ",", "1.3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"3.8", ",", "1.0"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"3.8", ",", "0.95"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"3.8", ",", "0.7"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3.06", ",", "1.3"}], "}"}], ",", "0.1", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.85"}], ",", "\[Pi]"}], "}"}]}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3.19", ",", "1.3"}], "}"}], ",", "0.1", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.85"}], ",", 
           RowBox[{"\[Pi]", "+", "0.85"}]}], "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3.32", ",", "1.3"}], "}"}], ",", "0.1", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.85"}], ",", 
           RowBox[{"\[Pi]", "+", "0.85"}]}], "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3.45", ",", "1.3"}], "}"}], ",", "0.1", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"\[Pi]", "+", "0.85"}]}], "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"3.725", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"3.87", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2.7", ",", "0.8"}], "}"}], ",", "0.15", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            FractionBox["\[Pi]", "2"], "-", "0.5"}], ",", 
           RowBox[{
            FractionBox["\[Pi]", "2"], "+", "0.5"}]}], "}"}]}], "]"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3.8", ",", "0.8"}], "}"}], ",", "0.15", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            FractionBox["\[Pi]", "2"], "-", "0.5"}], ",", 
           RowBox[{
            FractionBox["\[Pi]", "2"], "+", "0.5"}]}], "}"}]}], "]"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2.7", ",", "1.3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.7", ",", "1.0"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2.635", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.77", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1.6", ",", "1.3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.6", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1.6", ",", "0.95"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.6", ",", "0.7"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1.535", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.67", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1.55", ",", "0.95"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.655", ",", "0.95"}], "}"}]}], "}"}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1.6", ",", "0.7"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "0.7"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RGBColor", "[", 
        RowBox[{"0.113", ",", "0.686", ",", "0.925"}], "]"}], ",", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2.7", ",", "1.3"}], "}"}], ",", "0.03"}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RGBColor", "[", 
        RowBox[{"0.113", ",", "0.686", ",", "0.925"}], "]"}], ",", 
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2.15", ",", "0.96"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.38", ",", "0.15"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RGBColor", "[", 
        RowBox[{"0.113", ",", "0.686", ",", "0.925"}], "]"}], ",", 
       RowBox[{"Arrowheads", "[", "0.03", "]"}], ",", 
       RowBox[{"Arrow", "[", 
        RowBox[{"BezierCurve", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2.15", ",", "1.11"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2.2", ",", "1.11"}], "}"}]}], "}"}], "]"}], "]"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RGBColor", "[", 
        RowBox[{"0.113", ",", "0.686", ",", "0.925"}], "]"}], ",", 
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3.25", ",", "0.96"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.38", ",", "0.15"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RGBColor", "[", 
        RowBox[{"0.113", ",", "0.686", ",", "0.925"}], "]"}], ",", 
       RowBox[{"Arrowheads", "[", "0.03", "]"}], ",", 
       RowBox[{"Arrow", "[", 
        RowBox[{"BezierCurve", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"3.28", ",", "1.11"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"3.31", ",", "1.11"}], "}"}]}], "}"}], "]"}], "]"}]}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "350"}]}], 
  RowBox[{"(*", 
   RowBox[{",", 
    RowBox[{"Ticks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", "3", ",", "0.1"}], "]"}], ",", 
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", "2.2", ",", "0.1"}], "]"}]}], "}"}]}]}], "*)"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.774185799321097*^9, 3.774185848622957*^9}, {
   3.774185909821609*^9, 3.7741859142999687`*^9}, {3.7741861688526297`*^9, 
   3.774186179204549*^9}, {3.774186219379195*^9, 3.7741862494005213`*^9}, {
   3.7741862988944597`*^9, 3.774186348514863*^9}, {3.7741864040502577`*^9, 
   3.7741865313847446`*^9}, {3.774186568984548*^9, 3.7741865959332523`*^9}, {
   3.774186629532193*^9, 3.7741866345389957`*^9}, {3.774186665938738*^9, 
   3.774186689055969*^9}, {3.774186761076934*^9, 3.774186781578691*^9}, 
   3.774186830369766*^9, {3.77418686763881*^9, 3.7741868817890863`*^9}, {
   3.774186944858576*^9, 3.774186945369643*^9}, {3.774186977848583*^9, 
   3.774187012565889*^9}, {3.774187112746214*^9, 3.774187147910637*^9}, {
   3.7741872338506823`*^9, 3.774187240801168*^9}, {3.7741872753521214`*^9, 
   3.7741872991898317`*^9}, {3.7741873361009197`*^9, 
   3.7741874954349613`*^9}, {3.774187570192731*^9, 3.774187611340455*^9}, {
   3.774187642259533*^9, 3.774187671065072*^9}, {3.774187713928513*^9, 
   3.77418774381295*^9}, {3.774187876855816*^9, 3.7741879055500517`*^9}, {
   3.77418794415401*^9, 3.774187944497346*^9}, {3.774187979928297*^9, 
   3.7741879816794043`*^9}, {3.774188018389439*^9, 3.7741880754845552`*^9}, {
   3.7741881172105837`*^9, 3.774188135094871*^9}, {3.774188177444704*^9, 
   3.7741881795324163`*^9}, {3.774188214819067*^9, 3.774188254664225*^9}, {
   3.774188308847925*^9, 3.7741883225724163`*^9}, 3.774188811274613*^9, 
   3.7741888517210817`*^9, {3.774188935549005*^9, 3.7741889789919777`*^9}, {
   3.77418901797323*^9, 3.774189031404963*^9}, {3.774189072787278*^9, 
   3.774189080266254*^9}, {3.774189113127934*^9, 3.774189272342506*^9}, {
   3.774189370293399*^9, 3.774189371618129*^9}, {3.774189406601186*^9, 
   3.774189504124342*^9}, {3.7741896205353317`*^9, 3.7741896234920483`*^9}, 
   3.7741896996905003`*^9, {3.77418980151574*^9, 3.774189802225913*^9}, {
   3.774189834832922*^9, 3.774189837711738*^9}, {3.774189872639627*^9, 
   3.774189898620699*^9}, {3.7741899361884193`*^9, 3.774189963114196*^9}, 
   3.774189998003056*^9, {3.7741901679039927`*^9, 3.7741901685190067`*^9}, {
   3.774190216326374*^9, 3.774190275385893*^9}, {3.7741903091361637`*^9, 
   3.774190314466174*^9}, {3.774190370890305*^9, 3.7741903745512123`*^9}, {
   3.77419043421275*^9, 3.774190487399248*^9}, 3.774190537494729*^9, {
   3.7741906598560753`*^9, 3.774190678749716*^9}, 3.774190712590166*^9, 
   3.774190752572029*^9, {3.774190958618917*^9, 3.774190963361861*^9}, {
   3.774190997257238*^9, 3.774191071386066*^9}, {3.7741911596805687`*^9, 
   3.7741915654094477`*^9}, {3.774191606360982*^9, 3.774191626206272*^9}, {
   3.7742042365038557`*^9, 3.774204255440963*^9}, {3.7742042863607817`*^9, 
   3.774204476820977*^9}, {3.774206915478812*^9, 3.774207134153845*^9}, {
   3.7743580232238483`*^9, 3.774358038278296*^9}, {3.7743581319112043`*^9, 
   3.774358177811194*^9}, {3.774359025467784*^9, 3.774359052737605*^9}, {
   3.774359119673039*^9, 3.774359131615604*^9}, {3.774359317521008*^9, 
   3.774359370253146*^9}, {3.774359424859585*^9, 3.774359476143736*^9}, 
   3.774359509495264*^9, {3.7743595401132727`*^9, 3.77435967359269*^9}, {
   3.774359726903674*^9, 3.774359842162253*^9}, {3.774359962095151*^9, 
   3.774360081812065*^9}, {3.774360113522502*^9, 3.7743602138454647`*^9}, 
   3.774360290421626*^9, {3.774360401437296*^9, 3.774360414694886*^9}, {
   3.77436045989468*^9, 3.7743604753622828`*^9}, {3.774360518962491*^9, 
   3.774360568215435*^9}, {3.774360645254713*^9, 3.774360734770537*^9}, {
   3.774360799536332*^9, 3.774360852318902*^9}, {3.774360888125854*^9, 
   3.7743608893413563`*^9}, {3.774360932742672*^9, 3.774360944732082*^9}, {
   3.7743609949065742`*^9, 3.7743609957784433`*^9}, {3.774361037155591*^9, 
   3.774361078031878*^9}, {3.774361219851899*^9, 3.774361326336693*^9}, {
   3.774361357553508*^9, 3.774361406358186*^9}, {3.774361438264327*^9, 
   3.774361488236925*^9}, 3.774361584419642*^9, {3.774361614635426*^9, 
   3.7743616585910187`*^9}, 3.77436175161487*^9, {3.774361814099115*^9, 
   3.774361919823819*^9}, {3.774361966175264*^9, 3.774362164967243*^9}, {
   3.774362263997744*^9, 3.774362458328223*^9}, {3.774362492894848*^9, 
   3.774362505813903*^9}, {3.7743625547964973`*^9, 3.7743626264504347`*^9}, {
   3.77436267443377*^9, 3.774362821052354*^9}, {3.7743628712114162`*^9, 
   3.7743629089698544`*^9}, {3.77436302320266*^9, 3.774363094117156*^9}, {
   3.774363136781658*^9, 3.7743632063071127`*^9}, {3.774363245010048*^9, 
   3.774363371887656*^9}, {3.774363698328587*^9, 3.774363840110587*^9}, 
   3.7743638814472513`*^9, {3.774363913173812*^9, 3.774363960851943*^9}, {
   3.774364009963585*^9, 3.7743641238797197`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[1, 0.9, 0.8], RectangleBox[{1.3, 0.2}, {4, 1.6}]}, 
   {Thickness[0.004], LineBox[{{2., 0.7}, {2.7, 0.7}, {2.7, 0.95}}]}, 
   {Thickness[0.004], ArrowBox[{{2.4, 1.3}, {2.67, 1.3}}]}, InsetBox[
    StyleBox["\<\"r\"\>",
     StripOnInput->False,
     FontSize->Medium], {2.05, 1.4}], InsetBox[
    StyleBox["\<\"e\"\>",
     StripOnInput->False,
     FontSize->Medium], {1.48, 1}], InsetBox[
    StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(c\\), \\(2\\)]\\)\"\>",
     StripOnInput->False,
     FontSize->Medium], {3.72, 1.06}], InsetBox[
    StyleBox["\<\"MMA statespace elec example\"\>",
     StripOnInput->False,
     FontSize->17], {2.7, 0.45}], InsetBox[
    StyleBox["\<\"\[ScriptL]\"\>",
     StripOnInput->False,
     FontSize->Medium,
     FontWeight->Bold], {3.25, 1.46}], 
   {Thickness[0.004], 
    LineBox[{{1.6, 1.3}, {1.87, 1.3}, {1.9, 1.35}, {1.95, 1.2}, {2, 1.35}, {
      2.05, 1.2}, {2.1, 1.35}, {2.15, 1.2}, {2.18, 1.3}, {2.4, 1.3}}]}, 
   InsetBox[
    StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(i\\), \\(1\\)]\\)\"\>",
     StripOnInput->False,
     FontSize->17], {2.15, 1.02}], InsetBox[
    StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(c\\), \\(1\\)]\\)\"\>",
     StripOnInput->False,
     FontSize->Medium], {2.63, 1.06}], InsetBox[
    StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(i\\), \\(2\\)]\\)\"\>",
     StripOnInput->False,
     FontSize->17], {3.28, 1.02}], InsetBox[
    StyleBox["\<\"P\"\>",
     StripOnInput->False,
     FontSize->Medium], {2.8, 1.36}], 
   {Thickness[0.004], LineBox[{{2.7, 0.7}, {3.8, 0.7}}]}, 
   {Thickness[0.004], LineBox[{{2.7, 1.3}, {2.96, 1.3}}]}, 
   {Thickness[0.004], LineBox[{{3.55, 1.3}, {3.8, 1.3}}]}, 
   {Thickness[0.004], LineBox[{{3.8, 1.3}, {3.8, 1.}}]}, 
   {Thickness[0.004], LineBox[{{3.8, 0.95}, {3.8, 0.7}}]}, 
   {Thickness[0.004], 
    CircleBox[{3.06, 1.3}, 0.1, 
     NCache[{-0.85, Pi}, {-0.85, 3.141592653589793}]]}, 
   {Thickness[0.004], 
    CircleBox[{3.19, 1.3}, 0.1, {-0.85, 3.991592653589793}]}, 
   {Thickness[0.004], 
    CircleBox[{3.32, 1.3}, 0.1, {-0.85, 3.991592653589793}]}, 
   {Thickness[0.004], CircleBox[{3.45, 1.3}, 0.1, {0, 3.991592653589793}]}, 
   {Thickness[0.004], LineBox[{{3.725, 1}, {3.87, 1}}]}, 
   {Thickness[0.004], 
    CircleBox[{2.7, 0.8}, 0.15, {1.0707963267948966`, 
     2.0707963267948966`}]}, 
   {Thickness[0.004], 
    CircleBox[{3.8, 0.8}, 0.15, {1.0707963267948966`, 
     2.0707963267948966`}]}, 
   {Thickness[0.004], LineBox[{{2.7, 1.3}, {2.7, 1.}}]}, 
   {Thickness[0.004], LineBox[{{2.635, 1}, {2.77, 1}}]}, 
   {Thickness[0.004], LineBox[{{1.6, 1.3}, {1.6, 1}}]}, 
   {Thickness[0.004], LineBox[{{1.6, 0.95}, {1.6, 0.7}}]}, 
   {Thickness[0.004], LineBox[{{1.535, 1}, {1.67, 1}}]}, 
   {Thickness[0.004], LineBox[{{1.55, 0.95}, {1.655, 0.95}}]}, 
   {Thickness[0.004], LineBox[{{1.6, 0.7}, {2, 0.7}}]}, 
   {RGBColor[0.113, 0.686, 0.925], DiskBox[{2.7, 1.3}, 0.03]}, 
   {RGBColor[0.113, 0.686, 0.925], Thickness[0.004], 
    CircleBox[{2.15, 0.96}, {0.38, 0.15}, 
     NCache[{0, 2 Pi}, {0, 6.283185307179586}]]}, 
   {RGBColor[0.113, 0.686, 0.925], Arrowheads[0.03], 
    ArrowBox[BezierCurveBox[{{2.15, 1.11}, {2.2, 1.11}}]]}, 
   {RGBColor[0.113, 0.686, 0.925], Thickness[0.004], 
    CircleBox[{3.25, 0.96}, {0.38, 0.15}, 
     NCache[{0, 2 Pi}, {0, 6.283185307179586}]]}, 
   {RGBColor[0.113, 0.686, 0.925], Arrowheads[0.03], 
    ArrowBox[BezierCurveBox[{{3.28, 1.11}, {3.31, 1.11}}]]}},
  Axes->False,
  ImageSize->350]], "Output",
 CellChangeTimes->{
  3.774358040671088*^9, {3.774358138234619*^9, 3.774358178530138*^9}, 
   3.7743591323438177`*^9, 3.774359321527567*^9, 3.774359371790576*^9, {
   3.774359437779223*^9, 3.7743594769161873`*^9}, 3.774359510866167*^9, 
   3.774359548009128*^9, 3.77435962142138*^9, 3.77435967437167*^9, {
   3.7743597785518913`*^9, 3.774359790507707*^9}, 3.7743598431100187`*^9, 
   3.774359969343725*^9, {3.774360035080407*^9, 3.7743600833414392`*^9}, {
   3.774360161126988*^9, 3.7743602144790373`*^9}, 3.774360291155942*^9, 
   3.7743604781541557`*^9, {3.7743605441029387`*^9, 3.774360568917886*^9}, 
   3.77436066870679*^9, {3.77436070073315*^9, 3.7743607360598097`*^9}, 
   3.774360863133255*^9, 3.7743609456602497`*^9, {3.774361052821375*^9, 
   3.77436107928036*^9}, {3.774361249443742*^9, 3.774361327437344*^9}, 
   3.774361358738882*^9, 3.774361407242934*^9, 3.774361438943635*^9, 
   3.774361537469676*^9, {3.774361586205819*^9, 3.774361659587369*^9}, 
   3.774361752832164*^9, {3.774361814705613*^9, 3.774361920637329*^9}, {
   3.774362018222864*^9, 3.774362040310431*^9}, {3.7743621018756943`*^9, 
   3.77436216574302*^9}, {3.774362270156103*^9, 3.774362306592259*^9}, {
   3.774362377523238*^9, 3.77436245962766*^9}, {3.774362495692218*^9, 
   3.7743625065058413`*^9}, {3.77436256629703*^9, 3.774362593133869*^9}, 
   3.774362627286042*^9, {3.774362697614758*^9, 3.774362822177648*^9}, {
   3.774362898729144*^9, 3.774362909715395*^9}, {3.774363029460125*^9, 
   3.774363095362887*^9}, {3.774363170687414*^9, 3.7743632070695763`*^9}, {
   3.774363252650734*^9, 3.774363272473447*^9}, 3.7743633117919893`*^9, {
   3.7743633453953257`*^9, 3.774363372489627*^9}, 3.7743636994953747`*^9, {
   3.774363765888445*^9, 3.774363799629019*^9}, {3.774363832720023*^9, 
   3.774363840799943*^9}, 3.7743638825131598`*^9, 3.774363925522716*^9, 
   3.774363961630138*^9, {3.774364017867467*^9, 3.7743640331261063`*^9}, 
   3.7743640668486547`*^9, {3.77436410025768*^9, 3.77436412476912*^9}}]
}, {2}]],

Cell["\<\
Not this exact problem, but I could look at the Mathematica documentation \
example for a two-loop circuit. The sketch is shown above.\
\>", "Text",
 CellChangeTimes->{{3.774364254426305*^9, 3.7743642906322947`*^9}, {
  3.7743696102396593`*^9, 3.774369652260354*^9}, {3.7744438652807417`*^9, 
  3.7744438895945263`*^9}}],

Cell["\<\
Component relations are entered, and state conditions are recorded.\
\>", "Text",
 CellChangeTimes->{{3.774443918466104*^9, 3.774443952028228*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"components", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"L", " ", 
       RowBox[{
        SuperscriptBox[
         SubscriptBox["i", "2"], "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", 
      RowBox[{
       SubscriptBox["v", "l"], "[", "t", "]"}]}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        SubscriptBox["v", "c1"], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      FractionBox[
       RowBox[{
        SubscriptBox["i", "1"], "[", "t", "]"}], 
       SubscriptBox["C", "1"]]}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        SubscriptBox["v", "c2"], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      FractionBox[
       RowBox[{
        SubscriptBox["i", "2"], "[", "t", "]"}], 
       SubscriptBox["C", "2"]]}]}], "}"}]}], ";", 
  RowBox[{"kirchhoff", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"R", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubscriptBox["i", "1"], "[", "t", "]"}], "+", 
         RowBox[{
          SubscriptBox["i", "2"], "[", "t", "]"}]}], ")"}]}], "\[Equal]", 
      RowBox[{
       SubscriptBox["v", "r"], "[", "t", "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["v", "c1"], "[", "t", "]"}], "+", 
       RowBox[{
        SubscriptBox["v", "r"], "[", "t", "]"}]}], "\[Equal]", 
      RowBox[{
       SubscriptBox["v", "s"], "[", "t", "]"}]}], ",", 
     RowBox[{
      RowBox[{
       SubscriptBox["v", "c1"], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        SubscriptBox["v", "l"], "[", "t", "]"}], "+", 
       RowBox[{
        SubscriptBox["v", "c2"], "[", "t", "]"}]}]}]}], "}"}]}], 
  ";"}]], "Input"],

Cell["Then the state space model is created.", "Text",
 CellChangeTimes->{{3.774443960211873*^9, 3.774443967379249*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"m1", "=", 
  RowBox[{"StateSpaceModel", "[", 
   RowBox[{
    RowBox[{"Join", "[", 
     RowBox[{"components", ",", "kirchhoff"}], "]"}], ",", 
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{
       SubscriptBox["v", "c1"], "[", "t", "]"}], ",", " ", 
      RowBox[{
       SubscriptBox["v", "c2"], "[", "t", "]"}], ",", " ", 
      RowBox[{
       SubscriptBox["i", "2"], "[", "t", "]"}], ",", 
      RowBox[{
       SubscriptBox["i", "1"], "[", "t", "]"}], ",", 
      RowBox[{
       SubscriptBox["v", "r"], "[", "t", "]"}], ",", " ", 
      RowBox[{
       SubscriptBox["v", "l"], "[", "t", "]"}]}], "}"}], ",", " ", 
    RowBox[{
     SubscriptBox["v", "s"], "[", "t", "]"}], ",", " ", 
    RowBox[{
     SubscriptBox["v", "c2"], "[", "t", "]"}], ",", "t"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7742041045447283`*^9, 3.7742041062146263`*^9}}],

Cell[BoxData[
 TemplateBox[{
  "0","0",RowBox[{"-", "L"}],"0","0","0","0","0","0","0","0",
   RowBox[{"-", "1"}],"0",RowBox[{"-", "1"}],"0","0","0","0","0","0","0","0",
   RowBox[{"-", 
     FractionBox["1", 
      SubscriptBox["C", "1"]]}],"0","0","0","0",RowBox[{"-", "1"}],"0","0",
   "0","0","0","0",RowBox[{"-", 
     FractionBox["1", 
      SubscriptBox["C", "2"]]}],"0","0","0","0","0","0","0","0","0","0","0",
   "0","R","R",RowBox[{"-", "1"}],"0","0","0","0","0","0","0","0","1","0","0",
   "0","1","0",RowBox[{"-", "1"}],"0","0","0","0","0","0","1",
   RowBox[{"-", "1"}],"0","0","0",RowBox[{"-", "1"}],"0","0","1","0","0","0",
   "0","0",InterpretationBox["\[InvisibleSpace]", None],{
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2, \
$CellContext`stname3, $CellContext`stname4, $CellContext`stname5, \
$CellContext`stname6}, {{Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$, 
      Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$, 
      Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
    Automatic, 1, 1, 6, 1, {}, {False, False}, True, Automatic, None, {",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["i", "2"], "[", "t", "]"}], ",", "0"}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["v", "c1"], "[", "t", "]"}], ",", "0"}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["v", "l"], "[", "t", "]"}], ",", "0"}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["i", "1"], "[", "t", "]"}], ",", "0"}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["v", "r"], "[", "t", "]"}], ",", "0"}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["v", "c2"], "[", "t", "]"}], ",", "0"}], "}"}]}], 
       "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{
             SubscriptBox["v", "s"], "[", "t", "]"}], ",", "0"}], "}"}], 
       "}"}], ",", "Automatic", ",", "t"}},{}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, #13}, \
{#14, #15, #16, #17, #18, #19, #20, #21, #22, #23, #24, #25, #26}, {#27, #28, \
#29, #30, #31, #32, #33, #34, #35, #36, #37, #38, #39}, {#40, #41, #42, #43, \
#44, #45, #46, #47, #48, #49, #50, #51, #52}, {#53, #54, #55, #56, #57, #58, \
#59, #60, #61, #62, #63, #64, #65}, {#66, #67, #68, #69, #70, #71, #72, #73, \
#74, #75, #76, #77, #78}, {
         "", "", "", "", "", "", #79, #80, #81, #82, #83, #84, #85}}, 
        AllowedDimensions -> {13, 7}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {
         "Rows" -> {False, False, False, False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, 
          "Columns" -> {False, False, False, False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], False, False, False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #86, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{7, 12}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{20, 25}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{33, 38}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{46, 51}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{59, 64}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{72, 77}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{13, 13}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{26, 26}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{39, 39}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{52, 52}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{65, 65}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{78, 78}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{79, 84}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{85, 85}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 6}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{14, 19}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{27, 32}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{40, 45}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{53, 58}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{66, 71}, ","], "}"}], "}"}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["i", "2"], "[", "t", "]"}], ",", "0"}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["v", "c1"], "[", "t", "]"}], ",", "0"}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["v", "l"], "[", "t", "]"}], ",", "0"}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["i", "1"], "[", "t", "]"}], ",", "0"}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["v", "r"], "[", "t", "]"}], ",", "0"}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["v", "c2"], "[", "t", "]"}], ",", "0"}], "}"}]}], 
       "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{
             SubscriptBox["v", "s"], "[", "t", "]"}], ",", "0"}], "}"}], 
       "}"}], ",", "Automatic", ",", "t", ",", "SamplingPeriod", "->", 
     RowBox[{#86}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellChangeTimes->{3.7742037642298307`*^9, 3.7742041069952917`*^9, 
  3.774444756737849*^9, 3.774456362403945*^9, 3.774460737305004*^9}]
}, Open  ]],

Cell["\<\
At this point specific values for the components can be set or reset.\
\>", "Text",
 CellChangeTimes->{{3.7744439764388103`*^9, 3.774443986322174*^9}, {
  3.774444057680203*^9, 3.774444067509638*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mw", "=", 
  RowBox[{"m1", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["C", "1"], "\[Rule]", "2"}], ",", 
     RowBox[{
      SubscriptBox["C", "2"], "\[Rule]", "3"}], ",", 
     RowBox[{"L", "\[Rule]", "1"}], ",", 
     RowBox[{"R", "\[Rule]", "2"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.774204501131407*^9, 3.7742045180314093`*^9}, {
  3.774204865190452*^9, 3.774204880173023*^9}, {3.774444744548203*^9, 
  3.774444744777437*^9}}],

Cell[BoxData[
 TemplateBox[{
  "0","0",RowBox[{"-", "1"}],"0","0","0","0","0","0","0","0",
   RowBox[{"-", "1"}],"0",RowBox[{"-", "1"}],"0","0","0","0","0","0","0","0",
   RowBox[{"-", 
     FractionBox["1", "2"]}],"0","0","0","0",RowBox[{"-", "1"}],"0","0","0",
   "0","0","0",RowBox[{"-", 
     FractionBox["1", "3"]}],"0","0","0","0","0","0","0","0","0","0","0","0",
   "2","2",RowBox[{"-", "1"}],"0","0","0","0","0","0","0","0","1","0","0","0",
   "1","0",RowBox[{"-", "1"}],"0","0","0","0","0","0","1",RowBox[{"-", "1"}],
   "0","0","0",RowBox[{"-", "1"}],"0","0","1","0","0","0","0","0",
   InterpretationBox["\[InvisibleSpace]", None],{
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2, \
$CellContext`stname3, $CellContext`stname4, $CellContext`stname5, \
$CellContext`stname6}, {{Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$, 
      Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$, 
      Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
    Automatic, 1, 1, 6, 1, {}, {False, False}, True, Automatic, None, {",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["i", "2"], "[", "t", "]"}], ",", "0"}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["v", "c1"], "[", "t", "]"}], ",", "0"}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["v", "l"], "[", "t", "]"}], ",", "0"}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["i", "1"], "[", "t", "]"}], ",", "0"}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["v", "r"], "[", "t", "]"}], ",", "0"}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["v", "c2"], "[", "t", "]"}], ",", "0"}], "}"}]}], 
       "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{
             SubscriptBox["v", "s"], "[", "t", "]"}], ",", "0"}], "}"}], 
       "}"}], ",", "Automatic", ",", "t"}},{}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, #13}, \
{#14, #15, #16, #17, #18, #19, #20, #21, #22, #23, #24, #25, #26}, {#27, #28, \
#29, #30, #31, #32, #33, #34, #35, #36, #37, #38, #39}, {#40, #41, #42, #43, \
#44, #45, #46, #47, #48, #49, #50, #51, #52}, {#53, #54, #55, #56, #57, #58, \
#59, #60, #61, #62, #63, #64, #65}, {#66, #67, #68, #69, #70, #71, #72, #73, \
#74, #75, #76, #77, #78}, {
         "", "", "", "", "", "", #79, #80, #81, #82, #83, #84, #85}}, 
        AllowedDimensions -> {13, 7}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {
         "Rows" -> {False, False, False, False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, 
          "Columns" -> {False, False, False, False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], False, False, False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #86, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{7, 12}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{20, 25}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{33, 38}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{46, 51}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{59, 64}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{72, 77}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{13, 13}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{26, 26}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{39, 39}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{52, 52}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{65, 65}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{78, 78}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{79, 84}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{85, 85}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 6}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{14, 19}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{27, 32}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{40, 45}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{53, 58}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{66, 71}, ","], "}"}], "}"}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["i", "2"], "[", "t", "]"}], ",", "0"}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["v", "c1"], "[", "t", "]"}], ",", "0"}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["v", "l"], "[", "t", "]"}], ",", "0"}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["i", "1"], "[", "t", "]"}], ",", "0"}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["v", "r"], "[", "t", "]"}], ",", "0"}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["v", "c2"], "[", "t", "]"}], ",", "0"}], "}"}]}], 
       "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{
             SubscriptBox["v", "s"], "[", "t", "]"}], ",", "0"}], "}"}], 
       "}"}], ",", "Automatic", ",", "t", ",", "SamplingPeriod", "->", 
     RowBox[{#86}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellChangeTimes->{3.774204520091969*^9, 3.774204881841992*^9, 
  3.774444761118643*^9, 3.774456365883006*^9, 3.774460745787449*^9}]
}, Open  ]],

Cell["\<\
And finally the voltage is plugged in and the time-varying behavior is \
observed. I don\[CloseCurlyQuote]t like the output response to this model, I \
would like to see multiple traces for the multiple loops (of the circuit). \
\>", "Text",
 CellChangeTimes->{{3.774444076854632*^9, 3.7744441122594423`*^9}, {
   3.774459219268882*^9, 3.774459278857429*^9}, {3.7744611532641363`*^9, 
   3.7744611567842216`*^9}, {3.774461509060626*^9, 3.774461517620475*^9}, 
   3.77446156041112*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"opc", "=", 
  RowBox[{"OutputResponse", "[", 
   RowBox[{
    RowBox[{"{", "mw", "}"}], ",", "12", ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "60"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.77420495527249*^9, 3.774204995948949*^9}, {
  3.7744471422716637`*^9, 3.774447146321464*^9}, {3.774447218031439*^9, 
  3.7744472240479717`*^9}, {3.7744472706949043`*^9, 3.774447273540831*^9}, {
  3.774456407574067*^9, 3.774456454234044*^9}, {3.774461421481468*^9, 
  3.77446142275959*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    TemplateBox[{RowBox[{
        StyleBox[
         TagBox["InterpolatingFunction", "SummaryHead"], 
         "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{Typeset`open$$ = False}, 
         PanelBox[
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwVUHlME3YYrR3gYISCEwSlipT2x6mU00qBJ3cLZQ3tVCzixhDDQMByKIxb
jsKwzEWcgE5c1QFSN5Rjy1wIcjihcoQhwgyDJQKJwBgF2mwM1v3x5cvL+17e
e9/BuNSos1QKhcLVzf9bY70zqYfW6pfHuSrlfamHEt9x7r2IP/1r2ab733oa
Q7ni83wkkoKHxeJh5e3dyEy58qv86LsYb+JuNwfshTDSiZRt0RAsNjt3XEBH
p6DKIt9zN+5fvbTL9D4dl+Ps43oZlpDSVjlF09b4yyV5Jz/BGj1Kw0fzDDo8
zJ3ss/g2sI0U6r+UHUD1wOqKytcWDZZaWkD6QfhI5AmBEjs8m8n2JFQGDBS5
hV1iFowu/D64pGDg+Dt+i7wgezDNjQTzMgY0fmN6a6cd4eVcePoFm4EO9k/d
CpEzvJZOzmeCgf7tLKf09EM4Z1xVkbTKgIu6OL0xyBWfttyVd6jtYPA0nVHn
y4b084s/f9XKhCx/qKk+3A2uOa/ZDRtM1F6PojaEusNfExX7oYoJ0U2w2056
YLI4n9tVzcQHhywrhuM9UTVgF2+sYGJqn9XjpVgvWNhwlaNGLJhoLj/el+IN
hf+Bxjc3WRh1sSyLSDqCuZaM5f6/WZhYqSkq+YQDU+WzwT5jgtI7eSJV2lF8
0RG5kfqGhadKucYi2Qf8nr28xm4WGr81lF7I5WKkcuqFdIiFEZcU87FyX1jO
sYsKzAhktM1K7yI/KEse9tXFECxMq18+qPbHuuRs1uQVgsWSyhyzEGBW6pCR
q8OlM7SvR7qBTO9ZvlRKsOo20LIn7Bja15ILayUExL3W7qO+Y7CxVcdFxxO4
Ot4qdxUEIOi3ax5pVQQ7httFVFUAlu+621I7CdScwLYTYYEgwnUhd4jgx3p9
iudwICoTZpcLBghCH7xue18QBLOhe6JV3X1T64I4ZzwIU+IKk8JmAuf8xIp4
STCeRHyfKHhEcFG7xRK+CoaU7mcy/QvB9cTn3/WcCYFKvKevd5YgT9Z458h0
CCgTE1ajb3V9zm8S9qlQ9HRvFg/NEXzMK61tnQkFRfiHZGuSQH/MNsM9Ngx6
zRY17mM6vWid4zsXhoipJ2v1rwgs6rjXBpJ4sOpXK83ndf7yGyeiF3ioKqO6
NagJWrIdDNJS+Yg5E89y1ury7xqmy5b44HTFykt1fM43TTb2WeEoV3iES3V5
zmu1neGb4Rjt7XQ4taD752bMD2nZEch3PMwqXiRo31hX0HcIEJjFNoxeJ3jv
tkI7WCBAjYoiX/mHgL//kmZ7W4DSz1xnDv9L8B8/R59C
                    "]]}}}, {
                 DisplayFunction -> Identity, AspectRatio -> 1, 
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 1.5}, DisplayFunction :> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                  Method -> {
                   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                  PlotRange -> {{0., 60.}, {2.5714291525429744`, 
                   11.99450588790729}}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "60.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwVUHlME3YYrR3gYISCEwSlipT2x6mU00qBJ3cLZQ3tVCzixhDDQMByKIxb
jsKwzEWcgE5c1QFSN5Rjy1wIcjihcoQhwgyDJQKJwBgF2mwM1v3x5cvL+17e
e9/BuNSos1QKhcLVzf9bY70zqYfW6pfHuSrlfamHEt9x7r2IP/1r2ab733oa
Q7ni83wkkoKHxeJh5e3dyEy58qv86LsYb+JuNwfshTDSiZRt0RAsNjt3XEBH
p6DKIt9zN+5fvbTL9D4dl+Ps43oZlpDSVjlF09b4yyV5Jz/BGj1Kw0fzDDo8
zJ3ss/g2sI0U6r+UHUD1wOqKytcWDZZaWkD6QfhI5AmBEjs8m8n2JFQGDBS5
hV1iFowu/D64pGDg+Dt+i7wgezDNjQTzMgY0fmN6a6cd4eVcePoFm4EO9k/d
CpEzvJZOzmeCgf7tLKf09EM4Z1xVkbTKgIu6OL0xyBWfttyVd6jtYPA0nVHn
y4b084s/f9XKhCx/qKk+3A2uOa/ZDRtM1F6PojaEusNfExX7oYoJ0U2w2056
YLI4n9tVzcQHhywrhuM9UTVgF2+sYGJqn9XjpVgvWNhwlaNGLJhoLj/el+IN
hf+Bxjc3WRh1sSyLSDqCuZaM5f6/WZhYqSkq+YQDU+WzwT5jgtI7eSJV2lF8
0RG5kfqGhadKucYi2Qf8nr28xm4WGr81lF7I5WKkcuqFdIiFEZcU87FyX1jO
sYsKzAhktM1K7yI/KEse9tXFECxMq18+qPbHuuRs1uQVgsWSyhyzEGBW6pCR
q8OlM7SvR7qBTO9ZvlRKsOo20LIn7Bja15ILayUExL3W7qO+Y7CxVcdFxxO4
Ot4qdxUEIOi3ax5pVQQ7httFVFUAlu+621I7CdScwLYTYYEgwnUhd4jgx3p9
iudwICoTZpcLBghCH7xue18QBLOhe6JV3X1T64I4ZzwIU+IKk8JmAuf8xIp4
STCeRHyfKHhEcFG7xRK+CoaU7mcy/QvB9cTn3/WcCYFKvKevd5YgT9Z458h0
CCgTE1ajb3V9zm8S9qlQ9HRvFg/NEXzMK61tnQkFRfiHZGuSQH/MNsM9Ngx6
zRY17mM6vWid4zsXhoipJ2v1rwgs6rjXBpJ4sOpXK83ndf7yGyeiF3ioKqO6
NagJWrIdDNJS+Yg5E89y1ury7xqmy5b44HTFykt1fM43TTb2WeEoV3iES3V5
zmu1neGb4Rjt7XQ4taD752bMD2nZEch3PMwqXiRo31hX0HcIEJjFNoxeJ3jv
tkI7WCBAjYoiX/mHgL//kmZ7W4DSz1xnDv9L8B8/R59C
                    "]]}}}, {
                 DisplayFunction -> Identity, AspectRatio -> 1, 
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 1.5}, DisplayFunction :> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                  Method -> {
                   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                  PlotRange -> {{0., 60.}, {2.5714291525429744`, 
                   11.99450588790729}}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "60.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
          Baseline], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("InterpolatingFunction[{{0., 60.}}, <>]"& )],
    False,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], "[", "t", "]"}], "}"}]], "Output",
 CellChangeTimes->{{3.77420497007161*^9, 3.774204998318424*^9}, 
   3.7744447655003033`*^9, 3.774447147930868*^9, 3.7744472253531933`*^9, 
   3.7744472745401506`*^9, 3.774456370250024*^9, {3.7744564101806393`*^9, 
   3.774456455429331*^9}, 3.7744606986763363`*^9, 3.7744607503137627`*^9, 
   3.7744614236938047`*^9}]
}, Open  ]],

Cell["\<\
From the plot below, I seem to be seeing a gradual stabilization to the 12 \
volts entered as the \[OpenCurlyQuote]e\[CloseCurlyQuote] value. However, I \
would expect to be seeing current, not potential. \
\>", "Text",
 CellChangeTimes->{{3.7744615654348717`*^9, 3.774461577674406*^9}, {
  3.774462527525989*^9, 3.774462535980143*^9}, {3.774462596058157*^9, 
  3.774462641712707*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"opc", ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "60"}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "250"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.774205008328266*^9, 3.7742050219393587`*^9}, {
   3.7742050951618633`*^9, 3.774205097687354*^9}, {3.7742051395507107`*^9, 
   3.774205162835692*^9}, {3.774456332283646*^9, 3.7744563394002743`*^9}, 
   3.77445637910367*^9, {3.774456415950136*^9, 3.774456460641691*^9}, {
   3.77446143314377*^9, 3.774461443687035*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
E8m/rz8HnhZb4YpIWaQL8fnVuaUSpVaIVdHnDSGedtgY6//ICqJ4wJ9GfPtu
ns6qSis4esnnvybmeb+ZL6DaCsqizfhKvGc5+/vmGiu0CZZvXTpOvn8ObosK
fmaFNdw5MsbEYenc2182WsFH4eeLDcR9z4s05Jut8NLrCPseYsN5N66TLVYI
ubKkJpA4RXHp2842K7BffMAXQ/zD5eFd5Q4rBPNfeHeZeFP07ojwTitcZmcz
u0l8/yG/S0+XFeL0d6g8IF4xWq6i0WOFdae5b1cTHxD1ZovqtQJ3dsCjJuIm
K+Gud++s8H/Fdh5O1RYFABwZKk1kCGXKnKcIybhE9557zj00oIgQUTIVyVCo
aKTIHKmkjKlEhVLPVCElFRU9ZSghyRjRW+fP37c395619lp77/Px7I6nQwta
LejfAr3PLHC7evX8B/SJ6z6RMV0suOXS79CJ7n4jZdvVwwLVvyKV3Whz/jp1
w28YjwdyFV/RmWsPzMZ9Z4FjHtj0of/skm35OsCCWtOrZxk7XKjPMR3C+un2
dfuGvv9v0OGkYRYM3p3t6Oln3ocobh4YYUFVYNvMZ/QB+ZfKFuMseK58srYd
/co6bCptkgWRb5LWvUNrRai+/DmF+efk2DWhY4parrFnWDDvZppyLbqvIyI4
8y8Lrujb5JSjWQs16TFeNvDIVX4qQmcbtylw+dlgvaWm6SqazztqPEuQDbJu
p0MT0C7paxp+z2VDmj+35zi6sr798iZhNki+5YoGoGWmTgXmLGRD4eEGflf0
u+2fV9iKsuGC9yx7PVr3VOyvAjE2OD15dnkl+sL99U/5JNkQJiLTwKwPWuKC
/20ZNgiNmxV8xPWTv9F0o5AsG0Tl7nr+y6yvg9+ldsqzoejaW8Eb6JqWDdXC
ymxYna8ysw+tOGcoZZcqfj8q2JFGR+ike5eps+H9i8Kif9CG8SPinlpsMEsr
M+7H9X/HKntP1To2RJ7KCHZAB9OPxihDNtipLEtbgzblvjv21pgNy0fe3RBg
/q+QM/fSN3M2nKntvlqI9dhr6d28iMuGPTe6H//AepU20jXc4cKGxKwnUhys
98719NPuXWzIGWwZW4LOMfCw8d3NhvnZCUpt2B909VN9j3qxgWbxJbmjrbX/
ZOUEsmHyIiciCPtNlGqN8OgpNmg3JYdEfcH7gEpH6pGzbLAYU71riRZRHlcW
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
13SawfErSmDAxNenfOzvX8zHWv3O1ej/ASooSbo=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 5.800000000000001},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->250,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 60}, {6.011780253640343, 11.994991947507122`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.774456380558199*^9, {3.774456418031567*^9, 3.7744564618167267`*^9}, 
   3.774460701667162*^9, {3.774461427251649*^9, 3.774461444488441*^9}}]
}, Open  ]],

Cell["\<\
If state responses are considered, I see that there is a different one for \
each second. These are sinusoidal, but I don\[CloseCurlyQuote]t know why the \
5th is nearly flat, but the 4th and 6th are pretty curvy.\
\>", "Text",
 CellChangeTimes->{{3.774459294762166*^9, 3.774459316240299*^9}, {
  3.77446279441982*^9, 3.7744628654497232`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ops", "=", 
   RowBox[{"StateResponse", "[", 
    RowBox[{
     RowBox[{"{", "mw", "}"}], ",", "12", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "6"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.77444668074864*^9, 3.774446702807002*^9}, {
   3.774446802966597*^9, 3.774446820280765*^9}, {3.774446884257257*^9, 
   3.774446897676835*^9}, {3.774446927888693*^9, 3.774446933599275*^9}, {
   3.7744469655679407`*^9, 3.774446965762055*^9}, {3.774447304797686*^9, 
   3.77444734415501*^9}, {3.774447659838135*^9, 3.7744476610811577`*^9}, 
   3.7744603903624897`*^9, {3.774460588276932*^9, 3.7744605891392527`*^9}, {
   3.774460664552766*^9, 3.774460680464027*^9}, {3.7744607112712393`*^9, 
   3.77446071570301*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"p1", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"ops", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "5"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "5"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "5"}], ",", "10"}], "}"}]}], "}"}]}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p2", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"ops", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "5"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p3", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"ops", "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "5"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p4", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"ops", "[", 
        RowBox[{"[", "4", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "5"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Orange"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p5", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"ops", "[", 
        RowBox[{"[", "5", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "5"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Pink"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p6", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"ops", "[", 
        RowBox[{"[", "6", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "5"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.774460051028701*^9, 3.774460096529963*^9}, {
  3.774460250439212*^9, 3.774460262598485*^9}, {3.774460331052438*^9, 
  3.774460360730255*^9}, {3.774460434695548*^9, 3.774460457711698*^9}, {
  3.774460527934907*^9, 3.774460540557042*^9}, {3.774460821645362*^9, 
  3.774460871729879*^9}, {3.774460904090075*^9, 3.7744609521273127`*^9}, {
  3.774461026574469*^9, 3.774461081187374*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"p1", ",", "p2", ",", "p3", ",", "p4", ",", "p5", ",", "p6"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.774460363096991*^9, 3.774460368843069*^9}, {
  3.774460462584959*^9, 3.774460484278543*^9}, {3.774460546316923*^9, 
  3.774460557420274*^9}, {3.774460957351918*^9, 3.7744609635344877`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1: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
K0Xhf0yE1Hk=
      "]]}}, {{}, {}, 
    {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1: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
d47o8mG5yT9/GMh8PL13Nfp/xfbrAA==
      "]]}}, {{}, {}, 
    {RGBColor[0, 1, 0], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1: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
cIuGtcbFYnI9Coe1dFM7uP8HQrK0Og==
      "]]}}, {{}, {}, 
    {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1:eJwV1nk81Nv7APBBzEwRZtItSZKbkoosuSXPiVBZQkSFLCmyb6XIFkKRslRX
SBctQl9RlnKkuklocUuWIgqJmJmPMSu/z++veb1fZz7P+bye5znP56z2Cnbw
kaRQKFskKJT//y2I9ZLRPRpt8nnNzrRHgUIoPDSxzVntICQlXjIcOCSEHpv0
MDU1P3j4X7MEfbcQTlkeXCytdhpKUrcs81AXgsUL5Dq7Kg20C1vOqnQLoCJR
/9z0quvwyGzD3FskgG+elUsnV92FLN/qWR0lPkTb+3v8WlUPw7ovHju0cIHO
z38dsKkNrB/pqHLesSC0Je7iRFgX8KX31elXj8Omkuz3NZU90LNN5gjffAh+
2PqqDBgNQkTKhrgD67vgqnLKymKPYZCWLCwVMqrgr7C6Kqn2EZgZe1IxufAV
ft6dbxesOQ5NJQR3/kgP1r04Z7JszyRkKM3eoKYPYcuRbQM6ztPAo0qOamwa
w6MbH5kTEyw4/O5zo8WzCax+NtBnA4cFU0v3G/e+n8Cu7RrJXnwWNLwOXO49
NIHfnch+8U6aDUtDb3x3lJrEDbdDzCpU2XCzOuVG3a5JfHH1hp3H7NiQ0Fdz
Lu7lJNZVumn8+SEb6he5XZfCv3G0KE3vyRkORAu+5n3cPY07I7xzziRwwKFr
xRk3u2msNmk8Y5TKgZgKSeKr8zR+8WXqUW0uB64uyr/beWway2KnbVUPyP/P
Zsp6Jk3jwoTVO2+NcIAelGlo3zSNn8nU26Y6ELBYRlh3eCMLL4m7UmVxkAB7
x/RIJX0WPjbrryDtQcDL5KD61m0svHBM9UNCIAE7Fp35uGI3Czu8TnKKTiXA
aCrGIcKLhb9fsHMNaiJAfLJ0fjKXhamKY36OWjPgk/ywSILHwtzzruZFOjOQ
WdwQkCJm4ZG5d2rjhjNQ+cYjQ1qKjf+dqO+OM5uB0JVJrWw5Nk5pvWBe7joD
fvFC1bQ1bCwTv3m15KUZMMKPmaU2pKdOfq7izEB0nk/DtQI25vr8eijgz8DS
WavM47fYeKT/yCVzChfiwlOqdG6T8dt2W/TJcuHcvv09/3tAxi9TrpFZy4XW
xI6Xwc/JeO5Nl9xcuNCr7PS1Z5SNpTukLRc95YKMySrjY9ocLBt4w/vLcy5I
lQdu+6TDwUvk9OKr2rjQcKcuEQw4WMPGo37/Zy48VRibFu/g4F0dDRtucLgg
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
Da0g/X/tPtgA
      "]]}}, {{}, {}, 
    {RGBColor[1, 0.5, 0.5], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1:eJwV13k8VF0YB3AMM2NNYeIyExKKlEgknaeUpYS0WbNLVCQReWWLCMmSklRK
WVKibMleyZKtRPZlbJGl7OI9/eXz/bjuvefc5zzPj4SNi5E9GwsLSxorC8u/
nw98bciKdlf30olb33LPi0KS6djuU+ImaKtXePnpc6LQdiTMTVz8LNKvjoml
OIuCp7YJH4e4F7ogr7xi5igKWpVgPrchFMUfzxtcYysKmQHKgZMb7iHLmwdZ
nhqLQq/1S9r4hjQkyXaW6XNAFK4edbb6uaEAycQxk8YZorASqCLSHV6AapKS
d+TTRcEvl7WpaaEAzdcd+B4oJgpBonc1C5sLEVvwFyMGIQqRzErp0JAiRPJk
5bcSEoVHXoxx6YkS5Bq6J4zGIwr9DcN7FC0r0Eu7ymz9RQKknPRFMuIq0JzL
jJz6AgEOpDczUrUV6MWydbbsPAHDO6+9FFarRNc+uwySZwkYSxASZxH4gDKs
J4bqpwiYtdtPqv/4ESV8oivHjhDAuXD/8zmFauSR9IzCbCNANaTN+5B1NZIx
n/7Jhu0otF5eNrYa7cvXz5NoJeCjYnRk/0I1ChavYLNpISDI6cYx0w81SCTQ
8ux4EwEsHe6d2uZ1qJYRYbatloCr3c+urD3YgJrTLq6cLiEg+tnBo36nG9Di
baOwe8UEpJ8f2Dzh2YAKPjovfH1PwI8lifba9Ab0hlzlp1+E30f4gcYN/kZU
tCZpu14Bfn/DGLbV9kYk7XFk7mIOARfLr4WPuTWj/rMpSg6pBMyvjc1sv9mM
dMUyd5Y+J8DXOvVL9dNmtMDDyieKHc7SyJ/W0oySZ8j7mlMISN0rGWe/+yta
v9T+4sgTAnoKKx90sX5DNAcZX6ckAgxzOF81RLUgMw5uAc04Ar6zMRpK0lrQ
7RuT9/NiCThttGPqZXkLul/2cVYe+9yUqVLEnxY0eClLgogh4Ma2F3m6xt9R
WpaDzkoUASUZ+qXlG1rR7oN1+ePhBCg8jWl887INTVJPbXC8ToDg3e1zpZ/b
ULDUMep4EAFLN+vE6gba0C6ivM8Nu+oSxZFJ/EDOnxSd/QMJsNG8uiIU8gPt
YQ5XpvkTENdnI+dp2Y5GN1xxkfElwKdl1TDQux3Jy5ON3/2Hr69O9LgV147Y
PFoVDLEVslvKnte0o8Uw72c+Pvj+/oeMW3d1oB0qXPk93gQsi++4rsbfiTRd
3ql88ySgT7A+/aBcJ5JcFvnpif2Zeq7hqFYn8ku/GCaKfWcyRdTJpxNd59sZ
au9BwPZSkeyE4U5kckbWn/0yAbaWrN1LpV0oqixC7oIbAYeOJbFTO7pQ0bSc
xwbs7drqWwTnulCSt1lq40X8fIXLl+W3diNx4la5KvadlWFui3vdaO9Z+aq1
rgQw9R3FulV70E1Bi6Ff5/H+fTwn5XuwByXaj33Nxt6vcVGebtSDhmIlQj2x
H8l57zFz7kF1FmUHSNjm1HDz7w960GGt1ySpcwTcvBZl55GO/17lkMQvZwIK
Z2PPCeX1oHNP+dkLsNczH/gca+hBW6rOCh/Fbip7lVjP1otud8p4hjkRwKr2
5umFNb1I9wylwBR7e1b+C16xXlTJm1gshx2RVFZ0eGcv2jYtLdhwlgCdq80d
n870ovwx934J7GLlObHS2l70Sc1heOQMAeMZS1KWbb1o675h/Y/YYhtZtq4w
e5H9ofUeT7C91nJq7FntRTzMAg4rbOVfhEW+Yh8yzSyW6nPA+22/wf7U3j40
n3PsZiV2dMfG87OH+pD3M57Xz7EnquX/U7brQ3rJEmqu2OnP9z7IutOHlNXN
VLiw2xiaKQZP+tD0YHTUtD0B1Dvamb9e9aEuKYvUdmz7IMP38p/7kEN6z5os
7Nil4x9qvvWh2Ps7Le9jl7uZ1Dn19SEht+POIdji1jadqUt9SFVSpsAa26DV
galN7UfOKR6LBti+Bs7jg4L9aL31p7m92B0a7n+lFPqRfeDjTRuwud9e4ajc
3Y/EPlWc4MfeLf8fr602vn5RZB8bdjwRTH9s1Y/C7sToDNvhftH/5bn+hX4E
Tczz7djHM9fvWL7aj8Q/i12ox87xsCpKC+1HacWzOpXY6yBN61R8PzKfVVwp
wHblnG5gT+lHeTnhEVnY9U27zbKz+5H67g+zz7EVEgOZlqX96EzdPbVH2OH2
tS68X/pRUVbViXvYowpCi4Xt/Shfhv9wDLbuvEWQ40g/6rysIBKJnVr2jI82
149Su3pLQrHJNyfuVrAPoPspw3uDse2Oq268uG4AZfOx3gnErqD7ZzLEB9Do
5HClP7bk0OddtVsHkMOoeY0ftl/WunIv9QFk4CCS9s9dXmZ6MroDqLH+h8W/
6zU0n7Z8PTmAaNEWIwHYiTzjVgF2A0hX+PTh69iL33b+3OY2gOLq7gbewDZ+
6Hu589oA2kSvvh2Onef4aTUsYgBJur28fBubtoM/TPX+ACrYxbYtHtt9yVhw
MHUACbb5v3+A3VT5OCkmdwCZl42Ip2ArRo7K7qscQMVms8aZ2FGnlHJ+NQ4g
OwE7+1zsX+I+GondA8jr2MTBUmy90cpPuuMDSCbk+GI1dkYOr9Hc4gC6K2IY
0ILtqPXQwYjGRCZpS9yT2B/XDE+ubmSiPeGSvCvYm9q2X81UZKLFyroeHlwf
fc7lt6hHmKiv8f6KPDbs5CZyTZloYVpJ51+9PVw59tTWkYk+kNRtDbHNbzPz
iwOZ6GSkH48ndqGpgua520xEOaGccBNbRMqzTuQhE2ml7Jt/hN2SS+1zL2Si
Qz7HpL5gG3bIcctNMZGxWrHyDnyeXqa4x7WuMJGLf6rGEWxel/cbgnkG0TXv
MsGz2NWsBsq9MoMoLdxe/gn2ARk3i/jTg0hJPGtBHJ/v5MnCoQPnBtFhA4Nz
+7FZC0lu016D6LIJM90Ou1gvLvhI3CCaedEWloGt5pb/ilQ7iDzX0b/sdySg
YVX99MW2QbRzZH3nWWyHiBKe7sFBxPkw5OVt7OjUj2cLWYfQu7v58f3Yo11f
N17cNYRkXSauRuH+lHh4Kr4reQh5vfUz4MP9b0ebu5Ze1hC6J1tqvw+7ymH+
T8H7IfTZUm73Zew//qtH41qHUGb9RbFu7CP5vDx6fMNopUCl5B3utytSW/wK
vIbRsefRcPcC7h/ZmQoyIcMoZmxF+Dv2FlDsjI0dRvtr1DJoLgScNFPd7fpq
GE0vsC7HY7+6rfVHmjmM6h5u0X6C54HVio1jrOEIijBbONiB50nF9/uGLjKj
aOR968S/+RVrc+LPjNIo8i9kydl0Ba9/nO+uD4yi21d5+T2wuUgB3aEmo8gm
f+iOsBf+fgqOF57eHEXfRMQb7fA87ApSDm+bGEW+eqkVInh+LirWfdLM/4mi
7pNXfgcQUFsU7Fxd+RPNFQmEncTzOUkb1hxt/ImALTi1AHufRc7J06M/UTpv
6n1/PM9v3LjHvCI2hmRMlI4LB+Pz1G1Peuk3hr69TGi1CsXnJXxlr7DuOFoW
/HDNHOeHHWeX7TJPjqOqN5IFP7CVtRbD9tuNo4OPwuJMbhOgwjLbcu7aOFJ5
v1vFJJqAPe7jF8rejiPxCns+K5xPdMw7kpwkfyHtzUJfb97F+yVfuFK09Aux
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
/gcjqobP
      "]]}}, {{}, {}, 
    {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1: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
/gnDq/9eNniPDXD+B3N7F4s=
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 5}, {-5, 10}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7744603695518084`*^9, {3.774460464356208*^9, 3.774460485115199*^9}, {
   3.77446054817024*^9, 3.774460558600052*^9}, {3.774460826438409*^9, 
   3.774460841929701*^9}, 3.774460876218815*^9, 3.774460965122704*^9, 
   3.7744610545268383`*^9, 3.7744610853290377`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.774459640493987*^9, 3.774459642830572*^9}}]
},
WindowSize->{1366, 843},
WindowMargins->{{4, Automatic}, {Automatic, 4}},
Magnification:>1.5 Inherited,
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 10, \
2015)",
StyleDefinitions->"Charter1.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 89, 2, 45, "Input",
 Evaluatable->False],
Cell[492, 17, 269, 6, 110, "Text"],
Cell[764, 25, 160, 5, 110, "Text"],
Cell[927, 32, 214, 3, 45, "Input"],
Cell[CellGroupData[{
Cell[1166, 39, 407, 13, 45, "Input"],
Cell[1576, 54, 286, 9, 99, "Output"]
}, Open  ]],
Cell[1877, 66, 133, 1, 51, "Text"],
Cell[2013, 69, 174, 2, 75, "Text"],
Cell[2190, 73, 214, 3, 45, "Input"],
Cell[CellGroupData[{
Cell[2429, 80, 515, 16, 45, "Input"],
Cell[2947, 98, 301, 9, 69, "Output"]
}, Open  ]],
Cell[3263, 110, 130, 1, 51, "Text"],
Cell[3396, 113, 374, 12, 130, "Text"],
Cell[3773, 127, 415, 13, 45, "Output"],
Cell[4191, 142, 216, 3, 45, "Input"],
Cell[CellGroupData[{
Cell[4432, 149, 785, 24, 45, "Input"],
Cell[5220, 175, 299, 9, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5556, 189, 311, 11, 102, "Input"],
Cell[5870, 202, 392, 13, 45, "Output"]
}, Open  ]],
Cell[6277, 218, 130, 2, 45, "Input"],
Cell[6410, 222, 441, 14, 45, "Input"],
Cell[6854, 238, 373, 11, 77, "Text"],
Cell[7230, 251, 338, 10, 130, "Text"],
Cell[7571, 263, 408, 12, 45, "Output"],
Cell[7982, 277, 216, 3, 45, "Input"],
Cell[CellGroupData[{
Cell[8223, 284, 274, 9, 102, "Input"],
Cell[8500, 295, 376, 11, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8913, 311, 239, 5, 45, "Input"],
Cell[9155, 318, 800, 23, 126, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9992, 346, 488, 15, 75, "Input"],
Cell[10483, 363, 337, 10, 69, "Output"]
}, Open  ]],
Cell[10835, 376, 521, 18, 89, "Text"],
Cell[11359, 396, 405, 12, 100, "Text"],
Cell[11767, 410, 360, 11, 45, "Output"],
Cell[12130, 423, 218, 3, 45, "Input"],
Cell[CellGroupData[{
Cell[12373, 430, 527, 17, 45, "Input"],
Cell[12903, 449, 364, 11, 69, "Output"]
}, Open  ]],
Cell[13282, 463, 295, 9, 52, "Text"],
Cell[13580, 474, 400, 12, 130, "Text"],
Cell[13983, 488, 490, 13, 45, "Output"],
Cell[14476, 503, 169, 3, 45, "Input"],
Cell[CellGroupData[{
Cell[14670, 510, 335, 11, 102, "Input"],
Cell[15008, 523, 609, 15, 45, "Output"]
}, Open  ]],
Cell[15632, 541, 267, 5, 51, "Text"],
Cell[CellGroupData[{
Cell[15924, 550, 152, 3, 45, "Input"],
Cell[16079, 555, 579, 14, 45, "Output"]
}, Open  ]],
Cell[16673, 572, 374, 7, 86, "Text"],
Cell[CellGroupData[{
Cell[17072, 583, 1109, 18, 45, "Input"],
Cell[18184, 603, 713, 16, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18934, 624, 1706, 32, 45, "Input"],
Cell[20643, 658, 862, 17, 69, "Output"]
}, Open  ]],
Cell[21520, 678, 949, 29, 122, "Text"],
Cell[22472, 709, 506, 16, 162, "Text"],
Cell[22981, 727, 650, 19, 75, "Output"],
Cell[23634, 748, 236, 4, 45, "Input"],
Cell[CellGroupData[{
Cell[23895, 756, 418, 14, 132, "Input"],
Cell[24316, 772, 606, 17, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24959, 794, 157, 3, 45, "Input"],
Cell[25119, 799, 476, 12, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25632, 816, 225, 6, 45, "Input"],
Cell[25860, 824, 311, 9, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26208, 838, 534, 15, 45, "Input"],
Cell[26745, 855, 507, 16, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27289, 876, 192, 5, 45, "Input"],
Cell[27484, 883, 345, 9, 69, "Output"]
}, Open  ]],
Cell[27844, 895, 117, 1, 51, "Text"],
Cell[27964, 898, 323, 7, 110, "Text"],
Cell[28290, 907, 150, 2, 75, "Text"],
Cell[CellGroupData[{
Cell[28465, 913, 17734, 467, 1722, "Input"],
Cell[46202, 1382, 3649, 77, 495, "Output"]
}, {2}]],
Cell[49863, 1462, 1491, 41, 159, "Text"],
Cell[51357, 1505, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[51455, 1510, 1195, 36, 75, "Input"],
Cell[52653, 1548, 640, 18, 69, "Output"]
}, Open  ]],
Cell[53308, 1569, 772, 14, 189, "Text"],
Cell[54083, 1585, 64290, 1059, 145, "Text"],
Cell[118376, 2646, 13157, 221, 155, "Input"],
Cell[CellGroupData[{
Cell[131558, 2871, 19878, 510, 4645, "Input"],
Cell[151439, 3383, 5487, 104, 304, "Output"]
}, {2}]],
Cell[156938, 3490, 330, 6, 86, "Text"],
Cell[157271, 3498, 157, 3, 51, "Text"],
Cell[157431, 3503, 1833, 60, 112, "Input"],
Cell[159267, 3565, 120, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[159412, 3570, 880, 24, 75, "Input"],
Cell[160295, 3596, 8161, 200, 301, "Output"]
}, Open  ]],
Cell[168471, 3799, 210, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[168706, 3807, 490, 13, 45, "Input"],
Cell[169199, 3822, 8105, 198, 293, "Output"]
}, Open  ]],
Cell[177319, 4023, 494, 8, 86, "Text"],
Cell[CellGroupData[{
Cell[177838, 4035, 527, 11, 45, "Input"],
Cell[178368, 4048, 11450, 220, 93, "Output"]
}, Open  ]],
Cell[189833, 4271, 395, 7, 86, "Text"],
Cell[CellGroupData[{
Cell[190253, 4282, 593, 11, 45, "Input"],
Cell[190849, 4295, 30520, 512, 263, "Output"]
}, Open  ]],
Cell[221384, 4810, 353, 6, 86, "Text"],
Cell[221740, 4818, 773, 15, 45, "Input"],
Cell[222516, 4835, 2667, 76, 220, "Input"],
Cell[CellGroupData[{
Cell[225208, 4915, 341, 6, 45, "Input"],
Cell[225552, 4923, 43353, 729, 349, "Output"]
}, Open  ]],
Cell[268920, 5655, 92, 1, 45, "Input"]
}
]
*)


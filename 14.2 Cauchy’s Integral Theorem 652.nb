(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    325917,       7721]
NotebookOptionsPosition[    312640,       7292]
NotebookOutlinePosition[    313028,       7309]
CellTagsIndexPosition[    312985,       7306]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[""], "Input",
 CellChangeTimes->{3.7584611617559137`*^9}],

Cell["\<\
Note: In this problem set, expressions in green cells match corresponding \
expressions in the text answers.\
\>", "Text",
 Evaluatable->False,
 CellChangeTimes->{{3.769110979154854*^9, 3.7691110093013697`*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell["1 - 8 Comments on text and examples", "Text",
 CellChangeTimes->{{3.758225110257423*^9, 3.758225124192059*^9}}],

Cell[TextData[{
 "1. Verify theorem 1 for the integral of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["z", "2"], TraditionalForm]]],
 " over the boundary of the square with vertices \[PlusMinus]1 \[PlusMinus]\
\[ImaginaryI]. Hint. Use deformation."
}], "Text",
 CellChangeTimes->{{3.758225200502532*^9, 3.758225328356097*^9}, {
  3.75831659531629*^9, 3.75831659773687*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell["\<\
3. Deformation principle. Can we exclude from Example 4 that the integral is \
also zero over the contour in Prob. 1?\
\>", "Text",
 CellChangeTimes->{{3.758225344941111*^9, 3.758225375411302*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[TextData[{
 "5. Connectedness. What is the connectedness of the domain in which ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    FractionBox[
     RowBox[{"Cos", "[", 
      SuperscriptBox["z", "2"], "]"}], 
     RowBox[{
      SuperscriptBox["z", "4"], "+", "1"}]],
    FontSize->21], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is analytic?"
}], "Text",
 CellChangeTimes->{{3.758225378732317*^9, 3.758225485409363*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[TextData[{
 "7. Deformation. Can we conclude in Example 2 that the integral of ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", 
    RowBox[{
     SuperscriptBox["z", "2"], "+", "4"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " over ",
 StyleBox["(a)",
  FontWeight->"Bold"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"|", 
    RowBox[{"z", "-", "2"}], "|"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "=2 and ",
 StyleBox["(b)",
  FontWeight->"Bold"],
 " |z-2|=3 is zero?"
}], "Text",
 CellChangeTimes->{{3.758225612616062*^9, 3.7582257076692944`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell["\<\
9 - 19 Cauchy\[CloseCurlyQuote]s Theorem applicable?
Integrate f(z) counterclockwise around the unit circle. Indicate whether \
Cauchy\[CloseCurlyQuote]s integral theorem applies.\
\>", "Text",
 CellChangeTimes->{{3.758225766205104*^9, 3.758225826307065*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"9.", "  ", 
   RowBox[{"f", "[", "z_", "]"}]}], "=", 
  RowBox[{"Exp", "[", 
   RowBox[{"-", 
    SuperscriptBox["z", "2"]}], "]"}]}]], "Text",
 CellChangeTimes->{{3.758225833725618*^9, 3.758225866218075*^9}, 
   3.758232149539661*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell["The s.m. covers this problem and is helpful.", "Text",
 CellChangeTimes->{{3.7583182801303883`*^9, 3.758318296296565*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"h", "[", "z_", "]"}], "=", 
  RowBox[{"Exp", "[", 
   RowBox[{"-", 
    SuperscriptBox["z", "2"]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.758318421464547*^9, 3.758318422014825*^9}}],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  RowBox[{"-", 
   SuperscriptBox["z", "2"]}]]], "Output",
 CellChangeTimes->{3.758317020805483*^9, 3.7583184228300056`*^9, 
  3.758318561851008*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{
   RowBox[{"h", "[", "z", "]"}], "/.", 
   RowBox[{"z", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{"x", "+", 
      RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.758318432369349*^9, 3.758318466043751*^9}}],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  RowBox[{"-", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"x", "+", 
      RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], "2"]}]]], "Output",
 CellChangeTimes->{3.758318468686907*^9, 3.7583185651382837`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComplexExpand", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.758318699561431*^9, 3.7583187111562557`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["x", "2"]}], "+", 
     SuperscriptBox["y", "2"]}]], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "x", " ", "y"}], "]"}]}], "-", 
  RowBox[{"\[ImaginaryI]", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["x", "2"]}], "+", 
     SuperscriptBox["y", "2"]}]], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", "x", " ", "y"}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.758318704779909*^9, 3.758318712301834*^9}}]
}, Open  ]],

Cell["\<\
First, it is true that the unit circle is a simple closed path enclosed in a \
simply connected domain D. It remains necessary to test analyticity to secure \
Cauchy theorem coverage. \
\>", "Text",
 CellChangeTimes->{{3.758318585464759*^9, 3.7583186230145283`*^9}, {
  3.758319416904606*^9, 3.758319428182539*^9}, {3.7583194890785627`*^9, 
  3.758319513140332*^9}, {3.758319620766448*^9, 3.75831963810485*^9}, {
  3.7583196729948*^9, 3.758319675559917*^9}, {3.7583198509993477`*^9, 
  3.758319859508003*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"u", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["x", "2"]}], "+", 
     SuperscriptBox["y", "2"]}]], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "x", " ", "y"}], "]"}]}]}]], "Input",
 CellChangeTimes->{3.7583187565817833`*^9}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["x", "2"]}], "+", 
    SuperscriptBox["y", "2"]}]], " ", 
  RowBox[{"Cos", "[", 
   RowBox[{"2", " ", "x", " ", "y"}], "]"}]}]], "Output",
 CellChangeTimes->{3.7583187581204844`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"v", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{
   RowBox[{"-", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["x", "2"]}], "+", 
      SuperscriptBox["y", "2"]}]]}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", "x", " ", "y"}], "]"}]}]}]], "Input",
 CellChangeTimes->{3.7583188034925337`*^9, 3.758318936126258*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["x", "2"]}], "+", 
     SuperscriptBox["y", "2"]}]]}], " ", 
  RowBox[{"Sin", "[", 
   RowBox[{"2", " ", "x", " ", "y"}], "]"}]}]], "Output",
 CellChangeTimes->{3.758318805098199*^9, 3.75831893802955*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"u", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", "x"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "2"}], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["x", "2"]}], "+", 
     SuperscriptBox["y", "2"]}]], " ", "x", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "x", " ", "y"}], "]"}]}], "-", 
  RowBox[{"2", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["x", "2"]}], "+", 
     SuperscriptBox["y", "2"]}]], " ", "y", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", "x", " ", "y"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.758318863714271*^9, 3.7583189406188583`*^9},
 Background->RGBColor[0.9, 1, 1]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"v", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", "y"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "2"}], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["x", "2"]}], "+", 
     SuperscriptBox["y", "2"]}]], " ", "x", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "x", " ", "y"}], "]"}]}], "-", 
  RowBox[{"2", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["x", "2"]}], "+", 
     SuperscriptBox["y", "2"]}]], " ", "y", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", "x", " ", "y"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.758318892324066*^9, 3.75831894309816*^9},
 Background->RGBColor[0.9, 1, 1]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"u", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", "y"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "2"}], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["x", "2"]}], "+", 
     SuperscriptBox["y", "2"]}]], " ", "y", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "x", " ", "y"}], "]"}]}], "+", 
  RowBox[{"2", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["x", "2"]}], "+", 
     SuperscriptBox["y", "2"]}]], " ", "x", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", "x", " ", "y"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.758319171800206*^9},
 Background->RGBColor[1, 0.925, 0.925]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"v", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", "x"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "2"}], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["x", "2"]}], "+", 
     SuperscriptBox["y", "2"]}]], " ", "y", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "x", " ", "y"}], "]"}]}], "+", 
  RowBox[{"2", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["x", "2"]}], "+", 
     SuperscriptBox["y", "2"]}]], " ", "x", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", "x", " ", "y"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.758319190418747*^9},
 Background->RGBColor[1, 0.925, 0.925]]
}, Open  ]],

Cell["\<\
Cyan and pink cells match. The function proves to be analytic for all real x \
and y. It meets the requirements of Cauchy\[CloseCurlyQuote]s theorem, and \
therefore the contour integral equals zero.\
\>", "Text",
 CellChangeTimes->{{3.7583192393734837`*^9, 3.758319250843951*^9}, {
  3.75831953561138*^9, 3.7583195738907633`*^9}, {3.7583269454249773`*^9, 
  3.7583269538300734`*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{"11.", "  ", 
   RowBox[{"f", "[", "z_", "]"}]}], "=", 
  FractionBox["1", 
   RowBox[{
    RowBox[{"2", " ", "z"}], "-", "1"}]]}]], "Text",
 CellChangeTimes->{{3.7582258689640007`*^9, 3.7582258908899307`*^9}, 
   3.75823216092338*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"h", "[", "z_", "]"}], "=", 
  FractionBox["1", 
   RowBox[{
    RowBox[{"2", " ", "z"}], "-", "1"}]]}]], "Input",
 CellChangeTimes->{{3.758321755639226*^9, 3.7583217560531683`*^9}}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   RowBox[{"2", " ", "z"}]}]]], "Output",
 CellChangeTimes->{{3.7583217449913692`*^9, 3.758321756750063*^9}, 
   3.758657256839239*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{
   RowBox[{"h", "[", "z", "]"}], "/.", 
   RowBox[{"z", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{"x", "+", 
      RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}]}]}]}]], "Input"],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{"x", "+", 
      RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}]}]}]]], "Output",
 CellChangeTimes->{3.758321770672244*^9, 3.758657259722365*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComplexExpand", "[", "%", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", "x"}]}], ")"}], "2"], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["y", "2"]}]}]]}], "+", 
  FractionBox[
   RowBox[{"2", " ", "x"}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", "x"}]}], ")"}], "2"], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["y", "2"]}]}]], "-", 
  FractionBox[
   RowBox[{"2", " ", "\[ImaginaryI]", " ", "y"}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", "x"}]}], ")"}], "2"], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["y", "2"]}]}]]}]], "Output",
 CellChangeTimes->{3.7583217879521627`*^9, 3.758657263060858*^9}]
}, Open  ]],

Cell["\<\
As with problem 9, it is true that the unit circle is a simple closed path \
enclosed in a simply connected domain D. It remains necessary to test \
analyticity to secure Cauchy theorem coverage.\
\>", "Text",
 CellChangeTimes->{{3.758321950245126*^9, 3.758321954275401*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"u", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "x"}]}], ")"}], "2"], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["y", "2"]}]}]]}], "+", 
   FractionBox[
    RowBox[{"2", " ", "x"}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", "x"}]}], ")"}], "2"], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["y", "2"]}]}]]}]}]], "Input",
 CellChangeTimes->{3.7583218645971203`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", "x"}]}], ")"}], "2"], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["y", "2"]}]}]]}], "+", 
  FractionBox[
   RowBox[{"2", " ", "x"}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", "x"}]}], ")"}], "2"], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["y", "2"]}]}]]}]], "Output",
 CellChangeTimes->{3.758321866183935*^9, 3.758657266395941*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"v", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{"-", 
   FractionBox[
    RowBox[{"2", "  ", "y"}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", "x"}]}], ")"}], "2"], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["y", "2"]}]}]]}]}]], "Input",
 CellChangeTimes->{{3.7583218935802803`*^9, 3.758321899777141*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"2", " ", "y"}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", "x"}]}], ")"}], "2"], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["y", "2"]}]}]]}]], "Output",
 CellChangeTimes->{3.758321900786237*^9, 3.758657269545062*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"u", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", "x"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"4", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"2", " ", "x"}]}], ")"}]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "x"}]}], ")"}], "2"], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["y", "2"]}]}], ")"}], "2"]], "-", 
  FractionBox[
   RowBox[{"8", " ", "x", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"2", " ", "x"}]}], ")"}]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "x"}]}], ")"}], "2"], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["y", "2"]}]}], ")"}], "2"]], "+", 
  FractionBox["2", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", "x"}]}], ")"}], "2"], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["y", "2"]}]}]]}]], "Output",
 CellChangeTimes->{3.758321924244755*^9, 3.758657273386961*^9},
 Background->RGBColor[0.9, 1, 1]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"v", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", "y"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"16", " ", 
    SuperscriptBox["y", "2"]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "x"}]}], ")"}], "2"], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["y", "2"]}]}], ")"}], "2"]], "-", 
  FractionBox["2", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", "x"}]}], ")"}], "2"], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["y", "2"]}]}]]}]], "Output",
 CellChangeTimes->{3.758321974315688*^9, 3.758657276834683*^9},
 Background->RGBColor[0.9, 1, 1]]
}, Open  ]],

Cell[TextData[{
 "The cyan cells are not equal, therefore the function is not analytic, and \
therefore Cauchy\[CloseCurlyQuote]s theorem cannot apply.\nThe s.m. has \
another way to deduce this which is easier: the function becomes \
discontinuous at z=",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", "2"], ",", " "}], TraditionalForm]]],
 "and this is reached inside the unit circle, therefore Cauchy\
\[CloseCurlyQuote]s theorem is unavailable. However, the s.m. goes on to do \
the contour integral."
}], "Text",
 CellChangeTimes->{{3.758322017783243*^9, 3.7583220611488953`*^9}, {
  3.75832405273743*^9, 3.7583241396853228`*^9}}],

Cell[TextData[{
 "The s.m. gets around the problem of discontinuity by using the method of \
deformation of path, an allowable method described on p. 656. Instead of \
allowing z to take on the value of ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    FractionBox["1", "2"],
    FontSize->21], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", a new function, z(t)=",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox[
     FractionBox["1", "2"],
     FontSize->21], "+", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", "t"}]]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is substituted, moving the unit circle away from the discontinuous point."
}], "Text",
 CellChangeTimes->{{3.758325342557066*^9, 3.758325384626375*^9}, {
  3.758325450609617*^9, 3.758325538173093*^9}, {3.758326388515024*^9, 
  3.758326403839951*^9}, {3.758326442110647*^9, 3.758326445163879*^9}}],

Cell["\<\
Note: The cells below in cyan do not apply directly to the problem, being \
only feel-good extra steps.\
\>", "Text",
 CellChangeTimes->{{3.75838283270516*^9, 3.7583829048633337`*^9}, {
  3.758398339832528*^9, 3.758398344269943*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Re", "[", 
        RowBox[{
         FractionBox["1", "2"], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", "t"}]]}], "]"}], ",", 
       RowBox[{"Im", "[", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "t"}]], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Re", "[", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "t"}]], "]"}], ",", 
       RowBox[{"Im", "[", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "t"}]], "]"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "150"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Re\>\"", ",", "\"\<Im\>\""}], "}"}]}], ",", 
   RowBox[{"Epilog", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"0.25", ",", "0.968246"}], "}"}], "]"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.758324341537964*^9, 3.758324378221484*^9}, {
   3.758324449037079*^9, 3.758324642068673*^9}, {3.7583247098764143`*^9, 
   3.758324711794779*^9}, {3.758325050369183*^9, 3.758325076974123*^9}, 
   3.758326585681806*^9, {3.758378610467485*^9, 3.758378699820003*^9}, {
   3.758380079159643*^9, 3.758380092910921*^9}, {3.7586572457335367`*^9, 
   3.758657246838141*^9}},
 Background->RGBColor[0.9, 1, 1]],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
i3ZTQDuz/66fXj/2vzO4debFFLhyTPzVP9uPc78kO8Xcp0CXZ06kSKYfjW50
nf8VNgVDKRJxest96P61se1EzRQknJ+fORfUh7Z93GwlUtNwhqh1CqnqxY5Y
rUM6MtPAI15YG4a9qLN4arJVfhoKBMMUg1N6UXTXymXKiWmI30lceRXYi+6l
C3t+609Dnd8OXe6bvZjHt9GtyWkanLz6b65a6EGRoM+h+o3TcDPRKCJ3Vw8e
+LL1lEDbNJwo3i83yd+DahMK6S2Uaaiq27labE0PZp72WKXVPw2+SRKudsxu
vPabtp9vfhp0ZNbI9WV347pbl4KWhWeA3vxNrPdiN3q8/9Z/89YMJL3X5nFy
YqCG20s1vDMDR+N3qorZMrAprfb8FusZUKziEyu6yUAuoUfXs+1mYKLRb2JG
nYE/tfsMOt7MwEnWXQkpfgZ2OJtXPf0+A3q5tZSCGDoGlzeaSQ3PgFLmE+Xi
TzTcfNjWip05A/aLsrLeL2iopCsu2j4xA6W5TmH6JjTcZ7Tt44v5GSjP61r/
R5qGN1Z2mH1ZMwtq4f9oF39TMf98zCYliVkYOlOwcR2jCz3NvjgOXJ+FsctD
jXJiFHyt3WF7yXQWfvkf3SjESUE2jrtzeGsWOMXvhi8Nd+K+HkjzsJqFSa9T
f+JTOjFDRrBt1n4WjKbWL2af7MTu78d27PGbhWdvL3ZHXu/AQM3XyuMls/D6
5OMjZb5t2NLbU3WgfBbYBFbrPnzUhpu2bTh0t2oWREzEPAQuteHrPkXP5oZZ
OJKi4qq5pQ1PaX44/pQ2C1JNO7xMA1tRrk2RPs0i3XklT/9LC7Zd8D9bspsF
I6E/2t8EN+GNlyqnHaVYsEfy3hWLF024WWGGTX4vC7RjtvOrGjUhnc020UuW
BfJ/La0HhJpQ6lVu4+ZjLLCwXYga/dyIWt/D/PUvsMj+mLJi4lMDzpsr7vj0
iAUpl9q0dn2oQ4/BzYoRdix4cJr3mef9Ohxllb+OecoCrtYjkVM6dagVml4R
+4IFkWEGKzI21eGBWRbFwZUFlA98QQJytSinIJT1wJcF1esKLqw8U429I1R+
8GdB1ZdiPpM11bj99EL4mk8syGnizMyoqMLh/fbnvD+zwNcvckbrQhVe1vcv
exDBApnt1EaJq5Vo6aUq6/CTBZnv3lwJsSjHMELgxvokFpzxWfzoJV2OHqHp
v4KSWWAqV/z1+WgZHhKq6I1OY0FrCK/3SZsyzHw7J+abTa6H8RpJtyd/sK3G
vT+lhAWvA5ei/7mWYN0hb7dVf1jgPF32JuBMCQZWFWrol7FA6oCzgtSaEmxZ
ND3RX8ECvsYimePvivGraUt5Zy0L9j9+fFHqYxG6m3fKrG9nQaPx9qwdwQXY
5vOAcrKDBau4fyruuFyAzY7y6Q86WaBuE31XkK8Anb+V9xd2seAEfY/u8qt8
fLX9ucrebhZkp9bmb2nNQ7mBcOUjPSyIa99JLdEgh4NuRbNTvSy41rYm/27e
b2SLfSBxpp8FWqFZL4K/5WJ2fazrpmEWHGlafBPwMBvp+6pyF0gnK59/yjaQ
hR6f2YW6RliQMJ3yytQwC03lAs75jrFgc9OeT7wnM5Gzao9JyTgLFDdpmWzk
yUDpjoTC1xMs0HuY3nHyZTqqv1A7d3KSfF8vjVLL6TSEazV536dYwPwdH/a9
IxVlftzRU5llQYNV6Hp6dDLSBb/WtpPuqoyvoG1NRi1jPWtrFplP0i90OzyT
UK3OaOPbORYMh0XVOff9xNkmYwHeeRasS4gIvlr5A2vu7T/hTfqq0zp9yeQE
LL/lOv5qgQVmkTJdcS/i0M2p+Pks6TV+hKGx6Xf8FakkdXORBQeMZLfznItF
2RqlXtklFlCNbhTobYrGcRu3KS/SnPyWuqNzX1Hq4juxYdIr7u53cKRG4W5D
7T6vZRac37af7eP3CLRdarfrJJ3r5s+x0SscdZt+SYn+ZcE9HuFZoaFQFLrc
sGBGWuXmTXuutGC0tt08Fk46XUhJedzxMyoEWP9rI71ptH6sWj0Qk+KqDq77
R8ZzhfXhr/wBaLd5p+tR0heqNEof0nzxeabhrBnp3rLYM8pxH3HL5H13d9Lx
/n7l7MMfkD1E/2gsaTnf/qCXTh54k+8fdxFpU6OGy3P8blghcnu5jfTFI31X
LeJeopyQG88wab1Zo4lvTs9wXe1lmCV9WsZR+GHcA1RwbfZaJv1v1beax3Em
+H//L8dpxC8vEZ2c+/8ARssYdQ==
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
WHxm8f8DJChnmQ==
     "]]}},
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Re\"", TraditionalForm], 
    FormBox["\"Im\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    PointSize[0.03], 
    PointBox[{0.25, 0.968246}]},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->150,
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-0.9999998831351729, 1.5}, {-0.9999998592812047, 
   0.9999998782744886}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.758324379442669*^9, 3.7583244516331797`*^9, {3.758324484068637*^9, 
   3.75832449246312*^9}, {3.75832458133429*^9, 3.758324606608869*^9}, 
   3.7583246436468973`*^9, 3.758324712685892*^9, 3.7583250782936*^9, 
   3.758326587609147*^9, {3.758378617201734*^9, 3.7583787005457077`*^9}, {
   3.7583800843489017`*^9, 3.7583800937162848`*^9}, 3.7586572834693413`*^9},
 Background->RGBColor[0.9, 1, 1]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SqrtBox[
      RowBox[{"1", "-", 
       SuperscriptBox["x", "2"]}]], ",", 
     SqrtBox[
      RowBox[{"1", "-", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "-", 
          FractionBox["1", "2"]}], ")"}], "2"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "150"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.758378873267292*^9, 3.7583789830999403`*^9}, {
  3.758379578013528*^9, 3.758379691713395*^9}, {3.758379731111959*^9, 
  3.758379801998538*^9}, {3.758379842237152*^9, 3.7583798903640947`*^9}, {
  3.758380060312202*^9, 3.758380061959591*^9}, {3.758380112638179*^9, 
  3.758380114198263*^9}, {3.758380156365293*^9, 3.758380159524994*^9}},
 Background->RGBColor[0.9, 1, 1]],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwV13c8VX8YB3CkfsrKCD/ZoowooUI9kowoJYmSGaFBGVHKzEj2SOIXUkai
rIR8rSR7XBeX7H3vPQcplfU7/rqv9+t77r1nPN/n+RxxWxdjeyYGBoYARgaG
zc8vluLDGxs4Cr8r496KqcIjUXVDz984cli/Ohj28zUcGTH5RJvH0ZPWKh4B
tgJYSLstbTeLIzJ1poGVqQhybULj+kdxxPEiky9ooQSuSWQwnKPg6E+6SZZw
SBkIj1fcaujC0a3KSZ2ewXKIvobrFtXh6K71DBMTIwJ9qe0lMpU4SjQuS9Fy
rQamKQmJtGIczUoxRQ8Z14DHddPVp69x1Cy7cm5muRYuO39+7xCCI4/7j1to
o1+AR65X+LsvjmB/reb60wZooc4/ueCFo5zRPZkrSl8Bbu2x13Qi/n+LwJLJ
nUbY4xr+r6ABjjREr/serG6C7wdeB0efxNGum9pSjQbNkLhQ9WObBo4ESwol
A0jNsN1tsfWHPI5ibb+tMA61AOZhHtDKgSOp0KGeUVIbZKm64Sf/wZGOiv5F
uzPtYL381KJ8A0OlM7yiG3Xt0O1VrZo1j6F7xS8WqRc7oOzBXqpfF4Yy+dOD
GZU7IcD/5wXlRAy1ikpLGbR3gboWZ01uJIZsM/U+sTF0wxKTjIJ4CIY4g4US
dA50w/UgCxYOLwzZW9xpVIrqBsOQusppcwyFWFmHndMlAV9EjNQLYQz9uu75
4MSrHig0CtB22YUhTQfehbCOHjDidrM7yY4hluQrTE5rPRD6zCSdukpHT6Jb
hpYukmElnV9YY5CO0pRCgwKZemGkNJX3ezIdZew+mX3UoA9yR3K2iArQ0cP6
+vCe1xTQeZUs8YOTjnS3bvd1/EaBcfvwE1//oSP6y7fBtTQKCFFv+ros0xDV
xU2/XWkAon4qriAyDck70FJsKwfAfUfponUCDUWKRE3zNwzCceXa0QxuGvru
vC1ArGwIzn35ksbISkOKa4s7lrqHwM70m5X1Fhoy0n+yNQsfglCvju/CS1Tk
7Vicmyc9DF2VQ/1JPVRkwxtPgbhhcDi10hmZREWSRjUS9odGINJUufa+CBWp
eD6YyV4dge9ebzKMZefQkPf6Xe6bY6Acf6GwV2IOnRTcVfTOcwyeFjDUWuye
Q5djW/vAfww0pi6POrDNocU8VR79xDFIvsAp9gCbRWFSK9R5NAamCl6prwpn
Ud0Bl/4MrnFoG9dPWlKbRUkOz9Jp+eNQdZYekWgwg0CAuyi6ewL+3Lhj5H1y
BlUMrh9i/j4BymE/d1qoz6C2U2Z6rlMTkFu3FicuN4MCGY0uKP2ZgIQjHMl5
O2aQOF8+s5XIJNyUUHxT+20a/dpyR8Du+iQI/nKtwnSn0dkG5pALS5PgkbqE
6WhPIRnD0xMBK1OQGVZg8tJqAp135Hou/m4GcjDZA9eMx5DeG+8oE405mJ9g
Uf18dgT9fUTd6hJKBYsFZX+fgUF0eUpNfjWKBtX+h+mKzYOIbadOukA8DaS4
1czHywfRwdMO8kpJNMCU4ODp5EG0f2UqzCKNBv7u+qP85oOIYvEsKPI9Dd4s
Xz1RRB5AEpZMYY4dNJhfC2ac66Sg5W0HGNfY6fB4R7//pcY+pJLamj3hRwfy
YUYFsU99yCPAPnBXEB2k7WUoMzl9iDliilM7hA4NyFvpfngfQrOpJ5Ij6MDi
ITiecrYP1XQEC8kl0+HJ8BXtMVIvWpl9YzxcSIfo4qFtt0bJaNLQMjtxjA4p
lhPhAX9JaFhr8oO9OgaeaVb9z6gkxOd3Q3zlGAbnxyjS7wZJqK+gzD9SE4Nt
Dp01vVUkZNhYw1dwCgPXW1XL8oEk9C5bIr3XCIOTPkl2vawkdNukPafBDoO5
54bq8sLdSJdLkUnsCQb1A19DT3B0I80nEkHuTzF4KXySbLrRhVwt4rZ9jcTA
JP3oHf/RLlQ6WMXhEIfB52zpLPLrLnTea/DI0xQMoj8y8PgrdCG+co9L3vkY
HO4pnuuBTuS3cv9zfwcGfYJDL94odiL8N/m6UDcG963/OXNPtBPlxHM2WvRg
UEk1LxDY6ECxbvx55H4MNJk23K5UdaBbA7Y7C8Yw0FfUXxvR6EA1DV2liz8w
KOWuEO1za0O6azo1jbw4/E5lD/C+0Ib4nj7lqePDQU3GekLwUBuq/eAnWyGA
A4KtOVcXW9GConR2phAOjTeNlMZdW5HgMVHMYg8OlIZxbexWC+pOf8dgdwiH
tftszsyOTajePoqx0QgHPs1cww79JnRioCPZ8jwOB7bqKabINaFR+oMzP4xx
uBYVuHQI/4YcJFUY+E1xaHr195Gd5ze0jbzvla4FDkktM3G1QY2I3fW28FlH
HJRFvnz2S29AYlv/q1l4hMPZcds0w8AGZMAqzGnoh4NjNkOggH0Dqs+79yjT
H4cXShp67/c1oJKrxXVGQTgw6RZ1DRd8QS20KSwqDIcOl/Tp41X1aP0xeaU0
DocbNQ+51ii1SH7fD+/0NzhwR96rgPJa5Cvr6NGXhUP55Tv2Ac9r0XaW47rs
OTiwLF379I9ZLQpbYHFxfYtDprShDXdPDfJZnOkReo/DYLjgh73t1eiL1zsV
jk84BJrxXnHOr0a1Q61FEuU4yEpxbH0XUY2Yb+1gU6nAwauK0VzJsBopWJUa
XPhMrI91Mt6PRahZisTuWYNDSt7t9Mzgz8h7/V6zyTcc5k7Z/pQ59RlljLgz
6zbhcGT4on7Bls/IbqpT8HAzDj1cxxY++VWiaOtbIztbceC4x3qi/X4Fqpm8
RMrtwMHvRPbIn9ufkGjLfLBXLw5tlBfKvvs/oVnxtLd6fTgIuUeFMtPKkFSm
73u+fhw+vfE8wOlUhr7+53Ylj4LDIuspvz12H1E5JUGt6jsOduRRUaNLJagp
Oxh8xon6qBH/s42/BO3qppzdO4HDuXc2XVXkYnTOzMKkg7BG0GiQgmkx2vvW
UUtoiqgXpdFZ9otFyDJMIP/FDA5PhcXrvvAWodt3De+qzuKwZbtNykNSITqC
Xu9vJzw/PHKWfqEQlS9pPPk7R9RPxEhRi/EHRM/hGzpCx0HTWywiiPsD6jSJ
sawj/PGatYNG13tE+8nZa4ARz0t9RCDv/HvUNOL33hTH4W8XWuFLz0dVJQv/
mCzgYP2kKio+JReluTRepS/hcMbmuBazUC7aenfA6dJPYr8cqVpye5GD4lft
XBBh3qnP5heSs5G+7Z7rYb9w+HrisyR30hskXOrGuvU3DsUCx8j+/G/Q6z86
k5aE0/DK0IXE10hNWPJTKeH7qZX0joRMZHvhiJH1HxwU/lR8jIrLQMrr0aov
/uKwu0PdeYM7A8XfdxybIMySVSHkEpuOspzqQuVXcBg1qfA/G5OGTiQc/VJC
uE1OXblqZxraRb59ZZmw51bP1itiL9G52Cs01VUcZGw8ngmKpKKY0+HrBYSZ
OD1W/wilIK/Dk76zhAcr3W36d79A6f57VsXWcIgWcJdL+vc5siX7TIYRdm5w
i74nkIRaUY5xBeGT7m4/TfmfIeX68fI5wr/a76JduxKQXGaGz8l14nkatkjr
S8UjauIuYWfC4t+kIn1U4pCA/bbVSMKGtX0W4xdjUGOMt0c34dHjSvV8DtGI
R/WfnT8I0z35L8XTIpHtCZnZnRs4aDk9XLLZH46w2WOXdAnfsj1Q13gmDD32
OUqzIpx0ZTxG8XYIGrYeQJ6Ea00SrRMjH6NMs71d4YTpZ/QV1/IDUdCAmORL
wgK6q2t27f5Ihb+58D3hx36WzxOGfZEHvs+/mjDlbr2qnZgP4lrXiGwjfMBe
lnTAxgtNxG6nUAgHX4q+s57ujvqKoq9NEh7Q/8XRMuaKZoVI+zHCNl5lZod0
ndE+zR6Vn4TZrgbFtTXaovJTCT5/Cd8OTEvpjjdFFNZdTOuEdx4a1dtnfRz1
Sl9s2Ni8niw0shZ7DARHL37bdLRYElOYjSmIqfOzbh6fKuenI1NgC37UpPDN
31vUKWaN3O8MU5aU05v/t+egu+OfHlfgKaPobZ5P23GOZrkEdxhtT3q8eb5e
htn7LU28QEOFh3GAsORlrehoHh/Ys1+vYvN6264PLtZ2+cLbQpXizftRqVaR
+7fRH3559lM371fMCZbBuOxAODR6wHbzfjroXWTfH/oY0jmO8j8lrGGUcbzh
egiEdGE77hHmMsVdrHTDQLn07DFrwlMWGum/pcNh9bdJ/ubzrLQL64rZFgFK
0WtX9xMuKosRHLONhoOie7w360FE40hRvnEMhEclTWzWSygaMnigFQu3TqVE
FhK2bJB7yCsRD2e11f/brLdG/a5do1wJYFTStEWb8KFWr/x3jInQU9GZtZsw
C+nLsM7oM2DOlXv7hajfu5duevF0JkGwo+uOJMLfKdxcI9XPQcl5Z7Yj4cJR
Ky3vtBdwrljrP2bCV/E/mW+tXoJxdKDHXmL/XDvaIVK5Nw1MUj42UIn99+8D
yRsZL9Og2JzBNJ9w0Pq3LS5R6bBbMEtBgbD5Vn4VFpdXEFe1+6sAsb/79v21
41l4BSGzfSWNRD8wM/weK+KWCah8KtZz03Gv5pXvvYZh0WL+FqJ/mIkfyLPx
zYLVlWOnLZeJ72vzDNxkzAbKobc5a0Q/MnP8td0rMBuoskO/kglfKqi8HhmS
A9cU9C63E/3L9Ji+ZEXUW2jK+aMlSvQ7srW8cQNXHrzuvMaR/4NYD+L074zL
g/iu+QY1whebe4amn70Db3mujTOLOJiY2ybzphXAIWwi9Mo8Djnln1kO930A
ngvsdG4aMZ8NFdM0/i0EqyxBXz8qDvuG0g5rXS6EIbv3q1Sif2czBjmcGSyE
sWCG8kqiv2frna63GymCQT3a0VPTOGSRyb7RMyVgz3T50OIoUV+OevyJMqXA
qOPocpyw9N9P+S+cS8HacDU+dASHN8Kp39/QSuGDtnQK3zDha3bqn+c/AkfG
o8R/B3F4vYj/mv39CZILav6t6MGhdGdzRLJKOZSLykgskXBoUHizx+BuOTjV
dJnKEZ5xtjDOo5bD83kb7fguHOTHG9/dHqqAy8ux8ufaif7enX7tR91nYGXU
4nJtxMGWIuP06Gs1/LfFQdCImP/OTs+KyZPVoJaaaXOmDAe338wMisw18Nxt
f4f+R6Ie+EYShzVrIFbUUeJYCXG+xon1muU1MM7pmcj+gZj3TUxiW97Vwqks
97iL2TjcqRggh8TWA4urb4BfAg40Lfplp6J6OBZTUrkvnrjfTetDp0n1kHbj
Rn1bLLEf+sWn2fm+gHunsjpvNA6nl68vxz3/ArLBh6uCnuAgcWiJPy2tAX6S
+PpWiHzVnctmXpbfCIvrJQc0HYi8pSTy/Xl7I6yRpoLSrxHz9pOizYP5Rsi4
EZHCYIdDdaOx03GlbzBTReYts8IhbyrJu77kG0hq3xNlMyeuT0IquaOyCcou
bTXUM8BBJfnYwExTC+x6qHiVQ4HIN7+zhQ5SW6Bg9x2DA/LEPLrEa+nN2grn
5LZtOydL5DUe6sh2w1Zg+xo7FCqNw82IpCnZ1lbY6YRzjYgQ89zvx8LN9jZw
Nc2Q2sOJw5Mik6DfTh3ArV3KyIBh8Of5jhc+t7tAwVkrnpZJ5OW85AfhD7ug
JYaFlpWBQWiVrEXy0y7oZP1z3CYNA4Hx08JluV2w0yac1PqCyOfy4S9/THXB
mdtlHyJjMfCoYs10tuqGSuXAlnxfDBbG2N6ZnSOBZaO8jL0ZBrNynEhZiQzs
+AaK2IKBs9qCeqgWGShH7zaEMGBA0+suGzAmg8RuTh3fNTpg9s8KA9zI4Hi+
9J3DMh0WX4q+6SgmQ0w383Z+Kh3+8hyIuHm4F/oEvhxf66QD6+q5K5kafSD+
/ha1P5UO+1til3l0KeArFLiQsZ8OtceMlI1NKZAwUS57SJYOZgWsd6LtKZDH
KLJeLU2HgNigObYgCrwSWHfpEaVDn5nn9601FKh+y+s4ykWsT5rXLasNQO/p
ismgnzToWxeLGlAYhOqVwuof5TQIOFgg/YpvCJo9FePUjtNAVi2Q4fHsCCRT
difdlqVCpS22bDA/BvxW2h7QPAu99NdzzqQJcFjovDdwegbEmp4Xpw5OgHb6
CdfOkzPg/CbiUcfEBDiaOT2r1ZiBVUsPbtWfE8D6cN06UYE4vkNbjZFvEthc
TZy2cM+AY+F42LNLk2BTFuGO907DX09xmXrKJHi/ujOAWU2DEEPqdeHRKXhJ
0btvbzUFYsbTIzKzUxDETLHce2kK9mQevKy6MAWm7Obnxs9Ogbxeg6ER4zQw
88eD/vEp0IjGD/qLTwO1fjKmRWgKropprU7YTMNseshcbt8k/Kc5HZ03Ng0Z
LrWSsQaTIOp/sFx9YgYSQ1b79gpNQD6zU9xn6gxkuQX79HNPgEZo2k34MQO6
lyLWArdPgFkUp+hJpllAZUyudb/GITqVHnhabBaq1LV+z3WMA1N5zhlzi1ng
TXmg2x04DpOL4qOepFkoPDXPWzY+Bu6e5uW/B2bBzaW4w6V/DJj+RsfdHyeO
d76DibSPgQgjg86jxVkQP0zisysfA1POodzHO+cgvCIswD96DBrlkt3jDedA
hCJwfbv6GLy9xs1SWD8HV6Q+1baHjoLp1F1FcssccBc/qLriMwoMjt2mf0lz
0D9lxjLgQqzfiH+tNTkHI69vCRSZjgLTXb6T3Vup0DOpubNBchTMfAUfLelQ
ISYrnf1qxQhsS5ZYUv1GBQPlkKiaqmH4sDtw95VOKvz7vDhNMWMYLFLHtXz7
qdB2P9/uwWNiPS0z5ussFabPb3mca0CsZ0krmu2gQegh53sW5CEoKpZ19jag
wd5y57DCie9g3a40UtFKA6pZiGTd6AAkBPhdv9hDA20Nv+5TtQPQpNKGYYM0
kJAdP5WSMQDKKU5r4jQa5OTqsNbaDgCLU5pg6A46PGXeuDc8QoH3TBwXTXTp
cGPgAffX7n6YLLkySD9Lh1/xOtdVPvSDoFOOXYgpHVgEn+A3IvshqF37brk9
HY4Nlm7s1+sHs5QHUWJBdCj3c7hJLeuDDZXZb7RqOniDZJdFZC8oz6qeD26k
w5lmKXLX9V5wTAnqE+2gg9d3bbYNzV7oYhKbNh6mg5pP4EH3RTK8aTdl/kT0
iT7XCLvX58lw1qn++GM1DFbk5/OiNkgQKMTdIKKFgeRw6pHn3SQoa7c6U6ZP
9B1JB0a1LBJIqK5coRJ96YWxUajqGRL8YlLyPn8PgxCZIuFvcd3wX8rLIuFi
DBq4IqaApQsiv5yci67AIFjiZvOhnk54hE2LMddhwLNDySgkvRMsNQ9EznVi
kJCbG6t6pBNEJqodP+LE7587s2vL1Q7gYLd/KbuMgQZHE0lrTwesq2wnp65j
sJSkmmrS0w5DIedPBrHjkCu8yp4w20bk1zHh83JELhHZvU/1bws8NQk2qVfC
ib04e77NqwV8HsqGH1Yj5tScFRlfagaL9ru/hfWJ996sd8bHJptAyG1L9xwx
p57bRVhIpjcCW0rWdsvbOChdPtGl8k8jrNYbaHZ6ELm7UOClgtNXGOSLf/cx
iPj+0Mknd0QbIKV8T2hQBg7qGzK2B/Xq4Ol4Y9Uy8Z7PVfnK3devFnzYbv10
Juaw4/3SubaCGripwiU/RMzxsCcYdJKqwcKyxPZ8NQ44b4ZFxQACwxDz5/Vf
iZzT7FGRsPAZNN6vtR8mcoKcuvEtm8kKkO9P3/aWjMPQH8Zrf/M/gRCTzjGR
ISJnK5tgZlofgU1uzi1mEoefJSRDk6fFsHohMpeZeI9VhFSFb84fgOajNHpv
M6dlNzWo7XsLg6/J/Js58+Zdkj6fDJE7y/cVZRK5edv7uN8yQoHwPxHy4u8=

     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
+rx7+0+MhvevTPel0bV6JrVRvQ4W7Mka+8Np2GsPbLmvVwfLEEnppxE0evfU
pjeb1WGWQU9R7RsagtMvP91yqYOj2aYMkygav8KVYqpS61B2Xe77qlgaYzLr
/R206rHyRnmu5ycanoulJfL06zE9R0wrJIXGn/VDd2XM67Fl6++Hmak0/hqn
e2VeqUdBkKCo/zONSfd1XcUz6/FOeOj5jiwakn/2W0bpNOAB0yH71jcafhIb
GoRGDXg3/6iEdwENKfk5h/ZaN+Cg9zmt64Vk/JqNJr+uN+DUtJR1F7/TkHWy
1dOlGsC6cCFscxkNBf6llcztjQh76Rx2robGmvInQhn9JvCzd9mu55D13bpv
o9nhJtxziAtlE5t/kLwUeLoJCdn1k325NG49ud0943YTvilMNmG30Ggwd2dN
zW/Cx6hSpiOfPG+z+CbUboZpsscfrS6y3kfmimgaNuNzeSyvmDixuEbH1aIZ
dbvNh450k/fj937uv9yMVLcnQU49JB/nrbFdqc1ofDVv2LePPP+rHNC8lonN
wl0j9gNk/ZxYZfLbmFCvUgtnE0/ivRY3N2Zi4sw/1/2/yPuF0rcY55n45O3/
bu0gycd3ituP90yIh/is+jlE8pnIS5ZMZ+Jmub+O9jDJx/G6wOA7E85dM66F
EjeYjpwtamNiu3eiz7EREm9e51FqMQu6afhSKiTz8yDq5YQaC0aSWZqLRsn8
jNswtmxnQcdsFd+N+Ba70Tj9OAsPti0skf9N4kWV6SaHsPCqmZm9d4zkP/f+
dTqehQsanolPx/6/3jsz12SxcMftSnkj8ZrzORviGllo30A9txkn8dQ+qETO
ZSNgSsZh8z80/B/N+/psGRvpIzfCA4lf9Xhb393IRlqr9MrvxB+iDz6zM2Oj
fVHx37UTNDIn5a6ztGVD323M0Ia46PjyMiMnNlq/KzQEEDPlx0TXPyLnrP7+
tC7iDveToYtC2bi92mmq7F9S37Xlm2QS2Ii5FvpCh3j6o/CLIyVspCZqX7tP
LNsjLtnZwIbs2OeqeGLlPc4xjR1sBPpZnPlBrDlpFyt7KgfztJYfkvxHY/vx
pCtJshzkX7JKWk5slC0nG7GEgyKt8j16xOby3h8eq3Pg3Xp1qSXxSfduQ5/t
HKy667Ddmdix9kC7634Oqjuiwu8RX12f433mOAd295YjmPiOv4qiuSOJFyRU
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
9Wuf2d7G/wByvmBd
     "]]}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->150,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-1, 2}, {0., 0.9999999733580154}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7583789298742647`*^9, {3.758378976050828*^9, 3.75837898426095*^9}, {
   3.758379643369503*^9, 3.758379692580811*^9}, {3.7583797338859653`*^9, 
   3.758379777689777*^9}, {3.758379844107204*^9, 3.758379891121182*^9}, 
   3.7583801149046593`*^9, 3.758380161295981*^9},
 Background->RGBColor[0.9, 1, 1]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SqrtBox[
      RowBox[{"1", "-", 
       SuperscriptBox["x", "2"]}]], "-", 
     SqrtBox[
      RowBox[{"1", "-", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "-", 
          FractionBox["1", "2"]}], ")"}], "2"]}]]}], "\[Equal]", "0"}], ",", 
   "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.758379913258418*^9, 3.758379947282256*^9}, {
  3.7583802411551447`*^9, 3.758380244578459*^9}},
 Background->RGBColor[0.9, 1, 1]],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "ifun"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Inverse functions are being used by \
\[NoBreak]\\!\\(\\*RowBox[{\\\"Solve\\\"}]\\)\[NoBreak], so some solutions \
may not be found; use Reduce for complete solution information. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Solve/ifun\\\", \
ButtonNote -> \\\"Solve::ifun\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.758379948365766*^9, 3.758380164336524*^9, 
  3.7583802459147587`*^9},
 Background->RGBColor[0.9, 1, 1]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    FractionBox["1", "4"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.7583799483720407`*^9, 3.758380164345093*^9, 
  3.7583802459237013`*^9},
 Background->RGBColor[0.9, 1, 1]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  SqrtBox[
   RowBox[{"1", "-", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["1", "4"], ")"}], "2"]}]], "]"}]], "Input",
 CellChangeTimes->{{3.7583800082819767`*^9, 3.758380045055682*^9}},
 Background->RGBColor[0.9, 1, 1]],

Cell[BoxData["0.9682458365518543`"], "Output",
 CellChangeTimes->{3.7583800465606527`*^9, 3.758380166898288*^9, 
  3.7583802538597183`*^9},
 Background->RGBColor[0.9, 1, 1]]
}, Open  ]],

Cell["With the new z, the s.m. achieves the following", "Text",
 CellChangeTimes->{{3.758325584915303*^9, 3.758325630841435*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "z_", "]"}], "=", 
  RowBox[{
   RowBox[{"h", "[", "z", "]"}], "/.", 
   RowBox[{"z", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      FractionBox["1", "2"], "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "t"}]]}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.758323444439309*^9, 3.758323481028453*^9}}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox["1", "2"], "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "t"}]]}], ")"}]}]}]]], "Output",
 CellChangeTimes->{3.758323544124115*^9}]
}, Open  ]],

Cell["\<\
Now comes an important addition to the procedure. This is use of numbered \
line (10) on page 647:\
\>", "Text",
 CellChangeTimes->{{3.758325639793453*^9, 3.758325671768252*^9}, {
  3.758325761534783*^9, 3.758325784988491*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[Integral]", "C"], 
   RowBox[{
    RowBox[{"f", "[", "z", "]"}], 
    RowBox[{"\[DifferentialD]", "z"}]}]}], "=", 
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[Integral]", "a", "b"], 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"z", "[", "t", "]"}], "]"}], 
     RowBox[{
      OverscriptBox["z", "\[CenterDot]"], "[", "t", "]"}], 
     RowBox[{"\[DifferentialD]", "t"}], "  ", "where", " ", 
     RowBox[{
      OverscriptBox["z", "\[CenterDot]"], "[", "t", "]"}]}]}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"z", "[", "t", "]"}], ",", "t"}], "]"}]}]}]], "Text",
 CellChangeTimes->{{3.758325798815937*^9, 3.758325869459241*^9}, {
  3.758326024318289*^9, 3.758326172202553*^9}}],

Cell["\<\
Incorporating the derivative of z into the contour integral. This derivative,\
\
\>", "Text",
 CellChangeTimes->{{3.758326197887512*^9, 3.758326224885557*^9}, {
  3.758326259364483*^9, 3.758326262580366*^9}, {3.758326501876565*^9, 
  3.758326529491294*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], "+", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", "t"}]]}], ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.7583262851221657`*^9, 3.758326305308895*^9}}],

Cell[BoxData[
 RowBox[{"\[ImaginaryI]", " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"\[ImaginaryI]", " ", "t"}]]}]], "Output",
 CellChangeTimes->{3.7583263059982243`*^9}]
}, Open  ]],

Cell["turns the expression into", "Text",
 CellChangeTimes->{{3.7583263141385403`*^9, 3.7583263178345757`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"\[ImaginaryI]", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "t"}]]}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", "2"], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "t"}]]}], ")"}]}]}]], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.75832349604034*^9, 3.758323520331134*^9}, {
  3.758323662906156*^9, 3.758323754386737*^9}, {3.758323785245846*^9, 
  3.758323805496973*^9}}],

Cell[BoxData[
 RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}]], "Output",
 CellChangeTimes->{3.758323807388001*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["Matching the answer in the text.", "Text",
 CellChangeTimes->{{3.758326338345829*^9, 3.758326343305685*^9}}],

Cell["\<\
Integrating around the unit circle, it doesn\[CloseCurlyQuote]t matter where \
to start and finish, so the above green answer is valid. However, it feels a \
little better to make the shared point between original and new unit circles \
the start/end point.\
\>", "Text",
 CellChangeTimes->{{3.7583824222940474`*^9, 3.7583824560918694`*^9}, {
  3.7583825934879847`*^9, 3.758382637390823*^9}},
 Background->RGBColor[0.9, 1, 1]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"z", "=", 
  RowBox[{"0.25", "+", 
   RowBox[{"\[ImaginaryI]", " ", "0.9682458365518543`"}]}]}]], "Input",
 CellChangeTimes->{{3.758380783783388*^9, 3.758380817163846*^9}},
 Background->RGBColor[0.9, 1, 1]],

Cell[BoxData[
 RowBox[{"0.25`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.9682458365518543`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.758381047948721*^9},
 Background->RGBColor[0.9, 1, 1]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArcTan", "[", 
  RowBox[{"0.9682458365518543`", "/", "0.25"}], "]"}]], "Input",
 CellChangeTimes->{{3.7583815532111597`*^9, 3.758381574245202*^9}},
 Background->RGBColor[0.9, 1, 1]],

Cell[BoxData["1.318116071652818`"], "Output",
 CellChangeTimes->{3.758381575089279*^9},
 Background->RGBColor[0.9, 1, 1]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"\[ImaginaryI]", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "t"}]]}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", "2"], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "t"}]]}], ")"}]}]}]], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1.318116071652818`"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.758381649981895*^9, 3.758381661458302*^9}, {
  3.75838179540911*^9, 3.758381803174815*^9}},
 Background->RGBColor[0.9, 1, 1]],

Cell[BoxData[
 RowBox[{"0.`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.659058035826409`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.758381663234125*^9, 3.758381804772647*^9},
 Background->RGBColor[0.9, 1, 1]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"\[ImaginaryI]", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "t"}]]}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", "2"], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "t"}]]}], ")"}]}]}]], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "1.318116071652818`", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.758381983547176*^9, 3.758381992505986*^9}, 
   3.758382264381297*^9},
 Background->RGBColor[0.9, 1, 1]],

Cell[BoxData[
 RowBox[{"0.`", "\[VeryThinSpace]", "+", 
  RowBox[{"2.4825346177633842`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.758381994248377*^9, 3.758382266361618*^9},
 Background->RGBColor[0.9, 1, 1]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"0.659058035826409`", " ", "\[ImaginaryI]"}], "+", 
  RowBox[{"2.4825346177633842`", " ", "\[ImaginaryI]"}]}]], "Input",
 CellChangeTimes->{{3.758382301401721*^9, 3.758382308314756*^9}},
 Background->RGBColor[0.9, 1, 1]],

Cell[BoxData[
 RowBox[{"0.`", "\[VeryThinSpace]", "+", 
  RowBox[{"3.141592653589793`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.758382310250959*^9},
 Background->RGBColor[0.9, 1, 1]]
}, Open  ]],

Cell["\<\
Repeating the answer obtained when integrating from 0 to 2 \[Pi].\
\>", "Text",
 CellChangeTimes->{{3.758382688342475*^9, 3.7583827099087*^9}},
 Background->RGBColor[0.9, 1, 1]],

Cell[BoxData[
 RowBox[{
  RowBox[{"13.", "  ", 
   RowBox[{"f", "[", "z_", "]"}]}], "=", 
  FractionBox["1", 
   RowBox[{
    SuperscriptBox["z", "4"], "-", "1.1"}]]}]], "Text",
 CellChangeTimes->{{3.758225897283511*^9, 3.758225932265161*^9}, 
   3.758232172051062*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"h", "[", "z_", "]"}], "=", 
  FractionBox["1", 
   RowBox[{
    SuperscriptBox["z", "4"], "-", "1.1"}]]}]], "Input",
 CellChangeTimes->{{3.758327246747541*^9, 3.758327250704165*^9}}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{
   RowBox[{"-", "1.1`"}], "+", 
   SuperscriptBox["z", "4"]}]]], "Output",
 CellChangeTimes->{3.75832725166018*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{
   RowBox[{"h", "[", "z", "]"}], "/.", 
   RowBox[{"z", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{"x", "+", 
      RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}]}]}]}]], "Input"],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{
   RowBox[{"-", "1.1`"}], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"x", "+", 
      RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], "4"]}]]], "Output",
 CellChangeTimes->{3.758327283293923*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComplexExpand", "[", "%", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1.1`", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4", " ", 
         SuperscriptBox["x", "3"], " ", "y"}], "-", 
        RowBox[{"4", " ", "x", " ", 
         SuperscriptBox["y", "3"]}]}], ")"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1.1`"}], "+", 
        SuperscriptBox["x", "4"], "-", 
        RowBox[{"6", " ", 
         SuperscriptBox["x", "2"], " ", 
         SuperscriptBox["y", "2"]}], "+", 
        SuperscriptBox["y", "4"]}], ")"}], "2"]}]]}], "+", 
  FractionBox[
   SuperscriptBox["x", "4"], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"4", " ", 
        SuperscriptBox["x", "3"], " ", "y"}], "-", 
       RowBox[{"4", " ", "x", " ", 
        SuperscriptBox["y", "3"]}]}], ")"}], "2"], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.1`"}], "+", 
       SuperscriptBox["x", "4"], "-", 
       RowBox[{"6", " ", 
        SuperscriptBox["x", "2"], " ", 
        SuperscriptBox["y", "2"]}], "+", 
       SuperscriptBox["y", "4"]}], ")"}], "2"]}]], "-", 
  FractionBox[
   RowBox[{"6", " ", 
    SuperscriptBox["x", "2"], " ", 
    SuperscriptBox["y", "2"]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"4", " ", 
        SuperscriptBox["x", "3"], " ", "y"}], "-", 
       RowBox[{"4", " ", "x", " ", 
        SuperscriptBox["y", "3"]}]}], ")"}], "2"], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.1`"}], "+", 
       SuperscriptBox["x", "4"], "-", 
       RowBox[{"6", " ", 
        SuperscriptBox["x", "2"], " ", 
        SuperscriptBox["y", "2"]}], "+", 
       SuperscriptBox["y", "4"]}], ")"}], "2"]}]], "+", 
  FractionBox[
   SuperscriptBox["y", "4"], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"4", " ", 
        SuperscriptBox["x", "3"], " ", "y"}], "-", 
       RowBox[{"4", " ", "x", " ", 
        SuperscriptBox["y", "3"]}]}], ")"}], "2"], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.1`"}], "+", 
       SuperscriptBox["x", "4"], "-", 
       RowBox[{"6", " ", 
        SuperscriptBox["x", "2"], " ", 
        SuperscriptBox["y", "2"]}], "+", 
       SuperscriptBox["y", "4"]}], ")"}], "2"]}]], "+", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"4", " ", 
        SuperscriptBox["x", "3"], " ", "y"}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", 
            SuperscriptBox["x", "3"], " ", "y"}], "-", 
           RowBox[{"4", " ", "x", " ", 
            SuperscriptBox["y", "3"]}]}], ")"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.1`"}], "+", 
           SuperscriptBox["x", "4"], "-", 
           RowBox[{"6", " ", 
            SuperscriptBox["x", "2"], " ", 
            SuperscriptBox["y", "2"]}], "+", 
           SuperscriptBox["y", "4"]}], ")"}], "2"]}]]}], "+", 
     FractionBox[
      RowBox[{"4", " ", "x", " ", 
       SuperscriptBox["y", "3"]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", 
           SuperscriptBox["x", "3"], " ", "y"}], "-", 
          RowBox[{"4", " ", "x", " ", 
           SuperscriptBox["y", "3"]}]}], ")"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.1`"}], "+", 
          SuperscriptBox["x", "4"], "-", 
          RowBox[{"6", " ", 
           SuperscriptBox["x", "2"], " ", 
           SuperscriptBox["y", "2"]}], "+", 
          SuperscriptBox["y", "4"]}], ")"}], "2"]}]]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.758327327215114*^9}]
}, Open  ]],

Cell["\<\
Working here with a somewhat unruly looking thing. It remains necessary to \
test analyticity to secure Cauchy theorem coverage. \
\>", "Text",
 CellChangeTimes->{{3.758327375213632*^9, 3.7583274174568787`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"u", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["1.1`", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", " ", 
          SuperscriptBox["x", "3"], " ", "y"}], "-", 
         RowBox[{"4", " ", "x", " ", 
          SuperscriptBox["y", "3"]}]}], ")"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.1`"}], "+", 
         SuperscriptBox["x", "4"], "-", 
         RowBox[{"6", " ", 
          SuperscriptBox["x", "2"], " ", 
          SuperscriptBox["y", "2"]}], "+", 
         SuperscriptBox["y", "4"]}], ")"}], "2"]}]]}], "+", 
   FractionBox[
    SuperscriptBox["x", "4"], 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4", " ", 
         SuperscriptBox["x", "3"], " ", "y"}], "-", 
        RowBox[{"4", " ", "x", " ", 
         SuperscriptBox["y", "3"]}]}], ")"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1.1`"}], "+", 
        SuperscriptBox["x", "4"], "-", 
        RowBox[{"6", " ", 
         SuperscriptBox["x", "2"], " ", 
         SuperscriptBox["y", "2"]}], "+", 
        SuperscriptBox["y", "4"]}], ")"}], "2"]}]], "-", 
   FractionBox[
    RowBox[{"6", " ", 
     SuperscriptBox["x", "2"], " ", 
     SuperscriptBox["y", "2"]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4", " ", 
         SuperscriptBox["x", "3"], " ", "y"}], "-", 
        RowBox[{"4", " ", "x", " ", 
         SuperscriptBox["y", "3"]}]}], ")"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1.1`"}], "+", 
        SuperscriptBox["x", "4"], "-", 
        RowBox[{"6", " ", 
         SuperscriptBox["x", "2"], " ", 
         SuperscriptBox["y", "2"]}], "+", 
        SuperscriptBox["y", "4"]}], ")"}], "2"]}]], "+", 
   FractionBox[
    SuperscriptBox["y", "4"], 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4", " ", 
         SuperscriptBox["x", "3"], " ", "y"}], "-", 
        RowBox[{"4", " ", "x", " ", 
         SuperscriptBox["y", "3"]}]}], ")"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1.1`"}], "+", 
        SuperscriptBox["x", "4"], "-", 
        RowBox[{"6", " ", 
         SuperscriptBox["x", "2"], " ", 
         SuperscriptBox["y", "2"]}], "+", 
        SuperscriptBox["y", "4"]}], ")"}], "2"]}]]}]}]], "Input",
 CellChangeTimes->{3.758327530232299*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1.1`", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4", " ", 
         SuperscriptBox["x", "3"], " ", "y"}], "-", 
        RowBox[{"4", " ", "x", " ", 
         SuperscriptBox["y", "3"]}]}], ")"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1.1`"}], "+", 
        SuperscriptBox["x", "4"], "-", 
        RowBox[{"6", " ", 
         SuperscriptBox["x", "2"], " ", 
         SuperscriptBox["y", "2"]}], "+", 
        SuperscriptBox["y", "4"]}], ")"}], "2"]}]]}], "+", 
  FractionBox[
   SuperscriptBox["x", "4"], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"4", " ", 
        SuperscriptBox["x", "3"], " ", "y"}], "-", 
       RowBox[{"4", " ", "x", " ", 
        SuperscriptBox["y", "3"]}]}], ")"}], "2"], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.1`"}], "+", 
       SuperscriptBox["x", "4"], "-", 
       RowBox[{"6", " ", 
        SuperscriptBox["x", "2"], " ", 
        SuperscriptBox["y", "2"]}], "+", 
       SuperscriptBox["y", "4"]}], ")"}], "2"]}]], "-", 
  FractionBox[
   RowBox[{"6", " ", 
    SuperscriptBox["x", "2"], " ", 
    SuperscriptBox["y", "2"]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"4", " ", 
        SuperscriptBox["x", "3"], " ", "y"}], "-", 
       RowBox[{"4", " ", "x", " ", 
        SuperscriptBox["y", "3"]}]}], ")"}], "2"], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.1`"}], "+", 
       SuperscriptBox["x", "4"], "-", 
       RowBox[{"6", " ", 
        SuperscriptBox["x", "2"], " ", 
        SuperscriptBox["y", "2"]}], "+", 
       SuperscriptBox["y", "4"]}], ")"}], "2"]}]], "+", 
  FractionBox[
   SuperscriptBox["y", "4"], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"4", " ", 
        SuperscriptBox["x", "3"], " ", "y"}], "-", 
       RowBox[{"4", " ", "x", " ", 
        SuperscriptBox["y", "3"]}]}], ")"}], "2"], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.1`"}], "+", 
       SuperscriptBox["x", "4"], "-", 
       RowBox[{"6", " ", 
        SuperscriptBox["x", "2"], " ", 
        SuperscriptBox["y", "2"]}], "+", 
       SuperscriptBox["y", "4"]}], ")"}], "2"]}]]}]], "Output",
 CellChangeTimes->{3.758327535004547*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"v", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"4", " ", 
      SuperscriptBox["x", "3"], " ", "y"}], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", " ", 
          SuperscriptBox["x", "3"], " ", "y"}], "-", 
         RowBox[{"4", " ", "x", " ", 
          SuperscriptBox["y", "3"]}]}], ")"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.1`"}], "+", 
         SuperscriptBox["x", "4"], "-", 
         RowBox[{"6", " ", 
          SuperscriptBox["x", "2"], " ", 
          SuperscriptBox["y", "2"]}], "+", 
         SuperscriptBox["y", "4"]}], ")"}], "2"]}]]}], "+", 
   FractionBox[
    RowBox[{"4", " ", "x", " ", 
     SuperscriptBox["y", "3"]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4", " ", 
         SuperscriptBox["x", "3"], " ", "y"}], "-", 
        RowBox[{"4", " ", "x", " ", 
         SuperscriptBox["y", "3"]}]}], ")"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1.1`"}], "+", 
        SuperscriptBox["x", "4"], "-", 
        RowBox[{"6", " ", 
         SuperscriptBox["x", "2"], " ", 
         SuperscriptBox["y", "2"]}], "+", 
        SuperscriptBox["y", "4"]}], ")"}], "2"]}]]}]}]], "Input",
 CellChangeTimes->{3.7583276126365557`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"4", " ", 
     SuperscriptBox["x", "3"], " ", "y"}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4", " ", 
         SuperscriptBox["x", "3"], " ", "y"}], "-", 
        RowBox[{"4", " ", "x", " ", 
         SuperscriptBox["y", "3"]}]}], ")"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1.1`"}], "+", 
        SuperscriptBox["x", "4"], "-", 
        RowBox[{"6", " ", 
         SuperscriptBox["x", "2"], " ", 
         SuperscriptBox["y", "2"]}], "+", 
        SuperscriptBox["y", "4"]}], ")"}], "2"]}]]}], "+", 
  FractionBox[
   RowBox[{"4", " ", "x", " ", 
    SuperscriptBox["y", "3"]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"4", " ", 
        SuperscriptBox["x", "3"], " ", "y"}], "-", 
       RowBox[{"4", " ", "x", " ", 
        SuperscriptBox["y", "3"]}]}], ")"}], "2"], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.1`"}], "+", 
       SuperscriptBox["x", "4"], "-", 
       RowBox[{"6", " ", 
        SuperscriptBox["x", "2"], " ", 
        SuperscriptBox["y", "2"]}], "+", 
       SuperscriptBox["y", "4"]}], ")"}], "2"]}]]}]], "Output",
 CellChangeTimes->{3.758327614528788*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"u", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", "x"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{3.758327903775188*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.7583277812630177`*^9, 3.758327786531311*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"x", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "4.`"}], " ", 
       SuperscriptBox["x", "10"]}], "+", 
      RowBox[{"28.`", " ", 
       SuperscriptBox["x", "8"], " ", 
       SuperscriptBox["y", "2"]}], "+", 
      RowBox[{
       SuperscriptBox["x", "4"], " ", 
       SuperscriptBox["y", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"26.400000000000006`", "\[VeryThinSpace]", "+", 
         RowBox[{"56.`", " ", 
          SuperscriptBox["y", "4"]}]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox["x", "6"], " ", 
       RowBox[{"(", 
        RowBox[{"8.8`", "\[VeryThinSpace]", "+", 
         RowBox[{"88.`", " ", 
          SuperscriptBox["y", "4"]}]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox["y", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"14.520000000000003`", "\[VeryThinSpace]", "+", 
         RowBox[{"8.8`", " ", 
          SuperscriptBox["y", "4"]}], "-", 
         RowBox[{"20.`", " ", 
          SuperscriptBox["y", "8"]}]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox["x", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "4.840000000000001`"}], "+", 
         RowBox[{"26.400000000000006`", " ", 
          SuperscriptBox["y", "4"]}], "-", 
         RowBox[{"20.`", " ", 
          SuperscriptBox["y", "8"]}]}], ")"}]}]}], ")"}]}], ")"}], "/", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1.2100000000000002`", "\[VeryThinSpace]", "+", 
     SuperscriptBox["x", "8"], "+", 
     RowBox[{"4.`", " ", 
      SuperscriptBox["x", "6"], " ", 
      SuperscriptBox["y", "2"]}], "-", 
     RowBox[{"2.2`", " ", 
      SuperscriptBox["y", "4"]}], "+", 
     SuperscriptBox["y", "8"], "+", 
     RowBox[{
      SuperscriptBox["x", "2"], " ", 
      SuperscriptBox["y", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"13.200000000000001`", "\[VeryThinSpace]", "+", 
        RowBox[{"4.`", " ", 
         SuperscriptBox["y", "4"]}]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["x", "4"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2.2`"}], "+", 
        RowBox[{"6.`", " ", 
         SuperscriptBox["y", "4"]}]}], ")"}]}]}], ")"}], "2"]}]], "Output",
 CellChangeTimes->{3.75832778737353*^9},
 Background->RGBColor[0.9, 1, 1]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"v", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", "y"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{3.7583279097570868`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.758327805925264*^9, 3.758327817346088*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"x", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "4.`"}], " ", 
       SuperscriptBox["x", "10"]}], "+", 
      RowBox[{"28.`", " ", 
       SuperscriptBox["x", "8"], " ", 
       SuperscriptBox["y", "2"]}], "+", 
      RowBox[{
       SuperscriptBox["x", "4"], " ", 
       SuperscriptBox["y", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"26.400000000000006`", "\[VeryThinSpace]", "+", 
         RowBox[{"56.`", " ", 
          SuperscriptBox["y", "4"]}]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox["x", "6"], " ", 
       RowBox[{"(", 
        RowBox[{"8.8`", "\[VeryThinSpace]", "+", 
         RowBox[{"88.`", " ", 
          SuperscriptBox["y", "4"]}]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox["y", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"14.520000000000003`", "\[VeryThinSpace]", "+", 
         RowBox[{"8.8`", " ", 
          SuperscriptBox["y", "4"]}], "-", 
         RowBox[{"20.`", " ", 
          SuperscriptBox["y", "8"]}]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox["x", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "4.840000000000001`"}], "+", 
         RowBox[{"26.400000000000006`", " ", 
          SuperscriptBox["y", "4"]}], "-", 
         RowBox[{"20.`", " ", 
          SuperscriptBox["y", "8"]}]}], ")"}]}]}], ")"}]}], ")"}], "/", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1.2100000000000002`", "\[VeryThinSpace]", "+", 
     SuperscriptBox["x", "8"], "+", 
     RowBox[{"4.`", " ", 
      SuperscriptBox["x", "6"], " ", 
      SuperscriptBox["y", "2"]}], "-", 
     RowBox[{"2.2`", " ", 
      SuperscriptBox["y", "4"]}], "+", 
     SuperscriptBox["y", "8"], "+", 
     RowBox[{
      SuperscriptBox["x", "2"], " ", 
      SuperscriptBox["y", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"13.200000000000001`", "\[VeryThinSpace]", "+", 
        RowBox[{"4.`", " ", 
         SuperscriptBox["y", "4"]}]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["x", "4"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2.2`"}], "+", 
        RowBox[{"6.`", " ", 
         SuperscriptBox["y", "4"]}]}], ")"}]}]}], ")"}], "2"]}]], "Output",
 CellChangeTimes->{3.75832781902045*^9},
 Background->RGBColor[0.9, 1, 1]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"u", "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", "y"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{3.758327959299767*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "%", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"y", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"20.`", " ", 
       SuperscriptBox["x", "10"]}], "+", 
      RowBox[{"20.`", " ", 
       SuperscriptBox["x", "8"], " ", 
       SuperscriptBox["y", "2"]}], "+", 
      RowBox[{
       SuperscriptBox["x", "4"], " ", 
       SuperscriptBox["y", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "26.400000000000006`"}], "-", 
         RowBox[{"88.`", " ", 
          SuperscriptBox["y", "4"]}]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox["x", "6"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "8.8`"}], "-", 
         RowBox[{"56.`", " ", 
          SuperscriptBox["y", "4"]}]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox["x", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "14.520000000000003`"}], "-", 
         RowBox[{"26.400000000000006`", " ", 
          SuperscriptBox["y", "4"]}], "-", 
         RowBox[{"28.`", " ", 
          SuperscriptBox["y", "8"]}]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox["y", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"4.840000000000001`", "\[VeryThinSpace]", "-", 
         RowBox[{"8.8`", " ", 
          SuperscriptBox["y", "4"]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox["y", "8"]}]}], ")"}]}]}], ")"}]}], ")"}], "/", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1.2100000000000002`", "\[VeryThinSpace]", "+", 
     SuperscriptBox["x", "8"], "+", 
     RowBox[{"4.`", " ", 
      SuperscriptBox["x", "6"], " ", 
      SuperscriptBox["y", "2"]}], "-", 
     RowBox[{"2.2`", " ", 
      SuperscriptBox["y", "4"]}], "+", 
     SuperscriptBox["y", "8"], "+", 
     RowBox[{
      SuperscriptBox["x", "2"], " ", 
      SuperscriptBox["y", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"13.200000000000001`", "\[VeryThinSpace]", "+", 
        RowBox[{"4.`", " ", 
         SuperscriptBox["y", "4"]}]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["x", "4"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2.2`"}], "+", 
        RowBox[{"6.`", " ", 
         SuperscriptBox["y", "4"]}]}], ")"}]}]}], ")"}], "2"]}]], "Output",
 CellChangeTimes->{3.758327975001581*^9},
 Background->RGBColor[1, 0.925, 0.925]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"v", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", "x"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{3.758328011721602*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "%", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"y", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"20.`", " ", 
       SuperscriptBox["x", "10"]}], "+", 
      RowBox[{"20.`", " ", 
       SuperscriptBox["x", "8"], " ", 
       SuperscriptBox["y", "2"]}], "+", 
      RowBox[{
       SuperscriptBox["x", "4"], " ", 
       SuperscriptBox["y", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "26.400000000000006`"}], "-", 
         RowBox[{"88.`", " ", 
          SuperscriptBox["y", "4"]}]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox["x", "6"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "8.8`"}], "-", 
         RowBox[{"56.`", " ", 
          SuperscriptBox["y", "4"]}]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox["x", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "14.520000000000003`"}], "-", 
         RowBox[{"26.400000000000006`", " ", 
          SuperscriptBox["y", "4"]}], "-", 
         RowBox[{"28.`", " ", 
          SuperscriptBox["y", "8"]}]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox["y", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"4.840000000000001`", "\[VeryThinSpace]", "-", 
         RowBox[{"8.8`", " ", 
          SuperscriptBox["y", "4"]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox["y", "8"]}]}], ")"}]}]}], ")"}]}], ")"}], "/", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1.2100000000000002`", "\[VeryThinSpace]", "+", 
     SuperscriptBox["x", "8"], "+", 
     RowBox[{"4.`", " ", 
      SuperscriptBox["x", "6"], " ", 
      SuperscriptBox["y", "2"]}], "-", 
     RowBox[{"2.2`", " ", 
      SuperscriptBox["y", "4"]}], "+", 
     SuperscriptBox["y", "8"], "+", 
     RowBox[{
      SuperscriptBox["x", "2"], " ", 
      SuperscriptBox["y", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"13.200000000000001`", "\[VeryThinSpace]", "+", 
        RowBox[{"4.`", " ", 
         SuperscriptBox["y", "4"]}]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["x", "4"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2.2`"}], "+", 
        RowBox[{"6.`", " ", 
         SuperscriptBox["y", "4"]}]}], ")"}]}]}], ")"}], "2"]}]], "Output",
 CellChangeTimes->{3.758328020653472*^9},
 Background->RGBColor[1, 0.925, 0.925]]
}, Open  ]],

Cell["\<\
Cyan and pink cells match. The function proves to be analytic for all real x \
and y. It meets the requirements of Cauchy\[CloseCurlyQuote]s theorem, and \
therefore the contour integral equals zero.\
\>", "Text",
 CellChangeTimes->{{3.7583192393734837`*^9, 3.758319250843951*^9}, {
  3.75831953561138*^9, 3.7583195738907633`*^9}, {3.7583269454249773`*^9, 
  3.7583269538300734`*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell["\<\
The s.m. took a different approach to this problem, and analyzed it \
logically. The problem instructions are to integrate on the unit circle. As \
it turns out, the closest points of discontinuity are exterior to the unit \
circle, and noting this fact avoids further calculations.\
\>", "Text",
 CellChangeTimes->{{3.758390020850066*^9, 3.758390054518559*^9}, {
  3.758390094941774*^9, 3.758390176733508*^9}}],

Cell["15. f[z_] = Im[z]", "Text",
 CellChangeTimes->{{3.7582259356112547`*^9, 3.758226034814989*^9}, 
   3.758232182803399*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[TextData[{
 "I\[CloseCurlyQuote]ll try this problem, which is not in the s.m., by \
following the \[OpenCurlyQuote]",
 StyleBox["steps in applying theorem 2",
  FontWeight->"Bold"],
 "\[CloseCurlyQuote] on p. 648:\n(A) Represent the path C in the form z(t), \
(a \[LessEqual] t \[LessEqual] b).\n(B) Calculate the derivative ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["z", 
    StyleBox["\[CenterDot]",
     FontSize->20]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "(t) = dz/dt.\n(C) Substitute z(t) for every z in f(z) (hence x(t) for x and \
y(t) for y).\n(D) Integrate f[z(t)]",
 Cell[BoxData[
  FormBox[
   OverscriptBox["z", 
    StyleBox["\[CenterDot]",
     FontSize->20]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "(t) over t from a to b."
}], "Text",
 CellChangeTimes->{{3.758394905889984*^9, 3.758395025860674*^9}, {
  3.758395075948241*^9, 3.758395112227303*^9}, {3.75839588312707*^9, 
  3.7583959441793833`*^9}, {3.758395992394462*^9, 3.7583959941944942`*^9}}],

Cell["\<\
Step (A). Looking at example 5 on p. 648, the path of the unit circle is \
represented as \
\>", "Text",
 CellChangeTimes->{{3.758396013738676*^9, 3.758396030752792*^9}, {
  3.7583960925607777`*^9, 3.758396112654764*^9}, {3.758396291457684*^9, 
  3.758396294377675*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"z", "[", "t_", "]"}], "=", 
  RowBox[{
   RowBox[{"Cos", "[", "t", "]"}], "+", 
   RowBox[{"\[ImaginaryI]", " ", 
    RowBox[{"Sin", "[", "t", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.758394893587886*^9, 3.758394894472995*^9}, {
  3.758396121150772*^9, 3.7583961884068336`*^9}, {3.758396819468668*^9, 
  3.758396821906952*^9}, {3.758397155090879*^9, 3.758397182481827*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cos", "[", "t", "]"}], "+", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{"Sin", "[", "t", "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.7583968241153507`*^9, 3.758396944581428*^9, 3.758397071399486*^9, {
   3.758397185030149*^9, 3.758397191239725*^9}, 3.7583973296366663`*^9}]
}, Open  ]],

Cell[TextData[{
 "Step (B). Calculate the derivative ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["z", 
    StyleBox["\[CenterDot]",
     FontSize->20]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "(t)"
}], "Text",
 CellChangeTimes->{{3.758396273939303*^9, 3.758396313500512*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"devz", "=", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"z", "[", "t", "]"}], ",", "t"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.75839641635341*^9, 3.758396467285008*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{"Cos", "[", "t", "]"}]}], "-", 
  RowBox[{"Sin", "[", "t", "]"}]}]], "Output",
 CellChangeTimes->{3.758396468613221*^9, 3.7583968335357513`*^9, 
  3.758396947581411*^9, 3.758397074362938*^9, 3.7583971944480543`*^9, 
  3.75839733597097*^9}]
}, Open  ]],

Cell["Step (C). Substitute z(t) for every z in f(z)", "Text",
 CellChangeTimes->{{3.7583965403092737`*^9, 3.758396545644052*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "z_", "]"}], " ", "=", " ", 
  RowBox[{
   RowBox[{"Im", "[", "z", "]"}], "/.", 
   RowBox[{"z", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cos", "[", "t", "]"}], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"Sin", "[", "t", "]"}]}]}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7583965853906116`*^9, 3.7583966093956614`*^9}, {
   3.758397210211109*^9, 3.758397218047385*^9}, 3.758397814089273*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Im", "[", 
   RowBox[{"Cos", "[", "t", "]"}], "]"}], "+", 
  RowBox[{"Re", "[", 
   RowBox[{"Sin", "[", "t", "]"}], "]"}]}]], "Output",
 CellChangeTimes->{
  3.7583966118397617`*^9, 3.758396837900826*^9, 3.758396951725878*^9, 
   3.758397077880107*^9, {3.758397199364223*^9, 3.758397219635528*^9}, 
   3.758397348023738*^9, 3.758397816197934*^9}]
}, Open  ]],

Cell[TextData[{
 "Step (D). Integrate f[z(t)]",
 Cell[BoxData[
  FormBox[
   OverscriptBox["z", 
    StyleBox["\[CenterDot]",
     FontSize->20]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "(t) over t from a to b."
}], "Text",
 CellChangeTimes->{{3.758396640400937*^9, 3.758396653163184*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", "z", "]"}], "devz"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.758397672211219*^9}],

Cell[BoxData[
 RowBox[{"-", "\[Pi]"}]], "Output",
 CellChangeTimes->{3.758397674446637*^9, 3.758397825236167*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["The text answer is the same as the green cell above.", "Text",
 CellChangeTimes->{{3.75839790133985*^9, 3.758397917405802*^9}}],

Cell["Belatedly, I check the analyticity,", "Text",
 CellChangeTimes->{{3.758397945722755*^9, 3.758397970416623*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"u", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", "0"}]], "Input",
 CellChangeTimes->{{3.758391239851493*^9, 3.758391244393758*^9}, {
  3.7583979761225433`*^9, 3.758398023559458*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.75839124511766*^9, 3.75839802456319*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"v", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", "y"}]], "Input",
 CellChangeTimes->{{3.758391275778864*^9, 3.758391280169016*^9}}],

Cell[BoxData["y"], "Output",
 CellChangeTimes->{3.7583912811721888`*^9, 3.7583980298223143`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"u", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", "x"}], "]"}]], "Input"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.7583913190949297`*^9},
 Background->RGBColor[0.9, 1, 1]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"v", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", "y"}], "]"}]], "Input"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.758391336066554*^9},
 Background->RGBColor[0.9, 1, 1]]
}, Open  ]],

Cell["\<\
The cyan cells are not equal, therefore the function is not analytic, and \
therefore Cauchy' s theorem cannot apply.\
\>", "Text",
 CellChangeTimes->{{3.758391388160015*^9, 3.75839139620945*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"17.", "  ", 
   RowBox[{"f", "[", "z_", "]"}]}], "=", 
  FractionBox["1", 
   RowBox[{"|", "z", 
    SuperscriptBox["|", "2"]}]]}]], "Text",
 CellChangeTimes->{{3.758226037545047*^9, 3.7582260660463333`*^9}, 
   3.758232203858917*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  FractionBox["1", 
   SuperscriptBox[
    RowBox[{"Abs", "[", 
     RowBox[{"x", "+", 
      RowBox[{"y", " ", "\[ImaginaryI]"}]}], "]"}], "2"]]}]], "Input",
 CellChangeTimes->{{3.758398578748598*^9, 3.7583986240539637`*^9}}],

Cell[BoxData[
 FractionBox["1", 
  SuperscriptBox[
   RowBox[{"Abs", "[", 
    RowBox[{"x", "+", 
     RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}], "2"]]], "Output",
 CellChangeTimes->{3.758398700870632*^9, 3.758401080221939*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComplexExpand", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.7583986430816927`*^9, 3.758398657045064*^9}}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{
   SuperscriptBox["x", "2"], "+", 
   SuperscriptBox["y", "2"]}]]], "Output",
 CellChangeTimes->{{3.758398649368376*^9, 3.758398658340013*^9}, {
   3.758398690974235*^9, 3.758398704383401*^9}, 3.758401083086699*^9}]
}, Open  ]],

Cell["\<\
Since there is no imaginary component, it looks like D[v[x,y],y] will equal \
zero, whereas D[u[x,y],x] will not. So the function is not analytic. \
Skipping, then, the Cauchy Theorem option, I will go on to an attempted \
solution.\
\>", "Text",
 CellChangeTimes->{{3.758400138593976*^9, 3.758400254869542*^9}}],

Cell[TextData[{
 "Having had luck the last problem, I will again try the \[OpenCurlyQuote]",
 StyleBox["steps in applying theorem 2",
  FontWeight->"Bold"],
 "\[CloseCurlyQuote] on p. 648:\n(A) Represent the path C in the form z(t), \
(a \[LessEqual] t \[LessEqual] b).\n(B) Calculate the derivative ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["z", 
    StyleBox["\[CenterDot]",
     FontSize->20]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "(t) = dz/dt.\n(C) Substitute z(t) for every z in f(z) (hence x(t) for x and \
y(t) for y).\n(D) Integrate f[z(t)]",
 Cell[BoxData[
  FormBox[
   OverscriptBox["z", 
    StyleBox["\[CenterDot]",
     FontSize->20]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "(t) over t from a to b."
}], "Text",
 CellChangeTimes->{{3.758394905889984*^9, 3.758395025860674*^9}, {
  3.758395075948241*^9, 3.758395112227303*^9}, {3.75839588312707*^9, 
  3.7583959441793833`*^9}, {3.758395992394462*^9, 3.7583959941944942`*^9}, {
  3.758398185708283*^9, 3.758398204458232*^9}}],

Cell["\<\
Step (A). Looking at example 5 on p. 648, the path of the unit circle is \
represented as \
\>", "Text",
 CellChangeTimes->{{3.758400312034132*^9, 3.7584003164547586`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"z", "[", "t_", "]"}], "=", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"\[ImaginaryI]", " ", "t"}]]}]], "Input",
 CellChangeTimes->{{3.758401148515957*^9, 3.758401161145672*^9}}],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  RowBox[{"\[ImaginaryI]", " ", "t"}]]], "Output",
 CellChangeTimes->{3.758400337350359*^9, 3.758401087827853*^9, 
  3.7584011619593687`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", "B", ")"}], " ", "Calculate", " ", "the", " ", "derivative", 
   " ", 
   FormBox[
    OverscriptBox["z", 
     StyleBox["\[CenterDot]",
      FontSize->20]],
    TraditionalForm], 
   RowBox[{"(", "t", ")"}]}], " ", "=", " ", 
  RowBox[{"dz", "/", 
   RowBox[{"dt", "."}]}]}]], "Text",
 CellChangeTimes->{{3.758400358900936*^9, 3.758400364782785*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"devz", "=", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"z", "[", "t", "]"}], ",", "t"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"\[ImaginaryI]", " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"\[ImaginaryI]", " ", "t"}]]}]], "Output",
 CellChangeTimes->{3.758400408854289*^9, 3.758401091268529*^9, 
  3.758401166199011*^9}]
}, Open  ]],

Cell["\<\
(C) Substitute z(t) for every z in f(z) (hence x(t) for x and y(t) for y).\
\>", "Text",
 CellChangeTimes->{3.758400427714739*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"z", "[", "t", "]"}], "]"}], "=", 
  FractionBox["1", 
   RowBox[{"2", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "t"}]]}]]}]], "Input",
 CellChangeTimes->{{3.75840049275476*^9, 3.7584005175013657`*^9}, {
  3.758401215697198*^9, 3.758401226167632*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "t"}]]}]], "Output",
 CellChangeTimes->{3.758400518739087*^9, 3.7584010940422983`*^9, 
  3.7584011703461742`*^9, 3.7584012281780853`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", "D", ")"}], " ", "Integrate", " ", 
  RowBox[{"f", "[", 
   RowBox[{"z", 
    RowBox[{"(", "t", ")"}]}], "]"}], 
  FormBox[
   OverscriptBox["z", 
    StyleBox["\[CenterDot]",
     FontSize->20]],
   TraditionalForm], 
  RowBox[{"(", "t", ")"}], " ", "over", " ", "t", " ", "from", " ", "a", " ", 
  "to", " ", 
  RowBox[{"b", "."}]}]], "Text",
 CellChangeTimes->{{3.758400533705387*^9, 3.758400544335783*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", " ", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "t"}]], "devz"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.758400581086618*^9, {3.7584006830504103`*^9, 3.758400709247651*^9}, {
   3.758401009542659*^9, 3.7584010099746523`*^9}, 3.758401243106649*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.758400583028392*^9, {3.758400685657634*^9, 3.758400710851763*^9}, 
   3.758401011777211*^9, 3.7584010979704123`*^9, 3.7584012452170057`*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[TextData[{
 "The green cell matches the text answer. In this case the ",
 StyleBox["Exp", "Input"],
 " version of f[z] worked, but the ",
 StyleBox["Trig", "Input"],
 " version did not. In the last problem it was the reverse. In this problem a \
zero integral is encountered which, however, does not qualify for its zip \
status because of the Cauchy Theorem, but rather because of its innate \
zeroness."
}], "Text",
 CellChangeTimes->{{3.7584013265651627`*^9, 3.758401405105947*^9}, {
  3.7584014518832397`*^9, 3.7584014564083548`*^9}, {3.758401569311222*^9, 
  3.75840158558027*^9}, {3.758404761755683*^9, 3.7584047787616053`*^9}, {
  3.758541308191478*^9, 3.758541317705942*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"19.", "  ", 
   RowBox[{"f", "[", "z_", "]"}]}], "=", 
  RowBox[{
   SuperscriptBox["z", "3"], 
   RowBox[{"Cot", "[", "z", "]"}]}]}]], "Text",
 CellChangeTimes->{{3.758226074737288*^9, 3.7582260974154243`*^9}, 
   3.758232222715221*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell["\<\
20 - 30 Further Contour Integrals
Evaluate the integral. Does Cauchy\[CloseCurlyQuote]s theorem apply?\
\>", "Text",
 CellChangeTimes->{{3.758226162309739*^9, 3.75822619178827*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"h", "[", "z_", "]"}], "=", 
  RowBox[{
   SuperscriptBox["z", "3"], 
   RowBox[{"Cot", "[", "z", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.758403864832653*^9, 3.758403865294518*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["z", "3"], " ", 
  RowBox[{"Cot", "[", "z", "]"}]}]], "Output",
 CellChangeTimes->{{3.758403854850541*^9, 3.758403866008966*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{
   RowBox[{"h", "[", "z", "]"}], "/.", 
   RowBox[{"z", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{"x", "+", 
      RowBox[{"y", " ", "\[ImaginaryI]"}]}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.758403869682851*^9, 3.758403905677186*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"x", "+", 
     RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], "3"], " ", 
  RowBox[{"Cot", "[", 
   RowBox[{"x", "+", 
    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}]], "Output",
 CellChangeTimes->{3.758403908656773*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComplexExpand", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.758403914400797*^9, 3.758403920886138*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["x", "3"], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "x"}], "]"}]}], 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "x"}], "]"}], "-", 
     RowBox[{"Cosh", "[", 
      RowBox[{"2", " ", "y"}], "]"}]}]]}], "+", 
  FractionBox[
   RowBox[{"3", " ", "x", " ", 
    SuperscriptBox["y", "2"], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "x"}], "]"}]}], 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "x"}], "]"}], "-", 
    RowBox[{"Cosh", "[", 
     RowBox[{"2", " ", "y"}], "]"}]}]], "-", 
  FractionBox[
   RowBox[{"3", " ", 
    SuperscriptBox["x", "2"], " ", "y", " ", 
    RowBox[{"Sinh", "[", 
     RowBox[{"2", " ", "y"}], "]"}]}], 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "x"}], "]"}], "-", 
    RowBox[{"Cosh", "[", 
     RowBox[{"2", " ", "y"}], "]"}]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["y", "3"], " ", 
    RowBox[{"Sinh", "[", 
     RowBox[{"2", " ", "y"}], "]"}]}], 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "x"}], "]"}], "-", 
    RowBox[{"Cosh", "[", 
     RowBox[{"2", " ", "y"}], "]"}]}]], "+", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"3", " ", 
        SuperscriptBox["x", "2"], " ", "y", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "x"}], "]"}]}], 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "x"}], "]"}], "-", 
        RowBox[{"Cosh", "[", 
         RowBox[{"2", " ", "y"}], "]"}]}]]}], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["y", "3"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "x"}], "]"}]}], 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "x"}], "]"}], "-", 
       RowBox[{"Cosh", "[", 
        RowBox[{"2", " ", "y"}], "]"}]}]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["x", "3"], " ", 
       RowBox[{"Sinh", "[", 
        RowBox[{"2", " ", "y"}], "]"}]}], 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "x"}], "]"}], "-", 
       RowBox[{"Cosh", "[", 
        RowBox[{"2", " ", "y"}], "]"}]}]], "-", 
     FractionBox[
      RowBox[{"3", " ", "x", " ", 
       SuperscriptBox["y", "2"], " ", 
       RowBox[{"Sinh", "[", 
        RowBox[{"2", " ", "y"}], "]"}]}], 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "x"}], "]"}], "-", 
       RowBox[{"Cosh", "[", 
        RowBox[{"2", " ", "y"}], "]"}]}]]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.758403921693636*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"u", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["x", "3"], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "x"}], "]"}]}], 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "x"}], "]"}], "-", 
      RowBox[{"Cosh", "[", 
       RowBox[{"2", " ", "y"}], "]"}]}]]}], "+", 
   FractionBox[
    RowBox[{"3", " ", "x", " ", 
     SuperscriptBox["y", "2"], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "x"}], "]"}]}], 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "x"}], "]"}], "-", 
     RowBox[{"Cosh", "[", 
      RowBox[{"2", " ", "y"}], "]"}]}]], "-", 
   FractionBox[
    RowBox[{"3", " ", 
     SuperscriptBox["x", "2"], " ", "y", " ", 
     RowBox[{"Sinh", "[", 
      RowBox[{"2", " ", "y"}], "]"}]}], 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "x"}], "]"}], "-", 
     RowBox[{"Cosh", "[", 
      RowBox[{"2", " ", "y"}], "]"}]}]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["y", "3"], " ", 
     RowBox[{"Sinh", "[", 
      RowBox[{"2", " ", "y"}], "]"}]}], 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "x"}], "]"}], "-", 
     RowBox[{"Cosh", "[", 
      RowBox[{"2", " ", "y"}], "]"}]}]]}]}]], "Input",
 CellChangeTimes->{{3.758403965532857*^9, 3.75840397435071*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["x", "3"], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "x"}], "]"}]}], 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "x"}], "]"}], "-", 
     RowBox[{"Cosh", "[", 
      RowBox[{"2", " ", "y"}], "]"}]}]]}], "+", 
  FractionBox[
   RowBox[{"3", " ", "x", " ", 
    SuperscriptBox["y", "2"], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "x"}], "]"}]}], 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "x"}], "]"}], "-", 
    RowBox[{"Cosh", "[", 
     RowBox[{"2", " ", "y"}], "]"}]}]], "-", 
  FractionBox[
   RowBox[{"3", " ", 
    SuperscriptBox["x", "2"], " ", "y", " ", 
    RowBox[{"Sinh", "[", 
     RowBox[{"2", " ", "y"}], "]"}]}], 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "x"}], "]"}], "-", 
    RowBox[{"Cosh", "[", 
     RowBox[{"2", " ", "y"}], "]"}]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["y", "3"], " ", 
    RowBox[{"Sinh", "[", 
     RowBox[{"2", " ", "y"}], "]"}]}], 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "x"}], "]"}], "-", 
    RowBox[{"Cosh", "[", 
     RowBox[{"2", " ", "y"}], "]"}]}]]}]], "Output",
 CellChangeTimes->{3.758403982251277*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"v", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"3", " ", 
      SuperscriptBox["x", "2"], " ", "y", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "x"}], "]"}]}], 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "x"}], "]"}], "-", 
      RowBox[{"Cosh", "[", 
       RowBox[{"2", " ", "y"}], "]"}]}]]}], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["y", "3"], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "x"}], "]"}]}], 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "x"}], "]"}], "-", 
     RowBox[{"Cosh", "[", 
      RowBox[{"2", " ", "y"}], "]"}]}]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["x", "3"], " ", 
     RowBox[{"Sinh", "[", 
      RowBox[{"2", " ", "y"}], "]"}]}], 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "x"}], "]"}], "-", 
     RowBox[{"Cosh", "[", 
      RowBox[{"2", " ", "y"}], "]"}]}]], "-", 
   FractionBox[
    RowBox[{"3", " ", "x", " ", 
     SuperscriptBox["y", "2"], " ", 
     RowBox[{"Sinh", "[", 
      RowBox[{"2", " ", "y"}], "]"}]}], 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "x"}], "]"}], "-", 
     RowBox[{"Cosh", "[", 
      RowBox[{"2", " ", "y"}], "]"}]}]]}]}]], "Input",
 CellChangeTimes->{{3.758403994875839*^9, 3.758404008325726*^9}, {
  3.75840417183156*^9, 3.758404172109272*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"3", " ", 
     SuperscriptBox["x", "2"], " ", "y", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "x"}], "]"}]}], 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "x"}], "]"}], "-", 
     RowBox[{"Cosh", "[", 
      RowBox[{"2", " ", "y"}], "]"}]}]]}], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["y", "3"], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "x"}], "]"}]}], 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "x"}], "]"}], "-", 
    RowBox[{"Cosh", "[", 
     RowBox[{"2", " ", "y"}], "]"}]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["x", "3"], " ", 
    RowBox[{"Sinh", "[", 
     RowBox[{"2", " ", "y"}], "]"}]}], 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "x"}], "]"}], "-", 
    RowBox[{"Cosh", "[", 
     RowBox[{"2", " ", "y"}], "]"}]}]], "-", 
  FractionBox[
   RowBox[{"3", " ", "x", " ", 
    SuperscriptBox["y", "2"], " ", 
    RowBox[{"Sinh", "[", 
     RowBox[{"2", " ", "y"}], "]"}]}], 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "x"}], "]"}], "-", 
    RowBox[{"Cosh", "[", 
     RowBox[{"2", " ", "y"}], "]"}]}]]}]], "Output",
 CellChangeTimes->{3.758404010043138*^9, 3.7584041741217737`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"u", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", "x"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.758404079341322*^9, 3.758404091487487*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.758404094811832*^9, 3.758404099736635*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "4"}], " ", "x", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["x", "2"], "-", 
       RowBox[{"3", " ", 
        SuperscriptBox["y", "2"]}]}], ")"}]}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"Cosh", "[", 
      RowBox[{"2", " ", "y"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "x", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", "2"], "-", 
          RowBox[{"3", " ", 
           SuperscriptBox["y", "2"]}]}], ")"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "x"}], "]"}]}], "+", 
       RowBox[{"3", " ", 
        RowBox[{"(", 
         RowBox[{"x", "-", "y"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"x", "+", "y"}], ")"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "x"}], "]"}]}]}], ")"}]}], "+", 
    RowBox[{"3", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["x", "2"]}], "+", 
       SuperscriptBox["y", "2"]}], ")"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"4", " ", "x"}], "]"}]}], "+", 
    RowBox[{"4", " ", "y", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", "x", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "x"}], "]"}]}], "+", 
       RowBox[{"3", " ", "x", " ", 
        RowBox[{"Cosh", "[", 
         RowBox[{"2", " ", "y"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "3"}], " ", 
           SuperscriptBox["x", "2"]}], "+", 
          SuperscriptBox["y", "2"]}], ")"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "x"}], "]"}]}]}], ")"}], " ", 
     RowBox[{"Sinh", "[", 
      RowBox[{"2", " ", "y"}], "]"}]}]}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "x"}], "]"}], "-", 
       RowBox[{"Cosh", "[", 
        RowBox[{"2", " ", "y"}], "]"}]}], ")"}], "2"]}], ")"}]}]], "Output",
 CellChangeTimes->{3.758404104356937*^9, 3.758404180413425*^9},
 Background->RGBColor[0.9, 1, 1]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"v", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", "y"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.758404120147992*^9, 3.758404132030085*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.758404134266634*^9, 3.758404140407279*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "4"}], " ", "x", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["x", "2"], "-", 
       RowBox[{"3", " ", 
        SuperscriptBox["y", "2"]}]}], ")"}]}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"Cosh", "[", 
      RowBox[{"2", " ", "y"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "x", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", "2"], "-", 
          RowBox[{"3", " ", 
           SuperscriptBox["y", "2"]}]}], ")"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "x"}], "]"}]}], "+", 
       RowBox[{"3", " ", 
        RowBox[{"(", 
         RowBox[{"x", "-", "y"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"x", "+", "y"}], ")"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "x"}], "]"}]}]}], ")"}]}], "+", 
    RowBox[{"3", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["x", "2"]}], "+", 
       SuperscriptBox["y", "2"]}], ")"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"4", " ", "x"}], "]"}]}], "+", 
    RowBox[{"4", " ", "y", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", "x", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "x"}], "]"}]}], "+", 
       RowBox[{"3", " ", "x", " ", 
        RowBox[{"Cosh", "[", 
         RowBox[{"2", " ", "y"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "3"}], " ", 
           SuperscriptBox["x", "2"]}], "+", 
          SuperscriptBox["y", "2"]}], ")"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "x"}], "]"}]}]}], ")"}], " ", 
     RowBox[{"Sinh", "[", 
      RowBox[{"2", " ", "y"}], "]"}]}]}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "x"}], "]"}], "-", 
       RowBox[{"Cosh", "[", 
        RowBox[{"2", " ", "y"}], "]"}]}], ")"}], "2"]}], ")"}]}]], "Output",
 CellChangeTimes->{3.758404141656782*^9, 3.758404187873858*^9},
 Background->RGBColor[0.9, 1, 1]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"u", "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", "y"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584042134410563`*^9, 3.758404245186454*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.758404248279479*^9, 3.758404253595763*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"4", " ", "y", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", 
        SuperscriptBox["x", "2"]}], "+", 
       SuperscriptBox["y", "2"]}], ")"}]}], "-", 
    RowBox[{"6", " ", "x", " ", "y", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"4", " ", "x"}], "]"}]}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "x"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"6", " ", 
           SuperscriptBox["x", "2"], " ", "y"}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["y", "3"]}]}], ")"}], " ", 
        RowBox[{"Cosh", "[", 
         RowBox[{"2", " ", "y"}], "]"}]}], "+", 
       RowBox[{"3", " ", 
        RowBox[{"(", 
         RowBox[{"x", "-", "y"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"x", "+", "y"}], ")"}], " ", 
        RowBox[{"Sinh", "[", 
         RowBox[{"2", " ", "y"}], "]"}]}]}], ")"}]}], "+", 
    RowBox[{"4", " ", "x", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "x"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"3", " ", "y", " ", 
        RowBox[{"Cosh", "[", 
         RowBox[{"2", " ", "y"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", "2"], "-", 
          RowBox[{"3", " ", 
           SuperscriptBox["y", "2"]}]}], ")"}], " ", 
        RowBox[{"Sinh", "[", 
         RowBox[{"2", " ", "y"}], "]"}]}]}], ")"}]}], "-", 
    RowBox[{"3", " ", 
     RowBox[{"(", 
      RowBox[{"x", "-", "y"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"x", "+", "y"}], ")"}], " ", 
     RowBox[{"Sinh", "[", 
      RowBox[{"4", " ", "y"}], "]"}]}]}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "x"}], "]"}], "-", 
       RowBox[{"Cosh", "[", 
        RowBox[{"2", " ", "y"}], "]"}]}], ")"}], "2"]}], ")"}]}]], "Output",
 CellChangeTimes->{3.758404257633492*^9},
 Background->RGBColor[1, 0.925, 0.925]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"v", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", "x"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.75840427199903*^9, 3.758404282137331*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.758404285061235*^9, 3.758404290002736*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"4", " ", "y", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", 
        SuperscriptBox["x", "2"]}], "+", 
       SuperscriptBox["y", "2"]}], ")"}]}], "-", 
    RowBox[{"6", " ", "x", " ", "y", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"4", " ", "x"}], "]"}]}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "x"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"6", " ", 
           SuperscriptBox["x", "2"], " ", "y"}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["y", "3"]}]}], ")"}], " ", 
        RowBox[{"Cosh", "[", 
         RowBox[{"2", " ", "y"}], "]"}]}], "+", 
       RowBox[{"3", " ", 
        RowBox[{"(", 
         RowBox[{"x", "-", "y"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"x", "+", "y"}], ")"}], " ", 
        RowBox[{"Sinh", "[", 
         RowBox[{"2", " ", "y"}], "]"}]}]}], ")"}]}], "+", 
    RowBox[{"4", " ", "x", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "x"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"3", " ", "y", " ", 
        RowBox[{"Cosh", "[", 
         RowBox[{"2", " ", "y"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", "2"], "-", 
          RowBox[{"3", " ", 
           SuperscriptBox["y", "2"]}]}], ")"}], " ", 
        RowBox[{"Sinh", "[", 
         RowBox[{"2", " ", "y"}], "]"}]}]}], ")"}]}], "-", 
    RowBox[{"3", " ", 
     RowBox[{"(", 
      RowBox[{"x", "-", "y"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"x", "+", "y"}], ")"}], " ", 
     RowBox[{"Sinh", "[", 
      RowBox[{"4", " ", "y"}], "]"}]}]}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "x"}], "]"}], "-", 
       RowBox[{"Cosh", "[", 
        RowBox[{"2", " ", "y"}], "]"}]}], ")"}], "2"]}], ")"}]}]], "Output",
 CellChangeTimes->{3.758404293224374*^9},
 Background->RGBColor[1, 0.925, 0.925]]
}, Open  ]],

Cell["\<\
Cyan and pink cells match. The function proves to be analytic for all real x \
and y. It meets the requirements of Cauchy\[CloseCurlyQuote]s theorem, and \
therefore the contour integral equals zero.\
\>", "Text",
 CellChangeTimes->{{3.7583192393734837`*^9, 3.758319250843951*^9}, {
  3.75831953561138*^9, 3.7583195738907633`*^9}, {3.7583269454249773`*^9, 
  3.7583269538300734`*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{"21.", "  ", 
   RowBox[{"\[ContourIntegral]", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"z", "-", 
       RowBox[{"3", " ", "\[ImaginaryI]"}]}]], 
     RowBox[{"\[DifferentialD]", "z"}]}]}]}], " ", ",", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"the", " ", "circle"}], " ", "|", "z", "|"}], "=", 
   RowBox[{"\[Pi]", " ", "counterclockwise"}]}]}]], "Text",
 CellChangeTimes->{{3.758226195084598*^9, 3.758226196268077*^9}, 
   3.758226278112369*^9, {3.75822636688347*^9, 3.758226450402246*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"\[ContourIntegral]", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"z", "-", 
     RowBox[{"3", " ", "\[ImaginaryI]"}]}]], 
   RowBox[{"\[DifferentialD]", "z"}]}]}]], "Input",
 CellChangeTimes->{{3.75840619119057*^9, 3.7584061968606243`*^9}}],

Cell[TextData[{
 "I will first try the example 5 steps.\n(A) Represent the path C in the form \
z(t), (a \[LessEqual] t \[LessEqual] b).\n(B) Calculate the derivative ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["z", 
    StyleBox["\[CenterDot]",
     FontSize->20]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "(t) = dz/dt.\n(C) Substitute z(t) for every z in f(z) (hence x(t) for x and \
y(t) for y).\n(D) Integrate f[z(t)]",
 Cell[BoxData[
  FormBox[
   OverscriptBox["z", 
    StyleBox["\[CenterDot]",
     FontSize->20]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "(t) over t from a to b."
}], "Text",
 CellChangeTimes->{3.7584063348439913`*^9}],

Cell[TextData[{
 StyleBox["Step (A)",
  FontWeight->"Bold"],
 ". Since ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"z", "[", "t_", "]"}], "=", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", "t"}]]}]],
  CellChangeTimes->{{3.758406170513611*^9, 3.75840617298694*^9}, {
   3.758406301474813*^9, 3.7584063032606297`*^9}}],
 " is a unit circle, I suppose that \[Pi]",
 Cell[BoxData[
  RowBox[{" ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", "t"}]]}]],
  CellChangeTimes->{{3.758406170513611*^9, 3.75840617298694*^9}, {
   3.758406301474813*^9, 3.7584063032606297`*^9}}],
 " is a circle of radius \[Pi]."
}], "Text",
 CellChangeTimes->{{3.75840635148096*^9, 3.758406443421165*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"\[Pi]", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "t"}]]}], "]"}], ",", 
     RowBox[{"Im", "[", 
      RowBox[{"\[Pi]", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "t"}]]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "150"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Re\>\"", ",", "\"\<Im\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.758406500053323*^9, 3.7584065211313257`*^9}, 
   3.758410490423888*^9, {3.758410522309188*^9, 3.7584105259333878`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
d+2Pgoz/Ae0WpOQ=
     "]]}},
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Re\"", TraditionalForm], 
    FormBox["\"Im\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->150,
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-3.1415922864481107`, 
   3.141592653589793}, {-3.1415922115086596`, 3.141592271177821}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7584065078842087`*^9, 3.7584065229368773`*^9}, 
   3.758410528185142*^9}]
}, Open  ]],

Cell["The plot looks okay as far as radius, I think.", "Text",
 CellChangeTimes->{{3.7584065534975433`*^9, 3.7584065568810787`*^9}, {
  3.75840719743104*^9, 3.758407199397544*^9}, {3.7584105547336197`*^9, 
  3.758410563506464*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"z", "[", "t_", "]"}], "=", 
  RowBox[{"\[Pi]", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", "t"}]]}]}]], "Input",
 CellChangeTimes->{{3.758406170513611*^9, 3.75840617298694*^9}, {
  3.758406301474813*^9, 3.7584063032606297`*^9}, {3.7584065615215273`*^9, 
  3.758406562825438*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"\[ImaginaryI]", " ", "t"}]], " ", "\[Pi]"}]], "Output",
 CellChangeTimes->{3.7584065636749268`*^9}]
}, Open  ]],

Cell["Step (B). ", "Text",
 CellChangeTimes->{{3.758406589222205*^9, 3.758406624527554*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"devz", "=", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"z", "[", "t", "]"}], ",", "t"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7584066397485332`*^9, 3.758406654310775*^9}}],

Cell[BoxData[
 RowBox[{"\[ImaginaryI]", " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"\[ImaginaryI]", " ", "t"}]], " ", "\[Pi]"}]], "Output",
 CellChangeTimes->{3.758406657929514*^9}]
}, Open  ]],

Cell["Step(C).", "Text",
 CellChangeTimes->{{3.7584066667579393`*^9, 3.758406670197925*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{
      RowBox[{"\[Pi]", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "t"}]]}], "-", 
      RowBox[{"3", " ", "\[ImaginaryI]"}]}]], "devz"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.758407263154121*^9, 3.758407319258168*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}]], "Output",
 CellChangeTimes->{3.758407320832994*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["The green cell answer matches that of the text.", "Text",
 CellChangeTimes->{{3.758407355313406*^9, 3.758407374927985*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"23.", "  ", 
   RowBox[{"\[ContourIntegral]", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"2", " ", "z"}], "-", "1"}], 
      RowBox[{
       SuperscriptBox["z", "2"], "-", "z"}]], 
     RowBox[{"\[DifferentialD]", "z"}]}]}]}], " ", ",", " ", 
  StyleBox[
   RowBox[{
   "counterclockwise", " ", "around", " ", "an", " ", "ellipse", " ", "with", 
    " ", "foci", " ", "at", " ", "origin", " ", "and", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", ",", "0"}], ")"}], ".", " ", "Use"}], " ", "partial", " ", 
    
    RowBox[{"fractions", "."}]}],
   FontFamily->"Charter"]}]], "Text",
 CellChangeTimes->{{3.758226462000792*^9, 3.7582265849418173`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell["This problem is worked in the s.m.", "Text",
 CellChangeTimes->{{3.758462139476849*^9, 3.758462151699122*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[ContourIntegral]", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"2", " ", "z"}], "-", "1"}], 
    RowBox[{
     SuperscriptBox["z", "2"], "-", "z"}]], 
   RowBox[{"\[DifferentialD]", "z"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"ContourIntegral", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"2", " ", "z"}]}], 
    RowBox[{
     RowBox[{"-", "z"}], "+", 
     SuperscriptBox["z", "2"]}]], ",", "z"}], "]"}]], "Output",
 CellChangeTimes->{3.75823308100319*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"y", "/.", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{"x", "-", "1"}], "2"], ")"}], "^", "2"}], "+", 
       RowBox[{
        RowBox[{"(", 
         FractionBox["y", "1"], ")"}], "^", "2"}]}], "\[Equal]", "1"}], 
     "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "4"}], "}"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Re\>\"", ",", "\"\<Im\>\""}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Text", "[", 
        RowBox[{"\"\<1\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"1.5", ",", 
           RowBox[{"-", "0.1"}]}], "}"}]}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Text", "[", 
        RowBox[{"\"\<1\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"0.9", ",", "0.5"}], "}"}]}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Text", "[", 
        RowBox[{"\"\<\!\(\*SqrtBox[\(2\)]\)\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"1.7", ",", "0.6"}], "}"}]}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "0.014", "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "0.014", "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "0.014", "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"2", ",", "0"}], "}"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "0.014", "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], "]"}]}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.758411173257247*^9, 3.758411235645574*^9}, {
  3.758411277827516*^9, 3.75841134911385*^9}, {3.758412114987673*^9, 
  3.758412120985701*^9}, {3.7584121586741257`*^9, 3.758412167336091*^9}, {
  3.758412416210181*^9, 3.758412709887433*^9}, {3.758412791460772*^9, 
  3.7584128062001047`*^9}, {3.758412859765777*^9, 3.758412927648334*^9}, {
  3.758412963135672*^9, 3.7584130254053288`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
xciJV/+jEru4lXa+snwA/wNxod5g
     "]], LineBox[CompressedData["
1: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
     "]]}},
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Re\"", TraditionalForm], 
    FormBox["\"Im\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{{
     RGBColor[1, 0, 0], 
     LineBox[{{1, 0}, {2, 0}}]}, {
     InsetBox[
      FormBox["\"1\"", TraditionalForm], {1.5, -0.1}]}, {
     RGBColor[1, 0, 0], 
     LineBox[{{1, 0}, {1, 1}}]}, {
     InsetBox[
      FormBox["\"1\"", TraditionalForm], {0.9, 0.5}]}, {
     RGBColor[1, 0, 0], 
     LineBox[{{1, 1}, {2, 0}}]}, {
     InsetBox[
      FormBox["\"\\!\\(\\*SqrtBox[\\(2\\)]\\)\"", TraditionalForm], {1.7, 
      0.6}]}, {
     PointSize[0.014], 
     PointBox[{1, 1}]}, {
     PointSize[0.014], 
     PointBox[{1, 0}]}, {
     PointSize[0.014], 
     PointBox[{2, 0}]}, {
     PointSize[0.014], 
     PointBox[{0, 0}]}},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->350,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-2, 4}, {-0.9999999733580154, 0.9999999733580155}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.758411180766226*^9, 3.758411237441518*^9}, {
   3.758411296598713*^9, 3.758411310119368*^9}, {3.758411343318397*^9, 
   3.758411350568795*^9}, 3.758412122809407*^9, {3.758412160876099*^9, 
   3.758412168706235*^9}, {3.7584124208277884`*^9, 3.7584124413896646`*^9}, 
   3.758412476061631*^9, {3.7584125200901527`*^9, 3.758412575773508*^9}, {
   3.758412610831501*^9, 3.7584127113268414`*^9}, 3.758412795305252*^9, {
   3.758412887692606*^9, 3.758412929013603*^9}, {3.758412968647398*^9, 
   3.75841302674997*^9}, 3.758414141552618*^9, 3.758414414308857*^9, 
   3.758455310115848*^9}]
}, Open  ]],

Cell["\<\
The above plot displays an ellipse which satisfies the problem description. \
The problem is actually simple, provided example 6 on p. 656 is used, as \
pointed out by the s.m. The problem\[CloseCurlyQuote]s problem is that there \
are two points of discontinuity: 0 and 1. The hint to use partial fractions \
solves the issue by splitting the domain into two parts as shown \
schematically below. This schematic sketch represents two paths, each \
incorporating the dashed line, which will be added together. \
\>", "Text",
 CellChangeTimes->{{3.758413332827261*^9, 3.758413355465466*^9}, {
  3.758413394431912*^9, 3.758413414863432*^9}, {3.758455120108432*^9, 
  3.7584551234970207`*^9}, {3.7584622343384867`*^9, 3.7584623001190367`*^9}, {
  3.758463099298584*^9, 3.758463194854793*^9}, {3.75846404139048*^9, 
  3.758464046934402*^9}, {3.758464091214568*^9, 3.758464112964652*^9}, {
  3.7584653866737757`*^9, 3.7584653942881603`*^9}, {3.758465549102455*^9, 
  3.7584656016584177`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"y", "/.", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{"x", "-", "1"}], "2"], ")"}], "^", "2"}], "+", 
       RowBox[{
        RowBox[{"(", 
         FractionBox["y", "1"], ")"}], "^", "2"}]}], "\[Equal]", "1"}], 
     "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "4"}], "}"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Re\>\"", ",", "\"\<Im\>\""}], "}"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Dashed", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.5", ",", "0.95"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.5", ",", 
             RowBox[{"-", "0.95"}]}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "0.014", "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "0.014", "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], "]"}]}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7584624086865053`*^9, 3.75846241693279*^9}, {
  3.758462586495533*^9, 3.758462649334903*^9}, {3.758462701615486*^9, 
  3.758462749531909*^9}, {3.7584628171461077`*^9, 3.758462837401417*^9}, {
  3.758465630547831*^9, 3.7584656624091673`*^9}, {3.758480168875967*^9, 
  3.758480282430492*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
xciJV/+jEru4lXa+snwA/wNxod5g
     "]], LineBox[CompressedData["
1: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
     "]]}},
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Re\"", TraditionalForm], 
    FormBox["\"Im\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{{
     Thickness[Large], 
     Dashing[{Small, Small}], 
     LineBox[{{0.5, 0.95}, {0.5, -0.95}}]}, {
     PointSize[0.014], 
     PointBox[{1, 0}]}, {
     PointSize[0.014], 
     PointBox[{0, 0}]}},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->350,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-2, 4}, {-0.9999999733580154, 0.9999999733580155}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7584624188708363`*^9, {3.758462621175077*^9, 3.758462651010188*^9}, {
   3.758462724657082*^9, 3.758462751747818*^9}, 3.7584628386635103`*^9, {
   3.758465633536672*^9, 3.758465664277701*^9}, {3.758480220118143*^9, 
   3.7584802515030823`*^9}, 3.758480284031711*^9}]
}, Open  ]],

Cell["\<\
The principle of deformation of path, illustrated in example 6 on p. 656, \
covers this situation nicely. It works because the problem function can be \
factored.\
\>", "Text",
 CellChangeTimes->{{3.758462905599666*^9, 3.7584629830922937`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Factor", "[", 
  FractionBox[
   RowBox[{
    RowBox[{"2", " ", "z"}], "-", "1"}], 
   RowBox[{
    SuperscriptBox["z", "2"], "-", "z"}]], "]"}]], "Input",
 CellChangeTimes->{{3.758463003673821*^9, 3.758463009685115*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   RowBox[{"2", " ", "z"}]}], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "z"}], ")"}], " ", "z"}]]], "Output",
 CellChangeTimes->{3.7584630107514267`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Apart", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.758463020769824*^9, 3.7584630254604807`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "z"}]], "+", 
  FractionBox["1", "z"]}]], "Output",
 CellChangeTimes->{3.758463026149458*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"egr1", "=", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "z"}], ")"}], 
   RowBox[{"-", "1"}]], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"note", " ", "exponent", " ", "of"}], " ", "-", "1"}], "  ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.758463055656241*^9, 3.758463061074012*^9}, {
  3.758463237693335*^9, 3.758463261953421*^9}, {3.758465726814597*^9, 
  3.758465761325533*^9}}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{
   RowBox[{"-", "1"}], "+", "z"}]]], "Output",
 CellChangeTimes->{3.758463263390025*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"egr2", "=", 
  SuperscriptBox["z", 
   RowBox[{"-", "1"}]], "  ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"note", " ", "exponent", " ", "of"}], " ", "-", "1"}], "  ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.75846326889028*^9, 3.758463277700265*^9}, {
  3.7584657435499477`*^9, 3.758465753653792*^9}}],

Cell[BoxData[
 FractionBox["1", "z"]], "Output",
 CellChangeTimes->{3.758463278702894*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "Taking", " ", "a", " ", "look", " ", "at", " ", "numbered", " ", "line", 
   " ", 
   RowBox[{"(", "3", ")"}], " ", "on", " ", 
   RowBox[{"p", ".", " ", "656"}]}], ",", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"\[ContourIntegral]", " ", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"z", "-", 
        SubscriptBox["z", "0"]}], ")"}], "m"], " ", 
     RowBox[{"\[DifferentialD]", "z"}]}]}], " ", "=", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          RowBox[{"2", "\[Pi]", " ", "\[ImaginaryI]"}], 
          RowBox[{
           StyleBox["m",
            FontSlant->"Italic"], "=", 
           RowBox[{"-", "1"}]}]},
         {"0", 
          RowBox[{
           StyleBox["m",
            FontSlant->"Italic"], "\[NotEqual]", 
           RowBox[{
            RowBox[{"-", "1"}], " ", "and", " ", "integer"}]}]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}]}]], "Text",
 CellChangeTimes->{{3.758465015884568*^9, 3.758465146959196*^9}}],

Cell[TextData[{
 "The point ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", "0"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is understood to be the point of discontinuity, and in the first factor is \
equal to 1."
}], "Text",
 CellChangeTimes->{{3.758463820597941*^9, 3.758463871939126*^9}, {
  3.758464175453332*^9, 3.758464175842662*^9}, {3.758465184398497*^9, 
  3.758465237756442*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ci1", "=", 
  RowBox[{
   RowBox[{"\[ContourIntegral]", " ", 
    RowBox[{"egr1", " ", 
     RowBox[{"\[DifferentialD]", "z"}]}]}], "\[Equal]", 
   RowBox[{"2", "\[Pi]", " ", "\[ImaginaryI]"}]}]}]], "Input",
 CellChangeTimes->{{3.758463676394718*^9, 3.758463697120487*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ContourIntegral", "[", 
   RowBox[{
    FractionBox["1", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "z"}]], ",", "z"}], "]"}], "\[Equal]", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}]}]], "Output",
 CellChangeTimes->{{3.7584636781156883`*^9, 3.758463697819309*^9}}]
}, Open  ]],

Cell[TextData[{
 "For this other factor of the function, the point ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", "0"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is equal to 0."
}], "Text",
 CellChangeTimes->{{3.758463885372197*^9, 3.758463908538253*^9}, {
  3.758465246491989*^9, 3.7584652954267483`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ci2", "=", 
  RowBox[{
   RowBox[{"\[ContourIntegral]", " ", 
    RowBox[{"egr2", " ", 
     RowBox[{"\[DifferentialD]", "z"}]}]}], "\[Equal]", 
   RowBox[{"2", "\[Pi]", " ", "\[ImaginaryI]"}]}]}]], "Input",
 CellChangeTimes->{{3.758463361459709*^9, 3.7584633725630503`*^9}, {
  3.758463408333939*^9, 3.758463414393896*^9}, {3.758463642619924*^9, 
  3.758463652201666*^9}, {3.758463701616213*^9, 3.758463704809881*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ContourIntegral", "[", 
   RowBox[{
    FractionBox["1", "z"], ",", "z"}], "]"}], "\[Equal]", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}]}]], "Output",
 CellChangeTimes->{3.758463653620659*^9, 3.7584637056410103`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ci3", "\[Equal]", 
  RowBox[{"ci1", "+", "ci2"}], "\[Equal]", 
  RowBox[{"4", "\[Pi]", " ", "\[ImaginaryI]"}]}]], "Input",
 CellChangeTimes->{{3.758463942012727*^9, 3.758463974320444*^9}}],

Cell[BoxData[
 RowBox[{"ci3", "\[Equal]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"ContourIntegral", "[", 
      RowBox[{
       FractionBox["1", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "z"}]], ",", "z"}], "]"}], "\[Equal]", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}]}], ")"}], "+", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"ContourIntegral", "[", 
      RowBox[{
       FractionBox["1", "z"], ",", "z"}], "]"}], "\[Equal]", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}]}], ")"}]}], "\[Equal]", 
  RowBox[{"4", " ", "\[ImaginaryI]", " ", "\[Pi]"}]}]], "Output",
 CellChangeTimes->{3.758463976427801*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[TextData[{
 "Instead of taking a shortcut and strong-arming Mathematica into submission, \
there is a procedure on ",
 StyleBox["MathWorld",
  FontSlant->"Italic"],
 " under the heading Contour Integral, which could possibly be used to derive \
the answer more legitimately."
}], "Text",
 CellChangeTimes->{{3.75846441178104*^9, 3.758464513488936*^9}, {
  3.758465341065577*^9, 3.758465341745508*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"25.", "  ", 
   RowBox[{"\[ContourIntegral]", 
    RowBox[{
     FractionBox[
      SuperscriptBox["\[ExponentialE]", "z"], "z"], 
     RowBox[{"\[DifferentialD]", "z"}]}]}]}], " ", ",", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"C", " ", "consists", " ", "of"}], " ", "|", "z", "|"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"2", " ", "counterclockwise", " ", "and"}], " ", "|", "z", "|"}],
     "=", 
    RowBox[{"1", " ", 
     RowBox[{"clockwise", "."}]}]}]}]}]], "Text",
 CellChangeTimes->{{3.758231814994273*^9, 3.7582318628586206`*^9}, {
   3.758232072674796*^9, 3.758232085841056*^9}, 3.75823227871482*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   FractionBox[
    SuperscriptBox["\[ExponentialE]", "z"], "z"], ")"}], 
  RowBox[{"-", "1"}]]], "Input",
 CellChangeTimes->{{3.7584768569137993`*^9, 3.758476868759862*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", "z"}]], " ", "z"}]], "Output",
 CellChangeTimes->{3.75847686949483*^9}]
}, Open  ]],

Cell[TextData[{
 "In the above form there are no values of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", "0"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " which cause a discontinuity. The form that allows a discontinuity at ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", "0"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "=0 is the form ",
 Cell[BoxData[
  SuperscriptBox[
   StyleBox[
    RowBox[{"(", 
     FractionBox[
      SuperscriptBox["\[ExponentialE]", "z"], "z"], ")"}],
    FontSize->21], "1"]],
  CellChangeTimes->{{3.7584768569137993`*^9, 3.758476868759862*^9}}],
 ", and then ",
 StyleBox["m",
  FontSlant->"Italic"],
 "=1, which means the integral equals 0. This answer agrees with the text."
}], "Text",
 CellChangeTimes->{{3.758476924685884*^9, 3.758476963876853*^9}, {
  3.758477054273981*^9, 3.758477101256836*^9}, {3.758477135904675*^9, 
  3.758477160982609*^9}, {3.758477902367012*^9, 3.758477908397423*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      SuperscriptBox["\[ExponentialE]", "x"], "x"], ",", 
     RowBox[{"y", "/.", 
      RowBox[{"Solve", "[", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["y", "2"]}], "\[Equal]", "1"}], ")"}], "]"}]}], ",", 
     
     RowBox[{"y", "/.", 
      RowBox[{"Solve", "[", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["y", "2"]}], "\[Equal]", "4"}], ")"}], "]"}]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "3"}], "}"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "150"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Re\>\"", ",", "\"\<Im\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "3.5"}], ",", "3.5"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7584772128890877`*^9, 3.758477245067829*^9}, {
   3.758477626039301*^9, 3.75847767314962*^9}, {3.758477706645501*^9, 
   3.758477781506266*^9}, {3.758477836320861*^9, 3.758477836472393*^9}, {
   3.758496796337789*^9, 3.758496820352076*^9}, 3.758496876695959*^9, {
   3.7584969190610123`*^9, 3.75849696424973*^9}, 3.758496999763926*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
5v9RIf4L9DfACg==
     "]], LineBox[CompressedData["
1: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
AvnNJRSu1Hou1h3Bh4t5C/ueEwdQB+d6XeBDc6q5Qxrxkw5V7YFrfJh7bfai
UOLxwg946BYfvPWqd+4hNkoLc2Ye82FhScFPG+LQo7o+gSV82HFMiTIkLrLv
DBuv4sPDLfq+y4hnll+5HNLIB3EFL515xOazrPP+7eaDi66IgzxxVPtEUbiA
Dx9r3CqliSte3qkTm+FDXvHnFEniWVW/jVhQDBzeX/9civjWi5jTUVIMzCt5
pSVHvOFWO6tiNgN+bqJDc4n7Lhsls5QZMLKQmVxEHHcmSc1mAQM90y4OesRa
/gO34jUZ6I9xH7IgrvKw1PugxYAnpla7EPvZXi+U0WOAw4tn/IlljMbWOxgy
8OpB6dbzxH8t2Vx7aR0D2YLXgjvEDgq33TiWDJT7alRVETMiIj0KtuT5cwJa
GOIknqu/syMDzRobFquQ97Gq5dFk6nYGIhiLG1bEx57v/0V1PwOimjoaucRz
couuuh9kwHDKb2kT8YtkpcU3/Blo8/Fxlif748ehSkP1UwwczPJdlkCc4a7+
em8kA4k6reXVxKY2IXY3Yxngf+6Pkif7L0zz171LU0i9Hs3uucQL5aMGvTIY
eH/I3n+EuPRny7E7WQyY9QelW5H9Ld6cGK/9FwOP85brMMSxScInqyoZuJnz
WcmP9MuK8E1mQdUMnI6Mz+cQv/fLefvsEwOaTW3rTUm/SW/c3mrUQZ4fqx6r
TPoxaeZvGiYZUPjWJzpG+tdWSZ/DEhHAIHXUM4z09yzthzdqaQGkjBVZSZH+
D95xa80+RQFkZ1/306mi0O1p8r5oHQG4xOWqZZH8UKiSWbnZQAAlDmYq1iRf
PnBjJ+esE0CpkUoYj9hMNvxSnq0A/Kx/PW5D8mmRj++rKk8BJHVW9ywj+dUc
0Rt3xU8AWZIHur4RX0nb67wzUAB691sM7pK8o8tdhngRAthhG9VgQvJxYKGV
qvx1Afwmfaow6iuFjz+rBbtyBLA1aR086aDQdyjNXOOrAJwVSq7e5lKoKa4g
M9AuALt636V/kvxN1ZXIOTksgE+OexvSukm/nB+r+4MtBM0M860P+ii0MP/4
W4+ZELorqmYfI/Ph073wniN3hWBhY6/pQJH59Drl18pHQhheL4y6SNMY8eXu
EbUXQkgplw7nsGhcKdY4XVEmhNPRiWv3kHkV76I7R61NCLaKL+6my9KIYlzr
CrkR6Ow44hmvSuN9F4s81eARyMqTVrNfReOsQ648/1Mj8DwsZlfbahrdIg+v
KY8cgXsZnUpHybxl308v9b84AlIha9ozyTz+XWyksSxvBGIbbUrnAY2q929K
+DePwJenMZ3RdjSeE6N83+Ao7HM6pb/kII0/QozefLceBXPjtJpJHxr9BL7z
VtqPwvBTjfxaPxq3dnCqru4YhaofEfOjA2hUe5WpffjoKBRpXutjn6DxUYgp
TzlnFIRdGw+fPEdjMxN45DBrDP5R9PFn5dGo0955XOXjGOQ0T+pc49P4Mtxo
dkP9GNg9hjRtIY1W6on5yc1jUF+udeL1KI079hq3SvWPwVrfnJyxSRrPdl20
mBEfh8ePd18NmcXCL99MZbqMx0Go7nFkQoV8HzKp2fdyx2Htxmf7K61ZWCO6
qRpOT0DYhT9tM2+z8HumCTf27ARsMTjwMS2fheqoPVYXNwF5aRf3Jd1nYUCY
zPzfUycgZ82vhfFPWCg/VeMX+2ACdsinLUstYaHTqJN0HXcCbgZ6lMo2srCx
d9emfdbf4dvHc48TJNnIrTr6Lkp2EkKNEsRvHWPjYLPmL+lvfsCghsC4IkQC
vS6nTla7/Qs1ckIjj4uS+KVujx89MA0by4wcHpVKYaZT2Yzempn//w/9BxGE
E2c=
     "]], 
    LineBox[{{0.001191388331309401, -3.5}, {0.0011937925926526181`, 3.5}}]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
B924NcI=
     "]], LineBox[CompressedData["
1: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
nRt8D/8DmLx9Mg==
     "]]}},
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Re\"", TraditionalForm], 
    FormBox["\"Im\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->150,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-1.9999998979591838`, 2.9999998979591838`}, {-3.5, 3.5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.758496823390786*^9, 3.7584968795681133`*^9, {3.758496946179097*^9, 
   3.7584969662531643`*^9}, 3.7584970023769493`*^9}]
}, Open  ]],

Cell["\<\
A plot of the annular domain and the candidate contour. The contour is not a \
closed path.\
\>", "Text",
 CellChangeTimes->{{3.75847792990863*^9, 3.758477954931625*^9}, {
  3.758478026665358*^9, 3.758478061696159*^9}, {3.758478150287656*^9, 
  3.7584781539570093`*^9}, {3.7584792354163427`*^9, 3.758479242432416*^9}, {
  3.758481778733156*^9, 3.758481788259406*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"27.", "  ", 
   RowBox[{"\[ContourIntegral]", 
    RowBox[{
     FractionBox[
      RowBox[{"Cos", "[", "z", "]"}], "z"], 
     RowBox[{"\[DifferentialD]", "z"}]}]}]}], " ", ",", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"C", " ", "consists", " ", "of"}], " ", "|", "z", "|"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"1", " ", "counterclockwise", " ", "and"}], " ", "|", "z", "|"}],
     "=", 
    RowBox[{"3", " ", 
     RowBox[{"clockwise", "."}]}]}]}]}]], "Text",
 CellChangeTimes->{{3.758231891109393*^9, 3.758231954306131*^9}, 
   3.758232292099121*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell["This time I\[CloseCurlyQuote]ll make the plot first.", "Text",
 CellChangeTimes->{{3.7584785425689783`*^9, 3.7584785504875383`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"Cos", "[", "x", "]"}], "x"], ",", 
     RowBox[{"y", "/.", 
      RowBox[{"Solve", "[", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["y", "2"]}], "\[Equal]", "1"}], ")"}], "]"}]}], ",", 
     
     RowBox[{"y", "/.", 
      RowBox[{"Solve", "[", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["y", "2"]}], "\[Equal]", "9"}], ")"}], "]"}]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "150"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Re\>\"", ",", "\"\<Im\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "3.5"}], ",", "3.5"}], "}"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Arrowheads", "[", ".1", "]"}], ",", 
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2.1", ",", "2.1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2.3", ",", "1.9"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
      
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Arrowheads", "[", ".09", "]"}], ",", 
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.7", ",", "0.67"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.55", ",", "0.85"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.758478629512396*^9, 3.758478655716484*^9}, {
  3.758497011507049*^9, 3.758497138483932*^9}, {3.758497174820676*^9, 
  3.758497247416671*^9}, {3.758497296808443*^9, 3.75849732519796*^9}, {
  3.7584974179795313`*^9, 3.7584974838810387`*^9}, {3.75849754302472*^9, 
  3.7584975453189907`*^9}, {3.7584975801180363`*^9, 3.7584975976848707`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
+iqpAbj+/1qG/wfHpeFw
     "]], LineBox[CompressedData["
1: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
LS9T17dKavtXksT/A+XvXOU=
     "]], 
    LineBox[{{-0.0009030606839944358, -3.5}, {-0.0008986574577993161, 3.5}}]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
aei78Tn8HyzbXUo=
     "]], LineBox[CompressedData["
1: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
fAn/B9K+vTg=
     "]]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]], 
    LineBox[CompressedData["
1:eJw12Hc01f//APBw731VQkKqDyKVlBWVCr1eaSoRDaWUkUQlRCqjjOwQSZGs
zKSQzLze2StbVmTPZLtmvi/n/H5/3fM4z3Pe972e6y2if0/TkHXFihX6LCtW
LP8afPIdWVoCFN/On1BxvSqkfAS3KywAKt1f0/VxTyYUMIu/+mAGUOrSVN0o
Wx58dFbeP2kSUGssXwatUimCP2XyS/6MAsq7XVFetLMUynJrrNgxDCifsY+z
RzkqoM9Y6z6DAUBNPGzlFbaqgieTmZFNHYCyc2u4b7hUA6P8nJt52wCldFjU
JWRbHWS9z819thlQeVdCOPIV6mGW3C77whpACfrrGGHUAKVSr11KyQNU0kC7
pFF9M/QIGPL+iwEl7g5nMmJaYJ/VwwLxbECJvPye23z/Fwzb5ycb9gVQRlN3
023nWyFPesGa51GA8mKdbDEzboczmRLfb7oC6teul5FGw53wfHAGM9wJUOPW
OxgF8l0wyea4VOsTQNUUXkfzT7ugiaJu8LmHgJKXxM+2ru2Grd/8rZAxoFaz
yMm/3dIDc6k58U2nAbVXd6oldnMfFAp31b1wAlCbQjV7113tgzYOvIG+RwBl
kZsV0hjYB/coS9GAIrmfjcU7PTj6YUyeXtuEBKC0r63nXBrrh16FxX4/OAEV
JbO13CBiEDaLHY5IWw0oaTYrtqzmQbjDPSMpnAGoxIe7hfzXDcGC0/FVVv8Y
lOqH3Wtrng7Bf1WenEJ/GZRPfMRIo9YfaN6i5mH6g0FxmOjxiI8Pw4ujdQ5c
Xgyq0D5hztZiFL7XOPNi1pVBXWrrlK11G4XjyQVhXU4Mqtsa6YPQUehj9RWn
2TAoZmbkd/ayUVg8F7h4/TaDYljIPvUTGYMK9CuPPp9iUJHOnmWLxWNQeFOH
mcYqBrV4xddxmm0CxnXqVz2lM6itCTcGgvkmoOyHbunPLAzK8pgkTUpsAh5T
7P/LOUenuGfVd2w8NQFNro3cKR+kU+ZFielrfSbgl4jFWyfK6dS7mOPuiXyT
8OSuTXpKPnQq7kJ9Qcn6KWimeE5DnI9OZXgWL34fmYYCpeJNt7nplMX6m/O2
i9OwWGuFXiIHnZLPZuhIsjPh5vsfzeQYdEquyCPQdDsTVsQBXyUmjTp51GnI
8ioTSvBnV2g00aizWUomYYVM2D+2VfVxCI16d//C3S7/GagbM328bBuNsso9
sHED3xzMVntsLbqFjTo1kHyCd24B1uZrxVdKs1JSD8f/0DSX4AVrvg2y4izU
YlXcrGTRCvTQghZ8TWwFZfdm0Gwcs6DEh0Eo5+4/HK8pXvjFhxUpP/tD7bqx
gM9/yv6PRZsNqUmPHztsN4cF7i9Kp7LRULCJ9tRg6Ayef1Cr1PWGhrCQ0yaW
oGl8BR/vPCJBR9pm14/ir5O4rC2szTqajsoOLnQNxI9jyXNSopoCDGT/av5j
bOwoviAhwCXgyEAam3VmhfyG8TflH/7K9Qx0ju2oY4HDAHZ8db5VXBSgCoXn
V99YDOA4s6jte7cCdMry5767BgNYXKogH24DSLnn1hDvsQE8/+HHkqYYQLJF
z8/fWDmAwxac75vvAmitZ8N2Np9+PBKgZ+gtB1D5uttl6G0fNngVz6FyBKCj
W/x4s7/24P2FLGsKdQFyueaueTq6B29hG1rI0AOoJOipb3NAD/4gPL3zoz5A
ajz31sxa9uCnv6sOvbgB0CWaKm2fXA8+9nbXybO3ALrdS5/89Kkb71MsmIq7
B5Bf/KPayNgu/Ifrjna5HUB1vWbccq+78GBo63+x9gDxi95Sz3XtwnWWSoJO
TwB6G3yxrP1mFz6Z81/7PgeAor3k8gS3dWGlxte3ApwByjQdTg4M78RKn568
kvIEqENWz88zqANT0vSx6kCAEp0+mBt5dOAI9Y4Tfq8Belw3dfbI4w58UGW2
T+MNQDwPPLjmL3fgZ8e20CqDADqWkeJlsrEDdyccTKRCAIqDDFeV1+34pK52
o0MkQJ2vLzI5JX7jIJ59TJtEgGwODqUWsv/G2/c1BGz7BBDvryeW9kNtWK0z
+0kF8fHNcWPD8W34t6TfXqEkgOKj5ofKxduw8WqwKzUFIIvksHYPsVY8Zzeh
8j0dILbywRKGaAueYbBnaeYCZBlTunKA1oItOMxpv4i7HeNPlPU243CVdck3
8gAqOGBS4BPfjA3Oyxy0zAfINWaA2iDbjNVsFv95FgLE7tSftvNwE5aRLTZ4
V0qu92BvlNr1BhyR3tWmVgOQM19ht8zhBszTzpWXTzw5GiXKI9qAR+wS1xys
Bag+xjC8ofcn7sm4WbWlDqBAvp63uqY/cWxhxqbheoD+G+vyt7Crx8cVHuTe
aAJINLbD4VVwLRZyE33d/hsgYU9Bt5HHtXg9x1HH0+0ACZle9j6pXYvlBYfS
Uok37akOmttQi8tNx+luHQCto6iUa69qcI/ogOTWLoBYGkN7tr+oxpNd2qkH
ewH6l9ky9MSsGvPF7LgaRLwQwj/eqF6Na7+wq88Szxj4/PPgrMahm+U2pvYB
NDpizz/iWYXV44fh1gGAMFe2nylHJb5XwNXWPkTen3q5UOHyCtxqMa+y9w9A
X4M/fKjxqMD++Y9Z3YkTxYLz962swG3JGpelhgF6Bx9P/2P9gT/n7ww1+wuQ
7b392j4zpfiGVNSL2lGA9ld+EfncVYgdwlQhzxRAXSvzpNKiC/Gru0GyZ4i9
lasVcowLcYHzbg+X5Xjq8IXykQKss6h6k7kcf7vdo38+HyOTzzXV0yRu/Hpc
mDcPt97LfmI8Q+KR0UtiDbl45KNvxhvi/a1f1kgH5eIt1n+1SpbjZ6u3Kwnn
4m8bLuRunwXogPzqK5clvuNvizJqzcSCq2ZcRN1z8B5jrmNb58n7Z8sbvpsr
B7/x5S05RVw8IpMFA76R+tCQZLYc/2k8ciU8G/t/ikjKXI5Htmi9zMjEJllB
JicWyPPknzGPgJl4be4vXmPi+x68Xp8LMvBmnXFRj+W4+RmqvDodz5+KMCsl
tjyEd9AHv+JqlUv5RxYBKk1qUeYx+4ojPR4H6BJv3jZzVWQ6FfeIOJXZLsfZ
d79QYk3FPnXqN1OW400Rs1abUrCe4lqtjf/I8VQxj3NYMt5p9U59N3EpbpH0
256Mc2q3fDy5HI/m1U+UTcJoNV+gFfHLvjUBPwIScTlLxfZi4vb11m0p0R+x
1qxffzPxruMdYkFpCfjomB7fMHHu+9TMm03xWE1E9DPXEkCcdZtpZwbjcE0r
v5AwsTabxxm5+VjsEvkfU5p4TO9a+5JADF5sOT94hljxRbF4r2Q01rf1ol0l
dqNk75cfisKHHBrcjYmFNwPGG91IfP3th3pH4jtq5upPzCOwn/u+t97EaXYt
rw0dwzG3e+OPN8Qh6de1bpwMxVFTNywSiffw7xmUMQnBzM6zPWnE5VYr7RY9
g/H6rot5FLFB3S+u0o9vMEew9ZoS4jnZpIhXlYGYLyqFqiL2e/Fsr8FYAPb1
ZW9vIBYfvVwszfMSc3U+MWkjptSkrizs8cNneLh1u4kvfWT9W3zRF8v5Y2qA
uI0/kWXXmBf+WeDp9ZeYo/6iWP4ed2xNe5A3vnz9fkuqOg+fYbcQe8NpYhP1
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
     "]]}},
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Re\"", TraditionalForm], 
    FormBox["\"Im\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{{
     Arrowheads[0.1], 
     ArrowBox[{{2.1, 2.1}, {2.3, 1.9}}]}, {
     Arrowheads[0.09], 
     ArrowBox[{{0.7, 0.67}, {0.55, 0.85}}]}},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->150,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-2.9999998775510206`, 2.9999998775510206`}, {-3.5, 3.5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.758478645668702*^9, 3.758478657495289*^9}, 
   3.75849701416183*^9, {3.75849705281669*^9, 3.7584970814556513`*^9}, 
   3.758497207500518*^9, {3.758497279699785*^9, 3.758497327728322*^9}, {
   3.758497429032558*^9, 3.758497485803946*^9}, 3.758497547965275*^9, {
   3.758497582373554*^9, 3.75849759937501*^9}}]
}, Open  ]],

Cell["\<\
The above plot of the annular domain superimposed with candidate contour.\
\>", "Text",
 CellChangeTimes->{{3.758478746032936*^9, 3.758478792367332*^9}, {
  3.7584813263958406`*^9, 3.758481342073926*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    FractionBox[
     RowBox[{"Cos", "[", "z", "]"}], "z"], ")"}], 
   RowBox[{"-", "1"}]], "\[Equal]", 
  FractionBox["z", 
   RowBox[{"Cos", "[", "z", "]"}]]}]], "Input",
 CellChangeTimes->{{3.758478824639744*^9, 3.75847889740563*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.758478898576948*^9}]
}, Open  ]],

Cell["So an alternate form of the current function is", "Text",
 CellChangeTimes->{{3.758481994548312*^9, 3.758482009028042*^9}}],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   FractionBox["z", 
    RowBox[{"Cos", "[", "z", "]"}]], ")"}], 
  RowBox[{"-", "1"}]]], "Input",
 CellChangeTimes->{{3.758481966990796*^9, 3.758481975989232*^9}}],

Cell[TextData[{
 "In the form shown above, the expression does admit of a discontinuity at \
the point ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", "0"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "=",
 Cell[BoxData[
  FormBox[
   StyleBox[
    FractionBox["\[Pi]", "2"],
    FontSize->21], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".  And the value ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox[
     FractionBox["\[Pi]", "2"],
     FontSize->21], " "}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is contained in the domain. However, I believe that because of the \
opposite orientation of the directions of the annuli, as shown by arrowheads, \
the integral will equal zero. A site with some treatment of this is:\n",
 StyleBox["http://www.math.unm.edu/~nitsche/courses/313/s16/lec19_int5.pdf. ",
  
  FontSlant->"Italic"],
 "Also, the text, on p. 658, seems to reinforce this idea when talking about \
branch cuts. So this problem could end up equaling zero not through \
deformation of path and numbered line (3), but through calculation by means \
of branch cuts, one cut cutting out the point of discontinuity. I will skip \
the green cell coloring, though."
}], "Text",
 CellChangeTimes->{{3.758479025784886*^9, 3.758479148395685*^9}, {
   3.758479192707633*^9, 3.758479217841346*^9}, {3.7584793211337433`*^9, 
   3.758479327445785*^9}, {3.758481365265409*^9, 3.7584813661542387`*^9}, {
   3.7584821847675047`*^9, 3.7584821921578093`*^9}, {3.758482265051399*^9, 
   3.7584824359895763`*^9}, {3.75849498824354*^9, 3.758494989501738*^9}, 
   3.758495250555069*^9, {3.758496230482684*^9, 3.758496341485722*^9}, {
   3.758496430540625*^9, 3.758496574078533*^9}, {3.75849766714647*^9, 
   3.758497672058392*^9}, {3.758497826374322*^9, 3.758497862371953*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"29.", "  ", 
   RowBox[{"\[ContourIntegral]", 
    RowBox[{
     FractionBox[
      RowBox[{"Sin", "[", "z", "]"}], 
      RowBox[{"z", "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "z"}]}]], 
     RowBox[{"\[DifferentialD]", "z"}]}]}]}], " ", ",", " ", 
  RowBox[{
   RowBox[{"C", " ", ":", " ", 
    RowBox[{"|", 
     RowBox[{"z", "-", "4", "-", 
      RowBox[{"2", " ", "\[ImaginaryI]"}]}], "|"}]}], "=", 
   RowBox[{"5.5", " ", 
    RowBox[{"clockwise", "."}]}]}]}]], "Text",
 CellChangeTimes->{{3.75823198442959*^9, 3.758232044689291*^9}, 
   3.7582323012265873`*^9},
 Background->RGBColor[1, 0.9, 0.8]]
},
WindowSize->{1366, 843},
WindowMargins->{{4, Automatic}, {Automatic, 4}},
Magnification:>1.5 Inherited,
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 10, \
2015)",
StyleDefinitions->"Charter1.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 70, 1, 45, "Input"],
Cell[473, 16, 221, 5, 51, "Text",
 Evaluatable->False],
Cell[697, 23, 73, 1, 45, "Input"],
Cell[773, 26, 117, 1, 51, "Text"],
Cell[893, 29, 412, 10, 111, "Text"],
Cell[1308, 41, 243, 5, 110, "Text"],
Cell[1554, 48, 471, 15, 103, "Text"],
Cell[2028, 65, 621, 23, 120, "Text"],
Cell[2652, 90, 269, 5, 86, "Text"],
Cell[2924, 97, 306, 9, 78, "Text"],
Cell[3233, 108, 128, 1, 51, "Text"],
Cell[3364, 111, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[3462, 116, 219, 6, 54, "Input"],
Cell[3684, 124, 199, 5, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3920, 134, 342, 10, 47, "Input"],
Cell[4265, 146, 264, 7, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4566, 158, 134, 2, 45, "Input"],
Cell[4703, 162, 596, 18, 54, "Output"]
}, Open  ]],
Cell[5314, 183, 519, 9, 86, "Text"],
Cell[CellGroupData[{
Cell[5858, 196, 376, 12, 55, "Input"],
Cell[6237, 210, 293, 9, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6567, 224, 427, 13, 55, "Input"],
Cell[6997, 239, 335, 10, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7369, 254, 131, 4, 45, "Input"],
Cell[7503, 260, 667, 20, 78, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8207, 285, 131, 4, 45, "Input"],
Cell[8341, 291, 664, 20, 78, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9042, 316, 152, 5, 45, "Input"],
Cell[9197, 323, 649, 20, 78, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9883, 348, 131, 4, 45, "Input"],
Cell[10017, 354, 649, 20, 78, "Output"]
}, Open  ]],
Cell[10681, 377, 432, 8, 110, "Text"],
Cell[11116, 387, 305, 9, 93, "Text"],
Cell[11424, 398, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[11522, 403, 216, 6, 75, "Input"],
Cell[11741, 411, 208, 6, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11986, 422, 276, 9, 47, "Input"],
Cell[12265, 433, 268, 8, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12570, 446, 66, 1, 45, "Input"],
Cell[12639, 449, 904, 32, 82, "Output"]
}, Open  ]],
Cell[13558, 484, 285, 5, 86, "Text"],
Cell[CellGroupData[{
Cell[13868, 493, 695, 25, 82, "Input"],
Cell[14566, 520, 619, 22, 82, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15222, 547, 451, 15, 82, "Input"],
Cell[15676, 564, 360, 12, 82, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16073, 581, 131, 4, 45, "Input"],
Cell[16207, 587, 1229, 44, 114, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17473, 636, 131, 4, 45, "Input"],
Cell[17607, 642, 719, 25, 118, "Output"]
}, Open  ]],
Cell[18341, 670, 648, 14, 161, "Text"],
Cell[18992, 686, 914, 24, 136, "Text"],
Cell[19909, 712, 243, 5, 51, "Text"],
Cell[CellGroupData[{
Cell[20177, 721, 1697, 44, 178, "Input"],
Cell[21877, 767, 37759, 634, 223, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59673, 1406, 939, 24, 116, "Input"],
Cell[60615, 1432, 16831, 291, 143, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77483, 1728, 522, 17, 116, "Input"],
Cell[78008, 1747, 635, 13, 58, "Message"],
Cell[78646, 1762, 253, 7, 99, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78936, 1774, 269, 8, 116, "Input"],
Cell[79208, 1784, 173, 3, 69, "Output"]
}, Open  ]],
Cell[79396, 1790, 129, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[79550, 1795, 385, 11, 75, "Input"],
Cell[79938, 1808, 314, 10, 90, "Output"]
}, Open  ]],
Cell[80267, 1821, 237, 5, 51, "Text"],
Cell[80507, 1828, 756, 22, 82, "Text"],
Cell[81266, 1852, 267, 6, 51, "Text"],
Cell[CellGroupData[{
Cell[81558, 1862, 270, 7, 75, "Input"],
Cell[81831, 1871, 180, 4, 50, "Output"]
}, Open  ]],
Cell[82026, 1878, 111, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[82162, 1883, 711, 20, 95, "Input"],
Cell[82876, 1905, 146, 3, 69, "Output"]
}, Open  ]],
Cell[83037, 1911, 114, 1, 51, "Text"],
Cell[83154, 1914, 436, 8, 110, "Text"],
Cell[CellGroupData[{
Cell[83615, 1926, 229, 5, 69, "Input"],
Cell[83847, 1933, 203, 4, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84087, 1942, 205, 4, 69, "Input"],
Cell[84295, 1948, 121, 2, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84453, 1955, 691, 20, 119, "Input"],
Cell[85147, 1977, 222, 4, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85406, 1986, 691, 20, 119, "Input"],
Cell[86100, 2008, 223, 4, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86360, 2017, 254, 5, 69, "Input"],
Cell[86617, 2024, 200, 4, 69, "Output"]
}, Open  ]],
Cell[86832, 2031, 187, 4, 75, "Text"],
Cell[87022, 2037, 305, 9, 97, "Text"],
Cell[87330, 2048, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[87428, 2053, 217, 6, 78, "Input"],
Cell[87648, 2061, 159, 5, 78, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87844, 2071, 276, 9, 47, "Input"],
Cell[88123, 2082, 250, 8, 82, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88410, 2095, 66, 1, 45, "Input"],
Cell[88479, 2098, 3908, 124, 276, "Output"]
}, Open  ]],
Cell[92402, 2225, 221, 4, 86, "Text"],
Cell[CellGroupData[{
Cell[92648, 2233, 2605, 83, 265, "Input"],
Cell[95256, 2318, 2451, 80, 182, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97744, 2403, 1451, 46, 182, "Input"],
Cell[99198, 2451, 1332, 43, 94, "Output"]
}, Open  ]],
Cell[100545, 2497, 194, 6, 45, "Input"],
Cell[CellGroupData[{
Cell[100764, 2507, 133, 2, 45, "Input"],
Cell[100900, 2511, 2311, 67, 154, "Output"]
}, Open  ]],
Cell[103226, 2581, 196, 6, 45, "Input"],
Cell[CellGroupData[{
Cell[103447, 2591, 131, 2, 45, "Input"],
Cell[103581, 2595, 2311, 67, 154, "Output"]
}, Open  ]],
Cell[105907, 2665, 216, 7, 45, "Input"],
Cell[CellGroupData[{
Cell[106148, 2676, 65, 1, 45, "Input"],
Cell[106216, 2679, 2305, 68, 154, "Output"]
}, Open  ]],
Cell[108536, 2750, 194, 6, 45, "Input"],
Cell[CellGroupData[{
Cell[108755, 2760, 65, 1, 45, "Input"],
Cell[108823, 2763, 2305, 68, 154, "Output"]
}, Open  ]],
Cell[111143, 2834, 432, 8, 110, "Text"],
Cell[111578, 2844, 421, 7, 120, "Text"],
Cell[112002, 2853, 163, 3, 75, "Text"],
Cell[112168, 2858, 73, 1, 45, "Input"],
Cell[112244, 2861, 1006, 25, 201, "Text"],
Cell[113253, 2888, 280, 6, 51, "Text"],
Cell[CellGroupData[{
Cell[113558, 2898, 412, 9, 47, "Input"],
Cell[113973, 2909, 311, 7, 45, "Output"]
}, Open  ]],
Cell[114299, 2919, 292, 10, 57, "Text"],
Cell[CellGroupData[{
Cell[114616, 2933, 199, 5, 45, "Input"],
Cell[114818, 2940, 307, 7, 45, "Output"]
}, Open  ]],
Cell[115140, 2950, 129, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[115294, 2955, 473, 12, 47, "Input"],
Cell[115770, 2969, 381, 9, 45, "Output"]
}, Open  ]],
Cell[116166, 2981, 304, 10, 57, "Text"],
Cell[CellGroupData[{
Cell[116495, 2995, 268, 8, 45, "Input"],
Cell[116766, 3005, 151, 3, 69, "Output"]
}, Open  ]],
Cell[116932, 3011, 133, 1, 51, "Text"],
Cell[117068, 3014, 117, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[117210, 3019, 220, 5, 47, "Input"],
Cell[117433, 3026, 90, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[117560, 3032, 169, 4, 47, "Input"],
Cell[117732, 3038, 96, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[117865, 3044, 131, 4, 45, "Input"],
Cell[117999, 3050, 106, 2, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[118142, 3057, 131, 4, 45, "Input"],
Cell[118276, 3063, 104, 2, 69, "Output"]
}, Open  ]],
Cell[118395, 3068, 206, 4, 51, "Text"],
Cell[118604, 3074, 305, 9, 104, "Text"],
Cell[118912, 3085, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[119010, 3090, 314, 9, 82, "Input"],
Cell[119327, 3101, 230, 6, 82, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[119594, 3112, 134, 2, 45, "Input"],
Cell[119731, 3116, 259, 6, 82, "Output"]
}, Open  ]],
Cell[120005, 3125, 322, 6, 86, "Text"],
Cell[120330, 3133, 1025, 25, 201, "Text"],
Cell[121358, 3160, 182, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[121565, 3168, 218, 5, 51, "Input"],
Cell[121786, 3175, 191, 4, 50, "Output"]
}, Open  ]],
Cell[121992, 3182, 403, 13, 55, "Text"],
Cell[CellGroupData[{
Cell[122420, 3199, 134, 4, 45, "Input"],
Cell[122557, 3205, 225, 5, 50, "Output"]
}, Open  ]],
Cell[122797, 3213, 140, 3, 51, "Text"],
Cell[CellGroupData[{
Cell[122962, 3220, 350, 9, 79, "Input"],
Cell[123315, 3231, 292, 7, 75, "Output"]
}, Open  ]],
Cell[123622, 3241, 449, 14, 55, "Text"],
Cell[CellGroupData[{
Cell[124096, 3259, 506, 13, 75, "Input"],
Cell[124605, 3274, 231, 4, 69, "Output"]
}, Open  ]],
Cell[124851, 3281, 688, 13, 120, "Text"],
Cell[125542, 3296, 308, 9, 73, "Text"],
Cell[125853, 3307, 191, 4, 86, "Text"],
Cell[126047, 3313, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[126145, 3318, 218, 6, 50, "Input"],
Cell[126366, 3326, 170, 4, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[126573, 3335, 342, 10, 47, "Input"],
Cell[126918, 3347, 294, 9, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[127249, 3361, 132, 2, 45, "Input"],
Cell[127384, 3365, 2649, 87, 161, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[130070, 3457, 1402, 46, 159, "Input"],
Cell[131475, 3505, 1262, 43, 84, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132774, 3553, 1451, 47, 159, "Input"],
Cell[134228, 3602, 1286, 43, 84, "Output"]
}, Open  ]],
Cell[135529, 3648, 218, 6, 45, "Input"],
Cell[CellGroupData[{
Cell[135772, 3658, 131, 2, 45, "Input"],
Cell[135906, 3662, 2224, 70, 152, "Output"]
}, Open  ]],
Cell[138145, 3735, 218, 6, 45, "Input"],
Cell[CellGroupData[{
Cell[138388, 3745, 131, 2, 45, "Input"],
Cell[138522, 3749, 2224, 70, 152, "Output"]
}, Open  ]],
Cell[140761, 3822, 242, 7, 45, "Input"],
Cell[CellGroupData[{
Cell[141028, 3833, 131, 2, 45, "Input"],
Cell[141162, 3837, 2166, 68, 189, "Output"]
}, Open  ]],
Cell[143343, 3908, 217, 6, 45, "Input"],
Cell[CellGroupData[{
Cell[143585, 3918, 131, 2, 45, "Input"],
Cell[143719, 3922, 2166, 68, 189, "Output"]
}, Open  ]],
Cell[145900, 3993, 432, 8, 110, "Text"],
Cell[146335, 4003, 572, 15, 100, "Text"],
Cell[146910, 4020, 73, 1, 45, "Input"],
Cell[146986, 4023, 265, 7, 76, "Input"],
Cell[147254, 4032, 674, 19, 201, "Text"],
Cell[147931, 4053, 728, 20, 51, "Text"],
Cell[CellGroupData[{
Cell[148684, 4077, 826, 21, 91, "Input"],
Cell[149513, 4100, 19272, 328, 242, "Output"]
}, Open  ]],
Cell[168800, 4431, 231, 3, 51, "Text"],
Cell[CellGroupData[{
Cell[169056, 4438, 348, 8, 51, "Input"],
Cell[169407, 4448, 172, 4, 50, "Output"]
}, Open  ]],
Cell[169594, 4455, 92, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[169711, 4460, 202, 5, 45, "Input"],
Cell[169916, 4467, 192, 4, 50, "Output"]
}, Open  ]],
Cell[170123, 4474, 92, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[170240, 4479, 460, 13, 79, "Input"],
Cell[170703, 4494, 156, 3, 69, "Output"]
}, Open  ]],
Cell[170874, 4500, 129, 1, 51, "Text"],
Cell[171006, 4503, 752, 22, 100, "Text"],
Cell[171761, 4527, 116, 1, 51, "Text"],
Cell[171880, 4530, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[171978, 4535, 238, 8, 77, "Input"],
Cell[172219, 4545, 300, 10, 77, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[172556, 4560, 3552, 100, 309, "Input"],
Cell[176111, 4662, 17519, 311, 225, "Output"]
}, Open  ]],
Cell[193645, 4976, 997, 15, 189, "Text"],
Cell[CellGroupData[{
Cell[194667, 4995, 1874, 53, 184, "Input"],
Cell[196544, 5050, 16765, 293, 225, "Output"]
}, Open  ]],
Cell[213324, 5346, 254, 5, 86, "Text"],
Cell[CellGroupData[{
Cell[213603, 5355, 245, 7, 77, "Input"],
Cell[213851, 5364, 251, 9, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[214139, 5378, 126, 2, 45, "Input"],
Cell[214268, 5382, 178, 6, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[214483, 5393, 449, 13, 49, "Input"],
Cell[214935, 5408, 132, 4, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[215104, 5417, 332, 9, 49, "Input"],
Cell[215439, 5428, 90, 2, 75, "Output"]
}, Open  ]],
Cell[215544, 5433, 2341, 66, 111, "Text"],
Cell[217888, 5501, 405, 11, 53, "Text"],
Cell[CellGroupData[{
Cell[218318, 5516, 297, 7, 75, "Input"],
Cell[218618, 5525, 311, 8, 75, "Output"]
}, Open  ]],
Cell[218944, 5536, 323, 9, 53, "Text"],
Cell[CellGroupData[{
Cell[219292, 5549, 443, 9, 75, "Input"],
Cell[219738, 5560, 261, 6, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[220036, 5571, 212, 4, 45, "Input"],
Cell[220251, 5577, 694, 19, 99, "Output"]
}, Open  ]],
Cell[220960, 5599, 406, 9, 86, "Text"],
Cell[221369, 5610, 688, 19, 100, "Text"],
Cell[222060, 5631, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[222158, 5636, 221, 6, 79, "Input"],
Cell[222382, 5644, 148, 4, 47, "Output"]
}, Open  ]],
Cell[222545, 5651, 996, 28, 128, "Text"],
Cell[CellGroupData[{
Cell[223566, 5683, 1446, 39, 156, "Input"],
Cell[225015, 5724, 39527, 666, 302, "Output"]
}, Open  ]],
Cell[264557, 6393, 377, 7, 51, "Text"],
Cell[264937, 6402, 633, 19, 100, "Text"],
Cell[265573, 6423, 73, 1, 45, "Input"],
Cell[265649, 6426, 138, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[265812, 6431, 2227, 64, 211, "Input"],
Cell[268042, 6497, 41142, 694, 260, "Output"]
}, Open  ]],
Cell[309199, 7194, 214, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[309438, 7202, 296, 9, 80, "Input"],
Cell[309737, 7213, 73, 1, 45, "Output"]
}, Open  ]],
Cell[309825, 7217, 129, 1, 51, "Text"],
Cell[309957, 7220, 211, 6, 80, "Input"],
Cell[310171, 7228, 1811, 41, 274, "Text"],
Cell[311985, 7271, 651, 19, 100, "Text"]
}
]
*)


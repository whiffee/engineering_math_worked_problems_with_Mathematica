(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    140188,       3248]
NotebookOptionsPosition[    133909,       3044]
NotebookOutlinePosition[    134297,       3061]
CellTagsIndexPosition[    134254,       3058]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
Note: In this problem set, expressions in green cells match corresponding \
expressions in the text answers.\
\>", "Text",
 CellChangeTimes->{3.76909282180145*^9}],

Cell[TextData[{
 StyleBox["1-7 Even and odd functions\n",
  FontWeight->"Bold"],
 "Are the following functions even or odd or neither even nor odd?"
}], "Text",
 CellChangeTimes->{{3.7531124150623713`*^9, 3.753112465850523*^9}},
 Background->RGBColor[
  0.9600061036087587, 0.9600061036087587, 0.9600061036087587]],

Cell[TextData[{
 "1. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", "x"], ",", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      RowBox[{"|", "x", "|"}]}]], ",", 
    RowBox[{
     SuperscriptBox["x", "3"], "cos", " ", "nx"}], ",", " ", 
    RowBox[{
     SuperscriptBox["x", "2"], "tan", " ", "\[Pi]x"}], ",", " ", 
    RowBox[{
     RowBox[{"sinh", " ", "x"}], " ", "-", 
     RowBox[{"cosh", " ", "x"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.753112479681735*^9, 3.7531124874092617`*^9}, {
  3.753112517905685*^9, 3.753112602287756*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ExponentialE]", "^", "2"}], "+", 
  RowBox[{"\[ExponentialE]", "^", 
   RowBox[{"-", "2"}]}]}]], "Input",
 CellChangeTimes->{{3.7531126463095827`*^9, 3.7531126835830393`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   SuperscriptBox["\[ExponentialE]", "2"]], "+", 
  SuperscriptBox["\[ExponentialE]", "2"]}]], "Output",
 CellChangeTimes->{3.7531126874677258`*^9, 3.753268798307591*^9, 
  3.7532809295999393`*^9, 3.753281698180031*^9, 3.7532818119649467`*^9, 
  3.7532818857899*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ExponentialE]", "^", 
   RowBox[{"(", 
    RowBox[{"Abs", "[", 
     RowBox[{"-", "2"}], "]"}], ")"}]}], "+", 
  RowBox[{"\[ExponentialE]", "^", 
   RowBox[{"(", 
    RowBox[{"-", 
     RowBox[{"Abs", "[", 
      RowBox[{"-", "2"}], "]"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.753112925934424*^9, 3.75311297613404*^9}, {
  3.753113033548966*^9, 3.753113035244261*^9}, {3.75326834618699*^9, 
  3.753268350474139*^9}, {3.753268381640943*^9, 3.7532684465966597`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   SuperscriptBox["\[ExponentialE]", "2"]], "+", 
  SuperscriptBox["\[ExponentialE]", "2"]}]], "Output",
 CellChangeTimes->{3.75326845010944*^9, 3.753268798366598*^9, 
  3.7532809296729803`*^9, 3.753281698290255*^9, 3.753281812116681*^9, 
  3.7532818858720293`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"x", "^", "2"}], " ", 
   RowBox[{"Tan", "[", 
    RowBox[{"\[Pi]", " ", "x"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"x", "^", "2"}], " ", 
   RowBox[{"Tan", "[", 
    RowBox[{
     RowBox[{"-", "\[Pi]"}], " ", "x"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7531127534602747`*^9, 3.753112788124196*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.753112789811247*^9, 3.753268798406893*^9, 
  3.753280929721442*^9, 3.753281698334075*^9, 3.7532818121638203`*^9, 
  3.753281885897708*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Sinh", "[", "x", "]"}], "-", 
    RowBox[{"Cosh", "[", "x", "]"}]}], ")"}], "+", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Sinh", "[", 
     RowBox[{"-", "x"}], "]"}], "-", 
    RowBox[{"Cosh", "[", 
     RowBox[{"-", "x"}], "]"}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.753112817103293*^9, 3.753112854177999*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "2"}], " ", 
  RowBox[{"Cosh", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{3.753112855841915*^9, 3.753268798457344*^9, 
  3.753280929768516*^9, 3.753281698383835*^9, 3.7532818122132187`*^9, 
  3.753281885941332*^9}]
}, Open  ]],

Cell["1. So the list would run: neither, even, odd, odd, neither. ", "Text",
 CellChangeTimes->{{3.753112879329042*^9, 3.753112890976719*^9}, {
  3.75311308801007*^9, 3.753113112641416*^9}, {3.753113308324306*^9, 
  3.753113310170823*^9}, {3.753122034517671*^9, 3.753122039052302*^9}, {
  3.753122095514353*^9, 3.753122097634346*^9}, {3.7531222533826942`*^9, 
  3.753122255437319*^9}, {3.7531224891582937`*^9, 3.7531224894856777`*^9}, {
  3.753122560427459*^9, 3.753122561315117*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell["3.Even 5.Even ", "Text",
 CellChangeTimes->{{3.753122507822768*^9, 3.7531225418518*^9}, {
  3.753123375620359*^9, 3.753123378216614*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[TextData[{
 StyleBox["8 -17. Fourier series for period p=2L\n",
  FontWeight->"Bold"],
 "Is the given function even or odd or neither even nor odd? Find its Fourier \
series."
}], "Text",
 CellChangeTimes->{{3.753123401632032*^9, 3.753123488781268*^9}},
 Background->RGBColor[
  0.9600061036087587, 0.9600061036087587, 0.9600061036087587]],

Cell["9. Graphic stepwise function.", "Text",
 CellChangeTimes->{{3.75312353938173*^9, 3.753123561378731*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell["By inspection, it is odd.", "Text",
 CellChangeTimes->{{3.753123589051086*^9, 3.753123596953511*^9}, {
  3.753123693800088*^9, 3.753123699366447*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.753123703449644*^9, 3.753123705095104*^9}, 
   3.753281867195664*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"e1", "[", "x_", "]"}], ":=", 
  RowBox[{"Piecewise", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"-", "2"}], "<", "x", "<", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"0", "<", "x", "<", "2"}]}], "}"}]}], "}"}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.753123716759605*^9, 3.753123765348481*^9}, {
  3.7532255555121326`*^9, 3.7532255573112183`*^9}, {3.753225697052616*^9, 
  3.7532257026427603`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", " ", 
        RowBox[{
         RowBox[{"-", "2"}], "<", "x", "<", "0"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"0", "<", "x", "<", "2"}]}], "}"}]}], "}"}], "]"}], ",", " ", 
   
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.753225049005206*^9, 3.753225086774181*^9}, {
  3.753225117780512*^9, 3.753225153820245*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQrWcv9ur////7GcDgw/4vi63XGMcj+Ls4EvPS9/2D
8+vPXnt9MPEvnP9yqaS4ucwfOF/rvgcn/91fcP4S4cVfbjb9hPMPR5/q3W//
A86XmS+jMOPhNzjf2zm68nLnVzhf/ndag6bnFzhfd93chqK3n+D8ByUL9a6t
+AjnZ86ZuHhO1gc4P6IuUnmN0js4X+O1ZnTIvNdwfrZfQOujxy/g/Khif1sz
s2dw/uT9LwL2b3sM59sz3QjTY3wI52fdOFSw9PMdON9mZqPErorrcH7G3Y+3
I8Uvwfn+D3TWnlA5Beeb7Z99/VXLPjh/ZfRSltzoLXC+5YfY5HvJS+D8A2pT
+9/emoKQZ9Vf/uBpCJwPAHCNuNI=
      "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAWIQbcmqv/zB0xB7BjD4YN+yKO35ju8RcL70Ojd+l6I0
OL+KNfdqqEkBnB+cxFC4V6sKzp9237NtkkATnJ9vc1fxF1sPnL/EZ8e9Df8m
wfm1K72rJL7OgfO1m99zHShdDOcvctl8fX3nFjh//fF3K+sj9sP5ez1PWVgd
Ognnv161KNMv4hKcP3et3uwvW6/D+XsS20QNtt9B+Edk5lV/oYdw/pkLV1wu
zXoM5xeeNlfrF3uGcP95F9G0Ey/g/J4121ew+7yG8xknX/E8zPoOzhdfufr4
Eo8PcP615Q3KrB0f4fzo1VptRY8+wfk2s9mtj6p+gfMf9+/8ptLyFc7folz/
WvHONzj/weJyIxbZH3D+JQ3Xhs8VP+F8+VmuCif2/kLEz6rIn5Z/fsP5l/c7
3dwR+hfOzz4Yxy074x+c79Owq4rP5z+cr2cv9ur/fwQfAEgWvXE=
      
      "]]}, {}}, {{}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{220.99479166666652`, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-2, 2}, {-1., 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.753225155349588*^9, 3.753225274373591*^9, 
  3.75322538681419*^9, 3.753281886076735*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FourierSeries", "[", 
   RowBox[{
    RowBox[{"e1", "[", "x", "]"}], ",", "x", ",", "5", ",", 
    RowBox[{"FourierParameters", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       FractionBox["\[Pi]", "2"]}], "}"}]}]}], "]"}], "//", 
  "ComplexExpand"}]], "Input",
 CellChangeTimes->{{3.7532266901423063`*^9, 3.753226808582755*^9}, {
   3.7532269480442333`*^9, 3.7532269523462763`*^9}, 3.753231892940027*^9, {
   3.7532324170190277`*^9, 3.753232446713828*^9}, 3.7532685407765408`*^9, 
   3.753268706461334*^9},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"4", " ", 
    RowBox[{"Sin", "[", 
     FractionBox[
      RowBox[{"\[Pi]", " ", "x"}], "2"], "]"}]}], "\[Pi]"], "+", 
  FractionBox[
   RowBox[{"4", " ", 
    RowBox[{"Sin", "[", 
     FractionBox[
      RowBox[{"3", " ", "\[Pi]", " ", "x"}], "2"], "]"}]}], 
   RowBox[{"3", " ", "\[Pi]"}]], "+", 
  FractionBox[
   RowBox[{"4", " ", 
    RowBox[{"Sin", "[", 
     FractionBox[
      RowBox[{"5", " ", "\[Pi]", " ", "x"}], "2"], "]"}]}], 
   RowBox[{"5", " ", "\[Pi]"}]]}]], "Output",
 CellChangeTimes->{{3.753226749389237*^9, 3.7532268099262943`*^9}, 
   3.753226955529523*^9, 3.75323189592445*^9, {3.753232421329466*^9, 
   3.753232449204898*^9}, {3.753268543238997*^9, 3.753268571550331*^9}, 
   3.753268834928138*^9, 3.75328188646949*^9}]
}, Open  ]],

Cell[TextData[{
 "The function is odd. The period of the problem is p = 4, so L=2. Setting ",
 StyleBox["FourierParameter", "Input"],
 "s to correct values is necessary to get the text form of the answer, shown \
above. Helpful was ",
 StyleBox["https://classes.engineering.wustl.edu/jemt3170/Mathematica%20-%\
20Fourier%20Series.pdf. ",
  FontSlant->"Italic"],
 " If the period is already expressed in terms of factors of pi, then the \
second ",
 StyleBox["FourierParameter", "Input"],
 " may be set to some integer. On the other hand, if the period (and \
integration limits) are in terms of non-pi rationals, as here, then the \
second ",
 StyleBox["FourierParameter", "Input"],
 " probably needs some expression of pi in it. (It is interesting to note \
that if -",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["\[Pi]", "2"], " "}], TraditionalForm]]],
 "instead of ",
 Cell[BoxData[
  FormBox[
   FractionBox["\[Pi]", "2"], TraditionalForm]]],
 "is chosen as the second ",
 StyleBox["FourierParameter", "Input"],
 ", exactly the same answer expression is produced.) I will set forth a rule \
for this sort of problem: the initial value of the second ",
 StyleBox["FourierParameter", "Input"],
 " will be \[Pi], and that value will be adjusted by dividing by L."
}], "Text",
 CellChangeTimes->{{3.753230858486045*^9, 3.753230886603693*^9}, {
   3.7532309466592627`*^9, 3.753231008377659*^9}, {3.753231853358275*^9, 
   3.753231857412877*^9}, {3.753232165418704*^9, 3.7532323626210938`*^9}, {
   3.75323239938771*^9, 3.753232400771793*^9}, {3.753268595917263*^9, 
   3.753268661728155*^9}, 3.75326875823662*^9, {3.753271757725031*^9, 
   3.753271761202104*^9}, {3.753271832784486*^9, 3.753271887011279*^9}, {
   3.753276594654683*^9, 3.753276596647859*^9}}],

Cell[TextData[{
 "11. f(x)=",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "2"], "  ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "<", "x", "<", "1"}], ")"}]}], ",", " ", 
    RowBox[{"p", " ", "=", " ", "2"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.753232892164494*^9, 3.753232924390605*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.753232963221085*^9, 3.753232964954464*^9}, 
   3.753281861730875*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"e1", "[", "x_", "]"}], " ", ":=", " ", 
  SuperscriptBox["x", "2"], " ", 
  RowBox[{"(*", 
   RowBox[{"/;", " ", 
    RowBox[{
     RowBox[{"-", "1"}], "<", "x", "<", "1"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.753232975712242*^9, 3.753232991840136*^9}, {
  3.75323306496555*^9, 3.753233075630122*^9}, {3.7532331375078077`*^9, 
  3.7532331400756083`*^9}, {3.753233319311295*^9, 3.753233350493075*^9}, {
  3.753295542213202*^9, 3.753295551290992*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"e1", "[", "x", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.753233094512884*^9, 3.753233111532592*^9}, {
  3.7532333674044456`*^9, 3.753233395268972*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
pkP///4h8P//kP8BOduYzQ==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{201.505208333333, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-1, 1}, {0., 0.9999999183673486}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.753233397085299*^9, 3.753281886535671*^9, 
  3.7532955213792887`*^9, 3.753295560566106*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FourierSeries", "[", 
   RowBox[{
    RowBox[{"e1", "[", "x", "]"}], ",", "x", ",", "3", ",", 
    RowBox[{"FourierParameters", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "\[Pi]"}], "}"}]}]}], "]"}], "//", 
  "ComplexExpand"}]], "Input",
 CellChangeTimes->{{3.7532334501732893`*^9, 3.7532335154633512`*^9}, {
  3.7532335803431883`*^9, 3.7532335869346523`*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "3"], "-", 
  FractionBox[
   RowBox[{"4", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"\[Pi]", " ", "x"}], "]"}]}], 
   SuperscriptBox["\[Pi]", "2"]], "+", 
  FractionBox[
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "\[Pi]", " ", "x"}], "]"}], 
   SuperscriptBox["\[Pi]", "2"]], "-", 
  FractionBox[
   RowBox[{"4", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"3", " ", "\[Pi]", " ", "x"}], "]"}]}], 
   RowBox[{"9", " ", 
    SuperscriptBox["\[Pi]", "2"]}]]}]], "Output",
 CellChangeTimes->{{3.7532335044193563`*^9, 3.753233517539165*^9}, 
   3.7532335887906923`*^9, 3.753281886658407*^9, 3.753295524491981*^9, 
   3.7532955641368837`*^9}]
}, Open  ]],

Cell["The function is even. ", "Text",
 CellChangeTimes->{{3.753233780463768*^9, 3.753233820237295*^9}, {
   3.753233869859377*^9, 3.753234102668396*^9}, {3.753234133419304*^9, 
   3.753234175650176*^9}, {3.753234212075479*^9, 3.753234214464673*^9}, {
   3.753234287985022*^9, 3.753234323924946*^9}, {3.7532343695741796`*^9, 
   3.753234374043687*^9}, {3.753268918920898*^9, 3.753268921847237*^9}, {
   3.753271917504569*^9, 3.753271971533311*^9}, 3.753276614686077*^9, 
   3.769092025123809*^9},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[TextData[{
 "The above answer matches the text. The problem states that p = 2, so L = 1. \
 The value of the second ",
 StyleBox["FourierParameter", "Input"],
 " determined by the rule stated above is successfully used here."
}], "Text",
 CellChangeTimes->{3.769092030211207*^9}],

Cell["13. The problem description is in the form of a plot.", "Text",
 CellChangeTimes->{{3.753234452466242*^9, 3.753234473904008*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7532344996515903`*^9, 3.753234501050686*^9}, 
   3.753281856651795*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"e1", "[", "x_", "]"}], ":=", 
  RowBox[{"Piecewise", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", " ", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], "<", "x", "<", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"0", "<", "x", "<", 
        FractionBox["1", "2"]}]}], "}"}]}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.753234531615996*^9, 3.753234573077147*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", " ", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], "<", "x", "<", "0"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"0", "<", "x", "<", 
         FractionBox["1", "2"]}]}], "}"}]}], "}"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", 
      FractionBox["1", "2"]}], ",", 
     FractionBox["1", "2"]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7532346085577173`*^9, 3.753234654554571*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQA2IQrWcv9ur///v7GaAgJEu94+cvBL9qqoXa568I/vHX
UUnPXiP4CTPm3zpzHcGf+FHj9Mz1CP6XxdZrjOMR/F0ciXnp++7B+fVnr70+
mHgXzn+5VFLcXOYOnK9134OT/+4tOH+J8OIvN5tuwvmHo0/17re/AefLzJdR
mPHwGpzv7RxdebnzKpwv/zutQdPzCpyvu25uQ9HbS3D+g5KFetdWXITzM+dM
XDwn6wKcH1EXqbxG6Rycr/FaMzpk3mk4P9svoPXR4xNwflSxv62Z2TE4f/L+
FwH7tx2G8+2ZboTpMR6E87NuHCpY+nkPnG8zs1FiV8V2OD/j7sfbkeKb4Hz/
BzprT6isgvPN9s++/qplHpxv+SE2+V5yC5yfs2vJy/IjzXD+vJbX+YKqCD6z
ZGWNy7NGOH9ms4Z26MU6OP+A2tT+t7dKEPyFZ3lPH9bFyQcAXF2xig==
      "]], 
     LineBox[CompressedData["
1:eJxFxWlIkwEYAOBVzoV2Uc0QkZxa2SQLabo5Y2Gfy8nK0kZmsvSrrAgpF12D
crE1FIbDilEbYuww53SesSUbacM2MtJ26crNSChKUMjRRbTqR+/74+FhkBfK
Ty+nUCjcv/6t0Nd9tH9j8/6fYuWvJSR8WEqtD4h2H4I/DOYZmneK4AqS0uBk
VsGaWYHyzjoSNgrtkb7fEjhbvpgwclkOV3M3rOxJV8CqpTyqdgJfOHkzdmm7
Eh4gVke3hZtgdnx2WE20wHpicKq3+R7c614wN1a2w07BC3bBMzM836U/d7By
AG7rydFFH9tgR62SvsvmgKUbHwTK1o/CLyf9hFfrghvG87eqk57DxgmCXufx
wKpuWydNOA4vu+sXuKiv4E1mi9tYMgkHH8kyqE2v4eMWplLy3gsX6mjcsS1+
eE795GumIgAPZTTOM2aC8DvD1dy41GnYm1UsW7oWgjdri9M8zjewpuvYD86v
t7DvaVHILgrD50fFian3IzDZHtI42vCqG0fSqw14CaeUo7Pimf2sM8lj+MzD
VS76F1woG5auEc7C+8SseOthvKCwr/XAUTzru6lTReJxF1uDCddx54mzubQO
fGjPnLPDgneniAX8flw7VVFz24FfKeO1rPDh9TuGkw3T+KlElqkogpe7mY5b
n3CBybSfsYjvlaf5RqJ4fq1OXPMTz+ElfY7F8D9cmc1A
      "]]}, {}}, {{}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{204.05989583333306`, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->NCache[{{
      Rational[-1, 2], 
      Rational[1, 2]}, {0., 0.49999997959183673`}}, {{-0.5, 0.5}, {0., 
    0.49999997959183673`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7532346576555843`*^9, 3.753281886733966*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FourierSeries", "[", 
   RowBox[{
    RowBox[{"e1", "[", "x", "]"}], ",", "x", ",", "3", ",", 
    RowBox[{"FourierParameters", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}]}]}], "]"}], "//", 
  "ComplexExpand"}]], "Input",
 CellChangeTimes->{3.753234774760304*^9},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "8"], "-", 
  FractionBox[
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "\[Pi]", " ", "x"}], "]"}], 
   SuperscriptBox["\[Pi]", "2"]], "-", 
  FractionBox[
   RowBox[{"Cos", "[", 
    RowBox[{"6", " ", "\[Pi]", " ", "x"}], "]"}], 
   RowBox[{"9", " ", 
    SuperscriptBox["\[Pi]", "2"]}]], "+", 
  FractionBox[
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", "\[Pi]", " ", "x"}], "]"}], 
   RowBox[{"2", " ", "\[Pi]"}]], "-", 
  FractionBox[
   RowBox[{"Sin", "[", 
    RowBox[{"4", " ", "\[Pi]", " ", "x"}], "]"}], 
   RowBox[{"4", " ", "\[Pi]"}]], "+", 
  FractionBox[
   RowBox[{"Sin", "[", 
    RowBox[{"6", " ", "\[Pi]", " ", "x"}], "]"}], 
   RowBox[{"6", " ", "\[Pi]"}]]}]], "Output",
 CellChangeTimes->{3.753234777798812*^9, 3.753281887029848*^9}]
}, Open  ]],

Cell[TextData[{
 "The function is neither even nor odd. The period is 1, so that makes L = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", "2"], "."}], TraditionalForm]]],
 "  The above answer matches the text, and comprises the two series which \
make up the function. The choice of second ",
 StyleBox["FourierParameter", "Input"],
 " agrees with the rule cited in the last note. The Mathematica command \
format for ",
 StyleBox["FourierSeries", "Input"],
 ", calling as it does for a specific number of terms, does not allow the \
answer to express the unbounded nature of the series."
}], "Text",
 CellChangeTimes->{{3.7532349066595917`*^9, 3.7532349748638983`*^9}, {
   3.753235015582769*^9, 3.753235064341517*^9}, 3.753235130630002*^9, {
   3.75323516823421*^9, 3.753235258143466*^9}, {3.753270514192629*^9, 
   3.753270521288066*^9}, {3.753276631573501*^9, 3.753276637541074*^9}}],

Cell["15. The problem description is in the form of a plot.", "Text",
 CellChangeTimes->{{3.753235334949888*^9, 3.75323534535633*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.753235367309671*^9, 3.753235369056652*^9}, 
   3.753281851476075*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"e1", "[", "x_", "]"}], ":=", 
  RowBox[{"Piecewise", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "x"}], "-", "\[Pi]"}], ",", " ", 
       RowBox[{
        RowBox[{"-", "\[Pi]"}], "<", "x", "<", 
        RowBox[{"-", 
         FractionBox["\[Pi]", "2"]}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["\[Pi]", "2"]}], "<", "x", "<", 
        FractionBox["\[Pi]", "2"]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "x"}], "+", "\[Pi]"}], ",", 
       RowBox[{
        FractionBox["\[Pi]", "2"], "<", "x", "<", "\[Pi]"}]}], "}"}]}], "}"}],
    "]"}]}]], "Input",
 CellChangeTimes->{{3.753235593086067*^9, 3.753235640394785*^9}, {
   3.753235719504148*^9, 3.75323571988037*^9}, {3.753269355343266*^9, 
   3.75326940336968*^9}, {3.753269479071045*^9, 3.753269479236989*^9}, 
   3.7532695248600807`*^9, {3.753269556210108*^9, 3.7532695573604193`*^9}, {
   3.753269604150642*^9, 3.753269605397317*^9}, {3.753269665187305*^9, 
   3.753269671313078*^9}, {3.7532697589656467`*^9, 3.753269853870013*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"e1", "[", "x", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.753235778568869*^9, 3.7532358223327417`*^9}, {
  3.753269626805539*^9, 3.753269634491515*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJxlx30s1HEAx/FzwrlkcdVCechSs9U85I/M8jQPp/K0SGUrD5lb40xis+Up
5Zznk6dxXctTNiEPrTQ+P0lRmzsRWlM3sS5lnXC/3/cu6fq7Pz57f14O8cLI
q2wWi+Ws37+G8M39dQ6mlP5OfvHIH94ryFVzbPXeb+9kW30ZSpFaus9ab2Vl
6AeJEFnj7xhXS739JhafSHLRElTXlczWO2O5s1VSgT8B9tazixyKVbZuIZXI
0OvnttbTzKHyGrJf1ku6YeMVLUs6zKHu2w1LayWATWjCnmqeCaWijbd9ryuQ
vuq6ssQzply2qsL70uaRtJnS52llRI1/irnFdlRCdEBYE2G6g/LxO6dri1+C
wZTrfNlOQyo2ja8euKDCw5Zn7iWMAUU5OBdQrT+wquwqKF1hUdH1zs0LqWrw
ot4mJi1s46DRkH9l0i+0O41uejzfQrH7WC8l2sA3y1PB4UM6BAWFXGm7o8Fn
geNU3oAOEerEuRvlGrynOBcfP9LhUkNuaECtBiOp09cs7+kg/N7vtdSqQcOb
5IqZHB3qKuysDo1pwC+ono3x0eHr3MaU1JBGx5oqMW5Ui6JkmX9NHg1Z8ORq
1XMtqiwGBxNFNGpkfZkv+rRoHJxxPVFJI/9sjsixRYtuM679tIzGhQ5e53Kh
FnM9Gb93g4Zp3Kl1QaAWRwh/oHSLhkBRnZ8+QfC6eMOpMJtBTLg3j1AE86b8
mq0CBsGKlZbcpwSqYqlhVgkDJ4XveGk7AVccqBQ0MViS/zRvv01wRlzfEDbM
YCas8f6xmwSx3FWTiVcMRuWBbv0ZBCli30w/OYMHcmnUSAJBuXgl0kPJ4Ir8
dNNHXwKF2MvMhk0QHkYfiz9JoORWZd/lEnjLH0DlQrAmXlbt4hEcDwuNEB4l
YO/0PF9k87//AkfXd88=
      "]], LineBox[CompressedData["
1:eJx1xVlMkgEcAHCUZg+m8kBBpnZYTM206HBFKGsMWyqaR5Glrq/Z8taZWps5
I12UuvIiCmYb4przijQtLUvntKV8QyLXimmRMeeMqYTgVDoe/P+fevjtt5PI
iU11plAokX/92y266WoxY/nN+qtkjAvVA/9CPvGnOezwe2Fcn9SK95KOSO+f
uIxMyA0w4GdIag+/FxcIO06OqvHDZOLn0804nVSvJctwnSaFf70Qj9L0jbex
cf5Y/tyWFhvcINrTHNSI26cnUgVyvHXt6FRBBb45mKLTZ+Cm6sqemkBccrZJ
7N6+BGuME0wXtRVWhwwVFlVaYF1SZd983gJ8gttxK81mhqWcRIv1+SwcnuNq
Yrw2we3bxzmhOUbY54esfybdAD+0yl1LJXr4t+Mel2cfgW9onb62Up/CRM3k
o5jq9rD1ZaE+B7Ia3sG1Tt0MJkcPZ892aue1Bjgg3NcW/9gID1wyOSuqTLCS
Wt8yqZ2FWdnc8YpRM8zcJqujn1uAB3kbPb4VWuD+CMsIkWuF53W04cVruG9i
0JD4Ji65kvZWWYPHlk+9MHbhpv7RZmIZd2erKgjxEsx7OXBn8S6ez5u6La7F
Pwk9y5QqXJlxv9g4jB9pKs4iXG1wCjMhmqjDWbWZuy4qcLNbmTVFhZdQO+VJ
XXiDmTYj0uOGobHSaLodVoVNxwm98MzeFVbUbnylI0Bz6hDuKZdsFcTjojz+
s+N1+I658+UcBT5zOV90TIUXXVA6QrpwaTgl4qAeTx5k+LANOIsbvLB/Gu9m
Jz8I+oWXtBWk71vFBX5V3MANy7B7o4q2dxP+0fvVd386rpB96Pbz+v9/AJQK
nig=
      "]], LineBox[CompressedData["
1:eJwBEQPu/CFib1JlAgAAADAAAAACAAAALI4CXSYs+T8EzIVL0Bf5P/QIGjAl
NPk/PFFueNEP+T+8gzEDJDz5P3TWVqXSB/k/hP5I1iJE+T+sWz/S0//4PxT0
d3wgVPk/HGYQLNbv+D/cbo9PH1z5P1Tr+FjX5/g/pOmmIh5k+T+McOGF2N/4
PzPf1cgbdPk//Xqy39rP+D9SyjMVF5T5P96PVJPfr/g/1dmvyO2b+T9bgNjf
CKj4P1jpK3zEo/k/2HBcLDKg+D9dCCTjcbP5P9NRZMWEkPg/aEYUsczS+T/I
E3T3KXH4P3/C9EyCEfo/sZeTW3Qy+D+surWE7Y76P4Sf0iMJtfc/B6s39MOJ
+z8pr1C0Mrr2P2JNsaHuqf0/zgzXBgia9D8O1aeNzqX/PyKF4BoonvI/Lw8K
JBbmAEDSO3RgynfwPznL0g1B9AFAfIfFGem27D/r+dmWRvACQLTMqPXSxug/
cAkcB4sBBECgjqA0wYHkP5+LnBaqAAVA5IWe9kSF4D8upa8yxfoFQFA/pAyx
Odk/kZ/9NR8KB0A4bDTy4L7QP5wMithTBwhAwAeiu3eqwT+PHTR2vgsIQJD4
AOHNY8E/gi7eEykQCEBg6V8GJB3BP2dQMk/+GAhAEMsdUdCPwD8ylNrFqCoI
QMAcM81R6r4/yBsrs/1NCEAAKiIjtH+6P/MqzI2nlAhAoEQAz3iqsT/mO3Yr
EpkIQEAmvhklHbE/2EwgyXydCEAACHxk0Y+wP75udARSpghAgJbv81Pqrj+I
shx7/LcIQACk3km2f6o/HjptaFHbCECAvrz1eqqhPxFLFwa83whAwIE4i9OP
oD8EXMGjJuQIQACKaEFY6p4/6X0V3/vsCECAl1eXun+aP7TBvVWm/ghAALI1
Q3+qkT+n0mfzEAMJQABxWtxg6o4/muMRkXsHCUAAfkkyw3+KP38FZsxQEAlA
AJkn3oeqgT9yFhBquxQJQABMLWjUf3o/ZCe6ByYZCUAAaAsUmapxP1c4ZKWQ
HQlAAATTf7uqYT9KSQ5D+yEJQAAAAM7jNYE+Lflk3g==
      "]]}, {}}, {{}, {}, {}}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{216.54947916666657`, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{-Pi, Pi}, {-1.5692208678526076`, 
     1.5693747655546195`}}, {{-3.141592653589793, 
    3.141592653589793}, {-1.5692208678526076`, 1.5693747655546195`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7532358244805183`*^9, 3.753269416382409*^9, 3.7532694910286407`*^9, 
   3.753269534102779*^9, 3.753269567009691*^9, {3.753269616214046*^9, 
   3.7532696367087917`*^9}, 3.753269681685293*^9, 3.7532698335740547`*^9, 
   3.7532698638760147`*^9, 3.753281887250565*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FourierSeries", "[", 
   RowBox[{
    RowBox[{"e1", "[", "x", "]"}], ",", "x", ",", "5", ",", " ", 
    RowBox[{"FourierParameters", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}], "//", 
  "ComplexExpand"}]], "Input",
 CellChangeTimes->{
  3.7532701852604628`*^9, {3.753270291942774*^9, 3.7532702939726067`*^9}, {
   3.753270337700006*^9, 3.753270341737894*^9}, {3.753270386233283*^9, 
   3.7532703923761377`*^9}, {3.753270429918476*^9, 3.7532704408044147`*^9}, {
   3.753270875590221*^9, 3.7532709053863077`*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"4", " ", 
    RowBox[{"Sin", "[", "x", "]"}]}], "\[Pi]"], "-", 
  FractionBox[
   RowBox[{"4", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"3", " ", "x"}], "]"}]}], 
   RowBox[{"9", " ", "\[Pi]"}]], "+", 
  FractionBox[
   RowBox[{"4", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"5", " ", "x"}], "]"}]}], 
   RowBox[{"25", " ", "\[Pi]"}]]}]], "Output",
 CellChangeTimes->{
  3.753270191553608*^9, 3.75327029972871*^9, 3.753270345874632*^9, 
   3.753270397599749*^9, {3.7532704334571238`*^9, 3.753270442660885*^9}, {
   3.7532708828190517`*^9, 3.753270909068137*^9}, 3.753281888010421*^9}]
}, Open  ]],

Cell["The function is odd. ", "Text",
 CellChangeTimes->{{3.7532701382067423`*^9, 3.753270152564642*^9}, {
   3.7532704976425753`*^9, 3.753270500672799*^9}, {3.753270652520482*^9, 
   3.753270657136046*^9}, {3.753270731491935*^9, 3.753270741491341*^9}, {
   3.7532708312542057`*^9, 3.753270858012734*^9}, {3.753276671810931*^9, 
   3.7532767066322737`*^9}, 3.769092136183845*^9},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[TextData[{
 "The period is 2\[Pi], so that makes L = 1*\[Pi]. The form of the answer \
shown above matches the text. Adjusting the second ",
 StyleBox["FourierParameter", "Input"],
 " brings the parameter values to default values, so it would not be \
necessary to show them at all in this case."
}], "Text",
 CellChangeTimes->{3.769092138663748*^9}],

Cell["17. The problem description is in the form of a plot.", "Text",
 CellChangeTimes->{{3.7532710105251617`*^9, 3.753271022131274*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7532710625022163`*^9, 3.753271063802623*^9}, 
   3.753281846404282*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"e1", "[", "x_", "]"}], ":=", 
  RowBox[{"Piecewise", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "+", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"-", "1"}], "<", "x", "<", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "x"}], "+", "1"}], ",", 
       RowBox[{"0", "<", "x", "<", "1"}]}], "}"}]}], "}"}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.753271115063966*^9, 3.7532711762429743`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"e1", "[", "x", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.753271197451373*^9, 3.75327120025736*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJxlzmkw3HcYB3DXdHLQNpPMyuo6G1ccyUQjNHhkKmSbNBIrwW52EiuOCLXj
mEQmdYSmjqCChmDRJSWOkrapWU0fliIRcWSxWcISZA/+P0SaVCu6fd0Xz3y/
n5nvi8ecF+MXqqOlpXVQc/+lI9BUGxsENXW4XRnq4R9pnfHXmsbNp3lTdC+4
UuRi9eq1xvojuT/R/aFHzebNqzV23VFTTj8P54orZI/HNB50ar5Jj4f8ZZu+
kh8Jtpd27s+hp8Oq8GCD01mCKanZl7PohSDaFPxl+O8Unosn9Ex6NST3j6o7
ghdxUyGzamn5Z1DW0A0PMBawdXCfj48Jwu6pI5s/eK7CwLQJWWd2F1RvF64+
u6ZEfkucQ/HqQ+jkPMpBUODqt6O92toDwKhgmBVPz2NvRzcOuA3D0c84iU8z
5zAykWkQtCAB07/DUmyZsyjevG+jIXoMHJrKU2IXZ/COsOudkaUM5PFVjqO1
0+hJe/A9q2kCLpTlC8si5ejYM9HavXsKApOCPm6wmESJJ4uqo+Rgo7bl+AvG
MWrLxeGRvTNw8fiJr2deSPGRNODB+7kvgB3n6+7sPIos78Dp2dlZKEDFCbz/
FJ0rswMqd80D6EhPO2oPofxdgSQi+SVESsX8mlePcZ45IKR1KsCtJHWn6HIP
tpRMJQ6ZqyDi+fJ4kKEY72ToZtpeUYOv3L6xd5cI/wxhq8LaFsAZS8dU6U1o
4HXdr8WQAiN9PaXAqQk9MGZbN4OC9cCoNb+ZRuR/GjQoM6ega8XNuA0aUbLX
/riePQUsq0le9lo9lhoPMwM8KeDnmFF2/Dq0fWN8aD2CgjpOjV40pxoP3/1l
D1NEwY1aA5r5lmq8ZFlBcVGzf51gPdIqxLrKjMbYLgpc8rw/d6cJUf8Wx67s
CQXd4pd5BkNVKEnTtiYzGrP8nc/kCJDH/cKkaCsB1yVuyGRIISZ9OKc/fYZA
lKhaeamrAB1k9zwnggkI0tUx2ywLcFyYEj8WRkCXnnjVaz4fXQ4wJvr5BErS
bOxODeXiCpdVL0on0G5VlLcoS8fQ+g5mYQMByzaLMrOyNNyekPdVXguBLN/m
Whb3Goo9uC1Z9wn8sPRdWhwmo+nw252p7QSeFOgqtj5MQOnbPYpoCYHi30y0
Y4/G4Tfi9Y8uPCPAm3M1kvbzcf+NPt/zkwRU0fLiIzXheNM0/Fe2gkAS0vp2
3OXhIeUn6lOLBCwsbq91cDlI7umYnlwhwPzjvbPs8JNYfnXQ79gbzb9V/QZ9
ne54zFtw3eef//tfubz83Q==
      "]], LineBox[CompressedData["
1:eJwVk3841Accx09zNGo1drfRahEtLIz8Vm/TkfNcKpEfmTCnJEuMZNt15Ud5
5mHI7yfzcMchR0tcHtaNx2+b/P59LuTHXd13DyrU2Hd/fJ7P83pe7/efb52g
q+7sbRQK5Rh5//+E4pAF0VsXeB1s+7h5ncAeofMuRuQ5lPutTbWtEoijhg95
HgnAuwzDim6CwPwjy5JkEzZYnX4xz2QEzgZRrjUZXkbhVqrj0AsC2dPMpIzd
kfjmysq4ZIJAT51x+FepPyCjWL9sdpjAtlRNjzb165gb9Ypa7CNw1X5KZ0Pl
J9xxalRfbifAY4kkNZu38de+RHtqLQGjeEJNHJ2JhXjB1plgAn52mturdO9B
P+RpjsyfQMqKJTW/9x6CXYZN4n0IKL7jbEUZZOP5DuWAWjcCvzN2rn45lYvx
rAtiug0BaxWjqTRGIf4uo9+a2EmgmPFopDqZh7ruhG3segWq2xXlN72rkagZ
SI1VU6CJ2WVt2/wEHXXzIlH7S8grikPdvJvh5JnDfhkqx/0q44LVx+3I8zgy
dltDhsbAJJppfQ/SLxZumPcvIu6TvKFTGn1oiTanjcYsoOfZIKM/fwD5OVlT
2WbzuNZtdTCNPgwX7bkrotU58HoZtJCOURjnfvu6p2AWKQ/qBaqsCTQY8Ize
+8xAKXOQ2UKVgFtHO7/vXyk+La9s57lI0V8liKj7fhrDZdwD1LvP4VGzKXpN
TOJ8pWFS5MwMXMsrVrTtxmFfoGrXqj+Hu53/JEfXjmA27ckbvYQXsJWmaNS9
HUTtgZtyncl55IqUDBpP9ENact1Mee8iuBE6lsQvveg/5MRdiV2CyE+++fXn
Xfgi32l/R5MMCTlLnOntrciu8Fm3eS+HwDNP+7NdYgw8dRwTeb7CJSWZhY37
Y4T96a++N1eB00uariacUgT9NpbdeF8B6YchGZZ6pfD92UPXr0SBAEPR+NEu
PlxsXG0KhApww/zCWHQ+9B5aXNRqVUD8ipcSKizBZNGOFtqyAg7LFr0lkiKw
uA1xH7EIcN9UC0w52Tjub6EiPEOgyMrDBl1ZsLWvST/pRUAcu9Z5kp6FQ2t8
QUoQAco7B/llYSaUI9KH1W6Q/a2+w3zJr2i6cMlMtZTM715km3OSUHt0tqm0
ksxnmt45TU/Egz3+TOeHJNNuCMKF8cgfORuQ2Ej2tdTkZRIuYk4h9YMB0jt5
S605MQg/3KBVMkp65pJulDAKweoWfEcJ6d3i2FWSCLi3GzbeWiJZaD10nBMC
Jp9/QofcHaXe11ckCYBD/P4BMblLCnf9Dx/OOVgFFvgHbJCs92NGIscZxqDL
trZIplD6xUvsY/8BI93yEQ==
      "]]}, {}}, {{}, {}, {}}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{218.35416666666669`, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-1, 1}, {0., 0.9995458249342817}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.753271201861274*^9, 3.753281888084939*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FourierSeries", "[", 
   RowBox[{
    RowBox[{"e1", "[", "x", "]"}], ",", "x", ",", "5", ",", " ", 
    RowBox[{"FourierParameters", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "\[Pi]"}], "}"}]}]}], "]"}], "//", 
  "ComplexExpand"}]], "Input",
 CellChangeTimes->{{3.753271278198614*^9, 3.7532712827420063`*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], "+", 
  FractionBox[
   RowBox[{"4", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"\[Pi]", " ", "x"}], "]"}]}], 
   SuperscriptBox["\[Pi]", "2"]], "+", 
  FractionBox[
   RowBox[{"4", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"3", " ", "\[Pi]", " ", "x"}], "]"}]}], 
   RowBox[{"9", " ", 
    SuperscriptBox["\[Pi]", "2"]}]], "+", 
  FractionBox[
   RowBox[{"4", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"5", " ", "\[Pi]", " ", "x"}], "]"}]}], 
   RowBox[{"25", " ", 
    SuperscriptBox["\[Pi]", "2"]}]]}]], "Output",
 CellChangeTimes->{3.753271287136475*^9, 3.753281888934367*^9}]
}, Open  ]],

Cell["The function is even. ", "Text",
 CellChangeTimes->{{3.753271231087481*^9, 3.753271250446486*^9}, {
   3.753271399199559*^9, 3.753271470481935*^9}, {3.753276759471982*^9, 
   3.753276763237122*^9}, 3.769092214845468*^9},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[TextData[{
 "The period is 2, so L =1. This makes the second ",
 StyleBox["FourierParameter", "Input"],
 " equal \[Pi], according to the rule proposed previously. The resulting \
answer, above, matches the text."
}], "Text",
 CellChangeTimes->{3.7690922196929083`*^9}],

Cell[TextData[{
 "19. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
    "Show", " ", "that", " ", "the", " ", "familiar", " ", "identities", " ", 
     
     SuperscriptBox["cos", 
      RowBox[{"3", " "}]], "x"}], ",", " ", 
    RowBox[{
     SuperscriptBox["sin", "3"], " ", "x"}], ",", " ", 
    RowBox[{
     SuperscriptBox["sin", "4"], " ", "x"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " can be interpreted as Fourier series expansions. Develop co",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["s", "4"], " ", 
    RowBox[{"x", "."}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.753276846137061*^9, 3.753276875379298*^9}, {
  3.753277204605974*^9, 3.753277230364213*^9}, {3.7532794292638817`*^9, 
  3.753279492601049*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7532768961127043`*^9, 3.753276897702242*^9}, 
   3.753281841588882*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"e1", "[", "x_", "]"}], ":=", 
  SuperscriptBox[
   RowBox[{"Cos", "[", "x", "]"}], "3"]}]], "Input",
 CellChangeTimes->{{3.753276918285252*^9, 3.75327693414671*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"e1", "[", "x", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7532769760977507`*^9, 3.75327698204773*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{264.8463541666662, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{-Pi, Pi}, {-0.9999999999999754, 
     0.9999996494055882}}, {{-3.141592653589793, 
    3.141592653589793}, {-0.9999999999999754, 0.9999996494055882}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.753276985638473*^9, 3.753281889092206*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FourierSeries", "[", 
   RowBox[{
    RowBox[{"e1", "[", "x", "]"}], ",", "x", ",", "5", ",", " ", 
    RowBox[{"FourierParameters", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}], "//", 
  "ComplexExpand"}]], "Input",
 CellChangeTimes->{{3.753277084187038*^9, 3.753277084457595*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"3", " ", 
    RowBox[{"Cos", "[", "x", "]"}]}], "4"], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"3", " ", "x"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.753277090426259*^9, 3.753281889550682*^9}]
}, Open  ]],

Cell[TextData[{
 "The cos function is even. The period is 2\[Pi], so L = \[Pi]. The form \
shown above agrees with text. The rule for second ",
 StyleBox["FourierParameter", "Input"],
 " still works."
}], "Text",
 CellChangeTimes->{{3.7532770294140673`*^9, 3.753277054066883*^9}, {
  3.7532771594862957`*^9, 3.7532771899469337`*^9}, {3.7532772414397287`*^9, 
  3.753277242031249*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.753278553064093*^9, 3.7532785549951353`*^9}, 
   3.753281835501327*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"e1", "[", "x_", "]"}], ":=", 
  SuperscriptBox[
   RowBox[{"Sin", "[", "x", "]"}], "3"]}]], "Input",
 CellChangeTimes->{{3.7532785586728897`*^9, 3.753278579136251*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"e1", "[", "x", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", " ", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.753280912273056*^9, 3.753280921992454*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
47jXVcovDmv87/sv4n/ff+3/PzAvGfU=
     "]]}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{-Pi, Pi}, {-0.9999996347286307, 
     0.9999995779457406}}, {{-3.141592653589793, 
    3.141592653589793}, {-0.9999996347286307, 0.9999995779457406}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7532785958972073`*^9, 3.7532809451538363`*^9, 
  3.753281889686943*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FourierSeries", "[", 
   RowBox[{
    RowBox[{"e1", "[", "x", "]"}], ",", "x", ",", "5", ",", " ", 
    RowBox[{"FourierParameters", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}], "//", 
  "ComplexExpand"}]], "Input"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"3", " ", 
    RowBox[{"Sin", "[", "x", "]"}]}], "4"], "-", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"3", " ", "x"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.753278618589334*^9, 3.753281890089615*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.753278713438271*^9, 3.753278715217675*^9}, 
   3.753281828165145*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"e1", "[", "x_", "]"}], ":=", 
  SuperscriptBox[
   RowBox[{"Cos", "[", "x", "]"}], "4"]}]], "Input",
 CellChangeTimes->{{3.753278728455645*^9, 3.753278728695602*^9}, {
  3.753279501334426*^9, 3.753279505861711*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"e1", "[", "x", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", " ", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.753278797318362*^9, 3.753278805731504*^9}, {
  3.753280874724822*^9, 3.753280905769125*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
8ERFDD1a3ymfXzNhxets2rhBHDUnLYZKSpm4FyuwPENEAjezzLNjPjARrtj3
95LlejAhnHjjCxMyr9PHQy9vgOu3r1FXvjGRpDaztcNcCibMQ57OnUyEudRc
D4uQhvB+U/Vdw0z4FUqGTqrIIbhzpZwWlQnvA8YaCX1ymHb/vGrLFBOeShEO
I4kb0Xbv4Kz4HBP1WUFbBjfI49HfAyXjPHM4ej0ww99GEXwXeTP7V84hYOnn
xZodSqy6/PDwl/AcdDo5XtmuVcYpVaOABok5/OyPJf+ObYHctf1IUpxDTTnj
QsWICu4JU1Tit84hmU1k6qSXKjhT66Ui1eawR/lrxCJdFQMf93Fc0plDs42M
r7uQOrIl9taaGs3hjLjI1sNnNbE+Z3nRXpM5WBkdZNvJuR3Ru2pSdc1Z65es
yw5K2w7vs7vD5a3n8Ej8l+2xaS1sL9p1YMmZZW9VRMPVNzpIM2TfOeM2B8Gd
h26me+tCvKtCedhrDhX3khJjVHZibhm5sv0yK94b/3q/Feuhwoz4mnNzDh/+
WHW88yNhOKpz9GTGHCQefdK3lNwDwvX+7ozsOcxo1rUIp+yB2vDUtum8OeT0
HeC/prIXEoNZlFtv59D6aHZ/mOk+jPSuf1v4YQ62G+//2/tqP7od/FPZmudw
K1wrxN3EEN972mMPtM5BMp5xO3LcEOXd0S5/fs1B+Lf05k96BxD9i2Md/9gc
ejp6a04tHETIcVtuq8k5PM8qfK9RaILLHaUzybNzELkq2WLgaQr7H+c/ay+x
5tvSzytcOgT11v5rjoLzOFDpExLAZ462D009pWrzCPKSZty6ZYkmI/kvnFrz
uNu2XC6H4wjeNwaXmunOw2FPcGZ5wBGk1++M+7d7Hjrz12mlvkfhV52zV8Ry
Hkxt0+HCoGNYVxqbfu7iPC4dkPFRXLKBsA41rtB/Hu+eLvJEPDgJzpID19kC
53HikMOMkoYtxoqWW8eHz6OyUXmVzI5TqMj35a1KmEdJaoWLWqgdHDOt3deU
zWPbJ1mr+KOOKPIZNDpUMQ/Od0leHwodQdG7JH+jZp71fTPhS64+jawv97qn
P85DrVxiaLr9NKanm82bu+YxHvb+VIvrGQTDQOvG0jz2TMxIvGs7h1ZKm0j5
sgXQfvUraBi5YFOL4/g01wLrPLh8W/S9C5ocgzLsBRdQUrzWRyHbFcK33q0l
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
4v8BDmcZKw==
     "]]}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, Pi}, {0., 0.9999999999999916}}, {{0, 3.141592653589793}, {0., 
     0.9999999999999916}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.753278741398082*^9, 3.753278807195383*^9, 3.753279517832735*^9, {
   3.753280891038639*^9, 3.75328090648461*^9}, 3.7532818903404083`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FourierSeries", "[", 
   RowBox[{
    RowBox[{"e1", "[", "x", "]"}], ",", "x", ",", "5", ",", " ", 
    RowBox[{"FourierParameters", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]}]}], "]"}], "//", 
  "ComplexExpand"}]], "Input",
 CellChangeTimes->{{3.7532789399083633`*^9, 3.753278940130921*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["3", "8"], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "x"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"4", " ", "x"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.753278948052803*^9, 3.753279529855083*^9, 
  3.7532818933489647`*^9}]
}, Open  ]],

Cell[TextData[{
 "The si",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["n", "4"], TraditionalForm]]],
 " function is even. The period is \[Pi], and L=",
 Cell[BoxData[
  FormBox[
   FractionBox["\[Pi]", "2"], TraditionalForm]]],
 ". This is the cause for assigning the second ",
 StyleBox["FourierParameter", "Input"],
 " as shown above. The expected development of the function is not shown in \
the text, so agreement can\[CloseCurlyQuote]t be checked."
}], "Text",
 CellChangeTimes->{{3.75327883277855*^9, 3.753278905909039*^9}, {
  3.753278978024584*^9, 3.753279010214672*^9}, {3.753279240619597*^9, 
  3.753279275504265*^9}, {3.753295649878771*^9, 3.7532956585647287`*^9}}],

Cell[TextData[{
 StyleBox["23 -29 Half-Range Expansions",
  FontWeight->"Bold"],
 "\nFind (a) the Fourier cosine series, (b) the Fourier sine series. Sketch \
f(x) and its two periodic extensions. "
}], "Text",
 CellChangeTimes->{{3.7532796084157963`*^9, 3.753279663515601*^9}},
 Background->RGBColor[
  0.9600061036087587, 0.9600061036087587, 0.9600061036087587]],

Cell["23. The problem is described in a graphic sketch.", "Text",
 CellChangeTimes->{{3.7532798825612173`*^9, 3.7532798961192293`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.753279912725029*^9, 3.75327991415983*^9}, 
   3.75328182146178*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"e1", "[", "x_", "]"}], ":=", 
  RowBox[{"Piecewise", "[", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"1", ",", " ", 
      RowBox[{"0", "<", "x", "<", "4"}]}], "}"}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.753279966861302*^9, 3.753279987786682*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"e1", "[", "x", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "4"}], "}"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", " ", 
   RowBox[{"ImageSize", "\[Rule]", "120"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.753280011171091*^9, 3.753280015768981*^9}, {
  3.7532808157103033`*^9, 3.753280825069515*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ7ZX64uKBl6V2DGDwwb65sbuiS3KJPYyfUvJeslNy
C5zPMcVz4YePR+D87ReM3N3lzsP5Ec13bh3uvgLn528s1p3x5Sac/2nCtROM
jPfh/BMHj+0/b/MIzs+s9OSNfPMEzj/IafR/Te5zOH/Z4iP/pFRfwfkOYnsX
Ba97A+frHr+z45jWezj/ikPwu5XvPsD5OVzZl64afILzT98I38vX9xnOD3aL
ePjkyRc432xBd/gClW9w/oN/k69k1H+H8596nl8sdvgHnL9h5v3Ki4q/4Pyl
HcydmlW/4fyvyVGv0nb/gfO5XdqCNor/g/NrBJ7yPIz5D+fz7NNmuO7L4ADj
25b5/z38C8Gfs6RnsfIcRjg/LtTkLKc3E5y/9Wrq5H3fEHzLMxuYnk1jhvMV
XNO+TnZhgfNNTUwnbnmG4N//1HtycSsrnP/GOLBV0ogNzld7rfuK8TKCf0Sl
9FJBIzuc33/lanKQCgec/z74wESmIwj+plBRZ8tCTjh/8dnmuY+EuOD878dj
qoUOIfgPJu7/KpDHDed/u2gt2cTHA+cXTFE6ULkHwRc/qyTwJI4Xzg++uuaP
zD8E/1P8wpw7q/jg/P0J61v5fPjhfG2HWFv2ZQj+dHnur///I/gAzVoGKQ==

     "]]}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->120,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 4}, {0., 2.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.753280016919641*^9, {3.753280829126175*^9, 3.753280867188127*^9}, 
   3.753281893495245*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FourierSinSeries", "[", 
   RowBox[{
    RowBox[{"e1", "[", "x", "]"}], ",", "x", ",", "5", ",", " ", 
    RowBox[{"FourierParameters", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       FractionBox["\[Pi]", "4"]}], "}"}]}]}], "]"}], "//", 
  "ComplexExpand"}]], "Input",
 CellChangeTimes->{{3.753280067991702*^9, 3.7532800685662613`*^9}, {
  3.753280184290338*^9, 3.7532801914237022`*^9}, {3.753280277708845*^9, 
  3.753280278203128*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"4", " ", 
    RowBox[{"Sin", "[", 
     FractionBox[
      RowBox[{"\[Pi]", " ", "x"}], "4"], "]"}]}], "\[Pi]"], "+", 
  FractionBox[
   RowBox[{"4", " ", 
    RowBox[{"Sin", "[", 
     FractionBox[
      RowBox[{"3", " ", "\[Pi]", " ", "x"}], "4"], "]"}]}], 
   RowBox[{"3", " ", "\[Pi]"}]], "+", 
  FractionBox[
   RowBox[{"4", " ", 
    RowBox[{"Sin", "[", 
     FractionBox[
      RowBox[{"5", " ", "\[Pi]", " ", "x"}], "4"], "]"}]}], 
   RowBox[{"5", " ", "\[Pi]"}]]}]], "Output",
 CellChangeTimes->{3.753280071187684*^9, 3.753280193871613*^9, 
  3.75328028144945*^9, 3.7532818936288767`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FourierCosSeries", "[", 
   RowBox[{
    RowBox[{"e1", "[", "x", "]"}], ",", "x", ",", "5", ",", " ", 
    RowBox[{"FourierParameters", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       FractionBox["\[Pi]", "4"]}], "}"}]}]}], "]"}], "//", 
  "ComplexExpand"}]], "Input",
 CellChangeTimes->{{3.753280489649229*^9, 3.753280491439632*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.753280494014165*^9, 3.7532818937035713`*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[TextData[{
 "There is no clue as whether the function is even or odd. The answer states \
that L=4. Assigning the second ",
 StyleBox["FourierParameter", "Input"],
 " accordingly, the text answers are obtained for sin and cos."
}], "Text",
 CellChangeTimes->{{3.753280111228956*^9, 3.753280167296775*^9}, {
  3.7532803733191357`*^9, 3.753280460537113*^9}, {3.753280527527059*^9, 
  3.75328053888483*^9}, {3.7532923772583933`*^9, 3.75329238975244*^9}, {
  3.753292421206547*^9, 3.753292424070443*^9}}],

Cell["25. The problem is shown in a sketch.", "Text",
 CellChangeTimes->{{3.753280633752944*^9, 3.753280643783092*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.75328065842509*^9, 3.753280659680028*^9}, {
  3.753281803606324*^9, 3.7532818065483418`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"e1", "[", "x_", "]"}], ":=", 
  RowBox[{"Piecewise", "[", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Pi]", "-", "x"}], ",", " ", 
      RowBox[{"0", "<", "x", "<", "\[Pi]"}]}], "}"}], "}"}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.753280723371957*^9, 3.753280733706642*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"e1", "[", "x", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", " ", 
   RowBox[{"ImageSize", "\[Rule]", "130"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.753280752530949*^9, 3.7532807553866158`*^9}, {
  3.7532807893695107`*^9, 3.753280806254682*^9}, {3.7532816886671352`*^9, 
  3.753281691785046*^9}, {3.753281899824006*^9, 3.7532819024869003`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJw11H9cy3kcB/DvNtu+k1y5jMpqhUVuHpq5Q877k+Xh5kRLlHQ1Py9OrZJL
C6uj5kTLSirqJIr5sYrqHjbJ1RB1LRU6jYmiKRf9Vm33vXs87o/34/14Pl7v
x/vPl8tWid8OMoZhPsT8uyl3Jv75elHUcg/Py9+PujAQm8nmOKWvg2mPtriS
2Qw0YEhb26oMhbEghxHciYGMXrXt5UoJPJCmFDIdGKhlb8fVi0oZhNwKJ/Gm
MJD+eJ9trlIBKUt4FWFkBvLJltZkKX+Djm80rk/acXTcuTI3U6mGHH79SHEB
jkxDNIvX3irIvr2ef98BR4vHT/reiHwA3taezr05dFT7IvAweaYewLaVcoZF
R2iF/2jh1mbQX2iNKTxFQ0GRwt6yTc/A2rI0s4ZJQ5Uu7r9UXWwD4zuzQHCC
ivyz3AsMEUagyOPeC2hU5Ei9LUjb2Q6N7/0FAUcnIPlCXWnV0TfwtVHp9shC
QStXrRYXJnfCqjMeWlECBel+7ecckb6Doony1UEUCjKdsNO+zDJBHgN2VMeT
0ZbYEkWvshtQQ8ACGCehg641HrKKDxA3q0nuGENC880HB8m7eoE0n9oa14Oh
+z8E9rG3fwS++fRfJgmGPPLCnx6M+QQWjUPj/gYLeIvuBpVF90E3ft/Hq9EM
8zrW6eYl9wN13+LXD2+PQ7RN1LK8jAGoFE7bE6geg23X9X7v0wah/krFBqsb
o8Dh/uQbe34IJnJZgbL8z5Du5N1jyB+GXE9vzfTzIyAuUmeisyOgL31mW140
DJjtRrf2K59hgZCXaJc1BMKepQEhl0fh7R4fUVbOIGxXBUXYa8egTs1dapAP
wCvzJKW+dhzWbY5ncqT9QLs37r9VZwb3jGPrMw71gSV8roX3xAIe3SGXq8M/
gW+NcJZkN4bSGvtDp0s+goj1XcOKtxhKdR5mRO3rBW3n656yCBKKtE/Mnlr/
AeK7nIKZPSQUM/mUMb2pGwqCh75l/kxGzV4LN2WoTcBmSCSUQTIyKvzTX6rf
wVrSgqKIvRQ0R+17k3erEzp2pfrFjVJQ3aSnNDznDeitjvtESScgdpLRYU5e
O8x2ctPiE6iozjNG/DDWCO4HrDycUqgoUq6z7ypvgyNfKgbYDBo6V3dp4PG9
Z7DKsZhbfZKGjqae499NbIaQ4MgyP1s60iflDXon6YHTFScQp9IRGy5MKllS
CwGd7JXWTBzZ7OF/MlZWgWHGj5lFGTgS089rYlUlsHH2so62TByhYexV/bYS
0HNt+VOycYR1hdJmsUrgj+WaxgO5OKp6yBLpFcVwSfyFtV8hkc9YWC8yXYfo
CxWHxypwlDDXdeZNmQroX+FRoufEP2+sYb8qHxL4hjvJBuKeU2k/m5UPn5eV
Tta+JO7pB7Y3Ks5Bt0/wVc4bIs/8u2+9KQ8eS4rfjnYTLnghLJflwNkbgSGF
ZsKV2gGp6iRM1XKvPccYKCFxcUqTIg1Sa8hjNhQGwo6FeQWaUiGx5Wp2PJ3w
6YDTt2THYOcQ1uJrQ7h0kUCmSgSjpWVmMtELWGRQm9h0CDbhV6I1doQPCXnV
Mimssd9gw7EnnOX2Qq6KAp2Le+hmR8JruGHNst2w3N1yLY1FOMzKLlu1BX7n
NY/pnAljTTKNSgT/9xZRZf/12D/f0ig8
     "]]}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->130,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, Pi}, {0., 3.1415925894756573`}}, {{0, 3.141592653589793}, {0., 
     3.1415925894756573`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.753280757123217*^9, {3.753280795852996*^9, 3.753280807104094*^9}, {
   3.753281893793881*^9, 3.7532819042970753`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FourierCosSeries", "[", 
   RowBox[{
    RowBox[{"e1", "[", "x", "]"}], ",", "x", ",", "5", ",", " ", 
    RowBox[{"FourierParameters", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}], "//", 
  "ComplexExpand"}]], "Input",
 CellChangeTimes->{{3.753282026130352*^9, 3.753282028200801*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{
  FractionBox["\[Pi]", "2"], "+", 
  FractionBox[
   RowBox[{"4", " ", 
    RowBox[{"Cos", "[", "x", "]"}]}], "\[Pi]"], "+", 
  FractionBox[
   RowBox[{"4", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"3", " ", "x"}], "]"}]}], 
   RowBox[{"9", " ", "\[Pi]"}]], "+", 
  FractionBox[
   RowBox[{"4", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"5", " ", "x"}], "]"}]}], 
   RowBox[{"25", " ", "\[Pi]"}]]}]], "Output",
 CellChangeTimes->{3.7532820306069*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FourierSinSeries", "[", 
   RowBox[{
    RowBox[{"e1", "[", "x", "]"}], ",", "x", ",", "5", ",", " ", 
    RowBox[{"FourierParameters", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}], "//", 
  "ComplexExpand"}]], "Input",
 CellChangeTimes->{{3.753282117125854*^9, 3.753282119052389*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", 
   RowBox[{"Sin", "[", "x", "]"}]}], "+", 
  RowBox[{"Sin", "[", 
   RowBox[{"2", " ", "x"}], "]"}], "+", 
  RowBox[{
   FractionBox["2", "3"], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"3", " ", "x"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"4", " ", "x"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["2", "5"], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"5", " ", "x"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.753282120628385*^9}]
}, Open  ]],

Cell["\<\
Using the experience of the last problem, L is assumed to be \[Pi]. This \
assumption produces the text result.\
\>", "Text",
 CellChangeTimes->{{3.753281975596681*^9, 3.753282004449679*^9}, {
  3.75328207170392*^9, 3.753282103637075*^9}, {3.75328217129115*^9, 
  3.753282176057611*^9}}],

Cell["27. The problem is shown in a sketch.", "Text",
 CellChangeTimes->{{3.753282267798334*^9, 3.753282276276671*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"e1", "[", "x_", "]"}], ":=", 
  RowBox[{"Piecewise", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["\[Pi]", "2"], ",", " ", 
       RowBox[{"0", "<", "x", "<", 
        FractionBox["\[Pi]", "2"]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Pi]", "-", "x"}], ",", " ", 
       RowBox[{
        FractionBox["\[Pi]", "2"], "<", "x", "<", "\[Pi]"}]}], "}"}]}], "}"}],
    "]"}]}]], "Input",
 CellChangeTimes->{{3.753282325412017*^9, 3.753282344417705*^9}, {
  3.753282396575032*^9, 3.753282427774796*^9}, {3.753282554246337*^9, 
  3.753282566952219*^9}, {3.7532826257657213`*^9, 3.753282629515306*^9}, {
  3.7532826992734203`*^9, 3.753282703224072*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"e1", "[", "x", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", " ", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.753282458438073*^9, 3.7532824758509827`*^9}, {
  3.753282723271284*^9, 3.753282726174683*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQzbyf69xj00I7CV2XkN+KP+19Z1YdmTFpvj2M3yO/
b+60Sevh/Fff2f47Fh+A8y3+TgzYXHACzj95L6KZSfkCnO/gFPJ7WdIVOD+q
wPPD1sgbcP4+Ra2mA0vvwPkhM7QW3817AOdLs+51npD2CM5vNz666UDHEzjf
1d0rYVnbMzj/aOcXtZaqFwj39orsuT/jFZyfWL6x/8OkN3B+rdIRw/rt7+B8
vX+135gyP8D5x2MjPiukfITzDeflXq8t+QTnuwQejNpa9BnO137qf1S77Quc
XyRQaDNvylc4P3ndhaDXE77B+Wq62QHli77D+ZPlXN7eXfgDzj/GMH962QME
/9ejn4788j9x8gFp69br
      "]], LineBox[CompressedData["
1:eJwVzH8wm3ccB/CHVPI4dEmHa1rxYyU0t+yI1K10Pl/T3pYrrWBNW0aqtllP
hc5mxYlchx69RFeNH1XTcVVPZcFKd2TWjri2Q6PYuqFCi8mxdVryPKjs6R+f
e9/r3u/7+KQoYj+xxzAsjL7XieCAbIZPwfMdkVJXHgWpS5bp3wQUDKRf7Rdw
KSi5Up7e8Q4FzT3WsAg3CghJiLVOREExO7ZNxqFgyDquOh9CQUpKCz/DhQLX
eP/KhHAKPJgnOFccKBAa4xebPqaAcTnYcGiOBHmTXotqKTC1P+Z0NpHAjFj2
UNZTIOBqy3IaSND9JW74uZGCc8o4h73fkbDm0qUP1VEQEjVEdmtJqMjuuyfu
oaB2tnfqbhEJ9yL+XAswU5C2Xa8bPElC4IR9Msd3DbCCIsmsFwkY54j/zM01
CJSIVK5VVpAshcqSmtdhPj1aWlWzCqnE8QyuYQMG9MLQyZIVmN50/tZ0/xUc
Tshz5+e+BGb/q/gU4yYIKkrjKgpegO30bpvodxsELSY1955ehpg+ia/iFIbK
h18mb1f8B1Lehw/fn8eQ2ot0zPryORjmni51ZNihTK6q2m3wH8hb8Ex0X7JD
2Vsvmy+NLEJDovU996/s0WhE8LEKvQW8HRUKxqo9MmviL03p/4ZDdoFNGV8w
UIA+5paoaw5mP1fHnl1noAHnP5h4zTMwOV2IzsrdgryLzDsC6mbAz9PfgG9x
QANh2fIHOWYQ5DsFeZY5oMwSI3ehcwK+eVOz4u3IRPUDN1Ye9T+GD3a2Cnsv
MtF5db34rmoUkhIzO2I5LGQqqlvdX2QC/sLZSLmahbyh0blt732QzXkfcHHH
ETtdvGzuuQOTHp9pmypwJGd9351DtMERv32zE1ocIRKbHjzZBiYhR7ytGkfY
QjLTl9cGv4Z3D+dfxdGdBzypSdMKN+RvuMRep3uP4EGp5Qc403j73MZtHBXu
fmvXLSUBrLfxLOk4/W8/9vBr4hoUiid/KZ6k9/werh/vGqzta99qmKL3rPzU
YU09LEYntvCf0b323xdxljp4pGidX1+k3fBE0qmsgdofjyZd36TdY1jJJS6C
m0GoG8ccUaHq3bIRTTmo++w32AxHhJWmRRy1qEE11lKdx6JdKavsUpbCp1Zs
LIZNu31PpJJQgdk2tqt4G+3M4xNySwEcw2+e6XalXSAR9SpzIYr7EZvPpV3l
/6SEyAKjjyA5YSftKGHaqPIUhAtsunIe7TQn12riBPwkGt0wetHGRpTdhBSC
wpoPrvu8Njb0dE9W+P9ARqw5
      "]]}, {}}, {{}, {}, {}}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, Pi}, {0., 1.5707963267948966`}}, {{0, 3.141592653589793}, {0., 
     1.5707963267948966`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.753282453937245*^9, 3.7532824767044563`*^9}, 
   3.7532825717852287`*^9, 3.7532826341569967`*^9, {3.753282708233068*^9, 
   3.753282726949835*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FourierCosSeries", "[", 
   RowBox[{
    RowBox[{"e1", "[", "x", "]"}], ",", "x", ",", "5", ",", " ", 
    RowBox[{"FourierParameters", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}], "//", 
  "ComplexExpand"}]], "Input",
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"3", " ", "\[Pi]"}], "8"], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{"Cos", "[", "x", "]"}]}], "\[Pi]"], "-", 
  FractionBox[
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "x"}], "]"}], "\[Pi]"], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"3", " ", "x"}], "]"}]}], 
   RowBox[{"9", " ", "\[Pi]"}]], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"5", " ", "x"}], "]"}]}], 
   RowBox[{"25", " ", "\[Pi]"}]]}]], "Output",
 CellChangeTimes->{3.753282788272974*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FourierSinSeries", "[", 
   RowBox[{
    RowBox[{"e1", "[", "x", "]"}], ",", "x", ",", "5", ",", " ", 
    RowBox[{"FourierParameters", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}], "//", 
  "ComplexExpand"}]], "Input",
 CellChangeTimes->{{3.753282876136732*^9, 3.753282894990574*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Sin", "[", "x", "]"}], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{"Sin", "[", "x", "]"}]}], "\[Pi]"], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", "x"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "3"], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"3", " ", "x"}], "]"}]}], "-", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"3", " ", "x"}], "]"}]}], 
   RowBox[{"9", " ", "\[Pi]"}]], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"4", " ", "x"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "5"], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"5", " ", "x"}], "]"}]}], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"5", " ", "x"}], "]"}]}], 
   RowBox[{"25", " ", "\[Pi]"}]]}]], "Output",
 CellChangeTimes->{{3.7532828791209307`*^9, 3.753282896669512*^9}}]
}, Open  ]],

Cell["\<\
Here again, L is assumed to be \[Pi]. The text answers are obtained.\
\>", "Text",
 CellChangeTimes->{{3.753282769525448*^9, 3.753282779907797*^9}, {
  3.753283003993573*^9, 3.753283013960382*^9}}],

Cell["29. f(x)=sin x, with (0<x<\[Pi])", "Text",
 CellChangeTimes->{{3.753283081702182*^9, 3.753283111299487*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"e1", "[", "x_", "]"}], ":=", " ", 
   RowBox[{"Sin", "[", "x", "]"}]}], " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"e1", "[", "x", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", " ", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.753283164609725*^9, 3.753283226463208*^9}, {
  3.753283265182372*^9, 3.7532832844036016`*^9}, {3.753283491141863*^9, 
  3.753283563972282*^9}, {3.7532836077788687`*^9, 3.7532836123786573`*^9}, {
  3.7532840564514437`*^9, 3.753284081226404*^9}, {3.753284995892317*^9, 
  3.7532850005172577`*^9}, {3.753285046212982*^9, 3.75328504719522*^9}, {
  3.753285103186078*^9, 3.75328511642535*^9}, {3.753285151465476*^9, 
  3.753285151719698*^9}, {3.753285230932715*^9, 3.753285231470793*^9}, {
  3.753285416633375*^9, 3.7532854566861687`*^9}, {3.753285517661848*^9, 
  3.753285541795204*^9}, {3.753292810600752*^9, 3.753292821302454*^9}, {
  3.753292876901267*^9, 3.75329290833075*^9}, {3.753292946071991*^9, 
  3.753292950406859*^9}, {3.753292987470385*^9, 3.753293054193524*^9}, {
  3.753293935886498*^9, 3.75329395600907*^9}, {3.753295004515912*^9, 
  3.753295026705731*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
8bF7ke0C45VZ64VaMpSh8YX/+3/gfwDmUHAI
     "]]}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, Pi}, {0., 0.9999999707837952}}, {{0, 3.141592653589793}, {0., 
     0.9999999707837952}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.753293055671074*^9, {3.7532939587113934`*^9, 3.753293961665511*^9}, {
   3.7532950337458887`*^9, 3.753295039361182*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FourierCosSeries", "[", 
   RowBox[{
    RowBox[{"e1", "[", "x", "]"}], ",", "x", ",", "6", ",", " ", 
    RowBox[{"FourierParameters", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}], "//", 
  "ComplexExpand"}]], "Input",
 CellChangeTimes->{{3.7532834247977858`*^9, 3.7532834253321743`*^9}, {
  3.75328366236893*^9, 3.7532836629112873`*^9}, {3.753283739062812*^9, 
  3.753283770267885*^9}, {3.7532838898969088`*^9, 3.753283924246851*^9}, {
  3.753283983622045*^9, 3.753284025651606*^9}, {3.753284138985774*^9, 
  3.7532841630072308`*^9}, {3.753284205021731*^9, 3.753284210190333*^9}, {
  3.753284247518468*^9, 3.7532842755719976`*^9}, {3.753284325242317*^9, 
  3.753284326074134*^9}, {3.7532844883666573`*^9, 3.7532844885811653`*^9}, {
  3.753284522493122*^9, 3.753284640592005*^9}, {3.753292491986511*^9, 
  3.753292502585784*^9}, {3.753292585462625*^9, 3.753292618604197*^9}, {
  3.753292744837055*^9, 3.753292776553022*^9}, {3.753292834565898*^9, 
  3.753292834797639*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[BoxData[
 RowBox[{
  FractionBox["2", "\[Pi]"], "-", 
  FractionBox[
   RowBox[{"4", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "x"}], "]"}]}], 
   RowBox[{"3", " ", "\[Pi]"}]], "-", 
  FractionBox[
   RowBox[{"4", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"4", " ", "x"}], "]"}]}], 
   RowBox[{"15", " ", "\[Pi]"}]], "-", 
  FractionBox[
   RowBox[{"4", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"6", " ", "x"}], "]"}]}], 
   RowBox[{"35", " ", "\[Pi]"}]]}]], "Output",
 CellChangeTimes->{{3.753284581166194*^9, 3.753284641591344*^9}, {
   3.753285015732456*^9, 3.753285023086096*^9}, 3.7532850585147543`*^9, 
   3.753285130041444*^9, 3.7532851602790403`*^9, 3.753285242896332*^9, {
   3.753285466662218*^9, 3.7532854823637943`*^9}, 3.75328554876903*^9, {
   3.753292495933837*^9, 3.753292522784878*^9}, {3.753292755012053*^9, 
   3.753292778051302*^9}, {3.753292830751758*^9, 3.753292835950622*^9}, 
   3.753292929083651*^9, 3.7532929591626663`*^9, 3.753293069238721*^9, 
   3.7532939665936193`*^9, 3.753295042908083*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FourierSinSeries", "[", 
   RowBox[{
    RowBox[{"e1", "[", "x", "]"}], ",", "x", ",", "5", ",", " ", 
    RowBox[{"FourierParameters", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}], "//", 
  "ComplexExpand"}]], "Input",
 CellChangeTimes->{{3.753283447964692*^9, 3.753283448538949*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{"Sin", "[", "x", "]"}]], "Output",
 CellChangeTimes->{3.75328345018158*^9, 3.753283656886195*^9, 
  3.753284100511796*^9, 3.7532841941372766`*^9, 3.753295054977744*^9}]
}, Open  ]],

Cell[TextData[{
 "The above answer for ",
 StyleBox["FourierSinSeries", "Input"],
 " matches the text, but the above answer for ",
 StyleBox["FourierCosSeries", "Input"],
 " does not match the text. The text answer has as arguments cos x, cos 3x, \
cos 5x etc., as:\n\n",
 Cell[BoxData[
  RowBox[{
   FractionBox["2", "\[Pi]"], "-", 
   FractionBox[
    RowBox[{"4", " ", 
     RowBox[{"Cos", "[", " ", "x", "]"}]}], 
    RowBox[{"3", " ", "\[Pi]"}]], "-", 
   FractionBox[
    RowBox[{"4", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"3", " ", "x"}], "]"}]}], 
    RowBox[{"15", " ", "\[Pi]"}]], "-", 
   FractionBox[
    RowBox[{"4", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"5", " ", "x"}], "]"}]}], 
    RowBox[{"35", " ", "\[Pi]"}]]}]],
  CellChangeTimes->{{3.753284581166194*^9, 3.753284641591344*^9}, {
    3.753285015732456*^9, 3.753285023086096*^9}, 3.7532850585147543`*^9, 
    3.753285130041444*^9, 3.7532851602790403`*^9, 3.753285242896332*^9, {
    3.753285466662218*^9, 3.7532854823637943`*^9}, 3.75328554876903*^9, {
    3.753292495933837*^9, 3.753292522784878*^9}, {3.753292755012053*^9, 
    3.753292778051302*^9}, {3.753292830751758*^9, 3.753292835950622*^9}, 
    3.753292929083651*^9, 3.7532929591626663`*^9, 3.753293069238721*^9, 
    3.7532939665936193`*^9, 3.753295042908083*^9}],
 "\nnot the even numbered x-arguments. However, ",
 StyleBox["https://web.mit.edu/jorloff/www/18.03-esg/notes/topic23.pdf, ",
  FontSlant->"Italic"],
 "p.7",
 StyleBox[" ",
  FontSlant->"Italic"],
 "contradicts this answer, and supports the even-x pattern above. With its \
detailed development of the topic, I\[CloseCurlyQuote]m inclined to go with \
the external source."
}], "Text",
 CellChangeTimes->{{3.753285580379054*^9, 3.753285665311037*^9}, {
  3.753286005669455*^9, 3.753286011180032*^9}, {3.753294979748806*^9, 
  3.753294981117251*^9}, {3.753295066071884*^9, 3.753295299817196*^9}, {
  3.7532953697197647`*^9, 3.75329542873774*^9}, {3.753295747730654*^9, 
  3.7532957510639133`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.753295088769882*^9, 3.753295091822679*^9}}]
},
WindowSize->{1384, 843},
WindowMargins->{{4, Automatic}, {Automatic, 4}},
Magnification:>1.5 Inherited,
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 10, \
2015)",
StyleDefinitions->"Charter1.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 173, 4, 51, "Text"],
Cell[576, 19, 314, 7, 110, "Text"],
Cell[893, 28, 674, 20, 76, "Text"],
Cell[CellGroupData[{
Cell[1592, 52, 212, 5, 45, "Input"],
Cell[1807, 59, 310, 7, 78, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2154, 71, 509, 13, 45, "Input"],
Cell[2666, 86, 309, 7, 78, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3012, 98, 352, 11, 45, "Input"],
Cell[3367, 111, 188, 3, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3592, 119, 383, 12, 45, "Input"],
Cell[3978, 133, 259, 6, 45, "Output"]
}, Open  ]],
Cell[4252, 142, 522, 7, 75, "Text"],
Cell[4777, 151, 181, 3, 75, "Text"],
Cell[4961, 156, 344, 8, 110, "Text"],
Cell[5308, 166, 146, 2, 75, "Text"],
Cell[5457, 170, 194, 3, 75, "Text"],
Cell[5654, 175, 165, 3, 45, "Input"],
Cell[5822, 180, 571, 17, 47, "Input"],
Cell[CellGroupData[{
Cell[6418, 201, 614, 19, 45, "Input"],
Cell[7035, 222, 1998, 46, 227, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9070, 273, 594, 14, 94, "Input"],
Cell[9667, 289, 794, 22, 88, "Output"]
}, Open  ]],
Cell[10476, 314, 1770, 38, 333, "Text"],
Cell[12249, 354, 428, 14, 77, "Text"],
Cell[12680, 370, 165, 3, 45, "Input"],
Cell[12848, 375, 492, 11, 50, "Input"],
Cell[CellGroupData[{
Cell[13365, 390, 312, 8, 45, "Input"],
Cell[13680, 400, 6829, 124, 214, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20546, 529, 445, 11, 69, "Input"],
Cell[20994, 542, 686, 20, 78, "Output"]
}, Open  ]],
Cell[21695, 565, 534, 8, 75, "Text"],
Cell[22232, 575, 284, 6, 86, "Text"],
Cell[22519, 583, 171, 2, 75, "Text"],
Cell[22693, 587, 167, 3, 45, "Input"],
Cell[22863, 592, 497, 15, 75, "Input"],
Cell[CellGroupData[{
Cell[23385, 611, 645, 20, 75, "Input"],
Cell[24033, 633, 2391, 53, 223, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26461, 691, 387, 11, 69, "Input"],
Cell[26851, 704, 797, 24, 78, "Output"]
}, Open  ]],
Cell[27663, 731, 902, 18, 161, "Text"],
Cell[28568, 751, 170, 2, 75, "Text"],
Cell[28741, 755, 165, 3, 45, "Input"],
Cell[28909, 760, 1209, 32, 70, "Input"],
Cell[CellGroupData[{
Cell[30143, 796, 378, 9, 45, "Input"],
Cell[30524, 807, 4296, 85, 196, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34857, 897, 620, 14, 69, "Input"],
Cell[35480, 913, 640, 18, 76, "Output"]
}, Open  ]],
Cell[36135, 934, 417, 6, 75, "Text"],
Cell[36555, 942, 355, 7, 120, "Text"],
Cell[36913, 951, 173, 2, 75, "Text"],
Cell[37089, 955, 167, 3, 45, "Input"],
Cell[37259, 960, 526, 17, 47, "Input"],
Cell[CellGroupData[{
Cell[37810, 981, 318, 8, 45, "Input"],
Cell[38131, 991, 3697, 73, 204, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41865, 1069, 395, 10, 69, "Input"],
Cell[42263, 1081, 634, 20, 78, "Output"]
}, Open  ]],
Cell[42912, 1104, 264, 4, 75, "Text"],
Cell[43179, 1110, 273, 6, 86, "Text"],
Cell[43455, 1118, 846, 26, 112, "Text"],
Cell[44304, 1146, 167, 3, 45, "Input"],
Cell[44474, 1151, 200, 5, 50, "Input"],
Cell[CellGroupData[{
Cell[44699, 1160, 328, 8, 45, "Input"],
Cell[45030, 1170, 18881, 322, 161, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63948, 1497, 351, 9, 45, "Input"],
Cell[64302, 1508, 292, 9, 75, "Output"]
}, Open  ]],
Cell[64609, 1520, 384, 8, 86, "Text"],
Cell[64996, 1530, 167, 3, 45, "Input"],
Cell[65166, 1535, 203, 5, 50, "Input"],
Cell[CellGroupData[{
Cell[65394, 1544, 382, 9, 45, "Input"],
Cell[65779, 1555, 19241, 329, 131, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85057, 1889, 285, 8, 45, "Input"],
Cell[85345, 1899, 292, 9, 75, "Output"]
}, Open  ]],
Cell[85652, 1911, 165, 3, 45, "Input"],
Cell[85820, 1916, 250, 6, 50, "Input"],
Cell[CellGroupData[{
Cell[86095, 1926, 406, 9, 45, "Input"],
Cell[86504, 1937, 14657, 254, 138, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101198, 2196, 353, 9, 45, "Input"],
Cell[101554, 2207, 374, 12, 76, "Output"]
}, Open  ]],
Cell[101943, 2222, 678, 16, 92, "Text"],
Cell[102624, 2240, 364, 8, 110, "Text"],
Cell[102991, 2250, 171, 2, 75, "Text"],
Cell[103165, 2254, 163, 3, 45, "Input"],
Cell[103331, 2259, 299, 8, 47, "Input"],
Cell[CellGroupData[{
Cell[103655, 2271, 404, 9, 45, "Input"],
Cell[104062, 2282, 1642, 41, 128, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105741, 2328, 524, 13, 94, "Input"],
Cell[106268, 2343, 648, 20, 88, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106953, 2368, 384, 10, 70, "Input"],
Cell[107340, 2380, 132, 2, 69, "Output"]
}, Open  ]],
Cell[107487, 2385, 505, 9, 86, "Text"],
Cell[107995, 2396, 155, 2, 75, "Text"],
Cell[108153, 2400, 189, 3, 45, "Input"],
Cell[108345, 2405, 336, 10, 47, "Input"],
Cell[CellGroupData[{
Cell[108706, 2419, 509, 10, 45, "Input"],
Cell[109218, 2431, 2765, 59, 219, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112020, 2495, 392, 10, 69, "Input"],
Cell[112415, 2507, 479, 16, 76, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112931, 2528, 392, 10, 69, "Input"],
Cell[113326, 2540, 533, 18, 76, "Output"]
}, Open  ]],
Cell[113874, 2561, 297, 6, 51, "Text"],
Cell[114174, 2569, 155, 2, 75, "Text"],
Cell[114332, 2573, 73, 1, 45, "Input"],
Cell[114408, 2576, 752, 20, 70, "Input"],
Cell[CellGroupData[{
Cell[115185, 2600, 408, 9, 45, "Input"],
Cell[115596, 2611, 2866, 61, 186, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[118499, 2677, 326, 9, 69, "Input"],
Cell[118828, 2688, 596, 20, 76, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[119461, 2713, 392, 10, 69, "Input"],
Cell[119856, 2725, 956, 32, 76, "Output"]
}, Open  ]],
Cell[120827, 2760, 207, 4, 51, "Text"],
Cell[121037, 2766, 150, 2, 75, "Text"],
Cell[CellGroupData[{
Cell[121212, 2772, 1421, 26, 133, "Input"],
Cell[122636, 2800, 6368, 118, 138, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[129041, 2923, 1078, 20, 69, "Input"],
Cell[130122, 2945, 1043, 25, 76, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131202, 2975, 392, 10, 69, "Input"],
Cell[131597, 2987, 191, 3, 45, "Output"]
}, Open  ]],
Cell[131803, 2993, 2007, 46, 258, "Text"],
Cell[133813, 3041, 92, 1, 45, "Input"]
}
]
*)


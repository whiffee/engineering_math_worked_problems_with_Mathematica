(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    251739,       5326]
NotebookOptionsPosition[    244245,       5084]
NotebookOutlinePosition[    244633,       5101]
CellTagsIndexPosition[    244590,       5098]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
Note: In this problem set, expressions in green cells match corresponding \
expressions in the text answers.\
\>", "Text",
 Evaluatable->False,
 CellChangeTimes->{{3.76910325555046*^9, 3.769103278005802*^9}}],

Cell["\<\
4 - 8 Double Fourier Series
Represent f(x,y) by a series (15), where\
\>", "Text",
 CellChangeTimes->{{3.756222425143961*^9, 3.756222456357913*^9}},
 Background->RGBColor[
  0.9600061036087587, 0.9600061036087587, 0.9600061036087587]],

Cell[BoxData[
 RowBox[{
  RowBox[{"u", "[", 
   RowBox[{"x", ",", "y", ",", "0"}], "]"}], "=", 
  RowBox[{
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"m", "=", "1"}], "\[Infinity]"], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"n", "=", "1"}], "\[Infinity]"], 
     RowBox[{
      SubscriptBox["B", "mn"], 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"m", " ", "\[Pi]", " ", "x"}], "a"], "]"}], 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"n", " ", "\[Pi]", " ", "y"}], "b"], "]"}]}]}]}], "=", 
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "y"}], "]"}]}]}]], "Text",
 CellChangeTimes->{{3.756229520807788*^9, 3.756229708212061*^9}},
 Background->RGBColor[
  0.9600061036087587, 0.9600061036087587, 0.9600061036087587]],

Cell["and", "Text",
 CellChangeTimes->{{3.7562296998602133`*^9, 3.7562297002271833`*^9}}],

Cell["5. f(x,y)=y, a=b=1", "Text",
 CellChangeTimes->{{3.7562224629338007`*^9, 3.756222487876677*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7721370539980164`*^9, 3.772137054554838*^9}}],

Cell[TextData[{
 "For this type of problem, numbered line (15) is shown above. After a little \
development, the text presents numbered line (18), p.582, which is the ",
 StyleBox["generalized Euler formula",
  FontWeight->"Bold"],
 ":"
}], "Text",
 CellChangeTimes->{{3.7562365230139*^9, 3.7562365651475067`*^9}, {
  3.756237009964962*^9, 3.756237023452715*^9}, {3.769103402464093*^9, 
  3.76910340550886*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["B", "mn"], "=", 
   RowBox[{
    FractionBox["4", 
     RowBox[{"a", " ", "b"}]], 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "b"], 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "a"], 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"x", ",", "y"}], "]"}], 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"m", " ", "\[Pi]", " ", "x"}], "a"], "]"}], 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"n", " ", "\[Pi]", " ", "y"}], "b"], "]"}], 
       RowBox[{"\[DifferentialD]", "x"}], 
       RowBox[{"\[DifferentialD]", "y"}], "             ", "n"}]}]}]}]}], ",", 
  RowBox[{"m", "\[Rule]", "1"}], ",", "2", ",", "..."}]], "Text",
 CellChangeTimes->{{3.756237041803751*^9, 3.756237168489024*^9}, {
  3.756238979136257*^9, 3.756238980741457*^9}}],

Cell["in the case of this problem,", "Text",
 CellChangeTimes->{{3.756237201590787*^9, 3.7562372067986927`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Bmn", "=", 
  RowBox[{"4", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "1"], 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "1"], 
     RowBox[{"y", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"m", " ", "\[Pi]", " ", "x"}], "]"}], 
      RowBox[{"Sin", "[", 
       RowBox[{"n", " ", "\[Pi]", " ", "y"}], "]"}], 
      RowBox[{"\[DifferentialD]", "x"}], 
      RowBox[{"\[DifferentialD]", "y"}]}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.7562372124570227`*^9, 3.756237302979659*^9}, {
  3.756237340518653*^9, 3.75623734341888*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"4", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"Cos", "[", 
      RowBox[{"m", " ", "\[Pi]"}], "]"}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"n", " ", "\[Pi]", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"n", " ", "\[Pi]"}], "]"}]}], "-", 
     RowBox[{"Sin", "[", 
      RowBox[{"n", " ", "\[Pi]"}], "]"}]}], ")"}]}], 
  RowBox[{"m", " ", 
   SuperscriptBox["n", "2"], " ", 
   SuperscriptBox["\[Pi]", "3"]}]]], "Output",
 CellChangeTimes->{3.7562373093332148`*^9, 3.75623734441003*^9}]
}, Open  ]],

Cell[TextData[{
 "If m is even then Bmn is zero (because ",
 StyleBox["Cos[m \[Pi]]", "Input"],
 " would then equal 1), else if m is odd, then "
}], "Text",
 CellChangeTimes->{{3.756237649857718*^9, 3.75623766756778*^9}, {
  3.756244235597748*^9, 3.756244254515493*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Bmno", "=", 
  RowBox[{"Bmn", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"m", " ", "\[Pi]"}], "]"}]}], ")"}], "\[Rule]", 
      RowBox[{"-", "2"}]}], ",", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"n", " ", "\[Pi]"}], "]"}], "\[Rule]", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"n", "+", "1"}]]}], ",", 
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"n", " ", "\[Pi]"}], "]"}], "\[Rule]", "0"}]}], 
    "}"}]}]}]], "Input",
 CellChangeTimes->{{3.756237683154842*^9, 3.75623774642153*^9}, {
  3.7562377865180187`*^9, 3.7562378788250237`*^9}, {3.756237958272558*^9, 
  3.756237994621793*^9}, {3.756238700167157*^9, 3.7562387108544493`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"8", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], 
     RowBox[{"1", "+", "n"}]]}], 
   RowBox[{"m", " ", "n", " ", 
    SuperscriptBox["\[Pi]", "2"]}]]}]], "Output",
 CellChangeTimes->{{3.756237855970038*^9, 3.7562378800130568`*^9}, 
   3.7562379962349987`*^9, 3.7562387133251*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[TextData[{
 "The green cell above matches the text answer for ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["B", "mn"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". There is no text answer for u(x,y,0), but it would be the pattern shown \
above, in cyan, with the restriction that m be odd. The general token ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["B", 
    RowBox[{"1", "n"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " does not have a negative sign, which I guess is why (-1",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[")", 
    RowBox[{"n", "+", "1"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " was chosen as the formula for the sign of Cos[n \[Pi]]."
}], "Text",
 CellChangeTimes->{{3.756238807332301*^9, 3.756238877712812*^9}, {
  3.7562389188088713`*^9, 3.75623893827872*^9}, {3.756239129123348*^9, 
  3.756239185966731*^9}, {3.7562392204936447`*^9, 3.756239256356688*^9}, {
  3.756239529405229*^9, 3.756239530747675*^9}}],

Cell["7. f(x,y)=x y, a and b arbitrary", "Text",
 CellChangeTimes->{{3.75622249126929*^9, 3.75622251076402*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Bmn", "=", 
  RowBox[{
   FractionBox["4", 
    RowBox[{"a", " ", "b"}]], 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "b"], 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "a"], 
     RowBox[{"x", " ", "y", " ", 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"m", " ", "\[Pi]", " ", "x"}], "a"], "]"}], 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"n", " ", "\[Pi]", " ", "y"}], "b"], "]"}], 
      RowBox[{"\[DifferentialD]", "x"}], 
      RowBox[{"\[DifferentialD]", "y", " "}]}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.756243101858602*^9, 3.756243105920968*^9}, {
  3.756243169023279*^9, 3.756243171256209*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"4", " ", "a", " ", "b", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"m", " ", "\[Pi]", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"m", " ", "\[Pi]"}], "]"}]}], "-", 
     RowBox[{"Sin", "[", 
      RowBox[{"m", " ", "\[Pi]"}], "]"}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"n", " ", "\[Pi]", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"n", " ", "\[Pi]"}], "]"}]}], "-", 
     RowBox[{"Sin", "[", 
      RowBox[{"n", " ", "\[Pi]"}], "]"}]}], ")"}]}], 
  RowBox[{
   SuperscriptBox["m", "2"], " ", 
   SuperscriptBox["n", "2"], " ", 
   SuperscriptBox["\[Pi]", "4"]}]]], "Output",
 CellChangeTimes->{3.75624311698454*^9, 3.756243172369348*^9}]
}, Open  ]],

Cell[TextData[{
 "The circumstances are not the same as in the last problem. No pattern, even \
or odd, makes ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["B", "mn"], TraditionalForm]]],
 " equal zero."
}], "Text",
 CellChangeTimes->{{3.756243141647086*^9, 3.7562431809178133`*^9}, {
  3.7562432847387743`*^9, 3.756243308075096*^9}, {3.756244289962571*^9, 
  3.756244333617158*^9}, {3.756293615063648*^9, 3.7562936199519672`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Bmno", "=", 
  RowBox[{"Bmn", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"n", " ", "\[Pi]"}], "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"m", " ", "\[Pi]"}], "]"}], "\[Rule]", "0"}]}], 
    "}"}]}]}]], "Input",
 CellChangeTimes->{{3.756243313151352*^9, 3.756243322497591*^9}, {
  3.756243386127614*^9, 3.756243440477888*^9}, {3.75624352193364*^9, 
  3.756243557242383*^9}, {3.756244422783082*^9, 3.756244434406268*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"4", " ", "a", " ", "b", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"m", " ", "\[Pi]"}], "]"}], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"n", " ", "\[Pi]"}], "]"}]}], 
  RowBox[{"m", " ", "n", " ", 
   SuperscriptBox["\[Pi]", "2"]}]]], "Output",
 CellChangeTimes->{
  3.7562434419810333`*^9, {3.75624352930503*^9, 3.7562435585777082`*^9}, 
   3.756244435842895*^9}]
}, Open  ]],

Cell["\<\
I hope the above cell would do if required, because I had to cheat by looking \
at the answer to see the clever device for getting the sign:\
\>", "Text",
 CellChangeTimes->{{3.7562445646895723`*^9, 3.756244611448295*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Bmnf", "=", " ", 
  RowBox[{"Bmno", "/.", 
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"m", " ", "\[Pi]"}], "]"}], 
     RowBox[{"Cos", "[", 
      RowBox[{"n", " ", "\[Pi]"}], "]"}]}], "\[Rule]", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], 
     RowBox[{"m", "+", "n"}]]}]}]}]], "Input",
 CellChangeTimes->{{3.7562446342674828`*^9, 3.7562446803821363`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"4", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], 
    RowBox[{"m", "+", "n"}]], " ", "a", " ", "b"}], 
  RowBox[{"m", " ", "n", " ", 
   SuperscriptBox["\[Pi]", "2"]}]]], "Output",
 CellChangeTimes->{3.7562446825267363`*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["The above green cell matches the text answer.", "Text",
 CellChangeTimes->{{3.756244708164967*^9, 3.756244716940851*^9}}],

Cell[TextData[{
 "11 - 13 Square Membrane\nFind the deflection u(x,y,t) of the square \
membrane of side \[Pi] and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["c", "2"], "=", "1"}], TraditionalForm]]],
 " for initial velocity 0 and initial deflection"
}], "Text",
 CellChangeTimes->{{3.756222578563109*^9, 3.756222637367867*^9}},
 Background->RGBColor[
  0.9600061036087587, 0.9600061036087587, 0.9600061036087587]],

Cell["11. 0.1 Sin[2 x] Sin[4 y]", "Text",
 CellChangeTimes->{{3.756222643329289*^9, 3.7562226637110157`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell["To do this problem I need numbered line (9) on p. 580:", "Text",
 CellChangeTimes->{{3.75629399288111*^9, 3.756294015615788*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Lambda]", "=", 
   RowBox[{
    SubscriptBox["\[Lambda]", "mn"], "=", 
    RowBox[{"c", " ", "\[Pi]", " ", 
     SqrtBox[
      RowBox[{
       FractionBox[
        SuperscriptBox["m", "2"], 
        SuperscriptBox["a", "2"]], "+", 
       FractionBox[
        SuperscriptBox["n", "2"], 
        SuperscriptBox["b", "2"]]}]], "           ", "m"}]}]}], ",", 
  RowBox[{"n", "\[Rule]", "1"}], ",", "2", ",", "3", ",", 
  "..."}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"and", " ", "numbered", " ", "line", " ", 
     RowBox[{"(", "14", ")"}], " ", "on", " ", 
     RowBox[{"p", ".", " ", "582"}]}],
    FontFamily->"Charter"], 
   StyleBox[":",
    FontFamily->"Charter"], "\[IndentingNewLine]", 
   RowBox[{"u", "[", 
    RowBox[{"x", ",", "y", ",", "t"}], "]"}]}], "=", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"m", "=", "1"}], "\[Infinity]"], 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"n", "=", "1"}], "\[Infinity]"], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Bmn", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          SubscriptBox["\[Lambda]", "mn"], "t"}], "]"}]}], "+", 
       RowBox[{
        SubscriptBox["Bast", "mn"], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          SubscriptBox["\[Lambda]", "mn"], " ", "t"}], "]"}]}]}], ")"}], 
     RowBox[{"Sin", "[", 
      FractionBox[
       RowBox[{"m", " ", "\[Pi]", " ", "x"}], "a"], "]"}], 
     RowBox[{"Sin", "[", 
      FractionBox[
       RowBox[{"n", " ", "\[Pi]", " ", "y"}], "b"], "]"}]}]}]}]}]}], "Text",
 CellChangeTimes->{{3.7562940209162207`*^9, 3.756294161107868*^9}, {
   3.7562942277232447`*^9, 3.756294489393701*^9}, 3.7562945225083513`*^9, {
   3.756304765892357*^9, 3.756304767450169*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"and", " ", "numbered", " ", "line", " ", 
     RowBox[{"(", "18", ")"}], " ", "on", " ", 
     RowBox[{"p", ".", " ", "582"}]}], " ", ":", "\[IndentingNewLine]", 
    SubscriptBox["B", "mn"]}], "=", 
   RowBox[{
    FractionBox["4", 
     RowBox[{"a", " ", "b"}]], 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "b"], 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "a"], 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"x", ",", "y"}], "]"}], 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"m", " ", "\[Pi]", " ", "x"}], "a"], "]"}], 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"n", " ", "\[Pi]", " ", "y"}], "b"], "]"}], 
       RowBox[{"\[DifferentialD]", "x"}], 
       RowBox[{"\[DifferentialD]", "y"}], "       ", "m"}]}]}]}]}], ",", 
  RowBox[{"n", "\[Rule]", "1"}], ",", "2", ",", "3", ",", "...", 
  "\n"}]], "Text",
 CellChangeTimes->{{3.75630370696068*^9, 3.756303884706339*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"as", " ", "well", " ", "as", " ", "numbered", " ", "line", " ", 
     RowBox[{"(", "19", ")"}], " ", "on", " ", 
     RowBox[{"p", ".", " ", "583"}]}], ":", "\[IndentingNewLine]", 
    SubscriptBox["Bast", "mn"]}], " ", "=", " ", 
   RowBox[{
    FractionBox["4", 
     RowBox[{"a", " ", "b", " ", 
      SubscriptBox["\[Lambda]", "mn"]}]], " ", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "b"], 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "a"], 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"x", ",", "y"}], "]"}], 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"m", " ", "\[Pi]", " ", "x"}], "a"], "]"}], 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"n", " ", "\[Pi]", " ", "y"}], "a"], "]"}], 
       RowBox[{"\[DifferentialD]", "x"}], 
       RowBox[{"\[DifferentialD]", "y"}], "            ", "m"}]}]}]}]}], ",", 
  
  RowBox[{"n", "\[Rule]", "1"}], ",", "2", ",", 
  RowBox[{"3", "..."}]}]], "Text",
 CellChangeTimes->{{3.756295234757914*^9, 3.756295467197407*^9}}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.772137075011404*^9, 3.772137075641802*^9}}],

Cell["\<\
The initial displacement is defined. This displacement has the effect of \
looking very bumpy. \
\>", "Text",
 CellChangeTimes->{{3.756576550092814*^9, 3.756576559194689*^9}, {
  3.77227319827612*^9, 3.772273219347424*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{"0.1", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", "x"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"4", " ", "y"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.75656888042076*^9, 3.7565689002786827`*^9}}],

Cell[BoxData[
 RowBox[{"0.1`", " ", 
  RowBox[{"Sin", "[", 
   RowBox[{"2", " ", "x"}], "]"}], " ", 
  RowBox[{"Sin", "[", 
   RowBox[{"4", " ", "y"}], "]"}]}]], "Output",
 CellChangeTimes->{3.756568902167075*^9, 3.75657642992587*^9, 
  3.756576754932893*^9, 3.7565773362975616`*^9, 3.756578034210421*^9, 
  3.756579163096464*^9, 3.756579552696087*^9, 3.756580327671143*^9, 
  3.772273161010853*^9}]
}, Open  ]],

Cell[TextData[{
 "The initial displacement is plotted below. The text answer for the solution \
is 0.1 Cos[",
 Cell[BoxData[
  FormBox[
   SqrtBox[
    RowBox[{"20", " ", "t"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " ] Sin[2 x] Sin[4 y], a very neat little answer. But giving the square \
membrane the side length of \[Pi] throws a monkey wrench into the works, \
because, using the standard formula, it creates zero terms."
}], "Text",
 CellChangeTimes->{{3.772273357248227*^9, 3.772273519833742*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.756569340363694*^9, 3.7565693455549717`*^9}, {
  3.772273144853812*^9, 3.77227317015742*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx1nHd8T9cbx1OrahVRqy1iV9UubaW5sfdepfjZEpuqPRJF1d5Se4VokdhU
5Ks29YtZFdQuadBaJfbv3pzn/Xy/bl+/v76vvB3nPudzz3PO85xxAzr1bdo1
lZ+fX8e0fn6p7d+a8TOjGuabGsSvtfOrB5PXFf18+vNDZwvsOGrBRx9dOHJB
Ypeg+t+euZl/xwXl2/66su7bMwOCitdeueG3iX8o90s1KDRi5OCgH+q365t/
x23lpYrnquLwucUnzd304J7yvU33BTr1/PZD969/m/iP8sArGyvOt5+b+6Pq
zZ8FPFF+oenXfz+eVaJy6+gC5fPveK78U1M+7r8RLycEFPcLdtUfdyeh15BN
D95Q/pGxJy7zu+e71/CkVv6GsT/uo7Z1Wv02Ma3yONPeuAaLttUMbfmm8gij
T1zfi0UqPgt4S3mld585eu7ib3SdO+FVvglnOunf/Mbf6Ni2dvtlFjrDC7/o
PO1WvWgLneGFwqcNa/3NJgud4X3npWvtcHSGh1UYfCrJrged4e9uOFm/lv1c
dIbf7T/Tc92/WyA6w/OY8h50ho829XvQGd7H2ONBZ5f9HnSGlzbt9aAz/JrR
x4PO8MHP++a39YxDZ/TbU2977oiR3VVn+O8nm4T2jIrUv/n9rl3TPV/YuqEz
PNub/gVyt9iuOsPfPlXlUS6bozO8VeZiDZx60Bne5lxMzh72c9EZvuWtEt2O
fNtTddZ6THnVGd7S1K86w7MYe1RneHZjv+oMn2baqzrDHxt9VGf4snHV89h6
qs7otPrBob8jEpurzvC5s0OslzVnaXvgY0s8OV3D7m/8zW/tW2FZQm190Bk+
tVvtP0Nsjs7w5Qnrezn1oDO81cd+2V/Yz0VneHizNJ/kC/9CdYY3N+VVZ1f9
qjN8irFHdXbZrzrDJ5n2qs7wdUYf1Rkeu7fGXVtP1Rk94uOdcaZ5HDrDny/9
dL5frVkedIanm5LroeOn1Asvn7Rnk/N++ZvfvzpMnOpwdIZ3K/3fSU496Ay/
/d6JXq9s+9EZfnZmnYoB4V/EojP8T1PeQmd4V1O/hc7wO8YeC53hFYz9FjrD
M5n2WugM91+Woo+FzvAHi/OMsvXU+Y92f5/GGf+7q85wdENneHT5LmmdcUz7
vfC5X2/5yvE7ngdPW+V6HYdrOfm9deWT6Y4/ojO88J2Ajs44gM7w7IOP7LPH
DdUZHmDKq87wJFO/6gxPY+xRneHzjP2qM3yraa/qDG8o7wWd4cODUvVwxmF0
pn0JzZ15uZPqDO8u/Q2d4fOHT8zlzC/oDL8tuqEz/Jcn0X0cjh3wgzsXffmn
XQ9/8zsgXdCImvZz0Rnevmzfrdf8u6nO8L6mvOoMP2DqV53hR4w9qrPLftUZ
HmnaqzrDR4i/oDN8y6EKn9t6qs60478tUuKlnegMN34aEovO8Nyn/Spf9x8U
i85w/5T+NjwWneH9qg2b43B0hhvdBsViH/yPf4puy28/V58nv1XmZA3MVbT0
DnSGXzHlA9EZ3s7UH4jO8L7GnkB0hucw9geiM7yAaW8gOsMfGX0C0Rl+8IX/
XSf+RGfsPWv6s86DcMY3dIbPk/eLznD8FJ3hh6X/oDN8v/Q3dIb3k/6J3fC2
pj/rPMhvH+n/6AzfK/6CzvBD4l/oDGccQ2f4cvFfdIYPF39HZ/hm0591HsSu
+WZ8Vp3hzAvoDI+R8Qqd4Yxv6AxPJ+MhOsPxU3SGF5HxVv1NuPEXb1wHLyjj
OX/zi27oDGe+QGd4hMwv6AzfJvMROsNlfFad4TI+q848/5KJN1RneEaZT9EZ
7i/zLzrDq8t70Xld+CuZ39EZPlD8BZ3hzyR+QGf4LRNvqM7wJxKf0E74V9Lf
+JvflxL/oDO8huiGzvA8El+hM7yQ0Ud1hqdekhJvqM48Z7KJn3UehI+U+BCd
4X0knkRneEmJP9EZPkDiVXTW50p8i87wIImH0RneycTPOg/CK0u8jc7wSRKf
0354f4nn+dtlv86D8IGSL6AzfLbkF+gMX2biZ50HqW+XyQdVZ3iC5DvoDB8n
+RE6wzNJPoXO8AySf6EzvLnka+gMbyH5HTrDY0w+qDrDm0r+iM7wZpJvojP8
LclP0UV1lXyWv/mdLPkvOsMfSL6MzvBFJh9Unfl/q8z6huoM/13yd3SGW5Lv
ozO8gqwPoDM8TNYT0Bm+UNYf0Bn+oaxXoDM89YCU9Q3VWfMzWQ9BZ/h8WT9B
Z/hoWW9BZ/jHsj6DXvC6sp7D3/zel/UfdIZPMOsbqjP/XlHWl3TdR/iKhc44
0yUOneFzOjVd76xfoTP8SmVn/B8ch87wLJ1WpKyPoTN8yQFnXh4Qp3Ew8/aG
0pWc9TeNw4T/+jQlXtqJzvCWprzO6/DFpn6dh9S/jT06bsKvGvvVz+ELTXu1
X8JjjT6qo/br4WMeOuufeW6u+6ngjliL3x/65jl+e/83us4IH7Bl/L6F9jhz
cVefoHKB6YPhR0x5Hf/hS8al3m+Xj7u5/+DJTQ+uWEfGvF/i7MRfre0Bo9JP
GbHVgvM7bl3QyC7pN1qhR8KmPwv4U8vvOlzrSp1/tiun/JLa9R/Fp95sDbr5
3uqA4ne1fNy4h1sn2/XDKd+nzfnKTv3tdmwJS8r8RrCrvAfuKu8Z+bRQvxEJ
qYJd9ih32eNZVHnmf7JEptHysaa9yin/nWmvh7+xt1+n+BZdffjW0Cfjange
WAMflt/p2IkOlM+6Zc2NY/Zz4ZRfc2TUJMdOyvFbK1PPHE79/E35ma1/CPXV
wVVedXOVt9DBZY9ylz0WOlD+K9Ne5ZQfatqr72/Y3akFN4x9aX3l4tg1QOpB
B8rzXDjl/cVO7KA87YJTvq5LB1d51c1VXvuJyx7lLnu0n1B+iLx3uL4fVz/R
/+fqV7tG+DVa2i9d8C7ph+hA+VnSb+GU3yv9HB0o31n8Aq7lXX7kKq+6ucpr
P3HZo9xlj9rB7ygZN/ib8ntknGE8YtxivGJ8g88241scf/ObJOMhfzPObR30
JKnagBY6PlLfhn5DUzjl4acN1/FQ8+MzU2c7OqA//HTV+R2c9qIzPHVg2mpO
efR0ce1Xrnq0/8Dbm+dqP2Hem5U54YrvOAN/VL/zVt/+AC8yoNF03/fu4voe
XfXo+9L1N/Nc9WvmSbFH9YE/lnqwB15Unos9Lq76uOpRfTTfFB2wR+NY0Q17
4MdEZ+yBv6ps3gv2uLjq46pH9dF1Bekn9Df64SzTD3U/jn6328y/QR/GDh5V
dMdai9+OPa6nehrSxSrasO5POaPTB8N/MNzD3/z7GuH8ze99qYf+zf8b+/GT
dTUH1AiiHP+e3G7+p2nm1IijHPa+KvfuZw7nb/7f3spD1zv1UJ56fjT1aDzD
vw825TXfpJ5jxp44/tZ9nvIpzw1qNOz2k+cBh3W/r8vAtHdedllsZUj7NP3z
gAR9bkSm98s92dUvCE75qYNX7Blz/Edr0I1RR0YkXNXy+4blK3Q/7usgOOVL
9huRq3nWjVaI9B/K55pTs4UT18EpXyfTL6FOXN1m/ZiWw3r8reWL5h5y6Z5d
P5zyo4bUvdTMrr9onapTRyTc1/KfzQ/dnGzbD6d8lH/8vXDb/vyVq93b+cK7
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
XxcdT86uORxRLjDRavtp+D/zc01WfWp/l31ZaMubVuCrE7WiKs9RfbaHfLlm
ab8b1lrX+gx2NnCtJ0wUOw/sKJ/ZtlPH5ydi5+Ufm/1s26njc6jaWeb90826
6XiSIHYuT8631bZT9cTOya1uRth2qp7bxM589X5o4Ls+0zAiOu+xsHtWj+Ll
m/rO7+nSn16clPmetTK83YI/7PeCnrsGJxdMt+CuValY7fdnLtik89eRKb+0
3zD2L+vX9gWrHLffO/p81jtH98TFd6zGrvUWnuteT+C5owb9vd/ph+gTJ88d
1PrwlRkLNul8xHPbdkl13X6uzkefynMXxCde910/mZZ38pP7uex8eeCimb7r
CTUnxozMEvnQCp4XMcr2d23vyyen3yhR7qF1qvTXMVbcFm0vv1aPjZUdv6a9
F7d3yx7R7f6/1k94bnXX+kAtee77h14ufMseZ2gvz136860e9nO1vTx3+9Gx
W5xxjPby3DELHnfyjWeOLww5mzM62dp9oe/n354pp/PvhExT2pYLTLbMeb9w
ba81YsPlBocfW3surJ7xtz3e4iePb/3aJbTlY+tByjnJFRrPRH/5NHHstUdW
teQvJ5ayx3Ps6/5Lvt5L+z2yztbfmuZve/xHH37d6yfY+bzMwDqj13fSfF/t
TDkfG676BIudpv556i/JYufRlPOxKzSewc6QvLU223aqntgZm9Le1aondubz
X13Bd/0Ee+9lNxw9D00Nrdzy1DMrWupBz7CXUzz9OzyzvpTnoucnfTZWm3Ln
qbVX7ETPu7+fORg17Kl1SNqFnlENntXb9+ZTq7PogH0dduU/fmn2E+uV0U3X
T/it6sr3D4udp+W9oGe42PmJvEf0xM4kee/oiZ1bpJ+gJ3Z+Jf0KPbFza/B3
gU4/RM+mywLmtv/9ldVd+q3O12JvjPRz9Pw5rMfiOY9fWjubN1/jO1//eey3
EomLX1j5xI/QZ5n1fH3qki/+tR7Cc935Pr9B4tfos0ee2/fU9o6+8zXPbSDj
Bu3luftknKG9h7ON/qzKT28ET5NxifZG1pnxPD7MzrtlHKO9PD+g2KlBrX3m
63c+OJcm3QK/4LEyTtLeex1uH5jV8d/rGzzXnb/z3Isybmt/kN9WcwKqtPaZ
r3nuNpkXaC/PHSfzCO39s+mdD06NSx18v66Zd2jv/omvbnWonzr4PzJP0d5l
e7Kt/yt76uBPZF7DX+iPfn538znzoK6PlatYLsPSVMGBa828iT4f96j9cF63
VMFXZZ5Fn2zL22wt8lGqf61vYKc7H8fOXDLvowt23v7ExAnY57Vz+nonrtD1
MbHTb6KJQ9ATO8MkbkFP7AyobOIc9Hxr9pd5ujZJG9xH4iL0/OOX3ufv50ob
fEbiKPWX1GGLwi6mCb6w90HXGT7zdYsft177oFya4DiJ09Cn7LVDkduS/71e
wXPd+TjPXSVxI/rw3MnJA0v4ztc8d7bEpbSX54ZKHEt7P/j1cPrH770Z3FXi
XtqbNvOFI2OvpQuOlDiZ9l6p/tfk7D+kC144NFWRYJ/5mucXkTic9jYpXGlO
nX3/Xn/gueld+TXPTb/Y5AW0l+eWyzD0ku98ze+bknfQXp57RvIU2lsv5yfJ
ExLTB7fNMnXU8/2dtb2cFwiWfIf2phrfdsTKr9MHT5T8CH/h3EUzyafwl5/+
CfPbnSp9cFXJv9Bnzkez9jQ4/GZwc8nX0Ad7M7nWH7AzOrnma/lyMbEzd4jJ
H9EHOzdLvomfYGd+yU/xF+xcL/ms7h+JnXcl/0W3xpKfXs6copvaXUZ4kuHq
X83k/7Uw+bXqubZK9Gc1Paes2ab/6Dj8RWTW80mZr1g3jB/pPH6Ic5VyHgx+
1HVeFH5Dzu8slXNl8EThC4XzvlaJPR9Iv4L/Jfmjv8kflbcQO78Xv4MPZXw1
+Zd3H1PqL2Hq1/G/ldQz19Sj8z7l54p/wTWfNXm0cuq5JeMPnHxwuslDVf92
Yu/7Zr5T3jfh/Qwd6z+wYs28r/2c801Z5Lyim2dzcfd5VDePEo5u/DaWeZC/
PZKPDDX5iPLeYmc/iRPgrySeX2LiedW5rfx7M1O/vpc+Uk8fU4/6RdvX9VFO
fhRo8jLl1LNb4iU4+cUZk9doPy/XYdOqo9leWidd/NN7B6sOOe0X/KnUj26c
CxXd/sXXuDjnznLIeVc357wuupUVexZLHgTfK/GY6KwcO0dInghH1+YunWnv
Utd7oR7eL7pR/lfJB+HEh6KzcuoJknwZ7orrtJ/z72NdfvH95uzZSlVKF5xV
/AvdOJc3Xc7NuvlsF3efp3XzPcJ13BB75sq6DZz5fZqMD3DszCnrWnDmx7Ku
cYb6I1zjEvXkkPGNci59lGPPVRmf4dTzjqzvwbFniYzzzCPMDzVkXuBvfvvK
eix/Mw+GZHl93mFdt7tZ99Z1Xc5fDTLnr/R8nfucLbrBD8q+BvbDJ8k+C/W4
z8dSD5z9Sn2vnHeV/VPqcZ9rpR74JTnXQT16TlXOmVCP+zwq9bj2a9QeOOfH
OJeGfpd+bvCPs7+AjvD8I49HP9nVQb8/Aq+08ERIn04/6rko+ImfPxn2V/YN
3vNAwlP/c7mtw9EFfq1Hp3297Xo4VwE/ks8/r7MOwPkA+Az/Q21DmnTWe5Hw
A6a83ouEXzX1671IeCpjj96LdNmv9yLhVUx79V4kPM2eFN086ElcmfDbO6uu
zlmpesIf562b18mz0BP+S40fUvtN3qh6wucU2TgoqsA21RNeLM2Dhg5HT/iM
MvVnv5q0UfXUvL/xp12u2PagJ3xfobHPj5fooXrqOrcpr3rqeVhTv+qpcbSx
R/XU81PGftUTfsK0V/WE3ze66T0jeMvOxxzd9P4d43f6nYsHRddd6PV/4flP
dI+aEd1edYbHhSVU7DNyjeoM/8/ZfD/7H45WneGhi0dNdDg6wzPMPLKot10P
OsPz7a8eu862B53hnvdPtKrxrKPqDM9ryqvOrvpVZ3iIsUd1hncw9qvO8AOm
vaozvITRTXWGz3qZb42tm+rsXc+/3GnCmaZ67tpnnf/s4j45dqGzl+/2f5Dc
Qe/lebnf47dLdNV7eV6+9KTD0dmn/nX37XrQ2cs7BH5r24POXh789IP7ufRe
npc3dsrrvTxX/Xovz2WP3stz2a/38lzt1Xt5Lt30HLuP/Qm2bvpdMsbvKhUq
Fttgvxd0hseMnT9ylv1e9LtLwq9f/D62r/1+0Rk+NSlg9Tt2f9DzlMJbrgvv
53B0hme5ObGQUw86w28XutDL6SfoDJ+QtKdHzWcd9Z4pPNGU1/kMnsnU7z3v
Iry5sUfPZ8CnGft1PtP8zLTXew5AeBejm+4rw8ttbDLK1k3v+5OXhw3fv8YZ
Z/ScvfA1EXWcdTDVGV5p0PN0zniFzvC1jc8Mc8Y3dNbypXM1czg663pqh8Xz
nPETneFDHiR2d8ZbdIZHRpZ/40SJHqqzrruY8t77MK/XrzrDKxp7VGf4OmO/
6gz/3LRXdYbPN7qpzvAMV+JT1g/RmXWOR2Y9X3WGW0c+bLF1eAfVWc9ll/z+
dC97nkVnePT+sqPu2PMyOsNnPk3o4HB0hjdOU6KMUw86u/dH0Blevt4yq3uT
zqoznH0ldIY3MvWrzi57VGeX/aozvJxpr+oMf1f2R9AZvqT0VEc31Zl1o/uy
b4LO8M+NzjoPwovIc9EZvk7sRGe95yHtQmc9LyM6oLPeFxHd0Ble1uis86B7
PwWddT1M3iM6676fvHd0hq+XfoLO8FLSr9AZnsforPMgfLHRWedB1uFk3PDG
dZxnN+OGN64TLuOGN64TLuOGN66jvPipxnXCk8SvNa4TLuOGN64TvsqMG964
TriMG964TjjjksZ1wmXc8MZ1wmXc8MZ17O/IOKlxnXAZN7xxHftCZtxQnclT
G8p4js5wj5kHVWf4XZkX9Lt4whfKPILO8C4y76AzPK/MU+gMT5Z5DZ31fpKZ
B1Vn+D8yb+q5WM5TyzyLzvBOMi+jM3yRzOPorOcaZN5HZ3g/iR/QGR5k5kHV
2buf0q+LE5+gs88+yzknPkFnLy/zjhPnoLOX70524iJ09qn/tMP1noPy4Ggn
7kJnn32oz504DZ29vPFzO67T76O6yuv3UV316/dRvbyDY49+H9XLjzv26/dR
Xe3V76O6dNP7jF6e9bwTD6Mz+fe9n0y8jc7wtCZP0XkQHiVxOzrDq0ucj87w
RpIXoDP80QyTR6AzPJ3kHegMjzF5is6D8FSS16Az/B9Tv86D8IaSN6EzvIbk
WegM3yh5GTrD/SW/Q2f4MJOn6DzIPsY5yR/RGS55t+oMPyp5KDrrfojkreis
97Qkz0Vn+EzJi9EZLnm36gzfb/Ju1RmeXvJ0dHbVrzrruRVZB0Bn+DxZN0Bn
+ElZZ0Bn+ANZr0Bn+Bcm71adWYfzk3UP9IS3kHUS9IRfl3UV9ITnlHUY9ISn
6mnWbfSeD+fTZZ0HPeGrzLqQ6glPlHUk9FT7Tf2qJ/wdWafS7zoJ/0PWtdAT
3l7WwdATXsToo3rCC/SpEOOsp30o5xpZRxq+uXYtpx7O/8HbLE3q5zyXc2/w
5mIn573gD9e/POO0i3NR8NN/F27n6MB5IHhYrwaV5idWCOLcBrztmITljv6c
b4A/PTmzmfO+2NeHh8v7ZT8bXvpS7+FOf2DfFz5ixn8+eWW/R9Z54e2/fXX3
6f7OHs5Zsv7TZXbt2SdDtul5RHi3+H23ykRu1/Nt8EmHM4+5/2qznj+DX+93
tUbdbFF6/gleOOX7SOF6bkPrL7mgpf1cD+cV4CEh6/zKRm73sE8PX2WF/GE/
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
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
1m/ScdUYsxPcV7aUHBOl03dMnuctorWfuB9jHki2JcXMZoXf15hkbS2NnZL1
p3z4Q4yfG/y839N25W+byji1P5/7wRP1fjh+zhzbjuNvG8v4uxv8YxlbZzO+
HtyTsa2DY9/Y3LlApN2y9Elv0/+jxnDUyq2ZtDa0Rlbl1k6y007J7+ExrTfa
3hwhz/4THQPLa2mtNeD4JrNm2JG+7zLbUy+Jk9w68E2ucaniEZ9fD9bYP8nf
BWvFTbT7BsfB8Yx5Fb4EfkQ+JHguvpOtBecySzTXHL9kzq8Un7UWhmseOX7I
bOvHcg/fZ9ZCareTv80d22QzI+HGusfMOUB3xv9exspWuX27fNMUxXbajbnz
Den55bn1eaXcOYtytC2l0eD3guf6Z62bYE37mvQGR9XcmrspbZE7F2pBWzm3
r+ynWJDbx77Ifb+TOfb1x5bWBPvSRqUek+3vGr1GzqJ/Ip9fhjdw/thgv70G
HsDfquf2kxVor6R/ttYUR8XcGn2DfFbudy07f0j6hPak3Db/AJ8783lpZtu4
mc8r4M16/tzauh5Hn/I7ZOffBOvhGfzXlr5tOepy9JVGyq3rlmt9MGZO7rxm
69wxZXywP/+cz18H55sbgv2v/PDPst3ouCD9cDD9p8BTc8dUxVZpKtU3ntH6
5P1tDF5Di2h/KNfIvHJ9NMmdwywq38cy+n+i3Tm3P22f24+3yb3mGuTWuPJX
cxSraJ/NbduvBOePb+l7aHP6d89t66ohvKB5435+43PD3LpKNivblS9QHvoa
Y76X7gi2wc8V08rYpGVYsZw/2ZlssHnu2Kwc8AP5Na6/ubSBVbS/BNvXJ8H5
/go9n/xM7rnZK7f9NsutuWX7WgOaA8VCfe862g7le1ieeb4174pzB5ZcLfO1
2pZzrflsmTtOa05O5bg5t+7eLfeab1Nes055jXbldfSdeubtyn59h/I3jdV9
KKYqf9R9KVarv315b/r+g0qbE+s5P6X/X8ZtQXty8vfrPqSJG8F/Za4T7RYd
C4aVvq1+7hzp5Nx+5cng/ER5yn3wj8HXWEpbMTqfPYVzd4iOoafDVaPrWqdJ
J0bHlCFwHflNeHBy7HiEa7yTfO9ty3uuolxL705rK1qTKOYoZklvSL/oXe1X
2sb2ig20Q5Njq3yy8hdpBtnZ8uT6nfK1pzi3IeObw2cm52PKy2YF10Fkz/8o
l4nWY9Lnz8OvZ9bbqi+9wdjNtGPpn0j/tfBV0XWY6/T33PUr+UjVgmS7v8m/
5a5TKUap3iV/KH95PefeTP/10orRtZcb4Rui/b/qiBOj61030D8FvhOeJL8U
7W9VS5gaXfOZTP910XWzicl1M/l8xZN+0XmWcql20XpgBH+fxL2cBD+vuY3O
MaVfesD94csZ0z16zGi4JzwQvkL3mTt2L9Dz0n8ofIF8VLQeGwk3i9Yn50jD
Kw/Uc8GtY6ld4Tbw/vB5cFN4L3g4vEe03jsbbh4d+86Fe0XnsFfCl0XX1ibA
p0XrLuWIQzjGwnO5x6HwVbKB3O9U73YpPDJ4XjQ/F8G3wy/pmUr9qRzhYvgO
+GW9p+DcQXlf31IfSqP2LvWedGOvUgdK+/Us9aE04YmltpQO7FNqQmnL/sG5
pHLbUdz/NfB4nmV0sC3JpsZH13YUc7twfJ25fjIsWl9JZ42IzotVf7oAHg2P
Y+xweGTmfPBR/lYL7sw1z4Nv0rzD5wb7wudy1171vZUZf2X0O5GmUo1V72qL
5BrrtNKuVHBXPJnHucNk0/D83DVQ2afsfEm0rlCe2zu6LiGt2CfaTyonfTi6
/qmc7hF4buZc7/boGrhy1enwo5lz1RnRNVLlhtJ5ur602k+5td+XfO+TjFmQ
OR/8OrdmWE1/y+h6/te0RbR/W0Ybo7Wl8lDVE6VflId9w7mvwGvh2dF5322l
rcrmv4quxy3OnPP9Vb5n1U8WRp+rOsCC6HtQTj0/Op9S/rsIfjVzvv9cdN6n
2s/S6GdR7q8an3I65cUpuh6l3DZE6z3l1H8G53qqt/wB18hcl/g7uP6mGs4/
wTU31WoUI+RvVcPJlYdkru305Tgtc92gSfReyXra3aP3IL6M3m9QDFH95pbc
8/gSfFx0jeVSzr0Dvg+eAtdSngB/HB0XpWEUJ+tF70es1ZxE12EuZnwn+Hj4
IvjE6PGqb3SL9jmj4AHRexOqFR0fXVO6jP6u8InwJcn7E9LOqp81jtbD0pPb
l37m02itrHmXdm4bvX/xbbRP0z18F70vs1jnoTda8flI+r9R/Izeu9kQvUcj
rS7dXTO6Jrk6er/mafrqcu7O0ftHn9Mennu+7g/OrxpkjneVo+uWK6NjomLc
B3o3uef6CeUKfG4Pf6HvKZxnyh8OgL8IrjM0KZyXyof/U/qUmrR/J/u1GrSV
C+eKitG/Jq/hrRQ3kmvKtaQxk33l1rR/JfvK6smxTTFOvuKPZJ9Sjfb3ZJ9S
lbZK4bxdMXrHwjU4+f96hWttikHbFa7BKXZsCz8bXNOrVrjGoXi9S+Gapmxj
p8I1RMWXncuapuykPrwkuNanWqc0j+p1NQrnwIopKnqrvl8bDoX3JLZRjA6u
3cmGdQ1pJOkc6W3lStKy8neKp9K9yuOka2UTmm/Nu/T2c8E1NMVTPYfyWWlv
5bnKeaXR88L7InWkf5i/3vT/QFuhcN2/Hv1bFM7Jpa+2KlwjkHaqVLiWIX2l
/bjNsn/aLQvXMqSdYuG9jbqan8J7jdKBReF9ke3kQwrvDWwLVy9ck5IO3Lpw
fUF5Vs3CNQXF32+S4+Kfss3CtVqtr6+TY+Ef9H+VHOd+gzclx+AK8s/JeyGB
9ufkeFyR9tvkmPoX4zcm77XktN8lx8W/6f80eS/zR3hN8l6s3tUXyfsBm+EN
yTH1d62VwjUa+Z+1yfuRG+n/Mjke/wJ/nrzv8jO8Pjlm/wqvS94r/Qn+LHm/
ZBP8SfJer2raHyfvH8snrE7eP5av+CU5FlaifS95T0Jrc0XyPoHWu/SodKn2
DqoWrt1IM29TuJ4lLVSncD1LWqhW4XqQtFPtwvUg6Z/3k/cV5Ic/SN7TVQxa
mbz3IF/9dvIeg/ztW8l7GPJFHyXvYct3vZG8ByPf8nryPo18zrvJ+yXyyauS
98UVKz9M3heXr1uWvL8i/zk/2A6lAxsVrpfJDw+i/UfaKbieoJqA8jLtwSnv
Ul35meg8V3Hzydw5+7vBOlOaSlp0ehnHtU61t6jr6Hr3Ru/xaR1p71N1V+XW
2mvXfqLqFto3VP1HtZ9jGT8ksy0pvgzMbBvnR+sW2Z72iSf9n46SzpfdHhGt
jRVHtIc6vtRd/aM1mGLQw7nrOXreY6L1tuLjSdH7F9LeZ8FXZ7btS6I1mNaI
tIpyDa3NG6P3TOVvJ0XXYaRbJ0fvn8r3KheQFpIPV53zW/iY5P3uJL2ZXAtV
TFN9SPu/moueyfvjql2ohvFg9D6jfMW18MzMPvxSeGrmdXobPCezz3wIXpLZ
bzxRahVppAnRe6by+dOi9xwVO26JrrkpT7k1er9VMWhMtK7WelE+pbxGcUf1
mjGZ7+/MaN0u/3B6dL/8jPZqlXOrRqIcbVWpl1QbVM1QdQrVDJXznVC4dqc8
r3vh/T7VgJR/1gl+b4qnqpOr1q16kHSyNLZqgsq312Wu7ajeqFqJYrlqeqqn
KKdTPUq1LNUjVI9SnUK2pxqgaiLKGwcHz4tsW/s2qoOpXqG6kGpEqlOonqba
hPJH1RJVh1RtRRpaOaNqNaq3KxfvxrNUlw8o9YNyY+XIql8pDxqd2acNjV5T
8o1DOK7I7J8HR+cLyl1Ojd6nlm8cyHFxZh94SvTet3zsydG1TfnMQdF2Lt94
RnSepbjwbPQeuuKXNIj2iaTDtQ/x335EcG1Pe0PS0h8F7xlJk6sOphqK1u/u
hWvryjc1x5pr1cS0hrWWVSNSrVK1Pu1fqkanmoqur5qqigOqKzUuvMcjrag6
tt7VUbR7F/6dhHL2V5L3nqX/2xT+fYlyyf0L/yZD2vXEwnFd+61NC+8TKP/d
r/BvNZSP9y1Kf8d1Tir8bNpLalf4dxvK6/ct/Bsg5eb7FP59j3L/VoV/z6F8
ba/Cv8NQbaFt4d8PKffvV9iG9BuD3oV9rvZ82xf+/Ydy/56lTeh3NX0Kaxrt
gfYqbOvao29d+Lc1yjH/B6XleBs=
          "]], Polygon3DBox[CompressedData["
1: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
          "]], 
         Polygon3DBox[CompressedData["
1:eJwt1nm8jXUeB/BzlyihxdKkVCra0CZNSZsQUYTK1mJfruty3SvLtWcZXJOQ
5XJxKWSpxIytDZWxtCkKqWlapmZaZmlR1Pv7Os8fn9f5fd/P93fOebbf89Tq
NvDe3MxUKrVYTpL8rFSqyOdeuE82ZqdSVWSM8Z6MVKrMtnl6Tkh39rqMZIPV
Y2Wq8e7olQ3mDZTaxkPNvcW2Onp2SznWgpVjx42f0lfmM0OOsp16ctnF6kJ9
N7OL2XK2NP6wfORjB1vLtqi3yoOsKdsl2eqm5tqc+sW4qsFYn3vZMjZfz145
mbVmJ7PfjP/GTvLZPCN9TH41Hm3unT4XsQGsvZ4xrAUrZbmsA1vDNrHNcg9r
yP4gFxo/w1bLCj095TTjruaeb1t5PR9Idfac1GCnq6fo6xX7pm8GK2QD2EWs
gDVmtbPSvxO/dy3/izyTnT4ncW52xT7JC9npYxPHqLH6r/F/2HfsFuNJvq+d
bS3Uo3hztpDlsHbsDDnHeH18l6zSU4FVZWvUa2Ul+xdrYDzc3Ca23aBexpew
39gRtp1lsB4xj41mBWw8a83K2GDWkY1jrdhSNog9wErYXPYD2882swnsbraM
5bNObCGbx35k77EtbAF7gn3L9sT+sMfYPWw5G8I6s4msTVybrIB1YWeyEXHd
s0VsFsuM88nWsTHJOfqPtGclyfHrpi7Vt4D9zA6wbWwxK2HH2EH2IvuvdEiO
fVxr3dW99VVj3dklrHKcDzacvcYWsifYIjaf/cTeZ1tZL1aVdWN1WCW2R8qz
u1h5dsK4nL6+cd+yiWykntPZMLaTlbCZ7Hu5g01jnVgb9XR9g9guVsomsmks
j72RHKvH2Hq2M/6z9GKt45pnE9X79a1mS2MdYTnsVTaXjWJ/Yv3ZK+xJNpqd
xSax99gaVhb7xfrF2sUmsSL2ppzK2rFTY/lQb9P3Gftc3mQb2STWVv20vkLW
lS1hi9iv7EP2ctwHbE7MZdvZplj/WEu2mA1k97HJ7JG4J9lklsfK2GJ2gh1m
r7IKLBbizayYTWCnsSHsZTaHTWPr2Eth8hBrxjbIvrgW2d9jrYjjJOcbDzS3
oW019dRgj7NP2Fb2PJvDJse8xOL4fRbrVZwfVo9dpJ6lbzw7wjawhWw2mxDr
MNvIStjHci57mNVm56jflfPi/mFP2VbTvE9YTeNHkmvyXPWTfAr7lG1jy9gm
9gH7MNYrVsoKWUP15GS9ujHWWDaVHWLr2Uo2l01nX7AdbDUrZgVxvuO/sGI2
gxWyt9jTbHoczzgnrC2rwDLiOSOvG8/gB+P/mPcPVsu4p766tl0Y11k899iW
ZM2O634zO8QOZ6a/I77rHams7qivcjx/1V/LVWwIu4ldo/5KrmT5rBG7Wv1P
qc8GsxvZVepv5AY2lrVkt6o/zUpvj76NttXxP/bH2hHXuFSx7RT1v+U69Qh9
dyTH9NuYy8axu9ht6gLzr2ETWOt43rAv5TI2gF3HrlB/Lpew/uxadpn6QKyf
rBWrziqqD0oVdjc7K1mbjmal58TcZ22r5TePxDnOTF9DcS1VVb8lFVkHVpFl
qb+QS1kOa8AuV28x/yj7ONYito4djrVD3UlfTVZFPTyeIcbvxloU92zcf3K1
8Xh9rWxroOdsNi3OJXuBrWI/Ske2JHlG9Va/LZXY/awSy1b3Mfds1pvVZ9VZ
X1aD9WFXsmrsJ+mcPAfjWdZX/T+5LzP9DhLvGz3U88wtZl+ynfGOwX6RB5Pn
VqxhOeqZ+orYAbaWzWb/l/sz0+8vsV71VM/XN5N9w3Yna0Tj+F3jP8baK8/G
85j1ZLfHGi3Psedlu/GO2GfbbtZTjY1T7/N9y9kC1o+dx3KT6yXu/R/kgWTt
zGO91G9IFmvCDFPHYg02eChZn4eyAeoc33cBy2PXx3oVz3cZFfcpW8fm6OvB
TmFtkmst3vVGxjuRzwWsH7tX36OsEZvOOrMmWel7JO6VlXxV/L6eypJv/JK+
2bZN1TOUXc+msPasEStizZJ3gf6sLctn9dho1pzVj31lfdjbcb2xYeyYdE3e
S+IdpL96hL7b2GzWnbVkw9hNrJh1ifPCfpYumen3oXin6afO03d57Hdyn8e9
elweZivYoyxX/bi+kez95Lka7zmD2BWsiDVldeOeYbeyWaxbKv3u+Gc2NPaD
rYj1kg1mddko1ozVY0tZKTvODrFX2O/UaY18
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0TssnlEcB+Dz9aPurUEIEiJiZGh0wVekkcYtbhHBIGwMGBlETAxi1EGM
DNKxHcwk3dG63yIWZvfr8zH8znN+eYf/Oe8pGhhpH46EEKbkm018X2E5492H
EDKZFA2hkNksYwljLGcTv7OX7RxiP8c5yhlO8ifnuMxF/uEvrrMhIYQcM2tk
U69iuVzJln7Nf7zhf95yO34+7vCeu3zgHh+5zyce8JmHfOERg3sdI8ITXjDX
t1o51WP8Kn+db0Nf5RpX+JsLXOIs5znBaQ5zjH0cZCt7WMtGfmEVi1nKLBaw
wP3PWW3mZ1YyX3rlk97NDHYxnZ1MYwdT2cYUtjCZzUxiIz+ynon8QaNCHaPx
d4u8/YpwacmLvL//K7qbO/A=
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{761, 1052, 514, 760, 1214, 968, 762, 1215, 969, 763, 1216, 
       970, 764, 1217, 971, 765, 1218, 972, 766, 1219, 973, 767, 1124, 1287, 
       768, 1220, 974, 769, 1221, 975, 770, 1222, 976, 771, 1223, 977, 772, 
       1224, 978, 773, 1364, 1053, 979, 1054}], 
      Line3DBox[{775, 1125, 1288, 774, 528, 776, 1055, 1100, 1368, 980, 777, 
       1191, 1225, 1101, 981, 778, 1193, 1226, 1102, 982, 779, 1227, 983, 780,
        1228, 984, 781, 1126, 1289, 782, 1127, 1290, 783, 1058, 1103, 1369, 
       985, 784, 1060, 1104, 986, 785, 1194, 1229, 1105, 987, 786, 1230, 988, 
       787, 1231, 989, 788}], 
      Line3DBox[{790, 1128, 1291, 789, 1129, 1292, 791, 1056, 539, 792, 1192, 
       1232, 990, 793, 1365, 1057, 991, 794, 1233, 992, 795, 1234, 993, 796, 
       1130, 1293, 797, 1131, 1294, 798, 1059, 1132, 1366, 799, 1061, 1235, 
       994, 800, 1367, 1062, 995, 801, 1236, 996, 802, 1237, 997, 803}], 
      Line3DBox[{805, 1133, 1295, 804, 1134, 1296, 806, 1135, 1297, 807, 550, 
       808, 1238, 998, 809, 1239, 999, 810, 1240, 1000, 811, 1136, 1298, 812, 
       1137, 1299, 813, 1138, 1300, 814, 1139, 1301, 815, 1241, 1001, 816, 
       1242, 1002, 817, 1243, 1003, 818}], 
      Line3DBox[{820, 1140, 1302, 819, 1141, 1303, 821, 1063, 1304, 1195, 822,
        1197, 1305, 1065, 823, 701, 1067, 824, 1244, 1004, 825, 1245, 1005, 
       826, 1142, 1306, 827, 1143, 1307, 828, 1069, 1308, 1200, 829, 1071, 
       1309, 1072, 830, 1202, 1310, 1075, 831, 1246, 1006, 832, 1247, 1007, 
       833}], Line3DBox[{835, 1144, 1311, 834, 1145, 1312, 836, 1064, 1106, 
       1313, 1196, 837, 1198, 1370, 1107, 1066, 838, 1199, 1371, 1108, 1068, 
       839, 574, 840, 1248, 1008, 841, 1146, 1314, 842, 1147, 1315, 843, 1070,
        1109, 1316, 1201, 844, 1073, 1110, 1074, 845, 1203, 1372, 1111, 1076, 
       846, 579, 847, 1249, 1009, 848}], 
      Line3DBox[{106, 411, 107, 412, 108, 413, 109, 414, 110, 415, 111, 416, 
       112, 417, 113, 418, 114, 419, 115, 420, 116, 421, 117, 422, 118, 423, 
       119, 424, 120}], 
      Line3DBox[{850, 1148, 1317, 849, 1149, 1318, 851, 1150, 1319, 852, 1151,
        1320, 853, 1152, 1321, 854, 1153, 1322, 855, 587, 856, 1154, 1323, 
       857, 1155, 1324, 858, 1156, 1325, 859, 1157, 1326, 860, 1158, 1327, 
       861, 1159, 1328, 862, 594, 863}], 
      Line3DBox[{865, 595, 864, 1250, 1010, 866, 1251, 1011, 867, 1252, 1012, 
       868, 1253, 1013, 869, 1254, 1014, 870, 1255, 1015, 871, 602, 872, 1256,
        1016, 873, 1257, 1017, 874, 1258, 1018, 875, 1259, 1019, 876, 1260, 
       1020, 877, 1261, 1021, 878}], 
      Line3DBox[{880, 1160, 1329, 879, 610, 881, 1077, 1112, 1373, 1022, 882, 
       1204, 1262, 1113, 1023, 883, 1206, 1263, 1114, 1024, 884, 1264, 1025, 
       885, 1265, 1026, 886, 1161, 1330, 887, 615, 888, 1079, 1115, 1374, 
       1027, 889, 1081, 1116, 1028, 890, 1207, 1266, 1117, 1029, 891, 1267, 
       1030, 892, 1268, 1031, 893}], 
      Line3DBox[{895, 1162, 1331, 894, 1163, 1332, 896, 1078, 621, 897, 1205, 
       1269, 1032, 898, 720, 1033, 899, 1270, 1034, 900, 1271, 1035, 901, 
       1164, 1333, 902, 1165, 1334, 903, 1080, 626, 904, 1082, 1272, 1036, 
       905, 726, 1037, 906, 1273, 1038, 907, 1274, 1039, 908}], 
      Line3DBox[{910, 1166, 1335, 909, 1167, 1336, 911, 1168, 1337, 912, 632, 
       913, 1275, 1040, 914, 1276, 1041, 915, 1277, 1042, 916, 1169, 1338, 
       917, 1170, 1339, 918, 1171, 1340, 919, 639, 920, 1278, 1043, 921, 1279,
        1044, 922, 1280, 1045, 923}], 
      Line3DBox[{925, 1172, 1341, 924, 1173, 1342, 926, 1083, 727, 927, 1209, 
       1343, 1085, 928, 733, 1087, 929, 1281, 1046, 930, 1282, 1047, 931, 
       1174, 1344, 932, 1175, 1345, 933, 1089, 737, 934, 1091, 1346, 1092, 
       935, 739, 1095, 936, 1283, 1048, 937, 1284, 1049, 938}], 
      Line3DBox[{940, 1176, 1347, 939, 1177, 1348, 941, 1084, 1118, 1349, 
       1208, 942, 1210, 1375, 1119, 1086, 943, 1211, 1376, 1120, 1088, 944, 
       656, 945, 1285, 1050, 946, 1178, 1350, 947, 1179, 1351, 948, 1090, 
       1121, 1352, 1212, 949, 1093, 1122, 1094, 950, 1213, 1377, 1123, 1096, 
       951, 661, 952, 1286, 1051, 953}], 
      Line3DBox[{967, 1099, 744, 966, 1363, 1190, 965, 1362, 1189, 964, 1361, 
       1188, 963, 1360, 1187, 962, 1359, 1186, 961, 1358, 1185, 960, 669, 959,
        1357, 1184, 958, 1356, 1183, 957, 1355, 1182, 956, 1354, 1181, 955, 
       1353, 1180, 954, 743, 1097, 1098}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{323, 515, 1214, 324, 528, 350, 1292, 538, 360, 1296, 548, 
       374, 1303, 562, 388, 1312, 572, 398, 1318, 582, 412, 596, 1250, 426, 
       610, 440, 1332, 620, 450, 1336, 630, 464, 1342, 644, 478, 1348, 654, 
       488, 1353, 664, 502}], 
      Line3DBox[{325, 516, 1215, 326, 679, 529, 1368, 351, 680, 539, 361, 
       1297, 549, 375, 1304, 695, 563, 389, 1313, 696, 573, 399, 1319, 583, 
       413, 597, 1251, 427, 711, 611, 1373, 441, 712, 621, 451, 1337, 631, 
       465, 727, 645, 479, 1349, 728, 655, 489, 1354, 665, 503}], 
      Line3DBox[{327, 517, 1216, 328, 681, 682, 1225, 748, 683, 684, 1232, 
       362, 550, 376, 1305, 697, 698, 751, 1370, 699, 700, 400, 1320, 584, 
       414, 598, 1252, 428, 713, 714, 1262, 754, 715, 716, 1269, 452, 632, 
       466, 1343, 729, 730, 757, 1375, 731, 732, 490, 1355, 666, 504}], 
      Line3DBox[{329, 518, 1217, 330, 685, 686, 1226, 749, 687, 1365, 688, 
       363, 551, 1238, 377, 701, 702, 752, 1371, 703, 704, 401, 1321, 585, 
       415, 599, 1253, 429, 717, 718, 1263, 755, 719, 720, 453, 633, 1275, 
       467, 733, 734, 758, 1376, 735, 736, 491, 1356, 667, 505}], 
      Line3DBox[{331, 519, 1218, 332, 530, 1227, 352, 540, 1233, 364, 552, 
       1239, 378, 564, 1244, 390, 574, 402, 1322, 586, 416, 600, 1254, 430, 
       612, 1264, 442, 622, 1270, 454, 634, 1276, 468, 646, 1281, 480, 656, 
       492, 1357, 668, 506}], 
      Line3DBox[{333, 520, 1219, 334, 531, 1228, 353, 541, 1234, 365, 553, 
       1240, 379, 565, 1245, 391, 575, 1248, 403, 587, 417, 601, 1255, 431, 
       613, 1265, 443, 623, 1271, 455, 635, 1277, 469, 647, 1282, 481, 657, 
       1285, 493, 669, 507}], 
      Line3DBox[{8, 767, 23, 781, 38, 796, 53, 811, 68, 826, 83, 841, 98, 856,
        113, 871, 128, 886, 143, 901, 158, 916, 173, 931, 188, 946, 203, 960, 
       218}], Line3DBox[{335, 1287, 521, 336, 1289, 532, 354, 1293, 542, 366, 
       1298, 554, 380, 1306, 566, 392, 1314, 576, 404, 1323, 588, 418, 602, 
       432, 1330, 614, 444, 1333, 624, 456, 1338, 636, 470, 1344, 648, 482, 
       1350, 658, 494, 1358, 670, 508}], 
      Line3DBox[{337, 522, 1220, 338, 1290, 533, 355, 1294, 543, 367, 1299, 
       555, 381, 1307, 567, 393, 1315, 577, 405, 1324, 589, 419, 603, 1256, 
       433, 615, 445, 1334, 625, 457, 1339, 637, 471, 1345, 649, 483, 1351, 
       659, 495, 1359, 671, 509}], 
      Line3DBox[{339, 523, 1221, 340, 689, 534, 1369, 356, 690, 1366, 544, 
       368, 1300, 556, 382, 1308, 705, 568, 394, 1316, 706, 578, 406, 1325, 
       590, 420, 604, 1257, 434, 721, 616, 1374, 446, 722, 626, 458, 1340, 
       638, 472, 737, 650, 484, 1352, 738, 660, 496, 1360, 672, 510}], 
      Line3DBox[{341, 524, 1222, 342, 238, 1104, 288, 239, 1235, 369, 1301, 
       557, 383, 1309, 250, 294, 1110, 251, 407, 1326, 591, 421, 605, 1258, 
       435, 262, 1116, 300, 263, 1272, 459, 639, 473, 1346, 274, 306, 1122, 
       275, 497, 1361, 673, 511}], 
      Line3DBox[{343, 525, 1223, 344, 691, 692, 1229, 750, 693, 1367, 694, 
       370, 558, 1241, 384, 1310, 707, 708, 753, 1372, 709, 710, 408, 1327, 
       592, 422, 606, 1259, 436, 723, 724, 1266, 756, 725, 726, 460, 640, 
       1278, 474, 739, 740, 759, 1377, 741, 742, 498, 1362, 674, 512}], 
      Line3DBox[{345, 526, 1224, 346, 535, 1230, 357, 545, 1236, 371, 559, 
       1242, 385, 569, 1246, 395, 579, 409, 1328, 593, 423, 607, 1260, 437, 
       617, 1267, 447, 627, 1273, 461, 641, 1279, 475, 651, 1283, 485, 661, 
       499, 1363, 675, 513}], 
      Line3DBox[{347, 677, 1364, 678, 348, 536, 1231, 358, 546, 1237, 372, 
       560, 1243, 386, 570, 1247, 396, 580, 1249, 410, 594, 424, 608, 1261, 
       438, 618, 1268, 448, 628, 1274, 462, 642, 1280, 476, 652, 1284, 486, 
       662, 1286, 500, 744, 745, 746}], 
      Line3DBox[{501, 663, 743, 487, 653, 1347, 477, 643, 1341, 463, 629, 
       1335, 449, 619, 1331, 439, 609, 1329, 425, 595, 411, 581, 1317, 397, 
       571, 1311, 387, 561, 1302, 373, 547, 1295, 359, 537, 1291, 349, 527, 
       1288, 322, 514, 676, 747}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
AtvL89PJHES5O+QN9pN5V9XuXAtzJEK2/8JvMl8cTg+uAvvpNIV6sK/6U/gM
5mncmb78RILT9USqC3ACfn2bDfNF0vnN/O0k7i6BVXSu1b7xAp745Wp2LiEy
B0XmJFOey8RtZoB/NM/tecQf/RbdR/3fCrWFAr602KoCgo9+e9lTfGQosQH4
yHrNX034oEtlBpTP3PVae4B/Xv2TA2CXYlyg/NfFpb6GfFmdVkO+aP3rnnbA
EV4dXg36/FlsCPqgjk3eVB/mYYkO0HNo/sJxoiejpjCc8nxQSPckJfb3dG9i
/t2XPjPzTsnN91R677yZ7nUJjq/o3hLafyG49IWDku7pcLrXVa58SfecPfX3
9XItzJUccvtrYX/jL5uge9H8aVsDsYV5bhmLEt3rIqSL6B5VHG6tWfbCIfeg
1HK61wUliNK9a7RUpJnEzT1qO43udYfvbKN7WuS6mXSfC576l4X+N4RU7zvW
gL/RpD/6689y5+pmwD8wiY/+4stdHFEDPiWTfNBfPg9d858Cf8dJ/ugvf30P
mUeQ78HJfNHffNnFJa6APr8n9UF/9am9duIz6Ln4mTfd6/7qWTN5nrH2D6mS
f8/zajaZUvK88NdNZ9zgPAuze96E56V/YHY+eb5Y8Z3+SjjPA7EGHfB8eURn
c8Fe9+NH7wo4tzEelQ1wHrK1/5wi5wflcycM6xE7dnZvArs7u3g2OW9IVd7W
H87zkVt7uwGnzjYCzjO6/izkLeyT2aGt9HzWTJ5n9HU+52fBf87zS8dmOM9o
UV8m+KN9B8ap/5sKu/uAL5idDfjowdMHFL/+qI0c8Nl2oRT4IMkn0ZTPc8El
2sA/WaYM+COvlw8p/zB7g1bIt/o1L+SLpnvPovku2sHyEvSZV7TIFc7zfD3G
zX/OM065t7Lk3/M81Z9xzVvtM8X/9GdG7CPoz9h72r5X0J9P3zs52Z9lvG/B
ntPijvVcSV/9VGtA+5XLb8NU2ItiOs/IWJI+nH15kPbhXSE2xbBHZVs/nwv2
q4YbV4MdmTFLYe96/yGuH/rz93SXU4BzItI4F/qeX+Pxh9Cfr0U70/5sO9mf
EUt7nojTP/35tn809Gfku+deLPTnXZIl1F+hyiwa8F/1DQM+npbIQfv/oZsz
zgOfdpNh4IMdWs9TPod9xcn/x2KuS9uBP47sSaH8i0QuQn/GCyyN9Um+2LAX
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
Xk/nPgtLJv3udOQ/352ysDhQe9//Yzeh36NK/+d7VBaWc9Su+h/7/k1LvpI5
iJX+fEXA57Hlpyjg0/P5KE8TyevViRNwH0HC69+9grzUX278RPYEvPjHhDfw
VI+YqQI8P06/wg79QfbPTdjn8YkzTedAtwNkDgN+BVqiDHPW4e7CaMAXdggs
AxzdEDUfgoNc3I0oTvhVHXl4jteyQ++Bv012CtXn59sDX+FeNnhhFwe5l5Hz
u4Hey4ZFliaAbqvy3owAzlhg+U7Acdoe0wj3Gu/z+t5wv9B31KX3mmnu+Y+J
HfO69nACTymbqItgzxeoiyf4+EcBYyvc++adr2sAfFYWB/pd6+jUd601U9+R
srKco/aO/8euTL93ZZ363vX61Pel5HlR++z/fAcrdvwq6IbKd7zOHiN8TK89
pzw7BatBZ/RA+cdl2AOFXqVRfboMz/KR54J0Fn8ehufyWm59E/DkSVQdhX0m
YQML7DOoN3EW3Wd85RzhnoXaDHhyCD4SvbPECvAT3zQ2kvsmEn4t8AXum698
zlAcs3u2oBtO6I0CfdDbSnWqT+iQZzyc/18fNsNeihSX29DzmRcWPwy6Xdgy
G3TDpry3qW5f35XKkOeI3VSrYa/DvuzvQoGPhf0cS1IXaFbkH2WoU4ONe2id
Nqz/De+pUFr27ca38J5KfFAD8CcmjOl3s8lT3822TX2nysIiTO0P//M9LSuL
Cf2eVmbqe1r7qe9XyfmndtX/fGe73Pm3KfDczx/WjQgfxwd7bgCfP+OdOTDf
p3fXwnxHUXr8dL6vvO8kRPoS9hHzvgg8D9sWqQFPLzN/Yzj/m4IqPaCvjj8S
oPPx0KyL0oB/YHYJ4OMexlWKf95i9Cec/7Nx7YCDgjyX0f7WlasRC/oYjHaD
Prg3einV52RoZjDsOSfny8KegzeYX6B7TmbamTeg240zG0A31JHlSnWrHFDa
AM/9+MvvsCegLxyhdE/4fsYF3ruiR79crOG9q2L1cToX9q5WhHmBjFW0wY4+
fhSj9rsSajBfUGYPndfI9VAWnS8/IndawnvvC5PvvVHL1HvvcssqY/j+6vrk
91dYbur7KxaW/DX/v+9sZZYmOcPvjDjaH75rQvlZWvS7pjoHPxX43dPPJhK+
s8IGf/zo7x1kvtDvYzumvo/dMPVd61vfvhr4fUQr/707fAcyFOJJv8cI4bTw
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
1hkIc3DhmRzqrzAgMgbzq0ioHvCxqTOnGeBPNHVwAR8zw7FYmHct/Q2Uj/eh
ylHg3/a4EfjjGxYOlL+JeoYh5BuzcxTyxTM0rWm+DVJbh0E33sZdoBuW3dt9
GeLOn5yD+Lbe9G3/zsHz86KcQzStmCEiDZyw13FN76X7SXZeSQrsUS67d/xf
e51c7vC2ypMWTN5xd7rXJSqo0D1ncYMms7Fch3mmXZzudRdDZOhepFF5xjuj
XIchq/CxHfa680vf0j3KqaBLoMjQglGzfaAY9rpba9/RvYuhyFz9UNWKEbV7
Pt3rEtuf0D1tqe034MOYG6/5f+116W82pQqoWzEiJ/3xX/8D6PXleWYWjMSj
7HSvS/3YRvG/PRXRVfTVYTzeXgt88D2tDsqn9dv8FqsoHeaNGET3OoXy9ZT/
m1nRX1dqWTAXT+aL/+YbcNz0jjDRbW7UIOiGK4e6qW4v6/rSQLe7glXP/93r
Bj2D4Z6CPJU3pMA95UTgxSvwXH49pfcU5Pddt+ouOc8DU/cUvZdj82D/j6nm
UoV7il6y9j54vt/buJ+TewpaptC4G+4jLcfe3IPzYL/bI4vcCzD34dn81C45
EQp2ZCX6Bvb/tUkmmVAXnJdsDwLOt1cDcE/BE12zxhwIH7+475N73eQ9Be8c
r+b6957SfnWbD/gnN/KAPy74wXUd/HvL15QC/ofONMDHofOfUHxffkd94COf
ywN88KmhRWHAZxZ3pBK5p6CNvyaAP1ZE+ZS/kZ/Jasg34WzqLrinnAxYQvNt
TPwA9xQkcXwx6IYjKpSobj/20nsKevx+3guiG/PQ1D3lUN9SuHcj39wqycvk
nrs6bRXtz88n790oLHAN+/1/7t0+M9/CvRulyvd23iB91eLOD9qvHHboW8Ne
9O4+f1oU6cP+FzbR/jZcMMsY9qhtCqJXwD53+x56z+XjXTcOe1fr0nsKgHPr
cjq9d/vXucK9G68wCVt4ifBRleug/Xl48t6NPRZseMrzz737zZJmuHdjy018
QsQf2ypN3ruzE3+3AL64T5ciwcd/+mRofy7e28wLfFhMPgIfLLLTjvJZ8Uyo
Cvh/PMtIAntdKwvlX7506w/Id9GG+dWA4+V6heYrX3AQ7t3IfJrlWqIbDnFL
pv25ffLejQbqvg2E/3PvdsrwSDIk8/q6n0c2zHe5tcFXYW7qnuYdh3l9RGDX
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
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->300,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->
   NCache[{{0, Pi}, {0, Pi}, {-0.09749280691156685, 0.09749280691156685}}, {{
     0, 3.141592653589793}, {0, 3.141592653589793}, {-0.09749280691156685, 
     0.09749280691156685}}],
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.24208410131547348`, -2.677277679646676, 2.055134913808823},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.756568934028042*^9, 3.756569346663808*^9, 3.7565764343886423`*^9, 
   3.7565767576549253`*^9, 3.7565773385519533`*^9, 3.756578036900523*^9, 
   3.756579165383401*^9, 3.756579555357287*^9, 3.7565803304015102`*^9, {
   3.772273164525832*^9, 3.772273170852931*^9}}]
}, Open  ]],

Cell["\<\
The Fourier coefficients are computed. To keep everything from vanishing, the \
square\[CloseCurlyQuote]s sides are set to be 3.14159 instead of \[Pi].\
\>", "Text",
 CellChangeTimes->{{3.7565766917401533`*^9, 3.756576704410287*^9}, {
  3.7722738492627087`*^9, 3.77227388517358*^9}, {3.772274152428665*^9, 
  3.77227416044451*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"a", "[", 
    RowBox[{"n_", ",", "m_"}], "]"}], "=", " ", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"x", ",", "y"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          FractionBox[
           RowBox[{"m", " ", "\[Pi]", " ", "y"}], "3.14159"], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "0", ",", "3.14"}], "}"}]}], "]"}], 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"n", " ", "\[Pi]", " ", "x"}], "3.14159"], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "3.14159"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"a", "[", 
      RowBox[{"n", ",", "m"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.756576370576289*^9, 3.7565763769586067`*^9}, {
  3.756576730321732*^9, 3.756576742530449*^9}, {3.756576870267411*^9, 
  3.7565768766244593`*^9}, {3.7565769984896603`*^9, 3.756577010784441*^9}, {
  3.756577075149151*^9, 3.75657712036198*^9}, {3.7565781797422457`*^9, 
  3.7565781861245623`*^9}, {3.7565790479698153`*^9, 3.756579063447308*^9}, {
  3.756579384097475*^9, 3.756579442140918*^9}, {3.756579676290864*^9, 
  3.7565797414304733`*^9}, {3.7565804040376997`*^9, 3.7565804252286463`*^9}, {
  3.772273629478652*^9, 3.7722736653491364`*^9}, {3.772274169614787*^9, 
  3.7722741820206423`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"1.2613371986587976`*^-13", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{
      RowBox[{"-", "3.14859183220487`*^-13"}], "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{"8.076023810314551`*^-13", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{"2.7788354334312917`*^-7", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]},
    {
     RowBox[{"1.1199735265238713`*^-7", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{
      RowBox[{"-", "2.7957151360067436`*^-7"}], "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{"7.170907887871996`*^-7", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{"0.2467398982063492`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]},
    {
     RowBox[{
      RowBox[{"-", "2.270398775282517`*^-13"}], "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{"5.667444873031306`*^-13", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{
      RowBox[{"-", "1.453679046934244`*^-12"}], "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{
      RowBox[{"-", "5.001885753851113`*^-7"}], "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]},
    {
     RowBox[{"1.261333647309119`*^-13", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{
      RowBox[{"-", "3.148582967207784`*^-13"}], "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{"8.076001071918671`*^-13", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{"2.7788276094994094`*^-7", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.7565689789299507`*^9, {3.7565764191118*^9, 3.7565764407313347`*^9}, {
   3.756576746652176*^9, 3.7565767626378927`*^9}, 3.75657687903121*^9, 
   3.756577013438428*^9, 3.756577085377844*^9, 3.7565771230652523`*^9, 
   3.756577342707821*^9, 3.756578042310872*^9, 3.756578198611603*^9, 
   3.75657916973421*^9, 3.756579566524892*^9, 3.756579695058093*^9, 
   3.7565797446343117`*^9, 3.756580335061797*^9, 3.756580430508707*^9, {
   3.772273645225752*^9, 3.77227366682997*^9}, 3.7722741842871037`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"Lambda", "[", 
     RowBox[{"n_", ",", "m_"}], "]"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"n", " ", "\[Pi]"}], ")"}], "^", "2"}], " ", "+", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"m", " ", 
        RowBox[{"\[Pi]", "/", "2"}]}], ")"}], "^", "2"}]}]}], ";"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.756577279969721*^9, 3.756577285063814*^9}}],

Cell["\<\
The eigenvalues are computed. Again, the formula is altered in order to hold \
zero at bay.\
\>", "Text",
 CellChangeTimes->{{3.7565774906364937`*^9, 3.7565774963629007`*^9}, {
   3.75658033948134*^9, 3.756580348304679*^9}, 3.756580856070961*^9, {
   3.772273897141253*^9, 3.772273924875853*^9}, {3.7722742142049017`*^9, 
   3.7722742184506407`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Lambda", "[", 
   RowBox[{"m_", ",", "n_"}], "]"}], "=", " ", 
  RowBox[{"\[Pi]", 
   SqrtBox[
    RowBox[{
     FractionBox[
      SuperscriptBox["m", "2"], 
      SuperscriptBox[
       RowBox[{"(", "3.14159", ")"}], "2"]], "+", 
     FractionBox[
      SuperscriptBox["n", "2"], 
      SuperscriptBox[
       RowBox[{"(", "3.14159", ")"}], "2"]]}]]}]}]], "Input",
 CellChangeTimes->{{3.756577289962078*^9, 3.7565773206310062`*^9}, 
   3.7565773520279922`*^9, {3.756579134741301*^9, 3.756579135379034*^9}, {
   3.756579475644553*^9, 3.756579476335074*^9}, {3.756579762981182*^9, 
   3.756579766284794*^9}, {3.756580465763837*^9, 3.756580507055923*^9}, {
   3.7722742225391417`*^9, 3.772274227162759*^9}}],

Cell[BoxData[
 RowBox[{
  SqrtBox[
   RowBox[{
    RowBox[{"0.10132135480723982`", " ", 
     SuperscriptBox["m", "2"]}], "+", 
    RowBox[{"0.10132135480723982`", " ", 
     SuperscriptBox["n", "2"]}]}]], " ", "\[Pi]"}]], "Output",
 CellChangeTimes->{3.756577353117052*^9, 3.756578048911502*^9, 
  3.756578233545478*^9, 3.75657913718681*^9, 3.756579175372508*^9, 
  3.756579572832943*^9, 3.7565797679059467`*^9, 3.756580351678856*^9, 
  3.75658051189764*^9, 3.772273738145014*^9, 3.772274228194153*^9}]
}, Open  ]],

Cell["\<\
The solution, truncated at N and M, respectively, and with the usual \
substitution of 3.14159 for \[Pi], is given by\
\>", "Text",
 CellChangeTimes->{
  3.7565775193971252`*^9, {3.772273937779883*^9, 3.772273956971279*^9}, {
   3.772274235410173*^9, 3.7722742369700336`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"u", "[", 
   RowBox[{"x_", ",", "y_", ",", "t_", ",", "N_", ",", "M_"}], "]"}], ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"a", "[", 
        RowBox[{"n", ",", "m"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"Lambda", "[", 
          RowBox[{"n", ",", "m"}], "]"}], "t"}], "]"}], 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"n", " ", "\[Pi]", " ", "x"}], "3.14159"], "]"}], 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"m", " ", "\[Pi]", " ", "y"}], "3.14159"], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", "N"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"m", ",", "1", ",", "M"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"uplot", "=", 
   RowBox[{"u", "[", 
    RowBox[{"x", ",", "y", ",", "t", ",", "4", ",", "4"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{
  3.756569149914898*^9, 3.75656921520971*^9, {3.756578016759471*^9, 
   3.756578020941391*^9}, {3.7565785173643703`*^9, 3.756578531321692*^9}, {
   3.756579146987295*^9, 3.756579152843*^9}, {3.756579521994605*^9, 
   3.756579532176124*^9}, {3.756579780756483*^9, 3.7565797853559523`*^9}, {
   3.756580523439744*^9, 3.756580530879129*^9}, {3.756581671566847*^9, 
   3.756581710315208*^9}, {3.772273774547202*^9, 3.77227377734555*^9}, {
   3.772274240578435*^9, 3.77227424517836*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"uplot", "/.", 
      RowBox[{"t", "\[Rule]", "tplot"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "2"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"All", ",", "All", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "1"}], "/", "2"}], ",", 
          RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"tplot", ",", "0", ",", "5"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`tplot$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`tplot$$], 0, 5}}, Typeset`size$$ = {
    540., {209., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`tplot$8657$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`tplot$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`tplot$$, $CellContext`tplot$8657$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot3D[
        ReplaceAll[$CellContext`uplot, $CellContext`t -> \
$CellContext`tplot$$], {$CellContext`x, 0, 1}, {$CellContext`y, 0, 2}, 
        PlotRange -> {All, All, {(-1)/2, 1/2}}], 
      "Specifications" :> {{$CellContext`tplot$$, 0, 5}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{608., {272., 281.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.7565691200927143`*^9, 3.756580370541418*^9, 
  3.7722737921633663`*^9, 3.772274017066958*^9, 3.772274253239059*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"u", "[", 
  RowBox[{"x", ",", "y", ",", "t", ",", "2", ",", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.7565692546074047`*^9, 3.756569304772368*^9}, {
  3.756569374132971*^9, 3.756569380010228*^9}, {3.7565695307191687`*^9, 
  3.756569556380665*^9}, {3.75658062782619*^9, 3.756580631689775*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1.2613371986587976`*^-13", "+", 
     RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"1.4142147569091976`", " ", "t"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"1.0000008446645785`", " ", "x"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"1.0000008446645785`", " ", "y"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1.1199735265238713`*^-7", "+", 
     RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2.2360698662272056`", " ", "t"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2.000001689329157`", " ", "x"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"1.0000008446645785`", " ", "y"}], "]"}]}], "-", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"3.14859183220487`*^-13", "+", 
     RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2.2360698662272056`", " ", "t"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"1.0000008446645785`", " ", "x"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2.000001689329157`", " ", "y"}], "]"}]}], "-", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"2.7957151360067436`*^-7", "+", 
     RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2.8284295138183952`", " ", "t"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2.000001689329157`", " ", "x"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2.000001689329157`", " ", "y"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"8.076023810314551`*^-13", "+", 
     RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"3.162280331232306`", " ", "t"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"1.0000008446645785`", " ", "x"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"3.0000025339937357`", " ", "y"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"7.170907887871996`*^-7", "+", 
     RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"3.605554320945438`", " ", "t"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2.000001689329157`", " ", "x"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"3.0000025339937357`", " ", "y"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"2.7788354334312917`*^-7", "+", 
     RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"4.1231091082589355`", " ", "t"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"1.0000008446645785`", " ", "x"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"4.000003378658314`", " ", "y"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"0.2467398982063492`", "\[VeryThinSpace]", "+", 
     RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"4.472139732454411`", " ", "t"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2.000001689329157`", " ", "x"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"4.000003378658314`", " ", "y"}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.756569263698518*^9, 3.7565693059267883`*^9}, 
   3.75656938172843*^9, {3.75656953206861*^9, 3.756569557287154*^9}, 
   3.756576463783862*^9, 3.756576908416245*^9, 3.756577030751811*^9, 
   3.7565771003559933`*^9, 3.7565771377294617`*^9, 3.7565773675455837`*^9, 
   3.7565780601378193`*^9, 3.756578244354476*^9, 3.756578541852304*^9, 
   3.7565791876653767`*^9, 3.756579585687593*^9, 3.756579800288991*^9, 
   3.7565803707288637`*^9, 3.756580540095262*^9, 3.756580632639365*^9, 
   3.756581686714222*^9, 3.756581717686638*^9, 3.77227402277146*^9, 
   3.772274260076124*^9},
 Background->RGBColor[1, 1, 0.85]]
}, Open  ]],

Cell["\<\
Taking a look at the value of the argument to the first cosine, I find\
\>", "Text",
 CellChangeTimes->{{3.772274323455201*^9, 3.7722743510530567`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", "4.47214", ")"}], "2"]], "Input",
 CellChangeTimes->{{3.756580705968334*^9, 3.7565807273648157`*^9}, {
  3.77227427157843*^9, 3.772274275376791*^9}}],

Cell[BoxData["20.000036179599995`"], "Output",
 CellChangeTimes->{3.7565807297619953`*^9, 3.772274276631145*^9}]
}, Open  ]],

Cell["\<\
Although the above yellow cell is not exactly the text answer, it has the \
same form.  It is seen that the text answer is nearly contained in the last \
yellow line, except that the leading coefficient differs.\
\>", "Text",
 CellChangeTimes->{{3.7565697557421827`*^9, 3.756569773925599*^9}, {
   3.75657883267559*^9, 3.756578849497542*^9}, {3.75658075228336*^9, 
   3.7565807557312193`*^9}, {3.7565810179832697`*^9, 3.756581031829297*^9}, {
   3.756581068435405*^9, 3.756581082778672*^9}, 3.756581757312492*^9, 
   3.7691031458613863`*^9, 3.772274116359537*^9, {3.772274373316308*^9, 
   3.7722743765555353`*^9}, {3.772274445073147*^9, 3.772274467216748*^9}}],

Cell["\<\
******************************************************************************\
***************\
\>", "Text",
 CellChangeTimes->{{3.756578856455447*^9, 3.756578877994103*^9}}],

Cell["\<\
The next several cells are an attempt to explore a way to the text answer. \
However, they are not supported by logic.\
\>", "Text",
 CellChangeTimes->{{3.7722745307365103`*^9, 3.772274576943275*^9}}],

Cell["Following example 2 on p. 582,", "Text",
 CellChangeTimes->{{3.7562949173009033`*^9, 3.756294928915242*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "=", "1"}]], "Input",
 CellChangeTimes->{{3.7562949946050167`*^9, 3.7562949996729507`*^9}, {
  3.7562950770561743`*^9, 3.756295082262535*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.75629508488758*^9, 3.756304668717054*^9, 
  3.7563048948462048`*^9, 3.756305021310926*^9, 3.75630511955061*^9, 
  3.756307486777581*^9, 3.75631697373774*^9, 3.7563177504413*^9, 
  3.756410186345956*^9, 3.756411463247238*^9, 3.7564138274962187`*^9, 
  3.7564226661277723`*^9, 3.756424465118438*^9}]
}, Open  ]],

Cell[TextData[{
 "To test Mathematica's abilities, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["B", "mn"], " "}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "is calculted two ways:"
}], "Text",
 CellChangeTimes->{{3.756410947123046*^9, 3.75641097251423*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["B", "mn"], "=", 
  RowBox[{
   FractionBox["4", 
    SuperscriptBox["\[Pi]", "2"]], 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "\[Pi]"], 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "\[Pi]"], 
     RowBox[{".1", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "x"}], "]"}], 
      RowBox[{"Sin", "[", 
       RowBox[{"4", " ", "y"}], "]"}], 
      RowBox[{"Sin", "[", 
       RowBox[{"m", " ", "x"}], "]"}], 
      RowBox[{"Sin", "[", 
       RowBox[{"n", " ", "y"}], "]"}], 
      RowBox[{"\[DifferentialD]", "y"}], 
      RowBox[{"\[DifferentialD]", "x"}]}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.756409048674284*^9, 3.756409051738769*^9}, {
  3.756409130472024*^9, 3.756409145157668*^9}, {3.756409295733142*^9, 
  3.756409415255761*^9}, {3.756409543508374*^9, 3.756409544234779*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"0.3242277876554809`", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"m", " ", "\[Pi]"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"n", " ", "\[Pi]"}], "]"}]}], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "4.`"}], "+", 
     SuperscriptBox["m", "2"]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "16.`"}], "+", 
     SuperscriptBox["n", "2"]}], ")"}]}]]], "Output",
 CellChangeTimes->{3.756409404414185*^9, 3.756409548652573*^9, 
  3.756410191013441*^9, 3.75641146767059*^9, 3.7564249314145203`*^9},
 Background->RGBColor[0.9, 1, 1]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Bmny", "=", 
  RowBox[{
   FractionBox[".4", 
    SuperscriptBox["\[Pi]", "2"]], 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "\[Pi]"], 
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"n", "-", "4"}], ")"}], "y"}], "]"}], "-", 
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"n", "+", "4"}], ")"}], "y"}], "]"}]}], ")"}], 
     RowBox[{"\[DifferentialD]", "y"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.756413093261038*^9, 3.7564132111386766`*^9}, 
   3.756413374138227*^9, 3.756413919491336*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"0.16211389382774044`", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"n", " ", "\[Pi]"}], "]"}]}], 
  RowBox[{
   RowBox[{"-", "16"}], "+", 
   SuperscriptBox["n", "2"]}]]], "Output",
 CellChangeTimes->{
  3.756413215821558*^9, 3.7564133762684383`*^9, 3.756413833833232*^9, 
   3.756413921516659*^9, 3.7564226792132177`*^9, {3.75642494871607*^9, 
   3.75642496621075*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Bmnx", "=", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", "0", "\[Pi]"], 
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "-", "m"}], ")"}], "x"}], "]"}], "-", 
      RowBox[{"Cos", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "+", "m"}], ")"}], "x"}], "]"}]}], ")"}], 
    RowBox[{"\[DifferentialD]", "x"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7564094191642017`*^9, 3.756409421462422*^9}, {
  3.756409654409568*^9, 3.756409662991908*^9}, {3.756409693599947*^9, 
  3.756409703621097*^9}, {3.756413261137889*^9, 3.7564133296373787`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"m", " ", "\[Pi]"}], "]"}]}], 
  RowBox[{
   RowBox[{"-", "4"}], "+", 
   SuperscriptBox["m", "2"]}]]], "Output",
 CellChangeTimes->{{3.756409695606538*^9, 3.7564097141159773`*^9}, 
   3.75641333264217*^9, 3.756413837050947*^9, 3.756413926666337*^9, 
   3.756422682367614*^9, 3.7564244774899817`*^9, 3.756424969583631*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bmn", "=", 
  RowBox[{"Bmny", " ", "Bmnx"}]}]], "Input",
 CellChangeTimes->{{3.756409708818809*^9, 3.756409732308176*^9}, {
  3.756413392513309*^9, 3.7564133950331583`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"0.3242277876554809`", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"m", " ", "\[Pi]"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"n", " ", "\[Pi]"}], "]"}]}], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "4"}], "+", 
     SuperscriptBox["m", "2"]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "16"}], "+", 
     SuperscriptBox["n", "2"]}], ")"}]}]]], "Output",
 CellChangeTimes->{{3.7564097249025087`*^9, 3.756409735005083*^9}, {
   3.756413356731147*^9, 3.7564133963471107`*^9}, 3.756413841130608*^9, 
   3.756413930871517*^9, 3.7564226857372513`*^9, 3.756424481435265*^9, 
   3.756424973480817*^9},
 Background->RGBColor[0.9, 1, 1]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bmnc", "=", 
  FractionBox[
   RowBox[{"0.3242277876554809`", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"\[Pi]", 
        RowBox[{"(", 
         RowBox[{"m", "-", "n"}], ")"}]}], "]"}], "-", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Pi]", 
        RowBox[{"(", 
         RowBox[{"m", "+", "n"}], ")"}]}], "]"}]}], ")"}], 
    FractionBox["1", "2"]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "4"}], "+", 
      SuperscriptBox["m", "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "16"}], "+", 
      SuperscriptBox["n", "2"]}], ")"}]}]]}]], "Input",
 CellChangeTimes->{{3.7564139534600363`*^9, 3.756414105009828*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"0.16211389382774044`", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"m", "-", "n"}], ")"}], " ", "\[Pi]"}], "]"}], "-", 
     RowBox[{"Cos", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"m", "+", "n"}], ")"}], " ", "\[Pi]"}], "]"}]}], ")"}]}], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "4"}], "+", 
     SuperscriptBox["m", "2"]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "16"}], "+", 
     SuperscriptBox["n", "2"]}], ")"}]}]]], "Output",
 CellChangeTimes->{3.756414111886407*^9, 3.756422691212603*^9, 
  3.756424986553088*^9}]
}, Open  ]],

Cell["\<\
bmnc makes use of a trig identity that I hoped would help out with the \
usability of bm.\
\>", "Text",
 CellChangeTimes->{
  3.7563071066651917`*^9, {3.75642504295156*^9, 3.7564250856609983`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[Lambda]", "mn"], "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"c", " ", "\[Pi]", " ", 
    SqrtBox[
     RowBox[{
      FractionBox[
       SuperscriptBox["m", "2"], 
       SuperscriptBox["\[Pi]", "2"]], "+", 
      FractionBox[
       SuperscriptBox["n", "2"], 
       SuperscriptBox["\[Pi]", "2"]]}]]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.756304499165525*^9, 3.756304507491033*^9}, {
  3.7563049995713577`*^9, 3.7563050053883944`*^9}}],

Cell[BoxData[
 SqrtBox[
  RowBox[{
   SuperscriptBox["m", "2"], "+", 
   SuperscriptBox["n", "2"]}]]], "Output",
 CellChangeTimes->{
  3.756301476666091*^9, 3.756304511692533*^9, 3.756304672244584*^9, 
   3.756304897355876*^9, {3.756305006245511*^9, 3.756305025256225*^9}, 
   3.7563051230684013`*^9, 3.756307489825602*^9, 3.756316977451771*^9, 
   3.756317753142765*^9, 3.756410199213028*^9, 3.75641147442467*^9, 
   3.7564226992113647`*^9, 3.756424519393572*^9, 3.756424992120534*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"uxyt2", "=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{"bmnc", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", "2"], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"m", " ", "x"}], " ", "-", " ", 
             RowBox[{"n", " ", "y"}]}], "]"}], "-", 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"m", " ", "x"}], " ", "+", " ", 
             RowBox[{"n", " ", "y"}]}], "]"}]}], ")"}]}], ")"}], 
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["\[Lambda]", "mn"], " ", "t"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", "1", ",", "\[Infinity]", ",", "2"}], "}"}]}], "]"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "\[Infinity]", ",", "2"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.756410549029358*^9, 3.756410631847012*^9}, {
   3.7564107195718927`*^9, 3.756410730117845*^9}, 3.75641091205459*^9, 
   3.756411287426216*^9, {3.756411348103961*^9, 3.7564113486142063`*^9}, {
   3.756413413624971*^9, 3.756413417224922*^9}, 3.7564141250737457`*^9, 
   3.7564245250968847`*^9, {3.7564245983104143`*^9, 3.756424689548923*^9}, 
   3.756425017890267*^9}],

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"0.08105694691387022`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"m", "-", "n"}], ")"}], " ", "\[Pi]"}], "]"}], "-", 
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"m", "+", "n"}], ")"}], " ", "\[Pi]"}], "]"}]}], ")"}], 
       " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         SqrtBox[
          RowBox[{
           SuperscriptBox["m", "2"], "+", 
           SuperscriptBox["n", "2"]}]], " ", "t"}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"m", " ", "x"}], "-", 
           RowBox[{"n", " ", "y"}]}], "]"}], "-", 
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"m", " ", "x"}], "+", 
           RowBox[{"n", " ", "y"}]}], "]"}]}], ")"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "4"}], "+", 
         SuperscriptBox["m", "2"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "16"}], "+", 
         SuperscriptBox["n", "2"]}], ")"}]}]], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "1", ",", "\[Infinity]", ",", "2"}], "}"}]}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "\[Infinity]", ",", "2"}], "}"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.756424741509734*^9, 3.756425149926696*^9},
 Background->RGBColor[1, 1, 0.85]]
}, Open  ]],

Cell["\<\
The trig identity is used again. But there are still problems.\
\>", "Text",
 CellChangeTimes->{{3.756425148955518*^9, 3.756425164635026*^9}}],

Cell["\<\
I was not able to get the text answer, which looks very nice. The yellow cell \
above, which was assembled using the rules as best as I was able to apply \
them, looks very messy.\
\>", "Text",
 CellChangeTimes->{{3.756307119143199*^9, 3.756307221058708*^9}, {
  3.7563072691624737`*^9, 3.756307369078105*^9}, {3.756307419660522*^9, 
  3.756307419980348*^9}, {3.756326486566061*^9, 3.7563264873498917`*^9}, {
  3.756410867639204*^9, 3.756410880229649*^9}, {3.756411018954172*^9, 
  3.7564110386879063`*^9}, {3.756411165861211*^9, 3.756411189587184*^9}, {
  3.756411678730034*^9, 3.756411678865979*^9}, {3.756414516347736*^9, 
  3.756414529402388*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"u", "[", 
   RowBox[{
   "x_", ",", "y_", ",", "t_", ",", "m_", ",", "n_", ",", "j_", ",", "k_"}], 
   "]"}], ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       FractionBox["1", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "+", 
           SuperscriptBox["m", "2"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "16"}], "+", 
           SuperscriptBox["n", "2"]}], ")"}]}]], 
       RowBox[{"0.08105694691387022`", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"m", "-", "n"}], ")"}], " ", "\[Pi]"}], "]"}], "-", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"m", "+", "n"}], ")"}], " ", "\[Pi]"}], "]"}]}], ")"}], 
        " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          SqrtBox[
           RowBox[{
            SuperscriptBox["m", "2"], "+", 
            SuperscriptBox["n", "2"]}]], " ", "t"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"m", " ", "x"}], "-", 
            RowBox[{"n", " ", "y"}]}], "]"}], "-", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"m", " ", "x"}], "+", 
            RowBox[{"n", " ", "y"}]}], "]"}]}], ")"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", "1", ",", "\[Infinity]", ",", "2"}], "}"}]}], "]"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "\[Infinity]", ",", "2"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.756411262333518*^9, 3.756411306143338*^9}, {
   3.756411411699645*^9, 3.756411419379448*^9}, {3.75641153757719*^9, 
   3.756411627845092*^9}, 3.756414320782474*^9, 3.7564149816929617`*^9, {
   3.75642332290623*^9, 3.7564233232005663`*^9}, {3.756423358167642*^9, 
   3.75642335848668*^9}, {3.75642352056246*^9, 3.7564235282016287`*^9}, 
   3.756425265557929*^9}],

Cell["\<\
It\[CloseCurlyQuote]s not blowing up at the moment, but I have little hope of \
verifying it.\
\>", "Text",
 CellChangeTimes->{{3.75641183610865*^9, 3.756411858852655*^9}, {
  3.7564253250138407`*^9, 3.756425349484858*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"u", "[", 
  RowBox[{"x", ",", "y", ",", "t", ",", "m", ",", "n", ",", "1", ",", "1"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7564118763584557`*^9, 3.756411879812047*^9}, {
  3.756422603737308*^9, 3.756422613359544*^9}, {3.756422794459227*^9, 
  3.756422800577379*^9}, {3.756422861559649*^9, 3.756422882086688*^9}, {
  3.7564252928326674`*^9, 3.756425295798917*^9}, {3.756425379411908*^9, 
  3.756425405819009*^9}}],

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"0.08105694691387022`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"m", "-", "n"}], ")"}], " ", "\[Pi]"}], "]"}], "-", 
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"m", "+", "n"}], ")"}], " ", "\[Pi]"}], "]"}]}], ")"}], 
       " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         SqrtBox[
          RowBox[{
           SuperscriptBox["m", "2"], "+", 
           SuperscriptBox["n", "2"]}]], " ", "t"}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"m", " ", "x"}], "-", 
           RowBox[{"n", " ", "y"}]}], "]"}], "-", 
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"m", " ", "x"}], "+", 
           RowBox[{"n", " ", "y"}]}], "]"}]}], ")"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "4"}], "+", 
         SuperscriptBox["m", "2"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "16"}], "+", 
         SuperscriptBox["n", "2"]}], ")"}]}]], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "1", ",", "\[Infinity]", ",", "2"}], "}"}]}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "\[Infinity]", ",", "2"}], "}"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{
  3.7564118809772987`*^9, 3.756414991210659*^9, {3.756422613976388*^9, 
   3.756422653798176*^9}, 3.756422724563393*^9, 3.756422801805361*^9, {
   3.756422866840189*^9, 3.756422883292835*^9}, 3.7564229502830753`*^9, 
   3.756423329939973*^9, 3.756423535536827*^9, {3.7564252748710117`*^9, 
   3.756425296735242*^9}, {3.756425387753283*^9, 3.756425407054384*^9}}]
}, Open  ]],

Cell["\<\
******************************************************************************\
********************\
\>", "Text",
 CellChangeTimes->{{3.756416068608859*^9, 3.756416077202717*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"partialuo", "[", 
   RowBox[{"j_", ",", "k_", ",", "x_", ",", "y_", ",", "t_"}], "]"}], ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"0.1", "  ", 
     RowBox[{"Sin", "[", 
      RowBox[{"m", " ", "x"}], "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"n", " ", "y"}], "]"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{
       SqrtBox[
        RowBox[{
         SuperscriptBox["m", "2"], "+", 
         SuperscriptBox["n", "2"]}]], " ", "t"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"m", ",", "j", ",", "j", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "k", ",", "k", ",", "2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.756322411835598*^9, 3.7563224973254128`*^9}, {
  3.756322636753516*^9, 3.756322646440795*^9}, {3.75632273129564*^9, 
  3.7563227319740868`*^9}, {3.756322786238288*^9, 3.756322786732312*^9}, {
  3.756323517654457*^9, 3.756323522660817*^9}, {3.756324293157995*^9, 
  3.756324344386495*^9}, {3.756324440431859*^9, 3.7563244450473347`*^9}, {
  3.7563246148517*^9, 3.756324616090118*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"part1", "=", 
  RowBox[{"partialuo", "[", 
   RowBox[{"2", ",", "4", ",", "x", ",", "y", ",", "t"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.756322509329793*^9, 3.756322521364163*^9}, {
  3.7563225922119102`*^9, 3.756322592721982*^9}, {3.7563234775265303`*^9, 
  3.7563234777019978`*^9}, {3.756323569820569*^9, 3.756323576650795*^9}, {
  3.756323944984662*^9, 3.7563239476725883`*^9}, {3.756324016748744*^9, 
  3.756324017125505*^9}, {3.756324072045905*^9, 3.756324072316346*^9}, {
  3.756324363065537*^9, 3.756324367209701*^9}}],

Cell[BoxData[
 RowBox[{"0.1`", " ", 
  RowBox[{"Cos", "[", 
   RowBox[{"2", " ", 
    SqrtBox["5"], " ", "t"}], "]"}], " ", 
  RowBox[{"Sin", "[", 
   RowBox[{"2", " ", "x"}], "]"}], " ", 
  RowBox[{"Sin", "[", 
   RowBox[{"4", " ", "y"}], "]"}]}]], "Output",
 CellChangeTimes->{{3.7563225222629433`*^9, 3.756322551664529*^9}, 
   3.756322594000716*^9, 3.756322652541585*^9, 3.756322738815979*^9, 
   3.756322790998147*^9, 3.756323478765971*^9, 3.7563235372458344`*^9, {
   3.756323571410263*^9, 3.756323577631762*^9}, {3.7563239357465963`*^9, 
   3.756323949277116*^9}, 3.756324018001823*^9, 3.756324073279243*^9, 
   3.756324368700417*^9, 3.756324451632004*^9, 3.756324620695306*^9},
 Background->RGBColor[1, 1, 0.85]]
}, Open  ]],

Cell["\<\
Just playing around, trying to get the text answer, I came up with the above \
yellow cell. The below yellow cell also gets there. No justification for this \
entertainment unfortunately.\
\>", "Text",
 CellChangeTimes->{{3.756325873674575*^9, 3.7563259171761923`*^9}, {
  3.756326590458577*^9, 3.756326601410187*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{"0.1", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", "x"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"4", " ", "y"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7563239990901613`*^9, 3.7563240078304663`*^9}, {
  3.756324537589958*^9, 3.7563245401240673`*^9}, {3.7563259670720654`*^9, 
  3.7563259876460543`*^9}}],

Cell[BoxData[
 RowBox[{"0.1`", " ", 
  RowBox[{"Sin", "[", 
   RowBox[{"2", " ", "x"}], "]"}], " ", 
  RowBox[{"Sin", "[", 
   RowBox[{"4", " ", "y"}], "]"}]}]], "Output",
 CellChangeTimes->{3.756324008983465*^9, 3.7563245416058273`*^9, 
  3.756325989040762*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"partialuo2", "[", 
   RowBox[{"j_", ",", "k_", ",", "x_", ",", "y_", ",", "t_"}], "]"}], ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "y"}], "]"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{
       SqrtBox[
        RowBox[{
         SuperscriptBox["m", "2"], "+", 
         SuperscriptBox["n", "2"]}]], " ", "t"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"m", ",", "j", ",", "j", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "k", ",", "k", ",", "2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.756326030844676*^9, 3.756326046652231*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"part2", "=", 
  RowBox[{"partialuo", "[", 
   RowBox[{"2", ",", "4", ",", "x", ",", "y", ",", "t"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.756324024354394*^9, 3.7563240293401403`*^9}, {
  3.756325996389811*^9, 3.756325997245728*^9}, {3.756326062694786*^9, 
  3.756326076675322*^9}}],

Cell[BoxData[
 RowBox[{"0.1`", " ", 
  RowBox[{"Cos", "[", 
   RowBox[{"2", " ", 
    SqrtBox["5"], " ", "t"}], "]"}], " ", 
  RowBox[{"Sin", "[", 
   RowBox[{"2", " ", "x"}], "]"}], " ", 
  RowBox[{"Sin", "[", 
   RowBox[{"4", " ", "y"}], "]"}]}]], "Output",
 CellChangeTimes->{3.7563240307366343`*^9, 3.7563240791858263`*^9, 
  3.756324480124414*^9, 3.756324544970529*^9, 3.756326077905403*^9},
 Background->RGBColor[1, 1, 0.85]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"uti", "=", 
   RowBox[{"0.1", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", "x"}], "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"4", "y"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", "uti", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "Pi"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "Pi"}], "}"}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"20", ",", "20"}], "}"}]}], ",", 
   RowBox[{"ViewPoint", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.5"}], ",", "3", ",", "0.5"}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.756309971051881*^9, 3.756309990137995*^9}, {
  3.756326130866962*^9, 3.756326131609415*^9}, {3.75632617597749*^9, 
  3.756326176296205*^9}, {3.7563268951295013`*^9, 3.756326895626567*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJxdnXlcTesXxpsHYz9DxhAJCV1jSPuYhWtMkqJQMmfqmmXKeEOhUJRSSSNN
pg4hYzdRlFnInEzJUH7Vu561P537z/n0vcc+ez/PHta73netbTxtwThXDTU1
tTIdNTXNis+rmufmD/3L2xqfUaWhvobBjfvdTB3Rv7HZZQn8x7N423p1J1rb
rb6ws5FZLvPehccn9M5ytR7S4lF5a+UT5s8T6rYqODXP+uDU3z0bmb1kvt31
39mfeyy0rm+xrShwyVvmDzzcCtcmLLTertY4vLXyI3ON/9qW9hjgYb3+9e3O
ORs/Mz+WcnPPxZazrdNu7a/RyOwb87SyJPNphc7WP1OdCydlfWf+fpnX4njn
odY9Q9qlBy75Ke+n4GmLthYFPWlSxvys2E5a7MKk5a2Vf5hHit9N+2aeFtW1
q7pCZT/T6oeENM7ZqKFQOa60vxpu8l56T1OhokPa6K3uXw3NtJm/ErqlzSsb
MS11lQ7zfkLntO0Lu9yalKUr/25BlS9px17Ws/5lrM/c54iVX4WP5/A3/PzP
pfWn3lkT+G98znCLPmUwd48Ef8EzGt6IvT4mVIK/4KeW6Z9NHB8lwV9w83/v
XB20KlaCv+ADfE27tpgYJ8Ff8PX3Jii33oyW4C94QUbf7bptIiT4Cx5/pNZi
u49BEvwF1zo1I3RS4kYJ/oL/Tq3iSvgLHi22o4S/4E/F7yrhL7iX2E8l/FU5
LiX8Be8sdFDCX/BzQjcl/AW/JnRWwl/wucIXJfwFV+47VuljGvyFb2WhZ9Z/
7uHC/oLPMMwojjYK5r/x6XBlUtNKv+AveOrYuEm+GYnsL/jP0QltjtVJZX/B
3UK26TmdSWV/wc/v1C8rOZXM/oIfuLhuVZMBJ9hf8KXehsMWHY5gf8FXznR9
nWK3i/0FXyI4+wu+WGyH/QXfL36X/QVXiv1kf1WOi/0F/yV0YH/Bzwjd2F/w
KUJn9hd8jvCF/QVfZGe6ocJH9hf+mK7fc6vHAGf2F7xv3rhHBYsO8XGCTz5R
cnxLxfWFv/HZr/h160nBJ9lf8HvRN49W+gV/wbvfNDrX3CmF/QX3jPifu9Gy
JPYXPLeRTr/NUgL7Cz6vqcPNwjHh7C+47vDRrY499mF/wX/aVHH2F3yO2A77
q/K77K/KfrK/KsfF/oLnCR3YX3CF0I39BXcWOrO/4EOFL+wvuO/fPyp9ZH/h
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
Wq5ofXxZnjQotuFVzQh5fjDj79FDg5bcl85PSNWd895Kgs6fV5rM3enxUBp2
PdO940tZ5xZRP3atm/tYsjpXuPzf3bLOU3qdHOJ+J1fyvlNjUodL8vygj+uW
OQ5Z96SBJg8WaPaV5wfT/Jx2jbyRLzUNn9TGrYU8P1h0oWuS9ZUH0vS7U/xd
rsvzVi2Kde9bXHwkWa6+X1TaUJ4f7GOav3vbo6fS4ll57SwdDrG+Y84NDNvw
4Jn01G+Hcmj4MdYZnyWlXaPLlsayzqveNb629N5zaVHx7wnn/WJYZ9/1Gx7M
z30hPdMLH7/yXgTr3MXGuWfBlqfSuqvXFo05Esc6D356fdgD72dS/PmldmsC
5PzG5H96TM7ZWCDt2hK65Gv4PNZ5YZ3geZnrn0unkzS0bS/L943NR2t4ZXi9
kHyiYrY2WnGEdW4399X93t2fSh53dK48L0hknSXNcR+6dn0m2Q2el3hxeSLr
PPHA2T8dLQqkZd6ljfUk+Xxe8Fe7em07P5eubt3Rt3b9SNZ589XdJi3MX0gF
klfykEh5vvtEiZuNQftCacyQ8pQJuZvkdRr/Zk/WN30l9XE/9Fjv7jbW97GJ
1XwNk9dS4+VvYvPHrmOd8anmb5M3vYMNxxs1xv/P72vLt5LJB6t3Xo+9Od6I
aFL0Yeadl9L5jUOGDJh6iHU+F2+v5pJdKO3zXrmuRwcf1vnO0Iv1HLJeSSZN
1J/967+UdX7zuFPb8ZmvJa+rvfIyDdw53vizNKDXyBtvJPO60628M9dyvHHY
aqmvcs1LqfPpEXv+cQ1jnVPuPAlLXVUohTRQv/yho5yvy5o9PCVhxSvJN330
6Foz97DOr9STrkUtey29fWFWWvfYOtb5T0DLh6Geb6QxLqU1f0eOY53NrnxV
27fonaQoLTz+0nobx3WKKVPr7/R4LxWYRvZu0/IQx3V236613TL/g2RXbrTG
OziC47q5O7pbrptbJDX3fxeyv2usPJ9Cn4/2qU9Uzo9nnVu+XXn0g9E7yWTz
BvOOUT4c1/VYV5hS2Oy99OCbvsPZK+s5rhvReOz1J00+SOn2bX19FItZZ5e4
Mw/zGhVJ6mdC3S5u3M86/zPE9GN2w4+S62odixHnI1nnRrU1hw++9la63K+Z
Y3QHP47ruoTNc7S+8k5yGNl7udGDQxzXDe2bN7/X5ffStl02LexnHOG4burt
AessLn6QGivXXzRvJo8H/5kV49fhQpFUuK/wXd3svfz8yx7R/+G/U4qlQLOx
dreDD7POjv6ertseFUs/8h0bxa6IZZ1fFRwv8nb8JLl3/GoxJSuRdV7U+dk/
Gx58knro5r3pfkQeD5YvN1T3cvgsbcnM+RpUX563GvloY2zv7sXS2scz9tez
Oc4632t/ulfPk8XSgK0LPfYWBrHO05Z8PN+16yfJ5OCfthb7XFjnD0qT4V0S
PkmFvvr3ex2RxynLajrc6WjxWQq1ObHdZbs8Trk6/6rXS/1iabPB35lO6fL8
oO3pMv2CLcVS3qYe81MHJLLOT7W7+T3W/SR1f1EaNypInk+ZO9a9+QPvT9Ls
xE2hubPiWOfSwKCj97Q/S+k/p+jH3pTHg7W766Xe0vwibfq7h91/rvJ4MGBt
v/6Z679I+xesWRa8SR53m9xYdP2a+lcpP3bPiNu68rg71jByfIbXV2lwh3nL
grsls859pj16mP7nq/R5fYlW6zJ53gqfoRYn84tOyOPB+v9bV3+5/Rdp3waT
KwcL5fHgIcfkwKX3vkiK5lnLr6+ZwPFGh8h3bRfZfZUK4wfUcwqX560Sv7SK
m5/7VTLwCYzSDZHnrbQm7nRsH/dZWuMxKVinnzw/uOvIpZcmnb9IeYOMSsYN
lMeDzYt+zDeO+SJN18q6+jBdHndH9u5SamT+VQoKqf9sh5U87u6+aca6pse/
SsHaZ69ZdJF1tmme5Vf/2DfJbOtx+x8LD7DOOTO1jAzal0iRfYoXuUXL40Hn
k73Da0WUSAaXvKJCLkayzm/L53fRN/0uKe183o+6Fc46ew4PS9U++l0yO9Nx
8ZhPwazzpZh6bso136S575Lcm+yNlvMb9Gl5yL3karp8Pt8ftHpZ6qoSaX2L
/320HbKQdXbddUI96VeJZFbv/KJvfj6sc/GDV9sSVnyXXg8dkmy+7gDrrJDs
LOfYfpPy1H7OePz2BOt8c9v2CzPvfJMmL8hLXqMnz3fb3z0/fMa4EmnamrTT
7T1jWOcXxiV3nLNLpMk6kb397oayzh7zOjo5jfkulXxx2/QtTM4jbdLat8Bu
VKl08E346n6XF7POBmNulI7LLJXs7U54vDowjXUOPKi2fvTIH9KW938XOmf9
w88/01c9ao68UXHeTW5Y1uOGnBc90XXOnmHDf0oG3UvXbF5+gM9jtX35/TVM
SqUDbcwOtZ3nJ4+7n9W5UX6kVIofP6P5WTv5/oxPqstmnUOWLX/0PfiH5Ebf
h87ml2Ldvrb8KdnS9qHzqnZGDWJ/fJfsaH+gs97icUFRy0qlbNp/6LwnbbNp
xPdS6QUdL3RuVeNcXKjnD8mZ9IHO0RM+WwZ/+yHdIj2h84X3jiP2f/kpaXwV
+kPnkZa+OXsX/ZLsyS/onLfhipPvpwpO/kLnaVm/C308fkvj6HyAzkVNu3ps
//hbuknnD3S2WhNsNPjaT+kanW/Q+cq13PD+w35J5nR+Qt9xDWtaWF/5Jf0x
qn4+47M8SJz/0Nk9eumAXpd/S4PpeoHOqXVffCw+9FPSp+sLOg+a3GT5B6Nf
UjRdj9D5VvgojbeBv6RadP1CZ8fPG7YXNvstRdH1Dp1f9zvV4PmB31IPuj9A
57KcNu0eBpRJR+h+Ap23tJoUn9eoXAqk+w90bjDXp3fuvnLJme5X0PlQysX0
7IZ/pFy6v0FnM80fI/7b80daTfdD6LzMbeaPzfPLpGZ0/4TOmicC12/8UCb9
pPstdPYpy665bm65pNek+v25iY3u3tXvyqXldD+HzvjcR/d/6Pz1e9SNboPK
pHf0vIDOXgOf2lpcLJMG0PMFOtfa2fCx+YBy6T49j6BzwP3hMztcKJcO0vML
OpuYehW3VfyRvOl5B52DpixdV7elmuI8PR+h8zQtg4x/p6gpZtHzFDq3j4qq
UeuQmqInPX+h84fRg0dve6SmeELPa+h88tsTPz0jdcUeer5DZ4d2/rNf6qsp
EikegM6tMv+Km26jptD2E/EDdH656OaXZ1vUFPGB1eONqMYzLZ2vqinaU3wC
fT3S1Fc/1lVXrKF4BjpbPF0Y4fnmj7SD4h/o/Hjv+IDe3dUUfSlegs5hfYse
pixWU8yj+Ao6z362xbjnSTVFOcVj0Nlicxu3xM9qiv0Uv0HnM7ftP8YvVFc8
pniP8xvLvnTrkqCuaErxobxe1GdZTLG6IoDiSehc81L7cx0tNBS+FH9C5+xZ
F9WjFmgoDK1FvMrn88EVed6O6gpfim+hs3X/hkbageoKa4qHobPmqziXDQ/U
Fe0nVY+fr+4YHq7eTEPxneJt6OzT9eXbtQ4aih0Un/O6AvosongeOv/W76Xz
wFtdYUnxP3ROj8sePilDXeFO4wXovGXC3J33tDUURTS+gM6jfunkTBisoehO
4xHonD/EymncJQ3FLRq/QOdD7++G3NLUVOTTeAc6z/BdWDhqoKZiPo2PoHMH
y1odM9drKjbSeAo6f3wUvmBEuqZCh8Zf0Hlf3SlD2sdpKEYYiPEadHZMKt0W
XlQRZ10T4zvobDzZL8uks6ZCQ2U8WKjWuUHoPE1FNxo/Qufo8Kv2xjGairk0
3oS+tnlru5Tvr4gvaHwKnfH59JAYz3L83CYp9WdjTcX9ZWL8C53Dr40uW2av
qTCn8TJ0nrvgbf/v/poKFxpfQ+fvp1ve+GKopXhF43HofNb5dN1FdhV+0vid
19fpTLAt3qul8KDxPnQeGv0xYH6ulmIk5Qegc+1x2x69b6CtmEH5BOicuKF/
4jV1LYUX5R+g84oOD0uH9tdSXKB8BXSWsjz7ZXhVxFmbq+c3tJb+b/2g81qK
XZQPgc7Xm0ZnpP+p+D7lT3j9xsjpQYffayqUlG+Bvpafy54ZmWspHCk/A53x
+Z7yOdD5Ur9uc5oer/CB8j/QedvzzLiAt1qKZZQvgs4Nu2j23jtLW9GL8kvQ
+X5O0Or6x7QVLpSPgs7BKyzTd7/WVjSi/BV0dm11R8egvY4C+S7o3DFj3gif
mTqKrZQfg863v5u0nmOrrRhI+TToHBCkdHvjp62YQvk36Ow00OH4zDvaiuBh
1fN1rd98/fiyno7CjPJ70Pm1z87uM8bpKK5SPhA67zo/pGZ/SVthQPlDXs/v
9my0co22woTyjTxOqbVqT780bcUvyk9CZ3zOoHwmdI6cmGDUp5+OIozyn9C5
W2hheM+zOgobypdC59Jh694l/tJRIL/K6xiLmll066urWE75WOi8YU/ykoQV
uopHlL+FzjZ9xp7qclpXMYjyvdC5eI7erloROopBlB+Gzsn/C83ZVqij+EL5
ZOi8MqVfE31TXcUO8+r5Z4VTntNmV12FKeWrobOO5uIj2kd1FfmU3+Z1Mt3N
lhfs1lE4Uj4cOi+5f+mcc7aO4hTlz6FzH6+pGk8MdBWzKd8OfdVMfw5xGqOr
eEf5eeiMzyLK50PnsY2uN8iro6foS/l/6Gx4bsYku1F6iqs0X8D552l/gnL+
1VOcovkF6BxCdV0PaT4COs+M7d4uu5a+4tYlMX8Bnes8fVcW80NXsZjmO6Bz
zibvAea99RQNZ4n5Eei8n+rpXqvMp0zJPnOjfaqewsdNzL9AZ5N/7Awivusp
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
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
rokql7w9Wt9UrvRR9P5p5f7/A3R038Q=
          "]], Polygon3DBox[CompressedData["
1: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
Unp/cJxZScPAfdAkaJP+Ov8D1rLahxprQ07nXQh3JX/pmjWVNQBaYH7w88mF
T2VtBs/fU6P3R6DR0GqHRdeH8BjxGrtFa0s0F9rr6GhtiuZEex4TrU3RrGjX
rtH+H5wZ7kz9A+2H59pH3++oaO3GOZ2Fj43WymhctO5x0f4kGhotfWQ098YX
xOv+354Aff9Pg58vPg9cG84Nn6TGhd/0ZXAtG/8TbY3nTq0JfxMvEU+xR2l/
9sHMNZpjhSfpmp90fXfhNsLdo/cbsEeE/QU9onMrOZRcio8Gl4XTwveoH+F9
44H3Kq0r0RZoDPQA/j+5F0/6gtJ5gnyBJkF/oAPhSjVTvj08unZJzewQ9Eg0
F6ZOR620GRyF9Sq8unI+RyuhmX5P+RyucWCK9+hFvKk2KV+xH+RP9fuk++Op
z1T/mGA/HX6G1wTnhfs+pmMfqb83nJHcJHwQ8xmuXFlPwiXgFOtFe4J4g4PI
rZX9O7gF+YdaPJ4z3jMeNrW/rYU7sF517A/up/ab8Okab6vx43XNyMxzpJtw
l2h/F42AVjgi2k/GV6a2jGeOd47HTS0RjYvW/SB4fawpvV7nBn/etBQb0ZDo
u8Y6tqf6t+r4b5U1LFr2kuB6XONord5S7V8de7N0fBmn/iJie/T+CjQ92h4f
AC4Fp0KvNYzmqzvDWYN9BrgMnAa+Qs4idxHTPiidM8mdxOT3S+dUcisx9L3S
MYRcTHwltvAdLkkcnO9GDEWjUWP7f359cdJoc4Xvr6yJttF3KJk/wu/m/n2b
lc6Z5E5iKv4hMX9g4ojkAmI83AFNSuwnxhJriXHod3JCv6QhyRXjhN8hv7Pm
S9cIqRWOIweWrvFS631Y+NzSnj7ePvWB00rXyKiVUROjNsmcpRbE+mYuUyOj
VkaNjVolNQNqB9SMLirNl7cpXAPoVzpHkivhGEtK1wSoDVBz6F+6xkyt+RFi
fumaHrW98Wk9UxOhNnJXii93VfbI0E9rgnMKuYU58nXpnIRmp2ZJriLHnpc4
LbmXHAbHRdOT28jJ5yTOSq6+t7LH1zjNP3LouYnzklvHVvbsmms8lK45UXui
5kSt8p7KHhz685/gGhS1qFEpXo6p7Nnh+RXolcqeYTPhvHTOJHeSM78qvZ/r
2MI5Cv/5zsoeYt00v+FYcC04xGelOQ3cBg7ySWn/Y2jhnPxlaU4EN4JTfFqa
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
3L1T9F5X9oyzd/z/ABWCEDU=
          "]], Polygon3DBox[CompressedData["
1:eJwt13WcFtUeB+BlFxBEGkRSKSklJVRSWGqXWhokL6VSCiYhoBJXwBuKCgbd
qXR7aTAI6fZS0iFdPvPh/HH2/fye93tmZuedE5O3Y6+knrExMTE7tRTaNn8u
gZ3JYmLKq2OSx8QcZhniYmKusY6oGDvGnmaxsu+wKmwk+4S1ZOfZIraVXVBv
1/cFdt/377LePmvwHWys3NusB6vGfmFjWF/WnVVlP7Mv2Gg2jLVmF9kS9in7
mLVg59hCNooNZa3YBbaYdWOvspJsCRvEtrDz6t9cXxl2z/cF2TW2iRVjqeT6
sbd9V4fvZePZZ2w4e5VdYkvZZnZO/au+pdld3//MLrNdrAJLJvcru8p2s5dY
HOvD3pCvwrexz9kv7Ir6d7kXWSzbxM5G94mVYnf0+ZYt9vlPXoKfkDvBqrEC
bIpcK9aRJbFn2Qz2FpvE1rLP2cv6Xmb92TusLtsnN4GdY3XZ82w+68yGsUGs
CTvF5rGP2QDWiP3BZrHhbDBryk6z+WwI68casGNsBvuI9WcN2XE2kxVmt8P/
G93T9Gwo+1CuMT/J5rIxbBrrx3LKbmdj2QL2CSvEDrGv2Gw2iOVle9gz7E/1
QnXucE8ns598fsEr8ityR1kOdl/dW+5FNoC9yxLk9rOJ7Cd2nC1iXWRzRuNA
S2Ql2A9yXeXOswRWnC1gXdhZVoc9x+axTuwIy8puOdbrrAzrxJqzYiH3HjvO
KrO8bCJrxtqw2iwXGxeOV5Tdj8ZfGOdZ2Hi2Qu4zXpafZX+wKiwfmyTXgp1i
NVih8Ay1Zf9nVVl+Npm1ZCfZK9F4YlNZazaBrWT/YuWc4xxrz+qFa47O0Z2d
ZvGsMJvJ2rEzrCYrwmax9uwya8jKsGWsJ+vMWoT7Fz2n77MrrBF7gS1nvdhF
Vp+VCvNBdN5LrAErzZayHmwge48lsgNsEvuT1WJF2WzWgY1gQ1gzdoYtYIPZ
B6w+O8qms0LsVjSnhfGbjuVjF9lqlj/Mu2vYUX1/5J14dvX72lusZjSfiH0j
9xdrxl5ka9nbLG9Kx2ITWIK+59l1uZasIlsf7ktBuc1sFmspd4cVk3sQ1oBo
vsoajQ+5VXLjed3wuxWXi2V71FXkcrFrrCmrILeG9WUJLB+7Ifcaq8nqsrzs
OuvG4lkd9gz7i3VlNVgu513EvnK8yvwoWya3n81hbVgmdQG59WwaS2LX5BJ5
fnYzjJla7AZrxSrJbWAfsPz6rmNTWSPZqyw1+zbMEc+wn6L7wg6ztawvy+pY
JbQ4tldd1fFyyyWX+yrMQzn4cpaKfcM+ZHnYGpaWTWAfswJsA3uCjWcfsfxs
PUvDvmdDWD62jt103tasMtvovP3YLdY2rKHRejmYZdd3Pvsvq6DvfvYUm8f+
w8qzfexx9h0bHObE/0XPJFvDJrJEdoHddo527JWwTg9hOeUWsi9ZJbkj7I5c
e1Y9WgvlPmK55ZaycayG3Em2Uu4Qm8/ah3uaR24Z+4bFs1NyK/hBNo+1Y1mi
/Yfc8mjtYzXZablGvDC7F+bnemwW28q+k6vDH7CmrBh7qO4r14iVZqnYIVaT
5Wf3WGdWO1qD2QhWlT3Fzsu1ZhVYNZadXWCvhnWhCSvKHrA+rCFLYkXC+vEm
q8/usk6sVhjTw1lDVojdlevFElkz9lxctAkwxn0kseosJ7sk145VZKvZEfaD
3D/4U9Fcr70W5rBojRot94C9zuqFee0ztpwdYHNZW30zR3O9lotdVreXqySX
wr3/mvUPa+1KVjP67djVsE+M9oT1WUF2m/VgdVkLVjzsHd9lTdhsto19H+aX
h6w5e54lC3vMxiyH8/7IxoQ1+TBrIPcsu6PuKZfA4lludoV1YJXZY/qOYwP1
zc1Xs5RsLBvAcrFVbJG+u9kM1oKlVX+nLWGfspLh2d3ObkT3U13NOR6P1lXH
2ye3gvfk6aP9h7aDTQnzS0r1b9r1aG8V5o3U+s5hP4c5Npqzow15eS0d+0Nd
DxWVi3WO98O+82JYj0rJPcYOysWzfGw/S8n+ZM3Y06wcS8uOs0RWhCVzvL6s
eVi3vmVr5Y6xhayzbA71Ou2kenPYF//l+/XsFNvCnmPXozXb8X71uSCM6WQy
87Xt0Z6KNWQp1L20ruzlsB6Nct7urCMrF62FbBh7g3VgZdkqNpS9xtqEtXtp
mOt6s25hfdsQnvGerAt7ia1jI9k+loKdcR1NWR42jW1gX8tV57fYdLaRjQ3z
1e1o7fa//RLmq3bhN9qgnVZvVT+Pbvh+IzvDtrHi7GY0d0W/u89JvAFPHj23
jreFzWat2F3nKMJ2scVh7/hYtP/Q3mTxsY/e1cbJvcQyspMyjVlJFqNvL5YU
9t5fskxsenh2S4R9cUY2lY1gRdk2VtbxnmDH1An6FmZVWDZ2jrVi5dlV1oSV
D79RH5bB8aaw4ayI7FaWmc1gI8OY2cGysllsNCvNdrF0bBIbGvbom1l6NpkN
Y4XZFvYkmxP3aO9YNuzbs7CZbBQrxXaybGwu+3fYY+5lO1zzzWieU7/imtOw
3exh7KOxlRj2OXtSRC9j9rNhvD3J9rJk7ASrz7Kxl1kmdoo1YaVYZfYkO8ta
snKsIsvMTodnrTQ7yNKwi2GtKMgOsfRh7uwQxvkStjfszVqFueSA9nhYZ6K1
p4DcYraHzQx7uHTqXdpd9RF1LbkMcg9Zz7hH72XRu1X0jr2Q/c6ms+ayT0T7
GfdvIOvAboT3t538jvpwWBujd7Df2b1oX8tqs4xsBtsU1vj4sJ8sw1LHPepb
K1zz32lIGD0=
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ktLlFEAx+EzOlNqXsoUHMKFuwLFL6Cg9AU0EvdR0BDU1kC7aN5Ku6iI
aYtGrTEiIkpChpAQS7t4KZe2iL5AIuK259DiN89/9c6cd07dhWvnriZCCI/1
zIg762NM1fZ+YQhneDQZQjNPsZ2NvMSzvM5RddpZXuEib3Kd4/zFHPeY8uy8
neYmG/iHrTxkB4+lQshwUjn1aE4zuqFPBZ7Pz7zFNd7mOnv5hX28o692P79x
gN85yA0Oxd/AYd7Vln2P2xzhD47yJ+9zhw84pQU91LyeqFu1fvdlFvM8D5yn
hb9ZH7+bNUxqyf4b3zt3+Yhr7OE7ZviUI+qwu9jKi2xgG9Nsiu+Upznhuc9V
Zc9yWiftVVZyhSf4kce5zAp+YDnLlLdLuRT/B75nCRfjufiWRfFO6I19hK/p
yOFVPBtf0tUJL1gQ71fi//36B3bQTN8=
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1011, 1310, 1010, 740, 1012, 1475, 1685, 1013, 1476, 1686, 
       1014, 1477, 1687, 1015, 1478, 1688, 1016, 1311, 1017, 1580, 1312, 1018,
        1479, 1689, 1019, 1480, 1690, 1020, 1481, 1691, 1021, 1482, 1692, 
       1022, 1313, 1023, 1581, 1314, 1024, 1483, 1693, 1025, 1484, 1694, 1026,
        1485, 1695, 1027, 1486, 1696, 1028, 1315, 1029}], 
      Line3DBox[{1031, 1316, 1030, 1582, 1317, 1032, 756, 1033, 1487, 1697, 
       1034, 1488, 1698, 1035, 1489, 1699, 1036, 1318, 1037, 1583, 1319, 1038,
        1584, 1320, 1039, 1490, 1700, 1040, 1491, 1701, 1041, 1492, 1702, 
       1042, 1321, 1043, 1585, 1322, 1044, 1586, 1323, 1045, 1493, 1703, 1046,
        1494, 1704, 1047, 1495, 1705, 1048, 1324, 1049}], 
      Line3DBox[{1051, 1325, 1050, 1587, 1326, 1052, 1588, 1327, 1053, 772, 
       1054, 1496, 1706, 1055, 1497, 1707, 1056, 1328, 1057, 1589, 1329, 1058,
        1590, 1330, 1059, 1591, 1331, 1060, 1498, 1708, 1061, 1499, 1709, 
       1062, 1332, 1063, 1592, 1333, 1064, 1593, 1334, 1065, 1594, 1335, 1066,
        1500, 1710, 1067, 1501, 1711, 1068, 1336, 1069}], 
      Line3DBox[{1071, 1337, 1070, 1595, 1338, 1072, 1596, 1339, 1073, 1597, 
       1340, 1074, 788, 1075, 1502, 1712, 1076, 1341, 1077, 1598, 1342, 1078, 
       1599, 1343, 1079, 1600, 1344, 1080, 1601, 1345, 1081, 1503, 1713, 1082,
        1346, 1083, 1602, 1347, 1084, 1603, 1348, 1085, 1604, 1349, 1086, 
       1605, 1350, 1087, 1504, 1714, 1088, 1351, 1089}], 
      Line3DBox[{1091, 1352, 1090, 1606, 1353, 1092, 1607, 1354, 1093, 1608, 
       1355, 1094, 1609, 1356, 1095, 804, 1096, 1357, 1097, 1610, 1358, 1098, 
       1611, 1359, 1099, 1612, 1360, 1100, 1613, 1361, 1101, 1614, 1362, 1102,
        1363, 1103, 1615, 1364, 1104, 1616, 1365, 1105, 1617, 1366, 1106, 
       1618, 1367, 1107, 1619, 1368, 1108, 1369, 1109}], 
      Line3DBox[{1111, 1370, 1110, 1505, 1715, 1112, 1506, 1716, 1113, 1507, 
       1717, 1114, 1508, 1718, 1115, 1509, 1719, 1116, 1371, 1117, 835, 1118, 
       1510, 1720, 1119, 1511, 1721, 1120, 1512, 1722, 1121, 1513, 1723, 1122,
        1372, 1123, 1620, 1373, 1124, 1514, 1724, 1125, 1515, 1725, 1126, 
       1516, 1726, 1127, 1517, 1727, 1128, 1374, 1129}], 
      Line3DBox[{1131, 1375, 1130, 1621, 1376, 1132, 1518, 1728, 1133, 1519, 
       1729, 1134, 1520, 1730, 1135, 1521, 1731, 1136, 1377, 1137, 1622, 1378,
        1138, 851, 1139, 1522, 1732, 1140, 1523, 1733, 1141, 1524, 1734, 1142,
        1379, 1143, 1623, 1380, 1144, 1624, 1381, 1145, 1525, 1735, 1146, 
       1526, 1736, 1147, 1527, 1737, 1148, 1382, 1149}], 
      Line3DBox[{1151, 1383, 1150, 1625, 1384, 1152, 1626, 1385, 1153, 1528, 
       1738, 1154, 1529, 1739, 1155, 1530, 1740, 1156, 1386, 1157, 1627, 1387,
        1158, 1628, 1388, 1159, 867, 1160, 1531, 1741, 1161, 1532, 1742, 1162,
        1389, 1163, 1629, 1390, 1164, 1630, 1391, 1165, 1631, 1392, 1166, 
       1533, 1743, 1167, 1534, 1744, 1168, 1393, 1169}], 
      Line3DBox[{1171, 1394, 1170, 1632, 1395, 1172, 1633, 1396, 1173, 1634, 
       1397, 1174, 1535, 1745, 1175, 1536, 1746, 1176, 1398, 1177, 1635, 1399,
        1178, 1636, 1400, 1179, 1637, 1401, 1180, 883, 1181, 1537, 1747, 1182,
        1402, 1183, 1638, 1403, 1184, 1639, 1404, 1185, 1640, 1405, 1186, 
       1641, 1406, 1187, 1538, 1748, 1188, 1407, 1189}], 
      Line3DBox[{1191, 1408, 1190, 1642, 1409, 1192, 1643, 1410, 1193, 1644, 
       1411, 1194, 1645, 1412, 1195, 1539, 1749, 1196, 1413, 1197, 1646, 1414,
        1198, 1647, 1415, 1199, 1648, 1416, 1200, 1649, 1417, 1201, 899, 1202,
        1418, 1203, 1650, 1419, 1204, 1651, 1420, 1205, 1652, 1421, 1206, 
       1653, 1422, 1207, 1654, 1423, 1208, 1424, 1209}], 
      Line3DBox[{1211, 1425, 1210, 1540, 1750, 1212, 1541, 1751, 1213, 1542, 
       1752, 1214, 1543, 1753, 1215, 1544, 1754, 1216, 1426, 1217, 1545, 1755,
        1218, 1546, 1756, 1219, 1547, 1757, 1220, 1548, 1758, 1221, 1549, 
       1759, 1222, 1427, 1223, 930, 1224, 1550, 1760, 1225, 1551, 1761, 1226, 
       1552, 1762, 1227, 1553, 1763, 1228, 1428, 1229}], 
      Line3DBox[{1231, 1429, 1230, 1655, 1430, 1232, 1554, 1764, 1233, 1555, 
       1765, 1234, 1556, 1766, 1235, 1557, 1767, 1236, 1431, 1237, 1656, 1432,
        1238, 1558, 1768, 1239, 1559, 1769, 1240, 1560, 1770, 1241, 1561, 
       1771, 1242, 1433, 1243, 1657, 1434, 1244, 946, 1245, 1562, 1772, 1246, 
       1563, 1773, 1247, 1564, 1774, 1248, 1435, 1249}], 
      Line3DBox[{1251, 1436, 1250, 1658, 1437, 1252, 1659, 1438, 1253, 1565, 
       1775, 1254, 1566, 1776, 1255, 1567, 1777, 1256, 1439, 1257, 1660, 1440,
        1258, 1661, 1441, 1259, 1568, 1778, 1260, 1569, 1779, 1261, 1570, 
       1780, 1262, 1442, 1263, 1662, 1443, 1264, 1663, 1444, 1265, 962, 1266, 
       1571, 1781, 1267, 1572, 1782, 1268, 1445, 1269}], 
      Line3DBox[{1271, 1446, 1270, 1664, 1447, 1272, 1665, 1448, 1273, 1666, 
       1449, 1274, 1573, 1783, 1275, 1574, 1784, 1276, 1450, 1277, 1667, 1451,
        1278, 1668, 1452, 1279, 1669, 1453, 1280, 1575, 1785, 1281, 1576, 
       1786, 1282, 1454, 1283, 1670, 1455, 1284, 1671, 1456, 1285, 1672, 1457,
        1286, 978, 1287, 1577, 1787, 1288, 1458, 1289}], 
      Line3DBox[{1291, 1459, 1290, 1673, 1460, 1292, 1674, 1461, 1293, 1675, 
       1462, 1294, 1676, 1463, 1295, 1578, 1788, 1296, 1464, 1297, 1677, 1465,
        1298, 1678, 1466, 1299, 1679, 1467, 1300, 1680, 1468, 1301, 1579, 
       1789, 1302, 1469, 1303, 1681, 1470, 1304, 1682, 1471, 1305, 1683, 1472,
        1306, 1684, 1473, 1307, 994, 1308, 1474, 1309}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{425, 725, 426, 740, 455, 755, 1582, 470, 770, 1587, 485, 785,
        1595, 500, 800, 1606, 515, 815, 530, 1715, 830, 545, 845, 1621, 560, 
       860, 1625, 575, 875, 1632, 590, 890, 1642, 605, 905, 620, 1750, 920, 
       635, 935, 1655, 650, 950, 1658, 665, 965, 1664, 680, 980, 1673, 695, 
       995, 710}], 
      Line3DBox[{427, 726, 428, 1685, 741, 456, 756, 471, 771, 1588, 486, 786,
        1596, 501, 801, 1607, 516, 816, 531, 1716, 831, 546, 1728, 846, 561, 
       861, 1626, 576, 876, 1633, 591, 891, 1643, 606, 906, 621, 1751, 921, 
       636, 1764, 936, 651, 951, 1659, 666, 966, 1665, 681, 981, 1674, 696, 
       996, 711}], 
      Line3DBox[{429, 727, 430, 1686, 742, 457, 1697, 757, 472, 772, 487, 787,
        1597, 502, 802, 1608, 517, 817, 532, 1717, 832, 547, 1729, 847, 562, 
       1738, 862, 577, 877, 1634, 592, 892, 1644, 607, 907, 622, 1752, 922, 
       637, 1765, 937, 652, 1775, 952, 667, 967, 1666, 682, 982, 1675, 697, 
       997, 712}], 
      Line3DBox[{431, 728, 432, 1687, 743, 458, 1698, 758, 473, 1706, 773, 
       488, 788, 503, 803, 1609, 518, 818, 533, 1718, 833, 548, 1730, 848, 
       563, 1739, 863, 578, 1745, 878, 593, 893, 1645, 608, 908, 623, 1753, 
       923, 638, 1766, 938, 653, 1776, 953, 668, 1783, 968, 683, 983, 1676, 
       698, 998, 713}], 
      Line3DBox[{433, 729, 434, 1688, 744, 459, 1699, 759, 474, 1707, 774, 
       489, 1712, 789, 504, 804, 519, 819, 534, 1719, 834, 549, 1731, 849, 
       564, 1740, 864, 579, 1746, 879, 594, 1749, 894, 609, 909, 624, 1754, 
       924, 639, 1767, 939, 654, 1777, 954, 669, 1784, 969, 684, 1788, 984, 
       699, 999, 714}], 
      Line3DBox[{435, 730, 436, 745, 1580, 460, 760, 1583, 475, 775, 1589, 
       490, 790, 1598, 505, 805, 1610, 520, 820, 535, 835, 550, 850, 1622, 
       565, 865, 1627, 580, 880, 1635, 595, 895, 1646, 610, 910, 625, 1755, 
       925, 640, 940, 1656, 655, 955, 1660, 670, 970, 1667, 685, 985, 1677, 
       700, 1000, 715}], 
      Line3DBox[{437, 731, 438, 1689, 746, 461, 761, 1584, 476, 776, 1590, 
       491, 791, 1599, 506, 806, 1611, 521, 821, 536, 1720, 836, 551, 851, 
       566, 866, 1628, 581, 881, 1636, 596, 896, 1647, 611, 911, 626, 1756, 
       926, 641, 1768, 941, 656, 956, 1661, 671, 971, 1668, 686, 986, 1678, 
       701, 1001, 716}], 
      Line3DBox[{439, 732, 440, 1690, 747, 462, 1700, 762, 477, 777, 1591, 
       492, 792, 1600, 507, 807, 1612, 522, 822, 537, 1721, 837, 552, 1732, 
       852, 567, 867, 582, 882, 1637, 597, 897, 1648, 612, 912, 627, 1757, 
       927, 642, 1769, 942, 657, 1778, 957, 672, 972, 1669, 687, 987, 1679, 
       702, 1002, 717}], 
      Line3DBox[{441, 733, 442, 1691, 748, 463, 1701, 763, 478, 1708, 778, 
       493, 793, 1601, 508, 808, 1613, 523, 823, 538, 1722, 838, 553, 1733, 
       853, 568, 1741, 868, 583, 883, 598, 898, 1649, 613, 913, 628, 1758, 
       928, 643, 1770, 943, 658, 1779, 958, 673, 1785, 973, 688, 988, 1680, 
       703, 1003, 718}], 
      Line3DBox[{443, 734, 444, 1692, 749, 464, 1702, 764, 479, 1709, 779, 
       494, 1713, 794, 509, 809, 1614, 524, 824, 539, 1723, 839, 554, 1734, 
       854, 569, 1742, 869, 584, 1747, 884, 599, 899, 614, 914, 629, 1759, 
       929, 644, 1771, 944, 659, 1780, 959, 674, 1786, 974, 689, 1789, 989, 
       704, 1004, 719}], 
      Line3DBox[{445, 735, 446, 750, 1581, 465, 765, 1585, 480, 780, 1592, 
       495, 795, 1602, 510, 810, 1615, 525, 825, 540, 840, 1620, 555, 855, 
       1623, 570, 870, 1629, 585, 885, 1638, 600, 900, 1650, 615, 915, 630, 
       930, 645, 945, 1657, 660, 960, 1662, 675, 975, 1670, 690, 990, 1681, 
       705, 1005, 720}], 
      Line3DBox[{447, 736, 448, 1693, 751, 466, 766, 1586, 481, 781, 1593, 
       496, 796, 1603, 511, 811, 1616, 526, 826, 541, 1724, 841, 556, 856, 
       1624, 571, 871, 1630, 586, 886, 1639, 601, 901, 1651, 616, 916, 631, 
       1760, 931, 646, 946, 661, 961, 1663, 676, 976, 1671, 691, 991, 1682, 
       706, 1006, 721}], 
      Line3DBox[{449, 737, 450, 1694, 752, 467, 1703, 767, 482, 782, 1594, 
       497, 797, 1604, 512, 812, 1617, 527, 827, 542, 1725, 842, 557, 1735, 
       857, 572, 872, 1631, 587, 887, 1640, 602, 902, 1652, 617, 917, 632, 
       1761, 932, 647, 1772, 947, 662, 962, 677, 977, 1672, 692, 992, 1683, 
       707, 1007, 722}], 
      Line3DBox[{451, 738, 452, 1695, 753, 468, 1704, 768, 483, 1710, 783, 
       498, 798, 1605, 513, 813, 1618, 528, 828, 543, 1726, 843, 558, 1736, 
       858, 573, 1743, 873, 588, 888, 1641, 603, 903, 1653, 618, 918, 633, 
       1762, 933, 648, 1773, 948, 663, 1781, 963, 678, 978, 693, 993, 1684, 
       708, 1008, 723}], 
      Line3DBox[{453, 739, 454, 1696, 754, 469, 1705, 769, 484, 1711, 784, 
       499, 1714, 799, 514, 814, 1619, 529, 829, 544, 1727, 844, 559, 1737, 
       859, 574, 1744, 874, 589, 1748, 889, 604, 904, 1654, 619, 919, 634, 
       1763, 934, 649, 1774, 949, 664, 1782, 964, 679, 1787, 979, 694, 994, 
       709, 1009, 724}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
Or5qgrP5w7tbB4zBwqNGD3SnlMDBurI8t3EikNne70aOG+CShWs/Lt9WCOpu
didickVw98XnsChuAQ57dnNle8ksyPKfH3nbnINsk40X9+1Zil0OGpz1VQ4B
n6nHtEO5/9Y7knVk68OonSHEDjI7nbaJ7Ytj6L5nC4ifBcRPZH5uEY8LWVwM
hwiCAzIcGG4dCG7IcOvcneC8leCMDOey8yRfliRfKMyXV+dx8/h8JbF8XV/r
tMI4Phk2Lh+rApVR0LRUdpu/K19P1nyrmJyYAp5Hx3k8sD6mraW+WfZDCN/n
m8RKNcbGQ+dXL3VaTTOg3vaq7gieF1QHfDdf2TUc4h0+3Xr7LQ9meNVfFPXk
wDw42LNG8g6M3C+bf/F+AWxe9+j4A553S4Q1B4Y9tUfZ3lHVAQMKoevHoO7r
S/jzbOBpt/F1AFbUv9n96Uo+rHL8LaPVKgLlwu1B+8Oi8cOK2MkxLjnQ4tV5
Ro4m7+dhu+/y0ojTl89+1S4iGV7qH0juZslBj8cqY4ZYpKC1//OCLtq+8Hn3
y2XB9/9bP0rWka07UTtTiR1kdkbQfd+TfZHte576WU78ROaninhcyOI6KI4D
bqI4vKS4IcENGW5JFOeuBGd8S3G+RvO1k+QLhfnK25D9J19JLF+zMvadyZuZ
Bc5b0q/oSgAoKBgNDzHjYMmzIQMXncuGaqNtXUdN+j3j7LFoW4Vd/L41l5qO
WqfBgdd2Pj/K9GHcy2P71/E8Wm/TEpW4ifEAbkqNF86tBcMgm223CjkYeiwt
X+WsH9x/r6gqUb8Jwr/kvL7cykFFqvOS23bOGOOqblObuBn0Kx/1buDfqSWN
o1x6yUTgocPxd59HboQBQdXTXr7m4LNmyN0lD3nci9Ob+6QbQuG2uiOTYjlw
Dxui+D0gA6WWTZNfP3UBeF63UYvjeeX6731FOZrZ2MFvV0NF7zHgZmcforD3
v/VM37Z1ZOvMTot+mx1kdr6K74tsXwNxP5H5+UE8LmRx9aI4hBEckOGwkOK2
lOCGDLd4cZyR4awjni8U5mtSuUo3Pl+JLF9lKzVC1o5NhupAgw59FKKwWM94
thnPX9yHmbS/oJwCn6e4+NTdN0s6ekn0dkIUB9qrryU618TBkklWW06EpePl
YSc6LtrBgYpq5qXXZ8MALN6ezW7IRcfdZfXJyhx8X/PCufCyJ3Qp2JvZoXMB
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
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{251.25001326214624`, 240.},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->
   NCache[{{0, Pi}, {0, Pi}, {-0.09931806531337138, 0.09931806531337138}}, {{
     0, 3.141592653589793}, {0, 3.141592653589793}, {-0.09931806531337138, 
     0.09931806531337138}}],
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-1.0624007267926268`, 1.9072612191725888`, 2.5949295438510065`},
  
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.756309993943387*^9, {3.756326134137076*^9, 3.756326137205574*^9}, 
   3.756326177731349*^9, 3.756326896986508*^9}]
}, Open  ]],

Cell["13. 0.1 x y(\[Pi] - x)(\[Pi] - y)", "Text",
 CellChangeTimes->{{3.756222667119479*^9, 3.7562227186771507`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.772137110498374*^9, 3.772137111176931*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"c", "=", "1"}], ";", " ", 
  RowBox[{
   SubscriptBox["\[Lambda]", "mn"], "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"c", " ", "\[Pi]", " ", 
     SqrtBox[
      RowBox[{
       FractionBox[
        SuperscriptBox["m", "2"], 
        SuperscriptBox["\[Pi]", "2"]], "+", 
       FractionBox[
        SuperscriptBox["n", "2"], 
        SuperscriptBox["\[Pi]", "2"]]}]]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.756333449562058*^9, 3.75633345318451*^9}}],

Cell[BoxData[
 SqrtBox[
  RowBox[{
   SuperscriptBox["m", "2"], "+", 
   SuperscriptBox["n", "2"]}]]], "Output",
 CellChangeTimes->{3.756333455659925*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{"0.1", " ", "x", " ", "y", 
   RowBox[{"(", 
    RowBox[{"\[Pi]", "-", "x"}], ")"}], 
   RowBox[{"(", 
    RowBox[{"\[Pi]", "-", "y"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.756333932644566*^9, 3.756333967407055*^9}}],

Cell[BoxData[
 RowBox[{"0.1`", " ", 
  RowBox[{"(", 
   RowBox[{"\[Pi]", "-", "x"}], ")"}], " ", "x", " ", 
  RowBox[{"(", 
   RowBox[{"\[Pi]", "-", "y"}], ")"}], " ", "y"}]], "Output",
 CellChangeTimes->{3.756333970266221*^9}]
}, Open  ]],

Cell[TextData[{
 "The expression in the cell below is not complete, because I have pulled out \
a factor of .4/",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Pi]", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " to save for later."
}], "Text",
 CellChangeTimes->{{3.75633603406958*^9, 3.7563360843788233`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Bmnl", "=", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", "0", "\[Pi]"], 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "\[Pi]"], " ", 
    RowBox[{"x", " ", "y", 
     RowBox[{"(", 
      RowBox[{"\[Pi]", "-", "x"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"\[Pi]", "-", "y"}], ")"}], 
     RowBox[{"Sin", "[", 
      RowBox[{"m", " ", "x"}], "]"}], 
     RowBox[{"Sin", "[", 
      RowBox[{"n", " ", "y"}], "]"}], 
     RowBox[{"\[DifferentialD]", "x"}], 
     RowBox[{"\[DifferentialD]", "y"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.756333521953884*^9, 3.7563335596203527`*^9}, {
  3.756335340267308*^9, 3.756335372658149*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "2"}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"m", " ", "\[Pi]"}], "]"}]}], "+", 
     RowBox[{"m", " ", "\[Pi]", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"m", " ", "\[Pi]"}], "]"}]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "2"}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"n", " ", "\[Pi]"}], "]"}]}], "+", 
     RowBox[{"n", " ", "\[Pi]", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"n", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
  RowBox[{
   SuperscriptBox["m", "3"], " ", 
   SuperscriptBox["n", "3"]}]]], "Output",
 CellChangeTimes->{{3.756333525027775*^9, 3.756333560803423*^9}, {
  3.756335347934619*^9, 3.7563353756105824`*^9}}]
}, Open  ]],

Cell["\<\
Now as for the cell above: I want to save the denominator, and to evaluate \
the numerator:\
\>", "Text",
 CellChangeTimes->{{3.75633609921833*^9, 3.756336126065531*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"m", " ", "\[Pi]"}], "]"}]}], "+", 
      RowBox[{"m", " ", "\[Pi]", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"m", " ", "\[Pi]"}], "]"}]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"n", " ", "\[Pi]"}], "]"}]}], "+", 
      RowBox[{"n", " ", "\[Pi]", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"n", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", "1", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "1", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.75633557220007*^9, 3.756335628273817*^9}, {
  3.756335691961403*^9, 3.756335693880129*^9}, {3.756335760806301*^9, 
  3.756335803436187*^9}}],

Cell[BoxData["16"], "Output",
 CellChangeTimes->{
  3.756335696922409*^9, {3.7563357691796722`*^9, 3.75633580465135*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"6.4", "/", ".4"}]], "Input",
 CellChangeTimes->{{3.7563359178924294`*^9, 3.75633592144018*^9}}],

Cell[BoxData["16.`"], "Output",
 CellChangeTimes->{3.756335923276754*^9}]
}, Open  ]],

Cell[TextData[{
 "Combining the operations above means that I have a total leading factor now \
of ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    FractionBox["6.4", 
     SuperscriptBox["\[Pi]", "2"]],
    FontSize->21], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", and all that is left of Bmnl is ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    FractionBox["1", 
     RowBox[{
      SuperscriptBox["m", "3"], 
      SuperscriptBox["n", "3"]}]],
    FontSize->21], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.756336315732542*^9, 3.756336362721627*^9}, {
  3.756336671887569*^9, 3.756336707230734*^9}}],

Cell[BoxData[
 RowBox[{"outeq", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"partialu", "[", 
      RowBox[{"j_", ",", "k_", ",", "x_", ",", "y_", ",", "t_"}], "]"}], ":=", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"n", "=", "1"}], "k"], 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"m", "=", "1"}], "j"], 
       RowBox[{"Bmn", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"m", " ", "x"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"n", " ", "y"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          SqrtBox[
           RowBox[{
            SuperscriptBox["m", "2"], "+", 
            SuperscriptBox["n", "2"]}]], " ", "t"}], "]"}]}]}]}]}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"m", ",", 
       RowBox[{"n", "\[Element]", "OddQ"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.756333678930258*^9, 3.7563337013122063`*^9}, 
   3.7563337833366337`*^9, {3.756334773261692*^9, 3.7563347740926857`*^9}, {
   3.7563349647202873`*^9, 3.7563350169018393`*^9}, {3.756335258607689*^9, 
   3.756335262638073*^9}, {3.756336436337406*^9, 3.75633644060026*^9}}],

Cell[BoxData[
 RowBox[{"outeq1", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"partialu", "[", 
      RowBox[{"j_", ",", "k_", ",", "x_", ",", "y_", ",", "t_"}], "]"}], ":=", 
     RowBox[{
      FractionBox["6.4", 
       SuperscriptBox["\[Pi]", "2"]], 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"n", "=", "1"}], "k"], 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"m", "=", "1"}], "j"], 
        RowBox[{
         FractionBox["1", 
          RowBox[{
           SuperscriptBox["m", "3"], 
           SuperscriptBox["n", "3"]}]], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"m", " ", "x"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"n", " ", "y"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           SqrtBox[
            RowBox[{
             SuperscriptBox["m", "2"], "+", 
             SuperscriptBox["n", "2"]}]], " ", "t"}], "]"}]}]}]}]}]}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"m", ",", 
       RowBox[{"n", "\[Element]", "OddQ"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.756336449314543*^9, 3.756336497735198*^9}, {
  3.756336530038266*^9, 3.7563366154581547`*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell["The above green cell matches the answer of the text.", "Text",
 CellChangeTimes->{{3.756336746437372*^9, 3.7563367569972343`*^9}}],

Cell["14 - 19 Rectangular Membrane", "Text",
 CellChangeTimes->{{3.7562227754684753`*^9, 3.756222786267198*^9}},
 Background->RGBColor[
  0.9600061036087587, 0.9600061036087587, 0.9600061036087587]],

Cell["\<\
17. Find eigenvalues of the rectangular membrane of sides a = 2 and b = 1 to \
which there correspond two or more different (independent) eigenfunctions.\
\>", "Text",
 CellChangeTimes->{{3.756222792108182*^9, 3.7562228399452477`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.772137121688727*^9, 3.772137122368552*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[Lambda]", "mn"], "=", 
  RowBox[{"c", " ", "\[Pi]", " ", 
   SqrtBox[
    RowBox[{
     FractionBox[
      SuperscriptBox["m", "2"], "4"], "+", 
     FractionBox[
      SuperscriptBox["n", "2"], "1"]}]]}]}]], "Input",
 CellChangeTimes->{{3.7563875922727747`*^9, 3.756387605894081*^9}, {
  3.756387645583643*^9, 3.756387716595787*^9}}],

Cell[BoxData[
 RowBox[{"c", " ", 
  SqrtBox[
   RowBox[{
    FractionBox[
     SuperscriptBox["m", "2"], "4"], "+", 
    SuperscriptBox["n", "2"]}]], " ", "\[Pi]"}]], "Output",
 CellChangeTimes->{3.756387722099538*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eig", "[", 
   RowBox[{"m_", ",", "n_"}], "]"}], "=", 
  RowBox[{
   FractionBox[
    SuperscriptBox["m", "2"], "4"], "+", 
   SuperscriptBox["n", "2"]}]}]], "Input",
 CellChangeTimes->{{3.756393982636598*^9, 3.756394004635159*^9}, {
  3.756394263914735*^9, 3.756394268135857*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   SuperscriptBox["m", "2"], "4"], "+", 
  SuperscriptBox["n", "2"]}]], "Output",
 CellChangeTimes->{3.756394005948599*^9, 3.756394269745369*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     SuperscriptBox["m", "2"], "4"], "==", 
    SuperscriptBox["n", "2"]}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", "n"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.756394633046768*^9, 3.756394651827318*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "svars"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Equations may not give solutions for all \\\"solve\\\" \
variables. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Solve/svars\\\", \
ButtonNote -> \\\"Solve::svars\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.756394653162161*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"n", "\[Rule]", 
     RowBox[{"-", 
      FractionBox["m", "2"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", "\[Rule]", 
     FractionBox["m", "2"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.756394653168515*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"eig", "[", 
    RowBox[{"m", ",", "n"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "16"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "14"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.756394174519384*^9, 3.756394223249275*^9}, {
  3.756394342805526*^9, 3.7563943618608103`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"260", ",", "200"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"320", ",", "260"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7563942246047783`*^9, 3.7563942733112707`*^9, 
  3.7563943636436462`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eig", "[", 
  RowBox[{"10", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.756394865913512*^9, 3.756394871771925*^9}}],

Cell[BoxData["50"], "Output",
 CellChangeTimes->{3.756394873318465*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"eig", "[", 
    RowBox[{"m", ",", "n"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4", ",", "6", ",", "8"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.756395040624177*^9, 3.756395070149666*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "5", ",", "10", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "8", ",", "13", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "13", ",", "18", ",", "25"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", "20", ",", "25", ",", "32"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.756395072257963*^9}]
}, Open  ]],

Cell[TextData[{
 "So for example ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Lambda]", 
     RowBox[{"8", ",", "3"}]], "   "}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "=    ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Lambda]", 
    RowBox[{"6", ",", "4"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "  = ",
 Cell[BoxData[
  RowBox[{"c", " ", 
   SqrtBox["25"], " ", "\[Pi]"}]],
  CellChangeTimes->{3.756387722099538*^9}],
 ". These are much smaller m,n than the text uses in its answer, but if I \
understand correctly, they are okay."
}], "Text",
 CellChangeTimes->{{3.7563958301980257`*^9, 3.756395991367651*^9}, {
  3.7563960589014053`*^9, 3.756396061157345*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[TextData[{
 "19. Deflection. Find the deflection of the membrane of sides a and b with \
",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["c", "2"], "=", "1"}], TraditionalForm]]],
 " for the initial deflection\n",
 Cell[BoxData[
  RowBox[{
   RowBox[{"f", 
    RowBox[{"(", 
     RowBox[{"x", ",", "y"}], ")"}]}], "=", 
   RowBox[{
    RowBox[{"Sin", "[", 
     FractionBox[
      RowBox[{"6", " ", "\[Pi]", " ", "x"}], "a"], "]"}], 
    RowBox[{"Sin", "[", 
     FractionBox[
      RowBox[{"2", " ", "\[Pi]", " ", "y"}], "b"], "]"}], " ", 
    StyleBox["and",
     FontFamily->"Charter"], 
    StyleBox[" ",
     FontFamily->"Charter"], 
    StyleBox["initial",
     FontFamily->"Charter"], 
    StyleBox[" ",
     FontFamily->"Charter"], 
    StyleBox["velocity",
     FontFamily->"Charter"], 
    StyleBox[" ",
     FontFamily->"Charter"], 
    StyleBox["0.",
     FontFamily->"Charter"]}]}]], "Text",
  CellChangeTimes->{{3.756222922719983*^9, 3.756222980840273*^9}},
  Background->RGBColor[1, 0.9, 0.8]]
}], "Text",
 CellChangeTimes->{{3.756222877185458*^9, 3.756222914502887*^9}, {
  3.769103231135551*^9, 3.769103232369322*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7721371336496077`*^9, 3.77213713421601*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"c", "=", "1"}], ";", " ", 
  RowBox[{
   SubscriptBox["\[Lambda]", "mn"], "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"c", " ", "\[Pi]", " ", 
     SqrtBox[
      RowBox[{
       FractionBox[
        SuperscriptBox["m", "2"], 
        SuperscriptBox["a", "2"]], "+", 
       FractionBox[
        SuperscriptBox["n", "2"], 
        SuperscriptBox["b", "2"]]}]]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.756402876993863*^9, 3.756402884531711*^9}}],

Cell[BoxData[
 RowBox[{
  SqrtBox[
   RowBox[{
    FractionBox[
     SuperscriptBox["m", "2"], 
     SuperscriptBox["a", "2"]], "+", 
    FractionBox[
     SuperscriptBox["n", "2"], 
     SuperscriptBox["b", "2"]]}]], " ", "\[Pi]"}]], "Output",
 CellChangeTimes->{3.7564028950163527`*^9, 3.7565800977132196`*^9, 
  3.756580131247822*^9, 3.756580192173337*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{
   RowBox[{"Sin", "[", 
    FractionBox[
     RowBox[{"6", " ", "\[Pi]", " ", "x"}], "a"], "]"}], 
   RowBox[{"Sin", "[", 
    FractionBox[
     RowBox[{"2", " ", "\[Pi]", " ", "y"}], "b"], "]"}]}]}]], "Input",
 CellChangeTimes->{3.756402910117028*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Sin", "[", 
   FractionBox[
    RowBox[{"6", " ", "\[Pi]", " ", "x"}], "a"], "]"}], " ", 
  RowBox[{"Sin", "[", 
   FractionBox[
    RowBox[{"2", " ", "\[Pi]", " ", "y"}], "b"], "]"}]}]], "Output",
 CellChangeTimes->{3.756402919219544*^9, 3.756580100463607*^9, 
  3.7565801983309727`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["B", "mn"], "=", 
  RowBox[{
   FractionBox["4", 
    RowBox[{"a", " ", "b"}]], 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "b"], 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "a"], 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"x", ",", "y"}], "]"}], 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"m", " ", "\[Pi]", " ", "x"}], "a"], "]"}], 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"n", " ", "\[Pi]", " ", "y"}], "b"], "]"}], 
      RowBox[{"\[DifferentialD]", "x"}], 
      RowBox[{"\[DifferentialD]", "y", "  "}]}]}]}]}]}]], "Input"],

Cell[BoxData[
 FractionBox[
  RowBox[{"48", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"m", " ", "\[Pi]"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"n", " ", "\[Pi]"}], "]"}]}], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "36"}], "+", 
     SuperscriptBox["m", "2"]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "4"}], "+", 
     SuperscriptBox["n", "2"]}], ")"}], " ", 
   SuperscriptBox["\[Pi]", "2"]}]]], "Output",
 CellChangeTimes->{3.756403028386897*^9, 3.756580105525853*^9, 
  3.756580203030822*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"u", "[", 
   RowBox[{"x_", ",", "y_", ",", "t_", ",", "j_", ",", "k_"}], "]"}], "=", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"m", "=", "1"}], "j"], 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"n", "=", "1"}], "k"], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["B", "mn"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["\[Lambda]", "mn"], "t"}], "]"}]}], ")"}], 
     RowBox[{"Sin", "[", 
      FractionBox[
       RowBox[{"m", " ", "\[Pi]", " ", "x"}], "a"], "]"}], 
     RowBox[{"Sin", "[", 
      FractionBox[
       RowBox[{"n", " ", "\[Pi]", " ", "y"}], "b"], "]"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.756403200096837*^9, 3.756403211318185*^9}, {
  3.756580072197679*^9, 3.7565800781251574`*^9}, {3.756580145444017*^9, 
  3.756580173864715*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.756403216872614*^9, {3.7565800793529453`*^9, 3.756580134866341*^9}, {
   3.7565801769519777`*^9, 3.7565802055031757`*^9}}]
}, Open  ]],

Cell["\<\
This problem has a defect similar to the one found in problem 11, a \
persistant zero, and I have not figured out how to avoid it.\
\>", "Text",
 CellChangeTimes->{{3.75640324608508*^9, 3.75640329732041*^9}, {
  3.756412109422838*^9, 3.756412109892027*^9}, {3.772274684065132*^9, 
  3.772274727773942*^9}}]
},
WindowSize->{1366, 843},
WindowMargins->{{4, Automatic}, {Automatic, 4}},
Magnification:>1.5 Inherited,
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 10, \
2015)",
StyleDefinitions->"Charter1.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 218, 5, 51, "Text",
 Evaluatable->False],
Cell[621, 20, 244, 6, 110, "Text"],
Cell[868, 28, 791, 23, 115, "Text"],
Cell[1662, 53, 89, 1, 51, "Text"],
Cell[1754, 56, 138, 2, 75, "Text"],
Cell[1895, 60, 144, 2, 45, "Input"],
Cell[2042, 64, 411, 9, 86, "Text"],
Cell[2456, 75, 870, 24, 82, "Text"],
Cell[3329, 101, 112, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[3466, 106, 580, 15, 79, "Input"],
Cell[4049, 123, 586, 18, 78, "Output"]
}, Open  ]],
Cell[4650, 144, 270, 6, 51, "Text"],
Cell[CellGroupData[{
Cell[4945, 154, 864, 25, 54, "Input"],
Cell[5812, 181, 408, 12, 106, "Output"]
}, Open  ]],
Cell[6235, 196, 981, 24, 123, "Text"],
Cell[7219, 222, 148, 2, 75, "Text"],
Cell[CellGroupData[{
Cell[7392, 228, 695, 19, 80, "Input"],
Cell[8090, 249, 714, 21, 78, "Output"]
}, Open  ]],
Cell[8819, 273, 430, 10, 52, "Text"],
Cell[CellGroupData[{
Cell[9274, 287, 537, 14, 45, "Input"],
Cell[9814, 303, 403, 11, 78, "Output"]
}, Open  ]],
Cell[10232, 317, 232, 4, 86, "Text"],
Cell[CellGroupData[{
Cell[10489, 325, 432, 13, 47, "Input"],
Cell[10924, 340, 331, 10, 104, "Output"]
}, Open  ]],
Cell[11270, 353, 127, 1, 51, "Text"],
Cell[11400, 356, 431, 11, 111, "Text"],
Cell[11834, 369, 145, 2, 75, "Text"],
Cell[11982, 373, 135, 1, 51, "Text"],
Cell[12120, 376, 1809, 53, 210, "Text"],
Cell[13932, 431, 1024, 28, 152, "Text"],
Cell[14959, 461, 1113, 30, 117, "Text"],
Cell[16075, 493, 142, 2, 45, "Input"],
Cell[16220, 497, 233, 5, 51, "Text"],
Cell[CellGroupData[{
Cell[16478, 506, 317, 9, 47, "Input"],
Cell[16798, 517, 399, 9, 45, "Output"]
}, Open  ]],
Cell[17212, 529, 520, 12, 122, "Text"],
Cell[CellGroupData[{
Cell[17757, 545, 438, 11, 45, "Input"],
Cell[18198, 558, 76381, 1251, 382, "Output"]
}, Open  ]],
Cell[94594, 1812, 341, 6, 86, "Text"],
Cell[CellGroupData[{
Cell[94960, 1822, 1733, 43, 152, "Input"],
Cell[96696, 1867, 2414, 56, 170, "Output"]
}, Open  ]],
Cell[99125, 1926, 459, 15, 47, "Input"],
Cell[99587, 1943, 360, 7, 51, "Text"],
Cell[CellGroupData[{
Cell[99972, 1954, 741, 19, 114, "Input"],
Cell[100716, 1975, 503, 11, 64, "Output"]
}, Open  ]],
Cell[101234, 1989, 286, 6, 51, "Text"],
Cell[101523, 1997, 1496, 38, 135, "Input"],
Cell[CellGroupData[{
Cell[103044, 2039, 679, 20, 75, "Input"],
Cell[103726, 2061, 1834, 36, 577, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105597, 2102, 320, 5, 45, "Input"],
Cell[105920, 2109, 3752, 91, 329, "Output"]
}, Open  ]],
Cell[109687, 2203, 162, 3, 51, "Text"],
Cell[CellGroupData[{
Cell[109874, 2210, 195, 4, 49, "Input"],
Cell[110072, 2216, 112, 1, 45, "Output"]
}, Open  ]],
Cell[110199, 2220, 671, 10, 86, "Text"],
Cell[110873, 2232, 185, 4, 51, "Text"],
Cell[111061, 2238, 210, 4, 51, "Text"],
Cell[111274, 2244, 114, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[111413, 2249, 170, 3, 45, "Input"],
Cell[111586, 2254, 347, 5, 45, "Output"]
}, Open  ]],
Cell[111948, 2262, 283, 9, 52, "Text"],
Cell[CellGroupData[{
Cell[112256, 2275, 857, 23, 79, "Input"],
Cell[113116, 2300, 609, 18, 111, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[113762, 2323, 684, 21, 79, "Input"],
Cell[114449, 2346, 407, 11, 78, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114893, 2362, 696, 19, 79, "Input"],
Cell[115592, 2383, 407, 10, 77, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116036, 2398, 197, 4, 45, "Input"],
Cell[116236, 2404, 711, 20, 111, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116984, 2429, 724, 24, 99, "Input"],
Cell[117711, 2455, 688, 23, 87, "Output"]
}, Open  ]],
Cell[118414, 2481, 207, 5, 51, "Text"],
Cell[CellGroupData[{
Cell[118646, 2490, 486, 14, 91, "Input"],
Cell[119135, 2506, 486, 10, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[119658, 2521, 1302, 34, 125, "Input"],
Cell[120963, 2557, 1588, 50, 248, "Output"]
}, Open  ]],
Cell[122566, 2610, 152, 3, 51, "Text"],
Cell[122721, 2615, 661, 11, 86, "Text"],
Cell[123385, 2628, 2092, 60, 229, "Input"],
Cell[125480, 2690, 233, 5, 51, "Text"],
Cell[CellGroupData[{
Cell[125738, 2699, 442, 8, 45, "Input"],
Cell[126183, 2709, 1872, 54, 224, "Output"]
}, Open  ]],
Cell[128070, 2766, 190, 4, 51, "Text"],
Cell[128263, 2772, 1093, 26, 103, "Input"],
Cell[CellGroupData[{
Cell[129381, 2802, 554, 9, 45, "Input"],
Cell[129938, 2813, 720, 15, 88, "Output"]
}, Open  ]],
Cell[130673, 2831, 328, 6, 86, "Text"],
Cell[CellGroupData[{
Cell[131026, 2841, 424, 11, 47, "Input"],
Cell[131453, 2854, 262, 7, 45, "Output"]
}, Open  ]],
Cell[131730, 2864, 669, 19, 72, "Input"],
Cell[CellGroupData[{
Cell[132424, 2887, 309, 6, 45, "Input"],
Cell[132736, 2895, 431, 11, 88, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[133204, 2911, 893, 25, 104, "Input"],
Cell[134100, 2938, 90632, 1481, 382, "Output"]
}, Open  ]],
Cell[224747, 4422, 153, 2, 75, "Text"],
Cell[224903, 4426, 142, 2, 45, "Input"],
Cell[CellGroupData[{
Cell[225070, 4432, 494, 15, 91, "Input"],
Cell[225567, 4449, 154, 5, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[225758, 4459, 320, 9, 47, "Input"],
Cell[226081, 4470, 227, 6, 45, "Output"]
}, Open  ]],
Cell[226323, 4479, 327, 9, 52, "Text"],
Cell[CellGroupData[{
Cell[226675, 4492, 667, 18, 76, "Input"],
Cell[227345, 4512, 817, 25, 77, "Output"]
}, Open  ]],
Cell[228177, 4540, 180, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[228382, 4548, 988, 28, 75, "Input"],
Cell[229373, 4578, 121, 2, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[229531, 4585, 119, 2, 45, "Input"],
Cell[229653, 4589, 73, 1, 45, "Output"]
}, Open  ]],
Cell[229741, 4593, 658, 23, 123, "Text"],
Cell[230402, 4618, 1218, 31, 146, "Input"],
Cell[231623, 4651, 1297, 37, 203, "Input"],
Cell[232923, 4690, 136, 1, 51, "Text"],
Cell[233062, 4693, 198, 3, 75, "Text"],
Cell[233263, 4698, 281, 5, 110, "Text"],
Cell[233547, 4705, 142, 2, 45, "Input"],
Cell[CellGroupData[{
Cell[233714, 4711, 376, 11, 92, "Input"],
Cell[234093, 4724, 218, 7, 92, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[234348, 4736, 316, 9, 79, "Input"],
Cell[234667, 4747, 184, 5, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[234888, 4757, 297, 9, 79, "Input"],
Cell[235188, 4768, 442, 9, 34, "Message"],
Cell[235633, 4779, 295, 10, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[235965, 4794, 471, 14, 45, "Input"],
Cell[236439, 4810, 274, 8, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[236750, 4823, 146, 3, 45, "Input"],
Cell[236899, 4828, 71, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[237007, 4834, 460, 14, 45, "Input"],
Cell[237470, 4850, 425, 12, 45, "Output"]
}, Open  ]],
Cell[237910, 4865, 753, 24, 114, "Text"],
Cell[238666, 4891, 1188, 39, 147, "Text"],
Cell[239857, 4932, 143, 2, 45, "Input"],
Cell[CellGroupData[{
Cell[240025, 4938, 487, 15, 91, "Input"],
Cell[240515, 4955, 359, 11, 91, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[240911, 4971, 351, 11, 76, "Input"],
Cell[241265, 4984, 323, 9, 76, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[241625, 4998, 647, 20, 80, "Input"],
Cell[242275, 5020, 548, 18, 87, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[242860, 5043, 872, 25, 93, "Input"],
Cell[243735, 5070, 175, 3, 45, "Output"]
}, Open  ]],
Cell[243925, 5076, 316, 6, 86, "Text"]
}
]
*)


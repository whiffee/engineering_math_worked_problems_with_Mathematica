(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    265780,       5607]
NotebookOptionsPosition[    258405,       5368]
NotebookOutlinePosition[    258793,       5385]
CellTagsIndexPosition[    258750,       5382]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
Note: In this problem set, expressions in green cells match corresponding \
expressions in the text answers.\
\>", "Text",
 Evaluatable->False,
 CellChangeTimes->{{3.76910325555046*^9, 3.769103278005802*^9}}],

Cell["\<\
4 - 8 Double Fourier Series
Represent f(x,y) by a series (15), where\
\>", "Text",
 CellChangeTimes->{{3.756222425143961*^9, 3.756222456357913*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"u", "[", 
   RowBox[{"x", ",", "y", ",", "0"}], "]"}], "=", 
  RowBox[{
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"m", "=", "1"}], "\[Infinity]"], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"n", "=", "1"}], "\[Infinity]"], 
     RowBox[{
      SubscriptBox["B", "mn"], 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"m", " ", "\[Pi]", " ", "x"}], "a"], "]"}], 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"n", " ", "\[Pi]", " ", "y"}], "b"], "]"}]}]}]}], "=", 
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "y"}], "]"}]}]}]], "Text",
 CellChangeTimes->{{3.756229520807788*^9, 3.756229708212061*^9}},
 Background->RGBColor[0.9, 1, 1]],

Cell["and", "Text",
 CellChangeTimes->{{3.7562296998602133`*^9, 3.7562297002271833`*^9}}],

Cell["5. f(x,y)=y, a=b=1", "Text",
 CellChangeTimes->{{3.7562224629338007`*^9, 3.756222487876677*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[TextData[{
 "For this type of problem, numbered line (15) is shown above. After a little \
development, the text presents numbered line (18), p.582, which is the ",
 StyleBox["generalized Euler formula",
  FontWeight->"Bold"],
 ":"
}], "Text",
 CellChangeTimes->{{3.7562365230139*^9, 3.7562365651475067`*^9}, {
  3.756237009964962*^9, 3.756237023452715*^9}, {3.769103402464093*^9, 
  3.76910340550886*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["B", "mn"], "=", 
   RowBox[{
    FractionBox["4", 
     RowBox[{"a", " ", "b"}]], 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "b"], 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "a"], 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"x", ",", "y"}], "]"}], 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"m", " ", "\[Pi]", " ", "x"}], "a"], "]"}], 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"n", " ", "\[Pi]", " ", "y"}], "b"], "]"}], 
       RowBox[{"\[DifferentialD]", "x"}], 
       RowBox[{"\[DifferentialD]", "y"}], "             ", "n"}]}]}]}]}], ",", 
  RowBox[{"m", "\[Rule]", "1"}], ",", "2", ",", "..."}]], "Text",
 CellChangeTimes->{{3.756237041803751*^9, 3.756237168489024*^9}, {
  3.756238979136257*^9, 3.756238980741457*^9}}],

Cell["in the case of this problem,", "Text",
 CellChangeTimes->{{3.756237201590787*^9, 3.7562372067986927`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Bmn", "=", 
  RowBox[{"4", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "1"], 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "1"], 
     RowBox[{"y", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"m", " ", "\[Pi]", " ", "x"}], "]"}], 
      RowBox[{"Sin", "[", 
       RowBox[{"n", " ", "\[Pi]", " ", "y"}], "]"}], 
      RowBox[{"\[DifferentialD]", "x"}], 
      RowBox[{"\[DifferentialD]", "y"}]}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.7562372124570227`*^9, 3.756237302979659*^9}, {
  3.756237340518653*^9, 3.75623734341888*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"4", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"Cos", "[", 
      RowBox[{"m", " ", "\[Pi]"}], "]"}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"n", " ", "\[Pi]", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"n", " ", "\[Pi]"}], "]"}]}], "-", 
     RowBox[{"Sin", "[", 
      RowBox[{"n", " ", "\[Pi]"}], "]"}]}], ")"}]}], 
  RowBox[{"m", " ", 
   SuperscriptBox["n", "2"], " ", 
   SuperscriptBox["\[Pi]", "3"]}]]], "Output",
 CellChangeTimes->{3.7562373093332148`*^9, 3.75623734441003*^9}]
}, Open  ]],

Cell[TextData[{
 "If m is even then Bmn is zero (because ",
 StyleBox["Cos[m \[Pi]]", "Input"],
 " would then equal 1), else if m is odd, then "
}], "Text",
 CellChangeTimes->{{3.756237649857718*^9, 3.75623766756778*^9}, {
  3.756244235597748*^9, 3.756244254515493*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Bmno", "=", 
  RowBox[{"Bmn", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"m", " ", "\[Pi]"}], "]"}]}], ")"}], "\[Rule]", 
      RowBox[{"-", "2"}]}], ",", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"n", " ", "\[Pi]"}], "]"}], "\[Rule]", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"n", "+", "1"}]]}], ",", 
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"n", " ", "\[Pi]"}], "]"}], "\[Rule]", "0"}]}], 
    "}"}]}]}]], "Input",
 CellChangeTimes->{{3.756237683154842*^9, 3.75623774642153*^9}, {
  3.7562377865180187`*^9, 3.7562378788250237`*^9}, {3.756237958272558*^9, 
  3.756237994621793*^9}, {3.756238700167157*^9, 3.7562387108544493`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"8", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], 
     RowBox[{"1", "+", "n"}]]}], 
   RowBox[{"m", " ", "n", " ", 
    SuperscriptBox["\[Pi]", "2"]}]]}]], "Output",
 CellChangeTimes->{{3.756237855970038*^9, 3.7562378800130568`*^9}, 
   3.7562379962349987`*^9, 3.7562387133251*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[TextData[{
 "The green cell above matches the text answer for ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["B", "mn"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". There is no text answer for u(x,y,0), but it would be the pattern shown \
above, in cyan, with the restriction that m be odd. The general token ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["B", 
    RowBox[{"1", "n"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " does not have a negative sign, which I guess is why (-1",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[")", 
    RowBox[{"n", "+", "1"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " was chosen as the formula for the sign of Cos[n \[Pi]]."
}], "Text",
 CellChangeTimes->{{3.756238807332301*^9, 3.756238877712812*^9}, {
  3.7562389188088713`*^9, 3.75623893827872*^9}, {3.756239129123348*^9, 
  3.756239185966731*^9}, {3.7562392204936447`*^9, 3.756239256356688*^9}, {
  3.756239529405229*^9, 3.756239530747675*^9}}],

Cell["7. f(x,y)=x y, a and b arbitrary", "Text",
 CellChangeTimes->{{3.75622249126929*^9, 3.75622251076402*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Bmn", "=", 
  RowBox[{
   FractionBox["4", 
    RowBox[{"a", " ", "b"}]], 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "b"], 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "a"], 
     RowBox[{"x", " ", "y", " ", 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"m", " ", "\[Pi]", " ", "x"}], "a"], "]"}], 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"n", " ", "\[Pi]", " ", "y"}], "b"], "]"}], 
      RowBox[{"\[DifferentialD]", "x"}], 
      RowBox[{"\[DifferentialD]", "y", " "}]}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.756243101858602*^9, 3.756243105920968*^9}, {
  3.756243169023279*^9, 3.756243171256209*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"4", " ", "a", " ", "b", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"m", " ", "\[Pi]", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"m", " ", "\[Pi]"}], "]"}]}], "-", 
     RowBox[{"Sin", "[", 
      RowBox[{"m", " ", "\[Pi]"}], "]"}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"n", " ", "\[Pi]", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"n", " ", "\[Pi]"}], "]"}]}], "-", 
     RowBox[{"Sin", "[", 
      RowBox[{"n", " ", "\[Pi]"}], "]"}]}], ")"}]}], 
  RowBox[{
   SuperscriptBox["m", "2"], " ", 
   SuperscriptBox["n", "2"], " ", 
   SuperscriptBox["\[Pi]", "4"]}]]], "Output",
 CellChangeTimes->{3.75624311698454*^9, 3.756243172369348*^9}]
}, Open  ]],

Cell[TextData[{
 "The circumstances are not the same as in the last problem. No pattern, even \
or odd, makes ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["B", "mn"], TraditionalForm]]],
 " equal zero."
}], "Text",
 CellChangeTimes->{{3.756243141647086*^9, 3.7562431809178133`*^9}, {
  3.7562432847387743`*^9, 3.756243308075096*^9}, {3.756244289962571*^9, 
  3.756244333617158*^9}, {3.756293615063648*^9, 3.7562936199519672`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Bmno", "=", 
  RowBox[{"Bmn", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"n", " ", "\[Pi]"}], "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"m", " ", "\[Pi]"}], "]"}], "\[Rule]", "0"}]}], 
    "}"}]}]}]], "Input",
 CellChangeTimes->{{3.756243313151352*^9, 3.756243322497591*^9}, {
  3.756243386127614*^9, 3.756243440477888*^9}, {3.75624352193364*^9, 
  3.756243557242383*^9}, {3.756244422783082*^9, 3.756244434406268*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"4", " ", "a", " ", "b", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"m", " ", "\[Pi]"}], "]"}], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"n", " ", "\[Pi]"}], "]"}]}], 
  RowBox[{"m", " ", "n", " ", 
   SuperscriptBox["\[Pi]", "2"]}]]], "Output",
 CellChangeTimes->{
  3.7562434419810333`*^9, {3.75624352930503*^9, 3.7562435585777082`*^9}, 
   3.756244435842895*^9}]
}, Open  ]],

Cell["\<\
I hope the above cell would do if required, because I had to cheat by looking \
at the answer to see the clever device for getting the sign:\
\>", "Text",
 CellChangeTimes->{{3.7562445646895723`*^9, 3.756244611448295*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Bmnf", "=", " ", 
  RowBox[{"Bmno", "/.", 
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"m", " ", "\[Pi]"}], "]"}], 
     RowBox[{"Cos", "[", 
      RowBox[{"n", " ", "\[Pi]"}], "]"}]}], "\[Rule]", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], 
     RowBox[{"m", "+", "n"}]]}]}]}]], "Input",
 CellChangeTimes->{{3.7562446342674828`*^9, 3.7562446803821363`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"4", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], 
    RowBox[{"m", "+", "n"}]], " ", "a", " ", "b"}], 
  RowBox[{"m", " ", "n", " ", 
   SuperscriptBox["\[Pi]", "2"]}]]], "Output",
 CellChangeTimes->{3.7562446825267363`*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["The above green cell matches the text answer.", "Text",
 CellChangeTimes->{{3.756244708164967*^9, 3.756244716940851*^9}}],

Cell[TextData[{
 "11 - 13 Square Membrane\nFind the deflection u(x,y,t) of the square \
membrane of side \[Pi] and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["c", "2"], "=", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " for initial velocity 0 and initial deflection"
}], "Text",
 CellChangeTimes->{{3.756222578563109*^9, 3.756222637367867*^9}}],

Cell["11. 0.1 Sin[2 x] Sin[4 y]", "Text",
 CellChangeTimes->{{3.756222643329289*^9, 3.7562226637110157`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell["To do this problem I need numbered line (9) on p. 580:", "Text",
 CellChangeTimes->{{3.75629399288111*^9, 3.756294015615788*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Lambda]", "=", 
   RowBox[{
    SubscriptBox["\[Lambda]", "mn"], "=", 
    RowBox[{"c", " ", "\[Pi]", " ", 
     SqrtBox[
      RowBox[{
       FractionBox[
        SuperscriptBox["m", "2"], 
        SuperscriptBox["a", "2"]], "+", 
       FractionBox[
        SuperscriptBox["n", "2"], 
        SuperscriptBox["b", "2"]]}]], "           ", "m"}]}]}], ",", 
  RowBox[{"n", "\[Rule]", "1"}], ",", "2", ",", "3", ",", 
  "..."}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"and", " ", "numbered", " ", "line", " ", 
     RowBox[{"(", "14", ")"}], " ", "on", " ", 
     RowBox[{"p", ".", " ", "582"}]}],
    FontFamily->"Charter"], 
   StyleBox[":",
    FontFamily->"Charter"], "\[IndentingNewLine]", 
   RowBox[{"u", "[", 
    RowBox[{"x", ",", "y", ",", "t"}], "]"}]}], "=", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"m", "=", "1"}], "\[Infinity]"], 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"n", "=", "1"}], "\[Infinity]"], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Bmn", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          SubscriptBox["\[Lambda]", "mn"], "t"}], "]"}]}], "+", 
       RowBox[{
        SubscriptBox["Bast", "mn"], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          SubscriptBox["\[Lambda]", "mn"], " ", "t"}], "]"}]}]}], ")"}], 
     RowBox[{"Sin", "[", 
      FractionBox[
       RowBox[{"m", " ", "\[Pi]", " ", "x"}], "a"], "]"}], 
     RowBox[{"Sin", "[", 
      FractionBox[
       RowBox[{"n", " ", "\[Pi]", " ", "y"}], "b"], "]"}]}]}]}]}]}], "Text",
 CellChangeTimes->{{3.7562940209162207`*^9, 3.756294161107868*^9}, {
   3.7562942277232447`*^9, 3.756294489393701*^9}, 3.7562945225083513`*^9, {
   3.756304765892357*^9, 3.756304767450169*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"and", " ", "numbered", " ", "line", " ", 
     RowBox[{"(", "18", ")"}], " ", "on", " ", 
     RowBox[{"p", ".", " ", "582"}]}], " ", ":", "\[IndentingNewLine]", 
    SubscriptBox["B", "mn"]}], "=", 
   RowBox[{
    FractionBox["4", 
     RowBox[{"a", " ", "b"}]], 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "b"], 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "a"], 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"x", ",", "y"}], "]"}], 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"m", " ", "\[Pi]", " ", "x"}], "a"], "]"}], 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"n", " ", "\[Pi]", " ", "y"}], "b"], "]"}], 
       RowBox[{"\[DifferentialD]", "x"}], 
       RowBox[{"\[DifferentialD]", "y"}], "       ", "m"}]}]}]}]}], ",", 
  RowBox[{"n", "\[Rule]", "1"}], ",", "2", ",", "3", ",", "...", 
  "\n"}]], "Text",
 CellChangeTimes->{{3.75630370696068*^9, 3.756303884706339*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"as", " ", "well", " ", "as", " ", "numbered", " ", "line", " ", 
     RowBox[{"(", "19", ")"}], " ", "on", " ", 
     RowBox[{"p", ".", " ", "583"}]}], ":", "\[IndentingNewLine]", 
    SubscriptBox["Bast", "mn"]}], " ", "=", " ", 
   RowBox[{
    FractionBox["4", 
     RowBox[{"a", " ", "b", " ", 
      SubscriptBox["\[Lambda]", "mn"]}]], " ", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "b"], 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "a"], 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"x", ",", "y"}], "]"}], 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"m", " ", "\[Pi]", " ", "x"}], "a"], "]"}], 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"n", " ", "\[Pi]", " ", "y"}], "a"], "]"}], 
       RowBox[{"\[DifferentialD]", "x"}], 
       RowBox[{"\[DifferentialD]", "y"}], "            ", "m"}]}]}]}]}], ",", 
  
  RowBox[{"n", "\[Rule]", "1"}], ",", "2", ",", 
  RowBox[{"3", "..."}]}]], "Text",
 CellChangeTimes->{{3.756295234757914*^9, 3.756295467197407*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell["The initial displacement is defined.", "Text",
 CellChangeTimes->{{3.756576550092814*^9, 3.756576559194689*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{"0.1", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", "x"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"4", " ", "y"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.75656888042076*^9, 3.7565689002786827`*^9}}],

Cell[BoxData[
 RowBox[{"0.1`", " ", 
  RowBox[{"Sin", "[", 
   RowBox[{"2", " ", "x"}], "]"}], " ", 
  RowBox[{"Sin", "[", 
   RowBox[{"4", " ", "y"}], "]"}]}]], "Output",
 CellChangeTimes->{3.756568902167075*^9, 3.75657642992587*^9, 
  3.756576754932893*^9, 3.7565773362975616`*^9, 3.756578034210421*^9, 
  3.756579163096464*^9, 3.756579552696087*^9, 3.756580327671143*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.756569340363694*^9, 3.7565693455549717`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
ZQQnjVPQHmWHntX+xvuVWfpNW+/+XVf0XBS5Ym899yvz9VvCySUXOeh58f2I
e1zzr8yv17s740aFoue4j8MUOZJfmdiD76SkV0Wj5+OkrsXn8//rb+0k/oTA
b6PsDx5Dz7ok/tVGVtNv519AzzUk/qJ3luO6MvzRsyqJX7Cj+M5JmVD0fJ3E
X7fJjK9ULgo9y5H4NadXuW89QufnWBK/X8Tsq73/xaNn9XTLRRzJH8wyuwXM
v/U33pPaMPP674zFyNm941xpfr2Ef/VINuc7U9+7XrPwA82vExZEn5Bkf2ds
NNujLBZ647pu+t94vzHb2H3ed07R/NrX0WJnPfcbUzw0/db89edwvSGQUFPC
Nf/GeB68X98w/jiuN+pIXct1UP1NjcTvNWuNs7AUza+LSPz78pc1hQvH4rpu
MYnfxKPTu4tF8+s4Ev/QAKbtZAfNr6eS+I9UCRhNKKP5tTeJX/Ozo/7mUR64
3uAn8a8aGtt6Tcoe1xuJ+qxrXPM+pmdsd4/8P/U3ca9YaY5kH9OQzB3Tm0nz
bj/uiGDz+p9MJYv/2ZKpNE8RfGklyOb8ZAK2JF1bo0/zbnvhx7aS7J+Mynyd
cUee0by782+8P5gQgXctL47TvPvgvpit9dwfzJjuhMlb1GnevZTUtZwG1d8S
SPwiRm2rPAVp38t0Ev+TUbE7S7ppnuJL4vfyXvilxJzm3QIk/h2Nl153udG8
+ziJPyn51Igzu2je3U7iz+qwf1tfRfNuXRI/J3dlrEc0zbsFJ49Sref2M2k7
j0wSVqZ5N/TX+e0fmSlznebdnSZPJTmS/YyM5Vzl7//k3QdJX6LKkGcsK32a
dz8uvDKEzfnFvG8pypBXoHm3+tuRVpLsX4zi53rRtSyaD/L+xtvHmFbveJEy
keaDvqTeJT2o/iZA4vffWvkzIZzm3cdJ/OwOlX3G/+TdHST+2bM4clljaN6t
R+J3G/FN6/xSmnfXkvhlilXH6X2j+aAaiT+7Qfvk6IM07ysh9a7Xe+OH6tsr
of85hNebVA/1FjqJfBapd/WZN89ZqhGPn1NMPHAq70VEuZ3H8UWE158+fusM
l9ZXhYiH1q2rzYPm0T4cqBNucil9qjCX1gmhD81QI+hq7UUW9i1D/XCCVo7+
nz5J6LcEXnH56LsRy9bg+QPAJ31fyXdniwf2MwPXNdm2d69EAPYzAy/c2tOs
phCC/czAzy8y2O9WFIH9zMDNZvo4T9sajf3MwL+WJ5ca68diPzNwfRvbyD/1
Q+hnBn528Y6KA0rx2M8MvEpE+erkn/HYzwycN2+KZsHKBOxnRj5M4c337/HY
zwy8sWvIN2lWPAM+oU6oa/EoP7vuPPoEfps7zPOzGBt9Ah8ukKB6ITgIfQLf
36pWve1QFPoEfiypgBsXE4c+gc9YIlH8xjQZfQI/apRdMPtKOvoE3jPEeVFC
WCb6BO7dkDjt9Yhs9An8k+WYMxUTctAn8IBUIeWveTnoE/gvS61A0c4c9Amc
b9nK3Xy/x4NP4BV5Cldbxudg/zDw0/WjjccLZaNnqAeyaqKvD/vpgZ6Bb9/w
OinyiAZ6Bn5GlLEekR2KnoEvc7v8pcw0Fj0Dz7na4sbxT0LPwIf1WSTrTKZ9
+MCtMsc/6+dkoWfgBvNuV95IyUHPwI/VxlWn7eGiZ+BRGU4+AgF56Bn4Fp+6
u7rb8tEzcAc/s/hmv3z0DHyBhl8Xa2s+egZ+625qaalfHnoG/v3bu/u6u7jo
Gep+qqPNS+Ss3NAz8Ns1Sdblt9TQM/CKgtnGTxdeQs/AZw6ZlSPhG42egVdu
3HHYbV4CesbvXS3X26mSip6B37kvoLe3OQM9A08ut/OUfZCFnoHXN6yw/bU1
Bz0D33j5+v0qi1z0DLzadrLg82lc9Ay8u1Q4NnAHFz0D/zxzvFfNVC56Bs5N
b1h21ywXPQMPSXh6qE8zBz1DfU/XbvjVYzVO6Bn4r+l7Eufk0nNggBupp7tz
EnzRM/C7zm66w32D0TPwlNUVm3W/RqBn4EvPSn/v3xuDnoHXXLdYs2tXHHoG
PneeWMK8FwnoGfj1J6qpG14loWfgFd0LFOftS0HPwFWHFlyeqZyKnoG/qXyf
esYrFT0Dn3RQ4ddNJhU9A786ynrssd0p6Bl4/Mu3YzQak9Az1PH4prz5tkOd
7isBPiH5q1yj5Gz0DDzXysD48Swr9Ay8ON7OuOWOHXoGvuOtulZbjyN6Br5O
pFB+bdEZ9Ax8TbBig2bUOfQMXF/RfIr7+AvoGfj0p0X5i4Xc0TPwGrfrpyYc
9UDPwA9579C8tc0TPQMfsjT9W16YJ3oGXvTfwdIjWz3RM/ClZWs1T1h7oGfg
d9fzHHcLuKNnqNdJfDzx7NpnGx5wqNetI/vfwT+Mf55aMlWBT6EIOIw3Ifvo
4XeB8avPuPOn3XDB/bAwfs6gffQw3iRTd5nNbC/kMN590P56GM9S5UTHfuIg
h/Hag/bdw/hCYy+ZrM+ByGG89aD9+DC+YntKT79jCHIY/2LQPn0Y7930hTXd
MRw5jHcctH8fxr/Z5DHj8KsI5DD+2KB9/TBe0MDJWrYqEjmMjxy03x/G5yTm
JX/WjkIO48cPOgcAxn/ZF3ZR2TUKOYyPGnQ+AIxfFGLeNef35wOH8bGDzg2A
8RrH5i4OfBiJHMZXDjpPAO+HZQVK6S8ikMP4QHLOANy3UOdcsYJ3LEPAE+9b
4BIq/FN59hp4fwJvey7KuXwtFO834OnTngrNso7F+wr420S+6PLQJLx/gPs+
uXBrtzg9ZwC47bLLjsXBWXg/AA8uGDZEOjsHf3fgHZHM/FA9Lv6+wJUeX+7a
GpqHvyPwm1tcZ7TuzsffC3jF6jUJjpfy8XcBLt3p0F6qnY/+gT9qmHRs/KU8
9Aw8Kshh2qb9XPQM9cxC7pwyqUke6Bn4nnmBUlVOm9Az8GTD8EOnK+k5A8Cd
2A2pd0voOQPAMw7eDlx2lZ4zADwq9NjBo9Lp6Bn4PctOy4k/6DkDwDdNSN6Q
NJR6Bi4kcVKsPoaeMwBcf9MW6UXV9JwB4KZnT5w+6kHPGQB+N/HJlw936TkD
wL/tKmzd507PGQB+oXRtLn8VPWcAeNVGqfEJkbnoGeqWjywW+fYWu6Bn4HI6
o40y765Dz8DvpOzZZuvlj56BW2oqvjhSE4aegct6jf544WY0egau9/lBFV9B
HHoGPqP1yInPiknoGfj2CaGfpeRS0TNwa7PUmKk+6egZ+L2Teh+uxmagZ+Bh
rsuYqQsy0TPwpTN7TTt3ZaJn4AfmG8VpzM9Ez8CPcxveScVkoGfgr69JrLZy
T0fPUJ8smmIrcmydJXoGzvP2Ce2xlkPPwPl6WR/f9ziiZ+Auh9gCk6tc0TNw
jxkLsgoyvdAz8Lp3nMbCH37oGbhaSVVAdXEAegaeV5SSmDwlCD3j59v67xb6
HoyegYuGiqydpR2CnoHLryqzrpIJRc/AN6yWCiq1CUXPwDnpDy95LQhFz8Bz
zknMj9gRgp6Bl+y1Fd31JRg9Qx3y0/jbq050GuK6DnjlGnXT3oXSuK4DXmLa
XzYmww7XdcDPdxeGJB9zxnUd8CF3JoxYedUV13XANzI5L1nnPXBdB9zgvYdw
RokPruuAC2obSSim+eG6Dvhp2UPrmsT9cV0HPL+CW1MrHYDrOuAVBqc3RpYF
4LoOONd8us8H/ou4rgM+bcFJ44QHAbiuA96Wc1SqbW4AruuAv9w489aoaf64
roN64xd5zxJjlzPoGfj4pFXj/O3XomfgosJTs2ZrcdAz8IhuvsM/BELRM/Ds
aaXGnwKi0DPwdf6C7/LUr6Bn4LESv3SM/RPQM/CD5bmqHXuS0TNwFePa5BL/
VPSM11WUkaK9OB09Az8XIn5m2qQM9AxckH+L4EzlDPQMXCNb5+beiRnoGXji
/Ben9GTT0TPwU33s9Yd8UtEz1P3mH/PdsOUJPbcB+JXyvkINDj23AfjpnCXB
nYH03AbgEQLnDNwd6bkNwEWq1DQXNdFzG4C7F2zq1qui5zYA3/2hdRerlp7b
AFxppVd14hF6bgPw2B+v96+5TM9tAO74K4L9dDs9twG4rXjTvNt+9NwG4FbS
6axbWvTcBuAJz2Q+Tgyj5zYA/7U/pHpTUi5z6m8/3A2s160T53tRusWD9J/d
R/5uf6van7rlQL9UFXJFJf/qP3VL67/9MbRuWaRyYMufuuWiv/0cz5AHq+8/
+aduWU3q1cBtSX/jwHtoWp9ceHXDgz/1yYH3prQ+OTP1UP6f+uTAe753yEX9
7DX+1CcH3kvR+uTqI3V/65MD71FofTJiwsvvf+qTA3X/D8hZ3hULbNfGkX67
e1hnS+k41q91PJL0h1Uhd8hQGZ94+wrpZ6pFrqKgOMMqKon03zxDrngnbuy2
njQmjtTnsa5I+g8F/r5PpfXD9m2CP6TCc8j7y3fIWXFzFGe05JD3be+ROzV7
ek4rziHvh2j98JDZYb7GRTl4vgHWXZ3ejtu/NJv0t1VivUvycauxoX4C6ceq
RR6bMyOmTj6N9A89RW5UljXsUGYmc5y8XwBeQ/r66v6+p3yHfM7FhgWbT+Yz
S/++V3uP/L2/7dEVRvkM5+97oHbkfqmTbB7X5pH3LrQud3qC72XJO1zSH1aD
daTttg8z2nSSSD/TU+TtDkOD1y1LJ+933yIfR/rfBt5HvkcenieSO281l7w/
a0f+6+5II+eHueR9Tydy08uSBZO7c0i/1BOstwikxCnIvI0h7zVpPceE9H0N
vIdrRy5pKNB5e0IqeW/UibzJY9l9F7EU8n6O1iUexAz0Lw28T+pE7rg9NL9t
gSfpM6Z1BhapM8QNqg9IkPrAjEF1ADdSB3gwKN/fRfL984PyeiuS168dlL83
kPx9/6C8+yjJu68Pyq8jSH499X/k0cf/R75c9z/y4qX/I//lkfdEkP+eIf1I
vv8j/z1B5k/I1xS8DMbx9EJ43WT+BD5jeeYPzbIYXg6ZP4Gb7JUTd+BL4lmR
+RP4njSJiJGp6TwZMn8CLzux4ebiPVk8OTJP4viXHzwsHfJ43mSeBL7k5fxi
qY35vHYyTwIvDMiWWe2fz1Mj8yRwI3bmN6kD+bwEMk8C17gzvaonOY8nQOZJ
4G4F9TvYp7i8G2SehHxKfTezs2NcNC+MzJPAFxSxJKolEnjaZJ4EPlpIVb+K
m8oTI/MkcAlxywKT33kHP5kPgT933uqlsyePp0vmQ+DjBPZP8snP4xWR+RD4
ypFabkK/8/fpZD4E3q6f0KTP/zuvJPMhcLltHUqF3bk8FzIfQv5S80gnf6h/
JI8h8yHw1Gh30+yrsbyfZD7EfHAK68j6Ywm8GjLvAddtHBapp5zJW0zmPeBx
3+brKP/mvmTeA35a7p3Zf28zeB1k3sN8cPKaJ8+WZvDmknkP1v+NnodGzE3y
4r0i8x5w6663dw/1+vHiyPyG+csnmXvitqE8ATK/AZ9qLdHs8ztP0SPzG/B0
t8T1G3eF8B6Q+Q3Ww1tOvazUuu5D3se3IxczetG/8Pf6vJbMY8Bflbm2zPy9
nlcj8xWs97xbFM/JhaSR98dn8Lm8817TnoP2SuR9MH2OvyTvi2GdA9wpzzRo
/vw48r75DK5/dHvk2eE9+3B9Dlxu34VCV69NLCFyn+M6M9hJs6Aul3n/t2+y
ET9/9BuzG3/et2r/3Y+RjM/TLJbTNNsWF9IP+gI5W0tP6s2WTNK/2IQ80n9O
37aKLCbs7/6NOHyuqei5220SPkP2URQiv1PeJxNRHUj6Sl8gf67tLBPUkc1c
/9tH2IQ8QmS72dMbuczUv31vr+h7NIUPLlGSecwzcs4SPL+kb3t2cgWOMc//
7nO4htyuMsjXZzqH7CsoRS7orvPOfvdl0s/aQJ+/Te0ZrbmZpP+yib6H8rrz
dattNukXfIXc4+zmxyrlOaS/rYV+r3jlqtyCXGb53/0qofgcNFB93rTEU5vs
GylAbnPAdPaPWheyz+E2codCR+dTUzikL78CeXl8Y29g6yXSd9uAvPTD5pfr
yuNInyh9v3Pt+JAoq9WJpK/xFXKxqqNKfXOTSR9eC/It64UE3p5LIX1jb+n7
HR/xVpHNqUw+OfcJntfXc29PTXLewhP/u2+Ei/ywspbsJNMtZJ9GCfKJi3oP
TXM2IvsKypFPygvxtZhjS/rgq+l4hUbR5TEnST/xc+S1kfr84gZnSf8rfc9y
Yvv27p4J50m/Jn3PMv7O9te6m91If2ELfb/TY/2hTMCD9MO9Rf6t2j1OY6En
6d+i71nCD6sGP/m9brEh/5/C89dx/jhPsbE7eQP7fHKQP5Rf8HSFzgnewL6U
W8gtxOYv79F25Q3soyhDvrEtil3g7cMb6Pun7y+KNSysP40J4A30qT9Gvn1f
u3jrhyDeQL8vfb8gVHQgOHzuZd5Afyp9j7AmIOaJnWwkb6Cfkr4vkFi/XJb7
JZI30P/3Fvnjb/ej7Q9F8Qb61Wj93y5uyUmXE1G8gf4qWudfeUd/pdHi3+NJ
vwo8f5NJX/RbMi8Bj1XJKJzrmMNTJfMSPNfKzpk0+TS68NRIXxPw16S/9yGZ
r4CfO33/1Pfj2bwNZL4C7h4/0ef70lzeeTJfwfOoz7hfUD/ahreUzFfAO/1e
ffq034vHIX1TwNtIX2semceAXxzGe6uclcy7SuYx4PLPlPfe10njTSbzGPBm
neiXxxUyeHfIPAbPqRXsXRptL3pY1WQeA340K3LEyZmWvINkHgM+9zH/drkm
R54p6eMCvo/0f0aQ+Q3reH4GMr8KA3iLyPwGfJfgB67hpN/3D5nfgF/P1UjV
6w3mvSfzG/D84UUnZv5+no4m8xs8H62rvHTYPEPGhsxvwJXV69t6gu0YeTK/
AR+ho/g10NSZiSPzG/CrjPGvJ+muzBjShwZ8HOmrPE/mPeRPGnVTk/xIf/k/
dTnh3u0i0/xJP/Qr5MsiD5y6PTeA9O+2II+QaVA/8CCA9Ju+Rc6/SfPEWf6L
jBeZ9+C5nyBf4zDJx4Tsl+PS/r0tqyZ6CbgxQ8i8B9xITXWH2ZGLjB2Z97Ce
1vrS8lpXOPOVzHvA5z7iSHW3RjPZpO8OuAfpb7Qk8yFw8/eh7UGcRNJPT+tm
q/PX23fNSSH937RutlqTa2M7L430K7cgn/VYzCvVM530175FbuZt1CEzJ4P0
g9K6mZVza+1d+QyyPzAH1yFM+sQXEbreZD/bLeTjz67//HhtGKNG5j3gduPX
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
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
          "]], 
         Polygon3DBox[CompressedData["
1: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
          "]], 
         Polygon3DBox[CompressedData["
1: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
I/Ls2D/YBuO/Ay3T4QI=
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0rsvpFEYwOGPcRsMK6Jd0RAFpSgoN4pViSjoiGK3WIlsQakQOh1/AS0R
+k3o3MfMuM2ystkIu2Tjfg3PSRS/eU7mO5nznsxX0zvQ8S0niqJR3SqsL/Vb
87lR9IE/WM0NNvKQrTxnO5/Zw9JYFCX01bqew2zmONs4xS7OsJ+L/M5l/ucJ
77Wta/3TioFSXGWaa8xwnTthJu5yk3vcYlL74Xd4wBSzTPMnMzzkDo+4y1+c
dY9TPuhYN+GOmjBbkiNc4iAX2MdpdnKSnzjGJg6xjrX6Yh1nNx+d8Zl/2cIs
G8K9+JEX9v3hncp1FfaqyoxlrGSCFSwNe1jCBItZwng4j0UsYL4KrWMsCP9x
+I6vytNLeKYnGSOa83H2/j68Acy/Svc=
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{690, 1004, 473, 689, 1113, 912, 691, 1114, 913, 692, 1115, 
       914, 693, 1116, 915, 694, 1117, 916, 695, 1118, 1010, 1217, 696, 1119, 
       917, 697, 1120, 918, 698, 1121, 919, 699, 1122, 920, 700, 1123, 921, 
       701, 1124, 922, 702, 1322, 1005, 923, 1006}], 
      Line3DBox[{704, 1011, 1218, 703, 488, 705, 1125, 924, 706, 1126, 925, 
       707, 1127, 926, 708, 1128, 927, 709, 1129, 1012, 1219, 710, 1013, 1220,
        711, 1130, 928, 712, 1131, 929, 713, 1132, 930, 714, 1133, 931, 715, 
       1134, 932, 716, 1135, 933, 717}], 
      Line3DBox[{719, 1014, 1221, 718, 1015, 1222, 720, 504, 721, 1136, 934, 
       722, 1137, 935, 723, 1138, 936, 724, 1139, 1016, 1223, 725, 1017, 1224,
        726, 1018, 1225, 727, 1140, 937, 728, 1141, 938, 729, 1142, 939, 730, 
       1143, 940, 731, 1144, 941, 732}], 
      Line3DBox[{734, 1019, 1226, 733, 1020, 1227, 735, 1021, 1228, 736, 520, 
       737, 1145, 942, 738, 1146, 943, 739, 1147, 1022, 1229, 740, 1023, 1230,
        741, 1024, 1231, 742, 1025, 1232, 743, 1148, 944, 744, 1149, 945, 745,
        1150, 946, 746, 1151, 947, 747}], 
      Line3DBox[{749, 1026, 1233, 748, 1027, 1234, 750, 1028, 1235, 751, 1029,
        1236, 752, 536, 753, 1152, 948, 754, 1153, 1030, 1237, 755, 1031, 
       1238, 756, 1032, 1239, 757, 1033, 1240, 758, 1034, 1241, 759, 1154, 
       949, 760, 1155, 950, 761, 1156, 951, 762}], 
      Line3DBox[{764, 1035, 1242, 763, 1036, 1243, 765, 1037, 1244, 766, 1038,
        1245, 767, 1039, 1246, 768, 552, 769, 1157, 1040, 1247, 770, 1041, 
       1248, 771, 1042, 1249, 772, 1043, 1250, 773, 1044, 1251, 774, 1045, 
       1252, 775, 1158, 952, 776, 1159, 953, 777}], 
      Line3DBox[{781, 1160, 954, 779, 1161, 955, 783, 1162, 956, 785, 1163, 
       957, 787, 1164, 958, 789, 1165, 959, 791, 1166, 569, 793, 1167, 960, 
       795, 1168, 961, 797, 1169, 962, 799, 1170, 963, 801, 1171, 964, 803, 
       1172, 965, 805, 1174, 967, 807}], 
      Line3DBox[{806, 966, 1173, 804, 1265, 1057, 802, 1264, 1056, 800, 1263, 
       1055, 798, 1262, 1054, 796, 1261, 1053, 794, 1260, 1052, 792, 1259, 
       568, 790, 1258, 1051, 788, 1257, 1050, 786, 1256, 1049, 784, 1255, 
       1048, 782, 1254, 1047, 778, 1253, 1046, 780}], 
      Line3DBox[{809, 1058, 1266, 808, 1175, 968, 810, 1176, 969, 811, 1177, 
       970, 812, 1178, 971, 813, 1179, 972, 814, 1180, 1059, 1267, 815, 585, 
       816, 1181, 973, 817, 1182, 974, 818, 1183, 975, 819, 1184, 976, 820, 
       1185, 977, 821, 1186, 978, 822}], 
      Line3DBox[{824, 1060, 1268, 823, 1061, 1269, 825, 1187, 979, 826, 1188, 
       980, 827, 1189, 981, 828, 1190, 982, 829, 1191, 1062, 1270, 830, 1063, 
       1271, 831, 601, 832, 1192, 983, 833, 1193, 984, 834, 1194, 985, 835, 
       1195, 986, 836, 1196, 987, 837}], 
      Line3DBox[{839, 1064, 1272, 838, 1065, 1273, 840, 1066, 1274, 841, 1197,
        988, 842, 1198, 989, 843, 1199, 990, 844, 1200, 1067, 1275, 845, 1068,
        1276, 846, 1069, 1277, 847, 617, 848, 1201, 991, 849, 1202, 992, 850, 
       1203, 993, 851, 1204, 994, 852}], 
      Line3DBox[{854, 1070, 1278, 853, 1071, 1279, 855, 1072, 1280, 856, 1073,
        1281, 857, 1205, 995, 858, 1206, 996, 859, 1207, 1074, 1282, 860, 
       1075, 1283, 861, 1076, 1284, 862, 1077, 1285, 863, 633, 864, 1208, 997,
        865, 1209, 998, 866, 1210, 999, 867}], 
      Line3DBox[{869, 1078, 1286, 868, 1079, 1287, 870, 1080, 1288, 871, 1081,
        1289, 872, 1082, 1290, 873, 1211, 1000, 874, 1212, 1083, 1291, 875, 
       1084, 1292, 876, 1085, 1293, 877, 1086, 1294, 878, 1087, 1295, 879, 
       649, 880, 1213, 1001, 881, 1214, 1002, 882}], 
      Line3DBox[{884, 1088, 1296, 883, 1089, 1297, 885, 1090, 1298, 886, 1091,
        1299, 887, 1092, 1300, 888, 1093, 1301, 889, 1215, 1094, 1302, 890, 
       1095, 1303, 891, 1096, 1304, 892, 1097, 1305, 893, 1098, 1306, 894, 
       1099, 1307, 895, 665, 896, 1216, 1003, 897}], 
      Line3DBox[{911, 1009, 685, 910, 1321, 1111, 909, 1320, 1110, 908, 1319, 
       1109, 907, 1318, 1108, 906, 1317, 1107, 905, 1316, 1106, 904, 1315, 
       1314, 1105, 903, 1313, 1104, 902, 1312, 1103, 901, 1311, 1102, 900, 
       1310, 1101, 899, 1309, 1100, 898, 1112, 1308, 1007, 1008}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{251, 474, 1113, 252, 488, 280, 1222, 503, 295, 1227, 518, 
       310, 1234, 533, 325, 1243, 548, 340, 1254, 563, 1161, 355, 578, 1175, 
       370, 1269, 593, 385, 1273, 608, 400, 1279, 623, 415, 1287, 638, 430, 
       1297, 653, 445, 1309, 668, 460}], 
      Line3DBox[{253, 475, 1114, 254, 489, 1125, 281, 504, 296, 1228, 519, 
       311, 1235, 534, 326, 1244, 549, 341, 1255, 564, 1162, 356, 579, 1176, 
       371, 594, 1187, 386, 1274, 609, 401, 1280, 624, 416, 1288, 639, 431, 
       1298, 654, 446, 1310, 669, 461}], 
      Line3DBox[{255, 476, 1115, 256, 490, 1126, 282, 505, 1136, 297, 520, 
       312, 1236, 535, 327, 1245, 550, 342, 1256, 565, 1163, 357, 580, 1177, 
       372, 595, 1188, 387, 610, 1197, 402, 1281, 625, 417, 1289, 640, 432, 
       1299, 655, 447, 1311, 670, 462}], 
      Line3DBox[{257, 477, 1116, 258, 491, 1127, 283, 506, 1137, 298, 521, 
       1145, 313, 536, 328, 1246, 551, 343, 1257, 566, 1164, 358, 581, 1178, 
       373, 596, 1189, 388, 611, 1198, 403, 626, 1205, 418, 1290, 641, 433, 
       1300, 656, 448, 1312, 671, 463}], 
      Line3DBox[{259, 478, 1117, 260, 492, 1128, 284, 507, 1138, 299, 522, 
       1146, 314, 537, 1152, 329, 552, 344, 1258, 567, 1165, 359, 582, 1179, 
       374, 597, 1190, 389, 612, 1199, 404, 627, 1206, 419, 642, 1211, 434, 
       1301, 657, 449, 1313, 672, 464}], 
      Line3DBox[{261, 479, 1118, 263, 493, 1129, 285, 508, 1139, 300, 523, 
       1147, 315, 538, 1153, 330, 553, 1157, 345, 568, 1166, 360, 583, 1180, 
       375, 598, 1191, 390, 613, 1200, 405, 628, 1207, 420, 643, 1212, 435, 
       658, 1215, 450, 1314, 673, 465}], 
      Line3DBox[{265, 481, 1119, 266, 1220, 495, 287, 1224, 510, 302, 1230, 
       525, 317, 1238, 540, 332, 1248, 555, 347, 1260, 570, 1167, 362, 585, 
       377, 1271, 600, 392, 1276, 615, 407, 1283, 630, 422, 1292, 645, 437, 
       1303, 660, 452, 1316, 675, 467}], 
      Line3DBox[{267, 482, 1120, 268, 496, 1130, 288, 1225, 511, 303, 1231, 
       526, 318, 1239, 541, 333, 1249, 556, 348, 1261, 571, 1168, 363, 586, 
       1181, 378, 601, 393, 1277, 616, 408, 1284, 631, 423, 1293, 646, 438, 
       1304, 661, 453, 1317, 676, 468}], 
      Line3DBox[{269, 483, 1121, 270, 497, 1131, 289, 512, 1140, 304, 1232, 
       527, 319, 1240, 542, 334, 1250, 557, 349, 1262, 572, 1169, 364, 587, 
       1182, 379, 602, 1192, 394, 617, 409, 1285, 632, 424, 1294, 647, 439, 
       1305, 662, 454, 1318, 677, 469}], 
      Line3DBox[{271, 484, 1122, 272, 498, 1132, 290, 513, 1141, 305, 528, 
       1148, 320, 1241, 543, 335, 1251, 558, 350, 1263, 573, 1170, 365, 588, 
       1183, 380, 603, 1193, 395, 618, 1201, 410, 633, 425, 1295, 648, 440, 
       1306, 663, 455, 1319, 678, 470}], 
      Line3DBox[{273, 485, 1123, 274, 499, 1133, 291, 514, 1142, 306, 529, 
       1149, 321, 544, 1154, 336, 1252, 559, 351, 1264, 574, 1171, 366, 589, 
       1184, 381, 604, 1194, 396, 619, 1202, 411, 634, 1208, 426, 649, 441, 
       1307, 664, 456, 1320, 679, 471}], 
      Line3DBox[{275, 486, 1124, 276, 500, 1134, 292, 515, 1143, 307, 530, 
       1150, 322, 545, 1155, 337, 560, 1158, 352, 1265, 575, 1172, 367, 590, 
       1185, 382, 605, 1195, 397, 620, 1203, 412, 635, 1209, 427, 650, 1213, 
       442, 665, 457, 1321, 680, 472}], 
      Line3DBox[{277, 682, 1322, 683, 278, 501, 1135, 293, 516, 1144, 308, 
       531, 1151, 323, 546, 1156, 338, 561, 1159, 353, 576, 1173, 1174, 368, 
       591, 1186, 383, 606, 1196, 398, 621, 1204, 413, 636, 1210, 428, 651, 
       1214, 443, 666, 1216, 458, 685, 686, 687}], 
      Line3DBox[{459, 667, 684, 1308, 444, 652, 1296, 429, 637, 1286, 414, 
       622, 1278, 399, 607, 1272, 384, 592, 1268, 369, 577, 1266, 354, 1160, 
       562, 1253, 339, 547, 1242, 324, 532, 1233, 309, 517, 1226, 294, 502, 
       1221, 279, 487, 1218, 250, 473, 681, 688}], 
      Line3DBox[{466, 674, 1315, 451, 659, 1302, 436, 644, 1291, 421, 629, 
       1282, 406, 614, 1275, 391, 599, 1270, 376, 584, 1267, 361, 569, 1259, 
       346, 554, 1247, 331, 539, 1237, 316, 524, 1229, 301, 509, 1223, 286, 
       494, 1219, 264, 480, 1217, 262}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
h64ODxdD/AHJBeH7JSD87GHM/hgKbtYorglyyofbXaNuBT+qYKpc4vxdRwrM
JpfsshTLhs8HjA/7K9XDIO8pnm7yflcel/tw93wq5C0f16S8m8GnOELJkZPo
wkRBhNfKOHD9s1xuULkdPkqx+3rW0eGPzv/yt8v/yd+CE87iGuKTKt4daBpp
bIGWmVv3XjJSUCfjYvIqK5r06WPKbd/aYM+zcPuAbjpQVU3KTqt9Yf8xv+SN
qh1QIx366FgCHR4s4WZm0DeGq2Z3aXlPOiG+aaRr6xM6xAksP7Kf3w6ZPs5I
V2t1waOs88V5hKPVj0i2Mpt54UFDwb2937ogRvWw2ElJOjzL9OArlvdHpqL2
BzpHuqG5OjjvNvEtL0QPtx6dqgMjjSTBGzutQChlq9ApEwq6luQ88U2shQdC
v/ZPaflDz3d+hTbCI08iqNjX62rA46WPccTFOPA/ft1zA/En2ZslpU2PVION
xoOOCPcsWOMiXlhL+rnSE212vm2V4Mx6diKsogjeLv2475Y7Bc95O+7p15SB
8bPe/dceV4Ly+xBr/idEB3+x3e3dVAQPtYKLivRrQWp1+zUvdQrG/uVv6/v+
f/4WWn9e6sVoLmyM3ttNyWZD4vcXDCmkT2ZoKD5SF0uDSSm/+FbBImBcUMl5
Q/zn1n6uGqbZSDjjfe91sGAFyNgU0cpIvw2Vu9LgJe0Im3fNWuoUVsNgh2Aw
Ev19upXnodWkI26vOrundUkdeK72FVhL/Ex+1C19jicRWMK9ZZ5loAG2dj0+
deEiBW82PJVJ6E/APtPsReZNTWCe9f4a20EKuO9tuSFI1QLLE0bVpK9+mLh4
RCGTvPeJ97sjhqNrYdejrbXb6yKxaaO9yU2yvkHC73V9f2rg0N6Ymk/vo/Hi
PRc2azsKHi5VKLVaUgOXY22UTEbJfJ679lqknn4nGiJ+plaD3cfSH07Et/L4
vIcMonfV+WfGx35XgpfG27x1e03wzvsTXGHkHcX9tGytnkCQ7ZpltlrhRzjN
8q5lOQXM//K3nP/kb2kmfMO7N+fCyV8/bwWyVuCl/WqPOwi//IrmZ6z4mgYL
CxrOCQdLcMHHcpl3NQXe03s0qZFo0Lu+ukBsRR6q+4c55Q5SUHsh6okNusMS
5RPVJVuIH78xfa1nhoIHjx857v/+FE/HJ93c2haChju55JsXiG7qmUjrG0Wh
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
fwq+2bMyDp2X5n+/INCKTTbaKT5k/bkdxbXd3GlYemj8l1xGM6qyhs3cJd/T
i7iya3kqfPpTcnl5Ywq27lMv1hol8efsluXqmqkwoW9cFH7YrGwsdKWl+hQN
aN9sZ6/zpYD9feXnR64XYd+BeyNPGsh8hbyNGJ8ExdI7X4boVuEk1tdLhdBg
4+Qm5i2JCXDWK20h/k89atfyCe8gvCl/3JiPcX88uL1j/yvN0Izd1758FSf4
je3G9t3uRjGwTVfptqNoG267zTAg2UIFjdWYJuUWATwPtL8yTrTj3ZJs7U5v
KqTu+vrhSF0gpDbuHU8524n3Ijt9hkiczFvGL3HGyBuuD573/6ROwY/HQ4X3
kXgbcEy/N+uRIxi7JB+T/UpB3vnc5IdrqfDgdHf7iXdLUHyrpH8hbxfK1Lif
cCP44dKBqKHgN454KpPtvu4oBQee/k7PIvP9OHGWwc0b7aLHv3CfoaBilFqu
K1n/1C7GPlpXIOruD8qYOdOJA44HUs9qUYFv/1mWuYx4vH9H9NETnVQ0sxuz
/KePyrdofLz0WzwmmHyukmszK1PalLxUbI7Emcd/MkX/xGFLPVgYTRdhEjwK
2vHPR1F1bnrf+1i8ZV6uswyr0EDuzOBpss9nxFaxKGjF4EBN1hGKA7mf0hqJ
ouTeMm81tvhCe45+Gbk3koKascc3q7lxNQ1Si9UTxZ6Hofuh2dWsDm24j7dR
1aGGClE2zMYPOwJxUjVmm7JSB7rLrWvhdKaCrGj7M61UX3yzwTamObsTT07M
R4XIU0Fp9OF3l/seyN8753Uql4Lr773XXLaJCit1exgLImzQ/0/dLofTXdgS
GGQm/ncczNbbv2ZunJN5b76Dwdu5C9kmmlyrp8bhqwlT+rcWG3iR2ZXup9qF
NkHfD2uT+UbMkkJewR6Q6F8vZp1NwbecPlfOk/UlPj/UuFDgC4XiuorsmZ1o
MLayebUCFRwtykun+hBZDD4uhEm9wLKcQ1IShTRQ2Kf74iJPOd4qUi4x07xa
NlLUtH6IxJktRjoFBl1lmBfE2eP9PRe3NztGvyTxk4BCtSmRUgzTTJDaV12G
w2cy344Tfvcs2mbn9g9FmJt8OXh+rApprJS8MxYkDqw8tesH6yusXOfvnM9Q
jxz9zYHliiSeP/Y4H12ei/6tAi+CvBtxf/pFe21BGlwZcWQeXJuFnclvWfJd
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
MM7TP/yZrwJlouK/zGURXv9ffrf9PwPjdDA=
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->200,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0, 1}, {0, 2}, {-0.09900813117937694, 0.09897228044051809}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.756568934028042*^9, 3.756569346663808*^9, 
  3.7565764343886423`*^9, 3.7565767576549253`*^9, 3.7565773385519533`*^9, 
  3.756578036900523*^9, 3.756579165383401*^9, 3.756579555357287*^9, 
  3.7565803304015102`*^9}]
}, Open  ]],

Cell["The Fourier coefficients are computed:", "Text",
 CellChangeTimes->{{3.7565766917401533`*^9, 3.756576704410287*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"a", "[", 
    RowBox[{"n_", ",", "m_"}], "]"}], "=", " ", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"x", ",", "y"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          FractionBox[
           RowBox[{"m", " ", "\[Pi]", " ", "y"}], "3.14"], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "0", ",", "3.14"}], "}"}]}], "]"}], 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"n", " ", "\[Pi]", " ", "x"}], "3.14"], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "3.14"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"a", "[", 
     RowBox[{"n", ",", "m"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "10"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"m", ",", "1", ",", "10"}], "}"}]}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.756576370576289*^9, 3.7565763769586067`*^9}, {
  3.756576730321732*^9, 3.756576742530449*^9}, {3.756576870267411*^9, 
  3.7565768766244593`*^9}, {3.7565769984896603`*^9, 3.756577010784441*^9}, {
  3.756577075149151*^9, 3.75657712036198*^9}, {3.7565781797422457`*^9, 
  3.7565781861245623`*^9}, {3.7565790479698153`*^9, 3.756579063447308*^9}, {
  3.756579384097475*^9, 3.756579442140918*^9}, {3.756579676290864*^9, 
  3.7565797414304733`*^9}, {3.7565804040376997`*^9, 3.7565804252286463`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"4.515784358844112`*^-8", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{
      RowBox[{"-", "1.129251666702203`*^-7"}], "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{"2.9065997952118823`*^-7", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{"0.0001668796133532206`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{
      RowBox[{"-", "3.752322874807381`*^-7"}], "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{"2.0282610107377968`*^-7", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{
      RowBox[{"-", "1.434581861117606`*^-7"}], "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{"1.1273445199086641`*^-7", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{
      RowBox[{"-", "9.366458832085554`*^-8"}], "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{"8.053626694169571`*^-8", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]},
    {
     RowBox[{"0.00006673378220385288`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{
      RowBox[{"-", "0.0001668796133532206`"}], "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{"0.0004295342343075976`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{"0.24661292229258644`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{
      RowBox[{"-", "0.0005545142938358254`"}], "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{"0.00029973426051236105`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{
      RowBox[{"-", "0.00021200098557833962`"}], "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{"0.00016659777722324346`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{
      RowBox[{"-", "0.00013841653499188468`"}], "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{"0.00011901564092786231`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]},
    {
     RowBox[{
      RowBox[{"-", "8.110848642527158`*^-8"}], "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{"2.0282610107377968`*^-7", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{
      RowBox[{"-", "5.220575016429351`*^-7"}], "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{
      RowBox[{"-", "0.00029973426051236105`"}], "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{"6.739587295803746`*^-7", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{
      RowBox[{"-", "3.6429813202693094`*^-7"}], "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{"2.5766678424428037`*^-7", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{
      RowBox[{"-", "2.0248355639599453`*^-7"}], "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{"1.682319700557033`*^-7", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{
      RowBox[{"-", "1.4465205144681863`*^-7"}], "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]},
    {
     RowBox[{"4.5081578359757125`*^-8", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{
      RowBox[{"-", "1.1273445199086641`*^-7"}], "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{"2.901690958109408`*^-7", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{"0.00016659777722324346`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{
      RowBox[{"-", "3.74598573070565`*^-7"}], "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{"2.0248355639599453`*^-7", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{
      RowBox[{"-", "1.4321590546899746`*^-7"}], "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{"1.1254405940170722`*^-7", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{
      RowBox[{"-", "9.350640204178992`*^-8"}], "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{"8.040025254579936`*^-8", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]},
    {
     RowBox[{
      RowBox[{"-", "3.220578948863411`*^-8"}], "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{"8.053626694169571`*^-8", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{
      RowBox[{"-", "2.0729364755641633`*^-7"}], "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{
      RowBox[{"-", "0.00011901564092786231`"}], "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{"2.6760914825960705`*^-7", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{
      RowBox[{"-", "1.446520514468186`*^-7"}], "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{"1.023118859360075`*^-7", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{
      RowBox[{"-", "8.040025254579936`*^-8"}], "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{"6.67999570903599`*^-8", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{
      RowBox[{"-", "5.743706637020645`*^-8"}], "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]},
    {
     RowBox[{"2.5363742300288518`*^-8", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{
      RowBox[{"-", "6.342651905047426`*^-8"}], "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{"1.6325458063877957`*^-7", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{"0.00009373103700076369`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{
      RowBox[{"-", "2.1075618953703364`*^-7"}], "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{"1.1392105004598624`*^-7", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{
      RowBox[{"-", "8.057595700466293`*^-8"}], "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{"6.331940060557905`*^-8", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{
      RowBox[{"-", "5.260845718153132`*^-8"}], "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{"4.523469143374414`*^-8", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]},
    {
     RowBox[{
      RowBox[{"-", "2.104328230780965`*^-8"}], "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{"5.262244547270985`*^-8", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{
      RowBox[{"-", "1.3544579454214987`*^-7"}], "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{
      RowBox[{"-", "0.00007776489168116118`"}], "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{"1.7485597913899283`*^-7", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{
      RowBox[{"-", "9.451573780153613`*^-8"}], "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{"6.685064807852771`*^-8", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{
      RowBox[{"-", "5.25335735842631`*^-8"}], "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{"4.364713231756368`*^-8", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{
      RowBox[{"-", "3.7529413864771406`*^-8"}], "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]},
    {
     RowBox[{"1.803750539231374`*^-8", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{
      RowBox[{"-", "4.510596921557611`*^-8"}], "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{"1.1609901030095264`*^-7", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{"0.00006665712280593554`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{
      RowBox[{"-", "1.4987992939805646`*^-7"}], "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{"8.101531430869118`*^-8", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{
      RowBox[{"-", "5.730184614538979`*^-8"}], "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{"4.502979159539144`*^-8", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{
      RowBox[{"-", "3.741267037247826`*^-8"}], "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{"3.216879358715636`*^-8", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]},
    {
     RowBox[{
      RowBox[{"-", "1.581233478124237`*^-8"}], "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{"3.9541536945182475`*^-8", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{
      RowBox[{"-", "1.017766248004478`*^-7"}], "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{
      RowBox[{"-", "0.00005843406382630816`"}], "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{"1.3139020995890808`*^-7", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{
      RowBox[{"-", "7.102097792317146`*^-8"}], "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{"5.023288726057701`*^-8", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{
      RowBox[{"-", "3.947475686628577`*^-8"}], "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{"3.2797310721358535`*^-8", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{
      RowBox[{"-", "2.8200337166665762`*^-8"}], "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]},
    {
     RowBox[{"1.4092158179251212`*^-8", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{
      RowBox[{"-", "3.523993142007307`*^-8"}], "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{"9.070465022911205`*^-8", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{"0.000052077196814327554`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{
      RowBox[{"-", "1.1709666204022043`*^-7"}], "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{"6.329481817737006`*^-8", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{
      RowBox[{"-", "4.4768201715302015`*^-8"}], "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{"3.5180416146202726`*^-8", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{
      RowBox[{"-", "2.9229389393381068`*^-8"}], "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{"2.5132506840944007`*^-8", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.7565689789299507`*^9, {3.7565764191118*^9, 3.7565764407313347`*^9}, {
   3.756576746652176*^9, 3.7565767626378927`*^9}, 3.75657687903121*^9, 
   3.756577013438428*^9, 3.756577085377844*^9, 3.7565771230652523`*^9, 
   3.756577342707821*^9, 3.756578042310872*^9, 3.756578198611603*^9, 
   3.75657916973421*^9, 3.756579566524892*^9, 3.756579695058093*^9, 
   3.7565797446343117`*^9, 3.756580335061797*^9, 3.756580430508707*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"Lambda", "[", 
     RowBox[{"n_", ",", "m_"}], "]"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"n", " ", "\[Pi]"}], ")"}], "^", "2"}], " ", "+", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"m", " ", 
        RowBox[{"\[Pi]", "/", "2"}]}], ")"}], "^", "2"}]}]}], ";"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.756577279969721*^9, 3.756577285063814*^9}}],

Cell["The eigenvalues are computed:", "Text",
 CellChangeTimes->{{3.7565774906364937`*^9, 3.7565774963629007`*^9}, {
   3.75658033948134*^9, 3.756580348304679*^9}, 3.756580856070961*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Lambda", "[", 
   RowBox[{"m_", ",", "n_"}], "]"}], "=", " ", 
  RowBox[{"\[Pi]", 
   SqrtBox[
    RowBox[{
     FractionBox[
      SuperscriptBox["m", "2"], 
      SuperscriptBox[
       RowBox[{"(", "3.14", ")"}], "2"]], "+", 
     FractionBox[
      SuperscriptBox["n", "2"], 
      SuperscriptBox[
       RowBox[{"(", "3.14", ")"}], "2"]]}]]}]}]], "Input",
 CellChangeTimes->{{3.756577289962078*^9, 3.7565773206310062`*^9}, 
   3.7565773520279922`*^9, {3.756579134741301*^9, 3.756579135379034*^9}, {
   3.756579475644553*^9, 3.756579476335074*^9}, {3.756579762981182*^9, 
   3.756579766284794*^9}, {3.756580465763837*^9, 3.756580507055923*^9}}],

Cell[BoxData[
 RowBox[{
  SqrtBox[
   RowBox[{
    RowBox[{"0.1014239928597509`", " ", 
     SuperscriptBox["m", "2"]}], "+", 
    RowBox[{"0.1014239928597509`", " ", 
     SuperscriptBox["n", "2"]}]}]], " ", "\[Pi]"}]], "Output",
 CellChangeTimes->{3.756577353117052*^9, 3.756578048911502*^9, 
  3.756578233545478*^9, 3.75657913718681*^9, 3.756579175372508*^9, 
  3.756579572832943*^9, 3.7565797679059467`*^9, 3.756580351678856*^9, 
  3.75658051189764*^9}]
}, Open  ]],

Cell["\<\
The solution, truncated at N and M, respectively, is given by\
\>", "Text",
 CellChangeTimes->{3.7565775193971252`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"u", "[", 
   RowBox[{"x_", ",", "y_", ",", "t_", ",", "N_", ",", "M_"}], "]"}], ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"a", "[", 
        RowBox[{"n", ",", "m"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"Lambda", "[", 
          RowBox[{"n", ",", "m"}], "]"}], "t"}], "]"}], 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"n", " ", "\[Pi]", " ", "x"}], "3.14"], "]"}], 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"m", " ", "\[Pi]", " ", "y"}], "3.14"], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", "N"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"m", ",", "1", ",", "M"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"uplot", "=", 
   RowBox[{"u", "[", 
    RowBox[{"x", ",", "y", ",", "t", ",", "10", ",", "20"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{
  3.756569149914898*^9, 3.75656921520971*^9, {3.756578016759471*^9, 
   3.756578020941391*^9}, {3.7565785173643703`*^9, 3.756578531321692*^9}, {
   3.756579146987295*^9, 3.756579152843*^9}, {3.756579521994605*^9, 
   3.756579532176124*^9}, {3.756579780756483*^9, 3.7565797853559523`*^9}, {
   3.756580523439744*^9, 3.756580530879129*^9}, {3.756581671566847*^9, 
   3.756581710315208*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"uplot", "/.", 
      RowBox[{"t", "\[Rule]", "tplot"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "2"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"All", ",", "All", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "1"}], "/", "2"}], ",", 
          RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"tplot", ",", "0", ",", "5"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`tplot$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`tplot$$], 0, 5}}, Typeset`size$$ = {
    540., {209., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`tplot$393227$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`tplot$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`tplot$$, $CellContext`tplot$393227$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot3D[
        ReplaceAll[$CellContext`uplot, $CellContext`t -> \
$CellContext`tplot$$], {$CellContext`x, 0, 1}, {$CellContext`y, 0, 2}, 
        PlotRange -> {All, All, {(-1)/2, 1/2}}], 
      "Specifications" :> {{$CellContext`tplot$$, 0, 5}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{608., {272., 281.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.7565691200927143`*^9, 3.756580370541418*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"u", "[", 
  RowBox[{"x", ",", "y", ",", "t", ",", "2", ",", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.7565692546074047`*^9, 3.756569304772368*^9}, {
  3.756569374132971*^9, 3.756569380010228*^9}, {3.7565695307191687`*^9, 
  3.756569556380665*^9}, {3.75658062782619*^9, 3.756580631689775*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"4.515784358844112`*^-8", "+", 
     RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"1.4149308720249572`", " ", "t"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"1.0005072145190423`", " ", "x"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"1.0005072145190423`", " ", "y"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"0.00006673378220385288`", "\[VeryThinSpace]", "+", 
     RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2.237202143643543`", " ", "t"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2.0010144290380847`", " ", "x"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"1.0005072145190423`", " ", "y"}], "]"}]}], "-", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1.129251666702203`*^-7", "+", 
     RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2.237202143643543`", " ", "t"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"1.0005072145190423`", " ", "x"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2.0010144290380847`", " ", "y"}], "]"}]}], "-", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"0.0001668796133532206`", "\[VeryThinSpace]", "+", 
     RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2.8298617440499143`", " ", "t"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2.0010144290380847`", " ", "x"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2.0010144290380847`", " ", "y"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"2.9065997952118823`*^-7", "+", 
     RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"3.16388161331086`", " ", "t"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"1.0005072145190423`", " ", "x"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"3.001521643557127`", " ", "y"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"0.0004295342343075976`", "\[VeryThinSpace]", "+", 
     RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"3.607380063420057`", " ", "t"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2.0010144290380847`", " ", "x"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"3.001521643557127`", " ", "y"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"0.0001668796133532206`", "\[VeryThinSpace]", "+", 
     RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"4.125196924654519`", " ", "t"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"1.0005072145190423`", " ", "x"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"4.002028858076169`", " ", "y"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"0.24661292229258644`", "\[VeryThinSpace]", "+", 
     RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"4.474404287287086`", " ", "t"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2.0010144290380847`", " ", "x"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"4.002028858076169`", " ", "y"}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.756569263698518*^9, 3.7565693059267883`*^9}, 
   3.75656938172843*^9, {3.75656953206861*^9, 3.756569557287154*^9}, 
   3.756576463783862*^9, 3.756576908416245*^9, 3.756577030751811*^9, 
   3.7565771003559933`*^9, 3.7565771377294617`*^9, 3.7565773675455837`*^9, 
   3.7565780601378193`*^9, 3.756578244354476*^9, 3.756578541852304*^9, 
   3.7565791876653767`*^9, 3.756579585687593*^9, 3.756579800288991*^9, 
   3.7565803707288637`*^9, 3.756580540095262*^9, 3.756580632639365*^9, 
   3.756581686714222*^9, 3.756581717686638*^9},
 Background->RGBColor[1, 1, 0.85]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", "4.4744", ")"}], "2"]], "Input",
 CellChangeTimes->{{3.756580705968334*^9, 3.7565807273648157`*^9}}],

Cell[BoxData["20.02025536`"], "Output",
 CellChangeTimes->{3.7565807297619953`*^9}]
}, Open  ]],

Cell["\<\
Although the above yellow cell is not exactly the text answer, it has the \
same form. There appears to be something wrong with this problem. Maybe a \
typo? (Except for the leading coefficient, the last yellow cell line is very \
close to the text answer.)\
\>", "Text",
 CellChangeTimes->{{3.7565697557421827`*^9, 3.756569773925599*^9}, {
   3.75657883267559*^9, 3.756578849497542*^9}, {3.75658075228336*^9, 
   3.7565807557312193`*^9}, {3.7565810179832697`*^9, 3.756581031829297*^9}, {
   3.756581068435405*^9, 3.756581082778672*^9}, 3.756581757312492*^9, 
   3.7691031458613863`*^9}],

Cell["\<\
******************************************************************************\
***************\
\>", "Text",
 CellChangeTimes->{{3.756578856455447*^9, 3.756578877994103*^9}}],

Cell["Following example 2 on p. 582,", "Text",
 CellChangeTimes->{{3.7562949173009033`*^9, 3.756294928915242*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "=", "1"}]], "Input",
 CellChangeTimes->{{3.7562949946050167`*^9, 3.7562949996729507`*^9}, {
  3.7562950770561743`*^9, 3.756295082262535*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.75629508488758*^9, 3.756304668717054*^9, 
  3.7563048948462048`*^9, 3.756305021310926*^9, 3.75630511955061*^9, 
  3.756307486777581*^9, 3.75631697373774*^9, 3.7563177504413*^9, 
  3.756410186345956*^9, 3.756411463247238*^9, 3.7564138274962187`*^9, 
  3.7564226661277723`*^9, 3.756424465118438*^9}]
}, Open  ]],

Cell[TextData[{
 "To test Mathematica's abilities, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["B", "mn"], " "}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "is calculted two ways:"
}], "Text",
 CellChangeTimes->{{3.756410947123046*^9, 3.75641097251423*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["B", "mn"], "=", 
  RowBox[{
   FractionBox["4", 
    SuperscriptBox["\[Pi]", "2"]], 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "\[Pi]"], 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "\[Pi]"], 
     RowBox[{".1", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "x"}], "]"}], 
      RowBox[{"Sin", "[", 
       RowBox[{"4", " ", "y"}], "]"}], 
      RowBox[{"Sin", "[", 
       RowBox[{"m", " ", "x"}], "]"}], 
      RowBox[{"Sin", "[", 
       RowBox[{"n", " ", "y"}], "]"}], 
      RowBox[{"\[DifferentialD]", "y"}], 
      RowBox[{"\[DifferentialD]", "x"}]}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.756409048674284*^9, 3.756409051738769*^9}, {
  3.756409130472024*^9, 3.756409145157668*^9}, {3.756409295733142*^9, 
  3.756409415255761*^9}, {3.756409543508374*^9, 3.756409544234779*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"0.3242277876554809`", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"m", " ", "\[Pi]"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"n", " ", "\[Pi]"}], "]"}]}], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "4.`"}], "+", 
     SuperscriptBox["m", "2"]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "16.`"}], "+", 
     SuperscriptBox["n", "2"]}], ")"}]}]]], "Output",
 CellChangeTimes->{3.756409404414185*^9, 3.756409548652573*^9, 
  3.756410191013441*^9, 3.75641146767059*^9, 3.7564249314145203`*^9},
 Background->RGBColor[0.9, 1, 1]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Bmny", "=", 
  RowBox[{
   FractionBox[".4", 
    SuperscriptBox["\[Pi]", "2"]], 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "\[Pi]"], 
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"n", "-", "4"}], ")"}], "y"}], "]"}], "-", 
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"n", "+", "4"}], ")"}], "y"}], "]"}]}], ")"}], 
     RowBox[{"\[DifferentialD]", "y"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.756413093261038*^9, 3.7564132111386766`*^9}, 
   3.756413374138227*^9, 3.756413919491336*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"0.16211389382774044`", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"n", " ", "\[Pi]"}], "]"}]}], 
  RowBox[{
   RowBox[{"-", "16"}], "+", 
   SuperscriptBox["n", "2"]}]]], "Output",
 CellChangeTimes->{
  3.756413215821558*^9, 3.7564133762684383`*^9, 3.756413833833232*^9, 
   3.756413921516659*^9, 3.7564226792132177`*^9, {3.75642494871607*^9, 
   3.75642496621075*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Bmnx", "=", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", "0", "\[Pi]"], 
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "-", "m"}], ")"}], "x"}], "]"}], "-", 
      RowBox[{"Cos", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "+", "m"}], ")"}], "x"}], "]"}]}], ")"}], 
    RowBox[{"\[DifferentialD]", "x"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7564094191642017`*^9, 3.756409421462422*^9}, {
  3.756409654409568*^9, 3.756409662991908*^9}, {3.756409693599947*^9, 
  3.756409703621097*^9}, {3.756413261137889*^9, 3.7564133296373787`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"m", " ", "\[Pi]"}], "]"}]}], 
  RowBox[{
   RowBox[{"-", "4"}], "+", 
   SuperscriptBox["m", "2"]}]]], "Output",
 CellChangeTimes->{{3.756409695606538*^9, 3.7564097141159773`*^9}, 
   3.75641333264217*^9, 3.756413837050947*^9, 3.756413926666337*^9, 
   3.756422682367614*^9, 3.7564244774899817`*^9, 3.756424969583631*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bmn", "=", 
  RowBox[{"Bmny", " ", "Bmnx"}]}]], "Input",
 CellChangeTimes->{{3.756409708818809*^9, 3.756409732308176*^9}, {
  3.756413392513309*^9, 3.7564133950331583`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"0.3242277876554809`", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"m", " ", "\[Pi]"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"n", " ", "\[Pi]"}], "]"}]}], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "4"}], "+", 
     SuperscriptBox["m", "2"]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "16"}], "+", 
     SuperscriptBox["n", "2"]}], ")"}]}]]], "Output",
 CellChangeTimes->{{3.7564097249025087`*^9, 3.756409735005083*^9}, {
   3.756413356731147*^9, 3.7564133963471107`*^9}, 3.756413841130608*^9, 
   3.756413930871517*^9, 3.7564226857372513`*^9, 3.756424481435265*^9, 
   3.756424973480817*^9},
 Background->RGBColor[0.9, 1, 1]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bmnc", "=", 
  FractionBox[
   RowBox[{"0.3242277876554809`", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"\[Pi]", 
        RowBox[{"(", 
         RowBox[{"m", "-", "n"}], ")"}]}], "]"}], "-", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Pi]", 
        RowBox[{"(", 
         RowBox[{"m", "+", "n"}], ")"}]}], "]"}]}], ")"}], 
    FractionBox["1", "2"]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "4"}], "+", 
      SuperscriptBox["m", "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "16"}], "+", 
      SuperscriptBox["n", "2"]}], ")"}]}]]}]], "Input",
 CellChangeTimes->{{3.7564139534600363`*^9, 3.756414105009828*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"0.16211389382774044`", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"m", "-", "n"}], ")"}], " ", "\[Pi]"}], "]"}], "-", 
     RowBox[{"Cos", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"m", "+", "n"}], ")"}], " ", "\[Pi]"}], "]"}]}], ")"}]}], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "4"}], "+", 
     SuperscriptBox["m", "2"]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "16"}], "+", 
     SuperscriptBox["n", "2"]}], ")"}]}]]], "Output",
 CellChangeTimes->{3.756414111886407*^9, 3.756422691212603*^9, 
  3.756424986553088*^9}]
}, Open  ]],

Cell["\<\
bmnc makes use of a trig identity that I hoped would help out with the \
usability of bm.\
\>", "Text",
 CellChangeTimes->{
  3.7563071066651917`*^9, {3.75642504295156*^9, 3.7564250856609983`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[Lambda]", "mn"], "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"c", " ", "\[Pi]", " ", 
    SqrtBox[
     RowBox[{
      FractionBox[
       SuperscriptBox["m", "2"], 
       SuperscriptBox["\[Pi]", "2"]], "+", 
      FractionBox[
       SuperscriptBox["n", "2"], 
       SuperscriptBox["\[Pi]", "2"]]}]]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.756304499165525*^9, 3.756304507491033*^9}, {
  3.7563049995713577`*^9, 3.7563050053883944`*^9}}],

Cell[BoxData[
 SqrtBox[
  RowBox[{
   SuperscriptBox["m", "2"], "+", 
   SuperscriptBox["n", "2"]}]]], "Output",
 CellChangeTimes->{
  3.756301476666091*^9, 3.756304511692533*^9, 3.756304672244584*^9, 
   3.756304897355876*^9, {3.756305006245511*^9, 3.756305025256225*^9}, 
   3.7563051230684013`*^9, 3.756307489825602*^9, 3.756316977451771*^9, 
   3.756317753142765*^9, 3.756410199213028*^9, 3.75641147442467*^9, 
   3.7564226992113647`*^9, 3.756424519393572*^9, 3.756424992120534*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"uxyt2", "=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{"bmnc", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", "2"], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"m", " ", "x"}], " ", "-", " ", 
             RowBox[{"n", " ", "y"}]}], "]"}], "-", 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"m", " ", "x"}], " ", "+", " ", 
             RowBox[{"n", " ", "y"}]}], "]"}]}], ")"}]}], ")"}], 
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["\[Lambda]", "mn"], " ", "t"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", "1", ",", "\[Infinity]", ",", "2"}], "}"}]}], "]"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "\[Infinity]", ",", "2"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.756410549029358*^9, 3.756410631847012*^9}, {
   3.7564107195718927`*^9, 3.756410730117845*^9}, 3.75641091205459*^9, 
   3.756411287426216*^9, {3.756411348103961*^9, 3.7564113486142063`*^9}, {
   3.756413413624971*^9, 3.756413417224922*^9}, 3.7564141250737457`*^9, 
   3.7564245250968847`*^9, {3.7564245983104143`*^9, 3.756424689548923*^9}, 
   3.756425017890267*^9}],

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"0.08105694691387022`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"m", "-", "n"}], ")"}], " ", "\[Pi]"}], "]"}], "-", 
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"m", "+", "n"}], ")"}], " ", "\[Pi]"}], "]"}]}], ")"}], 
       " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         SqrtBox[
          RowBox[{
           SuperscriptBox["m", "2"], "+", 
           SuperscriptBox["n", "2"]}]], " ", "t"}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"m", " ", "x"}], "-", 
           RowBox[{"n", " ", "y"}]}], "]"}], "-", 
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"m", " ", "x"}], "+", 
           RowBox[{"n", " ", "y"}]}], "]"}]}], ")"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "4"}], "+", 
         SuperscriptBox["m", "2"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "16"}], "+", 
         SuperscriptBox["n", "2"]}], ")"}]}]], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "1", ",", "\[Infinity]", ",", "2"}], "}"}]}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "\[Infinity]", ",", "2"}], "}"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.756424741509734*^9, 3.756425149926696*^9},
 Background->RGBColor[1, 1, 0.85]]
}, Open  ]],

Cell["\<\
The trig identity is used again. But there are still problems.\
\>", "Text",
 CellChangeTimes->{{3.756425148955518*^9, 3.756425164635026*^9}}],

Cell["\<\
I was not able to get the text answer, which looks very nice. The yellow cell \
above, which was assembled using the rules as best as I was able to apply \
them, looks very messy.\
\>", "Text",
 CellChangeTimes->{{3.756307119143199*^9, 3.756307221058708*^9}, {
  3.7563072691624737`*^9, 3.756307369078105*^9}, {3.756307419660522*^9, 
  3.756307419980348*^9}, {3.756326486566061*^9, 3.7563264873498917`*^9}, {
  3.756410867639204*^9, 3.756410880229649*^9}, {3.756411018954172*^9, 
  3.7564110386879063`*^9}, {3.756411165861211*^9, 3.756411189587184*^9}, {
  3.756411678730034*^9, 3.756411678865979*^9}, {3.756414516347736*^9, 
  3.756414529402388*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"u", "[", 
   RowBox[{
   "x_", ",", "y_", ",", "t_", ",", "m_", ",", "n_", ",", "j_", ",", "k_"}], 
   "]"}], ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       FractionBox["1", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "+", 
           SuperscriptBox["m", "2"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "16"}], "+", 
           SuperscriptBox["n", "2"]}], ")"}]}]], 
       RowBox[{"0.08105694691387022`", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"m", "-", "n"}], ")"}], " ", "\[Pi]"}], "]"}], "-", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"m", "+", "n"}], ")"}], " ", "\[Pi]"}], "]"}]}], ")"}], 
        " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          SqrtBox[
           RowBox[{
            SuperscriptBox["m", "2"], "+", 
            SuperscriptBox["n", "2"]}]], " ", "t"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"m", " ", "x"}], "-", 
            RowBox[{"n", " ", "y"}]}], "]"}], "-", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"m", " ", "x"}], "+", 
            RowBox[{"n", " ", "y"}]}], "]"}]}], ")"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", "1", ",", "\[Infinity]", ",", "2"}], "}"}]}], "]"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "\[Infinity]", ",", "2"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.756411262333518*^9, 3.756411306143338*^9}, {
   3.756411411699645*^9, 3.756411419379448*^9}, {3.75641153757719*^9, 
   3.756411627845092*^9}, 3.756414320782474*^9, 3.7564149816929617`*^9, {
   3.75642332290623*^9, 3.7564233232005663`*^9}, {3.756423358167642*^9, 
   3.75642335848668*^9}, {3.75642352056246*^9, 3.7564235282016287`*^9}, 
   3.756425265557929*^9}],

Cell["\<\
It\[CloseCurlyQuote]s not blowing up at the moment, but I have little hope of \
verifying it.\
\>", "Text",
 CellChangeTimes->{{3.75641183610865*^9, 3.756411858852655*^9}, {
  3.7564253250138407`*^9, 3.756425349484858*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"u", "[", 
  RowBox[{"x", ",", "y", ",", "t", ",", "m", ",", "n", ",", "1", ",", "1"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7564118763584557`*^9, 3.756411879812047*^9}, {
  3.756422603737308*^9, 3.756422613359544*^9}, {3.756422794459227*^9, 
  3.756422800577379*^9}, {3.756422861559649*^9, 3.756422882086688*^9}, {
  3.7564252928326674`*^9, 3.756425295798917*^9}, {3.756425379411908*^9, 
  3.756425405819009*^9}}],

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"0.08105694691387022`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"m", "-", "n"}], ")"}], " ", "\[Pi]"}], "]"}], "-", 
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"m", "+", "n"}], ")"}], " ", "\[Pi]"}], "]"}]}], ")"}], 
       " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         SqrtBox[
          RowBox[{
           SuperscriptBox["m", "2"], "+", 
           SuperscriptBox["n", "2"]}]], " ", "t"}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"m", " ", "x"}], "-", 
           RowBox[{"n", " ", "y"}]}], "]"}], "-", 
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"m", " ", "x"}], "+", 
           RowBox[{"n", " ", "y"}]}], "]"}]}], ")"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "4"}], "+", 
         SuperscriptBox["m", "2"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "16"}], "+", 
         SuperscriptBox["n", "2"]}], ")"}]}]], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "1", ",", "\[Infinity]", ",", "2"}], "}"}]}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "\[Infinity]", ",", "2"}], "}"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{
  3.7564118809772987`*^9, 3.756414991210659*^9, {3.756422613976388*^9, 
   3.756422653798176*^9}, 3.756422724563393*^9, 3.756422801805361*^9, {
   3.756422866840189*^9, 3.756422883292835*^9}, 3.7564229502830753`*^9, 
   3.756423329939973*^9, 3.756423535536827*^9, {3.7564252748710117`*^9, 
   3.756425296735242*^9}, {3.756425387753283*^9, 3.756425407054384*^9}}]
}, Open  ]],

Cell["\<\
******************************************************************************\
********************\
\>", "Text",
 CellChangeTimes->{{3.756416068608859*^9, 3.756416077202717*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"partialuo", "[", 
   RowBox[{"j_", ",", "k_", ",", "x_", ",", "y_", ",", "t_"}], "]"}], ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"0.1", "  ", 
     RowBox[{"Sin", "[", 
      RowBox[{"m", " ", "x"}], "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"n", " ", "y"}], "]"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{
       SqrtBox[
        RowBox[{
         SuperscriptBox["m", "2"], "+", 
         SuperscriptBox["n", "2"]}]], " ", "t"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"m", ",", "j", ",", "j", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "k", ",", "k", ",", "2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.756322411835598*^9, 3.7563224973254128`*^9}, {
  3.756322636753516*^9, 3.756322646440795*^9}, {3.75632273129564*^9, 
  3.7563227319740868`*^9}, {3.756322786238288*^9, 3.756322786732312*^9}, {
  3.756323517654457*^9, 3.756323522660817*^9}, {3.756324293157995*^9, 
  3.756324344386495*^9}, {3.756324440431859*^9, 3.7563244450473347`*^9}, {
  3.7563246148517*^9, 3.756324616090118*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"part1", "=", 
  RowBox[{"partialuo", "[", 
   RowBox[{"2", ",", "4", ",", "x", ",", "y", ",", "t"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.756322509329793*^9, 3.756322521364163*^9}, {
  3.7563225922119102`*^9, 3.756322592721982*^9}, {3.7563234775265303`*^9, 
  3.7563234777019978`*^9}, {3.756323569820569*^9, 3.756323576650795*^9}, {
  3.756323944984662*^9, 3.7563239476725883`*^9}, {3.756324016748744*^9, 
  3.756324017125505*^9}, {3.756324072045905*^9, 3.756324072316346*^9}, {
  3.756324363065537*^9, 3.756324367209701*^9}}],

Cell[BoxData[
 RowBox[{"0.1`", " ", 
  RowBox[{"Cos", "[", 
   RowBox[{"2", " ", 
    SqrtBox["5"], " ", "t"}], "]"}], " ", 
  RowBox[{"Sin", "[", 
   RowBox[{"2", " ", "x"}], "]"}], " ", 
  RowBox[{"Sin", "[", 
   RowBox[{"4", " ", "y"}], "]"}]}]], "Output",
 CellChangeTimes->{{3.7563225222629433`*^9, 3.756322551664529*^9}, 
   3.756322594000716*^9, 3.756322652541585*^9, 3.756322738815979*^9, 
   3.756322790998147*^9, 3.756323478765971*^9, 3.7563235372458344`*^9, {
   3.756323571410263*^9, 3.756323577631762*^9}, {3.7563239357465963`*^9, 
   3.756323949277116*^9}, 3.756324018001823*^9, 3.756324073279243*^9, 
   3.756324368700417*^9, 3.756324451632004*^9, 3.756324620695306*^9},
 Background->RGBColor[1, 1, 0.85]]
}, Open  ]],

Cell["\<\
Just playing around, trying to get the text answer, I came up with the above \
yellow cell. The below yellow cell also gets there. No justification for this \
entertainment unfortunately.\
\>", "Text",
 CellChangeTimes->{{3.756325873674575*^9, 3.7563259171761923`*^9}, {
  3.756326590458577*^9, 3.756326601410187*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{"0.1", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", "x"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"4", " ", "y"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7563239990901613`*^9, 3.7563240078304663`*^9}, {
  3.756324537589958*^9, 3.7563245401240673`*^9}, {3.7563259670720654`*^9, 
  3.7563259876460543`*^9}}],

Cell[BoxData[
 RowBox[{"0.1`", " ", 
  RowBox[{"Sin", "[", 
   RowBox[{"2", " ", "x"}], "]"}], " ", 
  RowBox[{"Sin", "[", 
   RowBox[{"4", " ", "y"}], "]"}]}]], "Output",
 CellChangeTimes->{3.756324008983465*^9, 3.7563245416058273`*^9, 
  3.756325989040762*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"partialuo2", "[", 
   RowBox[{"j_", ",", "k_", ",", "x_", ",", "y_", ",", "t_"}], "]"}], ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "y"}], "]"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{
       SqrtBox[
        RowBox[{
         SuperscriptBox["m", "2"], "+", 
         SuperscriptBox["n", "2"]}]], " ", "t"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"m", ",", "j", ",", "j", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "k", ",", "k", ",", "2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.756326030844676*^9, 3.756326046652231*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"part2", "=", 
  RowBox[{"partialuo", "[", 
   RowBox[{"2", ",", "4", ",", "x", ",", "y", ",", "t"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.756324024354394*^9, 3.7563240293401403`*^9}, {
  3.756325996389811*^9, 3.756325997245728*^9}, {3.756326062694786*^9, 
  3.756326076675322*^9}}],

Cell[BoxData[
 RowBox[{"0.1`", " ", 
  RowBox[{"Cos", "[", 
   RowBox[{"2", " ", 
    SqrtBox["5"], " ", "t"}], "]"}], " ", 
  RowBox[{"Sin", "[", 
   RowBox[{"2", " ", "x"}], "]"}], " ", 
  RowBox[{"Sin", "[", 
   RowBox[{"4", " ", "y"}], "]"}]}]], "Output",
 CellChangeTimes->{3.7563240307366343`*^9, 3.7563240791858263`*^9, 
  3.756324480124414*^9, 3.756324544970529*^9, 3.756326077905403*^9},
 Background->RGBColor[1, 1, 0.85]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"uti", "=", 
   RowBox[{"0.1", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", "x"}], "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"4", "y"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", "uti", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "Pi"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "Pi"}], "}"}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"20", ",", "20"}], "}"}]}], ",", 
   RowBox[{"ViewPoint", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.5"}], ",", "3", ",", "0.5"}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.756309971051881*^9, 3.756309990137995*^9}, {
  3.756326130866962*^9, 3.756326131609415*^9}, {3.75632617597749*^9, 
  3.756326176296205*^9}, {3.7563268951295013`*^9, 3.756326895626567*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJxdnXlcTesXxpsHYz9DxhAJCV1jSPuYhWtMkqJQMmfqmmXKeEOhUJRSSSNN
pg4hYzdRlFnInEzJUH7Vu561P537z/n0vcc+ez/PHta73netbTxtwThXDTU1
tTIdNTXNis+rmufmD/3L2xqfUaWhvobBjfvdTB3Rv7HZZQn8x7N423p1J1rb
rb6ws5FZLvPehccn9M5ytR7S4lF5a+UT5s8T6rYqODXP+uDU3z0bmb1kvt31
39mfeyy0rm+xrShwyVvmDzzcCtcmLLTertY4vLXyI3ON/9qW9hjgYb3+9e3O
ORs/Mz+WcnPPxZazrdNu7a/RyOwb87SyJPNphc7WP1OdCydlfWf+fpnX4njn
odY9Q9qlBy75Ke+n4GmLthYFPWlSxvys2E5a7MKk5a2Vf5hHit9N+2aeFtW1
q7pCZT/T6oeENM7ZqKFQOa60vxpu8l56T1OhokPa6K3uXw3NtJm/ErqlzSsb
MS11lQ7zfkLntO0Lu9yalKUr/25BlS9px17Ws/5lrM/c54iVX4WP5/A3/PzP
pfWn3lkT+G98znCLPmUwd48Ef8EzGt6IvT4mVIK/4KeW6Z9NHB8lwV9w83/v
XB20KlaCv+ADfE27tpgYJ8Ff8PX3Jii33oyW4C94QUbf7bptIiT4Cx5/pNZi
u49BEvwF1zo1I3RS4kYJ/oL/Tq3iSvgLHi22o4S/4E/F7yrhL7iX2E8l/FU5
LiX8Be8sdFDCX/BzQjcl/AW/JnRWwl/wucIXJfwFV+47VuljGvyFb2WhZ9Z/
7uHC/oLPMMwojjYK5r/x6XBlUtNKv+AveOrYuEm+GYnsL/jP0QltjtVJZX/B
3UK26TmdSWV/wc/v1C8rOZXM/oIfuLhuVZMBJ9hf8KXehsMWHY5gf8FXznR9
nWK3i/0FXyI4+wu+WGyH/QXfL36X/QVXiv1kf1WOi/0F/yV0YH/Bzwjd2F/w
KUJn9hd8jvCF/QVfZGe6ocJH9hf+mK7fc6vHAGf2F7xv3rhHBYsO8XGCTz5R
cnxLxfWFv/HZr/h160nBJ9lf8HvRN49W+gV/wbvfNDrX3CmF/QX3jPifu9Gy
JPYXPLeRTr/NUgL7Cz6vqcPNwjHh7C+47vDRrY499mF/wX/aVHH2F3yO2A77
q/K77K/KfrK/KsfF/oLnCR3YX3CF0I39BXcWOrO/4EOFL+wvuO/fPyp9ZH/h
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
Wq5ofXxZnjQotuFVzQh5fjDj79FDg5bcl85PSNWd895Kgs6fV5rM3enxUBp2
PdO940tZ5xZRP3atm/tYsjpXuPzf3bLOU3qdHOJ+J1fyvlNjUodL8vygj+uW
OQ5Z96SBJg8WaPaV5wfT/Jx2jbyRLzUNn9TGrYU8P1h0oWuS9ZUH0vS7U/xd
rsvzVi2Kde9bXHwkWa6+X1TaUJ4f7GOav3vbo6fS4ll57SwdDrG+Y84NDNvw
4Jn01G+Hcmj4MdYZnyWlXaPLlsayzqveNb629N5zaVHx7wnn/WJYZ9/1Gx7M
z30hPdMLH7/yXgTr3MXGuWfBlqfSuqvXFo05Esc6D356fdgD72dS/PmldmsC
5PzG5H96TM7ZWCDt2hK65Gv4PNZ5YZ3geZnrn0unkzS0bS/L943NR2t4ZXi9
kHyiYrY2WnGEdW4399X93t2fSh53dK48L0hknSXNcR+6dn0m2Q2el3hxeSLr
PPHA2T8dLQqkZd6ljfUk+Xxe8Fe7em07P5eubt3Rt3b9SNZ589XdJi3MX0gF
klfykEh5vvtEiZuNQftCacyQ8pQJuZvkdRr/Zk/WN30l9XE/9Fjv7jbW97GJ
1XwNk9dS4+VvYvPHrmOd8anmb5M3vYMNxxs1xv/P72vLt5LJB6t3Xo+9Od6I
aFL0Yeadl9L5jUOGDJh6iHU+F2+v5pJdKO3zXrmuRwcf1vnO0Iv1HLJeSSZN
1J/967+UdX7zuFPb8ZmvJa+rvfIyDdw53vizNKDXyBtvJPO60628M9dyvHHY
aqmvcs1LqfPpEXv+cQ1jnVPuPAlLXVUohTRQv/yho5yvy5o9PCVhxSvJN330
6Foz97DOr9STrkUtey29fWFWWvfYOtb5T0DLh6Geb6QxLqU1f0eOY53NrnxV
27fonaQoLTz+0nobx3WKKVPr7/R4LxWYRvZu0/IQx3V236613TL/g2RXbrTG
OziC47q5O7pbrptbJDX3fxeyv2usPJ9Cn4/2qU9Uzo9nnVu+XXn0g9E7yWTz
BvOOUT4c1/VYV5hS2Oy99OCbvsPZK+s5rhvReOz1J00+SOn2bX19FItZZ5e4
Mw/zGhVJ6mdC3S5u3M86/zPE9GN2w4+S62odixHnI1nnRrU1hw++9la63K+Z
Y3QHP47ruoTNc7S+8k5yGNl7udGDQxzXDe2bN7/X5ffStl02LexnHOG4burt
AessLn6QGivXXzRvJo8H/5kV49fhQpFUuK/wXd3svfz8yx7R/+G/U4qlQLOx
dreDD7POjv6ertseFUs/8h0bxa6IZZ1fFRwv8nb8JLl3/GoxJSuRdV7U+dk/
Gx58knro5r3pfkQeD5YvN1T3cvgsbcnM+RpUX563GvloY2zv7sXS2scz9tez
Oc4632t/ulfPk8XSgK0LPfYWBrHO05Z8PN+16yfJ5OCfthb7XFjnD0qT4V0S
PkmFvvr3ex2RxynLajrc6WjxWQq1ObHdZbs8Trk6/6rXS/1iabPB35lO6fL8
oO3pMv2CLcVS3qYe81MHJLLOT7W7+T3W/SR1f1EaNypInk+ZO9a9+QPvT9Ls
xE2hubPiWOfSwKCj97Q/S+k/p+jH3pTHg7W766Xe0vwibfq7h91/rvJ4MGBt
v/6Z679I+xesWRa8SR53m9xYdP2a+lcpP3bPiNu68rg71jByfIbXV2lwh3nL
grsls859pj16mP7nq/R5fYlW6zJ53gqfoRYn84tOyOPB+v9bV3+5/Rdp3waT
KwcL5fHgIcfkwKX3vkiK5lnLr6+ZwPFGh8h3bRfZfZUK4wfUcwqX560Sv7SK
m5/7VTLwCYzSDZHnrbQm7nRsH/dZWuMxKVinnzw/uOvIpZcmnb9IeYOMSsYN
lMeDzYt+zDeO+SJN18q6+jBdHndH9u5SamT+VQoKqf9sh5U87u6+aca6pse/
SsHaZ69ZdJF1tmme5Vf/2DfJbOtx+x8LD7DOOTO1jAzal0iRfYoXuUXL40Hn
k73Da0WUSAaXvKJCLkayzm/L53fRN/0uKe183o+6Fc46ew4PS9U++l0yO9Nx
8ZhPwazzpZh6bso136S575Lcm+yNlvMb9Gl5yL3karp8Pt8ftHpZ6qoSaX2L
/320HbKQdXbddUI96VeJZFbv/KJvfj6sc/GDV9sSVnyXXg8dkmy+7gDrrJDs
LOfYfpPy1H7OePz2BOt8c9v2CzPvfJMmL8hLXqMnz3fb3z0/fMa4EmnamrTT
7T1jWOcXxiV3nLNLpMk6kb397oayzh7zOjo5jfkulXxx2/QtTM4jbdLat8Bu
VKl08E346n6XF7POBmNulI7LLJXs7U54vDowjXUOPKi2fvTIH9KW938XOmf9
w88/01c9ao68UXHeTW5Y1uOGnBc90XXOnmHDf0oG3UvXbF5+gM9jtX35/TVM
SqUDbcwOtZ3nJ4+7n9W5UX6kVIofP6P5WTv5/oxPqstmnUOWLX/0PfiH5Ebf
h87ml2Ldvrb8KdnS9qHzqnZGDWJ/fJfsaH+gs97icUFRy0qlbNp/6LwnbbNp
xPdS6QUdL3RuVeNcXKjnD8mZ9IHO0RM+WwZ/+yHdIj2h84X3jiP2f/kpaXwV
+kPnkZa+OXsX/ZLsyS/onLfhipPvpwpO/kLnaVm/C308fkvj6HyAzkVNu3ps
//hbuknnD3S2WhNsNPjaT+kanW/Q+cq13PD+w35J5nR+Qt9xDWtaWF/5Jf0x
qn4+47M8SJz/0Nk9eumAXpd/S4PpeoHOqXVffCw+9FPSp+sLOg+a3GT5B6Nf
UjRdj9D5VvgojbeBv6RadP1CZ8fPG7YXNvstRdH1Dp1f9zvV4PmB31IPuj9A
57KcNu0eBpRJR+h+Ap23tJoUn9eoXAqk+w90bjDXp3fuvnLJme5X0PlQysX0
7IZ/pFy6v0FnM80fI/7b80daTfdD6LzMbeaPzfPLpGZ0/4TOmicC12/8UCb9
pPstdPYpy665bm65pNek+v25iY3u3tXvyqXldD+HzvjcR/d/6Pz1e9SNboPK
pHf0vIDOXgOf2lpcLJMG0PMFOtfa2fCx+YBy6T49j6BzwP3hMztcKJcO0vML
OpuYehW3VfyRvOl5B52DpixdV7elmuI8PR+h8zQtg4x/p6gpZtHzFDq3j4qq
UeuQmqInPX+h84fRg0dve6SmeELPa+h88tsTPz0jdcUeer5DZ4d2/rNf6qsp
EikegM6tMv+Km26jptD2E/EDdH656OaXZ1vUFPGB1eONqMYzLZ2vqinaU3wC
fT3S1Fc/1lVXrKF4BjpbPF0Y4fnmj7SD4h/o/Hjv+IDe3dUUfSlegs5hfYse
pixWU8yj+Ao6z362xbjnSTVFOcVj0Nlicxu3xM9qiv0Uv0HnM7ftP8YvVFc8
pniP8xvLvnTrkqCuaErxobxe1GdZTLG6IoDiSehc81L7cx0tNBS+FH9C5+xZ
F9WjFmgoDK1FvMrn88EVed6O6gpfim+hs3X/hkbageoKa4qHobPmqziXDQ/U
Fe0nVY+fr+4YHq7eTEPxneJt6OzT9eXbtQ4aih0Un/O6AvosongeOv/W76Xz
wFtdYUnxP3ROj8sePilDXeFO4wXovGXC3J33tDUURTS+gM6jfunkTBisoehO
4xHonD/EymncJQ3FLRq/QOdD7++G3NLUVOTTeAc6z/BdWDhqoKZiPo2PoHMH
y1odM9drKjbSeAo6f3wUvmBEuqZCh8Zf0Hlf3SlD2sdpKEYYiPEadHZMKt0W
XlQRZ10T4zvobDzZL8uks6ZCQ2U8WKjWuUHoPE1FNxo/Qufo8Kv2xjGairk0
3oS+tnlru5Tvr4gvaHwKnfH59JAYz3L83CYp9WdjTcX9ZWL8C53Dr40uW2av
qTCn8TJ0nrvgbf/v/poKFxpfQ+fvp1ve+GKopXhF43HofNb5dN1FdhV+0vid
19fpTLAt3qul8KDxPnQeGv0xYH6ulmIk5Qegc+1x2x69b6CtmEH5BOicuKF/
4jV1LYUX5R+g84oOD0uH9tdSXKB8BXSWsjz7ZXhVxFmbq+c3tJb+b/2g81qK
XZQPgc7Xm0ZnpP+p+D7lT3j9xsjpQYffayqUlG+Bvpafy54ZmWspHCk/A53x
+Z7yOdD5Ur9uc5oer/CB8j/QedvzzLiAt1qKZZQvgs4Nu2j23jtLW9GL8kvQ
+X5O0Or6x7QVLpSPgs7BKyzTd7/WVjSi/BV0dm11R8egvY4C+S7o3DFj3gif
mTqKrZQfg863v5u0nmOrrRhI+TToHBCkdHvjp62YQvk36Ow00OH4zDvaiuBh
1fN1rd98/fiyno7CjPJ70Pm1z87uM8bpKK5SPhA67zo/pGZ/SVthQPlDXs/v
9my0co22woTyjTxOqbVqT780bcUvyk9CZ3zOoHwmdI6cmGDUp5+OIozyn9C5
W2hheM+zOgobypdC59Jh694l/tJRIL/K6xiLmll066urWE75WOi8YU/ykoQV
uopHlL+FzjZ9xp7qclpXMYjyvdC5eI7erloROopBlB+Gzsn/C83ZVqij+EL5
ZOi8MqVfE31TXcUO8+r5Z4VTntNmV12FKeWrobOO5uIj2kd1FfmU3+Z1Mt3N
lhfs1lE4Uj4cOi+5f+mcc7aO4hTlz6FzH6+pGk8MdBWzKd8OfdVMfw5xGqOr
eEf5eeiMzyLK50PnsY2uN8iro6foS/l/6Gx4bsYku1F6iqs0X8D552l/gnL+
1VOcovkF6BxCdV0PaT4COs+M7d4uu5a+4tYlMX8Bnes8fVcW80NXsZjmO6Bz
zibvAea99RQNZ4n5Eei8n+rpXqvMp0zJPnOjfaqewsdNzL9AZ5N/7Awivusp
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
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
rokql7w9Wt9UrvRR9P5p5f7/A3R038Q=
          "]], Polygon3DBox[CompressedData["
1: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
Unp/cJxZScPAfdAkaJP+Ov8D1rLahxprQ07nXQh3JX/pmjWVNQBaYH7w88mF
T2VtBs/fU6P3R6DR0GqHRdeH8BjxGrtFa0s0F9rr6GhtiuZEex4TrU3RrGjX
rtH+H5wZ7kz9A+2H59pH3++oaO3GOZ2Fj43WymhctO5x0f4kGhotfWQ098YX
xOv+354Aff9Pg58vPg9cG84Nn6TGhd/0ZXAtG/8TbY3nTq0JfxMvEU+xR2l/
9sHMNZpjhSfpmp90fXfhNsLdo/cbsEeE/QU9onMrOZRcio8Gl4XTwveoH+F9
44H3Kq0r0RZoDPQA/j+5F0/6gtJ5gnyBJkF/oAPhSjVTvj08unZJzewQ9Eg0
F6ZOR620GRyF9Sq8unI+RyuhmX5P+RyucWCK9+hFvKk2KV+xH+RP9fuk++Op
z1T/mGA/HX6G1wTnhfs+pmMfqb83nJHcJHwQ8xmuXFlPwiXgFOtFe4J4g4PI
rZX9O7gF+YdaPJ4z3jMeNrW/rYU7sF517A/up/ab8Okab6vx43XNyMxzpJtw
l2h/F42AVjgi2k/GV6a2jGeOd47HTS0RjYvW/SB4fawpvV7nBn/etBQb0ZDo
u8Y6tqf6t+r4b5U1LFr2kuB6XONord5S7V8de7N0fBmn/iJie/T+CjQ92h4f
AC4Fp0KvNYzmqzvDWYN9BrgMnAa+Qs4idxHTPiidM8mdxOT3S+dUcisx9L3S
MYRcTHwltvAdLkkcnO9GDEWjUWP7f359cdJoc4Xvr6yJttF3KJk/wu/m/n2b
lc6Z5E5iKv4hMX9g4ojkAmI83AFNSuwnxhJriXHod3JCv6QhyRXjhN8hv7Pm
S9cIqRWOIweWrvFS631Y+NzSnj7ePvWB00rXyKiVUROjNsmcpRbE+mYuUyOj
VkaNjVolNQNqB9SMLirNl7cpXAPoVzpHkivhGEtK1wSoDVBz6F+6xkyt+RFi
fumaHrW98Wk9UxOhNnJXii93VfbI0E9rgnMKuYU58nXpnIRmp2ZJriLHnpc4
LbmXHAbHRdOT28jJ5yTOSq6+t7LH1zjNP3LouYnzklvHVvbsmms8lK45UXui
5kSt8p7KHhz685/gGhS1qFEpXo6p7Nnh+RXolcqeYTPhvHTOJHeSM78qvZ/r
2MI5Cv/5zsoeYt00v+FYcC04xGelOQ3cBg7ySWn/Y2jhnPxlaU4EN4JTfFqa
I8IV4QT463AQPAk8B7gJHAbPA08DbsMapXYOp2Pt3l3ZY0Q/r9Vn3VHZE0af
/5FyMh4Jngm5mpjVtXCOJ5ahUcnP84LjHTUval/UnKjNU4OiFkW9ido5ngC1
Gjx1vILZ+rt55vWF3zA95eceiR+gGaamnMFeou0r52v2ZJHP8CinpJzHXiQ8
YLxgroefvo9mL+w5VdGeEzUd9DxeFJ413jUeFHuJqDFRa6KmRO0LDxwvHI+F
vUgjUo4lx7GXaVaKn3iG9aPrOHg9PH/8IHxBtBbzDz3VINqP3lbtt2DfFG+K
+TwyeWB4pvgdeGP4hmgx5jf68LTC+YP1gZ9FHQovi/eDf8XeQWodxDP8JupO
eFPEF/wsfH+8J+Ib/hl1K7wu5gd+GHUDvDPiFf4Ufjx7hqgpnly6RkaOPzvl
K+preP74J6uC/ee5wjsQs0tzQGqL1PPghnC0QwprKLjbA8LzyAU8g9Icn70j
1CTh/uwBYC8A/IF6H3tW2LtCPfis0jVdarvU288kfgu/ofvtxDMSflh4vvDu
vJPSe1rY28Kel56l97yw92Vs4ifUjKkdU5Nm7wr1+YOFPxS+r7RGofY7J7N2
eTW3V0Y8wf+Hr6I14GRws1dye/vEB+oJt1euCeCnrQ6uiVMbnyF8XemaMLVh
OAf1o4eE38ydDzcsXZOnNg9foj6KJmPvAvVQtBo1eWrz1PCvLr2fbc/CNfjh
pWv41PKp4V9VOkeihx4Nzp1N+X3Cd5B31Z+Zu7ZBvKM+8XG0toNjw7XfjPbS
iIHEQn4Dz+qM9NsOjOaO1Nvwez6J5uZwJrjTvvhFmetX+EkTdexrjXXkmZZ+
BsyVM4OfzUc6v3VmjTk+8Q1ifZPM9YFto3MzHAR/6OBornSG2gHkY/zlzBwK
LrVD6fFN8CYr+7ffw8d0bHeN7RH9XfCbqBduX/r6jfFOdP5X0ecu0zVPM7eJ
AZnrW+yXQfOifeGY1CN4h+2IrYXfLddwLc9gD95PdO4hh5HLWBMHCP9eeK3s
EM0191GrXZrjwnXhuPhVraN/K7+J39Y0Ora2UIusR+HdMq8J1sZe0d+V77yz
xttEe+nU6KjV7R3tveCx47XPj57rcCK40T7RXjceDV5Ns+jYRoyjvvJB9NqD
08BtVpT2C6YH6//domuh1FypveLJwa+nBvsX8EFyJTU46jM/lta3Lwfzz6/x
SzNrFLTKxpVjFxwMLvYZ/qLGP9exJ+BGwvtmrv9QH4ZDsb+lczC3Ys4z99EQ
v8E/op//Z8KPa+zDaG4GB4QLUu/+NPc5DeAv6AP1v9KxCZXnMPN/g+C5DUdg
/v5ceL3AIVhPvxTmFujBCzP7o9TzXo/2ruFMcCc4DfP7x8LzA47C91lRmLug
0bi+TvDzQC+hZfBr2T+KRulCiA9ef+R83s8PhbkAGhgvh2eMNoajMV+WF/58
OAux6PvCXIZ8tmXmmi/7K4hpxPIlKdbNi+YWcCq+H+8c7wcNwVzAYyNXfFfY
e5sTzT3gSNz/1ejcgifH+Nxo7ghn4fu+Fu3VEVP5vF2i11f7zPXwL4QPyRxT
eP7opQHCA9WOLl2zoLaPv4CeYz0cmXn/APXphqXXdwx+/+QQ3u/fhdcP643n
eYTajhprVHotV8HzbQF+mfC3uePFl8KdhRfnjjfkKObn6sK5a+vS83n94PmD
xiD+rC083+Bk5LalhbkaHgf3o4hBPMZz4/P+Kxwf8QTxBvEEl5aOMcyHLYNj
DxyYeLyyMDfGE8E7wuPDK0HzEG9+LbzeWXNoPzw91iK/id/GdyA2okl5vg2D
4yu/kd/aJcUjNA3vY03heMB3Qi9PCf6us6NzIxyU37dNdO2Tmij1i0Oj90qy
R5O9mmgetMtBwVqI908u4R3wLljD+D+vBq9t4ifviu/DWkCToI0ODtYqzaPn
DnOIWI3mQX+/GKyF3orO5WgA1uuu0XtF2IPBXozdo/8/AHs82OtBjob7nBqc
u9mPghagBkAtAM7Ps3wqaYEDovensweIvUBwFLRap2DugkabwdwNSbtF5ybm
CHOFfEvsIAYQC7aP/v8w1EiolbSI/v841JSpX8KPHyn8jNaJ5lDst+wYzK3Q
1Gi/x4K1NvGTtcEaqVtagzO3Hk/aHE3C2n4yWKugcclNzwVr352j9wax54e9
P2gWcuPTwVqGNUasZU2w9naK3hvEnh729sD50LaHBnPBraP3OlDTp7aPJoXr
dAvWqqwhYjFzjrWFpsJ/nhistdDs+OlPBGv5UNlvRuOgdcif5FrWAGuB/Ebu
IIesw2+LrrWxh4e9POz/QhstzlyrQRPhBZHT1iY+QuxhjbRN/AJuRI4gV7wb
HT/hsMQDYgi5q12azy2j92Kxh4m9TK2i9wqxR4u9Wv/T3LyfYC3eMXo/MXt4
2cu7XXStjBrarmm+E8/xXKgVvhcdX+Cc8BPqW7cX5oS/luZr5BJiCLEEzwhv
FY8LL+mg6P9vwB4A9gLASRh7LZirtI+u7bCngL0FcG64/WHBXPyd6HyAJoDv
tIvee0DNkNrhftF7pahBUouE46IVTgnmvm2j985RA6UWimcC1+0S7KW8Hc1l
8QCId3tG//8Q9lyx9wrPC6+NmIQX1iF6LwM1KWpTeWV+i4ZBy6DxeTaTg7U/
HI/Y+Uow94MPsnf6EmJKaY8Ebn5ESPvzK3tFeFJ4U3ggcI9nkzcCR2c//cnB
3L1T9F5X9oyzd/z/ABWCEDU=
          "]], Polygon3DBox[CompressedData["
1:eJwt13WcFtUeB+BlFxBEGkRSKSklJVRSWGqXWhokL6VSCiYhoBJXwBuKCgbd
qXR7aTAI6fZS0iFdPvPh/HH2/fye93tmZuedE5O3Y6+knrExMTE7tRTaNn8u
gZ3JYmLKq2OSx8QcZhniYmKusY6oGDvGnmaxsu+wKmwk+4S1ZOfZIraVXVBv
1/cFdt/377LePmvwHWys3NusB6vGfmFjWF/WnVVlP7Mv2Gg2jLVmF9kS9in7
mLVg59hCNooNZa3YBbaYdWOvspJsCRvEtrDz6t9cXxl2z/cF2TW2iRVjqeT6
sbd9V4fvZePZZ2w4e5VdYkvZZnZO/au+pdld3//MLrNdrAJLJvcru8p2s5dY
HOvD3pCvwrexz9kv7Ir6d7kXWSzbxM5G94mVYnf0+ZYt9vlPXoKfkDvBqrEC
bIpcK9aRJbFn2Qz2FpvE1rLP2cv6Xmb92TusLtsnN4GdY3XZ82w+68yGsUGs
CTvF5rGP2QDWiP3BZrHhbDBryk6z+WwI68casGNsBvuI9WcN2XE2kxVmt8P/
G93T9Gwo+1CuMT/J5rIxbBrrx3LKbmdj2QL2CSvEDrGv2Gw2iOVle9gz7E/1
QnXucE8ns598fsEr8ityR1kOdl/dW+5FNoC9yxLk9rOJ7Cd2nC1iXWRzRuNA
S2Ql2A9yXeXOswRWnC1gXdhZVoc9x+axTuwIy8puOdbrrAzrxJqzYiH3HjvO
KrO8bCJrxtqw2iwXGxeOV5Tdj8ZfGOdZ2Hi2Qu4zXpafZX+wKiwfmyTXgp1i
NVih8Ay1Zf9nVVl+Npm1ZCfZK9F4YlNZazaBrWT/YuWc4xxrz+qFa47O0Z2d
ZvGsMJvJ2rEzrCYrwmax9uwya8jKsGWsJ+vMWoT7Fz2n77MrrBF7gS1nvdhF
Vp+VCvNBdN5LrAErzZayHmwge48lsgNsEvuT1WJF2WzWgY1gQ1gzdoYtYIPZ
B6w+O8qms0LsVjSnhfGbjuVjF9lqlj/Mu2vYUX1/5J14dvX72lusZjSfiH0j
9xdrxl5ka9nbLG9Kx2ITWIK+59l1uZasIlsf7ktBuc1sFmspd4cVk3sQ1oBo
vsoajQ+5VXLjed3wuxWXi2V71FXkcrFrrCmrILeG9WUJLB+7Ifcaq8nqsrzs
OuvG4lkd9gz7i3VlNVgu513EvnK8yvwoWya3n81hbVgmdQG59WwaS2LX5BJ5
fnYzjJla7AZrxSrJbWAfsPz6rmNTWSPZqyw1+zbMEc+wn6L7wg6ztawvy+pY
JbQ4tldd1fFyyyWX+yrMQzn4cpaKfcM+ZHnYGpaWTWAfswJsA3uCjWcfsfxs
PUvDvmdDWD62jt103tasMtvovP3YLdY2rKHRejmYZdd3Pvsvq6DvfvYUm8f+
w8qzfexx9h0bHObE/0XPJFvDJrJEdoHddo527JWwTg9hOeUWsi9ZJbkj7I5c
e1Y9WgvlPmK55ZaycayG3Em2Uu4Qm8/ah3uaR24Z+4bFs1NyK/hBNo+1Y1mi
/Yfc8mjtYzXZablGvDC7F+bnemwW28q+k6vDH7CmrBh7qO4r14iVZqnYIVaT
5Wf3WGdWO1qD2QhWlT3Fzsu1ZhVYNZadXWCvhnWhCSvKHrA+rCFLYkXC+vEm
q8/usk6sVhjTw1lDVojdlevFElkz9lxctAkwxn0kseosJ7sk145VZKvZEfaD
3D/4U9Fcr70W5rBojRot94C9zuqFee0ztpwdYHNZW30zR3O9lotdVreXqySX
wr3/mvUPa+1KVjP67djVsE+M9oT1WUF2m/VgdVkLVjzsHd9lTdhsto19H+aX
h6w5e54lC3vMxiyH8/7IxoQ1+TBrIPcsu6PuKZfA4lludoV1YJXZY/qOYwP1
zc1Xs5RsLBvAcrFVbJG+u9kM1oKlVX+nLWGfspLh2d3ObkT3U13NOR6P1lXH
2ye3gvfk6aP9h7aDTQnzS0r1b9r1aG8V5o3U+s5hP4c5Npqzow15eS0d+0Nd
DxWVi3WO98O+82JYj0rJPcYOysWzfGw/S8n+ZM3Y06wcS8uOs0RWhCVzvL6s
eVi3vmVr5Y6xhayzbA71Ou2kenPYF//l+/XsFNvCnmPXozXb8X71uSCM6WQy
87Xt0Z6KNWQp1L20ruzlsB6Nct7urCMrF62FbBh7g3VgZdkqNpS9xtqEtXtp
mOt6s25hfdsQnvGerAt7ia1jI9k+loKdcR1NWR42jW1gX8tV57fYdLaRjQ3z
1e1o7fa//RLmq3bhN9qgnVZvVT+Pbvh+IzvDtrHi7GY0d0W/u89JvAFPHj23
jreFzWat2F3nKMJ2scVh7/hYtP/Q3mTxsY/e1cbJvcQyspMyjVlJFqNvL5YU
9t5fskxsenh2S4R9cUY2lY1gRdk2VtbxnmDH1An6FmZVWDZ2jrVi5dlV1oSV
D79RH5bB8aaw4ayI7FaWmc1gI8OY2cGysllsNCvNdrF0bBIbGvbom1l6NpkN
Y4XZFvYkmxP3aO9YNuzbs7CZbBQrxXaybGwu+3fYY+5lO1zzzWieU7/imtOw
3exh7KOxlRj2OXtSRC9j9rNhvD3J9rJk7ASrz7Kxl1kmdoo1YaVYZfYkO8ta
snKsIsvMTodnrTQ7yNKwi2GtKMgOsfRh7uwQxvkStjfszVqFueSA9nhYZ6K1
p4DcYraHzQx7uHTqXdpd9RF1LbkMcg9Zz7hH72XRu1X0jr2Q/c6ms+ayT0T7
GfdvIOvAboT3t538jvpwWBujd7Df2b1oX8tqs4xsBtsU1vj4sJ8sw1LHPepb
K1zz32lIGD0=
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ktLlFEAx+EzOlNqXsoUHMKFuwLFL6Cg9AU0EvdR0BDU1kC7aN5Ku6iI
aYtGrTEiIkpChpAQS7t4KZe2iL5AIuK259DiN89/9c6cd07dhWvnriZCCI/1
zIg762NM1fZ+YQhneDQZQjNPsZ2NvMSzvM5RddpZXuEib3Kd4/zFHPeY8uy8
neYmG/iHrTxkB4+lQshwUjn1aE4zuqFPBZ7Pz7zFNd7mOnv5hX28o692P79x
gN85yA0Oxd/AYd7Vln2P2xzhD47yJ+9zhw84pQU91LyeqFu1fvdlFvM8D5yn
hb9ZH7+bNUxqyf4b3zt3+Yhr7OE7ZviUI+qwu9jKi2xgG9Nsiu+Upznhuc9V
Zc9yWiftVVZyhSf4kce5zAp+YDnLlLdLuRT/B75nCRfjufiWRfFO6I19hK/p
yOFVPBtf0tUJL1gQ71fi//36B3bQTN8=
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1011, 1310, 1010, 740, 1012, 1475, 1685, 1013, 1476, 1686, 
       1014, 1477, 1687, 1015, 1478, 1688, 1016, 1311, 1017, 1580, 1312, 1018,
        1479, 1689, 1019, 1480, 1690, 1020, 1481, 1691, 1021, 1482, 1692, 
       1022, 1313, 1023, 1581, 1314, 1024, 1483, 1693, 1025, 1484, 1694, 1026,
        1485, 1695, 1027, 1486, 1696, 1028, 1315, 1029}], 
      Line3DBox[{1031, 1316, 1030, 1582, 1317, 1032, 756, 1033, 1487, 1697, 
       1034, 1488, 1698, 1035, 1489, 1699, 1036, 1318, 1037, 1583, 1319, 1038,
        1584, 1320, 1039, 1490, 1700, 1040, 1491, 1701, 1041, 1492, 1702, 
       1042, 1321, 1043, 1585, 1322, 1044, 1586, 1323, 1045, 1493, 1703, 1046,
        1494, 1704, 1047, 1495, 1705, 1048, 1324, 1049}], 
      Line3DBox[{1051, 1325, 1050, 1587, 1326, 1052, 1588, 1327, 1053, 772, 
       1054, 1496, 1706, 1055, 1497, 1707, 1056, 1328, 1057, 1589, 1329, 1058,
        1590, 1330, 1059, 1591, 1331, 1060, 1498, 1708, 1061, 1499, 1709, 
       1062, 1332, 1063, 1592, 1333, 1064, 1593, 1334, 1065, 1594, 1335, 1066,
        1500, 1710, 1067, 1501, 1711, 1068, 1336, 1069}], 
      Line3DBox[{1071, 1337, 1070, 1595, 1338, 1072, 1596, 1339, 1073, 1597, 
       1340, 1074, 788, 1075, 1502, 1712, 1076, 1341, 1077, 1598, 1342, 1078, 
       1599, 1343, 1079, 1600, 1344, 1080, 1601, 1345, 1081, 1503, 1713, 1082,
        1346, 1083, 1602, 1347, 1084, 1603, 1348, 1085, 1604, 1349, 1086, 
       1605, 1350, 1087, 1504, 1714, 1088, 1351, 1089}], 
      Line3DBox[{1091, 1352, 1090, 1606, 1353, 1092, 1607, 1354, 1093, 1608, 
       1355, 1094, 1609, 1356, 1095, 804, 1096, 1357, 1097, 1610, 1358, 1098, 
       1611, 1359, 1099, 1612, 1360, 1100, 1613, 1361, 1101, 1614, 1362, 1102,
        1363, 1103, 1615, 1364, 1104, 1616, 1365, 1105, 1617, 1366, 1106, 
       1618, 1367, 1107, 1619, 1368, 1108, 1369, 1109}], 
      Line3DBox[{1111, 1370, 1110, 1505, 1715, 1112, 1506, 1716, 1113, 1507, 
       1717, 1114, 1508, 1718, 1115, 1509, 1719, 1116, 1371, 1117, 835, 1118, 
       1510, 1720, 1119, 1511, 1721, 1120, 1512, 1722, 1121, 1513, 1723, 1122,
        1372, 1123, 1620, 1373, 1124, 1514, 1724, 1125, 1515, 1725, 1126, 
       1516, 1726, 1127, 1517, 1727, 1128, 1374, 1129}], 
      Line3DBox[{1131, 1375, 1130, 1621, 1376, 1132, 1518, 1728, 1133, 1519, 
       1729, 1134, 1520, 1730, 1135, 1521, 1731, 1136, 1377, 1137, 1622, 1378,
        1138, 851, 1139, 1522, 1732, 1140, 1523, 1733, 1141, 1524, 1734, 1142,
        1379, 1143, 1623, 1380, 1144, 1624, 1381, 1145, 1525, 1735, 1146, 
       1526, 1736, 1147, 1527, 1737, 1148, 1382, 1149}], 
      Line3DBox[{1151, 1383, 1150, 1625, 1384, 1152, 1626, 1385, 1153, 1528, 
       1738, 1154, 1529, 1739, 1155, 1530, 1740, 1156, 1386, 1157, 1627, 1387,
        1158, 1628, 1388, 1159, 867, 1160, 1531, 1741, 1161, 1532, 1742, 1162,
        1389, 1163, 1629, 1390, 1164, 1630, 1391, 1165, 1631, 1392, 1166, 
       1533, 1743, 1167, 1534, 1744, 1168, 1393, 1169}], 
      Line3DBox[{1171, 1394, 1170, 1632, 1395, 1172, 1633, 1396, 1173, 1634, 
       1397, 1174, 1535, 1745, 1175, 1536, 1746, 1176, 1398, 1177, 1635, 1399,
        1178, 1636, 1400, 1179, 1637, 1401, 1180, 883, 1181, 1537, 1747, 1182,
        1402, 1183, 1638, 1403, 1184, 1639, 1404, 1185, 1640, 1405, 1186, 
       1641, 1406, 1187, 1538, 1748, 1188, 1407, 1189}], 
      Line3DBox[{1191, 1408, 1190, 1642, 1409, 1192, 1643, 1410, 1193, 1644, 
       1411, 1194, 1645, 1412, 1195, 1539, 1749, 1196, 1413, 1197, 1646, 1414,
        1198, 1647, 1415, 1199, 1648, 1416, 1200, 1649, 1417, 1201, 899, 1202,
        1418, 1203, 1650, 1419, 1204, 1651, 1420, 1205, 1652, 1421, 1206, 
       1653, 1422, 1207, 1654, 1423, 1208, 1424, 1209}], 
      Line3DBox[{1211, 1425, 1210, 1540, 1750, 1212, 1541, 1751, 1213, 1542, 
       1752, 1214, 1543, 1753, 1215, 1544, 1754, 1216, 1426, 1217, 1545, 1755,
        1218, 1546, 1756, 1219, 1547, 1757, 1220, 1548, 1758, 1221, 1549, 
       1759, 1222, 1427, 1223, 930, 1224, 1550, 1760, 1225, 1551, 1761, 1226, 
       1552, 1762, 1227, 1553, 1763, 1228, 1428, 1229}], 
      Line3DBox[{1231, 1429, 1230, 1655, 1430, 1232, 1554, 1764, 1233, 1555, 
       1765, 1234, 1556, 1766, 1235, 1557, 1767, 1236, 1431, 1237, 1656, 1432,
        1238, 1558, 1768, 1239, 1559, 1769, 1240, 1560, 1770, 1241, 1561, 
       1771, 1242, 1433, 1243, 1657, 1434, 1244, 946, 1245, 1562, 1772, 1246, 
       1563, 1773, 1247, 1564, 1774, 1248, 1435, 1249}], 
      Line3DBox[{1251, 1436, 1250, 1658, 1437, 1252, 1659, 1438, 1253, 1565, 
       1775, 1254, 1566, 1776, 1255, 1567, 1777, 1256, 1439, 1257, 1660, 1440,
        1258, 1661, 1441, 1259, 1568, 1778, 1260, 1569, 1779, 1261, 1570, 
       1780, 1262, 1442, 1263, 1662, 1443, 1264, 1663, 1444, 1265, 962, 1266, 
       1571, 1781, 1267, 1572, 1782, 1268, 1445, 1269}], 
      Line3DBox[{1271, 1446, 1270, 1664, 1447, 1272, 1665, 1448, 1273, 1666, 
       1449, 1274, 1573, 1783, 1275, 1574, 1784, 1276, 1450, 1277, 1667, 1451,
        1278, 1668, 1452, 1279, 1669, 1453, 1280, 1575, 1785, 1281, 1576, 
       1786, 1282, 1454, 1283, 1670, 1455, 1284, 1671, 1456, 1285, 1672, 1457,
        1286, 978, 1287, 1577, 1787, 1288, 1458, 1289}], 
      Line3DBox[{1291, 1459, 1290, 1673, 1460, 1292, 1674, 1461, 1293, 1675, 
       1462, 1294, 1676, 1463, 1295, 1578, 1788, 1296, 1464, 1297, 1677, 1465,
        1298, 1678, 1466, 1299, 1679, 1467, 1300, 1680, 1468, 1301, 1579, 
       1789, 1302, 1469, 1303, 1681, 1470, 1304, 1682, 1471, 1305, 1683, 1472,
        1306, 1684, 1473, 1307, 994, 1308, 1474, 1309}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{425, 725, 426, 740, 455, 755, 1582, 470, 770, 1587, 485, 785,
        1595, 500, 800, 1606, 515, 815, 530, 1715, 830, 545, 845, 1621, 560, 
       860, 1625, 575, 875, 1632, 590, 890, 1642, 605, 905, 620, 1750, 920, 
       635, 935, 1655, 650, 950, 1658, 665, 965, 1664, 680, 980, 1673, 695, 
       995, 710}], 
      Line3DBox[{427, 726, 428, 1685, 741, 456, 756, 471, 771, 1588, 486, 786,
        1596, 501, 801, 1607, 516, 816, 531, 1716, 831, 546, 1728, 846, 561, 
       861, 1626, 576, 876, 1633, 591, 891, 1643, 606, 906, 621, 1751, 921, 
       636, 1764, 936, 651, 951, 1659, 666, 966, 1665, 681, 981, 1674, 696, 
       996, 711}], 
      Line3DBox[{429, 727, 430, 1686, 742, 457, 1697, 757, 472, 772, 487, 787,
        1597, 502, 802, 1608, 517, 817, 532, 1717, 832, 547, 1729, 847, 562, 
       1738, 862, 577, 877, 1634, 592, 892, 1644, 607, 907, 622, 1752, 922, 
       637, 1765, 937, 652, 1775, 952, 667, 967, 1666, 682, 982, 1675, 697, 
       997, 712}], 
      Line3DBox[{431, 728, 432, 1687, 743, 458, 1698, 758, 473, 1706, 773, 
       488, 788, 503, 803, 1609, 518, 818, 533, 1718, 833, 548, 1730, 848, 
       563, 1739, 863, 578, 1745, 878, 593, 893, 1645, 608, 908, 623, 1753, 
       923, 638, 1766, 938, 653, 1776, 953, 668, 1783, 968, 683, 983, 1676, 
       698, 998, 713}], 
      Line3DBox[{433, 729, 434, 1688, 744, 459, 1699, 759, 474, 1707, 774, 
       489, 1712, 789, 504, 804, 519, 819, 534, 1719, 834, 549, 1731, 849, 
       564, 1740, 864, 579, 1746, 879, 594, 1749, 894, 609, 909, 624, 1754, 
       924, 639, 1767, 939, 654, 1777, 954, 669, 1784, 969, 684, 1788, 984, 
       699, 999, 714}], 
      Line3DBox[{435, 730, 436, 745, 1580, 460, 760, 1583, 475, 775, 1589, 
       490, 790, 1598, 505, 805, 1610, 520, 820, 535, 835, 550, 850, 1622, 
       565, 865, 1627, 580, 880, 1635, 595, 895, 1646, 610, 910, 625, 1755, 
       925, 640, 940, 1656, 655, 955, 1660, 670, 970, 1667, 685, 985, 1677, 
       700, 1000, 715}], 
      Line3DBox[{437, 731, 438, 1689, 746, 461, 761, 1584, 476, 776, 1590, 
       491, 791, 1599, 506, 806, 1611, 521, 821, 536, 1720, 836, 551, 851, 
       566, 866, 1628, 581, 881, 1636, 596, 896, 1647, 611, 911, 626, 1756, 
       926, 641, 1768, 941, 656, 956, 1661, 671, 971, 1668, 686, 986, 1678, 
       701, 1001, 716}], 
      Line3DBox[{439, 732, 440, 1690, 747, 462, 1700, 762, 477, 777, 1591, 
       492, 792, 1600, 507, 807, 1612, 522, 822, 537, 1721, 837, 552, 1732, 
       852, 567, 867, 582, 882, 1637, 597, 897, 1648, 612, 912, 627, 1757, 
       927, 642, 1769, 942, 657, 1778, 957, 672, 972, 1669, 687, 987, 1679, 
       702, 1002, 717}], 
      Line3DBox[{441, 733, 442, 1691, 748, 463, 1701, 763, 478, 1708, 778, 
       493, 793, 1601, 508, 808, 1613, 523, 823, 538, 1722, 838, 553, 1733, 
       853, 568, 1741, 868, 583, 883, 598, 898, 1649, 613, 913, 628, 1758, 
       928, 643, 1770, 943, 658, 1779, 958, 673, 1785, 973, 688, 988, 1680, 
       703, 1003, 718}], 
      Line3DBox[{443, 734, 444, 1692, 749, 464, 1702, 764, 479, 1709, 779, 
       494, 1713, 794, 509, 809, 1614, 524, 824, 539, 1723, 839, 554, 1734, 
       854, 569, 1742, 869, 584, 1747, 884, 599, 899, 614, 914, 629, 1759, 
       929, 644, 1771, 944, 659, 1780, 959, 674, 1786, 974, 689, 1789, 989, 
       704, 1004, 719}], 
      Line3DBox[{445, 735, 446, 750, 1581, 465, 765, 1585, 480, 780, 1592, 
       495, 795, 1602, 510, 810, 1615, 525, 825, 540, 840, 1620, 555, 855, 
       1623, 570, 870, 1629, 585, 885, 1638, 600, 900, 1650, 615, 915, 630, 
       930, 645, 945, 1657, 660, 960, 1662, 675, 975, 1670, 690, 990, 1681, 
       705, 1005, 720}], 
      Line3DBox[{447, 736, 448, 1693, 751, 466, 766, 1586, 481, 781, 1593, 
       496, 796, 1603, 511, 811, 1616, 526, 826, 541, 1724, 841, 556, 856, 
       1624, 571, 871, 1630, 586, 886, 1639, 601, 901, 1651, 616, 916, 631, 
       1760, 931, 646, 946, 661, 961, 1663, 676, 976, 1671, 691, 991, 1682, 
       706, 1006, 721}], 
      Line3DBox[{449, 737, 450, 1694, 752, 467, 1703, 767, 482, 782, 1594, 
       497, 797, 1604, 512, 812, 1617, 527, 827, 542, 1725, 842, 557, 1735, 
       857, 572, 872, 1631, 587, 887, 1640, 602, 902, 1652, 617, 917, 632, 
       1761, 932, 647, 1772, 947, 662, 962, 677, 977, 1672, 692, 992, 1683, 
       707, 1007, 722}], 
      Line3DBox[{451, 738, 452, 1695, 753, 468, 1704, 768, 483, 1710, 783, 
       498, 798, 1605, 513, 813, 1618, 528, 828, 543, 1726, 843, 558, 1736, 
       858, 573, 1743, 873, 588, 888, 1641, 603, 903, 1653, 618, 918, 633, 
       1762, 933, 648, 1773, 948, 663, 1781, 963, 678, 978, 693, 993, 1684, 
       708, 1008, 723}], 
      Line3DBox[{453, 739, 454, 1696, 754, 469, 1705, 769, 484, 1711, 784, 
       499, 1714, 799, 514, 814, 1619, 529, 829, 544, 1727, 844, 559, 1737, 
       859, 574, 1744, 874, 589, 1748, 889, 604, 904, 1654, 619, 919, 634, 
       1763, 934, 649, 1774, 949, 664, 1782, 964, 679, 1787, 979, 694, 994, 
       709, 1009, 724}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
Or5qgrP5w7tbB4zBwqNGD3SnlMDBurI8t3EikNne70aOG+CShWs/Lt9WCOpu
didickVw98XnsChuAQ57dnNle8ksyPKfH3nbnINsk40X9+1Zil0OGpz1VQ4B
n6nHtEO5/9Y7knVk68OonSHEDjI7nbaJ7Ytj6L5nC4ifBcRPZH5uEY8LWVwM
hwiCAzIcGG4dCG7IcOvcneC8leCMDOey8yRfliRfKMyXV+dx8/h8JbF8XV/r
tMI4Phk2Lh+rApVR0LRUdpu/K19P1nyrmJyYAp5Hx3k8sD6mraW+WfZDCN/n
m8RKNcbGQ+dXL3VaTTOg3vaq7gieF1QHfDdf2TUc4h0+3Xr7LQ9meNVfFPXk
wDw42LNG8g6M3C+bf/F+AWxe9+j4A553S4Q1B4Y9tUfZ3lHVAQMKoevHoO7r
S/jzbOBpt/F1AFbUv9n96Uo+rHL8LaPVKgLlwu1B+8Oi8cOK2MkxLjnQ4tV5
Ro4m7+dhu+/y0ojTl89+1S4iGV7qH0juZslBj8cqY4ZYpKC1//OCLtq+8Hn3
y2XB9/9bP0rWka07UTtTiR1kdkbQfd+TfZHte576WU78ROaninhcyOI6KI4D
bqI4vKS4IcENGW5JFOeuBGd8S3G+RvO1k+QLhfnK25D9J19JLF+zMvadyZuZ
Bc5b0q/oSgAoKBgNDzHjYMmzIQMXncuGaqNtXUdN+j3j7LFoW4Vd/L41l5qO
WqfBgdd2Pj/K9GHcy2P71/E8Wm/TEpW4ifEAbkqNF86tBcMgm223CjkYeiwt
X+WsH9x/r6gqUb8Jwr/kvL7cykFFqvOS23bOGOOqblObuBn0Kx/1buDfqSWN
o1x6yUTgocPxd59HboQBQdXTXr7m4LNmyN0lD3nci9Ob+6QbQuG2uiOTYjlw
Dxui+D0gA6WWTZNfP3UBeF63UYvjeeX6731FOZrZ2MFvV0NF7zHgZmcforD3
v/VM37Z1ZOvMTot+mx1kdr6K74tsXwNxP5H5+UE8LmRx9aI4hBEckOGwkOK2
lOCGDLd4cZyR4awjni8U5mtSuUo3Pl+JLF9lKzVC1o5NhupAgw59FKKwWM94
thnPX9yHmbS/oJwCn6e4+NTdN0s6ekn0dkIUB9qrryU618TBkklWW06EpePl
YSc6LtrBgYpq5qXXZ8MALN6ezW7IRcfdZfXJyhx8X/PCufCyJ3Qp2JvZoXMB
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
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{251.25001326214624`, 240.},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->
   NCache[{{0, Pi}, {0, Pi}, {-0.09931806531337138, 0.09931806531337138}}, {{
     0, 3.141592653589793}, {0, 3.141592653589793}, {-0.09931806531337138, 
     0.09931806531337138}}],
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-1.0624007267926268`, 1.9072612191725888`, 2.5949295438510065`},
  
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.756309993943387*^9, {3.756326134137076*^9, 3.756326137205574*^9}, 
   3.756326177731349*^9, 3.756326896986508*^9}]
}, Open  ]],

Cell["13. 0.1 x y(\[Pi] - x)(\[Pi] - y)", "Text",
 CellChangeTimes->{{3.756222667119479*^9, 3.7562227186771507`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"c", "=", "1"}], ";", " ", 
  RowBox[{
   SubscriptBox["\[Lambda]", "mn"], "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"c", " ", "\[Pi]", " ", 
     SqrtBox[
      RowBox[{
       FractionBox[
        SuperscriptBox["m", "2"], 
        SuperscriptBox["\[Pi]", "2"]], "+", 
       FractionBox[
        SuperscriptBox["n", "2"], 
        SuperscriptBox["\[Pi]", "2"]]}]]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.756333449562058*^9, 3.75633345318451*^9}}],

Cell[BoxData[
 SqrtBox[
  RowBox[{
   SuperscriptBox["m", "2"], "+", 
   SuperscriptBox["n", "2"]}]]], "Output",
 CellChangeTimes->{3.756333455659925*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{"0.1", " ", "x", " ", "y", 
   RowBox[{"(", 
    RowBox[{"\[Pi]", "-", "x"}], ")"}], 
   RowBox[{"(", 
    RowBox[{"\[Pi]", "-", "y"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.756333932644566*^9, 3.756333967407055*^9}}],

Cell[BoxData[
 RowBox[{"0.1`", " ", 
  RowBox[{"(", 
   RowBox[{"\[Pi]", "-", "x"}], ")"}], " ", "x", " ", 
  RowBox[{"(", 
   RowBox[{"\[Pi]", "-", "y"}], ")"}], " ", "y"}]], "Output",
 CellChangeTimes->{3.756333970266221*^9}]
}, Open  ]],

Cell[TextData[{
 "The expression in the cell below is not complete, because I have pulled out \
a factor of .4/",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Pi]", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " to save for later."
}], "Text",
 CellChangeTimes->{{3.75633603406958*^9, 3.7563360843788233`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Bmnl", "=", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", "0", "\[Pi]"], 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "\[Pi]"], " ", 
    RowBox[{"x", " ", "y", 
     RowBox[{"(", 
      RowBox[{"\[Pi]", "-", "x"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"\[Pi]", "-", "y"}], ")"}], 
     RowBox[{"Sin", "[", 
      RowBox[{"m", " ", "x"}], "]"}], 
     RowBox[{"Sin", "[", 
      RowBox[{"n", " ", "y"}], "]"}], 
     RowBox[{"\[DifferentialD]", "x"}], 
     RowBox[{"\[DifferentialD]", "y"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.756333521953884*^9, 3.7563335596203527`*^9}, {
  3.756335340267308*^9, 3.756335372658149*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "2"}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"m", " ", "\[Pi]"}], "]"}]}], "+", 
     RowBox[{"m", " ", "\[Pi]", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"m", " ", "\[Pi]"}], "]"}]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "2"}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"n", " ", "\[Pi]"}], "]"}]}], "+", 
     RowBox[{"n", " ", "\[Pi]", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"n", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
  RowBox[{
   SuperscriptBox["m", "3"], " ", 
   SuperscriptBox["n", "3"]}]]], "Output",
 CellChangeTimes->{{3.756333525027775*^9, 3.756333560803423*^9}, {
  3.756335347934619*^9, 3.7563353756105824`*^9}}]
}, Open  ]],

Cell["\<\
Now as for the cell above: I want to save the denominator, and to evaluate \
the numerator:\
\>", "Text",
 CellChangeTimes->{{3.75633609921833*^9, 3.756336126065531*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"m", " ", "\[Pi]"}], "]"}]}], "+", 
      RowBox[{"m", " ", "\[Pi]", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"m", " ", "\[Pi]"}], "]"}]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"n", " ", "\[Pi]"}], "]"}]}], "+", 
      RowBox[{"n", " ", "\[Pi]", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"n", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", "1", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "1", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.75633557220007*^9, 3.756335628273817*^9}, {
  3.756335691961403*^9, 3.756335693880129*^9}, {3.756335760806301*^9, 
  3.756335803436187*^9}}],

Cell[BoxData["16"], "Output",
 CellChangeTimes->{
  3.756335696922409*^9, {3.7563357691796722`*^9, 3.75633580465135*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"6.4", "/", ".4"}]], "Input",
 CellChangeTimes->{{3.7563359178924294`*^9, 3.75633592144018*^9}}],

Cell[BoxData["16.`"], "Output",
 CellChangeTimes->{3.756335923276754*^9}]
}, Open  ]],

Cell[TextData[{
 "Combining the operations above means that I have a total leading factor now \
of ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    FractionBox["6.4", 
     SuperscriptBox["\[Pi]", "2"]],
    FontSize->21], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", and all that is left of Bmnl is ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    FractionBox["1", 
     RowBox[{
      SuperscriptBox["m", "3"], 
      SuperscriptBox["n", "3"]}]],
    FontSize->21], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.756336315732542*^9, 3.756336362721627*^9}, {
  3.756336671887569*^9, 3.756336707230734*^9}}],

Cell[BoxData[
 RowBox[{"outeq", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"partialu", "[", 
      RowBox[{"j_", ",", "k_", ",", "x_", ",", "y_", ",", "t_"}], "]"}], ":=", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"n", "=", "1"}], "k"], 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"m", "=", "1"}], "j"], 
       RowBox[{"Bmn", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"m", " ", "x"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"n", " ", "y"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          SqrtBox[
           RowBox[{
            SuperscriptBox["m", "2"], "+", 
            SuperscriptBox["n", "2"]}]], " ", "t"}], "]"}]}]}]}]}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"m", ",", 
       RowBox[{"n", "\[Element]", "OddQ"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.756333678930258*^9, 3.7563337013122063`*^9}, 
   3.7563337833366337`*^9, {3.756334773261692*^9, 3.7563347740926857`*^9}, {
   3.7563349647202873`*^9, 3.7563350169018393`*^9}, {3.756335258607689*^9, 
   3.756335262638073*^9}, {3.756336436337406*^9, 3.75633644060026*^9}}],

Cell[BoxData[
 RowBox[{"outeq1", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"partialu", "[", 
      RowBox[{"j_", ",", "k_", ",", "x_", ",", "y_", ",", "t_"}], "]"}], ":=", 
     RowBox[{
      FractionBox["6.4", 
       SuperscriptBox["\[Pi]", "2"]], 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"n", "=", "1"}], "k"], 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"m", "=", "1"}], "j"], 
        RowBox[{
         FractionBox["1", 
          RowBox[{
           SuperscriptBox["m", "3"], 
           SuperscriptBox["n", "3"]}]], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"m", " ", "x"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"n", " ", "y"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           SqrtBox[
            RowBox[{
             SuperscriptBox["m", "2"], "+", 
             SuperscriptBox["n", "2"]}]], " ", "t"}], "]"}]}]}]}]}]}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"m", ",", 
       RowBox[{"n", "\[Element]", "OddQ"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.756336449314543*^9, 3.756336497735198*^9}, {
  3.756336530038266*^9, 3.7563366154581547`*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell["The above green cell matches the answer of the text.", "Text",
 CellChangeTimes->{{3.756336746437372*^9, 3.7563367569972343`*^9}}],

Cell["14 - 19 Rectangular Membrane", "Text",
 CellChangeTimes->{{3.7562227754684753`*^9, 3.756222786267198*^9}}],

Cell["\<\
17. Find eigenvalues of the rectangular membrane of sides a = 2 and b = 1 to \
which there correspond two or more different (independent) eigenfunctions.\
\>", "Text",
 CellChangeTimes->{{3.756222792108182*^9, 3.7562228399452477`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[Lambda]", "mn"], "=", 
  RowBox[{"c", " ", "\[Pi]", " ", 
   SqrtBox[
    RowBox[{
     FractionBox[
      SuperscriptBox["m", "2"], "4"], "+", 
     FractionBox[
      SuperscriptBox["n", "2"], "1"]}]]}]}]], "Input",
 CellChangeTimes->{{3.7563875922727747`*^9, 3.756387605894081*^9}, {
  3.756387645583643*^9, 3.756387716595787*^9}}],

Cell[BoxData[
 RowBox[{"c", " ", 
  SqrtBox[
   RowBox[{
    FractionBox[
     SuperscriptBox["m", "2"], "4"], "+", 
    SuperscriptBox["n", "2"]}]], " ", "\[Pi]"}]], "Output",
 CellChangeTimes->{3.756387722099538*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eig", "[", 
   RowBox[{"m_", ",", "n_"}], "]"}], "=", 
  RowBox[{
   FractionBox[
    SuperscriptBox["m", "2"], "4"], "+", 
   SuperscriptBox["n", "2"]}]}]], "Input",
 CellChangeTimes->{{3.756393982636598*^9, 3.756394004635159*^9}, {
  3.756394263914735*^9, 3.756394268135857*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   SuperscriptBox["m", "2"], "4"], "+", 
  SuperscriptBox["n", "2"]}]], "Output",
 CellChangeTimes->{3.756394005948599*^9, 3.756394269745369*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     SuperscriptBox["m", "2"], "4"], "==", 
    SuperscriptBox["n", "2"]}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", "n"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.756394633046768*^9, 3.756394651827318*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "svars"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Equations may not give solutions for all \\\"solve\\\" \
variables. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Solve/svars\\\", \
ButtonNote -> \\\"Solve::svars\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.756394653162161*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"n", "\[Rule]", 
     RowBox[{"-", 
      FractionBox["m", "2"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", "\[Rule]", 
     FractionBox["m", "2"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.756394653168515*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"eig", "[", 
    RowBox[{"m", ",", "n"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "16"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "14"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.756394174519384*^9, 3.756394223249275*^9}, {
  3.756394342805526*^9, 3.7563943618608103`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"260", ",", "200"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"320", ",", "260"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7563942246047783`*^9, 3.7563942733112707`*^9, 
  3.7563943636436462`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eig", "[", 
  RowBox[{"10", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.756394865913512*^9, 3.756394871771925*^9}}],

Cell[BoxData["50"], "Output",
 CellChangeTimes->{3.756394873318465*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"eig", "[", 
    RowBox[{"m", ",", "n"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4", ",", "6", ",", "8"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.756395040624177*^9, 3.756395070149666*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "5", ",", "10", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "8", ",", "13", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "13", ",", "18", ",", "25"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", "20", ",", "25", ",", "32"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.756395072257963*^9}]
}, Open  ]],

Cell[TextData[{
 "So for example ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Lambda]", 
     RowBox[{"8", ",", "3"}]], "   "}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "=    ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Lambda]", 
    RowBox[{"6", ",", "4"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "  = ",
 Cell[BoxData[
  RowBox[{"c", " ", 
   SqrtBox["25"], " ", "\[Pi]"}]],
  CellChangeTimes->{3.756387722099538*^9}],
 ". These are much smaller m,n than the text uses in its answer, but if I \
understand correctly, they are okay."
}], "Text",
 CellChangeTimes->{{3.7563958301980257`*^9, 3.756395991367651*^9}, {
  3.7563960589014053`*^9, 3.756396061157345*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[TextData[{
 "19. Deflection. Find the deflection of the membrane of sides a and b with \
",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["c", "2"], "=", "1"}], TraditionalForm]]],
 " for the initial deflection\n",
 Cell[BoxData[
  RowBox[{
   RowBox[{"f", 
    RowBox[{"(", 
     RowBox[{"x", ",", "y"}], ")"}]}], "=", 
   RowBox[{
    RowBox[{"Sin", "[", 
     FractionBox[
      RowBox[{"6", " ", "\[Pi]", " ", "x"}], "a"], "]"}], 
    RowBox[{"Sin", "[", 
     FractionBox[
      RowBox[{"2", " ", "\[Pi]", " ", "y"}], "b"], "]"}], " ", 
    StyleBox["and",
     FontFamily->"Charter"], 
    StyleBox[" ",
     FontFamily->"Charter"], 
    StyleBox["initial",
     FontFamily->"Charter"], 
    StyleBox[" ",
     FontFamily->"Charter"], 
    StyleBox["velocity",
     FontFamily->"Charter"], 
    StyleBox[" ",
     FontFamily->"Charter"], 
    StyleBox["0.",
     FontFamily->"Charter"]}]}]], "Text",
  CellChangeTimes->{{3.756222922719983*^9, 3.756222980840273*^9}},
  Background->RGBColor[1, 0.9, 0.8]]
}], "Text",
 CellChangeTimes->{{3.756222877185458*^9, 3.756222914502887*^9}, {
  3.769103231135551*^9, 3.769103232369322*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"c", "=", "1"}], ";", " ", 
  RowBox[{
   SubscriptBox["\[Lambda]", "mn"], "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"c", " ", "\[Pi]", " ", 
     SqrtBox[
      RowBox[{
       FractionBox[
        SuperscriptBox["m", "2"], 
        SuperscriptBox["a", "2"]], "+", 
       FractionBox[
        SuperscriptBox["n", "2"], 
        SuperscriptBox["b", "2"]]}]]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.756402876993863*^9, 3.756402884531711*^9}}],

Cell[BoxData[
 RowBox[{
  SqrtBox[
   RowBox[{
    FractionBox[
     SuperscriptBox["m", "2"], 
     SuperscriptBox["a", "2"]], "+", 
    FractionBox[
     SuperscriptBox["n", "2"], 
     SuperscriptBox["b", "2"]]}]], " ", "\[Pi]"}]], "Output",
 CellChangeTimes->{3.7564028950163527`*^9, 3.7565800977132196`*^9, 
  3.756580131247822*^9, 3.756580192173337*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{
   RowBox[{"Sin", "[", 
    FractionBox[
     RowBox[{"6", " ", "\[Pi]", " ", "x"}], "a"], "]"}], 
   RowBox[{"Sin", "[", 
    FractionBox[
     RowBox[{"2", " ", "\[Pi]", " ", "y"}], "b"], "]"}]}]}]], "Input",
 CellChangeTimes->{3.756402910117028*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Sin", "[", 
   FractionBox[
    RowBox[{"6", " ", "\[Pi]", " ", "x"}], "a"], "]"}], " ", 
  RowBox[{"Sin", "[", 
   FractionBox[
    RowBox[{"2", " ", "\[Pi]", " ", "y"}], "b"], "]"}]}]], "Output",
 CellChangeTimes->{3.756402919219544*^9, 3.756580100463607*^9, 
  3.7565801983309727`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["B", "mn"], "=", 
  RowBox[{
   FractionBox["4", 
    RowBox[{"a", " ", "b"}]], 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "b"], 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "a"], 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"x", ",", "y"}], "]"}], 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"m", " ", "\[Pi]", " ", "x"}], "a"], "]"}], 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"n", " ", "\[Pi]", " ", "y"}], "b"], "]"}], 
      RowBox[{"\[DifferentialD]", "x"}], 
      RowBox[{"\[DifferentialD]", "y", "  "}]}]}]}]}]}]], "Input"],

Cell[BoxData[
 FractionBox[
  RowBox[{"48", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"m", " ", "\[Pi]"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"n", " ", "\[Pi]"}], "]"}]}], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "36"}], "+", 
     SuperscriptBox["m", "2"]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "4"}], "+", 
     SuperscriptBox["n", "2"]}], ")"}], " ", 
   SuperscriptBox["\[Pi]", "2"]}]]], "Output",
 CellChangeTimes->{3.756403028386897*^9, 3.756580105525853*^9, 
  3.756580203030822*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"u", "[", 
   RowBox[{"x_", ",", "y_", ",", "t_", ",", "j_", ",", "k_"}], "]"}], "=", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"m", "=", "1"}], "j"], 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"n", "=", "1"}], "k"], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["B", "mn"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["\[Lambda]", "mn"], "t"}], "]"}]}], ")"}], 
     RowBox[{"Sin", "[", 
      FractionBox[
       RowBox[{"m", " ", "\[Pi]", " ", "x"}], "a"], "]"}], 
     RowBox[{"Sin", "[", 
      FractionBox[
       RowBox[{"n", " ", "\[Pi]", " ", "y"}], "b"], "]"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.756403200096837*^9, 3.756403211318185*^9}, {
  3.756580072197679*^9, 3.7565800781251574`*^9}, {3.756580145444017*^9, 
  3.756580173864715*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.756403216872614*^9, {3.7565800793529453`*^9, 3.756580134866341*^9}, {
   3.7565801769519777`*^9, 3.7565802055031757`*^9}}]
}, Open  ]],

Cell["\<\
This problem has exactly the same problem as problem 11, and I have not yet \
figured out how to avoid it.\
\>", "Text",
 CellChangeTimes->{{3.75640324608508*^9, 3.75640329732041*^9}, {
  3.756412109422838*^9, 3.756412109892027*^9}}]
},
WindowSize->{1366, 843},
WindowMargins->{{4, Automatic}, {Automatic, 4}},
Magnification:>1.5 Inherited,
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 10, \
2015)",
StyleDefinitions->"Charter1.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 218, 5, 51, "Text",
 Evaluatable->False],
Cell[621, 20, 158, 4, 86, "Text"],
Cell[782, 26, 739, 22, 115, "Text"],
Cell[1524, 50, 89, 1, 51, "Text"],
Cell[1616, 53, 138, 2, 75, "Text"],
Cell[1757, 57, 73, 1, 45, "Input"],
Cell[1833, 60, 411, 9, 86, "Text"],
Cell[2247, 71, 870, 24, 82, "Text"],
Cell[3120, 97, 112, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[3257, 102, 580, 15, 79, "Input"],
Cell[3840, 119, 586, 18, 78, "Output"]
}, Open  ]],
Cell[4441, 140, 270, 6, 51, "Text"],
Cell[CellGroupData[{
Cell[4736, 150, 864, 25, 54, "Input"],
Cell[5603, 177, 408, 12, 106, "Output"]
}, Open  ]],
Cell[6026, 192, 981, 24, 123, "Text"],
Cell[7010, 218, 148, 2, 75, "Text"],
Cell[CellGroupData[{
Cell[7183, 224, 695, 19, 80, "Input"],
Cell[7881, 245, 714, 21, 78, "Output"]
}, Open  ]],
Cell[8610, 269, 430, 10, 52, "Text"],
Cell[CellGroupData[{
Cell[9065, 283, 537, 14, 45, "Input"],
Cell[9605, 299, 403, 11, 78, "Output"]
}, Open  ]],
Cell[10023, 313, 232, 4, 86, "Text"],
Cell[CellGroupData[{
Cell[10280, 321, 432, 13, 47, "Input"],
Cell[10715, 336, 331, 10, 104, "Output"]
}, Open  ]],
Cell[11061, 349, 127, 1, 51, "Text"],
Cell[11191, 352, 378, 10, 87, "Text"],
Cell[11572, 364, 145, 2, 75, "Text"],
Cell[11720, 368, 135, 1, 51, "Text"],
Cell[11858, 371, 1809, 53, 210, "Text"],
Cell[13670, 426, 1024, 28, 152, "Text"],
Cell[14697, 456, 1113, 30, 117, "Text"],
Cell[15813, 488, 73, 1, 45, "Input"],
Cell[15889, 491, 118, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[16032, 496, 317, 9, 47, "Input"],
Cell[16352, 507, 374, 8, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16763, 520, 382, 10, 45, "Input"],
Cell[17148, 532, 84582, 1386, 243, "Output"]
}, Open  ]],
Cell[101745, 1921, 122, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[101892, 1926, 1557, 39, 104, "Input"],
Cell[103452, 1967, 11285, 270, 1386, "Output"]
}, Open  ]],
Cell[114752, 2240, 459, 15, 47, "Input"],
Cell[115214, 2257, 186, 2, 51, "Text"],
Cell[CellGroupData[{
Cell[115425, 2263, 683, 18, 114, "Input"],
Cell[116111, 2283, 457, 11, 64, "Output"]
}, Open  ]],
Cell[116583, 2297, 129, 3, 51, "Text"],
Cell[116715, 2302, 1398, 37, 152, "Input"],
Cell[CellGroupData[{
Cell[118138, 2343, 679, 20, 75, "Input"],
Cell[118820, 2365, 1767, 35, 577, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[120624, 2405, 320, 5, 45, "Input"],
Cell[120947, 2412, 3782, 90, 297, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[124766, 2507, 146, 3, 49, "Input"],
Cell[124915, 2512, 83, 1, 45, "Output"]
}, Open  ]],
Cell[125013, 2516, 597, 10, 120, "Text"],
Cell[125613, 2528, 185, 4, 51, "Text"],
Cell[125801, 2534, 114, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[125940, 2539, 170, 3, 45, "Input"],
Cell[126113, 2544, 347, 5, 45, "Output"]
}, Open  ]],
Cell[126475, 2552, 283, 9, 52, "Text"],
Cell[CellGroupData[{
Cell[126783, 2565, 857, 23, 79, "Input"],
Cell[127643, 2590, 609, 18, 111, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128289, 2613, 684, 21, 79, "Input"],
Cell[128976, 2636, 407, 11, 78, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[129420, 2652, 696, 19, 79, "Input"],
Cell[130119, 2673, 407, 10, 77, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[130563, 2688, 197, 4, 45, "Input"],
Cell[130763, 2694, 711, 20, 111, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131511, 2719, 724, 24, 99, "Input"],
Cell[132238, 2745, 688, 23, 87, "Output"]
}, Open  ]],
Cell[132941, 2771, 207, 5, 51, "Text"],
Cell[CellGroupData[{
Cell[133173, 2780, 486, 14, 91, "Input"],
Cell[133662, 2796, 486, 10, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[134185, 2811, 1302, 34, 125, "Input"],
Cell[135490, 2847, 1588, 50, 248, "Output"]
}, Open  ]],
Cell[137093, 2900, 152, 3, 51, "Text"],
Cell[137248, 2905, 661, 11, 86, "Text"],
Cell[137912, 2918, 2092, 60, 229, "Input"],
Cell[140007, 2980, 233, 5, 51, "Text"],
Cell[CellGroupData[{
Cell[140265, 2989, 442, 8, 45, "Input"],
Cell[140710, 2999, 1872, 54, 224, "Output"]
}, Open  ]],
Cell[142597, 3056, 190, 4, 51, "Text"],
Cell[142790, 3062, 1093, 26, 103, "Input"],
Cell[CellGroupData[{
Cell[143908, 3092, 554, 9, 45, "Input"],
Cell[144465, 3103, 720, 15, 88, "Output"]
}, Open  ]],
Cell[145200, 3121, 328, 6, 86, "Text"],
Cell[CellGroupData[{
Cell[145553, 3131, 424, 11, 47, "Input"],
Cell[145980, 3144, 262, 7, 45, "Output"]
}, Open  ]],
Cell[146257, 3154, 669, 19, 72, "Input"],
Cell[CellGroupData[{
Cell[146951, 3177, 309, 6, 45, "Input"],
Cell[147263, 3185, 431, 11, 88, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[147731, 3201, 893, 25, 104, "Input"],
Cell[148627, 3228, 90632, 1481, 382, "Output"]
}, Open  ]],
Cell[239274, 4712, 153, 2, 75, "Text"],
Cell[239430, 4716, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[239528, 4721, 494, 15, 91, "Input"],
Cell[240025, 4738, 154, 5, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[240216, 4748, 320, 9, 47, "Input"],
Cell[240539, 4759, 227, 6, 45, "Output"]
}, Open  ]],
Cell[240781, 4768, 327, 9, 52, "Text"],
Cell[CellGroupData[{
Cell[241133, 4781, 667, 18, 76, "Input"],
Cell[241803, 4801, 817, 25, 77, "Output"]
}, Open  ]],
Cell[242635, 4829, 180, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[242840, 4837, 988, 28, 75, "Input"],
Cell[243831, 4867, 121, 2, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[243989, 4874, 119, 2, 45, "Input"],
Cell[244111, 4878, 73, 1, 45, "Output"]
}, Open  ]],
Cell[244199, 4882, 658, 23, 123, "Text"],
Cell[244860, 4907, 1218, 31, 146, "Input"],
Cell[246081, 4940, 1297, 37, 203, "Input"],
Cell[247381, 4979, 136, 1, 51, "Text"],
Cell[247520, 4982, 112, 1, 51, "Text"],
Cell[247635, 4985, 281, 5, 110, "Text"],
Cell[247919, 4992, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[248017, 4997, 376, 11, 92, "Input"],
Cell[248396, 5010, 218, 7, 92, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[248651, 5022, 316, 9, 79, "Input"],
Cell[248970, 5033, 184, 5, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[249191, 5043, 297, 9, 79, "Input"],
Cell[249491, 5054, 442, 9, 34, "Message"],
Cell[249936, 5065, 295, 10, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[250268, 5080, 471, 14, 45, "Input"],
Cell[250742, 5096, 274, 8, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[251053, 5109, 146, 3, 45, "Input"],
Cell[251202, 5114, 71, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[251310, 5120, 460, 14, 45, "Input"],
Cell[251773, 5136, 425, 12, 45, "Output"]
}, Open  ]],
Cell[252213, 5151, 753, 24, 114, "Text"],
Cell[252969, 5177, 1188, 39, 147, "Text"],
Cell[254160, 5218, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[254258, 5223, 487, 15, 91, "Input"],
Cell[254748, 5240, 359, 11, 91, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[255144, 5256, 351, 11, 76, "Input"],
Cell[255498, 5269, 323, 9, 76, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[255858, 5283, 647, 20, 80, "Input"],
Cell[256508, 5305, 548, 18, 87, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[257093, 5328, 872, 25, 93, "Input"],
Cell[257968, 5355, 175, 3, 45, "Output"]
}, Open  ]],
Cell[258158, 5361, 243, 5, 51, "Text"]
}
]
*)


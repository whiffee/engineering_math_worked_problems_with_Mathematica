(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    451632,      10488]
NotebookOptionsPosition[    436816,      10019]
NotebookOutlinePosition[    437204,      10036]
CellTagsIndexPosition[    437161,      10033]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
Note: In this problem set, expressions in green cells match corresponding \
expressions in the text answers.\
\>", "Text",
 Evaluatable->False,
 CellChangeTimes->{{3.769276456043653*^9, 3.7692764584769497`*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[TextData[{
 "3. Mapping w=",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["z", "3"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". Draw an analog of figure 378 for w=",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["z", "3"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.760387151267124*^9, 3.7603871892178097`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[TextData[{
 "Although there is no text answer for this problem, it is covered in the \
s.m. The mapping will be from the z-plane to the w-plane. According to polar \
convention, for the distance and angle projections, the terminology will be \
z=r",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and w=R ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". The mapping transformation consists in"
}], "Text",
 CellChangeTimes->{{3.760387214033208*^9, 3.7603872292244864`*^9}, {
  3.760395533333589*^9, 3.760395596330124*^9}, {3.760395639282255*^9, 
  3.760395740757667*^9}, {3.760395867826847*^9, 3.760395904160236*^9}, {
  3.760397813812862*^9, 3.760397820915101*^9}, {3.760397865817891*^9, 
  3.760397888609027*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"R", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]]}], "=", 
  RowBox[{
   SuperscriptBox["r", "3"], 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", "3", " ", "\[Theta]"}]]}]}]], "Text",
 CellChangeTimes->{{3.76039590892389*^9, 3.760395959639081*^9}, 
   3.7603960908851337`*^9}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell["Comparing the exponents, I have for distance", "Text",
 CellChangeTimes->{{3.76039682824417*^9, 3.760396855649905*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"w", "[", "z_", "]"}], "=", 
  SuperscriptBox["z", "3"]}]], "Input",
 CellChangeTimes->{{3.760396097038431*^9, 3.760396188935754*^9}, {
  3.7603967889100027`*^9, 3.7603967895805264`*^9}, {3.76039685969796*^9, 
  3.7603968725454607`*^9}}],

Cell[BoxData[
 SuperscriptBox["z", "3"]], "Output",
 CellChangeTimes->{{3.7603961901940107`*^9, 3.7603962058179903`*^9}, 
   3.760396873787126*^9, 3.760397957513782*^9}]
}, Open  ]],

Cell["and for angle", "Text",
 CellChangeTimes->{{3.760396878016811*^9, 3.7603968797692423`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"wa", "[", "\[Theta]_", "]"}], "=", 
  RowBox[{"3", " ", "\[Theta]"}]}]], "Input",
 CellChangeTimes->{{3.760396884317223*^9, 3.760396912161693*^9}}],

Cell[BoxData[
 RowBox[{"3", " ", "\[Theta]"}]], "Output",
 CellChangeTimes->{3.760396915118903*^9, 3.760397960128477*^9}]
}, Open  ]],

Cell["\<\
The analogous example is example 1 on p. 737, with the inner radius 1, the \
outer radius 3/2, and the angle of the sector from \[Pi]/6 to \[Pi]/3. The \
transforming should take place as\
\>", "Text",
 CellChangeTimes->{{3.7603963065806227`*^9, 3.760396397104869*^9}, {
  3.760396528036524*^9, 3.760396538260275*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"innerrad", "=", 
  RowBox[{"w", "[", "1", "]"}]}]], "Input",
 CellChangeTimes->{{3.760396558552997*^9, 3.76039656876331*^9}, {
  3.7603969252337723`*^9, 3.760396925440097*^9}, {3.76039792385614*^9, 
  3.760397924232045*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.760396571781252*^9, 3.760396926692998*^9, 
  3.76039796354706*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"outerrad", "=", 
  RowBox[{"w", "[", 
   FractionBox["3", "2"], "]"}]}]], "Input",
 CellChangeTimes->{{3.760396573878326*^9, 3.7603965903547487`*^9}, {
  3.76039693316791*^9, 3.760396933439795*^9}, {3.76039792865723*^9, 
  3.760397929159762*^9}}],

Cell[BoxData[
 FractionBox["27", "8"]], "Output",
 CellChangeTimes->{3.7603965909847527`*^9, 3.760396934542057*^9, 
  3.760397966328027*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"smallangle", "=", 
  RowBox[{"wa", "[", 
   FractionBox["\[Pi]", "6"], "]"}]}]], "Input",
 CellChangeTimes->{{3.760396600864195*^9, 3.7603966248652477`*^9}, {
  3.760396703385103*^9, 3.7603967036068077`*^9}, {3.7603969415596857`*^9, 
  3.760396943895123*^9}, {3.760397933353104*^9, 3.760397938735598*^9}}],

Cell[BoxData[
 FractionBox["\[Pi]", "2"]], "Output",
 CellChangeTimes->{3.760396625653974*^9, 3.760396704477086*^9, 
  3.760396944897747*^9, 3.7603974915418386`*^9, 3.760397969980399*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"largeangle", "=", 
  RowBox[{"wa", "[", 
   FractionBox["\[Pi]", "3"], "]"}]}]], "Input",
 CellChangeTimes->{{3.760396628117444*^9, 3.760396654400566*^9}, {
   3.76039670999879*^9, 3.760396710262623*^9}, {3.760396951023198*^9, 
   3.7603969511831703`*^9}, 3.760397501582999*^9, {3.760397942383375*^9, 
   3.760397948807362*^9}}],

Cell[BoxData["\[Pi]"], "Output",
 CellChangeTimes->{
  3.7603966549599733`*^9, 3.760396710965188*^9, 3.760396953343575*^9, {
   3.7603974859496098`*^9, 3.760397502820671*^9}, 3.760397973393763*^9}]
}, Open  ]],

Cell["The transform sketch should look something like", "Text",
 CellChangeTimes->{{3.760396982493626*^9, 3.760396991125566*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"RGBColor", "[", 
            RowBox[{
             FractionBox["100", "255"], ",", 
             FractionBox["210", "255"], ",", 
             FractionBox["250", "255"]}], "]"}], ",", 
           RowBox[{"Annulus", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", 
               FractionBox["3", "2"]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               FractionBox["\[Pi]", "6"], ",", 
               FractionBox["\[Pi]", "3"]}], "}"}]}], "]"}]}], "}"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"Circle", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", "1", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             FractionBox["\[Pi]", "2"]}], "}"}]}], "]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Circle", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           FractionBox["1", "2"], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             FractionBox["\[Pi]", "2"]}], "}"}]}], "]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Circle", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           FractionBox["3", "2"], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             FractionBox["\[Pi]", "2"]}], "}"}]}], "]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Circle", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", "2", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             FractionBox["\[Pi]", "2"]}], "}"}]}], "]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2.1", ",", "1.22"}], "}"}]}], "}"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1.15", ",", "2"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
       "}"}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", " ", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2.5", ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "2.5"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Ticks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "2"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Framed", "[", "  ", "\"\<  z-plane \>\"", "]"}], ",", "10", 
         ",", "Blue", ",", 
         RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}]}], "]"}], " ", 
    ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"RGBColor", "[", 
            RowBox[{
             FractionBox["100", "255"], ",", 
             FractionBox["210", "255"], ",", 
             FractionBox["250", "255"]}], "]"}], ",", 
           RowBox[{"Annulus", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", 
               FractionBox["27", "8"]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               FractionBox["\[Pi]", "2"], ",", "\[Pi]"}], "}"}]}], "]"}]}], 
          "}"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Circle", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", "1", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "\[Pi]"}], "}"}]}], "]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Circle", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           FractionBox["27", "8"], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "\[Pi]"}], "}"}]}], "]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Circle", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", "4", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "\[Pi]"}], "}"}]}], "]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "4.5"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"Dashed", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "4.5"}], ",", "0"}], "}"}]}], "}"}], "]"}]}], 
         "}"}], ","}], "}"}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", " ", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4.5", ",", 
           RowBox[{"-", "4.5"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "4.5"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Ticks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "4"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2", ",", "3", ",", 
           "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "2", ",", "3", ",", "4"}], "}"}]}], 
        "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "485"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<u\>\"", ",", "\"\<v\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Framed", "[", "  ", "\"\<  w-plane \>\"", "]"}], ",", "10", 
         ",", "Red", ",", 
         RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}]}], "]"}]}], 
   " ", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7603971324765797`*^9, 3.7603971439135*^9}, {
  3.760397567448484*^9, 3.7603975826213217`*^9}, {3.760397663962796*^9, 
  3.7603976693853693`*^9}, {3.760397712242437*^9, 3.760397764558979*^9}, {
  3.760472537851066*^9, 3.7604725492216387`*^9}, {3.760472584983416*^9, 
  3.7604726245570803`*^9}, {3.760741723727577*^9, 3.7607417318448257`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{
       RGBColor[
        NCache[
         Rational[20, 51], 0.39215686274509803`], 
        NCache[
         Rational[14, 17], 0.8235294117647058], 
        NCache[
         Rational[50, 51], 0.9803921568627451]], 
       InterpretationBox[
        FilledCurveBox[
         BSplineCurve[{{1.2990381056766584`, 0.7499999999999996}, {
          1.0980762113533162`, 1.0980762113533158`}, {0.75, 
          1.299038105676658}, {0.625, 1.0825317547305484`}, {0.5, 
          0.8660254037844386}, {0.7320508075688774, 0.7320508075688772}, {
          0.8660254037844388, 0.49999999999999956`}, {1.0825317547305486`, 
          0.6249999999999998}, {1.2990381056766584`, 0.7499999999999996}}, 
          SplineKnots -> {0, 0, 0, 
            Rational[1, 4], 
            Rational[1, 4], 
            Rational[1, 2], 
            Rational[1, 2], 
            Rational[3, 4], 
            Rational[3, 4], 1, 1, 1}, 
          SplineWeights -> {
           1.333333333333333, 1.5773502691896255`, 2, 2, 2, 
            1.5773502691896255`, 1.333333333333333, 1.333333333333333, 
            1.333333333333333}, SplineDegree -> 2]], 
        Annulus[{0, 0}, {1, 
          Rational[3, 2]}, {Rational[1, 6] Pi, Rational[1, 3] Pi}]]}}, {
      CircleBox[{0, 0}, 1, 
       NCache[{0, Rational[1, 2] Pi}, {0, 1.5707963267948966`}]]}, {
      CircleBox[{0, 0}, 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[{0, Rational[1, 2] Pi}, {0, 1.5707963267948966`}]]}, {
      CircleBox[{0, 0}, 
       NCache[
        Rational[3, 2], 1.5], 
       NCache[{0, Rational[1, 2] Pi}, {0, 1.5707963267948966`}]]}, {
      CircleBox[{0, 0}, 2, 
       NCache[{0, Rational[1, 2] Pi}, {0, 1.5707963267948966`}]]}, {
      Dashing[{Small, Small}], 
      LineBox[{{0, 0}, {2.1, 1.22}}]}, {
      Dashing[{Small, Small}], 
      LineBox[{{0, 0}, {1.15, 2}}]}}, Axes -> True, AxesOrigin -> {0, 0}, 
    PlotRange -> {{2.5, -1}, {-1, 2.5}}, Ticks -> {{{0, 
        FormBox["0", TraditionalForm]}, {1, 
        FormBox["1", TraditionalForm]}, {2, 
        FormBox["2", TraditionalForm]}}, {{0, 
        FormBox["0", TraditionalForm]}, {1, 
        FormBox["1", TraditionalForm]}, {2, 
        FormBox["2", TraditionalForm]}}}, ImageSize -> 200, AxesLabel -> {
      FormBox["\"x\"", TraditionalForm], 
      FormBox["\"y\"", TraditionalForm]}, PlotLabel -> FormBox[
      StyleBox[
       FrameBox["\"  z-plane \"", StripOnInput -> False], 10, 
       RGBColor[0, 0, 1], Background -> GrayLevel[1], StripOnInput -> False], 
      TraditionalForm]],GraphicsBox[{{{
       RGBColor[
        NCache[
         Rational[20, 51], 0.39215686274509803`], 
        NCache[
         Rational[14, 17], 0.8235294117647058], 
        NCache[
         Rational[50, 51], 0.9803921568627451]], 
       InterpretationBox[
        FilledCurveBox[
         BSplineCurve[{{0., 3.375}, {-3.375, 3.375}, {-3.375, 0.}, {-2.1875, 
          0.}, {-1., 0.}, {-1., 1.}, {0., 1.}, {0., 2.1875}, {0., 3.375}}, 
          SplineKnots -> {0, 0, 0, 
            Rational[1, 4], 
            Rational[1, 4], 
            Rational[1, 2], 
            Rational[1, 2], 
            Rational[3, 4], 
            Rational[3, 4], 1, 1, 1}, 
          SplineWeights -> {1., 1., 2, 2, 2, 1., 1., 1., 1.}, SplineDegree -> 
          2]], 
        Annulus[{0, 0}, {1, 
          Rational[27, 8]}, {Rational[1, 2] Pi, Pi}]]}}, {
      CircleBox[{0, 0}, 1, 
       NCache[{0, Pi}, {0, 3.141592653589793}]]}, {
      CircleBox[{0, 0}, 
       NCache[
        Rational[27, 8], 3.375], 
       NCache[{0, Pi}, {0, 3.141592653589793}]]}, {
      CircleBox[{0, 0}, 4, 
       NCache[{0, Pi}, {0, 3.141592653589793}]]}, {
      Dashing[{Small, Small}], 
      LineBox[{{0, 0}, {0, 4.5}}]}, {
      Dashing[{Small, Small}], 
      LineBox[{{0, 0}, {-4.5, 0}}]}, Null}, Axes -> True, 
    AxesOrigin -> {0, 0}, PlotRange -> {{4.5, -4.5}, {-1, 4.5}}, 
    Ticks -> {{{-4, 
        FormBox[
         RowBox[{"-", "4"}], TraditionalForm]}, {-3, 
        FormBox[
         RowBox[{"-", "3"}], TraditionalForm]}, {-2, 
        FormBox[
         RowBox[{"-", "2"}], TraditionalForm]}, {-1, 
        FormBox[
         RowBox[{"-", "1"}], TraditionalForm]}, {0, 
        FormBox["0", TraditionalForm]}, {1, 
        FormBox["1", TraditionalForm]}, {2, 
        FormBox["2", TraditionalForm]}, {3, 
        FormBox["3", TraditionalForm]}, {4, 
        FormBox["4", TraditionalForm]}}, {{0, 
        FormBox["0", TraditionalForm]}, {1, 
        FormBox["1", TraditionalForm]}, {2, 
        FormBox["2", TraditionalForm]}, {3, 
        FormBox["3", TraditionalForm]}, {4, 
        FormBox["4", TraditionalForm]}}}, ImageSize -> 485, AxesLabel -> {
      FormBox["\"u\"", TraditionalForm], 
      FormBox["\"v\"", TraditionalForm]}, PlotLabel -> FormBox[
      StyleBox[
       FrameBox["\"  w-plane \"", StripOnInput -> False], 10, 
       RGBColor[1, 0, 0], Background -> GrayLevel[1], StripOnInput -> False], 
      TraditionalForm]]},
  "RowDefault"]], "Output",
 CellChangeTimes->{
  3.760397012218298*^9, 3.760397527221559*^9, 3.7603975838253508`*^9, {
   3.7603977003963833`*^9, 3.760397765331976*^9}, 3.7603979801014633`*^9, 
   3.7604725501320953`*^9, {3.76047259834511*^9, 3.760472625474201*^9}, 
   3.7607417333086777`*^9}]
}, Open  ]],

Cell["\<\
6 - 9 Mapping of curves
Find and sketch or graph the images of the given curves under the given \
mapping.\
\>", "Text",
 CellChangeTimes->{{3.7603127954974213`*^9, 3.760312824311638*^9}},
 Background->RGBColor[
  0.9600061036087587, 0.9600061036087587, 0.9600061036087587]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"6.", "  ", "x"}], "=", "1"}], ",", "2", ",", "3", ",", "4", ",", 
  " ", 
  RowBox[{"y", "=", "1"}], ",", "2", ",", "3", ",", "4", ",", " ", 
  RowBox[{"w", "=", 
   SuperscriptBox["z", "2"]}]}]], "Text",
 CellChangeTimes->{{3.760312827511928*^9, 3.760312852518777*^9}, 
   3.76031291997589*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell["7.  Rotation. Curves as in problem 6, w = I z", "Text",
 CellChangeTimes->{{3.760312857231189*^9, 3.76031287745434*^9}, 
   3.7603129313672132`*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[TextData[{
 "The contention of the s.m. is that this transformation represents a \
positive rotation by ",
 Cell[BoxData[
  FormBox[
   FractionBox["\[Pi]", "2"], TraditionalForm]],
  FontSize->21],
 ". "
}], "Text",
 CellChangeTimes->{{3.760399182424365*^9, 3.760399215877915*^9}, {
   3.760399269925633*^9, 3.76039928089251*^9}, 3.760469645681484*^9}],

Cell["\<\
Proceeding to define the mapping transformation, which essentially multiplies \
z values by \[ImaginaryI].\
\>", "Text",
 CellChangeTimes->{{3.760467874319188*^9, 3.760467927619285*^9}, {
  3.7604706393439493`*^9, 3.760470640792006*^9}, {3.76047315453139*^9, 
  3.7604731587616787`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"u", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{"Re", "[", 
   RowBox[{"\[ImaginaryI]", 
    RowBox[{"(", 
     RowBox[{"x", "+", 
      RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.760467171714334*^9, 3.7604672176204557`*^9}, {
  3.760467302178832*^9, 3.7604673066084957`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"Im", "[", "x", "]"}]}], "-", 
  RowBox[{"Re", "[", "y", "]"}]}]], "Output",
 CellChangeTimes->{
  3.760467219167424*^9, {3.760467308093049*^9, 3.760467330079411*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"v", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{"Im", "[", 
   RowBox[{"\[ImaginaryI]", 
    RowBox[{"(", 
     RowBox[{"x", "+", 
      RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.760467260769279*^9, 3.760467274978004*^9}, {
  3.760467342983*^9, 3.7604673766159973`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"Im", "[", "y", "]"}]}], "+", 
  RowBox[{"Re", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{
  3.760467276038063*^9, {3.760467349975519*^9, 3.760467377753642*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"u", "[", 
  RowBox[{"1", ",", "y"}], "]"}]], "Input",
 CellChangeTimes->{{3.760467426166967*^9, 3.7604674316187487`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"Re", "[", "y", "]"}]}]], "Output",
 CellChangeTimes->{3.7604674326762123`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"v", "[", 
  RowBox[{"1", ",", "y"}], "]"}]], "Input",
 CellChangeTimes->{{3.760467458640361*^9, 3.7604674653852177`*^9}}],

Cell[BoxData[
 RowBox[{"1", "-", 
  RowBox[{"Im", "[", "y", "]"}]}]], "Output",
 CellChangeTimes->{3.7604674667055197`*^9}]
}, Open  ]],

Cell["\<\
Since by the problem definition the x values are a set of constants (integers \
here),\
\>", "Text",
 CellChangeTimes->{{3.760467951770566*^9, 3.7604679773213377`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"argot", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"u", "[", 
       RowBox[{"c", ",", "y"}], "]"}], ",", 
      RowBox[{"v", "[", 
       RowBox[{"c", ",", "y"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"c", ",", "1", ",", "4"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7604675662542267`*^9, 3.760467581803953*^9}, {
  3.760467671665607*^9, 3.760467684895153*^9}, {3.760467729662806*^9, 
  3.760467738444641*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Re", "[", "y", "]"}]}], ",", 
     RowBox[{"1", "-", 
      RowBox[{"Im", "[", "y", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Re", "[", "y", "]"}]}], ",", 
     RowBox[{"2", "-", 
      RowBox[{"Im", "[", "y", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Re", "[", "y", "]"}]}], ",", 
     RowBox[{"3", "-", 
      RowBox[{"Im", "[", "y", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Re", "[", "y", "]"}]}], ",", 
     RowBox[{"4", "-", 
      RowBox[{"Im", "[", "y", "]"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.760467583607525*^9, 3.760467686489534*^9, 
  3.760467739641491*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"argot", ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"y", "\[Element]", "Reals"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7604677422814817`*^9, 3.7604677602036552`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "y"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "y"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "y"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "y"}], ",", "4"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.760467760942089*^9}]
}, Open  ]],

Cell["\<\
The above table gives the transformations for the z-values given in the \
constant x part of the problem. Plotted, they should look like\
\>", "Text",
 CellChangeTimes->{{3.760401476919084*^9, 3.760401512636812*^9}, {
  3.760468005145452*^9, 3.760468005287985*^9}, {3.760468198232546*^9, 
  3.760468208990467*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Blue", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "6.5"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Red", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2", ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "6.5"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Green", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"3", ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", "6.5"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Orange", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"4", ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"4", ",", "6.5"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
       "}"}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", " ", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"5", ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "7"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Ticks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", 
           ",", "7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", 
           ",", "7"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x (Re)\>\"", ",", "\"\<y (Im)\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Framed", "[", "  ", "\"\<  z-plane \>\"", "]"}], ",", "10", 
         ",", "Blue", ",", 
         RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}]}], "]"}], ",", 
    
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Blue", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"4", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "4"}], ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"Red", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"4", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "4"}], ",", "2"}], "}"}]}], "}"}], "]"}]}], "}"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"Green", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"4", ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "4"}], ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"Orange", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"4", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "}"}], "]"}]}], 
         "}"}]}], "}"}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", " ", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4.5", ",", 
           RowBox[{"-", "4.5"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "4.5"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Ticks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "4"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2", ",", "3", ",", 
           "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "2", ",", "3", ",", "4"}], "}"}]}], 
        "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<u (Re)\>\"", ",", "\"\<v (Im)\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Framed", "[", "  ", "\"\<  w-plane \>\"", "]"}], ",", "10", 
         ",", "Red", ",", 
         RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}]}], "]"}]}], 
   "  ", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.760401559014529*^9, 3.760401719583424*^9}, {
  3.7604470773098907`*^9, 3.7604471187088346`*^9}, {3.760447166217679*^9, 
  3.7604473282149963`*^9}, {3.760447393430716*^9, 3.760447451535899*^9}, {
  3.760447535724801*^9, 3.760447554108017*^9}, {3.760447586273913*^9, 
  3.7604477289515877`*^9}, {3.760447936022084*^9, 3.760447952473936*^9}, {
  3.760468257980857*^9, 3.760468284692072*^9}, {3.760468330158239*^9, 
  3.7604683460010967`*^9}, {3.760741757113516*^9, 3.760741762850363*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Dashing[{Small, Small}], 
      RGBColor[0, 0, 1], 
      LineBox[{{1, -1}, {1, 6.5}}]}, {
      Dashing[{Small, Small}], 
      RGBColor[1, 0, 0], 
      LineBox[{{2, -1}, {2, 6.5}}]}, {
      Dashing[{Small, Small}], 
      RGBColor[0, 1, 0], 
      LineBox[{{3, -1}, {3, 6.5}}]}, {
      Dashing[{Small, Small}], 
      RGBColor[1, 0.5, 0], 
      LineBox[{{4, -1}, {4, 6.5}}]}}, Axes -> True, AxesOrigin -> {0, 0}, 
    PlotRange -> {{5, -1}, {-1, 7}}, Ticks -> {{{0, 
        FormBox["0", TraditionalForm]}, {1, 
        FormBox["1", TraditionalForm]}, {2, 
        FormBox["2", TraditionalForm]}, {3, 
        FormBox["3", TraditionalForm]}, {4, 
        FormBox["4", TraditionalForm]}, {5, 
        FormBox["5", TraditionalForm]}, {6, 
        FormBox["6", TraditionalForm]}, {7, 
        FormBox["7", TraditionalForm]}}, {{0, 
        FormBox["0", TraditionalForm]}, {1, 
        FormBox["1", TraditionalForm]}, {2, 
        FormBox["2", TraditionalForm]}, {3, 
        FormBox["3", TraditionalForm]}, {4, 
        FormBox["4", TraditionalForm]}, {5, 
        FormBox["5", TraditionalForm]}, {6, 
        FormBox["6", TraditionalForm]}, {7, 
        FormBox["7", TraditionalForm]}}}, ImageSize -> 200, AxesLabel -> {
      FormBox["\"x (Re)\"", TraditionalForm], 
      FormBox["\"y (Im)\"", TraditionalForm]}, PlotLabel -> FormBox[
      StyleBox[
       FrameBox["\"  z-plane \"", StripOnInput -> False], 10, 
       RGBColor[0, 0, 1], Background -> GrayLevel[1], StripOnInput -> False], 
      TraditionalForm]],GraphicsBox[{{
      RGBColor[0, 0, 1], 
      LineBox[{{4, 1}, {-4, 1}}]}, {
      RGBColor[1, 0, 0], 
      LineBox[{{4, 2}, {-4, 2}}]}, {
      RGBColor[0, 1, 0], 
      LineBox[{{4, 3}, {-4, 3}}]}, {
      RGBColor[1, 0.5, 0], 
      LineBox[{{4, 4}, {-4, 4}}]}}, Axes -> True, AxesOrigin -> {0, 0}, 
    PlotRange -> {{4.5, -4.5}, {-1, 4.5}}, Ticks -> {{{-4, 
        FormBox[
         RowBox[{"-", "4"}], TraditionalForm]}, {-3, 
        FormBox[
         RowBox[{"-", "3"}], TraditionalForm]}, {-2, 
        FormBox[
         RowBox[{"-", "2"}], TraditionalForm]}, {-1, 
        FormBox[
         RowBox[{"-", "1"}], TraditionalForm]}, {0, 
        FormBox["0", TraditionalForm]}, {1, 
        FormBox["1", TraditionalForm]}, {2, 
        FormBox["2", TraditionalForm]}, {3, 
        FormBox["3", TraditionalForm]}, {4, 
        FormBox["4", TraditionalForm]}}, {{0, 
        FormBox["0", TraditionalForm]}, {1, 
        FormBox["1", TraditionalForm]}, {2, 
        FormBox["2", TraditionalForm]}, {3, 
        FormBox["3", TraditionalForm]}, {4, 
        FormBox["4", TraditionalForm]}}}, ImageSize -> 300, AxesLabel -> {
      FormBox["\"u (Re)\"", TraditionalForm], 
      FormBox["\"v (Im)\"", TraditionalForm]}, PlotLabel -> FormBox[
      StyleBox[
       FrameBox["\"  w-plane \"", StripOnInput -> False], 10, 
       RGBColor[1, 0, 0], Background -> GrayLevel[1], StripOnInput -> False], 
      TraditionalForm]]},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.760401535343169*^9, 3.7604015604149857`*^9}, 
   3.760401602985714*^9, {3.760401639259275*^9, 3.760401657827342*^9}, {
   3.760401691222307*^9, 3.760401720596946*^9}, 3.760447081087184*^9, {
   3.760447151443878*^9, 3.760447169646386*^9}, {3.760447227260495*^9, 
   3.7604473290527477`*^9}, 3.760447400489513*^9, {3.760447444145522*^9, 
   3.760447452344357*^9}, {3.7604475403037024`*^9, 3.760447554974021*^9}, 
   3.760447624730605*^9, 3.7604477300212393`*^9, {3.760447936977551*^9, 
   3.7604479531158113`*^9}, 3.760468285789311*^9, 3.760468346961046*^9, 
   3.7607417635760717`*^9}]
}, Open  ]],

Cell["\<\
with unrestricted y values stretching out the w-plane lines horizontally.\
\>", "Text",
 CellChangeTimes->{{3.760447857895447*^9, 3.760447918666678*^9}, {
  3.760448209738648*^9, 3.7604483115148287`*^9}, {3.7604485706374903`*^9, 
  3.760448573475978*^9}, {3.760448615633333*^9, 3.760448620621175*^9}, {
  3.7604701334476233`*^9, 3.760470161318638*^9}}],

Cell["\<\
The y value cases, with y=k=const, are done similarly. In this case\
\>", "Text",
 CellChangeTimes->{{3.7604495540595407`*^9, 3.760449589192449*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"yargot", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"u", "[", 
       RowBox[{"x", ",", "k"}], "]"}], ",", 
      RowBox[{"v", "[", 
       RowBox[{"x", ",", "k"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "4"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.76046810535562*^9, 3.760468147809435*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "1"}], "-", 
      RowBox[{"Im", "[", "x", "]"}]}], ",", 
     RowBox[{"Re", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], "-", 
      RowBox[{"Im", "[", "x", "]"}]}], ",", 
     RowBox[{"Re", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3"}], "-", 
      RowBox[{"Im", "[", "x", "]"}]}], ",", 
     RowBox[{"Re", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "4"}], "-", 
      RowBox[{"Im", "[", "x", "]"}]}], ",", 
     RowBox[{"Re", "[", "x", "]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.760468151018281*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"yargot", ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"x", "\[Element]", "Reals"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.760468167882081*^9, 3.760468172280341*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "x"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "x"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", "x"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4"}], ",", "x"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7604681736562757`*^9}]
}, Open  ]],

Cell["\<\
The above table gives the transformations for the z-values given in the \
constant y part of the problem. Plotted, they should look like\
\>", "Text",
 CellChangeTimes->{{3.760468230600947*^9, 3.7604682372690773`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Blue", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "5"}], ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Red", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "5"}], ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "2"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Green", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "5"}], ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Orange", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "5"}], ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "4"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
       "}"}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", " ", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "5"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Ticks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "6"}], ",", 
           RowBox[{"-", "5"}], ",", 
           RowBox[{"-", "4"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2", ",", "3", ",", 
           "4", ",", "5", ",", "6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", 
           ",", "7"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x (Re)\>\"", ",", "\"\<y (Im)\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Framed", "[", "  ", "\"\<  z-plane \>\"", "]"}], ",", "10", 
         ",", "Blue", ",", 
         RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}]}], "]"}], ",", 
    
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Blue", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "5"}], "}"}]}], "}"}], "]"}]}], "}"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"Red", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "2"}], ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "2"}], ",", "5"}], "}"}]}], "}"}], "]"}]}], "}"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"Green", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "3"}], ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "3"}], ",", "5"}], "}"}]}], "}"}], "]"}]}], "}"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"Orange", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "4"}], ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "4"}], ",", "5"}], "}"}]}], "}"}], "]"}]}], 
         "}"}]}], "}"}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", " ", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", 
           RowBox[{"-", "4.5"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "5.5"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Ticks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "4"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2", ",", "3", ",", 
           "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "2", ",", "3", ",", "4"}], "}"}]}], 
        "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "230"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<u (Re)\>\"", ",", "\"\<v (Im)\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Framed", "[", "  ", "\"\<  w-plane \>\"", "]"}], ",", "10", 
         ",", "Red", ",", 
         RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}]}], "]"}]}], 
   "  ", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.760469276806509*^9, 3.760469304747383*^9}, {
  3.760469356682342*^9, 3.76046936156872*^9}, {3.760469452606044*^9, 
  3.7604694532681627`*^9}, {3.7604694868541813`*^9, 3.760469597549077*^9}, {
  3.76046978024559*^9, 3.760469797138754*^9}, {3.760469840876326*^9, 
  3.760470049275257*^9}, {3.7607417871454372`*^9, 3.7607417934488897`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Dashing[{Small, Small}], 
      RGBColor[0, 0, 1], 
      LineBox[{{-5, 1}, {5, 1}}]}, {
      Dashing[{Small, Small}], 
      RGBColor[1, 0, 0], 
      LineBox[{{-5, 2}, {5, 2}}]}, {
      Dashing[{Small, Small}], 
      RGBColor[0, 1, 0], 
      LineBox[{{-5, 3}, {5, 3}}]}, {
      Dashing[{Small, Small}], 
      RGBColor[1, 0.5, 0], 
      LineBox[{{-5, 4}, {5, 4}}]}}, Axes -> True, AxesOrigin -> {0, 0}, 
    PlotRange -> {{-5, 5}, {-1, 5}}, Ticks -> {{{-6, 
        FormBox[
         RowBox[{"-", "6"}], TraditionalForm]}, {-5, 
        FormBox[
         RowBox[{"-", "5"}], TraditionalForm]}, {-4, 
        FormBox[
         RowBox[{"-", "4"}], TraditionalForm]}, {-3, 
        FormBox[
         RowBox[{"-", "3"}], TraditionalForm]}, {-2, 
        FormBox[
         RowBox[{"-", "2"}], TraditionalForm]}, {-1, 
        FormBox[
         RowBox[{"-", "1"}], TraditionalForm]}, {0, 
        FormBox["0", TraditionalForm]}, {1, 
        FormBox["1", TraditionalForm]}, {2, 
        FormBox["2", TraditionalForm]}, {3, 
        FormBox["3", TraditionalForm]}, {4, 
        FormBox["4", TraditionalForm]}, {5, 
        FormBox["5", TraditionalForm]}, {6, 
        FormBox["6", TraditionalForm]}}, {{0, 
        FormBox["0", TraditionalForm]}, {1, 
        FormBox["1", TraditionalForm]}, {2, 
        FormBox["2", TraditionalForm]}, {3, 
        FormBox["3", TraditionalForm]}, {4, 
        FormBox["4", TraditionalForm]}, {5, 
        FormBox["5", TraditionalForm]}, {6, 
        FormBox["6", TraditionalForm]}, {7, 
        FormBox["7", TraditionalForm]}}}, ImageSize -> 300, AxesLabel -> {
      FormBox["\"x (Re)\"", TraditionalForm], 
      FormBox["\"y (Im)\"", TraditionalForm]}, PlotLabel -> FormBox[
      StyleBox[
       FrameBox["\"  z-plane \"", StripOnInput -> False], 10, 
       RGBColor[0, 0, 1], Background -> GrayLevel[1], StripOnInput -> False], 
      TraditionalForm]],GraphicsBox[{{
      RGBColor[0, 0, 1], 
      LineBox[{{-1, -1}, {-1, 5}}]}, {
      RGBColor[1, 0, 0], 
      LineBox[{{-2, -1}, {-2, 5}}]}, {
      RGBColor[0, 1, 0], 
      LineBox[{{-3, -1}, {-3, 5}}]}, {
      RGBColor[1, 0.5, 0], 
      LineBox[{{-4, -1}, {-4, 5}}]}}, Axes -> True, AxesOrigin -> {0, 0}, 
    PlotRange -> {{2, -4.5}, {-1, 5.5}}, Ticks -> {{{-4, 
        FormBox[
         RowBox[{"-", "4"}], TraditionalForm]}, {-3, 
        FormBox[
         RowBox[{"-", "3"}], TraditionalForm]}, {-2, 
        FormBox[
         RowBox[{"-", "2"}], TraditionalForm]}, {-1, 
        FormBox[
         RowBox[{"-", "1"}], TraditionalForm]}, {0, 
        FormBox["0", TraditionalForm]}, {1, 
        FormBox["1", TraditionalForm]}, {2, 
        FormBox["2", TraditionalForm]}, {3, 
        FormBox["3", TraditionalForm]}, {4, 
        FormBox["4", TraditionalForm]}}, {{0, 
        FormBox["0", TraditionalForm]}, {1, 
        FormBox["1", TraditionalForm]}, {2, 
        FormBox["2", TraditionalForm]}, {3, 
        FormBox["3", TraditionalForm]}, {4, 
        FormBox["4", TraditionalForm]}}}, ImageSize -> 230, AxesLabel -> {
      FormBox["\"u (Re)\"", TraditionalForm], 
      FormBox["\"v (Im)\"", TraditionalForm]}, PlotLabel -> FormBox[
      StyleBox[
       FrameBox["\"  w-plane \"", StripOnInput -> False], 10, 
       RGBColor[1, 0, 0], Background -> GrayLevel[1], StripOnInput -> False], 
      TraditionalForm]]},
  "RowDefault"]], "Output",
 CellChangeTimes->{
  3.760469222358058*^9, 3.7604693062320538`*^9, {3.760469425417383*^9, 
   3.760469454163082*^9}, {3.760469489902398*^9, 3.7604695066427517`*^9}, 
   3.760469598513859*^9, 3.760469798375386*^9, {3.760469878695932*^9, 
   3.7604699427671223`*^9}, {3.760469978538969*^9, 3.760470049944771*^9}, 
   3.760741794089044*^9}]
}, Open  ]],

Cell["\<\
with unrestricted x values stretching out the w-plane lines vertically. \
\>", "Text",
 CellChangeTimes->{{3.760470091818069*^9, 3.760470121711987*^9}, {
   3.760470182253964*^9, 3.760470184574079*^9}, 3.760470308868887*^9}],

Cell["9.  Translation. Curves as in problem 6, w = z + 2 + I", "Text",
 CellChangeTimes->{{3.7603128853503304`*^9, 3.7603129113412848`*^9}, 
   3.760312941958905*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell["Defining the mapping.", "Text",
 CellChangeTimes->{{3.76047062042579*^9, 3.760470626704421*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"u", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{"Re", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"x", "+", 
      RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], "+", "2", "+", 
    "\[ImaginaryI]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.760470665200768*^9, 3.760470676254033*^9}}],

Cell[BoxData[
 RowBox[{"2", "-", 
  RowBox[{"Im", "[", "y", "]"}], "+", 
  RowBox[{"Re", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{3.76047068275703*^9, 3.760527400256918*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"v", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{"Im", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"x", "+", 
      RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], "+", "2", "+", 
    "\[ImaginaryI]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7604706937918262`*^9, 3.7604706996063557`*^9}}],

Cell[BoxData[
 RowBox[{"1", "+", 
  RowBox[{"Im", "[", "x", "]"}], "+", 
  RowBox[{"Re", "[", "y", "]"}]}]], "Output",
 CellChangeTimes->{3.760470700725377*^9, 3.760527403525185*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"argot", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"u", "[", 
       RowBox[{"c", ",", "y"}], "]"}], ",", 
      RowBox[{"v", "[", 
       RowBox[{"c", ",", "y"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"c", ",", "1", ",", "4"}], "}"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"3", "-", 
      RowBox[{"Im", "[", "y", "]"}]}], ",", 
     RowBox[{"1", "+", 
      RowBox[{"Re", "[", "y", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"4", "-", 
      RowBox[{"Im", "[", "y", "]"}]}], ",", 
     RowBox[{"1", "+", 
      RowBox[{"Re", "[", "y", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"5", "-", 
      RowBox[{"Im", "[", "y", "]"}]}], ",", 
     RowBox[{"1", "+", 
      RowBox[{"Re", "[", "y", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"6", "-", 
      RowBox[{"Im", "[", "y", "]"}]}], ",", 
     RowBox[{"1", "+", 
      RowBox[{"Re", "[", "y", "]"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7604707515101023`*^9, 3.760527406817507*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"argot", ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"y", "\[Element]", "Reals"}]}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", 
     RowBox[{"1", "+", "y"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", 
     RowBox[{"1", "+", "y"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", 
     RowBox[{"1", "+", "y"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", 
     RowBox[{"1", "+", "y"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.760470775197661*^9, 3.760527410323642*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Blue", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "6.5"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Red", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2", ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "6.5"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Green", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"3", ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", "6.5"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Orange", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"4", ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"4", ",", "6.5"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
       "}"}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", " ", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"5", ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "7"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Ticks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", 
           ",", "7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", 
           ",", "7"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x (Re)\>\"", ",", "\"\<y (Im)\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Framed", "[", "  ", "\"\<  z-plane \>\"", "]"}], ",", "10", 
         ",", "Blue", ",", 
         RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}]}], "]"}], ",", 
    
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Blue", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"3", ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", "6.5"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"Red", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"4", ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"4", ",", "6.5"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"Green", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"5", ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "6.5"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"Orange", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"6", ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"6", ",", "6.5"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
       "}"}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", " ", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7.55", ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "7"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Ticks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", 
           ",", "7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", 
           ",", "7"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "270"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<u (Re)\>\"", ",", "\"\<v (Im)\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Framed", "[", "  ", "\"\<  w-plane \>\"", "]"}], ",", "10", 
         ",", "Red", ",", 
         RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}]}], "]"}]}], 
   "  ", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.760470887221581*^9, 3.760471061379937*^9}, {
  3.760741805518918*^9, 3.7607418107596703`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Dashing[{Small, Small}], 
      RGBColor[0, 0, 1], 
      LineBox[{{1, -1}, {1, 6.5}}]}, {
      Dashing[{Small, Small}], 
      RGBColor[1, 0, 0], 
      LineBox[{{2, -1}, {2, 6.5}}]}, {
      Dashing[{Small, Small}], 
      RGBColor[0, 1, 0], 
      LineBox[{{3, -1}, {3, 6.5}}]}, {
      Dashing[{Small, Small}], 
      RGBColor[1, 0.5, 0], 
      LineBox[{{4, -1}, {4, 6.5}}]}}, Axes -> True, AxesOrigin -> {0, 0}, 
    PlotRange -> {{5, -1}, {-1, 7}}, Ticks -> {{{0, 
        FormBox["0", TraditionalForm]}, {1, 
        FormBox["1", TraditionalForm]}, {2, 
        FormBox["2", TraditionalForm]}, {3, 
        FormBox["3", TraditionalForm]}, {4, 
        FormBox["4", TraditionalForm]}, {5, 
        FormBox["5", TraditionalForm]}, {6, 
        FormBox["6", TraditionalForm]}, {7, 
        FormBox["7", TraditionalForm]}}, {{0, 
        FormBox["0", TraditionalForm]}, {1, 
        FormBox["1", TraditionalForm]}, {2, 
        FormBox["2", TraditionalForm]}, {3, 
        FormBox["3", TraditionalForm]}, {4, 
        FormBox["4", TraditionalForm]}, {5, 
        FormBox["5", TraditionalForm]}, {6, 
        FormBox["6", TraditionalForm]}, {7, 
        FormBox["7", TraditionalForm]}}}, ImageSize -> 200, AxesLabel -> {
      FormBox["\"x (Re)\"", TraditionalForm], 
      FormBox["\"y (Im)\"", TraditionalForm]}, PlotLabel -> FormBox[
      StyleBox[
       FrameBox["\"  z-plane \"", StripOnInput -> False], 10, 
       RGBColor[0, 0, 1], Background -> GrayLevel[1], StripOnInput -> False], 
      TraditionalForm]],GraphicsBox[{{
      RGBColor[0, 0, 1], 
      LineBox[{{3, -1}, {3, 6.5}}]}, {
      RGBColor[1, 0, 0], 
      LineBox[{{4, -1}, {4, 6.5}}]}, {
      RGBColor[0, 1, 0], 
      LineBox[{{5, -1}, {5, 6.5}}]}, {
      RGBColor[1, 0.5, 0], 
      LineBox[{{6, -1}, {6, 6.5}}]}}, Axes -> True, AxesOrigin -> {0, 0}, 
    PlotRange -> {{7.55, -1}, {-1, 7}}, Ticks -> {{{0, 
        FormBox["0", TraditionalForm]}, {1, 
        FormBox["1", TraditionalForm]}, {2, 
        FormBox["2", TraditionalForm]}, {3, 
        FormBox["3", TraditionalForm]}, {4, 
        FormBox["4", TraditionalForm]}, {5, 
        FormBox["5", TraditionalForm]}, {6, 
        FormBox["6", TraditionalForm]}, {7, 
        FormBox["7", TraditionalForm]}}, {{0, 
        FormBox["0", TraditionalForm]}, {1, 
        FormBox["1", TraditionalForm]}, {2, 
        FormBox["2", TraditionalForm]}, {3, 
        FormBox["3", TraditionalForm]}, {4, 
        FormBox["4", TraditionalForm]}, {5, 
        FormBox["5", TraditionalForm]}, {6, 
        FormBox["6", TraditionalForm]}, {7, 
        FormBox["7", TraditionalForm]}}}, ImageSize -> 270, AxesLabel -> {
      FormBox["\"u (Re)\"", TraditionalForm], 
      FormBox["\"v (Im)\"", TraditionalForm]}, PlotLabel -> FormBox[
      StyleBox[
       FrameBox["\"  w-plane \"", StripOnInput -> False], 10, 
       RGBColor[1, 0, 0], Background -> GrayLevel[1], StripOnInput -> False], 
      TraditionalForm]]},
  "RowDefault"]], "Output",
 CellChangeTimes->{
  3.760470815070263*^9, {3.760470888725358*^9, 3.760470914196529*^9}, {
   3.760470958687199*^9, 3.760470976538312*^9}, {3.7604710104439993`*^9, 
   3.760471062228511*^9}, 3.7605274174190397`*^9, 3.760741811525793*^9}]
}, Open  ]],

Cell["\<\
Each point in the above graph is moved 2 units to the right and 1 unit up. \
Since y already cruises the length of the real axis, the vertical change goes \
unnoticed.\
\>", "Text",
 CellChangeTimes->{{3.760471098251795*^9, 3.7604711488643436`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"yargot", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"u", "[", 
       RowBox[{"x", ",", "k"}], "]"}], ",", 
      RowBox[{"v", "[", 
       RowBox[{"x", ",", "k"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "4"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7604712879174757`*^9, 3.7604713336987667`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", "+", 
      RowBox[{"Re", "[", "x", "]"}]}], ",", 
     RowBox[{"2", "+", 
      RowBox[{"Im", "[", "x", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", "+", 
      RowBox[{"Re", "[", "x", "]"}]}], ",", 
     RowBox[{"3", "+", 
      RowBox[{"Im", "[", "x", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", "+", 
      RowBox[{"Re", "[", "x", "]"}]}], ",", 
     RowBox[{"4", "+", 
      RowBox[{"Im", "[", "x", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", "+", 
      RowBox[{"Re", "[", "x", "]"}]}], ",", 
     RowBox[{"5", "+", 
      RowBox[{"Im", "[", "x", "]"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.760471320257656*^9, 3.7604713343853083`*^9}, 
   3.7605274286010036`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"yargot", ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"x", "\[Element]", "Reals"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.760471339487109*^9, 3.7604713693215733`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", "+", "x"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", "+", "x"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", "+", "x"}], ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", "+", "x"}], ",", "5"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7604713703612957`*^9, 3.7605274319256907`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Blue", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "5"}], ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Red", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "5"}], ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "2"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Green", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "5"}], ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Orange", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "5"}], ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "4"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
       "}"}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", " ", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "5"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Ticks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "6"}], ",", 
           RowBox[{"-", "5"}], ",", 
           RowBox[{"-", "4"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2", ",", "3", ",", 
           "4", ",", "5", ",", "6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", 
           ",", "7"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x (Re)\>\"", ",", "\"\<y (Im)\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Framed", "[", "  ", "\"\<  z-plane \>\"", "]"}], ",", "10", 
         ",", "Blue", ",", 
         RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}]}], "]"}], ",", 
    
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Blue", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "5"}], ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "2"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Red", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "5"}], ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Green", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "5"}], ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "4"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Orange", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "5"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
       "}"}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", " ", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "7"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Ticks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "6"}], ",", 
           RowBox[{"-", "5"}], ",", 
           RowBox[{"-", "4"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2", ",", "3", ",", 
           "4", ",", "5", ",", "6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", 
           ",", "7"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<u (Re)\>\"", ",", "\"\<v (Im)\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Framed", "[", "  ", "\"\<  w-plane \>\"", "]"}], ",", "10", 
         ",", "Red", ",", 
         RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}]}], "]"}]}], 
   "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7604714378521433`*^9, 3.76047157894795*^9}, {
  3.7605275232429867`*^9, 3.760527555246312*^9}, {3.760741820894288*^9, 
  3.7607418263990602`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Dashing[{Small, Small}], 
      RGBColor[0, 0, 1], 
      LineBox[{{-5, 1}, {5, 1}}]}, {
      Dashing[{Small, Small}], 
      RGBColor[1, 0, 0], 
      LineBox[{{-5, 2}, {5, 2}}]}, {
      Dashing[{Small, Small}], 
      RGBColor[0, 1, 0], 
      LineBox[{{-5, 3}, {5, 3}}]}, {
      Dashing[{Small, Small}], 
      RGBColor[1, 0.5, 0], 
      LineBox[{{-5, 4}, {5, 4}}]}}, Axes -> True, AxesOrigin -> {0, 0}, 
    PlotRange -> {{-5, 5}, {-1, 5}}, Ticks -> {{{-6, 
        FormBox[
         RowBox[{"-", "6"}], TraditionalForm]}, {-5, 
        FormBox[
         RowBox[{"-", "5"}], TraditionalForm]}, {-4, 
        FormBox[
         RowBox[{"-", "4"}], TraditionalForm]}, {-3, 
        FormBox[
         RowBox[{"-", "3"}], TraditionalForm]}, {-2, 
        FormBox[
         RowBox[{"-", "2"}], TraditionalForm]}, {-1, 
        FormBox[
         RowBox[{"-", "1"}], TraditionalForm]}, {0, 
        FormBox["0", TraditionalForm]}, {1, 
        FormBox["1", TraditionalForm]}, {2, 
        FormBox["2", TraditionalForm]}, {3, 
        FormBox["3", TraditionalForm]}, {4, 
        FormBox["4", TraditionalForm]}, {5, 
        FormBox["5", TraditionalForm]}, {6, 
        FormBox["6", TraditionalForm]}}, {{0, 
        FormBox["0", TraditionalForm]}, {1, 
        FormBox["1", TraditionalForm]}, {2, 
        FormBox["2", TraditionalForm]}, {3, 
        FormBox["3", TraditionalForm]}, {4, 
        FormBox["4", TraditionalForm]}, {5, 
        FormBox["5", TraditionalForm]}, {6, 
        FormBox["6", TraditionalForm]}, {7, 
        FormBox["7", TraditionalForm]}}}, ImageSize -> 300, AxesLabel -> {
      FormBox["\"x (Re)\"", TraditionalForm], 
      FormBox["\"y (Im)\"", TraditionalForm]}, PlotLabel -> FormBox[
      StyleBox[
       FrameBox["\"  z-plane \"", StripOnInput -> False], 10, 
       RGBColor[0, 0, 1], Background -> GrayLevel[1], StripOnInput -> False], 
      TraditionalForm]],GraphicsBox[{{
      RGBColor[0, 0, 1], 
      LineBox[{{-5, 2}, {5, 2}}]}, {
      RGBColor[1, 0, 0], 
      LineBox[{{-5, 3}, {5, 3}}]}, {
      RGBColor[0, 1, 0], 
      LineBox[{{-5, 4}, {5, 4}}]}, {
      RGBColor[1, 0.5, 0], 
      LineBox[{{-5, 5}, {5, 5}}]}}, Axes -> True, AxesOrigin -> {0, 0}, 
    PlotRange -> {{-5, 5}, {-1, 7}}, Ticks -> {{{-6, 
        FormBox[
         RowBox[{"-", "6"}], TraditionalForm]}, {-5, 
        FormBox[
         RowBox[{"-", "5"}], TraditionalForm]}, {-4, 
        FormBox[
         RowBox[{"-", "4"}], TraditionalForm]}, {-3, 
        FormBox[
         RowBox[{"-", "3"}], TraditionalForm]}, {-2, 
        FormBox[
         RowBox[{"-", "2"}], TraditionalForm]}, {-1, 
        FormBox[
         RowBox[{"-", "1"}], TraditionalForm]}, {0, 
        FormBox["0", TraditionalForm]}, {1, 
        FormBox["1", TraditionalForm]}, {2, 
        FormBox["2", TraditionalForm]}, {3, 
        FormBox["3", TraditionalForm]}, {4, 
        FormBox["4", TraditionalForm]}, {5, 
        FormBox["5", TraditionalForm]}, {6, 
        FormBox["6", TraditionalForm]}}, {{0, 
        FormBox["0", TraditionalForm]}, {1, 
        FormBox["1", TraditionalForm]}, {2, 
        FormBox["2", TraditionalForm]}, {3, 
        FormBox["3", TraditionalForm]}, {4, 
        FormBox["4", TraditionalForm]}, {5, 
        FormBox["5", TraditionalForm]}, {6, 
        FormBox["6", TraditionalForm]}, {7, 
        FormBox["7", TraditionalForm]}}}, ImageSize -> 300, AxesLabel -> {
      FormBox["\"u (Re)\"", TraditionalForm], 
      FormBox["\"v (Im)\"", TraditionalForm]}, PlotLabel -> FormBox[
      StyleBox[
       FrameBox["\"  w-plane \"", StripOnInput -> False], 10, 
       RGBColor[1, 0, 0], Background -> GrayLevel[1], StripOnInput -> False], 
      TraditionalForm]]},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.760471412197692*^9, 3.7604714994773617`*^9}, {
   3.760471531480748*^9, 3.760471580011101*^9}, 3.76052749272651*^9, 
   3.7605275564137297`*^9, 3.760741827108531*^9}]
}, Open  ]],

Cell["\<\
Each point in the above graph is moved 2 units to the right and 1 unit up. \
Since x already travels the length of the real axis, the horizontal change \
goes unnoticed.\
\>", "Text",
 CellChangeTimes->{{3.7604716119405527`*^9, 3.7604716448649483`*^9}, {
  3.7604717088096237`*^9, 3.760471709718669*^9}}],

Cell["\<\
11 - 20 Mapping of regions
Sketch or graph the given region and its image under the given mapping.\
\>", "Text",
 CellChangeTimes->{{3.760312989699465*^9, 3.7603130202017393`*^9}},
 Background->RGBColor[
  0.9600061036087587, 0.9600061036087587, 0.9600061036087587]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"11.", " ", 
    RowBox[{"Abs", "[", "z", "]"}]}], "\[LessEqual]", 
   FractionBox["1", "2"]}], ",", " ", 
  RowBox[{
   FractionBox[
    RowBox[{"-", "\[Pi]"}], "8"], "<", 
   RowBox[{"Arg", "[", "z", "]"}], "<", 
   FractionBox["\[Pi]", "8"]}], ",", " ", 
  RowBox[{"w", "=", 
   SuperscriptBox["z", "2"]}]}]], "Text",
 CellChangeTimes->{{3.7603130239947033`*^9, 3.760313092807302*^9}, 
   3.7603132486536837`*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell["\<\
Tracing the influence of the transformation on the z-plane, I see that\
\>", "Text",
 CellChangeTimes->{{3.760450456608221*^9, 3.760450498676038*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["R\[ExponentialE]", 
   RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], "\[Equal]", "w", "\[Equal]", 
  RowBox[{"f", "[", "z", "]"}], "\[Equal]", 
  RowBox[{"f", "[", 
   RowBox[{"r", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}], "]"}], "\[Equal]", 
  RowBox[{
   SuperscriptBox["z", "2"], 
   SubscriptBox["\[LeftFloor]", 
    RowBox[{"z", "=", 
     RowBox[{"r", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}]}]]}], "\[Equal]", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"r", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}], ")"}], "2"], "\[Equal]", 
  
  RowBox[{
   SuperscriptBox["r", "2"], 
   SuperscriptBox[
    RowBox[{"(", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]], ")"}], "2"]}], "\[Equal]", 
  
  RowBox[{
   SuperscriptBox["r", "2"], 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", "2", " ", "\[Theta]"}]]}]}]], "Input",
 CellChangeTimes->{{3.7604505043266697`*^9, 3.760450674218811*^9}}],

Cell[TextData[{
 "In a nutshell, distances will be squared and angles doubled. The first part \
of the problem defines a circle, and the second part constrains the circle \
into a pie slice. The radius of the z-circle is ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    FractionBox["1", "2"],
    FontSize->21], TraditionalForm]]],
 ", which when squared for the w-plane becomes ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    FractionBox["1", "4"],
    FontSize->21], TraditionalForm]]],
 ". Meanwhile the arc of the z-slice is increased from ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", "-"}], TraditionalForm]]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox[
       FractionBox["\[Pi]", "8"],
       FontSize->21], "min"}], ",", 
     RowBox[{
      StyleBox[
       FractionBox["\[Pi]", "8"],
       FontSize->21], "max"}]}], ")"}], TraditionalForm]]],
 " up to w-slice (",
 Cell[BoxData[
  FormBox["-", TraditionalForm]]],
 Cell[BoxData[
  FormBox[
   StyleBox[
    FractionBox["\[Pi]", "4"],
    FontSize->21], TraditionalForm]]],
 "min, ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    FractionBox["\[Pi]", "4"],
    FontSize->21], TraditionalForm]]],
 "max). "
}], "Text",
 CellChangeTimes->{{3.76045070995359*^9, 3.7604507248715878`*^9}, {
  3.760451456954324*^9, 3.7604514925248737`*^9}, {3.7604515308267727`*^9, 
  3.760451589327533*^9}, {3.760451621277801*^9, 3.7604517659832077`*^9}, {
  3.760451903274086*^9, 3.760451942566927*^9}, {3.760453833629196*^9, 
  3.760453840688528*^9}}],

Cell["The sketch:", "Text",
 CellChangeTimes->{{3.760451968306769*^9, 3.760451977901062*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p1", "=", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"Cos", "[", "t", "]"}]}], "+", "0"}], ",", 
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"Sin", "[", "t", "]"}]}], "+", "0"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           FractionBox["1", "4"], " ", 
           RowBox[{"Cos", "[", "t", "]"}]}], "+", "0"}], ",", 
         RowBox[{
          RowBox[{
           FractionBox["1", "4"], " ", 
           RowBox[{"Sin", "[", "t", "]"}]}], "+", "0"}]}], "}"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Dashed", ",", 
          RowBox[{"Thickness", "[", "0.002", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Thickness", "[", "0.002", "]"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RGBColor", "[", 
           RowBox[{
            FractionBox["100", "255"], ",", 
            FractionBox["210", "255"], ",", 
            FractionBox["250", "255"]}], "]"}], ",", 
          RowBox[{"Disk", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            FractionBox["1", "4"], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", 
               FractionBox["\[Pi]", "4"]}], ",", 
              FractionBox["\[Pi]", "4"]}], "}"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0.3", ",", "0.3"}], "}"}]}], "}"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0.3", ",", 
               RowBox[{"-", "0.3"}]}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Circle", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           FractionBox["3", "8"], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["\[Pi]", "4"]}], ",", 
             FractionBox["\[Pi]", "4"]}], "}"}]}], "]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Arrowheads", "[", ".025", "]"}], ",", 
          RowBox[{"Arrow", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0.285", ",", "0.242"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0.27", ",", "0.26"}], "}"}]}], "}"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Arrowheads", "[", ".025", "]"}], ",", 
          RowBox[{"Arrow", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0.285", ",", 
               RowBox[{"-", "0.242"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0.27", ",", 
               RowBox[{"-", "0.26"}]}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Text", "[", 
          RowBox[{"\"\<\!\(\*FractionBox[\(\[Pi]\), \(2\)]\)\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"0.4", ",", "0.1"}], "}"}]}], "]"}], "}"}]}], "}"}]}], 
     ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Re\>\"", ",", "\"\<Im\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.7"}], ",", "0.7"}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"Framed", "[", "  ", "\"\<  w-plane \>\"", "]"}], ",", "10", 
        ",", "Red", ",", 
        RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}]}], "]"}], " ", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"Cos", "[", "t", "]"}]}], "+", "0"}], ",", 
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"Sin", "[", "t", "]"}]}], "+", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thickness", "[", "0.002", "]"}], "}"}]}], ",", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Dashed", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0.55", ",", "0.23"}], "}"}]}], "}"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0.55", ",", 
               RowBox[{"-", "0.23"}]}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RGBColor", "[", 
           RowBox[{
            FractionBox["100", "255"], ",", 
            FractionBox["210", "255"], ",", 
            FractionBox["250", "255"]}], "]"}], ",", 
          RowBox[{"Disk", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            FractionBox["1", "2"], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", 
               FractionBox["\[Pi]", "8"]}], ",", 
              FractionBox["\[Pi]", "8"]}], "}"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", 
          RowBox[{"Circle", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            FractionBox["1", "4"], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Circle", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", "0.57", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["\[Pi]", "8"]}], ",", 
             FractionBox["\[Pi]", "8"]}], "}"}]}], "]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Arrowheads", "[", ".025", "]"}], ",", 
          RowBox[{"Arrow", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0.532", ",", "0.2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0.525", ",", "0.22"}], "}"}]}], "}"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Arrowheads", "[", ".025", "]"}], ",", 
          RowBox[{"Arrow", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0.532", ",", 
               RowBox[{"-", "0.2"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0.525", ",", 
               RowBox[{"-", "0.22"}]}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Text", "[", 
          RowBox[{"\"\<\!\(\*FractionBox[\(\[Pi]\), \(4\)]\)\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"0.605", ",", "0.1"}], "}"}]}], "]"}], "}"}]}], "}"}]}], 
     ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Re\>\"", ",", "\"\<Im\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.7"}], ",", "0.7"}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"Framed", "[", "  ", "\"\<  z-plane \>\"", "]"}], ",", "10", 
        ",", "Blue", ",", 
        RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}]}], "]"}], 
   " "}]}]], "Input",
 CellChangeTimes->{{3.760452039971961*^9, 3.760452109351577*^9}, {
   3.760452158080812*^9, 3.760452218914227*^9}, {3.760452254786223*^9, 
   3.760452322029188*^9}, {3.7604523576852627`*^9, 3.7604523588606653`*^9}, {
   3.760452480383545*^9, 3.760452487254602*^9}, {3.760452529253199*^9, 
   3.760452546298221*^9}, {3.760452622518854*^9, 3.760452638910213*^9}, {
   3.7604526756367702`*^9, 3.760452773913053*^9}, {3.760452827400524*^9, 
   3.760452873899053*^9}, {3.760452929858472*^9, 3.760452971575*^9}, {
   3.760453012956381*^9, 3.760453031802876*^9}, {3.760453065123558*^9, 
   3.76045314443051*^9}, {3.760453180380122*^9, 3.760453184395121*^9}, {
   3.760453230301978*^9, 3.760453235051382*^9}, {3.760453289880109*^9, 
   3.760453378155521*^9}, {3.760453438971349*^9, 3.760453509258312*^9}, {
   3.76045355248029*^9, 3.760453553581406*^9}, {3.760453659724909*^9, 
   3.7604536748029137`*^9}, {3.760453719899024*^9, 3.7604537453286324`*^9}, {
   3.7604541521583967`*^9, 3.7604544940331097`*^9}, {3.760454529832569*^9, 
   3.760454530009194*^9}, {3.760454701924335*^9, 3.760454808168421*^9}, {
   3.760454859289598*^9, 3.76045497529066*^9}, {3.760455052489562*^9, 
   3.760455061505006*^9}, 3.760455097745653*^9, {3.760455193693893*^9, 
   3.760455340119285*^9}, {3.7604553705595493`*^9, 3.760455407043943*^9}, {
   3.7604554549748898`*^9, 3.760455503329768*^9}, {3.76045557093661*^9, 
   3.7604555710801277`*^9}, {3.760474325544633*^9, 3.760474338727417*^9}}],

Cell[BoxData[
 RowBox[{
  GraphicsBox[{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.002], Opacity[1.], 
     FaceForm[Opacity[0.3]], LineBox[CompressedData["
1:eJxdm3c81f/7/416ExmlUmkQGRWh0tRVKBkZEQ3JSEk2kTJCklL2yo5s2TNc
9t4cnOOc86o0KJSMFOr7+tx+//3843a/vY7XeZ3n87qu5+N+ux0iZnYXLNhY
WFic2VlY/vf7//28Qw6jDQfE00KqzPbtE1r+R+BXjnaVsFBtFE4tsP5Bchdx
1iYo9DqyQtgcnWSPNyGNn3Nv4UoFpbCOZJV1inwPQ+3wWJlXegLJFredKE/e
OiFnTUy/E8mS/01QOnNd8eMxmYOnSa4S3CXAnfQAHbzUOv8jebFSKUop1Avd
6n+/bPxL4NnLRxSO1nvjx53aSfdJnu653a351hffRl+lS5L8OV495mqxH+4Q
OKDds0KgducPIYtcf1S68m3RhmQix2nUMi0ArXbEUVeRrLH4zehm4jNcNtQ+
JbRMIPttiUrNkCBkS3/a/HKJwDmO9Tpbm4JRQVz20XqSDfJVZJ7WhWDzyVNp
X38T2L76WalRZRiKU39yaZDcadHwqaY0HHNeJ6anLBLok+DGta0oAsVyAgMU
fxG4alPpyebsKLzDI9bjuUCuz4jVwPqMaLT5bn6+fJ5Ajug/ty6nxuB9w6Q5
gTkCC2sEYwfiYlH/VceszQ/y/hjjePd5IqoXXV7l8J3AS7TS9CaVJJyuUtW2
niaw1Sw4qbM+CR0tlSM0JgkUOv1RobsmGV1bhSdyvhAYbOUfG1eagn841ww6
fCbwvhfh8+hgKrY0ey/JfCKwfvSm163CVDz2yYQ19AOBfP33FHe8eY1ViR9n
/tAJ/NS321njdTpa+Vxo9x4lMHOddTanaAY+1/3znoVG4MPxKbbapAysUrPv
/TJEoPQDlehtcZm4opNdfKmXwA3mM+xPQ7NR5emxheY6Ap97Cu0S8szDnxyR
TulIrvcrFFhiy8e/lvJ0z2qynj6ys308m4+RGRkO6yvI93MIHUjvzsfMs/ew
M49AJv+JvfOMAkxaCvJ8EUugnSlfScRSEbberv7HiCaQ6wU/VRaK0XhE2VUs
ksAWl8fyzT7FGHTVXTMymMBbN72OEGtK0HD3ujQeP3J/tbucWgVLsTrla5+G
NYG1D8aab8qXY6fRgBD3bQKF7+goxN0tx/MT9bfrLAhcca1Kay8vxzoe940C
1wnsnShVXA8VOH7mfIu6Lvn5krP2qGtUooLZM+e1BwkMeClxXNOsCgVXFbu/
+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
AK8=
      "]]}},
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"Re\"", TraditionalForm], 
     FormBox["\"Im\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Epilog->{{
      Dashing[{Small, Small}], 
      LineBox[{{0, 0}, {0.55, 0.23}}]}, {
      Dashing[{Small, Small}], 
      LineBox[{{0, 0}, {0.55, -0.23}}]}, {
      RGBColor[
       NCache[
        Rational[20, 51], 0.39215686274509803`], 
       NCache[
        Rational[14, 17], 0.8235294117647058], 
       NCache[
        Rational[50, 51], 0.9803921568627451]], 
      DiskBox[{0, 0}, 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[{Rational[-1, 8] Pi, Rational[1, 8] Pi}, {-0.39269908169872414`,
         0.39269908169872414`}]]}, {
      Dashing[{Small, Small}], 
      CircleBox[{0, 0}, 
       NCache[
        Rational[1, 4], 0.25], 
       NCache[{0, 2 Pi}, {0, 6.283185307179586}]]}, {
      CircleBox[{0, 0}, 0.57, 
       NCache[{Rational[-1, 8] Pi, Rational[1, 8] Pi}, {-0.39269908169872414`,
         0.39269908169872414`}]]}, {
      Arrowheads[0.025], 
      ArrowBox[{{0.532, 0.2}, {0.525, 0.22}}]}, {
      Arrowheads[0.025], 
      ArrowBox[{{0.532, -0.2}, {0.525, -0.22}}]}, {
      InsetBox[
       FormBox[
       "\"\\!\\(\\*FractionBox[\\(\[Pi]\\), \\(4\\)]\\)\"", 
        TraditionalForm], {0.605, 0.1}]}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->300,
   Method->{"ScalingFunctions" -> None},
   PlotLabel->FormBox[
     StyleBox[
      FrameBox["\"  z-plane \"", StripOnInput -> False], 10, 
      RGBColor[0, 0, 1], Background -> GrayLevel[1], StripOnInput -> False], 
     TraditionalForm],
   PlotRange->{{-0.7, 0.7}, {-0.7, 0.7}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.05], 
      Scaled[0.05]}, {0, 0}},
   Ticks->{Automatic, Automatic}], " ", 
  GraphicsBox[{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.002], Opacity[1.], 
     Dashing[{Small, Small}], FaceForm[Opacity[0.3]], LineBox[CompressedData["

1:eJxdm3c81f/7/416ExmlUmkQGRWh0tRVKBkZEQ3JSEk2kTJCklL2yo5s2TNc
9t4cnOOc86o0KJSMFOr7+tx+//3843a/vY7XeZ3n87qu5+N+ux0iZnYXLNhY
WFic2VlY/vf7//28Qw6jDQfE00KqzPbtE1r+R+BXjnaVsFBtFE4tsP5Bchdx
1iYo9DqyQtgcnWSPNyGNn3Nv4UoFpbCOZJV1inwPQ+3wWJlXegLJFredKE/e
OiFnTUy/E8mS/01QOnNd8eMxmYOnSa4S3CXAnfQAHbzUOv8jebFSKUop1Avd
6n+/bPxL4NnLRxSO1nvjx53aSfdJnu653a351hffRl+lS5L8OV495mqxH+4Q
OKDds0KgducPIYtcf1S68m3RhmQix2nUMi0ArXbEUVeRrLH4zehm4jNcNtQ+
JbRMIPttiUrNkCBkS3/a/HKJwDmO9Tpbm4JRQVz20XqSDfJVZJ7WhWDzyVNp
X38T2L76WalRZRiKU39yaZDcadHwqaY0HHNeJ6anLBLok+DGta0oAsVyAgMU
fxG4alPpyebsKLzDI9bjuUCuz4jVwPqMaLT5bn6+fJ5Ajug/ty6nxuB9w6Q5
gTkCC2sEYwfiYlH/VceszQ/y/hjjePd5IqoXXV7l8J3AS7TS9CaVJJyuUtW2
niaw1Sw4qbM+CR0tlSM0JgkUOv1RobsmGV1bhSdyvhAYbOUfG1eagn841ww6
fCbwvhfh8+hgKrY0ey/JfCKwfvSm163CVDz2yYQ19AOBfP33FHe8eY1ViR9n
/tAJ/NS321njdTpa+Vxo9x4lMHOddTanaAY+1/3znoVG4MPxKbbapAysUrPv
/TJEoPQDlehtcZm4opNdfKmXwA3mM+xPQ7NR5emxheY6Ap97Cu0S8szDnxyR
TulIrvcrFFhiy8e/lvJ0z2qynj6ys308m4+RGRkO6yvI93MIHUjvzsfMs/ew
M49AJv+JvfOMAkxaCvJ8EUugnSlfScRSEbberv7HiCaQ6wU/VRaK0XhE2VUs
ksAWl8fyzT7FGHTVXTMymMBbN72OEGtK0HD3ujQeP3J/tbucWgVLsTrla5+G
NYG1D8aab8qXY6fRgBD3bQKF7+goxN0tx/MT9bfrLAhcca1Kay8vxzoe940C
1wnsnShVXA8VOH7mfIu6Lvn5krP2qGtUooLZM+e1BwkMeClxXNOsCgVXFbu/
+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
AK8=
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], Thickness[0.002], Opacity[1.], 
     FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
/05YvRMDku1VWtnaUKu7jqtgsRMlhEZvRc9T8Jdk5+JB9i58p+XEbjZBwavx
R35U83ThL/2slEkGBX2sEpZyd3ZhZaTDUE08BQdMZjYpanVh7a6Fcn0ZCgZN
mn5lSenC5pAqgSf6rTj310Zb8TgNX7qLvalUbUUtm+273p2m4T4/vodvFFpR
6Oadons6NBQ811vLK9SKvFOenRnmNGzZo9NzYrwFGUmX38U/JF9/bYtiqVML
Dmz8eWhnHw0zi2Su/nncjGPDGgVx5t345in3hI9vMy50vF2qse5Gs9pWF1bn
Zrx1YH9+n1M3zrykpy0aNaOtyrnN8/7d6Ka7mFIt2oyBK/3sExndqHVxndSC
FaKfgPGt0NFuLLiUKG3yvBG3X755rvUSHfkVZ3zdIhuRFnwgj9uMjiLbAkuC
3BpRpURaUtuKjs6+weXRJxqR89UT/yY3Ok4GxP53mdmAnrZuD7Si6Nigm9EX
N1WPDq9WKW/rpqOYc9QvPvE6lPmdNuh9iIGptywcx1fV4c2dknbOxxnosF/6
fvHHWiwbPl9yTYWBGqlb4+VyarEwpvOwsB55fSLXaVi6FqUtfcWO2pBz6PiL
ljGZGnzJcbf8XRoDK2r6Cl7ur8KC7iv9THYmyp2qSaHzV+GtWqHEyjVMLG8M
0Gj6XontFdv7o/iYePq41uyTkkrMrDqeqiDExM99dvc+7atES+eWqxvlmVjo
/t8DN5kKNPRt2KpgwsTrJ0KnLouXkXPnY/fvYiZmVLIsdq4uw4GBWp27FUzk
CHB/JP+5FDVOP1L4WcPEEVeK1WJeKV57UCPFbGFixDnXHp19pfhDNMdXqo+J
ZVNU9oNHSjAqwoTfbo6JSx2vhU22lmD7pa0qLotM1K0JvMf5qxj7cxapTstM
vFAUfCz4XjHKP5Vqu7iKwCHO7mCZ+89xz9z6250CZE6wV6fzRhfirzGl1ENy
BB6z+mT/5UIhxtm7+TWT51iO+6e1KFiIvzcMZ6scJjDet87BILEAx5jN1fJA
YH5WQ9jujHz0DP4yUK5FoGn4j5LU57noFNd749QNAt0fHZZa75CL/W3Fgrrk
uVqxVyvcWy4X22rK/xqS5+4F8RmH0xU5yGooZ3POicxtRV8lHtdmY7emR8mQ
F/n3Rd9Y1lOycH+c6sn7UQTWu+tm3QzMQtGheJE15DkvZD5oUaOWhc4Fm+8+
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
cUxX8m6pozPkjNh/CCT5JMvC4jonRwi6IZpOkPxfEP+RoQ92oFB+x3Qd6TVH
fyl3hX60hsrLljs1SfZgXZuh8OkGtH9/88mTZE/2hdbBT+Ywy0EtyiZ5fcQW
oznmVQiX2+XeSbJKVF3VnhcXoGPli/IYydSqfrX6DE14sLRu3f88bqP2Dvf9
GooQUxMz+j+Py5kO/qBgLoqhLc4V//O4W7fY4uUNVbEvvSD4fx4XzW8tNymt
jwXjJ8y+kozyzx9XSF1GMX65Y/0ka4a9KWkQMEPh4iDBapKDlve83ipgifpq
GgvhJO9edbrOef0tBBP/1+YkVybEX+5YZ4sH7hyr30uyc5r20MOHDnh2c0D6
DLkerdmW1rsfOqFxs1VILslPI5hG1CAX5Jtdcb1MclodVfxakBuitOH1VSQr
UML1Zh/cwcCJBxeyyfW33hHfzfbAE6W+9JzsJfdvWHGf4d173viAhSfVhORt
dz6quR72xbktX3XGyf1PcDWIG5Dxx6Bwzvx+0tuO5iTqBUoFoGT2QwMVkl0s
q5z2it3Hun0yunlkPf29gYu3Nz/ARwYeKiZk/b15YvKRXSAIBSwcjhaR9akq
LX82luch8vfsDpwj6/dY7SefPLYQVJpP2mRD1rfX9k9iAVOP8XsFRfYf6W2H
unxlJz49wY27N3Xxk3x1uxHz9GgYPjrUWrOV7KfqmcKZuS/h2Cu2MUGQ7L+L
XZoGN0ci0fxH2PVKsj9VMx0/3DGOwuf0RyXBpMd1j88SgQNRCEemDQzJfj7z
9adSRF80jletyXhD9n/W/IjMbWosFhbKXvcj5wP1bLn6edU4XJVJOG8eJmBg
4QOh2BKHSnSjdznkPLn/3Ctzui4ePW38sJicP+70EJF1z59iUfJlmkUf6UUc
2mdpuxNxPZd6eWMPAbuudH3xzEnE7Z0bf/O9IGBLo5wUMy0Jb6dNJCXTCTC9
IQHbo1Kwd/8+vavtBJRGLy+k8KViDaVp710KARotZ49uCU3FDMEEq7AWArgc
R13vKachNzsHe2YjAQe2rH8rfSwdL17c/sKukoDLv9fdbNiTiWOpw8cSMsnr
a1cl/rHLxPDv0q2c6QSI53LoHyjLxN8bhy7ZpxBwV9hwJepwFgquudksmkCA
YOHXQ/ynn+G39yo+Qk8IOHVPLXHcOAdD2NDVwo2AsO+ft7ek5uCAC5+DqjO5
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
      "]]}},
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"Re\"", TraditionalForm], 
     FormBox["\"Im\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Epilog->{{
      RGBColor[
       NCache[
        Rational[20, 51], 0.39215686274509803`], 
       NCache[
        Rational[14, 17], 0.8235294117647058], 
       NCache[
        Rational[50, 51], 0.9803921568627451]], 
      DiskBox[{0, 0}, 
       NCache[
        Rational[1, 4], 0.25], 
       NCache[{Rational[-1, 4] Pi, Rational[1, 4] Pi}, {-0.7853981633974483, 
        0.7853981633974483}]]}, {
      Dashing[{Small, Small}], 
      LineBox[{{0, 0}, {0.3, 0.3}}]}, {
      Dashing[{Small, Small}], 
      LineBox[{{0, 0}, {0.3, -0.3}}]}, {
      CircleBox[{0, 0}, 
       NCache[
        Rational[3, 8], 0.375], 
       NCache[{Rational[-1, 4] Pi, Rational[1, 4] Pi}, {-0.7853981633974483, 
        0.7853981633974483}]]}, {
      Arrowheads[0.025], 
      ArrowBox[{{0.285, 0.242}, {0.27, 0.26}}]}, {
      Arrowheads[0.025], 
      ArrowBox[{{0.285, -0.242}, {0.27, -0.26}}]}, {
      InsetBox[
       FormBox[
       "\"\\!\\(\\*FractionBox[\\(\[Pi]\\), \\(2\\)]\\)\"", 
        TraditionalForm], {0.4, 0.1}]}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->300,
   Method->{"ScalingFunctions" -> None},
   PlotLabel->FormBox[
     StyleBox[
      FrameBox["\"  w-plane \"", StripOnInput -> False], 10, 
      RGBColor[1, 0, 0], Background -> GrayLevel[1], StripOnInput -> False], 
     TraditionalForm],
   PlotRange->{{-0.7, 0.7}, {-0.7, 0.7}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.05], 
      Scaled[0.05]}, {0, 0}},
   Ticks->{Automatic, Automatic}]}]], "Output",
 CellChangeTimes->{{3.760452181229994*^9, 3.760452219938752*^9}, {
   3.760452283511754*^9, 3.760452323180737*^9}, 3.760452360519956*^9, 
   3.760452489084258*^9, 3.760452547405328*^9, {3.760452629032865*^9, 
   3.760452639803402*^9}, {3.760452683516965*^9, 3.760452715476647*^9}, 
   3.7604527749509907`*^9, {3.7604528506748657`*^9, 3.760452874928322*^9}, {
   3.760452950721216*^9, 3.76045297253172*^9}, {3.7604530172091084`*^9, 
   3.760453032622451*^9}, {3.760453077834332*^9, 3.760453145288797*^9}, 
   3.760453185532572*^9, 3.760453236618285*^9, {3.760453300191379*^9, 
   3.760453378965549*^9}, 3.760453467140135*^9, 3.7604535107036324`*^9, 
   3.760453554643217*^9, 3.760453677051414*^9, {3.760453728501349*^9, 
   3.760453746862954*^9}, 3.7604541609866257`*^9, {3.760454251764958*^9, 
   3.7604542754868507`*^9}, {3.760454311460878*^9, 3.760454381455577*^9}, {
   3.7604544166735277`*^9, 3.760454450209713*^9}, 3.7604544959680843`*^9, 
   3.760454530887825*^9, 3.760454719344915*^9, {3.760454751934474*^9, 
   3.760454808933441*^9}, 3.7604548643524437`*^9, {3.760454920358921*^9, 
   3.76045497636546*^9}, {3.7604550794893227`*^9, 3.7604550996881313`*^9}, {
   3.7604552110846777`*^9, 3.7604553100411243`*^9}, 3.76045534153341*^9, {
   3.760455438334345*^9, 3.760455504658136*^9}, 3.760455572043743*^9, 
   3.760474339549234*^9}]
}, Open  ]],

Cell[TextData[{
 "I see now that just using Graphics>Circle would have been a somewhat \
quicker effort than the ",
 StyleBox["ParametricPlot", "Input"],
 "."
}], "Text",
 CellChangeTimes->{{3.760456048847776*^9, 3.760456088797612*^9}, {
  3.760462868144548*^9, 3.760462872770328*^9}, {3.7604638440893583`*^9, 
  3.760463844319894*^9}, {3.769276148821836*^9, 3.7692761502346992`*^9}}],

Cell["13.  2 \[LessEqual] Im[z] \[LessEqual] 5, w = I z", "Text",
 CellChangeTimes->{{3.76031309870457*^9, 3.7603131468779*^9}, 
   3.760313261212832*^9, {3.760455785873698*^9, 3.760455800294615*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[TextData[{
 "Problem 7 told me that the mapping w=\[ImaginaryI] z is a positive rotation \
of ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    FractionBox["\[Pi]", "2"],
    FontSize->21], TraditionalForm]]],
 ". The mapping is the same in this problem,"
}], "Text",
 CellChangeTimes->{{3.7604561427955933`*^9, 3.760456186874271*^9}, {
  3.7604718584529552`*^9, 3.760471865033904*^9}, {3.760471964736278*^9, 
  3.760471976374658*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"u", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{"Re", "[", 
   RowBox[{"\[ImaginaryI]", 
    RowBox[{"(", 
     RowBox[{"x", "+", 
      RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{3.760471958938198*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"Im", "[", "x", "]"}]}], "-", 
  RowBox[{"Re", "[", "y", "]"}]}]], "Output",
 CellChangeTimes->{3.760472018585764*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"v", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{"Im", "[", 
   RowBox[{"\[ImaginaryI]", " ", 
    RowBox[{"(", 
     RowBox[{"x", "+", 
      RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7604720228235197`*^9, 3.760472052868421*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"Im", "[", "y", "]"}]}], "+", 
  RowBox[{"Re", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{3.760472054016136*^9}]
}, Open  ]],

Cell["\<\
The mapping will depend on the changes done to the boundary lines, so I will \
do them one at a time\
\>", "Text",
 CellChangeTimes->{{3.7604721411952553`*^9, 3.760472175272499*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"u", "[", 
    RowBox[{"x", ",", "2"}], "]"}], ",", 
   RowBox[{"v", "[", 
    RowBox[{"x", ",", "2"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.760472180578787*^9, 3.760472249518182*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "2"}], "-", 
    RowBox[{"Im", "[", "x", "]"}]}], ",", 
   RowBox[{"Re", "[", "x", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.760472251046377*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"%", ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"x", "\[Element]", "Reals"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.760472285235292*^9, 3.760472311604478*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "2"}], ",", "x"}], "}"}]], "Output",
 CellChangeTimes->{3.760472312302926*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"u", "[", 
    RowBox[{"x", ",", "5"}], "]"}], ",", 
   RowBox[{"v", "[", 
    RowBox[{"x", ",", "5"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.760472359964262*^9, 3.7604723638185167`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "5"}], "-", 
    RowBox[{"Im", "[", "x", "]"}]}], ",", 
   RowBox[{"Re", "[", "x", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.760472365173362*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"%", ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"x", "\[Element]", "Reals"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.760472367384635*^9, 3.760472385337892*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "5"}], ",", "x"}], "}"}]], "Output",
 CellChangeTimes->{3.7604723858135843`*^9}]
}, Open  ]],

Cell[TextData[{
 "The mapped boundary lines will be at ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"u", "=", 
     RowBox[{"-", "2"}]}], ",", 
    RowBox[{"u", "=", "-"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "5, and the w-points inside will be the new territory."
}], "Text",
 CellChangeTimes->{{3.760472395066717*^9, 3.760472484586697*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RGBColor", "[", 
           RowBox[{
            FractionBox["220", "255"], ",", 
            FractionBox["245", "255"], ",", 
            FractionBox["255", "255"]}], "]"}], ",", 
          RowBox[{"Rectangle", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "4"}], ",", "2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"4", ",", "5"}], "}"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Red", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"4", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "4"}], ",", "2"}], "}"}]}], "}"}], "]"}]}], "}"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Red", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"4", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "4"}], ",", "5"}], "}"}]}], "}"}], "]"}]}], 
         "}"}]}], "}"}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", " ", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4.5", ",", 
           RowBox[{"-", "4.5"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "6.5"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Ticks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "4"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2", ",", "3", ",", 
           "4", ",", "5", ",", "6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], 
          "}"}]}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "260"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x Re\>\"", ",", "\"\<y Im\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Framed", "[", "  ", "\"\<  z-plane \>\"", "]"}], ",", "10", 
         ",", "Blue", ",", 
         RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}]}], "]"}], " ", 
    ",", "\[IndentingNewLine]", 
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RGBColor", "[", 
           RowBox[{
            FractionBox["220", "255"], ",", 
            FractionBox["245", "255"], ",", 
            FractionBox["255", "255"]}], "]"}], ",", 
          RowBox[{"Rectangle", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "5"}], ",", 
              RowBox[{"-", "1"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "2"}], ",", "6.5"}], "}"}]}], "]"}]}], "}"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Red", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "2"}], ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "2"}], ",", "6.5"}], "}"}]}], "}"}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Red", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "5"}], ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "5"}], ",", "6.5"}], "}"}]}], "}"}], "]"}]}], 
         "}"}]}], "}"}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", " ", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", 
           RowBox[{"-", "6"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "6.5"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Ticks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "4"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2", ",", "3", ",", 
           "4", ",", "5", ",", "6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], 
          "}"}]}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "230"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<u Re\>\"", ",", "\"\<v Im\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Framed", "[", "  ", "\"\<  w-plane \>\"", "]"}], ",", "10", 
         ",", "Red", ",", 
         RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}]}], "]"}]}], 
   " ", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.760456518987069*^9, 3.760456647604753*^9}, {
  3.760456716964471*^9, 3.760456733123616*^9}, {3.760456776426113*^9, 
  3.760456802784067*^9}, {3.760456861088175*^9, 3.760456945029088*^9}, {
  3.760456993410619*^9, 3.760456998449829*^9}, {3.760463044091834*^9, 
  3.760463086989787*^9}, {3.760463126387905*^9, 3.760463173025496*^9}, {
  3.760463317435302*^9, 3.760463410579774*^9}, {3.76046345438555*^9, 
  3.7604634928383636`*^9}, {3.760463725912998*^9, 3.7604637314559317`*^9}, {
  3.760472804385332*^9, 3.760472810837884*^9}, {3.760472853643729*^9, 
  3.7604729048426867`*^9}, {3.7604729457861443`*^9, 3.760473083741131*^9}, {
  3.760741876659967*^9, 3.760741882451747*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      RGBColor[
       NCache[
        Rational[44, 51], 0.8627450980392157], 
       NCache[
        Rational[49, 51], 0.9607843137254902], 1], 
      RectangleBox[{-4, 2}, {4, 5}]}, {
      Dashing[{Small, Small}], 
      RGBColor[1, 0, 0], 
      LineBox[{{4, 2}, {-4, 2}}]}, {
      Dashing[{Small, Small}], 
      RGBColor[1, 0, 0], 
      LineBox[{{4, 5}, {-4, 5}}]}}, Axes -> True, AxesOrigin -> {0, 0}, 
    PlotRange -> {{4.5, -4.5}, {-1, 6.5}}, Ticks -> {{{-4, 
        FormBox[
         RowBox[{"-", "4"}], TraditionalForm]}, {-3, 
        FormBox[
         RowBox[{"-", "3"}], TraditionalForm]}, {-2, 
        FormBox[
         RowBox[{"-", "2"}], TraditionalForm]}, {-1, 
        FormBox[
         RowBox[{"-", "1"}], TraditionalForm]}, {0, 
        FormBox["0", TraditionalForm]}, {1, 
        FormBox["1", TraditionalForm]}, {2, 
        FormBox["2", TraditionalForm]}, {3, 
        FormBox["3", TraditionalForm]}, {4, 
        FormBox["4", TraditionalForm]}, {5, 
        FormBox["5", TraditionalForm]}, {6, 
        FormBox["6", TraditionalForm]}}, {{0, 
        FormBox["0", TraditionalForm]}, {1, 
        FormBox["1", TraditionalForm]}, {2, 
        FormBox["2", TraditionalForm]}, {3, 
        FormBox["3", TraditionalForm]}, {4, 
        FormBox["4", TraditionalForm]}, {5, 
        FormBox["5", TraditionalForm]}, {6, 
        FormBox["6", TraditionalForm]}}}, ImageSize -> 260, AxesLabel -> {
      FormBox["\"x Re\"", TraditionalForm], 
      FormBox["\"y Im\"", TraditionalForm]}, PlotLabel -> FormBox[
      StyleBox[
       FrameBox["\"  z-plane \"", StripOnInput -> False], 10, 
       RGBColor[0, 0, 1], Background -> GrayLevel[1], StripOnInput -> False], 
      TraditionalForm]],GraphicsBox[{{
      RGBColor[
       NCache[
        Rational[44, 51], 0.8627450980392157], 
       NCache[
        Rational[49, 51], 0.9607843137254902], 1], 
      RectangleBox[{-5, -1}, {-2, 6.5}]}, {
      Dashing[{Small, Small}], 
      RGBColor[1, 0, 0], 
      LineBox[{{-2, -1}, {-2, 6.5}}]}, {
      Dashing[{Small, Small}], 
      RGBColor[1, 0, 0], 
      LineBox[{{-5, -1}, {-5, 6.5}}]}}, Axes -> True, AxesOrigin -> {0, 0}, 
    PlotRange -> {{2, -6}, {-1, 6.5}}, Ticks -> {{{-4, 
        FormBox[
         RowBox[{"-", "4"}], TraditionalForm]}, {-3, 
        FormBox[
         RowBox[{"-", "3"}], TraditionalForm]}, {-2, 
        FormBox[
         RowBox[{"-", "2"}], TraditionalForm]}, {-1, 
        FormBox[
         RowBox[{"-", "1"}], TraditionalForm]}, {0, 
        FormBox["0", TraditionalForm]}, {1, 
        FormBox["1", TraditionalForm]}, {2, 
        FormBox["2", TraditionalForm]}, {3, 
        FormBox["3", TraditionalForm]}, {4, 
        FormBox["4", TraditionalForm]}, {5, 
        FormBox["5", TraditionalForm]}, {6, 
        FormBox["6", TraditionalForm]}}, {{0, 
        FormBox["0", TraditionalForm]}, {1, 
        FormBox["1", TraditionalForm]}, {2, 
        FormBox["2", TraditionalForm]}, {3, 
        FormBox["3", TraditionalForm]}, {4, 
        FormBox["4", TraditionalForm]}, {5, 
        FormBox["5", TraditionalForm]}, {6, 
        FormBox["6", TraditionalForm]}}}, ImageSize -> 230, AxesLabel -> {
      FormBox["\"u Re\"", TraditionalForm], 
      FormBox["\"v Im\"", TraditionalForm]}, PlotLabel -> FormBox[
      StyleBox[
       FrameBox["\"  w-plane \"", StripOnInput -> False], 10, 
       RGBColor[1, 0, 0], Background -> GrayLevel[1], StripOnInput -> False], 
      TraditionalForm]]},
  "RowDefault"]], "Output",
 CellChangeTimes->{
  3.760456372643758*^9, {3.7604565202694798`*^9, 3.76045656172139*^9}, {
   3.7604566036671124`*^9, 3.760456648486017*^9}, 3.760456803792379*^9, {
   3.7604568670703297`*^9, 3.7604569098262463`*^9}, 3.760456946032095*^9, {
   3.7604569944721413`*^9, 3.7604569991895247`*^9}, {3.7604630690915213`*^9, 
   3.7604630883269367`*^9}, {3.760463120337297*^9, 3.760463173989312*^9}, {
   3.760463334990221*^9, 3.760463411411976*^9}, {3.7604634694061832`*^9, 
   3.760463493871992*^9}, 3.760463732286359*^9, 3.7604728117064667`*^9, 
   3.7604728702056007`*^9, 3.760472905461771*^9, {3.760472947482918*^9, 
   3.760472954449732*^9}, {3.760472985285578*^9, 3.760473023329028*^9}, {
   3.760473057961841*^9, 3.7604730844686813`*^9}, 3.76074188299832*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"15.", "  ", 
    RowBox[{"Abs", "[", 
     RowBox[{"z", "-", 
      FractionBox["1", "2"]}], "]"}]}], "\[LessEqual]", 
   FractionBox["1", "2"]}], ",", " ", 
  RowBox[{"w", "=", 
   FractionBox["1", "z"]}]}]], "Text",
 CellChangeTimes->{{3.7603131508713284`*^9, 3.760313191196186*^9}, 
   3.760313274356534*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell["\<\
The s.m. covers this problem, first noting that the circle equation can be \
manipulated\
\>", "Text",
 CellChangeTimes->{{3.760475242426114*^9, 3.760475278575749*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"x", "-", 
      FractionBox["1", "2"]}], ")"}], "2"], "+", 
   SuperscriptBox["y", "2"]}], "\[Equal]", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["1", "2"], ")"}], "2"], "\[DoubleLongRightArrow]", " ", 
    SuperscriptBox["x", "2"]}], "-", "x", "+", 
   FractionBox["1", "4"], "+", 
   SuperscriptBox["y", "2"]}], "\[Equal]", 
  RowBox[{
   RowBox[{
    FractionBox["1", "4"], "\[DoubleLongRightArrow]", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["x", "2"], "+", 
      SuperscriptBox["y", "2"]}], ")"}]}], "-", "x"}], "\[Equal]", 
  "0"}]], "Input",
 CellChangeTimes->{{3.760475310589061*^9, 3.760475452234378*^9}}],

Cell["\<\
while also pulling in an expression incorporating the conjugate (found on p. \
613 in numbered line (3))\
\>", "Text",
 CellChangeTimes->{{3.760475514809421*^9, 3.7604755163844757`*^9}, {
  3.760475579167851*^9, 3.760475593509878*^9}, {3.760475757794178*^9, 
  3.760475778776269*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["x", "2"], "+", 
   SuperscriptBox["y", "2"]}], "\[Equal]", 
  SuperscriptBox[
   RowBox[{"Abs", "[", "z", "]"}], "2"], "\[Equal]", 
  RowBox[{"z", " ", 
   RowBox[{"z", "\[Conjugate]"}]}]}]], "Input",
 CellChangeTimes->{{3.760475520166203*^9, 3.760475565175095*^9}}],

Cell["and noting that", "Text",
 CellChangeTimes->{{3.760475818639138*^9, 3.760475825286805*^9}}],

Cell[BoxData[
 RowBox[{"x", "\[Equal]", 
  FractionBox[
   RowBox[{"z", "+", 
    RowBox[{"z", "\[Conjugate]"}]}], "2"]}]], "Input",
 CellChangeTimes->{{3.760475830476306*^9, 3.7604758838049192`*^9}}],

Cell["\<\
follows from the definition of the conjugate, the circle equation is recast as\
\>", "Text",
 CellChangeTimes->{{3.760475895809309*^9, 3.7604759110358047`*^9}, {
  3.760476061448827*^9, 3.76047607329521*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"z", " ", 
    RowBox[{"z", "\[Conjugate]"}]}], "-", 
   FractionBox[
    RowBox[{"z", "+", 
     RowBox[{"z", "\[Conjugate]"}]}], "2"]}], "\[Equal]", "0"}]], "Input",
 CellChangeTimes->{{3.760572372808653*^9, 3.760572405369465*^9}}],

Cell["which is interesting, but which will not be pursued further.", "Text",
 CellChangeTimes->{{3.760572421720525*^9, 3.760572452471427*^9}}],

Cell["\<\
Instead I will make use of the transformation mapping equations:\
\>", "Text",
 CellChangeTimes->{{3.760537305648325*^9, 3.760537318015828*^9}, {
  3.760572467919161*^9, 3.7605724813991423`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"u", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{"Re", "[", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"x", "+", 
      RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], 
    RowBox[{"-", "1"}]], "]"}]}]], "Input",
 CellChangeTimes->{{3.76047386607738*^9, 3.760473874131822*^9}}],

Cell[BoxData[
 RowBox[{"Re", "[", 
  FractionBox["1", 
   RowBox[{"x", "+", 
    RowBox[{"\[ImaginaryI]", " ", "y"}]}]], "]"}]], "Output",
 CellChangeTimes->{3.760473878113751*^9, 3.760537355267866*^9, 
  3.760541404624317*^9, 3.7605699235629263`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"v", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{"Im", "[", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"x", "+", 
      RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], 
    RowBox[{"-", "1"}]], "]"}]}]], "Input",
 CellChangeTimes->{{3.760473892131181*^9, 3.76047389787536*^9}}],

Cell[BoxData[
 RowBox[{"Im", "[", 
  FractionBox["1", 
   RowBox[{"x", "+", 
    RowBox[{"\[ImaginaryI]", " ", "y"}]}]], "]"}]], "Output",
 CellChangeTimes->{3.760473899241296*^9, 3.760537358802003*^9, 
  3.760541408095907*^9, 3.760569926745343*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"com", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"u", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", 
    RowBox[{"v", "[", 
     RowBox[{"x", ",", "y"}], "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.760569404794283*^9, 3.76056945122825*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Re", "[", 
    FractionBox["1", 
     RowBox[{"x", "+", 
      RowBox[{"\[ImaginaryI]", " ", "y"}]}]], "]"}], ",", 
   RowBox[{"Im", "[", 
    FractionBox["1", 
     RowBox[{"x", "+", 
      RowBox[{"\[ImaginaryI]", " ", "y"}]}]], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7605694538029613`*^9, 3.760569929883339*^9}]
}, Open  ]],

Cell["\<\
to calculate some resulting transformation mapping of some points in the \
circle, like the center (yellow).\
\>", "Text",
 CellChangeTimes->{{3.7605373266391373`*^9, 3.760537349165839*^9}, {
  3.760569769812117*^9, 3.760569775218268*^9}, {3.760572494870306*^9, 
  3.760572556772645*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"u", "[", 
  RowBox[{
   FractionBox["1", "2"], ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.760537366744597*^9, 3.760537379372492*^9}, {
  3.760569887096264*^9, 3.760569963028537*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{{3.7605699529817123`*^9, 3.760569968494471*^9}},
 Background->RGBColor[1, 1, 0.85]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"v", "[", 
  RowBox[{
   FractionBox["1", "2"], ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.760537386312963*^9, 3.760537401435213*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.760537402589531*^9, 3.7605699378144693`*^9},
 Background->RGBColor[1, 1, 0.85]]
}, Open  ]],

Cell["\<\
The following cell shows the mapped circle will be stretched way out there on \
the u axis.\
\>", "Text",
 CellChangeTimes->{{3.760572606060042*^9, 3.760572625626523*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"u", "[", 
  RowBox[{"0.001", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.7605699926691103`*^9, 3.760569994027824*^9}, {
  3.76057006817148*^9, 3.760570068297653*^9}, {3.7605701137285643`*^9, 
  3.760570113831723*^9}}],

Cell[BoxData["1000.`"], "Output",
 CellChangeTimes->{3.760569995198748*^9, 3.760570069764106*^9, 
  3.7605701158020973`*^9}]
}, Open  ]],

Cell["\<\
I will work through the equivalence line. However, this is not really for \
application, just for interest.\
\>", "Text",
 CellChangeTimes->{{3.760463940851736*^9, 3.760463971760846*^9}, {
  3.7605683237437267`*^9, 3.760568340702277*^9}, {3.760568673987973*^9, 
  3.760568683235929*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["R\[ExponentialE]", 
   RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], "\[Equal]", "w", "\[Equal]", 
  RowBox[{"f", "[", "z", "]"}], "\[Equal]", 
  RowBox[{"f", "[", 
   RowBox[{"r", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}], "]"}], "\[Equal]", 
  RowBox[{
   SuperscriptBox["z", 
    RowBox[{"-", "1"}]], 
   SubscriptBox["\[LeftFloor]", 
    RowBox[{"z", "=", 
     RowBox[{"r", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}]}]]}], "\[Equal]", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"r", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}], ")"}], 
   RowBox[{"-", "1"}]], "\[Equal]", 
  RowBox[{
   SuperscriptBox["r", 
    RowBox[{"-", "1"}]], 
   SuperscriptBox[
    RowBox[{"(", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]], ")"}], 
    RowBox[{"-", "1"}]]}], "\[Equal]", 
  RowBox[{
   SuperscriptBox["r", 
    RowBox[{"-", "1"}]], 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Theta]"}]]}]}]], "Input",
 CellChangeTimes->{{3.7604640430788107`*^9, 3.760464081067169*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell["\<\
The below cell has a plot which doesn\[CloseCurlyQuote]t work, but I\
\[CloseCurlyQuote]m leaving it in anyway (the correct approach is in the cell \
after next). The problem is that the trig formatted circle formula causes \
problems when singularites are created by inverting it. It does show a \
illusory kind of promise, in that it presents the mapped circle outline, \
although accompanied with an extraneous curve and two illegal expression \
warnings.\
\>", "Text",
 CellChangeTimes->{{3.760568350390038*^9, 3.760568430603839*^9}, {
  3.760568506857066*^9, 3.760568539312648*^9}, {3.760568699619405*^9, 
  3.760568781457066*^9}, {3.760614366770138*^9, 3.760614399352751*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"Cos", "[", "t", "]"}]}], "+", 
          FractionBox["1", "2"]}], ")"}], ",", 
        RowBox[{"(", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"Sin", "[", "t", "]"}]}], ")"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", 
        RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Thickness", "[", "0.004", "]"}], "}"}]}], ",", 
      RowBox[{"Epilog", "\[Rule]", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x Re\>\"", ",", "\"\<y Im\>\""}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1.2", ",", 
           RowBox[{"-", "0.1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.7", ",", 
           RowBox[{"-", "0.7"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Framed", "[", "  ", "\"\<  z-plane \>\"", "]"}], ",", "10", 
         ",", "Blue", ",", 
         RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}]}], "]"}], ",", 
    
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            FractionBox["1", "2"], 
            RowBox[{"Cos", "[", "t", "]"}]}], "+", 
           FractionBox["1", "2"]}], ")"}], 
         RowBox[{"-", "1"}]], ",", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"Sin", "[", "t", "]"}]}], ")"}], 
         RowBox[{"-", "1"}]]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Green", ",", "Dashed", ",", 
         RowBox[{"Thickness", "[", "0.004", "]"}]}], "}"}]}], ",", 
      RowBox[{"Epilog", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RGBColor", "[", 
             RowBox[{
              FractionBox["220", "255"], ",", 
              FractionBox["245", "255"], ",", 
              FractionBox["255", "255"]}], "]"}], ",", 
            RowBox[{"Rectangle", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1.03", ",", 
                RowBox[{"-", "1"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"3", ",", "6.5"}], "}"}]}], "]"}]}], "}"}], ","}], 
         "*)"}], 
        RowBox[{"{", 
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{"2", ",", "0"}], "}"}], "]"}], "}"}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x Re\>\"", ",", "\"\<y Im\>\""}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"5", ",", 
           RowBox[{"-", "0.1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", 
           RowBox[{"-", "0.1"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Framed", "[", "  ", "\"\<  w-plane \>\"", "]"}], ",", "10", 
         ",", "Red", ",", 
         RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}]}], 
     RowBox[{"(*", 
      RowBox[{",", 
       RowBox[{"Exclusions", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          FractionBox["\[Pi]", "2"], ",", 
          RowBox[{"-", 
           FractionBox["\[Pi]", "2"]}], ",", 
          RowBox[{"-", "\[Pi]"}], ",", 
          RowBox[{"2", "\[Pi]"}], ",", "0"}], "}"}]}]}], "*)"}], "]"}]}], " ",
    "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.760464689850361*^9, 3.760464698819954*^9}, {
   3.760464728875188*^9, 3.76046473156043*^9}, {3.7604649898210783`*^9, 
   3.760464990619103*^9}, {3.7604650248895807`*^9, 3.760465423939762*^9}, {
   3.7604735462735977`*^9, 3.760473565542588*^9}, {3.760484300996162*^9, 
   3.760484328802289*^9}, {3.760536804824109*^9, 3.760536838171749*^9}, 
   3.76053746455473*^9, {3.760537506638761*^9, 3.760537506958552*^9}, {
   3.76053754209501*^9, 3.7605375767146797`*^9}, {3.760537610460166*^9, 
   3.760537735410131*^9}, {3.76053781738457*^9, 3.760537857203726*^9}, {
   3.76053788984019*^9, 3.760537918456274*^9}, {3.7605379661021223`*^9, 
   3.760538021569211*^9}, {3.760538157893561*^9, 3.760538205896812*^9}, {
   3.760539054520123*^9, 3.760539117987282*^9}, {3.760539151442998*^9, 
   3.760539186383937*^9}, {3.7605392800132647`*^9, 3.760539283091384*^9}, {
   3.760539348618396*^9, 3.7605393813506804`*^9}, {3.7605429029943733`*^9, 
   3.7605429117206182`*^9}, {3.760542948873053*^9, 3.760542998011889*^9}, {
   3.760551990821476*^9, 3.7605520799115477`*^9}, {3.760552113112175*^9, 
   3.760552131061804*^9}, {3.760552201491777*^9, 3.760552339914939*^9}, {
   3.760552381298788*^9, 3.7605524364381113`*^9}, {3.760552470804103*^9, 
   3.7605524715880423`*^9}, {3.7605525072843523`*^9, 3.760552535148221*^9}, {
   3.760552580094472*^9, 3.760552630628256*^9}, {3.760552767118997*^9, 
   3.7605528192665577`*^9}, {3.7605528610739202`*^9, 3.760552908022706*^9}, {
   3.760553012802814*^9, 3.760553014496586*^9}, {3.760553329634541*^9, 
   3.760553428443611*^9}, {3.76055359473882*^9, 3.760553748851041*^9}, {
   3.760553785524384*^9, 3.7605538152635517`*^9}, {3.760553960551456*^9, 
   3.760553993422345*^9}, {3.760554036092613*^9, 3.7605540895695677`*^9}, {
   3.760554197837707*^9, 3.7605542264743557`*^9}, {3.760554307686501*^9, 
   3.760554312885838*^9}, {3.760554469622167*^9, 3.760554482717113*^9}, {
   3.7605684443408337`*^9, 3.76056847701171*^9}, {3.760741908272871*^9, 
   3.760741914777459*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(\\*FractionBox[\\\"1\\\
\", \\\"0.`\\\"]\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.760568453721841*^9, 3.760568478512656*^9}, 
   3.760741915529685*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(\\*FractionBox[\\\"1\\\
\", \\\"0.`\\\"]\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.760568453721841*^9, 3.760568478512656*^9}, 
   3.76074191557257*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        FaceForm[
         Opacity[0.3]], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        Thickness[0.004]], 
       LineBox[CompressedData["
1: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
        "]]}}}, {
    DisplayFunction -> Identity, Axes -> {True, True}, AxesLabel -> {
       FormBox["\"x Re\"", TraditionalForm], 
       FormBox["\"y Im\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, 
     Method -> {"ScalingFunctions" -> None}, PlotLabel -> FormBox[
       StyleBox[
        FrameBox["\"  z-plane \"", StripOnInput -> False], 10, 
        RGBColor[0, 0, 1], Background -> GrayLevel[1], StripOnInput -> False],
        TraditionalForm], PlotRange -> {{1.2, -0.1}, {0.7, -0.7}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        FaceForm[
         Opacity[0.3]], 
        RGBColor[0, 1, 0], 
        Dashing[{Small, Small}], 
        Thickness[0.004]], 
       LineBox[CompressedData["
1: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
41C5Ot/m65E7VjY2BjG6sj3wHwxkonw=
        "]]}}}, {
    DisplayFunction -> Identity, Axes -> {True, True}, AxesLabel -> {
       FormBox["\"x Re\"", TraditionalForm], 
       FormBox["\"y Im\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Epilog -> {{
        PointBox[{2, 0}]}}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, 
     Method -> {"ScalingFunctions" -> None}, PlotLabel -> FormBox[
       StyleBox[
        FrameBox["\"  w-plane \"", StripOnInput -> False], 10, 
        RGBColor[1, 0, 0], Background -> GrayLevel[1], StripOnInput -> False],
        TraditionalForm], PlotRange -> {{5, -0.1}, {5, -0.1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{
  3.760542956349339*^9, 3.7605430000712976`*^9, {3.760552016767786*^9, 
   3.760552038937709*^9}, 3.7605520815696*^9, {3.760552117728333*^9, 
   3.760552132929734*^9}, {3.760552203304435*^9, 3.760552271727808*^9}, {
   3.7605523042659197`*^9, 3.7605523409974613`*^9}, {3.760552393888492*^9, 
   3.760552405574913*^9}, 3.7605524378470383`*^9, 3.760552475267415*^9, {
   3.760552511029798*^9, 3.760552536625124*^9}, {3.760552589588859*^9, 
   3.760552631992732*^9}, 3.760552768405342*^9, {3.760552800631146*^9, 
   3.760552822015427*^9}, {3.7605528645222073`*^9, 3.760552909506509*^9}, 
   3.760553015711422*^9, {3.760553336673758*^9, 3.7605534294214373`*^9}, 
   3.760553634100787*^9, {3.760553666811413*^9, 3.7605537498826017`*^9}, {
   3.760553796902389*^9, 3.7605538167441483`*^9}, {3.760553969892703*^9, 
   3.760553994214181*^9}, {3.760554044955345*^9, 3.760554090878509*^9}, {
   3.760554207456699*^9, 3.7605542273992968`*^9}, 3.76055431397646*^9, {
   3.760554473441827*^9, 3.760554484065583*^9}, {3.760568453778097*^9, 
   3.760568478575169*^9}, 3.760741915619693*^9}]
}, Open  ]],

Cell["\<\
The below cell shows the format that works. This time the circle maps to a \
single line. By checking the center point of the mapped circle, calculated \
above in yellow cells, it can be seen on which side of the line the body of \
the circle falls.\
\>", "Text",
 CellChangeTimes->{{3.7605685469359617`*^9, 3.760568645661077*^9}, {
  3.760568816615306*^9, 3.760568818559884*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"Cos", "[", "t", "]"}]}], "+", 
          FractionBox["1", "2"]}], ")"}], ",", 
        RowBox[{"(", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"Sin", "[", "t", "]"}]}], ")"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", 
        RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Thickness", "[", "0.004", "]"}], "}"}]}], ",", 
      RowBox[{"Epilog", "\[Rule]", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x Re\>\"", ",", "\"\<y Im\>\""}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1.5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.7"}], ",", "0.7"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Framed", "[", "  ", "\"\<  z-plane \>\"", "]"}], ",", "10", 
         ",", "Blue", ",", 
         RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}]}], "]"}], ",", 
    
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Re", "[", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", "2"}], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "t"}]]}], "+", 
            RowBox[{"1", "/", "2"}]}], ")"}], 
          RowBox[{"-", "1"}]], "]"}], ",", 
        RowBox[{"Im", "[", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"1", "/", "2"}], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "t"}]]}], ")"}], 
          RowBox[{"-", "1"}]], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", 
        RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Green", ",", "Dashed", ",", 
         RowBox[{"Thickness", "[", "0.004", "]"}]}], "}"}]}], ",", 
      RowBox[{"Epilog", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RGBColor", "[", 
             RowBox[{
              FractionBox["220", "255"], ",", 
              FractionBox["245", "255"], ",", 
              FractionBox["255", "255"]}], "]"}], ",", 
            RowBox[{"Rectangle", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1.03", ",", 
                RowBox[{"-", "2"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"5", ",", "2"}], "}"}]}], "]"}]}], "}"}], ","}], 
         "*)"}], 
        RowBox[{"{", 
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{"2", ",", "0"}], "}"}], "]"}], "}"}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<u Re\>\"", ",", "\"\<v Im\>\""}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"5", ",", 
           RowBox[{"-", "0.1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", 
           RowBox[{"-", "3"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Framed", "[", "  ", "\"\<  w-plane \>\"", "]"}], ",", "10", 
         ",", "Red", ",", 
         RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}]}], "]"}]}], 
   " ", "}"}], "]"}]], "Input",
 CellChangeTimes->{
  3.76056780518043*^9, {3.7605678572320957`*^9, 3.760567890733143*^9}, {
   3.760567925964764*^9, 3.760567948083631*^9}, {3.76056801648356*^9, 
   3.760568043800844*^9}, {3.760568094599633*^9, 3.760568101671109*^9}, {
   3.760568165038809*^9, 3.760568165300802*^9}, {3.760568882896976*^9, 
   3.760568905486083*^9}, {3.7605701936963367`*^9, 3.760570194150649*^9}, {
   3.760572142532464*^9, 3.760572154402371*^9}, {3.760741930480932*^9, 
   3.760741935848178*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        FaceForm[
         Opacity[0.3]], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        Thickness[0.004]], 
       LineBox[CompressedData["
1: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
        "]]}}}, {
    DisplayFunction -> Identity, Axes -> {True, True}, AxesLabel -> {
       FormBox["\"x Re\"", TraditionalForm], 
       FormBox["\"y Im\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, 
     Method -> {"ScalingFunctions" -> None}, PlotLabel -> FormBox[
       StyleBox[
        FrameBox["\"  z-plane \"", StripOnInput -> False], 10, 
        RGBColor[0, 0, 1], Background -> GrayLevel[1], StripOnInput -> False],
        TraditionalForm], PlotRange -> {{0, 1.5}, {-0.7, 0.7}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        FaceForm[
         Opacity[0.3]], 
        RGBColor[0, 1, 0], 
        Dashing[{Small, Small}], 
        Thickness[0.004]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGBwB2IQDQEf7BlQwAf7k/tnFpX27t8P40+qk1aSrjsP57/s
nXKA0/UBnJ8T+n/L7pvP4Xzrl5PCPN68g/Pf8TYrHeX4DOcvTD5/3lPwG5zv
c3oX1+ofP+D8J/e8Vk9P+g3n6/5ccKvO9C+cH3n86emf6//B+QbTXRxaJv+H
84MDmXobriL4rHVHC9V/IvifOg8civ+L4NdELlTcdvf//v9g8N7+zvm9no7O
CPnH03KmKAv92/8PKn/p4EbX4oQ/cPm+xikNZ6N+wfmbWrSF5bZ/h5sn7WvG
XHj/C1x+nibPD1Gjz/sZofzoNoXk5ryPcP7UN+5V3Pbv4fxnzHMFTOpe7/8N
Ne/7/aWM4o+ew92zs+ar8km9J/vZoOpfb/VyWC/6AK4/4w6befGV6/vlofyG
mxF1F5+c3+8Li5+urd0MjAf2a96A8Pn47O9OTEjfPwNqvqjDnUurevbZf4Ly
lT4f/l4idsGeFaqff9tV3SXlN+xZoPxtHDnq+RIP7Jmh/B25Vxe6Pn1sD3OP
+F/ZN01vn9vDwuNv/Updk1uv4fK/Y1Xykqe+h8v3PFpbfXjaR3tYeHpdNFKJ
2f0FLl9ReEnutd83uP7p5ixb1U5+h/ONLr5Y1ff5O1x9mivPxemyP+D8iZs+
inYXIPjKTHPWPBb8Cee/sP4bddnxF5y/7InAn1DPP3D3OCZkzXRh/geX51Ja
5L9a7T+c7yzi3pp/8z/cPd5/yzMkfiPkNV9ddLj0B8Ffs0YvpfE+gn9//j3r
mYsR/BtGx5du3omwL8D9nolF0l84P2NrZvj57N9wfp/FFp8kZoR/rF84Vp+N
/wbnp6yPWbhH8TOcb76j3PbIdET4tzqWWp6Y/ALO3xR6w0ex7wGcfzlBZqfc
nItw/qWcebwPlh2E89ljRIzVlh20AQD34r+v
        "]]}}}, {
    DisplayFunction -> Identity, Axes -> {True, True}, AxesLabel -> {
       FormBox["\"u Re\"", TraditionalForm], 
       FormBox["\"v Im\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Epilog -> {{
        PointBox[{2, 0}]}}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, 
     Method -> {"ScalingFunctions" -> None}, PlotLabel -> FormBox[
       StyleBox[
        FrameBox["\"  w-plane \"", StripOnInput -> False], 10, 
        RGBColor[1, 0, 0], Background -> GrayLevel[1], StripOnInput -> False],
        TraditionalForm], PlotRange -> {{5, -0.1}, {3, -3}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{
  3.7605677357388372`*^9, 3.7605678089284487`*^9, 3.760567859669149*^9, 
   3.760567891754484*^9, {3.760567997292303*^9, 3.760568044764098*^9}, 
   3.76056810319944*^9, 3.760568166212028*^9, {3.760568885206676*^9, 
   3.760568906292982*^9}, 3.760570195109747*^9, 3.760572156721126*^9, 
   3.7607419364328547`*^9}]
}, Open  ]],

Cell["\<\
A rectangle in the above plot was to show the body of the mapped circle in \
the w-plane, but it was very inaccurate. The set of nested concentric circles \
below gives a better idea of the area covered by the mapped body.\
\>", "Text",
 CellChangeTimes->{{3.760572208576385*^9, 3.760572281621298*^9}, {
  3.760572764023695*^9, 3.760572764798501*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pp1", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Re", "[", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{".1", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "t"}]]}], "+", 
           RowBox[{"1", "/", "2"}]}], ")"}], 
         RowBox[{"-", "1"}]], "]"}], ",", 
       RowBox[{"Im", "[", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{".1", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "t"}]]}], ")"}], 
         RowBox[{"-", "1"}]], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "10"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "12"}], ",", "12"}], "}"}]}], "}"}]}], ",", " ", 
     RowBox[{"AspectRatio", "\[Rule]", "0.6"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Brown", ",", " ", 
        RowBox[{"Thickness", "[", "0.003", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.760570954215885*^9, 3.760571048123231*^9}, {
  3.7605710789231033`*^9, 3.760571105761683*^9}, {3.76057124103769*^9, 
  3.760571255613306*^9}, {3.760571366779312*^9, 3.760571405208536*^9}, {
  3.76057143562495*^9, 3.76057149696548*^9}, {3.760571676041991*^9, 
  3.760571676512414*^9}, {3.760571853378612*^9, 3.760571853628401*^9}, {
  3.760571961449061*^9, 3.76057196750359*^9}, {3.7605720556688747`*^9, 
  3.760572080851248*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pp2", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Re", "[", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{".2", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "t"}]]}], "+", 
           RowBox[{"1", "/", "2"}]}], ")"}], 
         RowBox[{"-", "1"}]], "]"}], ",", 
       RowBox[{"Im", "[", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{".2", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "t"}]]}], ")"}], 
         RowBox[{"-", "1"}]], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Orange", ",", " ", 
        RowBox[{"Thickness", "[", "0.003", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.760571269158141*^9, 3.760571276620142*^9}, {
  3.760571499781931*^9, 3.760571499957686*^9}, {3.760571938018202*^9, 
  3.760571951920128*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pp3", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Re", "[", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{".3", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "t"}]]}], "+", 
           RowBox[{"1", "/", "2"}]}], ")"}], 
         RowBox[{"-", "1"}]], "]"}], ",", 
       RowBox[{"Im", "[", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{".3", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "t"}]]}], ")"}], 
         RowBox[{"-", "1"}]], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", " ", 
        RowBox[{"Thickness", "[", "0.003", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.760571285757653*^9, 3.760571293307824*^9}, {
   3.7605715031899633`*^9, 3.760571503565219*^9}, {3.760571917010764*^9, 
   3.760571928090036*^9}, 3.760572006933914*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pp4", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Re", "[", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{".4", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "t"}]]}], "+", 
           RowBox[{"1", "/", "2"}]}], ")"}], 
         RowBox[{"-", "1"}]], "]"}], ",", 
       RowBox[{"Im", "[", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{".4", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "t"}]]}], ")"}], 
         RowBox[{"-", "1"}]], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Green", ",", " ", 
        RowBox[{"Thickness", "[", "0.003", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.760571302045432*^9, 3.7605713103714523`*^9}, {
   3.760571507005892*^9, 3.76057150722151*^9}, {3.760571901331298*^9, 
   3.76057191234515*^9}, 3.7605720044639053`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pp5", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Re", "[", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{".5", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "t"}]]}], "+", 
           RowBox[{"1", "/", "2"}]}], ")"}], 
         RowBox[{"-", "1"}]], "]"}], ",", 
       RowBox[{"Im", "[", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{".5", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "t"}]]}], ")"}], 
         RowBox[{"-", "1"}]], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", " ", 
        RowBox[{"Thickness", "[", "0.003", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7605713178606863`*^9, 3.760571326139021*^9}, {
  3.760571510261737*^9, 3.7605715104612007`*^9}, {3.76057174275043*^9, 
  3.7605718377393427`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"pp1", ",", "pp2", ",", "pp3", ",", "pp4", ",", "pp5"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.76057132937453*^9, 3.760571341274478*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.6, 0.4, 0.2], Thickness[0.003], Opacity[1.], FaceForm[Opacity[
     0.3]], LineBox[CompressedData["
1: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
4P/fB+G9+BV/I/Rr1/8A9crxMg==
      "]]}}, {{}, {}, 
    {RGBColor[1, 0.5, 0], Thickness[0.003], Opacity[1.], FaceForm[Opacity[
     0.3]], LineBox[CompressedData["
1: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

      "]]}}, {{}, {}, 
    {RGBColor[1, 0, 0], Thickness[0.003], Opacity[1.], FaceForm[Opacity[0.3]],
      LineBox[CompressedData["
1:eJw12nk8VN//OHA7M0KMFqQkKSGUJUmvEyqVRFoQFWkhEi0qFCEiWuyisi+R
ImVJ96Jky5olSyFke0eZmTv23/k8fo+vP/B8MDOvc17LvefxuGvtXQ+f5eHi
4vqHv/3v5///YsL//VbifGH7/3yJ36Lo1qFbRG5d4sj/HClWEuBxKJjY5JIt
woO95kN9cmRJODFTH5TGix0XZvve6VAc4Zmm85Yf+4Rq75t4txdEWFeRthD2
hYBoQZ+SZCL5/tLNwtjTpX8fnuRPJ3IWd8SJYpdNLrmtcyiLUCWRpwS2Z4QQ
Pz02h9D0lW1aju3UzpPt5PaaOKXS+lQGW8qPcdRkeR7R+cOxSw67KdM4Wqkk
nzg30vNQEftIsdYSntMFxNHGrUUq2GGmrgdb+d4Tz/c8ctqOrd8u99TJtJiI
743/twv79fuqTuWpEsLIOXpiH/a79bIHh6JLibxUB+MT2JX+q2OSLpPEhtmd
KQ7YX7/JOzENyoi0x8uvXcL++KpYyGBZOfGI1nDND/u0xH8/GooqCHn1otQw
7H8nN78We/CJWC6fvz/uf/F/M/Pdf/Iz8Vh5bCoP+011+LHXPF+IIR+hTyPY
G6+1auocqCF8jJYkcLDHL3Y575OtJc4mmI4JcjNB/tBT4aMTtUTAwazfG7Df
lTW9Ph7+leAqDjztgu3m99T3rksjUdhgPHAHuy9CzOVSWyPhBP49T7Br7Hzg
GDQRpuMh6sXY5/i2b5USbyYC17VZifIwIfX71RDHty1Eu+HpYAVsOQe1AQ3Z
b4RoSI66HnbbrsrjrIBvxKO2oh+O2OS5MCWX461EZevHsjrsp81TObIzbcTW
mMM5GbxMWB9R9vfizk6in2ZZVoXNdoDrSbmdhLnRi9Mj2I83vLFskusiLlrr
71LhY0KDBLNgBW83cVM45kEhdlulqLHhlx7CSlnDZoyfCRpND8rm0nqJ1R2z
KpICTMiqDT1l8bOXMG/QC9bH3lcovSl1RR+x/bT76GPsnE1OfNuD+ggoUTLa
JciEiyuUhTc49hNZPFpuxUJMcN9xwYxr0wBRel5achx7ktdQlcd+gLio/M9o
NY0J2aIJWguxA8SYU7+ZP7bKyoqgAdogIfO5SPI4nQnP7/26cWFkkOD2/+mw
YgkTarkS70H6b8LJvWqWdykTOncljRXLjhGinjeWG2JPq51r0zMfI2oS9r2+
iy1ise1vgf8Y0fjrkx2vOBMkCnP9IsfGCI8iB4IuwYRWgd9vuYrGiQe8O300
JJnwJWztcq/Df4i7LZ/mfq5kgpB7T2MbMUnsX7ZZV00Kx1c+Oyz7fZKw+dHN
uY3dFu/39fS/ScJi5wseOWncH/Cs/7vCX6KVv8/wggwTkt/+eBBz/y/xnLXt
ufhqJhisZjgYHP5HBAvatVWtY8K9VZucV/VOEUFhAYOKCji/I/f+HOFMEVJV
NR4B2AadAelBS5lE2fszikbrmeCzVietDzEJ37sRr78oMkGd21DTKpFJbL83
+fy3EhOWbCsKsLJjEYprN6s/UMf5+n665XoPm7hfXD07gx2U8I1XmMUm7i6c
N3PSwPWT+Tw/dglFtL68Fbl/C14fJ+1Wmh5FrFrxMkJckwk7I94KecdShNnv
gsgiHSakpwnqSR3hEPSNu9ZfATyPyhv+DX2aJlI8/e0WsCF/Nj+3Z5p4aK+/
Nxjh+XH4sZIbe5oIM92zNGUXEyTnRZb/2DBDSH83TvxpyISO7EMap4JnCINH
y/k9jHG8tWOnOAdniV9FJdJKh5nww/V7wLGGOaLmgbxCDfYBE7XrG3/PEU6b
A/ouWuDPv5wO/xbmiP1vs2++OcKEq1GbDF02zxPfu9KUdh9nwl65LeZcofPE
zg+DnWE2TFj4+vxdhPEC4XN9RP3VeTy/nDvDjIsWiTXXguStL/xvv2Yc/esX
CWfdVyUCjni+Xvx5tfDXImHnMTZo54TnVeKju3yCXOSWvsZ1ci64v75JEus1
uMgNJ0rCP7gzYTP6mZbhz0VusrX56nEb12fHaotnG7lJ2fyq07p3mPCNUjMq
3sJNbsSBz2Jv4Xs327SDm1zP5DO768uEdgWdt0wzbnI+54xUjD9eX9ovfsGb
3KQQx+P3YDATFBqEBGyruEnVIy62IjFMsN14927pGR7SidhqwcEW3xBvLH2J
h3xnaqs8EMuEtdt9St1u8JAjnI0BH5/ieh0qTF8aykNujJ364/0cx5Navkn0
HQ+Z9W+r3MZ07IPcx/kFeck9cql7Nr9nAi1sgdOQwkvubit7q13IhKH5wj9e
r3jJ3PLVUqiICSke9doKhbxkkbTxl6MlTMjbMZxnV8tL2k4drHtA4HiWGorE
/OUlp+tuMzZVMWEx78yviR18ZGT72UjFTjwvMp9u1W3gI0U+DHzY18WEQ2vn
bnJ38JFvy1i/XbqZYHokgFnRy0eahpIHin7g/1c56qXzj4/cu63mpM0vJryf
lgnvkOQndxlL2Xwbx9eDFYqfuKz4SeWMwM2PuVjg8c26rKObn6x5E7anjZsF
UWqGzP4BfjJO96rnKl4WRHM9XPp7nJ8M4TaCbH4WLJG+MNc9x09OXBfb+53O
Aq4OuTN3VgmQLvMeMk7LWKDzZP/deGsB8o9pt5qLMgscHT6KKjULkGMH0rcR
KixQ8HzgNdEhQBpUlB6W2MyC75s2nnn9U4D0eMn9sUSdBT32KGLtfwLk9+57
gTLaLIjPCLQsExQk/+MOfCa2C8dz1oOHpSdIrp3j/9pwnAUV15TH1r4QJB9X
cRJ2W7HgTsJRe800QfKj8fOnH6xZEFqaJLcrW5CsjS2Qe2XLApptnfO+QkEy
4wmf8/MzLBjmL5Re1ihIpn/37SxxZcFJW6sH0QuCZKyk/Gh/EAtmFe4Jw3Eh
MnBhWio5mAXH99Z20W2FyPdTgY0OD1gwJhpf2mAvRL51U2kff8iCpc3muUaX
hMiu12WXxaJZkJwZKdvlL0SmMFjCL1JZECigRxa+FiK/L800uZnOgszB2GHJ
d0Jkn6zbpiOZLGh3V6M5lQiR5V/FK0RzcH6WTqgsfhYiD5tUP45+ywLJropv
3zqFyLMv85mcCha+rHjYqPDSyEPfjxSNf2aBn3T0sRVCNDJVTWNr/xcWmJfF
aMwuoZFa9r9NmmtZoBWT55+znEZeUa4z+tLCAuXe2hsflGikRdKKN/wDLHi2
LOHiXVMaKfFIVb+Xnw3XPOFO6hMaWXB5kRgWZIN2r/R/Z6NopMJO6Yl/NDY4
OVTzyMXRyOeCGyyXiLIhVXpirW8ijTRx/H3HYjkbDsT3LqNyaeS/Lfq3NTew
YW5disibWhr5ds2Il6USGxReoFDhBhppapiIbiuzoTskJe1UM43cLZQh26DG
hk3KHsnMDhqpohdz4t42NtyqffiqaZBG3jrw1spkPxsafgtZH1+gkZsW/C6F
mrBhwSZ0+QFuOsktIHym0ZQNih/OnN7GRyeF/NT/nbBgw4VsudhFGp1cdnj4
+30bNujL/glGy+hkfOvtkwaueH23c1tDNtHJngA3wyQ3NggqlDJWqtLJvS0d
CnxX2XDIFX1LUKOT5y76Dny9wQYeWaXOSE06eYF7zYObd9lwR/LssM5OOhm9
bq/y1ig2HG35FWxoRiftjTNl02PYIGN/Z9LmMJ3k7Lq8XPYpG7QGHJdePkIn
a3q/yIu9YIMt91ZvP0s6GSNr0y2cxQajlavmT56mk2ke4TqPstnw3ejlhj32
dDLzW2LG8lw22FV9FNrgQCfn+JW+Kb1lQzQnc7z1PJ1M7c4OcvzIhprxc2rD
l+hk0/XjNQskG7YbDXAnXKaTr472a0RVsMFRxzPwgDudjCurvVVbxYavy2yz
Iq/RSY3KblWzFjY0Ni03+uFJJ4l6crJimA2uf3yvoUA6ea0hIcRrjA1bempN
HgXRyVaFg5d0/uD8nLrV9P0+3v+yGcbbKTbEBNf1WT2gk/yS4muqF9hwpE1k
uehjOhl1/j/tCG4KlmpsN1N+QiePNj/JsOOj4LCSr5ZBOJ30aruQxEun4OLz
Y1y2kXTywR41DYdlFOzr0320J5ZOdgdttjRYSYFpx/5VGnF0UibzxZi8DAWS
AqHmy57SyR16jnZjchRE8X59VxNPJ6//emDcso4CmVj7oacJdNLxR2lqqSIF
fH8tP557Ridrx3jqYlUoWMfIODfynE4i8bnYEDUKDIpTtBNf0Mn693W/72yh
oLBn36vDiXRSfUXvksvbKGAyB8OTkuhki5HcyEU9ClR/PODelUwncwe3HHLa
ScHbzTuWf8c2CBsvv2REwetwBU12Cp3cbsRd9m4vBQwDlV33Uunk+jGzKu4D
FHBtjPkmmkYnYXR99yFTCo6wdv15iL2wsmHxhTkFze78YbR0Oln5+bk26wgF
UnfJfE/s9A8TfiaWFHyUtTg1hC1vKjOWdoICE6vnj/Zl0EnBY36ufKcoOGB3
f28q9kGDUMmz9vj9PSm/aex5qeSeqrMU8As0796Tidfnv7VezZGClTd5Q0Ow
BRvejMQ6U3D27A2ramySHblV8DIFvVfXvFzErsu2yfW4QkGW04jv5iw6+e9k
4Omx6xTQ1lX3HMUO2Bm/3/4WBdfD8z9ew47bq+jW7U1BTM1zhTBsC+OCditf
Cg5O3hN7jr1luMe305+CtN0OdzKwPXN1r5wMomBCQetqFvYL0fO5gyEUZHBP
/5eC/e4sbfvlhxSEXngzHo29KFy9fOEJBY8X7S77Yd88brHvYRQF3QFLb57H
9kixbl0XR0FtyycBI2wz26iPJQkU/OsMkpLCluKpEDqeiOsz7cKbIby+U+pJ
71kpFCyzcq/Pxl7ImqmPzqBguca7yxexZ+xiDutn4/r13xMjj+1yy2TPUC4F
a8p1djfj/b117L+cJ/kUTLm/8LiFbZ5wLNTgPQWW22LVZLB3GzoOs4op6Knb
4fIW509WXWnt+XIK0mumbzbi/D/elC+wvpICIUWLfRbYH2efewxVU1Cg2f6s
HtdPx5lo4atNFIjZs7tf4foKPp2ljVop6NLt/8zAdlmqMS/2nQJZnTgtN1yP
sUm/nYt7KUAKG7KW4fqd2W+1X28S71ex1n98uP693xh8UmDifuFhiW/G/aGi
0zgjzqHg3t8NxCHcPwfHel5RixSA5UC+F+63n+k7Xk6KcSDPS0TUOxr302DU
XQ6DA3aP3ng7RdHJKVt9Xb6VHKjsZnuY4X7eFKJ9bIMcBw5mJ4sI4H5P+/yy
Ll6dAyNr3lSuCMPzOHxrq5cmBwweDaj04vnxQHqJzeltHCjcSVuRFEInVfUq
pjQQB3yyT96QwPNm5eXRgsVDHFjdvOpGqh+dLC7IGTW+zIHAQLXCCA9cr1dm
0+yvcqD91fEAFp5voUmacj43ODA+Ses+dBXPp/BKq0ofDgzvz9rwF8/Hp0vW
2/o85oDOMV/DIUc6+exg7ZFX+Rzw/Tc+EWeN44ta3cZfyIEVYpfvR+B5/YM6
Ymn3AVs9Kz/wGJ1k16i7KXzmQFP97g/WeN5belu5d7VxQOXF3ez8fXi+d47k
L53lwPvYm74aOri+HCKCivZMw0B7lYSdCJ6PiapGvCbTcIl7Z5sZHe+3SJTj
YfNp2JGaJKcrSCcnW2KXcNtMw9eD1QenuHC9V05ffuE2DT6l4/KiTBo5tteF
/C9hGqb7I4N/4OvnyNRyIdbMNEwtKzj0N55G8n0sSnCtmoFSb+s0WTEauWIu
OYrn/Ryo1X10KEgVJGc/d4qkSSwC+6Li2FE2P/nkt5H93R3caNQwpdiwgpf0
XMyQ6jfkRrPxBuG2xbzkvOB/RvsPcKO8j41h7m94SfnCn3Ka1txoc18QFfqc
l+RzWL/M9QY3ctls+DXYk5d039hsFPKOGz3eEOf1bAsveZ1lbpmpy4NuPTz4
UT+Bhyy9ITcxa8uLxkePq/5w4CaPKcrqJV/gRRlrDQpnrbjJ0KbexuNXeNEF
5Qv6koe4yULTIytGgnjR3HaaobYuN2lxcRWR85YXNfZbR+wU4SY/mftN1Iny
Icekeqkzb7nI3Wl3g79+5UP5cY4JCguLREftbVWeWwLISEs7NUBknjg332un
EiSADrslp/Sx5gjBgr3F56IEEDP29kOtH3PEGcmJWeF8AWR5aHzX51dzBM2V
v1DqPwEkICHf4n9ojuDRM6eMHQTRCfd1t4IfzhIZ+56orTklhLzihgZ/0GYI
eVf/9cX36Aj8VM8oj7CJc9dPT6UqiKHd+lRCetMkcYSnsaheVwxduDbTGfdu
knDNtG2cNRVD6lGvDt9/Okl8TE+/b3dTDL2clBC3PDtJjEgvWW1eL4aedP81
8vw7QUzVPS7T2rEUDdUPlZ/S/0N4Z4zk7h9cioL8vcj6+lFi6tGWCWJiKVIk
79KSokcJR8PpU+ozS9HuuxYlLqdHiY9vTL5wi4mjyU8nY/78HSE2JFqtPbVN
HMXXdf6Nlhwhagb9Iz/fF0enTqtQUZa/iZu8a0rV10ug7PcBlgVdvwjdi4Pn
e1Ul0GP32JSL6b+IqJ3uT/20JdCK0fwlsld+EV7Trg+T90og/52iZ93ov4gI
7yu7DRwlUGsAI7lvWz9hdGztTSJTAl0sXiwdi+gldI6VjgW+kUB36KNDVqd7
CbuNZplQhP/umjJXodxL7NItY3tWSaDC3vLdKwN+Es9SFL3lhiTQxB/tJ10/
e4jkBi2un7IMFEnfP8Ib0UmsPNHa5qXAQH2h72SdNnUSQobJHfzKDLRDyLah
mvxOzOQX2XXoMBDdypNx/b8OwrbBmbxhxkABDw4u+u9pJw4lKSs4HmOgC2fq
54u624j94cpVBjYM1KXIOTDi3kYgTc2h1+cZyK43Fuk8byUcUn9udfdmoCnv
LOdwqoVwHJszTbvLQKa889UJoS3E2XafobJABpLhLd+XvK6F2JZd8u7VYwZ6
ukdO+sWhZsL6TbG+VQoDXYrt6D2T3kjo/ucZU5HBQDcE7TT36zcSj6Ru9DBy
GGjjv8EZy7QGQur3nMvZAgbSUEzLr5n/SmQ732778omBdJ5s3nksu4bwvXt0
fH8VAx34qccr2V1NSMdEpufXMpAQn3hsrXA1kd9udkermYEmrlksbLz4hdBP
aDpm2spA7HgHjYa4SoLv2dd9Jh0MdF4nYM615jNxszKVl+phIFWBA/JJSp+I
Cp/e0OReBtJ2fta71aqCMOy2Ktb8xUA2j20XyKBy4vGqggd8wwzkNRu4pv43
SUzezlswGGUgX5Ose6YrSOLD700vz44z0MkiE6Wo0I+EtrWq5fFJBhIOMf7u
fqCEqLAcUlX8x0DiotWax7OKCJ0ar+GOKQaK8GM7a9EKicdVl6+5shhoq1r4
oMiFd4TXuGvFCJuBRt7a8/RVviUy1x0v38thoDKuTRty1+cTlec1z9yfZqDF
zbnvb/i/ITKOGse8mmGgW8Pual6VucShFMGj72cZyJIuf2zRL5uI91wVljzH
QN2L81meuzKJQ1nnda/MM1BbWhzr70IqoVrCbaq4wECaB0Pn7T8kEYvDep8+
YIcJfpd8PvWM2Pv3RaT2It6/rudfLl+KIQI/sz6EY19f+yJpx8hjokt6u/Y3
7J7IlU5CVfeIqfaMBQrbTvvUNgXPK4SSXaHkIvZGp3B1zfPWUFMufWMEe3mB
0cmTx33gelGp0nvsxpSFg812oRAeU6N8AfumsfPTNdqR8Ec0zXcOx7Nip/a8
WclTuFw9oXYVO7og8oe+XCKsY/ruaMDr+VEvothgnwL3Yy+/EsG+dNA59ERq
Otj3CoWp4fW/2SFzsP93Fizf2DigifcHeO4l2G96BWO8fqWyeP9yvjzocnn3
GrYtk1QYxfsttFfeMe14HtR/ylofR+H6qioJ7+TkQ29XYqMqzk9+8hOKFlcA
+L3suXA+r4b86rLsLgSL5ToX4S8DpVu3RXh4F8MzccEz9hMM5KTNoR6u/gCf
xH9ePjLGQJXxNarZpwnodO3PWzeC4+HziW/3IaGI8NdrH2KgYN33akfNyyAj
SyZgrI+BTkgEvzf8Vw5NI5KeJj8ZyC/f1fhteQUUdr9e+6Qb7+fvgDVy4Z9g
vU8/u7YNv37VQMfw1kroWrVRZ76agRi9S/h1r1WD1o+I4u2VON/c4nKbjteA
+7p7FlblDDS6RaGJoVsLvjdsA7cX4/VKy1MNc3XQ7K8V/AT3r6G3mdq/XY3Q
r3/J8Ecyjl9f+ml1XiN83XPu3ZLnuB868i3i1zVBeVNfnkQkA/26eVhlK38z
1HtGpVbfYSClK5d41lW1wI0DcxUat3B+aT9PNG37BnZD48G3rzLQ8Ws7+G5l
foOWO8KyXy4wUM3BkfKi4FYYefK2XgbPM9dVsT4TJu1w7avchLg0rs/Rp3tX
NnZCrYR38KAEA3mXRb6zQV1woFHwSJIwA9nWz96Mfd0F3+6pZXbM4fm9NO/O
7KNuyHdq56AfeP7m1UicNP8BzdH0bXsSJJDWy+KfaLgXQhbIIRtRCbTEJdAz
/8wAKJ19eD+cXwK9f2MyeC96AHAhMog5ccS8yDQ4WjsAW+pGe1ij4kjJdW16
/5ZB+GC49ehIpThaGpOf+5F7COJCN8yv9hZH29jC2Zef/Yav3UJLnAeWIpWi
k+NnWkahT2TO9ckRMfRZPfCNQ8QkKIv0hI8eoqMFEFFs08LnHOHGnv/06ag1
9qn/6kMU3M/+SONWoaMXEbsunr5AgVr0J8PjQnQUMVn3thGfE6RunCY/ldFQ
4TaJa/b4vnf75m+fcnRo6GrWr8dGXzgQFNyoOqImhOY4VV3N5jMQbeARI3JY
AIGCx7qnZvMQbKLoILVbADVl+LR7npsH9s2AhS3bBJBpoJf7Ua952B/Y5P1w
tQB6dHqr8VT6PDQwW96Oj/GjwUvHfnYszINd1msJ9fv8aNXpPxv2vlyA7y0K
XyLx/Uv/la1dIQuLkFw8q3/bkxcRvK1VdXu4Ua1M1ej3y7zIurN1W4I5N9I3
7n1pcI4X7bks/PGCDTfqbV+rpmfOi2w/t8xOunGjQCP/6MoNvGgX4/TE53hu
xG/WPajbzoPaXxuI3fnLjTpExjYpAw/aTrM2kormQcvkNnmvVOdGFps3j+9v
5kVL3vS09Ksvwvgb7+sBffzIfkHmmHHTHPxkiB52fyKIVM9EF3/9PgM6Zn6b
inhoaEx0rbdLywyQ79R09grS0PwlhXDG1xlwv+O4qUGYhjrq3J66kzOgMC9D
1knSUJSLpYln+gwoukzcv61IQ9VKM9Wvr8/A7hO16SXGNDSn+ITmKTUDZ1+1
/YgIoiHG9YkT7YwZeCNw7Z3tA5ynD+rrdEVnwKZe44jcIxp6sI3FXsI7Ax9b
bX88iaahpba+vKzxaXCf0ZZUTaOhbRu3mpSVTUPro1SkVU5DeUMnFda6TkOe
m015GIuGTHXPT7x1nIaEtYqceg4NzTT82GPqMA2fvKpKBedoaAuz9s5jq2lo
vDvMtOehI2e1WBsrI3x/f3zPNCFKR7nDL6eHpachTm8xiqFIRx8Gbjk3L5sG
y3V7TndvpKORxk6esqXT8KYg6WWCMh3ZbLP1zRGYhhd0j880DTo6Hty4suIf
BxSF5iYC9ejooaazY1ctB2RZ3J4yuM599zrrSeK6fH0qQ9jZnI6sTDWbzMs5
0J9dKVFgQUdJqYc1uvD5JWK43lfdko4OhixRVEzjQEaOQVPdaRyvWYlIjC8H
/nJdfxV3mY6qaWq+0t4cKAqstXF3p6Pddj2nE/H56XjBuhsGV+nozl2G2QdX
DvTdq5mq9aAjS0i1VTyJz2tSfyf9btOR4qultZV6HAjTK4kNDKaj+31PpVp1
OKBUeGa4PoSOzORb5oe2csAxVzhKLJSOHt3/4LFMhQNG52REvB/SkdFA2+f4
VRxIlum1E4qgo+dGM0e/4PNk/fzqF9KReD1B221Zkhy4LSOspxhFRzKvN5af
EOHAo7N9AUoxdLR3n/Nt8wUKMsKfX+h9Skfb5vhOR89QoLniWEBpPB0Zcp17
2svG59/sprnwBDrqFNIQ956gYLO34azKczriKb5t1DiGz9NRLb4T2EJCNhWK
wxSY37Gxf/mCjgr8iMgefJ4+9uGZulgSXq+Uab9+DwU3dBZl32P/FPF2TsTn
72f1aQ6WyXSk5b6g7N5MwZ9+5fl7KXTktsXb+mc9jqex1FQylY5ODDELD9VS
UF60yInDDt1hydH9RIFjhujxiDQ6Yu4Pb84nKTh8IYEumE5Hn1aea1AvpUA9
7tTyK9jH5f3GXhdRsGiw/VYHtuHGxHWa7/B5X1xSWycDx6fkebU4j4IJm9Z9
D7FjTjR2GuZSELXhQkEvtvhGB4vGlxTsX1V4QzmTjkblFzpPZVDw/mFeuCu2
vYDTpX8pFMj47BHIwc7O9qAHJVJgFenQ+AubQ5t9KfeMgnG5xb+MLDqKV6w7
9AHP0WlZ+kV9bCOpL/+soynYp+Gpdxpbkrvu8Vw4BaaZ+854YQ8uflRKfESB
wu1L/Y+xQzWD3huHUvDUfKDwBbZqAWPb1H0KlFzThzKwb943z3hxjwJWbcHF
LGz5VC1+cz+cLwEx41Rsrf73B/h8KHC48NYzFjtktuVGsRcFVf0ZAoHYuwPv
379yE+dD/O+wCzb623VL7ToFrnrh8qbY6dea9/1xpyDYNDp/A/ZdmRtTua4U
KA8IxM/g9Zrmdl296kzB8M7/uiqxn5aK1eo5UsDZf/zKA+z3oZum+M9RsO2Z
hf0B7LOr9ow221Ow5sa/DF7syOU+OUmnKPhUtntvAd7/kMMdD/ZbUXA9xiqE
DxvVtLtvOUbBZR8ttRScz/4Cg4VVFhRQo4Yu+thmyhUz0yYUuN2wKbTB9WEt
FnlufB9+fXD8535cP+kSB1z69lCwav6Wiz32TmoRtSAKEj4/DDXF9XdGoVWo
UZ+Ch4eFBEpwfYYtbrdr2E6B9qtkqbXYbieDilo1Kchf2yHRmYjnTfe9Mi4l
vH/Lk80Xn9HRUqONX8QVKTh/40n6Nuydefv3rV+H612Fir2I+8lbd3eRhSzu
p6mhIx9x/3U7yfDVi+P6fS6vtAL3p41sceY/UQqG7ly9IBtNR1JvHhRKLaHg
pPXkblncz5NdJ4VcBSgodbHtpuH+j5E6rKY9ywbdQcXbUXg+qGgv73HhsMEv
r73AMYyOXlt59qWz2LBlU3WoNp4npT8lB+Un2SAeELWmFM8f0XsRMZqDbHDw
O9DiHUBHwZ02H273s8E+6Pyy1f50RGsaVKj9yQaXph0z7+/SUV61V4lTJxuy
A5xzOu7g9/u7sfxTAxusLNIrvt7E9f7kYIPcVzasTN63Xu8GHR1wmRe7U8OG
N+F3VJKu43lkErnO4DMbgu6qq9peoSMBbnOr/mI2/F1dwRPoTEcBz29r3k9j
w6POMJssWzqaHfi8qymZDdeMb5gEnqAjv55kQiaRDQcl+mtsrOjo0Lw6b+FT
NuzY8vLa3yO4fsueO4g8ZsPnR4URZQfo6NTUyytKXmxwa69+MK+D56n0zXPR
N9lAe/A+74wWzl/U7WRBDzZMdoy6lW+ho0u/+Kf+uLHhd8sqwlGVjsw/umV0
nGeDrfN85il5OqLORt1cfoQNATI8V0bouJ9dc3gyzNkgzeQEfxekI+G26Dy9
Q2yoTxPfV86H+1vd9bbjfjYc8NxY4r1AQ5Y1N0N+IDZs3/TzYfxfGrL9rvlK
ZTMbnp5vq77VRkPLT869/KmM16Og8YbVTEPWWqO5EUpsiD+dcNCxgYYUqHPl
fOvZ8MH/Veb2KhrapPGma06GDTcHDIXvFdHQ3tQOrQN0Nggd9TxFxtHQsr7F
BgMhNnT1dykK4+t7jstBxg4BNmyoLU86FE5DE463Hm7lwft7tqnkcwi+nu8/
oqU9w4It14VCz3nRkK6wGTtolAVJN1N8PW1oSHV89lrcMAuylk3z2FvSkJzn
kqCcIRb8ovSNDY7QUOfpAduOfhYc6c2QnzxAQ/ca/LNQFwuGUe1Wbj0ayt1k
kmBdx4I+1Xt50ytoyIrfL8m/hgXF2lMTXgwaKhJgKbyuYgHFb8gzI0pDt9qv
xgt/ZoFO71xmHz8NcXIStnwrZcHLogPrz08JIYX2FUNZuSzgDempPfBVCL1W
/CxwLoIFFY9EVfy9hNAuR+mfsU9YkG48Gt5yXQiJbj25v+ERCyx9XozKuAmh
/sfLv+0MZYF1ge7F6LNCSHDkUqj6PRYY7PzxW9dUCH0dunDO9gYLXr94cmDz
aiHkks5bnXkde2XxRZGVQsg1cSCDusoC/derogbFhdDeE8Zd0W4suC2Vt9SX
Xwhp/4wZGnFiQfOWcw0O44LIxcTfq8WWBWHulcJ9hYLIIJdLRseGBRdd7TPN
8wRRzlyefLw1C542x18qeSmIQgdGLjgdx/FsDvG49UwQnRTbk7vCnAXJF8SL
0vwEUfzbR7JvjVgg0G+WW2QiiCb+9kWPq7CgvezulfbvAoh9VKLbV5kFKque
uIU3CyCPr4NWKzexQPVju+S+WgF0uzVkwXgDC1x3K1okfhBA63NyGgvXsuCE
yvJh/ucCyPpgdXnTchasMNA0TLQXQIkn+Zz7uVnwsSEkVm2QH60b0JFM4GJB
4jGlQwo9/Gimq7XDcpEJ71Is/ki08iNvocn8ljkm1EWZ/Ov5xI/0qlTi2igm
eHjKmSmn8COtZPdLS/8wgSvR+kyqHT9qesefatrFhOv+Y7Chgw+pqG9o2dnJ
BN3fKiPMBj7Ue7m7X+07Ez6vDAgs/cKHfGyTUyTbmSCb4vYS3vOhtQGbE4eb
mXAmf3eVYBQf+pmYPVdUw4TYa4rSmYf5kMYda/OFYib8cFL32VnFi6bWNkfT
sM9sEScuEbyITJZ8tayICT6XlmrFveNFH34M71V/zwQmzNT3p/Cil9QVedd8
Jph3vGRv9+VF3SLLeRjZTDhn0jgjpMuLVv4S5ZpMYMK9XUt2KKfyIFFvrq/c
2GIlqa9m43jQ+gSOp2Q8E/7cvfKt8hEPUo5/7b0jDsf3znT3QS8edG2tBVd0
FBNcRmtEZCx40LderYBrD5lw9uJM3YdFbjSsF1f5zZcJxfF3R1WPcqO+F9s+
cWMLr/a4a72fG5V5kk/UfJiQGOGvehe4kbBq+IvQ20wY2L23ulyJG0UZRrhZ
eDLhlaLRJdoCF6r2u+rNf40JY3VOSrmpXEjPy2Nh8QIT5uonlgz2L0IPR8bn
MPbHv+yM8K+LILpO7GXqeSZkCTw4tb1wEQQ5PrMHzzGBaozUuBy6CFUu/N5p
Z/D6k0QWvHUWQTrn2vvrJ3E+HSSHFIMXIH38zufHR5igOH63vEVpHoZYKV85
FkxYUhUi/YgxD18vN189jW19xG377vk5eCK14rnGYSb8Fub8jm2cg2v/RE50
HWLC8viTkf9dn4OUnxLqJgeYoPkwV9qwfBZW8LafSDRggr+U7tZ6ixl4vbr0
+GpsPa+WZnn9GfhzhHvg6S6cP9lINTdFfO46kZsdg5iQXr1Ne5aDzz0vuTkx
O5mw/fWi2OeEafDr8zB4u50JK0sOFGsOceCqbcWyI1uZsOqKwYksfB8UeP1a
dv8WJlR4denuOkGBxrNLdW7Ygs9eBTQb4vsAzXPpjzWY8Fze3nNAEt+HhtVU
tKsx4Qar17PyHRtW3Ddx8lbBnycb9yFwmgWcK7YyqopMMLJ70KmI89R4Za3J
p/VMUGEEVNDtmBDEcF5hgx3nKTs1vIcJlX/eeYUqMGELhBhGSDDBsFzei5LH
/XXCyCM9cwpQi/ua4TU4PyHPnlW2/YOJMJOfQdj64s1nD3/4BxqjJ7Q3YatF
NI10JP6DzcoWmZdWM0GmjLm7zfkfqBnvSFhYxYTDLSfXhPP8g4BbLU+2SzNB
Kndpr4zqX4jJ1c8dkGJCyouAqWMSf8Evu//UQ+yV2i56odQkCH5U8h5aifvp
9qt7Y2WTIBDanvR0BROOn5rtcT02CWy61LW1y5iQOrTRcsf8H7hZsbgybikT
WsMutD6IxjOAX/iPNbZE9aXaCIcxmNFugFXYDudOi0ZpjME+BXGrF2JMKHw7
mu1fOwru/K6nXonifvPYlsVYHAHvucnkviVMyA6ujeY9OwyqeaU6WdjK7cnb
0jSGQSEuZs8V7L0ab/4YLPyGoa3LWwWwvRTz6pyif8O6S/fztgozock57PW1
6iEQ12+yTqEx4dO+Pav9VAZBu8Q+4ir24HTadB1nAL6MPtq7GzvjGydf/PMA
xOVekh4WYsJ9XhFOiO0AmOuNuW7Fbpu5J7c77BfkfLtZ1SvABNdvG4Rb//TB
g1mbJ4XYZK1XZXNxH0jqJX97hG2ygVSuu4etKFFugK0bwFHMW90HyqGRO7P5
8XTSfm9kYtoLG8w+5UbyMaGA/f1+kFUPDObEa7hh00rr+HsGuqFeRMv4ILZi
iVP+xsvdEGp1bKsgdum1SY20e11gLbBr0ZcXz9dlOS/087+Dqfi8gj32mYLL
YYd2fof3z/t/GGCn0PJqrKo7IHjLoKgANljtLj3+sx34Stm24Ty4/7vM3ebp
bRCgrLzuBrZjfmRRa2QrENaCXrbYg7WES7pcK8Toeg0rYZ/vSsrQ0f4GPzLq
s6q5mZBTLGkuZtcMtg8KhPOxvwSP974bawIB/vbFeGwzj/AZy+tNMKcVm+iO
/fSKg3VoSCOYzXRUK2AX0IWcr138CuE5ZhUS2Ksyr8xd9amDNwZZh7ixS/co
9FyMrIUfld1yvf97vje3JwcR1ZB6IvlsI3a+g4bqmm9VkCm7Qb8M+zpxSoY9
/AUSpoxSUrDnNebswyQq4ZtOw9ZobIG0LwfMNnyGChp1NBi7xWRjufCOT+Cv
yXvYHbtQ/tb1y2fLQWRvp/L5//3/uQ5D6VtlkG6tGWODvel7aunHMBJsrlpv
/N/zz75trKy/rqWQ+UHGBGEPaE3zr44tAYfg/TzbsK37yqld5UWwal//fnXs
vowWsZNj7+FwwY/1StjlZa963CXfwdVufHDDFov7Pumj/xa6VrGfrMIWze7q
CDqXB2Xr6etX/G/9R3auD3n4GnZTV/f97/nvZlOp2qVuOWDXv5Xrf8+Hl3il
HeapyISxIKN9dOyj6xHXuGQahPWkKAhiWyTxTdWfS4KGdRZP+LB73m6MsHRL
AL7Jg0/+97z6nq/y++jLouDohggFbuwqyuuek1solCwq7Pvf8+2LNAavq5s3
/N/z8EuMPLLA6euO/wcJNPDq
      "]]}}, {{}, {}, 
    {RGBColor[0, 1, 0], Thickness[0.003], Opacity[1.], FaceForm[Opacity[0.3]],
      LineBox[CompressedData["
1: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
      "]]}}, {{}, {}, 
    {RGBColor[0, 0, 1], Thickness[0.003], Opacity[1.], FaceForm[Opacity[0.3]],
      LineBox[CompressedData["
1:eJxTTMoPSmViYGBwB2IQDQEf7BlQwAf7k/tnFpX27t8P40+qk1aSrjsP57/s
nXKA0/UBnJ8T+n/L7pvP4Xzrl5PCPN68g/Pf8TYrHeX4DOcvTD5/3lPwG5zv
c3oX1+ofP+D8J/e8Vk9P+g3n6/5ccKvO9C+cH3n86emf6//B+QbTXRxaJv+H
84MDmXobriL4rHVHC9V/IvifOg8civ+L4NdELlTcdvf//v9g8N7+zvm9no7O
CPnH03KmKAv92/8PKn/p4EbX4oQ/cPm+xikNZ6N+wfmbWrSF5bZ/h5sn7WvG
XHj/C1x+nibPD1Gjz/sZofzoNoXk5ryPcP7UN+5V3Pbv4fxnzHMFTOpe7/8N
Ne/7/aWM4o+ew92zs+ar8km9J/vZoOpfb/VyWC/6AK4/4w6befGV6/vlofyG
mxF1F5+c3+8Li5+urd0MjAf2a96A8Pn47O9OTEjfPwNqvqjDnUurevbZf4Ly
lT4f/l4idsGeFaqff9tV3SXlN+xZoPxtHDnq+RIP7Jmh/B25Vxe6Pn1sD3OP
+F/ZN01vn9vDwuNv/Updk1uv4fK/Y1Xykqe+h8v3PFpbfXjaR3tYeHpdNFKJ
2f0FLl9ReEnutd83uP7p5ixb1U5+h/ONLr5Y1ff5O1x9mivPxemyP+D8iZs+
inYXIPjKTHPWPBb8Cee/sP4bddnxF5y/7InAn1DPP3D3OCZkzXRh/geX51Ja
5L9a7T+c7yzi3pp/8z/cPd5/yzMkfiPkNV9ddLj0B8Ffs0YvpfE+gn9//j3r
mYsR/BtGx5du3omwL8D9nolF0l84P2NrZvj57N9wfp/FFp8kZoR/rF84Vp+N
/wbnp6yPWbhH8TOcb76j3PbIdET4tzqWWp6Y/ALO3xR6w0ex7wGcfzlBZqfc
nItw/qWcebwPlh2E89ljRIzVlh20AQD34r+v
      "]]}}},
  AspectRatio->0.6,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->400,
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{0, 10}, {-12, 12}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7605713418258753`*^9, 3.760571408922709*^9, 3.760571451866376*^9, 
   3.7605714823334923`*^9, {3.760571515420787*^9, 3.760571532984133*^9}, 
   3.7605716938575497`*^9, {3.760571810998706*^9, 3.7605718576435013`*^9}, 
   3.7605719846962337`*^9, 3.760572014894444*^9, {3.760572064897292*^9, 
   3.760572084640811*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"17.", "  ", "-", 
    RowBox[{"Log", "[", "2", "]"}]}], "\[LessEqual]", "x", "\[LessEqual]", 
   RowBox[{"Log", "[", "4", "]"}]}], ",", " ", 
  RowBox[{"w", "=", 
   SuperscriptBox["\[ExponentialE]", "z"]}]}]], "Text",
 CellChangeTimes->{{3.7603131941824703`*^9, 3.760313239490735*^9}, 
   3.760313289811902*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell["Doing a little log identity,", "Text",
 CellChangeTimes->{{3.760622862184485*^9, 3.760622902253167*^9}, {
  3.7606233863885202`*^9, 3.760623401257682*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Log", "[", 
   FractionBox["1", "2"], "]"}], "\[LessEqual]", "x", "\[LessEqual]", 
  RowBox[{"Log", "[", "4", "]"}]}]], "Input",
 CellChangeTimes->{{3.760623409856021*^9, 3.760623440529496*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"Log", "[", "2", "]"}]}], "\[LessEqual]", "x", "\[LessEqual]", 
  RowBox[{"Log", "[", "4", "]"}]}]], "Output",
 CellChangeTimes->{3.7606234418188667`*^9}]
}, Open  ]],

Cell["\<\
As I understand it, the logarithm being a monotonically increasing function \
allows me to say\
\>", "Text",
 CellChangeTimes->{{3.760623482717534*^9, 3.7606234940930653`*^9}, {
  3.760623529955214*^9, 3.760623544826248*^9}, {3.760647021047369*^9, 
  3.76064703135107*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], "\[LessEqual]", 
  SuperscriptBox["\[ExponentialE]", "x"], "\[LessEqual]", "4"}]], "Input",
 CellChangeTimes->{{3.7606234980606613`*^9, 3.760623519453205*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], "\[LessEqual]", 
  SuperscriptBox["\[ExponentialE]", "x"], "\[LessEqual]", "4"}]], "Output",
 CellChangeTimes->{3.760623520813459*^9}]
}, Open  ]],

Cell["\<\
Meanwhile the little trick in numbered line (10) on p. 631 confers\
\>", "Text",
 CellChangeTimes->{{3.7606241382992764`*^9, 3.760624167992535*^9}, {
  3.760647057144905*^9, 3.760647059998151*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Abs", "[", 
   SuperscriptBox["\[ExponentialE]", "z"], "]"}], "\[Equal]", 
  SuperscriptBox["\[ExponentialE]", "x"]}]], "Text",
 CellChangeTimes->{{3.760624181958261*^9, 3.760624202966683*^9}, 
   3.760624235609029*^9}],

Cell["So that", "Text",
 CellChangeTimes->{{3.7606242893627853`*^9, 3.7606242899612417`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], "\[LessEqual]", 
   RowBox[{"Abs", "[", 
    SuperscriptBox["\[ExponentialE]", "z"], "]"}], "\[LessEqual]", 
   RowBox[{"4", " ", "\[DoubleLongRightArrow]", " ", 
    FractionBox["1", "2"]}], "\[LessEqual]", 
   RowBox[{"Abs", "[", "w", "]"}], "\[LessEqual]", 
   RowBox[{
    RowBox[{"4", " ", 
     StyleBox["by",
      FontFamily->"Charter"], 
     StyleBox[" ",
      FontFamily->"Charter"], 
     StyleBox["the",
      FontFamily->"Charter"], 
     StyleBox[" ",
      FontFamily->"Charter"], 
     StyleBox["problem",
      FontFamily->"Charter"], 
     StyleBox[" ",
      FontFamily->"Charter"], 
     StyleBox[
      RowBox[{"description", ".", " ", "So"}],
      FontFamily->"Charter"], 
     StyleBox[" ",
      FontFamily->"Charter"], 
     StyleBox["in",
      FontFamily->"Charter"], 
     StyleBox[" ",
      FontFamily->"Charter"], 
     StyleBox["the",
      FontFamily->"Charter"], 
     StyleBox[" ",
      FontFamily->"Charter"], 
     StyleBox["w",
      FontFamily->"Charter"]}], 
    StyleBox["-",
     FontFamily->"Charter"], 
    StyleBox[
     RowBox[{"plane", " ", "it", " ", "becomes", " ", "an", " ", "annulus"}],
     FontFamily->"Charter"]}]}], 
  StyleBox[",",
   FontFamily->"Charter"], 
  StyleBox[" ",
   FontFamily->"Charter"], 
  StyleBox[
   RowBox[{
   "with", " ", "the", " ", "radii", " ", "of", " ", "the", " ", "two", " ", 
    "circles", " ", "being", " ", 
    FractionBox["1", "2"], " ", "and", " ", "4."}],
   FontFamily->"Charter"]}]], "Text",
 CellChangeTimes->{
  3.7606243202109013`*^9, {3.760624362939209*^9, 3.760624439947363*^9}, {
   3.760624476394856*^9, 3.760624477640726*^9}, {3.760627724525597*^9, 
   3.760627746356607*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"-", 
   RowBox[{"Log", "[", "2", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.760573197720665*^9, 3.760573211440303*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.6931471805599453`"}]], "Output",
 CellChangeTimes->{3.760573212228043*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Log", "[", "4", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.760573215622263*^9, 3.760573222728047*^9}}],

Cell[BoxData["1.3862943611198906`"], "Output",
 CellChangeTimes->{3.760573223650975*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rangein", "=", 
  RowBox[{"Range", "[", 
   RowBox[{
    RowBox[{"-", ".69"}], ",", "1.38", ",", "0.15"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.760573676538351*^9, 3.760573707440971*^9}, 
   3.760574305095622*^9, {3.760574356156919*^9, 3.760574378004039*^9}, {
   3.760575008058769*^9, 3.7605750123361397`*^9}, 3.760575805761183*^9, {
   3.760575845920313*^9, 3.760575846118259*^9}, {3.7606145037239122`*^9, 
   3.760614539472653*^9}, 3.760622982914517*^9, {3.760625303648169*^9, 
   3.7606253130160418`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.69`"}], ",", 
   RowBox[{"-", "0.5399999999999999`"}], ",", 
   RowBox[{"-", "0.38999999999999996`"}], ",", 
   RowBox[{"-", "0.24`"}], ",", 
   RowBox[{"-", "0.08999999999999997`"}], ",", "0.06000000000000005`", ",", 
   "0.20999999999999996`", ",", "0.3600000000000001`", ",", "0.51`", ",", 
   "0.6599999999999999`", ",", "0.81`", ",", "0.96`", ",", 
   "1.1099999999999999`", ",", "1.26`"}], "}"}]], "Output",
 CellChangeTimes->{{3.760625304494553*^9, 3.760625320220325*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     SuperscriptBox["\[ExponentialE]", "n"], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.69`"}], ",", 
        RowBox[{"-", "0.5399999999999999`"}], ",", 
        RowBox[{"-", "0.38999999999999996`"}], ",", 
        RowBox[{"-", "0.24`"}], ",", 
        RowBox[{"-", "0.08999999999999997`"}], ",", "0.06000000000000005`", 
        ",", "0.20999999999999996`", ",", "0.3600000000000001`", ",", "0.51`",
         ",", "0.6599999999999999`", ",", "0.81`", ",", "0.96`", ",", 
        "1.1099999999999999`", ",", "1.26`", ",", "1.38"}], "}"}]}], "}"}]}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.760614585871496*^9, 3.7606146567620497`*^9}, {
   3.76061478625893*^9, 3.7606148620058527`*^9}, {3.760615051451079*^9, 
   3.760615086888585*^9}, {3.760615122887762*^9, 3.760615129590163*^9}, {
   3.760615423277994*^9, 3.760615433612113*^9}, {3.760615467386355*^9, 
   3.760615525550641*^9}, {3.760615638491455*^9, 3.760615650519265*^9}, {
   3.7606157170609303`*^9, 3.760615824852848*^9}, {3.760620748737947*^9, 
   3.760620986062373*^9}, {3.7606210303886147`*^9, 3.7606212876856213`*^9}, {
   3.760621320325251*^9, 3.760621366664763*^9}, 3.760621476357411*^9, {
   3.7606215935397253`*^9, 3.760621633361165*^9}, {3.760621712966771*^9, 
   3.760621725162943*^9}, {3.760621781122336*^9, 3.760621998724181*^9}, {
   3.760622054697908*^9, 3.760622125188048*^9}, {3.760622219304564*^9, 
   3.760622221470367*^9}, {3.760622285572279*^9, 3.7606223008415623`*^9}, {
   3.760622795348548*^9, 3.7606228100527782`*^9}, {3.760628752166205*^9, 
   3.760628808475741*^9}, {3.760628885071315*^9, 3.760628906621913*^9}, 
   3.7606295058277473`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Flatten", "[", "%", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.760628929760523*^9, 3.760628932997684*^9}, {
  3.760629511848535*^9, 3.760629513670642*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"color1", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{
     FractionBox["210", "255"], ",", 
     FractionBox["210", "255"], ",", 
     FractionBox["100", "255"]}], "]"}]}], ";", 
  RowBox[{"color2", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{
     FractionBox["10", "255"], ",", 
     FractionBox["160", "255"], ",", 
     FractionBox["50", "255"]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"color3", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{
     FractionBox["200", "255"], ",", 
     FractionBox["30", "255"], ",", 
     FractionBox["250", "255"]}], "]"}]}], ";", 
  RowBox[{"color4", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{
     FractionBox["120", "255"], ",", 
     FractionBox["220", "255"], ",", 
     FractionBox["220", "255"]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"color5", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{
     FractionBox["200", "255"], ",", 
     FractionBox["22", "255"], ",", 
     FractionBox["22", "255"]}], "]"}]}], ";", 
  RowBox[{"color6", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{
     FractionBox["100", "255"], ",", 
     FractionBox["100", "255"], ",", 
     FractionBox["240", "255"]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"color7", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{
     FractionBox["240", "255"], ",", 
     FractionBox["240", "255"], ",", 
     FractionBox["50", "255"]}], "]"}]}], ";", 
  RowBox[{"color8", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{
     FractionBox["160", "255"], ",", 
     FractionBox["30", "255"], ",", 
     FractionBox["160", "255"]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"color9", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{
     FractionBox["40", "255"], ",", 
     FractionBox["100", "255"], ",", 
     FractionBox["180", "255"]}], "]"}]}], ";", 
  RowBox[{"color10", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{
     FractionBox["250", "255"], ",", 
     FractionBox["180", "255"], ",", 
     FractionBox["180", "255"]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.760630378433563*^9, 3.760630393333674*^9}, {
  3.7606364939666853`*^9, 3.7606366056541758`*^9}, {3.760636640454125*^9, 
  3.760636712617928*^9}, {3.760636747632162*^9, 3.7606367833016872`*^9}, {
  3.760637256619629*^9, 3.760637332396041*^9}}],

Cell["\<\
The annulus in the w-plane is a single, undivided annulus, but I thought it \
would be interesting to see the contributions from various radii in the \
circle in the z-plane.\
\>", "Text",
 CellChangeTimes->{{3.760642904318322*^9, 3.760642979723065*^9}}],

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"p1", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"p", ",", 
         RowBox[{"-", "0.6931"}], ",", "1.3862"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.693"}], ",", "1.386"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "4"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Thickness", "[", "0.006", "]"}], "}"}]}], ",", 
       RowBox[{"Epilog", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Blue", ",", 
            RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "0.693"}], ",", "0"}], "}"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"Red", ",", 
            RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "0.53"}], ",", "0"}], "}"}], "]"}]}], "}"}], ",", 
          
          RowBox[{"{", 
           RowBox[{"Green", ",", 
            RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "0.38"}], ",", "0"}], "}"}], "]"}]}], "}"}], ",", 
          
          RowBox[{"{", 
           RowBox[{"Orange", ",", 
            RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "0.24"}], ",", "0"}], "}"}], "]"}]}], "}"}], ",", 
          
          RowBox[{"{", 
           RowBox[{"Brown", ",", 
            RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "0.089"}], ",", "0"}], "}"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"color1", ",", 
            RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"{", 
              RowBox[{"0.06", ",", "0"}], "}"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"color2", ",", 
            RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"{", 
              RowBox[{"0.209", ",", "0"}], "}"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"color3", ",", 
            RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"{", 
              RowBox[{"0.36", ",", "0"}], "}"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"color4", ",", 
            RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"{", 
              RowBox[{"0.51", ",", "0"}], "}"}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"color5", ",", 
            RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"{", 
              RowBox[{"0.659", ",", "0"}], "}"}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"color6", ",", 
            RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"{", 
              RowBox[{"0.81", ",", "0"}], "}"}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"color7", ",", 
            RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"{", 
              RowBox[{"0.96", ",", "0"}], "}"}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"color8", ",", 
            RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"{", 
              RowBox[{"1.11", ",", "0"}], "}"}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"color9", ",", 
            RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"{", 
              RowBox[{"1.26", ",", "0"}], "}"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"color10", ",", 
            RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"{", 
              RowBox[{"1.386", ",", "0"}], "}"}], "]"}]}], "}"}]}], "}"}]}], 
       ",", 
       RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<x Re\>\"", ",", "\"\<y Im\>\""}], "}"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Framed", "[", "  ", "\"\<  z-plane \>\"", "]"}], ",", "10",
           ",", "Blue", ",", 
          RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}]}], "]"}]}], 
    ",", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", " ", 
          RowBox[{
           RowBox[{"Re", "[", 
            RowBox[{"(", 
             RowBox[{"n", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[ImaginaryI]", " ", "t"}]]}], ")"}], "]"}], ",", 
           RowBox[{"Im", "[", 
            RowBox[{"n", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "t"}]]}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", 
           RowBox[{"{", 
            RowBox[{
            "0.501", ",", "0.582", ",", "0.677", ",", "0.786", ",", "0.913", 
             ",", "1.061", ",", "1.233", ",", "1.433", ",", "1.665", ",", 
             "1.934", ",", "2.247", ",", "2.611", ",", "3.034", ",", "3.525", 
             ",", "3.974"}], "}"}]}], "}"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", 
        RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<u Re\>\"", ",", "\"\<v Im\>\""}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Framed", "[", "  ", "\"\<  w-plane \>\"", "]"}], ",", "10", 
         ",", "Red", ",", 
         RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "Blue", "}"}], ",", 
         RowBox[{"{", "Red", "}"}], ",", 
         RowBox[{"{", "Green", "}"}], ",", 
         RowBox[{"{", "Orange", "}"}], ",", 
         RowBox[{"{", "Brown", "}"}], ",", 
         RowBox[{"{", "color1", "}"}], ",", 
         RowBox[{"{", "color2", "}"}], ",", 
         RowBox[{"{", "color3", "}"}], ",", 
         RowBox[{"{", "color4", "}"}], ",", 
         RowBox[{"{", "color5", "}"}], ",", 
         RowBox[{"{", "color6", "}"}], ",", 
         RowBox[{"{", "color7", "}"}], ",", 
         RowBox[{"{", "color8", "}"}], ",", 
         RowBox[{"{", "color9", "}"}], ",", 
         RowBox[{"{", "color10", "}"}]}], "}"}]}]}], "]"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.760626433914412*^9, {3.760626477440761*^9, 3.7606265030222607`*^9}, {
   3.760626565451619*^9, 3.760626633494686*^9}, {3.760626701461711*^9, 
   3.760626783017817*^9}, {3.760626822880185*^9, 3.760626945408724*^9}, {
   3.7606269971350613`*^9, 3.76062703208505*^9}, {3.760627080395328*^9, 
   3.7606271591993923`*^9}, {3.7606272010698853`*^9, 3.760627295705215*^9}, 
   3.760629335623764*^9, 3.760630116470664*^9, {3.760630399431952*^9, 
   3.760630401317917*^9}, 3.760636552086623*^9, {3.760636634234379*^9, 
   3.760636771366015*^9}, {3.7606368025175133`*^9, 3.760636853632077*^9}, {
   3.760637076638678*^9, 3.760637103195984*^9}, 3.7606386918459*^9, {
   3.760741959062336*^9, 3.760741968254846*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6], 
        Thickness[0.006]], 
       LineBox[CompressedData["
1:eJxFz3lMEnAcBXB0iJtpLWV5tZxSiTq0zBxazsjMzMzUNKfEHzinmJiJNJxC
M/PIiY7SzdR1edRYmuGaR2KJNGKahDgyhoAHKnbMgMiszWqr7+9tb2+fP58v
/XJKjj0Gg0n807+bG5Nq05OWX2L+hRPvcbubiFybNBfCJCA/zsplbHogr7LK
tHgscn5nhyReYwQzHawN/dXILFmTf41+CTw+FT66nb0IVlDsatr8FsCFROrq
hNoAfrg3hDY0pwPrFLYkY5QW3FFxzXk65wO40Stg06FNDTbXEc6cwMyA5+z0
eTEkJZh7X626g38Lbth2kHzEJAP3VbqE0hIlYF6auymIMAwuLQsJjWruAY/h
dQVFEXzw63yWKHu9Nfq/NReVL6gYEZhYKflx9cYIOEh2ASezjoNZvHqStF4O
nqr2qX8inQI7U1qEN8OnwZErCqFIMwOmdC+XNl15D35FO8p7fkwDfhNN2TOp
14JPeVVZfAf0YCVuJqHl2DxYghdfauUvgIvuxe4fsS2C6aNdvbNxRvAYg303
+dYy+i9YIq5trIAjzgZVcONM4NSanSUHRGtg0XlFmA77Cczr/UVdPfcZjKuS
+7gOfQGbvodntGHXwT0fZ5niYeRHXaEDfOZXsDSAk5uFN4OjC1yMZDmyltMg
dyu2gJ8myObb3a1ggzZJdngCOYwsdZss/gYWY8uzB9nIJ5WH+js5yBn5HSlc
HnJZ+3VBcB2yBEPZIXiAnCwXO6W/Q9Y0szOPq5DpdJIwWI1c8rM93lGL3EIq
rx1cQTYIInHeW8gMmjnN0d4GNgcKuyxYZKzUM3bSCdnftlHJ3YXcJ+lTMTyR
yY15hPTdyKeJs5JgP2SVtdHVex8ydSyO7khENvK3nlkCkQszB+wMJOTfALVG
BQ==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"x Re\"", TraditionalForm], 
       FormBox["\"y Im\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Epilog -> {{
        RGBColor[0, 0, 1], 
        PointSize[0.03], 
        PointBox[{-0.693, 0}]}, {
        RGBColor[1, 0, 0], 
        PointSize[0.03], 
        PointBox[{-0.53, 0}]}, {
        RGBColor[0, 1, 0], 
        PointSize[0.03], 
        PointBox[{-0.38, 0}]}, {
        RGBColor[1, 0.5, 0], 
        PointSize[0.03], 
        PointBox[{-0.24, 0}]}, {
        RGBColor[0.6, 0.4, 0.2], 
        PointSize[0.03], 
        PointBox[{-0.089, 0}]}, {
        RGBColor[
         NCache[
          Rational[14, 17], 0.8235294117647058], 
         NCache[
          Rational[14, 17], 0.8235294117647058], 
         NCache[
          Rational[20, 51], 0.39215686274509803`]], 
        PointSize[0.03], 
        PointBox[{0.06, 0}]}, {
        RGBColor[
         NCache[
          Rational[2, 51], 0.0392156862745098], 
         NCache[
          Rational[32, 51], 0.6274509803921569], 
         NCache[
          Rational[10, 51], 0.19607843137254902`]], 
        PointSize[0.03], 
        PointBox[{0.209, 0}]}, {
        RGBColor[
         NCache[
          Rational[40, 51], 0.7843137254901961], 
         NCache[
          Rational[2, 17], 0.11764705882352941`], 
         NCache[
          Rational[50, 51], 0.9803921568627451]], 
        PointSize[0.03], 
        PointBox[{0.36, 0}]}, {
        RGBColor[
         NCache[
          Rational[8, 17], 0.47058823529411764`], 
         NCache[
          Rational[44, 51], 0.8627450980392157], 
         NCache[
          Rational[44, 51], 0.8627450980392157]], 
        PointSize[0.03], 
        PointBox[{0.51, 0}]}, {
        RGBColor[
         NCache[
          Rational[40, 51], 0.7843137254901961], 
         NCache[
          Rational[22, 255], 0.08627450980392157], 
         NCache[
          Rational[22, 255], 0.08627450980392157]], 
        PointSize[0.03], 
        PointBox[{0.659, 0}]}, {
        RGBColor[
         NCache[
          Rational[20, 51], 0.39215686274509803`], 
         NCache[
          Rational[20, 51], 0.39215686274509803`], 
         NCache[
          Rational[16, 17], 0.9411764705882353]], 
        PointSize[0.03], 
        PointBox[{0.81, 0}]}, {
        RGBColor[
         NCache[
          Rational[16, 17], 0.9411764705882353], 
         NCache[
          Rational[16, 17], 0.9411764705882353], 
         NCache[
          Rational[10, 51], 0.19607843137254902`]], 
        PointSize[0.03], 
        PointBox[{0.96, 0}]}, {
        RGBColor[
         NCache[
          Rational[32, 51], 0.6274509803921569], 
         NCache[
          Rational[2, 17], 0.11764705882352941`], 
         NCache[
          Rational[32, 51], 0.6274509803921569]], 
        PointSize[0.03], 
        PointBox[{1.11, 0}]}, {
        RGBColor[
         NCache[
          Rational[8, 51], 0.1568627450980392], 
         NCache[
          Rational[20, 51], 0.39215686274509803`], 
         NCache[
          Rational[12, 17], 0.7058823529411765]], 
        PointSize[0.03], 
        PointBox[{1.26, 0}]}, {
        RGBColor[
         NCache[
          Rational[50, 51], 0.9803921568627451], 
         NCache[
          Rational[12, 17], 0.7058823529411765], 
         NCache[
          Rational[12, 17], 0.7058823529411765]], 
        PointSize[0.03], 
        PointBox[{1.386, 0}]}}, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> FormBox[
       StyleBox[
        FrameBox["\"  z-plane \"", StripOnInput -> False], 10, 
        RGBColor[0, 0, 1], Background -> GrayLevel[1], StripOnInput -> False],
        TraditionalForm], PlotRange -> {{-0.693, 1.386}, {-1, 4}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],""},
  "RowDefault"]], "Input",
 CellChangeTimes->{{3.7700514552506943`*^9, 3.770051455265974*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"19.", "  ", "1"}], "<", 
   RowBox[{"Abs", "[", "z", "]"}], "<", "4"}], ",", " ", 
  RowBox[{
   FractionBox["\[Pi]", "4"], "<", "\[Theta]", "\[LessEqual]", 
   FractionBox[
    RowBox[{"3", " ", "\[Pi]"}], "4"]}], ",", " ", 
  RowBox[{"w", "=", 
   RowBox[{"Log", "[", "z", "]"}]}]}]], "Text",
 CellChangeTimes->{{3.760313337129354*^9, 3.7603133943991003`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell["\<\
Tracing the influence of the mapping transformation on the z-plane, I see that\
\>", "Text",
 CellChangeTimes->{
  3.760639017546206*^9, {3.760643038019681*^9, 3.760643039233117*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["R\[ExponentialE]", 
   RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], "\[Equal]", "w", "\[Equal]", 
  RowBox[{"f", "[", "z", "]"}], "\[Equal]", 
  RowBox[{"f", "[", 
   RowBox[{"r", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}], "]"}], "\[Equal]", 
  RowBox[{
   RowBox[{"Log", "[", "z", "]"}], 
   SubscriptBox["\[LeftFloor]", 
    RowBox[{"z", "=", 
     RowBox[{"r", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}]}]]}], "\[Equal]", 
  RowBox[{"Log", "[", 
   RowBox[{"r", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}], "]"}], "\[Equal]", 
  RowBox[{
   RowBox[{"Log", "[", "r", "]"}], "+", 
   RowBox[{"Log", "[", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]], "]"}]}], "\[Equal]", 
  RowBox[{
   RowBox[{"Log", "[", "r", "]"}], "+", " ", 
   RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]}]}]], "Input",
 CellChangeTimes->{{3.760639067157654*^9, 3.760639112425886*^9}, {
  3.760639147704192*^9, 3.760639175936338*^9}, {3.7606392120775013`*^9, 
  3.760639242346822*^9}}],

Cell["\<\
and proceed to insert it directly into plot commands. In the z-plot I don\
\[CloseCurlyQuote]t bother to show radial boundary lines this time.\
\>", "Text",
 CellChangeTimes->{{3.760642605020905*^9, 3.760642651801464*^9}, {
  3.760647236474152*^9, 3.760647245728675*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", " ", 
          RowBox[{
           RowBox[{"Re", "[", 
            RowBox[{"(", 
             RowBox[{"n", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[ImaginaryI]", " ", "t"}]]}], ")"}], "]"}], ",", 
           RowBox[{"Im", "[", 
            RowBox[{"n", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "t"}]]}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "4"}], "}"}]}], "}"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", 
        RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x Re\>\"", ",", "\"\<y Im\>\""}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Framed", "[", "  ", "\"\<  z-plane \>\"", "]"}], ",", "10", 
         ",", "Blue", ",", 
         RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}], ",", 
      RowBox[{"Epilog", "->", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RGBColor", "[", 
           RowBox[{
            FractionBox["100", "255"], ",", 
            FractionBox["210", "255"], ",", 
            FractionBox["250", "255"]}], "]"}], ",", 
          RowBox[{"Annulus", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "4"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              FractionBox["\[Pi]", "4"], ",", 
              FractionBox[
               RowBox[{"3", "\[Pi]"}], "4"]}], "}"}]}], "]"}]}], "}"}], 
        "}"}]}]}], "]"}], ",", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", " ", 
          RowBox[{
           RowBox[{"Re", "[", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Log", "[", "r", "]"}], "+", " ", 
              RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]}], ")"}], "]"}], ",", 
           RowBox[{"Im", "[", 
            RowBox[{
             RowBox[{"Log", "[", "r", "]"}], "+", " ", 
             RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]}], "]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "4"}], "}"}]}], "}"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", 
        FractionBox["\[Pi]", "4"], ",", 
        FractionBox[
         RowBox[{"3", "\[Pi]"}], "4"]}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<u Re\>\"", ",", "\"\<v Im\>\""}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "3.5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "3"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Red", ",", "Dashed", ",", 
           RowBox[{"Thickness", "[", "0.007", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Red", ",", "Dashed", ",", 
           RowBox[{"Thickness", "[", "0.007", "]"}]}], "}"}]}], "}"}]}], ",", 
      
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Framed", "[", "  ", "\"\<  w-plane \>\"", "]"}], ",", "10", 
         ",", "Red", ",", 
         RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}], ",", 
      RowBox[{"Epilog", "->", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RGBColor", "[", 
           RowBox[{
            FractionBox["100", "255"], ",", 
            FractionBox["210", "255"], ",", 
            FractionBox["250", "255"]}], "]"}], ",", 
          RowBox[{"Rectangle", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0.03", ",", 
              FractionBox["\[Pi]", "4"]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Log", "[", "4", "]"}], ",", 
              FractionBox[
               RowBox[{"3", "\[Pi]"}], "4"]}], "}"}]}], "]"}]}], "}"}], 
        "}"}]}]}], "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7606398992416697`*^9, 3.760639930920705*^9}, {
  3.760639973136642*^9, 3.760640008709255*^9}, {3.760640076267717*^9, 
  3.7606400980806828`*^9}, {3.760640157166256*^9, 3.760640168141642*^9}, {
  3.760640235956284*^9, 3.760640248601753*^9}, {3.760640279585496*^9, 
  3.7606403773569403`*^9}, {3.760642496877099*^9, 3.760642505843574*^9}, {
  3.760742014140019*^9, 3.7607420196033278`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        FaceForm[
         Opacity[0.3]], 
        RGBColor[0.368417, 0.506779, 0.709798]], 
       LineBox[CompressedData["
1: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
WHxm8f8DJChnmQ==
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        FaceForm[
         Opacity[0.3]], 
        RGBColor[0.880722, 0.611041, 0.142051]], 
       LineBox[CompressedData["
1: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
NQMs+Pud3d10ZRq+9+J8Gi2ZBa/7KyL98icVe3R9eZzrz4ovJMa87kyiYsfA
5L/dEaxY+dV6W5lYKi7657CGJZEV95WtWcoNpOLt99Le7i5lxUsnQngCH1Cx
FnF7SGWVFbt4ePIypah4zQcxpbxbbJi/J4R6ivSD4bjBAQ1pCv7sGKRW4cWD
bXYwWftOUnBJ/AsTbTcezNT8aWWtRMHF87o7Lt3nwU9rAq4436RgCfYrA5wq
PPgPX0GHvj8F37eRLz/DwoPn3DccODVPwQkzxm6n9LixUpX0Tp2f7HizEv96
6UvcuKpaRl6riB3HTIlkCipy4+caUQ6KdexYLVnwWpMMNz6hsV9q2yg7fnSu
6zgHFzfeJACF3LZz4KEb4Bp/PBc25lJbK/2CA7t6j+dIjXNiO8vqrYMqnPjA
6UsO53s58fFtLGbbrnHiWie/H9caOXH3b7mb6rc58aLN4XSzbE6sHnHocKgT
J/7KpqB27i0n3nhSb8vgN0587U/A7/y9nDg2UrRdheDC/lqfDXmNObD/Ifbv
IsVcuMT478phHQ4smlvhUVzDhZVTz6vrqHFgp0A7p1ttXDjEWVTU5zAHlq7q
j30zyYWlRWoHsrk58K0z9KqALaTHiW0yFIlmx15J4+vcLbgx9V+xuHA3Be9g
C47vXsODc8VtLD//oeCgYru+PEEerDwVUbmrhIIVUnn/he3iwfVV3Z0CiRQs
nxArL3eEB0eO10VmO1LwmHosBejx4B1F9g+kNlKwV1vBG+4vPJih5nnMRZEN
9x9bvlpziopPbZS1TT7BhnvT8q1+KlLxSckgnfZ9pL/bySuGaFBxjVv5PgkB
Nvw2f3KvihEVW6V4anp0s2Lvjkvvb76g4sd8XEddH7NiO2JK2OA3FZtrVR7U
jWbBr/VFvry9SMMnnjh+pr5nwRWyOtlfrtJwlcj97UmvWbDgQphmrgENO/H0
q01bseC6oI9jTVY0zGLP0ah8ggVPg53FP71puFLFKvf5x1W0xTf50ukqGk5Q
3Z1bPLSMInt4ly4pkH3c8qfkT/kyEvAt/XZcnY7fHT/3qDlhGd3dJWQjeIWO
p51pE6X3l9Etrtz92cZ0vEbpxz7FpSVkxd0o+sWNjlX1C1VyeZZQ81sTSY48
Oj5dfvpT99YF5HjcmiNKloHZewz5Zlbn0dOOpgn3EwxyzsscY+2cR5bDyQnG
8gx83NajnjViHnnqMvx5LpLPWc/JfhGZR4VsO6v7TRk46eW73Sl75lDKgfB7
guTc6l/JvIxlZtBpPZN38hQm9ky1qxJcP4OUm6ubf3Iz8ad81X7LuWk0GuhY
tpvJxL0/ZRjMX9PoRrFm8vQGJl5j67/CeXYaLT69aLVfiolNlKobWbWn0MWj
ov7ntJnYr1fWReXBBDpXdaChN4KJFYo4GmnaE8jUzOO+RTQTa65GpuYdnkD3
8o4FTsYzMfvZXhHxpXHUfeuEZTc551vN9sb+ejqOXu55oHSnkPQyEb1UQc8x
tNoxn0wfYOKFpuQmpDCMqNs/qsaRe0i4mmuKzjWMNMV8Z95KkJ4QL/lLPW8I
qe99lWAuRe7VM4ZxOSeHkB5F4AqvLIFd7EUIeZlB9PCO5o0+eQJbS1PS6zYN
IKHOUpUePTLnulUUR9b3o99eGZHHbhL4wyX5Xxa+/ag2Upz11W0yt4+Lvhtl
9CNEz0mnmRHYbFkRvmf5ixaOLwpFPCJw3KMxyZ89PejSFbYFYXKvK2lcs94R
3oPCwDKj35fAv4pVKl2v96AothfrIwMIvNfu7NYjf7qRk8NuNq4QAsN368R1
CrtQAEVNSieKwCwCWgoBLl2oxPR6VVMMgZ8dP7T5N+hC800LBmpkzrh62lVU
PK0TJYsLqAonErhY5NzUp+gONPIbH9Igc8pJql3xj5sdKN5c9PhLMsdYlucN
5Qt3oAPWeeKpWQS2pbHVR+9vR9bHRLKmSA/cUWpa93BNK4odzMhgLyVwY2bn
gndFA5LjP+dqTuYoyBfQcVytARnKrVGcayLw8h3OlI7KerTe9P4mOzKH8Woq
Rayv/oNczrm1GLST97NfYSuorUW5GY3Nf3oILFkcOvRTk2TDy5NCZM7zyJCL
kqmrQSXDkXz6pNdtSWzX4/9Tjc523L9XSnqca4Kufmh9JSpW9HCAIwR++1OE
OaNdieoFD9QokLny+qFzyj4JFeg8m8FeJTJ3pti8lipJ/I1CltQWDk6QufHH
Lb2rSWWo5kmAsRDpcbu58m93J5UiqVWzFhYyxx60PDnTkVyMyr+O18SRHhcU
OrV0KaUIeZ6W1n5A5t6WdqOGvJRC9OqtVLssmYunt2fT337PRxd53y+Fkx53
79XF3pHvecjSJ+GtEpmrRRKH355LzUVPHpZJDJPcGxN6619qNlJatjXeQOZ0
M9lbzIM/MPLrzqR/JDn560G+WTOE2NOtUnaQub7g/L599ua/kPQWO90Qki/r
PZicN/+JLnxNZBCkF3hMoBYLi3QkxMOCHpL8LKnsbqfFDyRYrGDdRLL93yvC
ypbf0ZUXNhIHSM9oUxF9lGiZjKLazXtcSTZcmZ5bY5WI3G5tC68g+cIz3iMt
PV+RbPJDvTWk1zhPny726I1F368abVciGa3QPsr2RaL8sYY+e5JzV6dzmvo+
onGuwi+RJIe5b9SeKg9BXvt32RaRXOmZkbq70g8VLP873UVyV1zduZ8f3dHz
xTVr/vM4xX1bbfcp2iK/NL/O/zzu5MZXPbIG+sAj2zrlP49TtWALlNZ6BmrC
417+53Fc6032D4h7g7juk/qDJEsf/fo6RSwI7ODdf6yOZHbvhoRMvnAg9M1N
4AfJp1Z212/i+wwunlOc8SK5m/NMhvXaGABuPK03INksJPBqwZovQObhsZ97
SK4IV2l58SIBnN/gEj5CnkdYlJGJxIskoIONX0WTPOtdrl3olgKI8eUHV0l2
yCzcqeuWCpC41k12kn3yvNTHn6cB1/7nlyLJ8+cSDixle54JxP5VwWry/n4e
2av16HEWcGVhhN0g2f1h77kHhzGY3Dio2k3e/3kbjYBGyRzg5sUdW0d6G0/0
e3VXsVwgEvlCQ45kw1upVnt25IH0vZJqMWQ97TFGc3c3FAB3DTu5G2T9iXjd
6KXwFYK1hhZHv5D1mSQhfd6fUQSIKgnXKbJ+FTL6nGLYSsDx6eD1pmR9m2zt
2+Ey9BuMpuRKrZLeJlfiLNXfVw74JdYX85LsvlW7/ExnBXh1MCdtE9lPUqPx
I1P/KkHVjnXvBMj+Q8VKGrfbq4H+hOfN72R//oyw7HmoUwO+lLknvCQ97nTP
eIVrYw04eWRYQ4vs55DByRNva2pBVyrPxway/xen2yXvFv4B8fFSN5+Q80FK
IVlBU74esEVUWG9oI7DabE/Foex6cKxMuzWKnCfNXx0ihjMawGPTJ+gbOX+y
yl4Jr/naBOJDrpYY1hD4KLfK+RKJZrCGqpD8q4qs/2vF/+yjmsHmonXzRCWB
vX7tFyv/0ALufOgPDikjcP0tEbDFpw1U7durfj2fwIf8lmZCiXaQmpu151Eu
Oe+zzx/d6NFOOs07Y89sAp+w7Hzw+HQHoFK4KBG/COy4cW2z+LFOcOnylkqz
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
RCKrMv8P++0Sgg==
        "]]}}}, {
    DisplayFunction -> Identity, Axes -> {True, True}, AxesLabel -> {
       FormBox["\"x Re\"", TraditionalForm], 
       FormBox["\"y Im\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Epilog -> {{
        RGBColor[
         NCache[
          Rational[20, 51], 0.39215686274509803`], 
         NCache[
          Rational[14, 17], 0.8235294117647058], 
         NCache[
          Rational[50, 51], 0.9803921568627451]], 
        InterpretationBox[
         FilledCurveBox[
          
          BSplineCurve[{{2.8284271247461903`, 2.8284271247461903`}, {0., 
           5.656854249492381}, {-2.8284271247461903`, 
           2.8284271247461903`}, {-1.7677669529663689`, 
           1.7677669529663689`}, {-0.7071067811865476, 0.7071067811865476}, {
           0., 1.4142135623730951`}, {0.7071067811865476, 
           0.7071067811865476}, {1.7677669529663689`, 1.7677669529663689`}, {
           2.8284271247461903`, 2.8284271247461903`}}, 
           SplineKnots -> {0, 0, 0, 
             Rational[1, 4], 
             Rational[1, 4], 
             Rational[1, 2], 
             Rational[1, 2], 
             Rational[3, 4], 
             Rational[3, 4], 1, 1, 1}, 
           SplineWeights -> {1., 1., 2, 2, 2, 1., 1., 1., 1.}, SplineDegree -> 
           2]], 
         Annulus[{0, 0}, {1, 4}, {Rational[1, 4] Pi, Rational[3, 4] Pi}]]}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, 
     Method -> {"ScalingFunctions" -> None}, PlotLabel -> FormBox[
       StyleBox[
        FrameBox["\"  z-plane \"", StripOnInput -> False], 10, 
        RGBColor[0, 0, 1], Background -> GrayLevel[1], StripOnInput -> False],
        TraditionalForm], PlotRange -> {{-5, 5}, {-5, 5}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        FaceForm[
         Opacity[0.3]], 
        RGBColor[1, 0, 0], 
        Dashing[{Small, Small}], 
        Thickness[0.007]], 
       LineBox[CompressedData["
1:eJxNz2tI02EYBfD577K2cCKTZYTVLLHmxJU455q11LSagjmHgUrbSvKDtEBN
Q7cFZkkaOi/TmInWdAxli9Y0MyQxXUwFt3QqaaaQlc7rZqnTrD74Pj1wOPy+
HHioYklCGobD4eL+5l/vnHdgVKKL+uPcjv27hpvm/cBMwc31yZPgROmjuven
wIqBwe+Pz4OJt1KlR0Vgl+5O04V68GeGdq308CzyckPS/euMOeQab5bek2FH
TmvTzHTQ5pHl3cI9jewFZPowrzudtYhMpnFfGf2WkNVbVHdjC3j7Y62xgbaM
jBO9tQQawH1LWeGa0yvIWq9sfZ0eHLh4sCok1IGc159kbjeCJUJ25sRZJ3JO
0Q1feQ/4ksGfSopcRe6qLK3g9IF33S0TXL38E3mOzCwmD4FnIo6ZYpN/ITdn
aRMyx8CU1KErYeI1ZN7Fmnr7FLjS9HzV59o6csEWv3NhBsxhPrW1pG0gq/yK
xcRFsLv2nfNrtgv+CSq16RzggAyMfiB/E3mkmWTJcIGVcnE+N3cLeZOQrDJs
g+nVdoKX7Dcy9snXTsZvIz+jrvi4PQTTZLsDmBiOu2Nb9PS9M9Hgb2UlsrZC
MI9JYBaYwe2N2iV3khtyiZLC94gDv5wWSIQKcPgLUfAJC9gSo9jQeWCwx67I
K+SD9+pFams52OLs581XgGvZLAe+ChzcS4oIrwYLJzomNar/9vdTDknV4Ix0
s8K/FRyqCwmLaANjzvovKa/BT+Q5QeVvwL3K4wObneAjPbJ9VhN4ljirt38A
t8YLkvBmcOx4QBOnH5zrGI3UDIIjw6LmuixgklxfPm4FNxIfTHkOg2/HLxfR
bWCOMoURMwLGj5tGRKNgKzVYnj+Gcf8A+FkjLg==
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        FaceForm[
         Opacity[0.3]], 
        RGBColor[1, 0, 0], 
        Dashing[{Small, Small}], 
        Thickness[0.007]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ/d7y1z8nvW/2ErouIb8VX9rD+L/XlS1zXYDg3zNY
+aNf7hWc/3FheEuywWs4f4aExXpBgzdwfur25c92a72F8+sPJ7AutXoH5+tc
9T6cYfEezhfWctiyVfUDnL/kryLv1jUI/v/Lc7Yu1PoI5zMk7rmouxnBP/2h
xHa50Sc4f6VI6fp56xF83feSU03NP8P51WfCT+3ciuDnJ1gV37X7AueXd6Qo
1R9F8D03qyvyOX+F8w9O6Z9scxrBZ66cEBrh9Q3Ofy1s1i18BcF/5qR83Cf6
O5y/umRlUPFNBF8s9kqgZdIPON/bY8aCNw8R/CnHF3+Vjf8J5zf/Dd737hmC
b2M299qa1F9w/mzV7iSu9wg+78oDX56W/kb4R7//2rrPCL52DpOOeM0fOP/6
ar6LOb8R/Gn1STUOFX/h/D+c0bM3/0fwdaa/4RSp+wfnM91WeiPM/h/OX6T4
SZaxHcHXqmPRNmNicIDxr7k9arB2Q/CfT+ip296K4HubcZo1n0Lwdy5d+YGX
jxHO75kmFszvi+BvehSanzARwbfdkGiscRHBv+g+8dc6fiaEeVaTq1uDEXy2
9YlLLk1C8HMyTk1U34bgX1I0rq+5yeQAAKKDwQU=
        "]]}}}, {
    DisplayFunction -> Identity, Axes -> {True, True}, AxesLabel -> {
       FormBox["\"u Re\"", TraditionalForm], 
       FormBox["\"v Im\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Epilog -> {{
        RGBColor[
         NCache[
          Rational[20, 51], 0.39215686274509803`], 
         NCache[
          Rational[14, 17], 0.8235294117647058], 
         NCache[
          Rational[50, 51], 0.9803921568627451]], 
        RectangleBox[
         NCache[{0.03, Rational[1, 4] Pi}, {0.03, 0.7853981633974483}], 
         NCache[{
           Log[4], Rational[3, 4] Pi}, {1.3862943611198906`, 
          2.356194490192345}]]}}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, 
     Method -> {"ScalingFunctions" -> None}, PlotLabel -> FormBox[
       StyleBox[
        FrameBox["\"  w-plane \"", StripOnInput -> False], 10, 
        RGBColor[1, 0, 0], Background -> GrayLevel[1], StripOnInput -> False],
        TraditionalForm], PlotRange -> {{-2, 3.5}, {0, 3}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.760639979314249*^9, 3.760640009562347*^9}, 
   3.760640099307952*^9, 3.7606401692853117`*^9, 3.76064032954209*^9, 
   3.7606403780325603`*^9, 3.760642507799185*^9, 3.760742020363524*^9}]
}, Open  ]],

Cell["\<\
21 - 26 Failure of conformity
Find all points at which the mapping is not conformal. \
\>", "Text",
 CellChangeTimes->{{3.7603134085171757`*^9, 3.760313431028463*^9}},
 Background->RGBColor[
  0.9600061036087587, 0.9600061036087587, 0.9600061036087587]],

Cell["21.  A cubic polynomial", "Text",
 CellChangeTimes->{{3.760313434806233*^9, 3.7603134428844976`*^9}, 
   3.7603135013157263`*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell["\<\
As prompted by the s.m. a general cubic polynomial looks like\
\>", "Text",
 CellChangeTimes->{{3.760643423710329*^9, 3.760643441804798*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gcubp", "=", 
  RowBox[{
   RowBox[{
    SubscriptBox["a", "3"], 
    SuperscriptBox["z", "3"]}], "+", 
   RowBox[{
    SubscriptBox["a", "2"], 
    SuperscriptBox["z", "2"]}], "+", 
   RowBox[{
    SubscriptBox["a", "1"], "z"}], "+", 
   SubscriptBox["a", "0"]}]}]], "Input",
 CellChangeTimes->{{3.760643447955323*^9, 3.7606435220423813`*^9}}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["a", "0"], "+", 
  RowBox[{"z", " ", 
   SubscriptBox["a", "1"]}], "+", 
  RowBox[{
   SuperscriptBox["z", "2"], " ", 
   SubscriptBox["a", "2"]}], "+", 
  RowBox[{
   SuperscriptBox["z", "3"], " ", 
   SubscriptBox["a", "3"]}]}]], "Output",
 CellChangeTimes->{{3.760643506014328*^9, 3.760643523213111*^9}}]
}, Open  ]],

Cell["First get the derivative", "Text",
 CellChangeTimes->{{3.760643536249763*^9, 3.760643541457885*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"inter", "=", 
  RowBox[{"D", "[", 
   RowBox[{"gcubp", ",", 
    RowBox[{"{", "z", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.760643545533902*^9, 3.7606435607532454`*^9}, {
  3.760645036614027*^9, 3.760645038140295*^9}}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["a", "1"], "+", 
  RowBox[{"2", " ", "z", " ", 
   SubscriptBox["a", "2"]}], "+", 
  RowBox[{"3", " ", 
   SuperscriptBox["z", "2"], " ", 
   SubscriptBox["a", "3"]}]}]], "Output",
 CellChangeTimes->{3.760643561515801*^9, 3.760645039137371*^9}]
}, Open  ]],

Cell["Then solve this for roots", "Text",
 CellChangeTimes->{{3.760643570825048*^9, 3.760643574208794*^9}, 
   3.7606451566736507`*^9, 3.760645593958302*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"inter", "\[Equal]", "0"}], ",", 
   RowBox[{"{", "z", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.760644682559169*^9, 3.7606446844712543`*^9}, {
   3.7606451198260403`*^9, 3.760645125905616*^9}, 3.760645192257432*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", 
        SubscriptBox["a", "2"]}], "-", 
       SqrtBox[
        RowBox[{
         SubsuperscriptBox["a", "2", "2"], "-", 
         RowBox[{"3", " ", 
          SubscriptBox["a", "1"], " ", 
          SubscriptBox["a", "3"]}]}]]}], 
      RowBox[{"3", " ", 
       SubscriptBox["a", "3"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", 
        SubscriptBox["a", "2"]}], "+", 
       SqrtBox[
        RowBox[{
         SubsuperscriptBox["a", "2", "2"], "-", 
         RowBox[{"3", " ", 
          SubscriptBox["a", "1"], " ", 
          SubscriptBox["a", "3"]}]}]]}], 
      RowBox[{"3", " ", 
       SubscriptBox["a", "3"]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7606446856346073`*^9, 3.760645128295063*^9, 
  3.760645193628171*^9}]
}, Open  ]],

Cell["\<\
The above notation is according to the s.m., which is not the same as the \
text. Using the text notation,\
\>", "Text",
 CellChangeTimes->{{3.760645280892601*^9, 3.760645306596074*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gcubt", "=", 
  RowBox[{
   SuperscriptBox["z", "3"], "+", 
   RowBox[{"a", " ", 
    SuperscriptBox["z", "2"]}], "+", 
   RowBox[{"b", " ", "z"}], "+", "c"}]}]], "Input",
 CellChangeTimes->{{3.7606453159675817`*^9, 3.760645354316207*^9}}],

Cell[BoxData[
 RowBox[{"c", "+", 
  RowBox[{"b", " ", "z"}], "+", 
  RowBox[{"a", " ", 
   SuperscriptBox["z", "2"]}], "+", 
  SuperscriptBox["z", "3"]}]], "Output",
 CellChangeTimes->{3.760645355102027*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tinter", "=", 
  RowBox[{"D", "[", 
   RowBox[{"gcubt", ",", 
    RowBox[{"{", "z", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.760645357871073*^9, 3.760645383985856*^9}}],

Cell[BoxData[
 RowBox[{"b", "+", 
  RowBox[{"2", " ", "a", " ", "z"}], "+", 
  RowBox[{"3", " ", 
   SuperscriptBox["z", "2"]}]}]], "Output",
 CellChangeTimes->{{3.760645368796707*^9, 3.760645384949133*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"tinter", "\[Equal]", "0"}], ",", "z"}], "]"}]], "Input",
 CellChangeTimes->{{3.760645387774094*^9, 3.760645405209049*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", 
     RowBox[{
      FractionBox["1", "3"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "a"}], "-", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["a", "2"], "-", 
          RowBox[{"3", " ", "b"}]}]]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", 
     RowBox[{
      FractionBox["1", "3"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "a"}], "+", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["a", "2"], "-", 
          RowBox[{"3", " ", "b"}]}]]}], ")"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.760645405996583*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["\<\
The above roots make the derivative equal to zero, and that is what \
constitutes nonconformality.\
\>", "Text",
 CellChangeTimes->{{3.7606454579924393`*^9, 3.760645534933055*^9}, {
  3.760646730714898*^9, 3.760646731216072*^9}}],

Cell[BoxData[
 RowBox[{"23.", "  ", 
  FractionBox[
   RowBox[{"z", "+", 
    FractionBox["1", "2"]}], 
   RowBox[{
    RowBox[{"4", " ", 
     SuperscriptBox["z", "2"]}], "+", "2"}]]}]], "Text",
 CellChangeTimes->{{3.760313446062408*^9, 3.7603134914199944`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"yeeha", "=", 
  FractionBox[
   RowBox[{"z", "+", 
    FractionBox["1", "2"]}], 
   RowBox[{
    RowBox[{"4", " ", 
     SuperscriptBox["z", "2"]}], "+", "2"}]]}]], "Input",
 CellChangeTimes->{{3.7606458158028507`*^9, 3.7606458201573772`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   FractionBox["1", "2"], "+", "z"}], 
  RowBox[{"2", "+", 
   RowBox[{"4", " ", 
    SuperscriptBox["z", "2"]}]}]]], "Output",
 CellChangeTimes->{3.760645821964274*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"yeehaD", "=", 
  RowBox[{"D", "[", 
   RowBox[{"yeeha", ",", 
    RowBox[{"{", "z", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7606458249771643`*^9, 3.760645854531455*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"8", " ", "z", " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox["1", "2"], "+", "z"}], ")"}]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"2", "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["z", "2"]}]}], ")"}], "2"]]}], "+", 
  FractionBox["1", 
   RowBox[{"2", "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["z", "2"]}]}]]}]], "Output",
 CellChangeTimes->{{3.760645843558445*^9, 3.760645856499778*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Together", "[", "yeehaD", "]"}]], "Input",
 CellChangeTimes->{{3.760646023403206*^9, 3.760646029725998*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"1", "-", 
   RowBox[{"2", " ", "z"}], "-", 
   RowBox[{"2", " ", 
    SuperscriptBox["z", "2"]}]}], 
  RowBox[{"2", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["z", "2"]}]}], ")"}], "2"]}]]], "Output",
 CellChangeTimes->{3.760646030473229*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"1", "-", 
     RowBox[{"2", " ", "z"}], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox["z", "2"]}]}], "\[Equal]", "0"}], ",", "z"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7606460483546963`*^9, 3.760646063012718*^9}, {
  3.760646413701326*^9, 3.760646430673483*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "-", 
        SqrtBox["3"]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SqrtBox["3"]}], ")"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.760646064057325*^9, {3.7606464196408043`*^9, 3.760646431275544*^9}},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["\<\
The above green cell matches the text answer in content, as demonstrated by \
the following two cells.\
\>", "Text",
 CellChangeTimes->{{3.760646369027273*^9, 3.7606463902186813`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PossibleZeroQ", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SqrtBox["3"]}], ")"}], "2"], "-", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SqrtBox["3"]}], ")"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.760646206781322*^9, 3.7606462811195393`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.760646281786393*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PossibleZeroQ", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "-", 
      SqrtBox["3"]}], ")"}], "2"], "-", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "-", 
      SqrtBox["3"]}], ")"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.760646307022925*^9, 3.760646341556898*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.7606463170180273`*^9, 3.760646342521557*^9}}]
}, Open  ]],

Cell["25.  Cosh[z]", "Text",
 CellChangeTimes->{{3.7603135338520193`*^9, 3.7603135438183126`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"coshD", "=", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"Cosh", "[", "z", "]"}], ",", 
    RowBox[{"{", "z", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7606488205012217`*^9, 3.760648843839851*^9}}],

Cell[BoxData[
 RowBox[{"Sinh", "[", "z", "]"}]], "Output",
 CellChangeTimes->{3.760648846458315*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"coshD", "\[Equal]", "0"}], ",", "z"}], "]"}]], "Input",
 CellChangeTimes->{{3.760648855876051*^9, 3.7606488733428907`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", 
     RowBox[{"ConditionalExpression", "[", 
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
        RowBox[{"C", "[", "1", "]"}]}], ",", 
       RowBox[{
        RowBox[{"C", "[", "1", "]"}], "\[Element]", "Integers"}]}], "]"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", 
     RowBox[{"ConditionalExpression", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "+", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
         RowBox[{"C", "[", "1", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"C", "[", "1", "]"}], "\[Element]", "Integers"}]}], "]"}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7606488740489388`*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["\<\
The above green cell constant C[1] offers enough flexibility to match all the \
answers in the text.\
\>", "Text",
 CellChangeTimes->{{3.7606490076038017`*^9, 3.760649056049231*^9}}],

Cell["\<\
29 - 35 Magnification ratio, Jacobian
Find the magnification ratio, M. Describe what it tells you about the \
mapping. Where is M=1? Find the Jacobian J.\
\>", "Text",
 CellChangeTimes->{{3.760313599202656*^9, 3.760313648917646*^9}, 
   3.760649075939107*^9, {3.760650041027997*^9, 3.760650049226293*^9}},
 Background->RGBColor[
  0.9600061036087587, 0.9600061036087587, 0.9600061036087587]],

Cell[BoxData[
 RowBox[{
  RowBox[{"29.", "  ", "w"}], "=", 
  RowBox[{
   FractionBox["1", "2"], 
   SuperscriptBox["z", "2"]}]}]], "Text",
 CellChangeTimes->{{3.76031365220743*^9, 3.760313665237341*^9}, 
   3.760313708046639*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell["\<\
Examining the Magnification ratio amounts to looking at the absolute value of \
the first derivative.\
\>", "Text",
 CellChangeTimes->{{3.760651595699296*^9, 3.760651622417523*^9}, {
  3.760658546900795*^9, 3.760658552276888*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "z_", "]"}], "=", 
  RowBox[{
   FractionBox["1", "2"], 
   SuperscriptBox["z", "2"]}]}]], "Input",
 CellChangeTimes->{{3.76065162811714*^9, 3.760651646000821*^9}}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["z", "2"], "2"]], "Output",
 CellChangeTimes->{3.760651647085799*^9, 3.7606581045671597`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mdog", "=", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"f", "[", "z", "]"}], ",", 
    RowBox[{"{", "z", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.760651654941998*^9, 3.7606516746637383`*^9}, {
  3.760657915466978*^9, 3.760657921698361*^9}, {3.760658088389195*^9, 
  3.760658119386888*^9}}],

Cell[BoxData["z"], "Output",
 CellChangeTimes->{3.760658121339645*^9}]
}, Open  ]],

Cell["\<\
The cell below tells me that magnification equals 1 on the unit circle,\
\>", "Text",
 CellChangeTimes->{{3.760659424138022*^9, 3.760659446384366*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComplexExpand", "[", 
  RowBox[{"Abs", "[", 
   RowBox[{"x", "+", 
    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7606580115311337`*^9, 3.760658027901822*^9}, 
   3.760658061469029*^9, {3.760658132842548*^9, 3.760658137834198*^9}}],

Cell[BoxData[
 SqrtBox[
  RowBox[{
   SuperscriptBox["x", "2"], "+", 
   SuperscriptBox["y", "2"]}]]], "Output",
 CellChangeTimes->{3.7606580623827133`*^9, 3.7606581393482*^9}]
}, Open  ]],

Cell["\<\
The grid below shows some points close to the origin along with the resulting \
magnification there.\
\>", "Text",
 CellChangeTimes->{{3.760651934599422*^9, 3.7606519456953773`*^9}, {
  3.760652441768968*^9, 3.760652445839492*^9}, {3.7606582420164537`*^9, 
  3.760658278485672*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["x", "2"], "+", 
         SuperscriptBox["y", "2"]}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{3.760658154780669*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", 
       RowBox[{"-", "2"}], ",", 
       RowBox[{"2", " ", 
        SqrtBox["2"]}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", 
       RowBox[{"-", "1"}], ",", 
       SqrtBox["5"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "0", ",", "2"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "1", ",", 
       SqrtBox["5"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "2", ",", 
       RowBox[{"2", " ", 
        SqrtBox["2"]}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "2"}], ",", 
       SqrtBox["5"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}], ",", 
       SqrtBox["2"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1", ",", 
       SqrtBox["2"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "2", ",", 
       SqrtBox["5"]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"0", ",", "2", ",", "2"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "2"}], ",", 
       SqrtBox["5"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}], ",", 
       SqrtBox["2"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", 
       SqrtBox["2"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", 
       SqrtBox["5"]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"-", "2"}], ",", 
       RowBox[{"2", " ", 
        SqrtBox["2"]}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"-", "1"}], ",", 
       SqrtBox["5"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{"2", ",", "0", ",", "2"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"2", ",", "1", ",", 
       SqrtBox["5"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", 
       RowBox[{"2", " ", 
        SqrtBox["2"]}]}], "}"}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.76065815704177*^9}]
}, Open  ]],

Cell["The Jacobian, according to numbered line (5) on p. 741, is", "Text",
 CellChangeTimes->{{3.760652315996633*^9, 3.760652349298401*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"Abs", "[", 
   RowBox[{
    RowBox[{"f", "'"}], "[", "z", "]"}], "]"}], "2"]], "Input",
 CellChangeTimes->{{3.760652360572401*^9, 3.760652377409519*^9}}],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"Abs", "[", "z", "]"}], "2"]], "Output",
 CellChangeTimes->{3.760652378973454*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"31.", "  ", "w"}], "=", 
  FractionBox["1", "z"]}]], "Text",
 CellChangeTimes->{{3.760313668814686*^9, 3.7603136764126883`*^9}, 
   3.7603137184462357`*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "z_", "]"}], "=", 
  FractionBox["1", "z"]}]], "Input",
 CellChangeTimes->{{3.760652611070013*^9, 3.760652621162182*^9}}],

Cell[BoxData[
 FractionBox["1", "z"]], "Output",
 CellChangeTimes->{3.760652622292527*^9, 3.760658396086115*^9}]
}, Open  ]],

Cell["The expression for the Magnification ratio M is", "Text",
 CellChangeTimes->{{3.760653009853492*^9, 3.7606530205252457`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Abs", "[", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"f", "[", "z", "]"}], ",", 
    RowBox[{"{", "z", "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7606526281438227`*^9, 3.7606526377454147`*^9}, {
  3.760652948089468*^9, 3.760652953376773*^9}}],

Cell[BoxData[
 FractionBox["1", 
  SuperscriptBox[
   RowBox[{"Abs", "[", "z", "]"}], "2"]]], "Output",
 CellChangeTimes->{3.760652639212009*^9, 3.760652953969656*^9, 
  3.760658399014522*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComplexExpand", "[", 
  FractionBox["1", 
   SuperscriptBox[
    RowBox[{"Abs", "[", 
     RowBox[{"x", "+", 
      RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}], "2"]], "]"}]], "Input",
 CellChangeTimes->{{3.760655688860764*^9, 3.760655716311571*^9}}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{
   SuperscriptBox["x", "2"], "+", 
   SuperscriptBox["y", "2"]}]]], "Output",
 CellChangeTimes->{{3.76065570274587*^9, 3.760655718119042*^9}, 
   3.760658402205633*^9}]
}, Open  ]],

Cell["\<\
As the cell below shows, the magnification is equal to 1 on the unit circle.\
\>", "Text",
 CellChangeTimes->{{3.7606595006303263`*^9, 3.76065951706996*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"tes", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  FractionBox["1", 
   RowBox[{
    SuperscriptBox["x", "2"], "+", 
    SuperscriptBox["y", "2"]}]]}]], "Input",
 CellChangeTimes->{{3.7606558254801283`*^9, 3.760655845670497*^9}}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{
   SuperscriptBox["x", "2"], "+", 
   SuperscriptBox["y", "2"]}]]], "Output",
 CellChangeTimes->{3.7606558476708813`*^9, 3.760658406470084*^9}]
}, Open  ]],

Cell[TextData[{
 "The concept of Magnification concerns what the absolute value of the \
derivative may do to various ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", "0"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " values. Again, taking integers, the following grid shows what \
magnifications result from various x and y values around the origin."
}], "Text",
 CellChangeTimes->{{3.7606526546007223`*^9, 3.760652698135229*^9}, {
  3.760657813852326*^9, 3.76065784659556*^9}, {3.760658436897627*^9, 
  3.760658442906245*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", 
       RowBox[{"tes", "[", 
        RowBox[{"x", ",", "y"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7606574753869953`*^9, 3.760657485696476*^9}, {
  3.7606575165823383`*^9, 3.760657520158092*^9}, {3.760657737224804*^9, 
  3.7606577814940233`*^9}, {3.760658350516233*^9, 3.760658371987006*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(\\*FractionBox[\\\"1\\\
\", \\\"0\\\"]\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7606584109788322`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", 
       RowBox[{"-", "2"}], ",", 
       FractionBox["1", "8"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", 
       RowBox[{"-", "1"}], ",", 
       FractionBox["1", "5"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "0", ",", 
       FractionBox["1", "4"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "1", ",", 
       FractionBox["1", "5"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "2", ",", 
       FractionBox["1", "8"]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "2"}], ",", 
       FractionBox["1", "5"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}], ",", 
       FractionBox["1", "2"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1", ",", 
       FractionBox["1", "2"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "2", ",", 
       FractionBox["1", "5"]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "2"}], ",", 
       FractionBox["1", "4"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "ComplexInfinity"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"0", ",", "2", ",", 
       FractionBox["1", "4"]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "2"}], ",", 
       FractionBox["1", "5"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}], ",", 
       FractionBox["1", "2"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", 
       FractionBox["1", "2"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", 
       FractionBox["1", "5"]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"-", "2"}], ",", 
       FractionBox["1", "8"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"-", "1"}], ",", 
       FractionBox["1", "5"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{"2", ",", "0", ",", 
       FractionBox["1", "4"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{"2", ",", "1", ",", 
       FractionBox["1", "5"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", 
       FractionBox["1", "8"]}], "}"}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.760657157274764*^9, 3.7606574862759*^9, 3.760657521014456*^9, {
   3.7606577474546747`*^9, 3.7606577824714737`*^9}, {3.760658356895002*^9, 
   3.7606584109863157`*^9}}]
}, Open  ]],

Cell["And the Jacobian is equal to", "Text",
 CellChangeTimes->{{3.760658483064128*^9, 3.760658488942976*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   FractionBox["1", 
    SuperscriptBox[
     RowBox[{"Abs", "[", "z", "]"}], "2"]], ")"}], "2"]], "Input",
 CellChangeTimes->{{3.7606584987916107`*^9, 3.760658513573859*^9}}],

Cell[BoxData[
 FractionBox["1", 
  SuperscriptBox[
   RowBox[{"Abs", "[", "z", "]"}], "4"]]], "Output",
 CellChangeTimes->{3.7606585146967688`*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"33.", " ", "w"}], "=", 
  SuperscriptBox["e", "z"]}]], "Text",
 CellChangeTimes->{{3.760313678998296*^9, 3.7603136860043383`*^9}, 
   3.76031373015797*^9, 3.76031377066149*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "z", "]"}], "=", 
  SuperscriptBox["\[ExponentialE]", "z"]}]], "Input",
 CellChangeTimes->{{3.760658572833026*^9, 3.760658584923729*^9}}],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", "z"]], "Output",
 CellChangeTimes->{3.760658586608514*^9, 3.760658825979494*^9}]
}, Open  ]],

Cell["\<\
The cell below shows that the magnification is 1 wherever z=0; as the y value \
is not involved, this means that the entire y-axis has a magnification of 1.\
\>", "Text",
 CellChangeTimes->{{3.7606595477567043`*^9, 3.7606596187308702`*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Abs", "[", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"f", "[", "z", "]"}], ",", 
    RowBox[{"{", "z", "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7606585901930017`*^9, 3.760658602715373*^9}, {
  3.760658650091545*^9, 3.760658654123148*^9}}],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  RowBox[{"Re", "[", "z", "]"}]]], "Output",
 CellChangeTimes->{3.760658604110107*^9, 3.7606586547714167`*^9, 
  3.760658828917337*^9}]
}, Open  ]],

Cell[TextData[{
 "The above factor is equal to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", "x"], "."}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " To see some examples of the magnification around the origin, look at"
}], "Text",
 CellChangeTimes->{{3.7606586936734743`*^9, 3.760658720827321*^9}, {
  3.7606587716536093`*^9, 3.760658790493466*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", 
       SuperscriptBox["\[ExponentialE]", "x"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.760658842157057*^9, 3.76065884589935*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", 
       RowBox[{"-", "2"}], ",", 
       FractionBox["1", 
        SuperscriptBox["\[ExponentialE]", "2"]]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", 
       RowBox[{"-", "1"}], ",", 
       FractionBox["1", 
        SuperscriptBox["\[ExponentialE]", "2"]]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "0", ",", 
       FractionBox["1", 
        SuperscriptBox["\[ExponentialE]", "2"]]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "1", ",", 
       FractionBox["1", 
        SuperscriptBox["\[ExponentialE]", "2"]]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "2", ",", 
       FractionBox["1", 
        SuperscriptBox["\[ExponentialE]", "2"]]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "2"}], ",", 
       FractionBox["1", "\[ExponentialE]"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}], ",", 
       FractionBox["1", "\[ExponentialE]"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "0", ",", 
       FractionBox["1", "\[ExponentialE]"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1", ",", 
       FractionBox["1", "\[ExponentialE]"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "2", ",", 
       FractionBox["1", "\[ExponentialE]"]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "2"}], ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"0", ",", "2", ",", "1"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "2"}], ",", "\[ExponentialE]"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}], ",", "\[ExponentialE]"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "\[ExponentialE]"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "\[ExponentialE]"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "\[ExponentialE]"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"-", "2"}], ",", 
       SuperscriptBox["\[ExponentialE]", "2"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"-", "1"}], ",", 
       SuperscriptBox["\[ExponentialE]", "2"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{"2", ",", "0", ",", 
       SuperscriptBox["\[ExponentialE]", "2"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{"2", ",", "1", ",", 
       SuperscriptBox["\[ExponentialE]", "2"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", 
       SuperscriptBox["\[ExponentialE]", "2"]}], "}"}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.760658849495837*^9}]
}, Open  ]],

Cell["As for the Jacobian,", "Text",
 CellChangeTimes->{{3.760658884451229*^9, 3.7606588885140743`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   SuperscriptBox["\[ExponentialE]", "x"], ")"}], "2"]], "Input",
 CellChangeTimes->{{3.7606589204272957`*^9, 3.760658940344233*^9}}],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  RowBox[{"2", " ", "x"}]]], "Output",
 CellChangeTimes->{3.760658941774987*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["35. w = Log[z]", "Text",
 CellChangeTimes->{{3.760313688533733*^9, 3.760313695405725*^9}, 
   3.760313742989532*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "z_", "]"}], "=", 
  RowBox[{"Log", "[", "z", "]"}]}]], "Input",
 CellChangeTimes->{{3.760659053400434*^9, 3.7606590602303753`*^9}}],

Cell[BoxData[
 RowBox[{"Log", "[", "z", "]"}]], "Output",
 CellChangeTimes->{3.76065906187976*^9}]
}, Open  ]],

Cell["\<\
As the cell below testifies, and the grid corroborates, the magnification \
equals 1 on the unit circle.\
\>", "Text",
 CellChangeTimes->{{3.7606596484815617`*^9, 3.760659678256912*^9}, {
  3.7606597223193483`*^9, 3.760659725791162*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Abs", "[", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"f", "[", "z", "]"}], ",", 
    RowBox[{"{", "z", "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7606590663844433`*^9, 3.760659081421248*^9}}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"Abs", "[", "z", "]"}]]], "Output",
 CellChangeTimes->{3.760659082311325*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", 
       FractionBox["1", 
        RowBox[{"Abs", "[", 
         RowBox[{"x", "+", 
          RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7606592034432917`*^9, 3.760659218319923*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(\\*FractionBox[\\\"1\\\
\", \\\"0\\\"]\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7606592216351137`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", 
       RowBox[{"-", "2"}], ",", 
       FractionBox["1", 
        RowBox[{"2", " ", 
         SqrtBox["2"]}]]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", 
       RowBox[{"-", "1"}], ",", 
       FractionBox["1", 
        SqrtBox["5"]]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "0", ",", 
       FractionBox["1", "2"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "1", ",", 
       FractionBox["1", 
        SqrtBox["5"]]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "2", ",", 
       FractionBox["1", 
        RowBox[{"2", " ", 
         SqrtBox["2"]}]]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "2"}], ",", 
       FractionBox["1", 
        SqrtBox["5"]]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}], ",", 
       FractionBox["1", 
        SqrtBox["2"]]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1", ",", 
       FractionBox["1", 
        SqrtBox["2"]]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "2", ",", 
       FractionBox["1", 
        SqrtBox["5"]]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "2"}], ",", 
       FractionBox["1", "2"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "ComplexInfinity"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"0", ",", "2", ",", 
       FractionBox["1", "2"]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "2"}], ",", 
       FractionBox["1", 
        SqrtBox["5"]]}], "}"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}], ",", 
       FractionBox["1", 
        SqrtBox["2"]]}], "}"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", 
       FractionBox["1", 
        SqrtBox["2"]]}], "}"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", 
       FractionBox["1", 
        SqrtBox["5"]]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"-", "2"}], ",", 
       FractionBox["1", 
        RowBox[{"2", " ", 
         SqrtBox["2"]}]]}], "}"}], 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"-", "1"}], ",", 
       FractionBox["1", 
        SqrtBox["5"]]}], "}"}], 
     RowBox[{"{", 
      RowBox[{"2", ",", "0", ",", 
       FractionBox["1", "2"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{"2", ",", "1", ",", 
       FractionBox["1", 
        SqrtBox["5"]]}], "}"}], 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", 
       FractionBox["1", 
        RowBox[{"2", " ", 
         SqrtBox["2"]}]]}], "}"}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.7606592216382637`*^9}]
}, Open  ]],

Cell["As for the Jacobian,", "Text",
 CellChangeTimes->{{3.760659234224166*^9, 3.760659237598996*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   FractionBox["1", 
    RowBox[{"Abs", "[", "z", "]"}]], ")"}], "2"]], "Input",
 CellChangeTimes->{{3.7606592823152227`*^9, 3.760659303244841*^9}}],

Cell[BoxData[
 FractionBox["1", 
  SuperscriptBox[
   RowBox[{"Abs", "[", "z", "]"}], "2"]]], "Output",
 CellChangeTimes->{3.7606593043799143`*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]]
},
WindowSize->{1366, 843},
WindowMargins->{{4, Automatic}, {Automatic, 4}},
Magnification:>1.5 Inherited,
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 10, \
2015)",
StyleDefinitions->"Charter1.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 221, 5, 51, "Text",
 Evaluatable->False],
Cell[624, 20, 73, 1, 45, "Input"],
Cell[700, 23, 412, 14, 76, "Text"],
Cell[1115, 39, 985, 23, 122, "Text"],
Cell[2103, 64, 381, 10, 50, "Text"],
Cell[2487, 76, 73, 1, 45, "Input"],
Cell[2563, 79, 125, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[2713, 84, 271, 6, 50, "Input"],
Cell[2987, 92, 169, 3, 49, "Output"]
}, Open  ]],
Cell[3171, 98, 97, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[3293, 103, 182, 4, 47, "Input"],
Cell[3478, 109, 121, 2, 45, "Output"]
}, Open  ]],
Cell[3614, 114, 328, 6, 86, "Text"],
Cell[CellGroupData[{
Cell[3967, 124, 248, 5, 45, "Input"],
Cell[4218, 131, 116, 2, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4371, 138, 270, 6, 75, "Input"],
Cell[4644, 146, 140, 3, 76, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4821, 154, 329, 6, 71, "Input"],
Cell[5153, 162, 187, 3, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5377, 170, 352, 7, 71, "Input"],
Cell[5732, 179, 197, 3, 45, "Output"]
}, Open  ]],
Cell[5944, 185, 129, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[6098, 190, 7874, 220, 718, "Input"],
Cell[13975, 412, 5293, 124, 519, "Output"]
}, Open  ]],
Cell[19283, 539, 284, 7, 110, "Text"],
Cell[19570, 548, 378, 10, 73, "Text"],
Cell[19951, 560, 190, 3, 75, "Text"],
Cell[20144, 565, 73, 1, 45, "Input"],
Cell[20220, 568, 358, 10, 66, "Text"],
Cell[20581, 580, 297, 6, 51, "Text"],
Cell[CellGroupData[{
Cell[20903, 590, 372, 10, 47, "Input"],
Cell[21278, 602, 218, 6, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21533, 613, 367, 10, 47, "Input"],
Cell[21903, 625, 218, 6, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22158, 636, 145, 3, 45, "Input"],
Cell[22306, 641, 118, 3, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22461, 649, 145, 3, 45, "Input"],
Cell[22609, 654, 123, 3, 45, "Output"]
}, Open  ]],
Cell[22747, 660, 178, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[22950, 668, 507, 14, 45, "Input"],
Cell[23460, 684, 830, 28, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24327, 717, 236, 5, 45, "Input"],
Cell[24566, 724, 415, 15, 45, "Output"]
}, Open  ]],
Cell[24996, 742, 324, 6, 86, "Text"],
Cell[CellGroupData[{
Cell[25345, 752, 6352, 178, 394, "Input"],
Cell[31700, 932, 3637, 79, 418, "Output"]
}, Open  ]],
Cell[35352, 1014, 362, 6, 51, "Text"],
Cell[35717, 1022, 159, 3, 51, "Text"],
Cell[CellGroupData[{
Cell[35901, 1029, 407, 12, 45, "Input"],
Cell[36311, 1043, 783, 27, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37131, 1075, 233, 5, 45, "Input"],
Cell[37367, 1082, 417, 15, 45, "Output"]
}, Open  ]],
Cell[37799, 1100, 228, 4, 86, "Text"],
Cell[CellGroupData[{
Cell[38052, 1108, 6616, 186, 394, "Input"],
Cell[44671, 1296, 3747, 87, 378, "Output"]
}, Open  ]],
Cell[48433, 1386, 234, 4, 51, "Text"],
Cell[48670, 1392, 202, 3, 75, "Text"],
Cell[48875, 1397, 73, 1, 45, "Input"],
Cell[48951, 1400, 102, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[49078, 1405, 339, 10, 47, "Input"],
Cell[49420, 1417, 181, 4, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49638, 1426, 343, 10, 47, "Input"],
Cell[49984, 1438, 182, 4, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50203, 1447, 341, 11, 45, "Input"],
Cell[50547, 1460, 827, 27, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51411, 1492, 166, 4, 45, "Input"],
Cell[51580, 1498, 457, 15, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52074, 1518, 5901, 171, 394, "Input"],
Cell[57978, 1691, 3259, 72, 418, "Output"]
}, Open  ]],
Cell[61252, 1766, 259, 5, 86, "Text"],
Cell[CellGroupData[{
Cell[61536, 1775, 412, 12, 45, "Input"],
Cell[61951, 1789, 857, 28, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62845, 1822, 235, 5, 45, "Input"],
Cell[63083, 1829, 461, 15, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63581, 1849, 6276, 176, 394, "Input"],
Cell[69860, 2027, 3952, 93, 397, "Output"]
}, Open  ]],
Cell[73827, 2123, 314, 6, 86, "Text"],
Cell[74144, 2131, 276, 6, 110, "Text"],
Cell[74423, 2139, 498, 15, 94, "Text"],
Cell[74924, 2156, 73, 1, 45, "Input"],
Cell[75000, 2159, 160, 3, 51, "Text"],
Cell[75163, 2164, 1170, 33, 57, "Input"],
Cell[76336, 2199, 1522, 51, 153, "Text"],
Cell[77861, 2252, 93, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[77979, 2257, 10336, 274, 919, "Input"],
Cell[88318, 2533, 59989, 1034, 463, "Output"]
}, Open  ]],
Cell[148322, 3570, 384, 8, 51, "Text"],
Cell[148709, 3580, 236, 3, 75, "Text"],
Cell[148948, 3585, 73, 1, 45, "Input"],
Cell[149024, 3588, 436, 12, 67, "Text"],
Cell[CellGroupData[{
Cell[149485, 3604, 295, 9, 47, "Input"],
Cell[149783, 3615, 169, 5, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149989, 3625, 326, 9, 47, "Input"],
Cell[150318, 3636, 169, 5, 45, "Output"]
}, Open  ]],
Cell[150502, 3644, 192, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[150719, 3652, 246, 7, 45, "Input"],
Cell[150968, 3661, 220, 7, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[151225, 3673, 228, 5, 45, "Input"],
Cell[151456, 3680, 134, 4, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[151627, 3689, 248, 7, 45, "Input"],
Cell[151878, 3698, 220, 7, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[152135, 3710, 228, 5, 45, "Input"],
Cell[152366, 3717, 136, 4, 45, "Output"]
}, Open  ]],
Cell[152517, 3724, 370, 11, 52, "Text"],
Cell[CellGroupData[{
Cell[152912, 3739, 6500, 176, 560, "Input"],
Cell[159415, 3917, 4280, 95, 378, "Output"]
}, Open  ]],
Cell[163710, 4015, 394, 12, 93, "Text"],
Cell[164107, 4029, 73, 1, 45, "Input"],
Cell[164183, 4032, 178, 4, 51, "Text"],
Cell[164364, 4038, 756, 24, 77, "Input"],
Cell[165123, 4064, 294, 6, 51, "Text"],
Cell[165420, 4072, 320, 9, 49, "Input"],
Cell[165743, 4083, 97, 1, 51, "Text"],
Cell[165843, 4086, 200, 5, 76, "Input"],
Cell[166046, 4093, 218, 4, 51, "Text"],
Cell[166267, 4099, 279, 8, 76, "Input"],
Cell[166549, 4109, 142, 1, 51, "Text"],
Cell[166694, 4112, 205, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[166924, 4120, 332, 10, 54, "Input"],
Cell[167259, 4132, 251, 6, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[167547, 4143, 332, 10, 54, "Input"],
Cell[167882, 4155, 249, 6, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168168, 4166, 329, 10, 47, "Input"],
Cell[168500, 4178, 375, 11, 80, "Output"]
}, Open  ]],
Cell[168890, 4192, 298, 6, 51, "Text"],
Cell[CellGroupData[{
Cell[169213, 4202, 214, 5, 75, "Input"],
Cell[169430, 4209, 131, 2, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[169598, 4216, 165, 4, 75, "Input"],
Cell[169766, 4222, 129, 2, 69, "Output"]
}, Open  ]],
Cell[169910, 4227, 181, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[170116, 4235, 248, 5, 45, "Input"],
Cell[170367, 4242, 124, 2, 45, "Output"]
}, Open  ]],
Cell[170506, 4247, 338, 7, 75, "Text"],
Cell[170847, 4256, 1315, 38, 81, "Input"],
Cell[172165, 4296, 692, 11, 155, "Text"],
Cell[CellGroupData[{
Cell[172882, 4311, 6310, 151, 427, "Input"],
Cell[179195, 4464, 528, 11, 56, "Message"],
Cell[179726, 4477, 527, 11, 56, "Message"],
Cell[180256, 4490, 41220, 687, 523, "Output"]
}, Open  ]],
Cell[221491, 5180, 390, 7, 120, "Text"],
Cell[CellGroupData[{
Cell[221906, 5191, 4591, 124, 372, "Input"],
Cell[226500, 5317, 21669, 369, 556, "Output"]
}, Open  ]],
Cell[248184, 5689, 361, 6, 86, "Text"],
Cell[248548, 5697, 1809, 47, 123, "Input"],
Cell[250360, 5746, 1211, 34, 94, "Input"],
Cell[251574, 5782, 1234, 34, 94, "Input"],
Cell[252811, 5818, 1236, 34, 94, "Input"],
Cell[254050, 5854, 1214, 34, 94, "Input"],
Cell[CellGroupData[{
Cell[255289, 5892, 188, 4, 45, "Input"],
Cell[255480, 5898, 66888, 1111, 360, "Output"]
}, Open  ]],
Cell[322383, 7012, 395, 10, 70, "Text"],
Cell[322781, 7024, 73, 1, 45, "Input"],
Cell[322857, 7027, 161, 2, 51, "Text"],
Cell[CellGroupData[{
Cell[323043, 7033, 229, 5, 75, "Input"],
Cell[323275, 7040, 205, 5, 45, "Output"]
}, Open  ]],
Cell[323495, 7048, 283, 6, 51, "Text"],
Cell[CellGroupData[{
Cell[323803, 7058, 208, 4, 75, "Input"],
Cell[324014, 7064, 183, 4, 75, "Output"]
}, Open  ]],
Cell[324212, 7071, 207, 4, 51, "Text"],
Cell[324422, 7077, 254, 6, 46, "Text"],
Cell[324679, 7085, 93, 1, 51, "Text"],
Cell[324775, 7088, 1745, 56, 133, "Text"],
Cell[CellGroupData[{
Cell[326545, 7148, 169, 4, 45, "Input"],
Cell[326717, 7154, 105, 2, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[326859, 7161, 150, 3, 45, "Input"],
Cell[327012, 7166, 88, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[327137, 7172, 537, 10, 45, "Input"],
Cell[327677, 7184, 538, 11, 45, "Output"]
}, Open  ]],
Cell[328230, 7198, 1785, 33, 148, "Input"],
Cell[330018, 7233, 193, 4, 45, "Input"],
Cell[330214, 7239, 2364, 69, 401, "Input"],
Cell[332581, 7310, 264, 5, 86, "Text"],
Cell[332848, 7317, 8691, 215, 874, "Input"],
Cell[341542, 7534, 5596, 150, 349, InheritFromParent],
Cell[347141, 7686, 445, 12, 94, "Text"],
Cell[347589, 7700, 73, 1, 45, "Input"],
Cell[347665, 7703, 193, 4, 51, "Text"],
Cell[347861, 7709, 1203, 30, 55, "Input"],
Cell[349067, 7741, 281, 5, 86, "Text"],
Cell[CellGroupData[{
Cell[349373, 7750, 5465, 146, 447, "Input"],
Cell[354841, 7898, 42492, 734, 496, "Output"]
}, Open  ]],
Cell[397348, 8635, 263, 6, 110, "Text"],
Cell[397614, 8643, 171, 3, 75, "Text"],
Cell[397788, 8648, 73, 1, 45, "Input"],
Cell[397864, 8651, 151, 3, 51, "Text"],
Cell[CellGroupData[{
Cell[398040, 8658, 368, 12, 49, "Input"],
Cell[398411, 8672, 346, 11, 49, "Output"]
}, Open  ]],
Cell[398772, 8686, 106, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[398903, 8691, 251, 6, 45, "Input"],
Cell[399157, 8699, 283, 8, 49, "Output"]
}, Open  ]],
Cell[399455, 8710, 157, 2, 51, "Text"],
Cell[CellGroupData[{
Cell[399637, 8716, 282, 6, 45, "Input"],
Cell[399922, 8724, 956, 32, 101, "Output"]
}, Open  ]],
Cell[400893, 8759, 196, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[401114, 8767, 263, 7, 49, "Input"],
Cell[401380, 8776, 207, 6, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[401624, 8787, 201, 5, 45, "Input"],
Cell[401828, 8794, 207, 5, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[402072, 8804, 183, 4, 45, "Input"],
Cell[402258, 8810, 745, 26, 101, "Output"]
}, Open  ]],
Cell[403018, 8839, 239, 5, 51, "Text"],
Cell[403260, 8846, 299, 9, 104, "Text"],
Cell[403562, 8857, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[403660, 8862, 267, 8, 89, "Input"],
Cell[403930, 8872, 208, 7, 89, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[404175, 8884, 203, 5, 45, "Input"],
Cell[404381, 8891, 504, 17, 102, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[404922, 8913, 132, 2, 45, "Input"],
Cell[405057, 8917, 352, 12, 94, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[405446, 8934, 347, 10, 54, "Input"],
Cell[405796, 8946, 610, 21, 99, "Output"]
}, Open  ]],
Cell[406421, 8970, 194, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[406640, 8978, 404, 14, 94, "Input"],
Cell[407047, 8994, 73, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[407157, 9000, 402, 14, 94, "Input"],
Cell[407562, 9016, 99, 1, 45, "Output"]
}, Open  ]],
Cell[407676, 9020, 134, 2, 75, "Text"],
Cell[407813, 9024, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[407911, 9029, 231, 6, 45, "Input"],
Cell[408145, 9037, 100, 2, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[408282, 9044, 184, 4, 45, "Input"],
Cell[408469, 9050, 858, 24, 99, "Output"]
}, Open  ]],
Cell[409342, 9077, 192, 4, 51, "Text"],
Cell[409537, 9083, 401, 8, 144, "Text"],
Cell[409941, 9093, 266, 8, 93, "Text"],
Cell[410210, 9103, 73, 1, 45, "Input"],
Cell[410286, 9106, 240, 5, 51, "Text"],
Cell[CellGroupData[{
Cell[410551, 9115, 208, 6, 75, "Input"],
Cell[410762, 9123, 138, 3, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[410937, 9131, 325, 8, 45, "Input"],
Cell[411265, 9141, 70, 1, 45, "Output"]
}, Open  ]],
Cell[411350, 9145, 199, 4, 75, "Text"],
Cell[CellGroupData[{
Cell[411574, 9153, 297, 6, 45, "Input"],
Cell[411874, 9161, 176, 5, 64, "Output"]
}, Open  ]],
Cell[412065, 9169, 292, 6, 51, "Text"],
Cell[CellGroupData[{
Cell[412382, 9179, 569, 18, 70, "Input"],
Cell[412954, 9199, 2837, 102, 264, "Output"]
}, Open  ]],
Cell[415806, 9304, 140, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[415971, 9309, 195, 5, 49, "Input"],
Cell[416169, 9316, 161, 4, 73, "Output"]
}, Open  ]],
Cell[416345, 9323, 227, 6, 93, "Text"],
Cell[416575, 9331, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[416673, 9336, 165, 4, 75, "Input"],
Cell[416841, 9342, 112, 2, 75, "Output"]
}, Open  ]],
Cell[416968, 9347, 131, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[417124, 9352, 282, 7, 45, "Input"],
Cell[417409, 9361, 192, 5, 82, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[417638, 9371, 275, 7, 82, "Input"],
Cell[417916, 9380, 212, 6, 82, "Output"]
}, Open  ]],
Cell[418143, 9389, 205, 4, 75, "Text"],
Cell[CellGroupData[{
Cell[418373, 9397, 270, 8, 82, "Input"],
Cell[418646, 9407, 187, 5, 82, "Output"]
}, Open  ]],
Cell[418848, 9415, 540, 12, 88, "Text"],
Cell[CellGroupData[{
Cell[419413, 9431, 699, 18, 45, "Input"],
Cell[420115, 9451, 478, 10, 56, "Message"],
Cell[420596, 9463, 3135, 105, 248, "Output"]
}, Open  ]],
Cell[423746, 9571, 110, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[423881, 9576, 222, 6, 86, "Input"],
Cell[424106, 9584, 185, 5, 106, "Output"]
}, Open  ]],
Cell[424306, 9592, 247, 6, 70, "Text"],
Cell[424556, 9600, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[424654, 9605, 181, 4, 47, "Input"],
Cell[424838, 9611, 129, 2, 47, "Output"]
}, Open  ]],
Cell[424982, 9616, 288, 5, 110, "Text"],
Cell[CellGroupData[{
Cell[425295, 9625, 280, 7, 45, "Input"],
Cell[425578, 9634, 185, 4, 49, "Output"]
}, Open  ]],
Cell[425778, 9641, 395, 10, 52, "Text"],
Cell[CellGroupData[{
Cell[426198, 9655, 527, 15, 54, "Input"],
Cell[426728, 9672, 3285, 102, 228, "Output"]
}, Open  ]],
Cell[430028, 9777, 104, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[430157, 9782, 180, 4, 56, "Input"],
Cell[430340, 9788, 168, 4, 73, "Output"]
}, Open  ]],
Cell[430523, 9795, 158, 3, 75, "Text"],
Cell[430684, 9800, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[430782, 9805, 176, 4, 47, "Input"],
Cell[430961, 9811, 98, 2, 45, "Output"]
}, Open  ]],
Cell[431074, 9816, 285, 6, 75, "Text"],
Cell[CellGroupData[{
Cell[431384, 9826, 231, 6, 45, "Input"],
Cell[431618, 9834, 120, 3, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[431775, 9842, 622, 18, 80, "Input"],
Cell[432400, 9862, 478, 10, 56, "Message"],
Cell[432881, 9874, 3394, 122, 288, "Output"]
}, Open  ]],
Cell[436290, 9999, 102, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[436417, 10004, 195, 5, 81, "Input"],
Cell[436615, 10011, 185, 5, 106, "Output"]
}, Open  ]]
}
]
*)


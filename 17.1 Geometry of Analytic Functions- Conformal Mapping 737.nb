(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    729813,      15158]
NotebookOptionsPosition[    714935,      14688]
NotebookOutlinePosition[    715323,      14705]
CellTagsIndexPosition[    715280,      14702]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
Note: In this problem set, expressions in green cells match corresponding \
expressions in the text answers.\
\>", "Text",
 Evaluatable->False,
 CellChangeTimes->{{3.769276456043653*^9, 3.7692764584769497`*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[TextData[{
 "3. Mapping w=",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["z", "3"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". Draw an analog of figure 378 for w=",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["z", "3"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.760387151267124*^9, 3.7603871892178097`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[TextData[{
 "Although there is no text answer for this problem, it is covered in the \
s.m. The mapping will be from the z-plane to the w-plane. According to polar \
convention, for the distance and angle projections, the terminology will be \
z=r",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and w=R ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". The mapping transformation consists in"
}], "Text",
 CellChangeTimes->{{3.760387214033208*^9, 3.7603872292244864`*^9}, {
  3.760395533333589*^9, 3.760395596330124*^9}, {3.760395639282255*^9, 
  3.760395740757667*^9}, {3.760395867826847*^9, 3.760395904160236*^9}, {
  3.760397813812862*^9, 3.760397820915101*^9}, {3.760397865817891*^9, 
  3.760397888609027*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"R", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]]}], "=", 
  RowBox[{
   SuperscriptBox["r", "3"], 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", "3", " ", "\[Theta]"}]]}]}]], "Text",
 CellChangeTimes->{{3.76039590892389*^9, 3.760395959639081*^9}, 
   3.7603960908851337`*^9}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell["Comparing the exponents, I have for distance", "Text",
 CellChangeTimes->{{3.76039682824417*^9, 3.760396855649905*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"w", "[", "z_", "]"}], "=", 
  SuperscriptBox["z", "3"]}]], "Input",
 CellChangeTimes->{{3.760396097038431*^9, 3.760396188935754*^9}, {
  3.7603967889100027`*^9, 3.7603967895805264`*^9}, {3.76039685969796*^9, 
  3.7603968725454607`*^9}}],

Cell[BoxData[
 SuperscriptBox["z", "3"]], "Output",
 CellChangeTimes->{{3.7603961901940107`*^9, 3.7603962058179903`*^9}, 
   3.760396873787126*^9, 3.760397957513782*^9}]
}, Open  ]],

Cell["and for angle", "Text",
 CellChangeTimes->{{3.760396878016811*^9, 3.7603968797692423`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"wa", "[", "\[Theta]_", "]"}], "=", 
  RowBox[{"3", " ", "\[Theta]"}]}]], "Input",
 CellChangeTimes->{{3.760396884317223*^9, 3.760396912161693*^9}}],

Cell[BoxData[
 RowBox[{"3", " ", "\[Theta]"}]], "Output",
 CellChangeTimes->{3.760396915118903*^9, 3.760397960128477*^9}]
}, Open  ]],

Cell["\<\
The analogous example is example 1 on p. 737, with the inner radius 1, the \
outer radius 3/2, and the angle of the sector from \[Pi]/6 to \[Pi]/3. The \
transforming should take place as\
\>", "Text",
 CellChangeTimes->{{3.7603963065806227`*^9, 3.760396397104869*^9}, {
  3.760396528036524*^9, 3.760396538260275*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"innerrad", "=", 
  RowBox[{"w", "[", "1", "]"}]}]], "Input",
 CellChangeTimes->{{3.760396558552997*^9, 3.76039656876331*^9}, {
  3.7603969252337723`*^9, 3.760396925440097*^9}, {3.76039792385614*^9, 
  3.760397924232045*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.760396571781252*^9, 3.760396926692998*^9, 
  3.76039796354706*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"outerrad", "=", 
  RowBox[{"w", "[", 
   FractionBox["3", "2"], "]"}]}]], "Input",
 CellChangeTimes->{{3.760396573878326*^9, 3.7603965903547487`*^9}, {
  3.76039693316791*^9, 3.760396933439795*^9}, {3.76039792865723*^9, 
  3.760397929159762*^9}}],

Cell[BoxData[
 FractionBox["27", "8"]], "Output",
 CellChangeTimes->{3.7603965909847527`*^9, 3.760396934542057*^9, 
  3.760397966328027*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"smallangle", "=", 
  RowBox[{"wa", "[", 
   FractionBox["\[Pi]", "6"], "]"}]}]], "Input",
 CellChangeTimes->{{3.760396600864195*^9, 3.7603966248652477`*^9}, {
  3.760396703385103*^9, 3.7603967036068077`*^9}, {3.7603969415596857`*^9, 
  3.760396943895123*^9}, {3.760397933353104*^9, 3.760397938735598*^9}}],

Cell[BoxData[
 FractionBox["\[Pi]", "2"]], "Output",
 CellChangeTimes->{3.760396625653974*^9, 3.760396704477086*^9, 
  3.760396944897747*^9, 3.7603974915418386`*^9, 3.760397969980399*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"largeangle", "=", 
  RowBox[{"wa", "[", 
   FractionBox["\[Pi]", "3"], "]"}]}]], "Input",
 CellChangeTimes->{{3.760396628117444*^9, 3.760396654400566*^9}, {
   3.76039670999879*^9, 3.760396710262623*^9}, {3.760396951023198*^9, 
   3.7603969511831703`*^9}, 3.760397501582999*^9, {3.760397942383375*^9, 
   3.760397948807362*^9}}],

Cell[BoxData["\[Pi]"], "Output",
 CellChangeTimes->{
  3.7603966549599733`*^9, 3.760396710965188*^9, 3.760396953343575*^9, {
   3.7603974859496098`*^9, 3.760397502820671*^9}, 3.760397973393763*^9}]
}, Open  ]],

Cell["The transform sketch should look something like", "Text",
 CellChangeTimes->{{3.760396982493626*^9, 3.760396991125566*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"RGBColor", "[", 
            RowBox[{
             FractionBox["100", "255"], ",", 
             FractionBox["210", "255"], ",", 
             FractionBox["250", "255"]}], "]"}], ",", 
           RowBox[{"Annulus", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", 
               FractionBox["3", "2"]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               FractionBox["\[Pi]", "6"], ",", 
               FractionBox["\[Pi]", "3"]}], "}"}]}], "]"}]}], "}"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"Circle", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", "1", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             FractionBox["\[Pi]", "2"]}], "}"}]}], "]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Circle", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           FractionBox["1", "2"], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             FractionBox["\[Pi]", "2"]}], "}"}]}], "]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Circle", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           FractionBox["3", "2"], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             FractionBox["\[Pi]", "2"]}], "}"}]}], "]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Circle", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", "2", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             FractionBox["\[Pi]", "2"]}], "}"}]}], "]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2.1", ",", "1.22"}], "}"}]}], "}"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1.15", ",", "2"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
       "}"}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", " ", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2.5", ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "2.5"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Ticks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "2"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Framed", "[", "  ", "\"\<  z-plane \>\"", "]"}], ",", "10", 
         ",", "Blue", ",", 
         RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}]}], "]"}], " ", 
    ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"RGBColor", "[", 
            RowBox[{
             FractionBox["100", "255"], ",", 
             FractionBox["210", "255"], ",", 
             FractionBox["250", "255"]}], "]"}], ",", 
           RowBox[{"Annulus", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", 
               FractionBox["27", "8"]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               FractionBox["\[Pi]", "2"], ",", "\[Pi]"}], "}"}]}], "]"}]}], 
          "}"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Circle", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", "1", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "\[Pi]"}], "}"}]}], "]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Circle", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           FractionBox["27", "8"], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "\[Pi]"}], "}"}]}], "]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Circle", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", "4", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "\[Pi]"}], "}"}]}], "]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "4.5"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"Dashed", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "4.5"}], ",", "0"}], "}"}]}], "}"}], "]"}]}], 
         "}"}], ","}], "}"}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", " ", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4.5", ",", 
           RowBox[{"-", "4.5"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "4.5"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Ticks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "4"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2", ",", "3", ",", 
           "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "2", ",", "3", ",", "4"}], "}"}]}], 
        "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "485"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<u\>\"", ",", "\"\<v\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Framed", "[", "  ", "\"\<  w-plane \>\"", "]"}], ",", "10", 
         ",", "Red", ",", 
         RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}]}], "]"}]}], 
   " ", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7603971324765797`*^9, 3.7603971439135*^9}, {
  3.760397567448484*^9, 3.7603975826213217`*^9}, {3.760397663962796*^9, 
  3.7603976693853693`*^9}, {3.760397712242437*^9, 3.760397764558979*^9}, {
  3.760472537851066*^9, 3.7604725492216387`*^9}, {3.760472584983416*^9, 
  3.7604726245570803`*^9}, {3.760741723727577*^9, 3.7607417318448257`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{
       RGBColor[
        NCache[
         Rational[20, 51], 0.39215686274509803`], 
        NCache[
         Rational[14, 17], 0.8235294117647058], 
        NCache[
         Rational[50, 51], 0.9803921568627451]], 
       InterpretationBox[
        FilledCurveBox[
         BSplineCurve[{{1.2990381056766584`, 0.7499999999999996}, {
          1.0980762113533162`, 1.0980762113533158`}, {0.75, 
          1.299038105676658}, {0.625, 1.0825317547305484`}, {0.5, 
          0.8660254037844386}, {0.7320508075688774, 0.7320508075688772}, {
          0.8660254037844388, 0.49999999999999956`}, {1.0825317547305486`, 
          0.6249999999999998}, {1.2990381056766584`, 0.7499999999999996}}, 
          SplineKnots -> {0, 0, 0, 
            Rational[1, 4], 
            Rational[1, 4], 
            Rational[1, 2], 
            Rational[1, 2], 
            Rational[3, 4], 
            Rational[3, 4], 1, 1, 1}, 
          SplineWeights -> {
           1.333333333333333, 1.5773502691896255`, 2, 2, 2, 
            1.5773502691896255`, 1.333333333333333, 1.333333333333333, 
            1.333333333333333}, SplineDegree -> 2]], 
        Annulus[{0, 0}, {1, 
          Rational[3, 2]}, {Rational[1, 6] Pi, Rational[1, 3] Pi}]]}}, {
      CircleBox[{0, 0}, 1, 
       NCache[{0, Rational[1, 2] Pi}, {0, 1.5707963267948966`}]]}, {
      CircleBox[{0, 0}, 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[{0, Rational[1, 2] Pi}, {0, 1.5707963267948966`}]]}, {
      CircleBox[{0, 0}, 
       NCache[
        Rational[3, 2], 1.5], 
       NCache[{0, Rational[1, 2] Pi}, {0, 1.5707963267948966`}]]}, {
      CircleBox[{0, 0}, 2, 
       NCache[{0, Rational[1, 2] Pi}, {0, 1.5707963267948966`}]]}, {
      Dashing[{Small, Small}], 
      LineBox[{{0, 0}, {2.1, 1.22}}]}, {
      Dashing[{Small, Small}], 
      LineBox[{{0, 0}, {1.15, 2}}]}}, Axes -> True, AxesOrigin -> {0, 0}, 
    PlotRange -> {{2.5, -1}, {-1, 2.5}}, Ticks -> {{{0, 
        FormBox["0", TraditionalForm]}, {1, 
        FormBox["1", TraditionalForm]}, {2, 
        FormBox["2", TraditionalForm]}}, {{0, 
        FormBox["0", TraditionalForm]}, {1, 
        FormBox["1", TraditionalForm]}, {2, 
        FormBox["2", TraditionalForm]}}}, ImageSize -> 200, AxesLabel -> {
      FormBox["\"x\"", TraditionalForm], 
      FormBox["\"y\"", TraditionalForm]}, PlotLabel -> FormBox[
      StyleBox[
       FrameBox["\"  z-plane \"", StripOnInput -> False], 10, 
       RGBColor[0, 0, 1], Background -> GrayLevel[1], StripOnInput -> False], 
      TraditionalForm]],GraphicsBox[{{{
       RGBColor[
        NCache[
         Rational[20, 51], 0.39215686274509803`], 
        NCache[
         Rational[14, 17], 0.8235294117647058], 
        NCache[
         Rational[50, 51], 0.9803921568627451]], 
       InterpretationBox[
        FilledCurveBox[
         BSplineCurve[{{0., 3.375}, {-3.375, 3.375}, {-3.375, 0.}, {-2.1875, 
          0.}, {-1., 0.}, {-1., 1.}, {0., 1.}, {0., 2.1875}, {0., 3.375}}, 
          SplineKnots -> {0, 0, 0, 
            Rational[1, 4], 
            Rational[1, 4], 
            Rational[1, 2], 
            Rational[1, 2], 
            Rational[3, 4], 
            Rational[3, 4], 1, 1, 1}, 
          SplineWeights -> {1., 1., 2, 2, 2, 1., 1., 1., 1.}, SplineDegree -> 
          2]], 
        Annulus[{0, 0}, {1, 
          Rational[27, 8]}, {Rational[1, 2] Pi, Pi}]]}}, {
      CircleBox[{0, 0}, 1, 
       NCache[{0, Pi}, {0, 3.141592653589793}]]}, {
      CircleBox[{0, 0}, 
       NCache[
        Rational[27, 8], 3.375], 
       NCache[{0, Pi}, {0, 3.141592653589793}]]}, {
      CircleBox[{0, 0}, 4, 
       NCache[{0, Pi}, {0, 3.141592653589793}]]}, {
      Dashing[{Small, Small}], 
      LineBox[{{0, 0}, {0, 4.5}}]}, {
      Dashing[{Small, Small}], 
      LineBox[{{0, 0}, {-4.5, 0}}]}, Null}, Axes -> True, 
    AxesOrigin -> {0, 0}, PlotRange -> {{4.5, -4.5}, {-1, 4.5}}, 
    Ticks -> {{{-4, 
        FormBox[
         RowBox[{"-", "4"}], TraditionalForm]}, {-3, 
        FormBox[
         RowBox[{"-", "3"}], TraditionalForm]}, {-2, 
        FormBox[
         RowBox[{"-", "2"}], TraditionalForm]}, {-1, 
        FormBox[
         RowBox[{"-", "1"}], TraditionalForm]}, {0, 
        FormBox["0", TraditionalForm]}, {1, 
        FormBox["1", TraditionalForm]}, {2, 
        FormBox["2", TraditionalForm]}, {3, 
        FormBox["3", TraditionalForm]}, {4, 
        FormBox["4", TraditionalForm]}}, {{0, 
        FormBox["0", TraditionalForm]}, {1, 
        FormBox["1", TraditionalForm]}, {2, 
        FormBox["2", TraditionalForm]}, {3, 
        FormBox["3", TraditionalForm]}, {4, 
        FormBox["4", TraditionalForm]}}}, ImageSize -> 485, AxesLabel -> {
      FormBox["\"u\"", TraditionalForm], 
      FormBox["\"v\"", TraditionalForm]}, PlotLabel -> FormBox[
      StyleBox[
       FrameBox["\"  w-plane \"", StripOnInput -> False], 10, 
       RGBColor[1, 0, 0], Background -> GrayLevel[1], StripOnInput -> False], 
      TraditionalForm]]},
  "RowDefault"]], "Output",
 CellChangeTimes->{
  3.760397012218298*^9, 3.760397527221559*^9, 3.7603975838253508`*^9, {
   3.7603977003963833`*^9, 3.760397765331976*^9}, 3.7603979801014633`*^9, 
   3.7604725501320953`*^9, {3.76047259834511*^9, 3.760472625474201*^9}, 
   3.7607417333086777`*^9}]
}, {2}]],

Cell["\<\
6 - 9 Mapping of curves
Find and sketch or graph the images of the given curves under the given \
mapping.\
\>", "Text",
 CellChangeTimes->{{3.7603127954974213`*^9, 3.760312824311638*^9}},
 Background->RGBColor[
  0.9600061036087587, 0.9600061036087587, 0.9600061036087587]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"6.", "  ", "x"}], "=", "1"}], ",", "2", ",", "3", ",", "4", ",", 
  " ", 
  RowBox[{"y", "=", "1"}], ",", "2", ",", "3", ",", "4", ",", " ", 
  RowBox[{"w", "=", 
   SuperscriptBox["z", "2"]}]}]], "Text",
 CellChangeTimes->{{3.760312827511928*^9, 3.760312852518777*^9}, 
   3.76031291997589*^9},
 FontSlant->"Italic"],

Cell["7.  Rotation. Curves as in problem 6, w = I z", "Text",
 CellChangeTimes->{{3.760312857231189*^9, 3.76031287745434*^9}, 
   3.7603129313672132`*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[TextData[{
 "The contention of the s.m. is that this transformation represents a \
positive rotation by ",
 Cell[BoxData[
  FormBox[
   FractionBox["\[Pi]", "2"], TraditionalForm]],
  FontSize->21],
 ". "
}], "Text",
 CellChangeTimes->{{3.760399182424365*^9, 3.760399215877915*^9}, {
   3.760399269925633*^9, 3.76039928089251*^9}, 3.760469645681484*^9}],

Cell["\<\
Proceeding to define the mapping transformation, which essentially multiplies \
z values by \[ImaginaryI].\
\>", "Text",
 CellChangeTimes->{{3.760467874319188*^9, 3.760467927619285*^9}, {
  3.7604706393439493`*^9, 3.760470640792006*^9}, {3.76047315453139*^9, 
  3.7604731587616787`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"u", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{"Re", "[", 
   RowBox[{"\[ImaginaryI]", 
    RowBox[{"(", 
     RowBox[{"x", "+", 
      RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.760467171714334*^9, 3.7604672176204557`*^9}, {
  3.760467302178832*^9, 3.7604673066084957`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"Im", "[", "x", "]"}]}], "-", 
  RowBox[{"Re", "[", "y", "]"}]}]], "Output",
 CellChangeTimes->{
  3.760467219167424*^9, {3.760467308093049*^9, 3.760467330079411*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"v", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{"Im", "[", 
   RowBox[{"\[ImaginaryI]", 
    RowBox[{"(", 
     RowBox[{"x", "+", 
      RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.760467260769279*^9, 3.760467274978004*^9}, {
  3.760467342983*^9, 3.7604673766159973`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"Im", "[", "y", "]"}]}], "+", 
  RowBox[{"Re", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{
  3.760467276038063*^9, {3.760467349975519*^9, 3.760467377753642*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"u", "[", 
  RowBox[{"1", ",", "y"}], "]"}]], "Input",
 CellChangeTimes->{{3.760467426166967*^9, 3.7604674316187487`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"Re", "[", "y", "]"}]}]], "Output",
 CellChangeTimes->{3.7604674326762123`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"v", "[", 
  RowBox[{"1", ",", "y"}], "]"}]], "Input",
 CellChangeTimes->{{3.760467458640361*^9, 3.7604674653852177`*^9}}],

Cell[BoxData[
 RowBox[{"1", "-", 
  RowBox[{"Im", "[", "y", "]"}]}]], "Output",
 CellChangeTimes->{3.7604674667055197`*^9}]
}, Open  ]],

Cell["\<\
Since by the problem definition the x values are a set of constants (integers \
here),\
\>", "Text",
 CellChangeTimes->{{3.760467951770566*^9, 3.7604679773213377`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"argot", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"u", "[", 
       RowBox[{"c", ",", "y"}], "]"}], ",", 
      RowBox[{"v", "[", 
       RowBox[{"c", ",", "y"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"c", ",", "1", ",", "4"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7604675662542267`*^9, 3.760467581803953*^9}, {
  3.760467671665607*^9, 3.760467684895153*^9}, {3.760467729662806*^9, 
  3.760467738444641*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Re", "[", "y", "]"}]}], ",", 
     RowBox[{"1", "-", 
      RowBox[{"Im", "[", "y", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Re", "[", "y", "]"}]}], ",", 
     RowBox[{"2", "-", 
      RowBox[{"Im", "[", "y", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Re", "[", "y", "]"}]}], ",", 
     RowBox[{"3", "-", 
      RowBox[{"Im", "[", "y", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Re", "[", "y", "]"}]}], ",", 
     RowBox[{"4", "-", 
      RowBox[{"Im", "[", "y", "]"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.760467583607525*^9, 3.760467686489534*^9, 
  3.760467739641491*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"argot", ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"y", "\[Element]", "Reals"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7604677422814817`*^9, 3.7604677602036552`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "y"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "y"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "y"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "y"}], ",", "4"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.760467760942089*^9}]
}, Open  ]],

Cell["\<\
The above table gives the transformations for the z-values given in the \
constant x part of the problem. Plotted, they should look like\
\>", "Text",
 CellChangeTimes->{{3.760401476919084*^9, 3.760401512636812*^9}, {
  3.760468005145452*^9, 3.760468005287985*^9}, {3.760468198232546*^9, 
  3.760468208990467*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Blue", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "6.5"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Red", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2", ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "6.5"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Green", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"3", ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", "6.5"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Orange", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"4", ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"4", ",", "6.5"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
       "}"}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", " ", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"5", ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "7"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Ticks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", 
           ",", "7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", 
           ",", "7"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x (Re)\>\"", ",", "\"\<y (Im)\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Framed", "[", "  ", "\"\<  z-plane \>\"", "]"}], ",", "10", 
         ",", "Blue", ",", 
         RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}]}], "]"}], ",", 
    
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Blue", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"4", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "4"}], ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"Red", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"4", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "4"}], ",", "2"}], "}"}]}], "}"}], "]"}]}], "}"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"Green", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"4", ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "4"}], ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"Orange", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"4", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "}"}], "]"}]}], 
         "}"}]}], "}"}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", " ", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4.5", ",", 
           RowBox[{"-", "4.5"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "4.5"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Ticks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "4"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2", ",", "3", ",", 
           "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "2", ",", "3", ",", "4"}], "}"}]}], 
        "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<u (Re)\>\"", ",", "\"\<v (Im)\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Framed", "[", "  ", "\"\<  w-plane \>\"", "]"}], ",", "10", 
         ",", "Red", ",", 
         RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}]}], "]"}]}], 
   "  ", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.760401559014529*^9, 3.760401719583424*^9}, {
  3.7604470773098907`*^9, 3.7604471187088346`*^9}, {3.760447166217679*^9, 
  3.7604473282149963`*^9}, {3.760447393430716*^9, 3.760447451535899*^9}, {
  3.760447535724801*^9, 3.760447554108017*^9}, {3.760447586273913*^9, 
  3.7604477289515877`*^9}, {3.760447936022084*^9, 3.760447952473936*^9}, {
  3.760468257980857*^9, 3.760468284692072*^9}, {3.760468330158239*^9, 
  3.7604683460010967`*^9}, {3.760741757113516*^9, 3.760741762850363*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Dashing[{Small, Small}], 
      RGBColor[0, 0, 1], 
      LineBox[{{1, -1}, {1, 6.5}}]}, {
      Dashing[{Small, Small}], 
      RGBColor[1, 0, 0], 
      LineBox[{{2, -1}, {2, 6.5}}]}, {
      Dashing[{Small, Small}], 
      RGBColor[0, 1, 0], 
      LineBox[{{3, -1}, {3, 6.5}}]}, {
      Dashing[{Small, Small}], 
      RGBColor[1, 0.5, 0], 
      LineBox[{{4, -1}, {4, 6.5}}]}}, Axes -> True, AxesOrigin -> {0, 0}, 
    PlotRange -> {{5, -1}, {-1, 7}}, Ticks -> {{{0, 
        FormBox["0", TraditionalForm]}, {1, 
        FormBox["1", TraditionalForm]}, {2, 
        FormBox["2", TraditionalForm]}, {3, 
        FormBox["3", TraditionalForm]}, {4, 
        FormBox["4", TraditionalForm]}, {5, 
        FormBox["5", TraditionalForm]}, {6, 
        FormBox["6", TraditionalForm]}, {7, 
        FormBox["7", TraditionalForm]}}, {{0, 
        FormBox["0", TraditionalForm]}, {1, 
        FormBox["1", TraditionalForm]}, {2, 
        FormBox["2", TraditionalForm]}, {3, 
        FormBox["3", TraditionalForm]}, {4, 
        FormBox["4", TraditionalForm]}, {5, 
        FormBox["5", TraditionalForm]}, {6, 
        FormBox["6", TraditionalForm]}, {7, 
        FormBox["7", TraditionalForm]}}}, ImageSize -> 200, AxesLabel -> {
      FormBox["\"x (Re)\"", TraditionalForm], 
      FormBox["\"y (Im)\"", TraditionalForm]}, PlotLabel -> FormBox[
      StyleBox[
       FrameBox["\"  z-plane \"", StripOnInput -> False], 10, 
       RGBColor[0, 0, 1], Background -> GrayLevel[1], StripOnInput -> False], 
      TraditionalForm]],GraphicsBox[{{
      RGBColor[0, 0, 1], 
      LineBox[{{4, 1}, {-4, 1}}]}, {
      RGBColor[1, 0, 0], 
      LineBox[{{4, 2}, {-4, 2}}]}, {
      RGBColor[0, 1, 0], 
      LineBox[{{4, 3}, {-4, 3}}]}, {
      RGBColor[1, 0.5, 0], 
      LineBox[{{4, 4}, {-4, 4}}]}}, Axes -> True, AxesOrigin -> {0, 0}, 
    PlotRange -> {{4.5, -4.5}, {-1, 4.5}}, Ticks -> {{{-4, 
        FormBox[
         RowBox[{"-", "4"}], TraditionalForm]}, {-3, 
        FormBox[
         RowBox[{"-", "3"}], TraditionalForm]}, {-2, 
        FormBox[
         RowBox[{"-", "2"}], TraditionalForm]}, {-1, 
        FormBox[
         RowBox[{"-", "1"}], TraditionalForm]}, {0, 
        FormBox["0", TraditionalForm]}, {1, 
        FormBox["1", TraditionalForm]}, {2, 
        FormBox["2", TraditionalForm]}, {3, 
        FormBox["3", TraditionalForm]}, {4, 
        FormBox["4", TraditionalForm]}}, {{0, 
        FormBox["0", TraditionalForm]}, {1, 
        FormBox["1", TraditionalForm]}, {2, 
        FormBox["2", TraditionalForm]}, {3, 
        FormBox["3", TraditionalForm]}, {4, 
        FormBox["4", TraditionalForm]}}}, ImageSize -> 300, AxesLabel -> {
      FormBox["\"u (Re)\"", TraditionalForm], 
      FormBox["\"v (Im)\"", TraditionalForm]}, PlotLabel -> FormBox[
      StyleBox[
       FrameBox["\"  w-plane \"", StripOnInput -> False], 10, 
       RGBColor[1, 0, 0], Background -> GrayLevel[1], StripOnInput -> False], 
      TraditionalForm]]},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.760401535343169*^9, 3.7604015604149857`*^9}, 
   3.760401602985714*^9, {3.760401639259275*^9, 3.760401657827342*^9}, {
   3.760401691222307*^9, 3.760401720596946*^9}, 3.760447081087184*^9, {
   3.760447151443878*^9, 3.760447169646386*^9}, {3.760447227260495*^9, 
   3.7604473290527477`*^9}, 3.760447400489513*^9, {3.760447444145522*^9, 
   3.760447452344357*^9}, {3.7604475403037024`*^9, 3.760447554974021*^9}, 
   3.760447624730605*^9, 3.7604477300212393`*^9, {3.760447936977551*^9, 
   3.7604479531158113`*^9}, 3.760468285789311*^9, 3.760468346961046*^9, 
   3.7607417635760717`*^9}]
}, {2}]],

Cell["\<\
with unrestricted y values stretching out the w-plane lines horizontally.\
\>", "Text",
 CellChangeTimes->{{3.760447857895447*^9, 3.760447918666678*^9}, {
  3.760448209738648*^9, 3.7604483115148287`*^9}, {3.7604485706374903`*^9, 
  3.760448573475978*^9}, {3.760448615633333*^9, 3.760448620621175*^9}, {
  3.7604701334476233`*^9, 3.760470161318638*^9}}],

Cell["\<\
The y value cases, with y=k=const, are done similarly. In this case\
\>", "Text",
 CellChangeTimes->{{3.7604495540595407`*^9, 3.760449589192449*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"yargot", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"u", "[", 
       RowBox[{"x", ",", "k"}], "]"}], ",", 
      RowBox[{"v", "[", 
       RowBox[{"x", ",", "k"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "4"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.76046810535562*^9, 3.760468147809435*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "1"}], "-", 
      RowBox[{"Im", "[", "x", "]"}]}], ",", 
     RowBox[{"Re", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], "-", 
      RowBox[{"Im", "[", "x", "]"}]}], ",", 
     RowBox[{"Re", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3"}], "-", 
      RowBox[{"Im", "[", "x", "]"}]}], ",", 
     RowBox[{"Re", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "4"}], "-", 
      RowBox[{"Im", "[", "x", "]"}]}], ",", 
     RowBox[{"Re", "[", "x", "]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.760468151018281*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"yargot", ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"x", "\[Element]", "Reals"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.760468167882081*^9, 3.760468172280341*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "x"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "x"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", "x"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4"}], ",", "x"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7604681736562757`*^9}]
}, Open  ]],

Cell["\<\
The above table gives the transformations for the z-values given in the \
constant y part of the problem. Plotted, they should look like\
\>", "Text",
 CellChangeTimes->{{3.760468230600947*^9, 3.7604682372690773`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Blue", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "5"}], ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Red", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "5"}], ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "2"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Green", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "5"}], ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Orange", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "5"}], ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "4"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
       "}"}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", " ", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "5"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Ticks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "6"}], ",", 
           RowBox[{"-", "5"}], ",", 
           RowBox[{"-", "4"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2", ",", "3", ",", 
           "4", ",", "5", ",", "6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", 
           ",", "7"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x (Re)\>\"", ",", "\"\<y (Im)\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Framed", "[", "  ", "\"\<  z-plane \>\"", "]"}], ",", "10", 
         ",", "Blue", ",", 
         RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}]}], "]"}], ",", 
    
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Blue", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "5"}], "}"}]}], "}"}], "]"}]}], "}"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"Red", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "2"}], ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "2"}], ",", "5"}], "}"}]}], "}"}], "]"}]}], "}"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"Green", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "3"}], ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "3"}], ",", "5"}], "}"}]}], "}"}], "]"}]}], "}"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"Orange", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "4"}], ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "4"}], ",", "5"}], "}"}]}], "}"}], "]"}]}], 
         "}"}]}], "}"}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", " ", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", 
           RowBox[{"-", "4.5"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "5.5"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Ticks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "4"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2", ",", "3", ",", 
           "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "2", ",", "3", ",", "4"}], "}"}]}], 
        "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "230"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<u (Re)\>\"", ",", "\"\<v (Im)\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Framed", "[", "  ", "\"\<  w-plane \>\"", "]"}], ",", "10", 
         ",", "Red", ",", 
         RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}]}], "]"}]}], 
   "  ", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.760469276806509*^9, 3.760469304747383*^9}, {
  3.760469356682342*^9, 3.76046936156872*^9}, {3.760469452606044*^9, 
  3.7604694532681627`*^9}, {3.7604694868541813`*^9, 3.760469597549077*^9}, {
  3.76046978024559*^9, 3.760469797138754*^9}, {3.760469840876326*^9, 
  3.760470049275257*^9}, {3.7607417871454372`*^9, 3.7607417934488897`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Dashing[{Small, Small}], 
      RGBColor[0, 0, 1], 
      LineBox[{{-5, 1}, {5, 1}}]}, {
      Dashing[{Small, Small}], 
      RGBColor[1, 0, 0], 
      LineBox[{{-5, 2}, {5, 2}}]}, {
      Dashing[{Small, Small}], 
      RGBColor[0, 1, 0], 
      LineBox[{{-5, 3}, {5, 3}}]}, {
      Dashing[{Small, Small}], 
      RGBColor[1, 0.5, 0], 
      LineBox[{{-5, 4}, {5, 4}}]}}, Axes -> True, AxesOrigin -> {0, 0}, 
    PlotRange -> {{-5, 5}, {-1, 5}}, Ticks -> {{{-6, 
        FormBox[
         RowBox[{"-", "6"}], TraditionalForm]}, {-5, 
        FormBox[
         RowBox[{"-", "5"}], TraditionalForm]}, {-4, 
        FormBox[
         RowBox[{"-", "4"}], TraditionalForm]}, {-3, 
        FormBox[
         RowBox[{"-", "3"}], TraditionalForm]}, {-2, 
        FormBox[
         RowBox[{"-", "2"}], TraditionalForm]}, {-1, 
        FormBox[
         RowBox[{"-", "1"}], TraditionalForm]}, {0, 
        FormBox["0", TraditionalForm]}, {1, 
        FormBox["1", TraditionalForm]}, {2, 
        FormBox["2", TraditionalForm]}, {3, 
        FormBox["3", TraditionalForm]}, {4, 
        FormBox["4", TraditionalForm]}, {5, 
        FormBox["5", TraditionalForm]}, {6, 
        FormBox["6", TraditionalForm]}}, {{0, 
        FormBox["0", TraditionalForm]}, {1, 
        FormBox["1", TraditionalForm]}, {2, 
        FormBox["2", TraditionalForm]}, {3, 
        FormBox["3", TraditionalForm]}, {4, 
        FormBox["4", TraditionalForm]}, {5, 
        FormBox["5", TraditionalForm]}, {6, 
        FormBox["6", TraditionalForm]}, {7, 
        FormBox["7", TraditionalForm]}}}, ImageSize -> 300, AxesLabel -> {
      FormBox["\"x (Re)\"", TraditionalForm], 
      FormBox["\"y (Im)\"", TraditionalForm]}, PlotLabel -> FormBox[
      StyleBox[
       FrameBox["\"  z-plane \"", StripOnInput -> False], 10, 
       RGBColor[0, 0, 1], Background -> GrayLevel[1], StripOnInput -> False], 
      TraditionalForm]],GraphicsBox[{{
      RGBColor[0, 0, 1], 
      LineBox[{{-1, -1}, {-1, 5}}]}, {
      RGBColor[1, 0, 0], 
      LineBox[{{-2, -1}, {-2, 5}}]}, {
      RGBColor[0, 1, 0], 
      LineBox[{{-3, -1}, {-3, 5}}]}, {
      RGBColor[1, 0.5, 0], 
      LineBox[{{-4, -1}, {-4, 5}}]}}, Axes -> True, AxesOrigin -> {0, 0}, 
    PlotRange -> {{2, -4.5}, {-1, 5.5}}, Ticks -> {{{-4, 
        FormBox[
         RowBox[{"-", "4"}], TraditionalForm]}, {-3, 
        FormBox[
         RowBox[{"-", "3"}], TraditionalForm]}, {-2, 
        FormBox[
         RowBox[{"-", "2"}], TraditionalForm]}, {-1, 
        FormBox[
         RowBox[{"-", "1"}], TraditionalForm]}, {0, 
        FormBox["0", TraditionalForm]}, {1, 
        FormBox["1", TraditionalForm]}, {2, 
        FormBox["2", TraditionalForm]}, {3, 
        FormBox["3", TraditionalForm]}, {4, 
        FormBox["4", TraditionalForm]}}, {{0, 
        FormBox["0", TraditionalForm]}, {1, 
        FormBox["1", TraditionalForm]}, {2, 
        FormBox["2", TraditionalForm]}, {3, 
        FormBox["3", TraditionalForm]}, {4, 
        FormBox["4", TraditionalForm]}}}, ImageSize -> 230, AxesLabel -> {
      FormBox["\"u (Re)\"", TraditionalForm], 
      FormBox["\"v (Im)\"", TraditionalForm]}, PlotLabel -> FormBox[
      StyleBox[
       FrameBox["\"  w-plane \"", StripOnInput -> False], 10, 
       RGBColor[1, 0, 0], Background -> GrayLevel[1], StripOnInput -> False], 
      TraditionalForm]]},
  "RowDefault"]], "Output",
 CellChangeTimes->{
  3.760469222358058*^9, 3.7604693062320538`*^9, {3.760469425417383*^9, 
   3.760469454163082*^9}, {3.760469489902398*^9, 3.7604695066427517`*^9}, 
   3.760469598513859*^9, 3.760469798375386*^9, {3.760469878695932*^9, 
   3.7604699427671223`*^9}, {3.760469978538969*^9, 3.760470049944771*^9}, 
   3.760741794089044*^9}]
}, {2}]],

Cell["\<\
with unrestricted x values stretching out the w-plane lines vertically. \
\>", "Text",
 CellChangeTimes->{{3.760470091818069*^9, 3.760470121711987*^9}, {
   3.760470182253964*^9, 3.760470184574079*^9}, 3.760470308868887*^9}],

Cell["9.  Translation. Curves as in problem 6, w = z + 2 + I", "Text",
 CellChangeTimes->{{3.7603128853503304`*^9, 3.7603129113412848`*^9}, 
   3.760312941958905*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell["Defining the mapping.", "Text",
 CellChangeTimes->{{3.76047062042579*^9, 3.760470626704421*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"u", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{"Re", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"x", "+", 
      RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], "+", "2", "+", 
    "\[ImaginaryI]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.760470665200768*^9, 3.760470676254033*^9}}],

Cell[BoxData[
 RowBox[{"2", "-", 
  RowBox[{"Im", "[", "y", "]"}], "+", 
  RowBox[{"Re", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{3.76047068275703*^9, 3.760527400256918*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"v", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{"Im", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"x", "+", 
      RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], "+", "2", "+", 
    "\[ImaginaryI]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7604706937918262`*^9, 3.7604706996063557`*^9}}],

Cell[BoxData[
 RowBox[{"1", "+", 
  RowBox[{"Im", "[", "x", "]"}], "+", 
  RowBox[{"Re", "[", "y", "]"}]}]], "Output",
 CellChangeTimes->{3.760470700725377*^9, 3.760527403525185*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"argot", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"u", "[", 
       RowBox[{"c", ",", "y"}], "]"}], ",", 
      RowBox[{"v", "[", 
       RowBox[{"c", ",", "y"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"c", ",", "1", ",", "4"}], "}"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"3", "-", 
      RowBox[{"Im", "[", "y", "]"}]}], ",", 
     RowBox[{"1", "+", 
      RowBox[{"Re", "[", "y", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"4", "-", 
      RowBox[{"Im", "[", "y", "]"}]}], ",", 
     RowBox[{"1", "+", 
      RowBox[{"Re", "[", "y", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"5", "-", 
      RowBox[{"Im", "[", "y", "]"}]}], ",", 
     RowBox[{"1", "+", 
      RowBox[{"Re", "[", "y", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"6", "-", 
      RowBox[{"Im", "[", "y", "]"}]}], ",", 
     RowBox[{"1", "+", 
      RowBox[{"Re", "[", "y", "]"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7604707515101023`*^9, 3.760527406817507*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"argot", ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"y", "\[Element]", "Reals"}]}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", 
     RowBox[{"1", "+", "y"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", 
     RowBox[{"1", "+", "y"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", 
     RowBox[{"1", "+", "y"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", 
     RowBox[{"1", "+", "y"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.760470775197661*^9, 3.760527410323642*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Blue", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "6.5"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Red", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2", ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "6.5"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Green", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"3", ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", "6.5"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Orange", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"4", ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"4", ",", "6.5"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
       "}"}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", " ", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"5", ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "7"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Ticks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", 
           ",", "7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", 
           ",", "7"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x (Re)\>\"", ",", "\"\<y (Im)\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Framed", "[", "  ", "\"\<  z-plane \>\"", "]"}], ",", "10", 
         ",", "Blue", ",", 
         RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}]}], "]"}], ",", 
    
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Blue", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"3", ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", "6.5"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"Red", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"4", ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"4", ",", "6.5"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"Green", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"5", ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "6.5"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"Orange", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"6", ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"6", ",", "6.5"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
       "}"}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", " ", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7.55", ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "7"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Ticks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", 
           ",", "7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", 
           ",", "7"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "270"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<u (Re)\>\"", ",", "\"\<v (Im)\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Framed", "[", "  ", "\"\<  w-plane \>\"", "]"}], ",", "10", 
         ",", "Red", ",", 
         RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}]}], "]"}]}], 
   "  ", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.760470887221581*^9, 3.760471061379937*^9}, {
  3.760741805518918*^9, 3.7607418107596703`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Dashing[{Small, Small}], 
      RGBColor[0, 0, 1], 
      LineBox[{{1, -1}, {1, 6.5}}]}, {
      Dashing[{Small, Small}], 
      RGBColor[1, 0, 0], 
      LineBox[{{2, -1}, {2, 6.5}}]}, {
      Dashing[{Small, Small}], 
      RGBColor[0, 1, 0], 
      LineBox[{{3, -1}, {3, 6.5}}]}, {
      Dashing[{Small, Small}], 
      RGBColor[1, 0.5, 0], 
      LineBox[{{4, -1}, {4, 6.5}}]}}, Axes -> True, AxesOrigin -> {0, 0}, 
    PlotRange -> {{5, -1}, {-1, 7}}, Ticks -> {{{0, 
        FormBox["0", TraditionalForm]}, {1, 
        FormBox["1", TraditionalForm]}, {2, 
        FormBox["2", TraditionalForm]}, {3, 
        FormBox["3", TraditionalForm]}, {4, 
        FormBox["4", TraditionalForm]}, {5, 
        FormBox["5", TraditionalForm]}, {6, 
        FormBox["6", TraditionalForm]}, {7, 
        FormBox["7", TraditionalForm]}}, {{0, 
        FormBox["0", TraditionalForm]}, {1, 
        FormBox["1", TraditionalForm]}, {2, 
        FormBox["2", TraditionalForm]}, {3, 
        FormBox["3", TraditionalForm]}, {4, 
        FormBox["4", TraditionalForm]}, {5, 
        FormBox["5", TraditionalForm]}, {6, 
        FormBox["6", TraditionalForm]}, {7, 
        FormBox["7", TraditionalForm]}}}, ImageSize -> 200, AxesLabel -> {
      FormBox["\"x (Re)\"", TraditionalForm], 
      FormBox["\"y (Im)\"", TraditionalForm]}, PlotLabel -> FormBox[
      StyleBox[
       FrameBox["\"  z-plane \"", StripOnInput -> False], 10, 
       RGBColor[0, 0, 1], Background -> GrayLevel[1], StripOnInput -> False], 
      TraditionalForm]],GraphicsBox[{{
      RGBColor[0, 0, 1], 
      LineBox[{{3, -1}, {3, 6.5}}]}, {
      RGBColor[1, 0, 0], 
      LineBox[{{4, -1}, {4, 6.5}}]}, {
      RGBColor[0, 1, 0], 
      LineBox[{{5, -1}, {5, 6.5}}]}, {
      RGBColor[1, 0.5, 0], 
      LineBox[{{6, -1}, {6, 6.5}}]}}, Axes -> True, AxesOrigin -> {0, 0}, 
    PlotRange -> {{7.55, -1}, {-1, 7}}, Ticks -> {{{0, 
        FormBox["0", TraditionalForm]}, {1, 
        FormBox["1", TraditionalForm]}, {2, 
        FormBox["2", TraditionalForm]}, {3, 
        FormBox["3", TraditionalForm]}, {4, 
        FormBox["4", TraditionalForm]}, {5, 
        FormBox["5", TraditionalForm]}, {6, 
        FormBox["6", TraditionalForm]}, {7, 
        FormBox["7", TraditionalForm]}}, {{0, 
        FormBox["0", TraditionalForm]}, {1, 
        FormBox["1", TraditionalForm]}, {2, 
        FormBox["2", TraditionalForm]}, {3, 
        FormBox["3", TraditionalForm]}, {4, 
        FormBox["4", TraditionalForm]}, {5, 
        FormBox["5", TraditionalForm]}, {6, 
        FormBox["6", TraditionalForm]}, {7, 
        FormBox["7", TraditionalForm]}}}, ImageSize -> 270, AxesLabel -> {
      FormBox["\"u (Re)\"", TraditionalForm], 
      FormBox["\"v (Im)\"", TraditionalForm]}, PlotLabel -> FormBox[
      StyleBox[
       FrameBox["\"  w-plane \"", StripOnInput -> False], 10, 
       RGBColor[1, 0, 0], Background -> GrayLevel[1], StripOnInput -> False], 
      TraditionalForm]]},
  "RowDefault"]], "Output",
 CellChangeTimes->{
  3.760470815070263*^9, {3.760470888725358*^9, 3.760470914196529*^9}, {
   3.760470958687199*^9, 3.760470976538312*^9}, {3.7604710104439993`*^9, 
   3.760471062228511*^9}, 3.7605274174190397`*^9, 3.760741811525793*^9}]
}, {2}]],

Cell["\<\
Each point in the above graph is moved 2 units to the right and 1 unit up. \
Since y already cruises the length of the real axis, the vertical change goes \
unnoticed.\
\>", "Text",
 CellChangeTimes->{{3.760471098251795*^9, 3.7604711488643436`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"yargot", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"u", "[", 
       RowBox[{"x", ",", "k"}], "]"}], ",", 
      RowBox[{"v", "[", 
       RowBox[{"x", ",", "k"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "4"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7604712879174757`*^9, 3.7604713336987667`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", "+", 
      RowBox[{"Re", "[", "x", "]"}]}], ",", 
     RowBox[{"2", "+", 
      RowBox[{"Im", "[", "x", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", "+", 
      RowBox[{"Re", "[", "x", "]"}]}], ",", 
     RowBox[{"3", "+", 
      RowBox[{"Im", "[", "x", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", "+", 
      RowBox[{"Re", "[", "x", "]"}]}], ",", 
     RowBox[{"4", "+", 
      RowBox[{"Im", "[", "x", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", "+", 
      RowBox[{"Re", "[", "x", "]"}]}], ",", 
     RowBox[{"5", "+", 
      RowBox[{"Im", "[", "x", "]"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.760471320257656*^9, 3.7604713343853083`*^9}, 
   3.7605274286010036`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"yargot", ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"x", "\[Element]", "Reals"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.760471339487109*^9, 3.7604713693215733`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", "+", "x"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", "+", "x"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", "+", "x"}], ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", "+", "x"}], ",", "5"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7604713703612957`*^9, 3.7605274319256907`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Blue", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "5"}], ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Red", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "5"}], ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "2"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Green", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "5"}], ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Orange", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "5"}], ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "4"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
       "}"}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", " ", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "5"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Ticks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "6"}], ",", 
           RowBox[{"-", "5"}], ",", 
           RowBox[{"-", "4"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2", ",", "3", ",", 
           "4", ",", "5", ",", "6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", 
           ",", "7"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x (Re)\>\"", ",", "\"\<y (Im)\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Framed", "[", "  ", "\"\<  z-plane \>\"", "]"}], ",", "10", 
         ",", "Blue", ",", 
         RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}]}], "]"}], ",", 
    
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Blue", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "5"}], ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "2"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Red", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "5"}], ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Green", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "5"}], ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "4"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Orange", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "5"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
       "}"}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", " ", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "7"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Ticks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "6"}], ",", 
           RowBox[{"-", "5"}], ",", 
           RowBox[{"-", "4"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2", ",", "3", ",", 
           "4", ",", "5", ",", "6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", 
           ",", "7"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<u (Re)\>\"", ",", "\"\<v (Im)\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Framed", "[", "  ", "\"\<  w-plane \>\"", "]"}], ",", "10", 
         ",", "Red", ",", 
         RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}]}], "]"}]}], 
   "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7604714378521433`*^9, 3.76047157894795*^9}, {
  3.7605275232429867`*^9, 3.760527555246312*^9}, {3.760741820894288*^9, 
  3.7607418263990602`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Dashing[{Small, Small}], 
      RGBColor[0, 0, 1], 
      LineBox[{{-5, 1}, {5, 1}}]}, {
      Dashing[{Small, Small}], 
      RGBColor[1, 0, 0], 
      LineBox[{{-5, 2}, {5, 2}}]}, {
      Dashing[{Small, Small}], 
      RGBColor[0, 1, 0], 
      LineBox[{{-5, 3}, {5, 3}}]}, {
      Dashing[{Small, Small}], 
      RGBColor[1, 0.5, 0], 
      LineBox[{{-5, 4}, {5, 4}}]}}, Axes -> True, AxesOrigin -> {0, 0}, 
    PlotRange -> {{-5, 5}, {-1, 5}}, Ticks -> {{{-6, 
        FormBox[
         RowBox[{"-", "6"}], TraditionalForm]}, {-5, 
        FormBox[
         RowBox[{"-", "5"}], TraditionalForm]}, {-4, 
        FormBox[
         RowBox[{"-", "4"}], TraditionalForm]}, {-3, 
        FormBox[
         RowBox[{"-", "3"}], TraditionalForm]}, {-2, 
        FormBox[
         RowBox[{"-", "2"}], TraditionalForm]}, {-1, 
        FormBox[
         RowBox[{"-", "1"}], TraditionalForm]}, {0, 
        FormBox["0", TraditionalForm]}, {1, 
        FormBox["1", TraditionalForm]}, {2, 
        FormBox["2", TraditionalForm]}, {3, 
        FormBox["3", TraditionalForm]}, {4, 
        FormBox["4", TraditionalForm]}, {5, 
        FormBox["5", TraditionalForm]}, {6, 
        FormBox["6", TraditionalForm]}}, {{0, 
        FormBox["0", TraditionalForm]}, {1, 
        FormBox["1", TraditionalForm]}, {2, 
        FormBox["2", TraditionalForm]}, {3, 
        FormBox["3", TraditionalForm]}, {4, 
        FormBox["4", TraditionalForm]}, {5, 
        FormBox["5", TraditionalForm]}, {6, 
        FormBox["6", TraditionalForm]}, {7, 
        FormBox["7", TraditionalForm]}}}, ImageSize -> 300, AxesLabel -> {
      FormBox["\"x (Re)\"", TraditionalForm], 
      FormBox["\"y (Im)\"", TraditionalForm]}, PlotLabel -> FormBox[
      StyleBox[
       FrameBox["\"  z-plane \"", StripOnInput -> False], 10, 
       RGBColor[0, 0, 1], Background -> GrayLevel[1], StripOnInput -> False], 
      TraditionalForm]],GraphicsBox[{{
      RGBColor[0, 0, 1], 
      LineBox[{{-5, 2}, {5, 2}}]}, {
      RGBColor[1, 0, 0], 
      LineBox[{{-5, 3}, {5, 3}}]}, {
      RGBColor[0, 1, 0], 
      LineBox[{{-5, 4}, {5, 4}}]}, {
      RGBColor[1, 0.5, 0], 
      LineBox[{{-5, 5}, {5, 5}}]}}, Axes -> True, AxesOrigin -> {0, 0}, 
    PlotRange -> {{-5, 5}, {-1, 7}}, Ticks -> {{{-6, 
        FormBox[
         RowBox[{"-", "6"}], TraditionalForm]}, {-5, 
        FormBox[
         RowBox[{"-", "5"}], TraditionalForm]}, {-4, 
        FormBox[
         RowBox[{"-", "4"}], TraditionalForm]}, {-3, 
        FormBox[
         RowBox[{"-", "3"}], TraditionalForm]}, {-2, 
        FormBox[
         RowBox[{"-", "2"}], TraditionalForm]}, {-1, 
        FormBox[
         RowBox[{"-", "1"}], TraditionalForm]}, {0, 
        FormBox["0", TraditionalForm]}, {1, 
        FormBox["1", TraditionalForm]}, {2, 
        FormBox["2", TraditionalForm]}, {3, 
        FormBox["3", TraditionalForm]}, {4, 
        FormBox["4", TraditionalForm]}, {5, 
        FormBox["5", TraditionalForm]}, {6, 
        FormBox["6", TraditionalForm]}}, {{0, 
        FormBox["0", TraditionalForm]}, {1, 
        FormBox["1", TraditionalForm]}, {2, 
        FormBox["2", TraditionalForm]}, {3, 
        FormBox["3", TraditionalForm]}, {4, 
        FormBox["4", TraditionalForm]}, {5, 
        FormBox["5", TraditionalForm]}, {6, 
        FormBox["6", TraditionalForm]}, {7, 
        FormBox["7", TraditionalForm]}}}, ImageSize -> 300, AxesLabel -> {
      FormBox["\"u (Re)\"", TraditionalForm], 
      FormBox["\"v (Im)\"", TraditionalForm]}, PlotLabel -> FormBox[
      StyleBox[
       FrameBox["\"  w-plane \"", StripOnInput -> False], 10, 
       RGBColor[1, 0, 0], Background -> GrayLevel[1], StripOnInput -> False], 
      TraditionalForm]]},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.760471412197692*^9, 3.7604714994773617`*^9}, {
   3.760471531480748*^9, 3.760471580011101*^9}, 3.76052749272651*^9, 
   3.7605275564137297`*^9, 3.760741827108531*^9}]
}, {2}]],

Cell["\<\
Each point in the above graph is moved 2 units to the right and 1 unit up. \
Since x already travels the length of the real axis, the horizontal change \
goes unnoticed.\
\>", "Text",
 CellChangeTimes->{{3.7604716119405527`*^9, 3.7604716448649483`*^9}, {
  3.7604717088096237`*^9, 3.760471709718669*^9}}],

Cell["\<\
11 - 20 Mapping of regions
Sketch or graph the given region and its image under the given mapping.\
\>", "Text",
 CellChangeTimes->{{3.760312989699465*^9, 3.7603130202017393`*^9}},
 Background->RGBColor[
  0.9600061036087587, 0.9600061036087587, 0.9600061036087587]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"11.", " ", 
    RowBox[{"Abs", "[", "z", "]"}]}], "\[LessEqual]", 
   FractionBox["1", "2"]}], ",", " ", 
  RowBox[{
   FractionBox[
    RowBox[{"-", "\[Pi]"}], "8"], "<", 
   RowBox[{"Arg", "[", "z", "]"}], "<", 
   FractionBox["\[Pi]", "8"]}], ",", " ", 
  RowBox[{"w", "=", 
   SuperscriptBox["z", "2"]}]}]], "Text",
 CellChangeTimes->{{3.7603130239947033`*^9, 3.760313092807302*^9}, 
   3.7603132486536837`*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell["\<\
Tracing the influence of the transformation on the z-plane, I see that\
\>", "Text",
 CellChangeTimes->{{3.760450456608221*^9, 3.760450498676038*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["R\[ExponentialE]", 
   RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], "\[Equal]", "w", "\[Equal]", 
  RowBox[{"f", "[", "z", "]"}], "\[Equal]", 
  RowBox[{"f", "[", 
   RowBox[{"r", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}], "]"}], "\[Equal]", 
  RowBox[{
   SuperscriptBox["z", "2"], 
   SubscriptBox["\[LeftFloor]", 
    RowBox[{"z", "=", 
     RowBox[{"r", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}]}]]}], "\[Equal]", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"r", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}], ")"}], "2"], "\[Equal]", 
  
  RowBox[{
   SuperscriptBox["r", "2"], 
   SuperscriptBox[
    RowBox[{"(", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]], ")"}], "2"]}], "\[Equal]", 
  
  RowBox[{
   SuperscriptBox["r", "2"], 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", "2", " ", "\[Theta]"}]]}]}]], "Input",
 CellChangeTimes->{{3.7604505043266697`*^9, 3.760450674218811*^9}}],

Cell[TextData[{
 "In a nutshell, distances will be squared and angles doubled. The first part \
of the problem defines a circle, and the second part constrains the circle \
into a pie slice. The radius of the z-circle is ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    FractionBox["1", "2"],
    FontSize->21], TraditionalForm]]],
 ", which when squared for the w-plane becomes ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    FractionBox["1", "4"],
    FontSize->21], TraditionalForm]]],
 ". Meanwhile the arc of the z-slice is increased from ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", "-"}], TraditionalForm]]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox[
       FractionBox["\[Pi]", "8"],
       FontSize->21], "min"}], ",", 
     RowBox[{
      StyleBox[
       FractionBox["\[Pi]", "8"],
       FontSize->21], "max"}]}], ")"}], TraditionalForm]]],
 " up to w-slice (",
 Cell[BoxData[
  FormBox["-", TraditionalForm]]],
 Cell[BoxData[
  FormBox[
   StyleBox[
    FractionBox["\[Pi]", "4"],
    FontSize->21], TraditionalForm]]],
 "min, ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    FractionBox["\[Pi]", "4"],
    FontSize->21], TraditionalForm]]],
 "max). "
}], "Text",
 CellChangeTimes->{{3.76045070995359*^9, 3.7604507248715878`*^9}, {
  3.760451456954324*^9, 3.7604514925248737`*^9}, {3.7604515308267727`*^9, 
  3.760451589327533*^9}, {3.760451621277801*^9, 3.7604517659832077`*^9}, {
  3.760451903274086*^9, 3.760451942566927*^9}, {3.760453833629196*^9, 
  3.760453840688528*^9}}],

Cell["The sketch:", "Text",
 CellChangeTimes->{{3.760451968306769*^9, 3.760451977901062*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p1", "=", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"Cos", "[", "t", "]"}]}], "+", "0"}], ",", 
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"Sin", "[", "t", "]"}]}], "+", "0"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           FractionBox["1", "4"], " ", 
           RowBox[{"Cos", "[", "t", "]"}]}], "+", "0"}], ",", 
         RowBox[{
          RowBox[{
           FractionBox["1", "4"], " ", 
           RowBox[{"Sin", "[", "t", "]"}]}], "+", "0"}]}], "}"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Dashed", ",", 
          RowBox[{"Thickness", "[", "0.002", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Thickness", "[", "0.002", "]"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RGBColor", "[", 
           RowBox[{
            FractionBox["100", "255"], ",", 
            FractionBox["210", "255"], ",", 
            FractionBox["250", "255"]}], "]"}], ",", 
          RowBox[{"Disk", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            FractionBox["1", "4"], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", 
               FractionBox["\[Pi]", "4"]}], ",", 
              FractionBox["\[Pi]", "4"]}], "}"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0.3", ",", "0.3"}], "}"}]}], "}"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0.3", ",", 
               RowBox[{"-", "0.3"}]}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Circle", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           FractionBox["3", "8"], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["\[Pi]", "4"]}], ",", 
             FractionBox["\[Pi]", "4"]}], "}"}]}], "]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Arrowheads", "[", ".025", "]"}], ",", 
          RowBox[{"Arrow", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0.285", ",", "0.242"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0.27", ",", "0.26"}], "}"}]}], "}"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Arrowheads", "[", ".025", "]"}], ",", 
          RowBox[{"Arrow", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0.285", ",", 
               RowBox[{"-", "0.242"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0.27", ",", 
               RowBox[{"-", "0.26"}]}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Text", "[", 
          RowBox[{"\"\<\!\(\*FractionBox[\(\[Pi]\), \(2\)]\)\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"0.4", ",", "0.1"}], "}"}]}], "]"}], "}"}]}], "}"}]}], 
     ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Re\>\"", ",", "\"\<Im\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.7"}], ",", "0.7"}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"Framed", "[", "  ", "\"\<  w-plane \>\"", "]"}], ",", "10", 
        ",", "Red", ",", 
        RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}]}], "]"}], " ", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"Cos", "[", "t", "]"}]}], "+", "0"}], ",", 
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"Sin", "[", "t", "]"}]}], "+", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thickness", "[", "0.002", "]"}], "}"}]}], ",", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Dashed", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0.55", ",", "0.23"}], "}"}]}], "}"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0.55", ",", 
               RowBox[{"-", "0.23"}]}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RGBColor", "[", 
           RowBox[{
            FractionBox["100", "255"], ",", 
            FractionBox["210", "255"], ",", 
            FractionBox["250", "255"]}], "]"}], ",", 
          RowBox[{"Disk", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            FractionBox["1", "2"], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", 
               FractionBox["\[Pi]", "8"]}], ",", 
              FractionBox["\[Pi]", "8"]}], "}"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", 
          RowBox[{"Circle", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            FractionBox["1", "4"], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Circle", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", "0.57", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["\[Pi]", "8"]}], ",", 
             FractionBox["\[Pi]", "8"]}], "}"}]}], "]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Arrowheads", "[", ".025", "]"}], ",", 
          RowBox[{"Arrow", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0.532", ",", "0.2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0.525", ",", "0.22"}], "}"}]}], "}"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Arrowheads", "[", ".025", "]"}], ",", 
          RowBox[{"Arrow", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0.532", ",", 
               RowBox[{"-", "0.2"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0.525", ",", 
               RowBox[{"-", "0.22"}]}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Text", "[", 
          RowBox[{"\"\<\!\(\*FractionBox[\(\[Pi]\), \(4\)]\)\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"0.605", ",", "0.1"}], "}"}]}], "]"}], "}"}]}], "}"}]}], 
     ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Re\>\"", ",", "\"\<Im\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.7"}], ",", "0.7"}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"Framed", "[", "  ", "\"\<  z-plane \>\"", "]"}], ",", "10", 
        ",", "Blue", ",", 
        RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}]}], "]"}], 
   " "}]}]], "Input",
 CellChangeTimes->{{3.760452039971961*^9, 3.760452109351577*^9}, {
   3.760452158080812*^9, 3.760452218914227*^9}, {3.760452254786223*^9, 
   3.760452322029188*^9}, {3.7604523576852627`*^9, 3.7604523588606653`*^9}, {
   3.760452480383545*^9, 3.760452487254602*^9}, {3.760452529253199*^9, 
   3.760452546298221*^9}, {3.760452622518854*^9, 3.760452638910213*^9}, {
   3.7604526756367702`*^9, 3.760452773913053*^9}, {3.760452827400524*^9, 
   3.760452873899053*^9}, {3.760452929858472*^9, 3.760452971575*^9}, {
   3.760453012956381*^9, 3.760453031802876*^9}, {3.760453065123558*^9, 
   3.76045314443051*^9}, {3.760453180380122*^9, 3.760453184395121*^9}, {
   3.760453230301978*^9, 3.760453235051382*^9}, {3.760453289880109*^9, 
   3.760453378155521*^9}, {3.760453438971349*^9, 3.760453509258312*^9}, {
   3.76045355248029*^9, 3.760453553581406*^9}, {3.760453659724909*^9, 
   3.7604536748029137`*^9}, {3.760453719899024*^9, 3.7604537453286324`*^9}, {
   3.7604541521583967`*^9, 3.7604544940331097`*^9}, {3.760454529832569*^9, 
   3.760454530009194*^9}, {3.760454701924335*^9, 3.760454808168421*^9}, {
   3.760454859289598*^9, 3.76045497529066*^9}, {3.760455052489562*^9, 
   3.760455061505006*^9}, 3.760455097745653*^9, {3.760455193693893*^9, 
   3.760455340119285*^9}, {3.7604553705595493`*^9, 3.760455407043943*^9}, {
   3.7604554549748898`*^9, 3.760455503329768*^9}, {3.76045557093661*^9, 
   3.7604555710801277`*^9}, {3.760474325544633*^9, 3.760474338727417*^9}}],

Cell[BoxData[
 RowBox[{
  GraphicsBox[{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.002], Opacity[1.], 
     FaceForm[Opacity[0.3]], LineBox[CompressedData["
1:eJxdm3c81f/7/416ExmlUmkQGRWh0tRVKBkZEQ3JSEk2kTJCklL2yo5s2TNc
9t4cnOOc86o0KJSMFOr7+tx+//3843a/vY7XeZ3n87qu5+N+ux0iZnYXLNhY
WFic2VlY/vf7//28Qw6jDQfE00KqzPbtE1r+R+BXjnaVsFBtFE4tsP5Bchdx
1iYo9DqyQtgcnWSPNyGNn3Nv4UoFpbCOZJV1inwPQ+3wWJlXegLJFredKE/e
OiFnTUy/E8mS/01QOnNd8eMxmYOnSa4S3CXAnfQAHbzUOv8jebFSKUop1Avd
6n+/bPxL4NnLRxSO1nvjx53aSfdJnu653a351hffRl+lS5L8OV495mqxH+4Q
OKDds0KgducPIYtcf1S68m3RhmQix2nUMi0ArXbEUVeRrLH4zehm4jNcNtQ+
JbRMIPttiUrNkCBkS3/a/HKJwDmO9Tpbm4JRQVz20XqSDfJVZJ7WhWDzyVNp
X38T2L76WalRZRiKU39yaZDcadHwqaY0HHNeJ6anLBLok+DGta0oAsVyAgMU
fxG4alPpyebsKLzDI9bjuUCuz4jVwPqMaLT5bn6+fJ5Ajug/ty6nxuB9w6Q5
gTkCC2sEYwfiYlH/VceszQ/y/hjjePd5IqoXXV7l8J3AS7TS9CaVJJyuUtW2
niaw1Sw4qbM+CR0tlSM0JgkUOv1RobsmGV1bhSdyvhAYbOUfG1eagn841ww6
fCbwvhfh8+hgKrY0ey/JfCKwfvSm163CVDz2yYQ19AOBfP33FHe8eY1ViR9n
/tAJ/NS321njdTpa+Vxo9x4lMHOddTanaAY+1/3znoVG4MPxKbbapAysUrPv
/TJEoPQDlehtcZm4opNdfKmXwA3mM+xPQ7NR5emxheY6Ap97Cu0S8szDnxyR
TulIrvcrFFhiy8e/lvJ0z2qynj6ys308m4+RGRkO6yvI93MIHUjvzsfMs/ew
M49AJv+JvfOMAkxaCvJ8EUugnSlfScRSEbberv7HiCaQ6wU/VRaK0XhE2VUs
ksAWl8fyzT7FGHTVXTMymMBbN72OEGtK0HD3ujQeP3J/tbucWgVLsTrla5+G
NYG1D8aab8qXY6fRgBD3bQKF7+goxN0tx/MT9bfrLAhcca1Kay8vxzoe940C
1wnsnShVXA8VOH7mfIu6Lvn5krP2qGtUooLZM+e1BwkMeClxXNOsCgVXFbu/
+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
AK8=
      "]]}},
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"Re\"", TraditionalForm], 
     FormBox["\"Im\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Epilog->{{
      Dashing[{Small, Small}], 
      LineBox[{{0, 0}, {0.55, 0.23}}]}, {
      Dashing[{Small, Small}], 
      LineBox[{{0, 0}, {0.55, -0.23}}]}, {
      RGBColor[
       NCache[
        Rational[20, 51], 0.39215686274509803`], 
       NCache[
        Rational[14, 17], 0.8235294117647058], 
       NCache[
        Rational[50, 51], 0.9803921568627451]], 
      DiskBox[{0, 0}, 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[{Rational[-1, 8] Pi, Rational[1, 8] Pi}, {-0.39269908169872414`,
         0.39269908169872414`}]]}, {
      Dashing[{Small, Small}], 
      CircleBox[{0, 0}, 
       NCache[
        Rational[1, 4], 0.25], 
       NCache[{0, 2 Pi}, {0, 6.283185307179586}]]}, {
      CircleBox[{0, 0}, 0.57, 
       NCache[{Rational[-1, 8] Pi, Rational[1, 8] Pi}, {-0.39269908169872414`,
         0.39269908169872414`}]]}, {
      Arrowheads[0.025], 
      ArrowBox[{{0.532, 0.2}, {0.525, 0.22}}]}, {
      Arrowheads[0.025], 
      ArrowBox[{{0.532, -0.2}, {0.525, -0.22}}]}, {
      InsetBox[
       FormBox[
       "\"\\!\\(\\*FractionBox[\\(\[Pi]\\), \\(4\\)]\\)\"", 
        TraditionalForm], {0.605, 0.1}]}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->300,
   Method->{"ScalingFunctions" -> None},
   PlotLabel->FormBox[
     StyleBox[
      FrameBox["\"  z-plane \"", StripOnInput -> False], 10, 
      RGBColor[0, 0, 1], Background -> GrayLevel[1], StripOnInput -> False], 
     TraditionalForm],
   PlotRange->{{-0.7, 0.7}, {-0.7, 0.7}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.05], 
      Scaled[0.05]}, {0, 0}},
   Ticks->{Automatic, Automatic}], " ", 
  GraphicsBox[{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.002], Opacity[1.], 
     Dashing[{Small, Small}], FaceForm[Opacity[0.3]], LineBox[CompressedData["

1:eJxdm3c81f/7/416ExmlUmkQGRWh0tRVKBkZEQ3JSEk2kTJCklL2yo5s2TNc
9t4cnOOc86o0KJSMFOr7+tx+//3843a/vY7XeZ3n87qu5+N+ux0iZnYXLNhY
WFic2VlY/vf7//28Qw6jDQfE00KqzPbtE1r+R+BXjnaVsFBtFE4tsP5Bchdx
1iYo9DqyQtgcnWSPNyGNn3Nv4UoFpbCOZJV1inwPQ+3wWJlXegLJFredKE/e
OiFnTUy/E8mS/01QOnNd8eMxmYOnSa4S3CXAnfQAHbzUOv8jebFSKUop1Avd
6n+/bPxL4NnLRxSO1nvjx53aSfdJnu653a351hffRl+lS5L8OV495mqxH+4Q
OKDds0KgducPIYtcf1S68m3RhmQix2nUMi0ArXbEUVeRrLH4zehm4jNcNtQ+
JbRMIPttiUrNkCBkS3/a/HKJwDmO9Tpbm4JRQVz20XqSDfJVZJ7WhWDzyVNp
X38T2L76WalRZRiKU39yaZDcadHwqaY0HHNeJ6anLBLok+DGta0oAsVyAgMU
fxG4alPpyebsKLzDI9bjuUCuz4jVwPqMaLT5bn6+fJ5Ajug/ty6nxuB9w6Q5
gTkCC2sEYwfiYlH/VceszQ/y/hjjePd5IqoXXV7l8J3AS7TS9CaVJJyuUtW2
niaw1Sw4qbM+CR0tlSM0JgkUOv1RobsmGV1bhSdyvhAYbOUfG1eagn841ww6
fCbwvhfh8+hgKrY0ey/JfCKwfvSm163CVDz2yYQ19AOBfP33FHe8eY1ViR9n
/tAJ/NS321njdTpa+Vxo9x4lMHOddTanaAY+1/3znoVG4MPxKbbapAysUrPv
/TJEoPQDlehtcZm4opNdfKmXwA3mM+xPQ7NR5emxheY6Ap97Cu0S8szDnxyR
TulIrvcrFFhiy8e/lvJ0z2qynj6ys308m4+RGRkO6yvI93MIHUjvzsfMs/ew
M49AJv+JvfOMAkxaCvJ8EUugnSlfScRSEbberv7HiCaQ6wU/VRaK0XhE2VUs
ksAWl8fyzT7FGHTVXTMymMBbN72OEGtK0HD3ujQeP3J/tbucWgVLsTrla5+G
NYG1D8aab8qXY6fRgBD3bQKF7+goxN0tx/MT9bfrLAhcca1Kay8vxzoe940C
1wnsnShVXA8VOH7mfIu6Lvn5krP2qGtUooLZM+e1BwkMeClxXNOsCgVXFbu/
+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
AK8=
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], Thickness[0.002], Opacity[1.], 
     FaceForm[Opacity[0.3]], LineBox[CompressedData["
1:eJxdm3k0Vf/3/w31JjKUSqVCZKgoKpq0CyVDxqJBMqQk85gySyJlnjIPmWWe
h42Ly3XvPSEVidBAoRRSqO/5rN9/P/9Yj3Wuc899vfber+djrUvU3F7fko2F
hcWFnYXlf7//388L5DDecEAi26/BfO9eoeV/BH7hoKlGRQKKZJXafCeZMXLG
NixSB1kham6IZK/nEW2fioxwpba/rIVk1XVKfL6R1/BotU9OCsmWt5z7H9Zb
IGdTQq8zyVL/TfbTi27ih6OyB0+R3CC4U4A77TY6+qjT/yN5sU45TjnSHj1a
fz9t+0vgmUuHFY60OuIHYZ20uyTPELeYWvXOWB9/ZUiK5E/JGglXKlxxh8AB
HWKFQB36dyHLIndUvvx10ZbkkULnt1bZHmi9I2lgFcmai1+Nb6Tew2UjnZNC
ywSy35Ks04rwQbackI6nSwTOcazX3druiwoS+++vJ9mwRFU2pMUPO06czP7y
m0Da6kdVxnUBKDHwg0uTZLol5WNT1X0sfJaak7lIoH+KB9e28kAULwwNVvpF
4KpNVSc6CoLwNo844b1Ars8b6771uQ/R9pvFuZp5Ajni/9y8lBWMd43S5gTm
CCxrEkzsS3qE5zO6f9p+J++PCU6uj8NQo/zSKsdvBF4crMppVw3HmQY1HZsZ
AjvNw9PoreHoZKUSozlFoNCpDwrMpgh07xSZLPxMYLh1UGJSVRT+4Vzz0vET
gXd9RvzvH4xGaoffkuxHAlvf3vC5WRaNRz+askaOEcjXe0dpx/MYbEj9MPtn
iMCPPbtcNJ/FobW/Ps3vLYF562wKOMXi8bHen1GWQQJ9J6bZmtPisUHd4cXn
VwTK3FON35aUgCu6BRUXXxC4wWKWPSQyEVVDji50tBD42Ftop5B3Kv7giHXO
QXK9M1BgiS0N/1rJD3k3kvX0gZ3tw5k0jM3NdVxfS76fY2RfDjMN887cQXox
gcP8x/fMv0vHtKUw7yeJBNqb8VXGLGVi563Gf+/iCeR6wj+wH7LQ5I2Ku3gs
gVS3B/Id/lkYdsVTKzacwJs3fA6PrHmGRrvWZfMEkvurw3DuFMzGxswvPZo2
BDbfG++4IZ+LdOM+Ie5bBIrc1lVIcs3Fc5Ott1osCVxxb8im1eRiC4/nRoFr
BL6YrFJaD3k4cfocVUOP/Hzp+bs1NPNRwfyRy9qDBAY/lTymZV6IgqsqPN//
YOLE4+jmNadLcG/L9QL6DBPjJ1+Vf7coQdolA7HSL0xcbVkf3udfgj9mV/00
H2NiXnrSRGhzCZ6UHpW17mGij7XREcaxUlT1WsXJ+ZyJJ769z/aSK8Mcs0ci
wWZM7Hv4SsZqSwVeYuyM9zVm4p+JP16NihVoW+fs5WDExP0N1hQewwpUH9SN
PXKOiW2bZ/lSIytw+4YuccfDTLzidGIogLsSRbZbDrjxMFFbXKNAZ7kS0w+c
kf5UykC7C/8q6geqMWdYfom7kIHTpXZ69IVqZFx0KNmdzUBdG9t9rwVqkMjw
p+k/ZaCilHL023M1qHT404dz/gxUYladSGmpQfv+s7++6zLwpMrwf6tza9FE
XIJ/foKOhimD+6Uc6tG0cY3U0TE6phnKpziH1qP3m2SDO2/pKP13l2NNbj3e
qTGYGmHQ8Z9x517Z0XpkvKnWMy6jY6n3M6UuvQb8Gjt4jfsuHTuj7d9XyzXi
/k3+97RX0fHoZKTh2akmvETd7rZhuRt1uWS5/+NCrPwjFdr7sxuvWzz/WyeJ
2LD4XkBxvBv5Y9/5clkgPpFI6Etv6Ub6od8cMIAYFXJPmsWrG2WLmm2WzJpR
wnBEa3aahnVDE5MH1Fvw+bi6BX6g4d5onSJvoxa0cJwaD3xLw568uNA2yxa0
eqMiu9xJww2S5U9O+beQ9Za4/0kmDX8VVu9nqW9B3/FRJQ0jGsptjLIN3dOK
YtlsHodqu/AbT8DOdk4K8g6cOEgp7kLqxPIz/40U3LognKaR3YVcg/oex3ZS
8PwnkagzUV14YV6APfUYBW1/Zkr+tOnCwvgyTRk7Ck4mTwuJCnch2zmnJYte
Cj5IfsQ96t2JL5ObLMTj2vBq+9p7eS6dyEqx+Xo6sw1PpzyduG3diYM9J83M
i9vQYWCaOnyhE62vuXKHUttwjA+GPfd24hrZdRwZv9rwmVlTVtIbKpq0K3G8
MmzHopuUJs+9VEy3IAj1dR3IsU6RNVWEimdjZsRqt3egjEhgXN0GKl4ZSdi0
c3cH3qq8zXi33IEHz6p2vVcmr7NON72kd+ByxzaWdS4dOH1JnxJ0uwPldicm
HunvwGfuPziFstrxNX/37qhIKlLNJCLs4trRfeXd/X0pVNw5njVcH9KOxsYR
vO15VDQf2f1GxbEd0zd6Zb5tpuJBo2uFa06Qz+mh61Y1Q8WuWHNBh1dtSH+V
/05YvRMDku1VWtnaUKu7jqtgsRMlhEZvRc9T8Jdk5+JB9i58p+XEbjZBwavx
R35U83ThL/2slEkGBX2sEpZyd3ZhZaTDUE08BQdMZjYpanVh7a6Fcn0ZCgZN
mn5lSenC5pAqgSf6rTj310Zb8TgNX7qLvalUbUUtm+273p2m4T4/vodvFFpR
6Oadons6NBQ811vLK9SKvFOenRnmNGzZo9NzYrwFGUmX38U/JF9/bYtiqVML
Dmz8eWhnHw0zi2Su/nncjGPDGgVx5t345in3hI9vMy50vF2qse5Gs9pWF1bn
Zrx1YH9+n1M3zrykpy0aNaOtyrnN8/7d6Ka7mFIt2oyBK/3sExndqHVxndSC
FaKfgPGt0NFuLLiUKG3yvBG3X755rvUSHfkVZ3zdIhuRFnwgj9uMjiLbAkuC
3BpRpURaUtuKjs6+weXRJxqR89UT/yY3Ok4GxP53mdmAnrZuD7Si6Nigm9EX
N1WPDq9WKW/rpqOYc9QvPvE6lPmdNuh9iIGptywcx1fV4c2dknbOxxnosF/6
fvHHWiwbPl9yTYWBGqlb4+VyarEwpvOwsB55fSLXaVi6FqUtfcWO2pBz6PiL
ljGZGnzJcbf8XRoDK2r6Cl7ur8KC7iv9THYmyp2qSaHzV+GtWqHEyjVMLG8M
0Gj6XontFdv7o/iYePq41uyTkkrMrDqeqiDExM99dvc+7atES+eWqxvlmVjo
/t8DN5kKNPRt2KpgwsTrJ0KnLouXkXPnY/fvYiZmVLIsdq4uw4GBWp27FUzk
CHB/JP+5FDVOP1L4WcPEEVeK1WJeKV57UCPFbGFixDnXHp19pfhDNMdXqo+J
ZVNU9oNHSjAqwoTfbo6JSx2vhU22lmD7pa0qLotM1K0JvMf5qxj7cxapTstM
vFAUfCz4XjHKP5Vqu7iKwCHO7mCZ+89xz9z6250CZE6wV6fzRhfirzGl1ENy
BB6z+mT/5UIhxtm7+TWT51iO+6e1KFiIvzcMZ6scJjDet87BILEAx5jN1fJA
YH5WQ9jujHz0DP4yUK5FoGn4j5LU57noFNd749QNAt0fHZZa75CL/W3Fgrrk
uVqxVyvcWy4X22rK/xqS5+4F8RmH0xU5yGooZ3POicxtRV8lHtdmY7emR8mQ
F/n3Rd9Y1lOycH+c6sn7UQTWu+tm3QzMQtGheJE15DkvZD5oUaOWhc4Fm+8+
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
cUxX8m6pozPkjNh/CCT5JMvC4jonRwi6IZpOkPxfEP+RoQ92oFB+x3Qd6TVH
fyl3hX60hsrLljs1SfZgXZuh8OkGtH9/88mTZE/2hdbBT+Ywy0EtyiZ5fcQW
oznmVQiX2+XeSbJKVF3VnhcXoGPli/IYydSqfrX6DE14sLRu3f88bqP2Dvf9
GooQUxMz+j+Py5kO/qBgLoqhLc4V//O4W7fY4uUNVbEvvSD4fx4XzW8tNymt
jwXjJ8y+kozyzx9XSF1GMX65Y/0ka4a9KWkQMEPh4iDBapKDlve83ipgifpq
GgvhJO9edbrOef0tBBP/1+YkVybEX+5YZ4sH7hyr30uyc5r20MOHDnh2c0D6
DLkerdmW1rsfOqFxs1VILslPI5hG1CAX5Jtdcb1MclodVfxakBuitOH1VSQr
UML1Zh/cwcCJBxeyyfW33hHfzfbAE6W+9JzsJfdvWHGf4d173viAhSfVhORt
dz6quR72xbktX3XGyf1PcDWIG5Dxx6Bwzvx+0tuO5iTqBUoFoGT2QwMVkl0s
q5z2it3Hun0yunlkPf29gYu3Nz/ARwYeKiZk/b15YvKRXSAIBSwcjhaR9akq
LX82luch8vfsDpwj6/dY7SefPLYQVJpP2mRD1rfX9k9iAVOP8XsFRfYf6W2H
unxlJz49wY27N3Xxk3x1uxHz9GgYPjrUWrOV7KfqmcKZuS/h2Cu2MUGQ7L+L
XZoGN0ci0fxH2PVKsj9VMx0/3DGOwuf0RyXBpMd1j88SgQNRCEemDQzJfj7z
9adSRF80jletyXhD9n/W/IjMbWosFhbKXvcj5wP1bLn6edU4XJVJOG8eJmBg
4QOh2BKHSnSjdznkPLn/3Ctzui4ePW38sJicP+70EJF1z59iUfJlmkUf6UUc
2mdpuxNxPZd6eWMPAbuudH3xzEnE7Z0bf/O9IGBLo5wUMy0Jb6dNJCXTCTC9
IQHbo1Kwd/8+vavtBJRGLy+k8KViDaVp710KARotZ49uCU3FDMEEq7AWArgc
R13vKachNzsHe2YjAQe2rH8rfSwdL17c/sKukoDLv9fdbNiTiWOpw8cSMsnr
a1cl/rHLxPDv0q2c6QSI53LoHyjLxN8bhy7ZpxBwV9hwJepwFgquudksmkCA
YOHXQ/ynn+G39yo+Qk8IOHVPLXHcOAdD2NDVwo2AsO+ft7ek5uCAC5+DqjO5
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
      "]]}},
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"Re\"", TraditionalForm], 
     FormBox["\"Im\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Epilog->{{
      RGBColor[
       NCache[
        Rational[20, 51], 0.39215686274509803`], 
       NCache[
        Rational[14, 17], 0.8235294117647058], 
       NCache[
        Rational[50, 51], 0.9803921568627451]], 
      DiskBox[{0, 0}, 
       NCache[
        Rational[1, 4], 0.25], 
       NCache[{Rational[-1, 4] Pi, Rational[1, 4] Pi}, {-0.7853981633974483, 
        0.7853981633974483}]]}, {
      Dashing[{Small, Small}], 
      LineBox[{{0, 0}, {0.3, 0.3}}]}, {
      Dashing[{Small, Small}], 
      LineBox[{{0, 0}, {0.3, -0.3}}]}, {
      CircleBox[{0, 0}, 
       NCache[
        Rational[3, 8], 0.375], 
       NCache[{Rational[-1, 4] Pi, Rational[1, 4] Pi}, {-0.7853981633974483, 
        0.7853981633974483}]]}, {
      Arrowheads[0.025], 
      ArrowBox[{{0.285, 0.242}, {0.27, 0.26}}]}, {
      Arrowheads[0.025], 
      ArrowBox[{{0.285, -0.242}, {0.27, -0.26}}]}, {
      InsetBox[
       FormBox[
       "\"\\!\\(\\*FractionBox[\\(\[Pi]\\), \\(2\\)]\\)\"", 
        TraditionalForm], {0.4, 0.1}]}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->300,
   Method->{"ScalingFunctions" -> None},
   PlotLabel->FormBox[
     StyleBox[
      FrameBox["\"  w-plane \"", StripOnInput -> False], 10, 
      RGBColor[1, 0, 0], Background -> GrayLevel[1], StripOnInput -> False], 
     TraditionalForm],
   PlotRange->{{-0.7, 0.7}, {-0.7, 0.7}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.05], 
      Scaled[0.05]}, {0, 0}},
   Ticks->{Automatic, Automatic}]}]], "Output",
 CellChangeTimes->{{3.760452181229994*^9, 3.760452219938752*^9}, {
   3.760452283511754*^9, 3.760452323180737*^9}, 3.760452360519956*^9, 
   3.760452489084258*^9, 3.760452547405328*^9, {3.760452629032865*^9, 
   3.760452639803402*^9}, {3.760452683516965*^9, 3.760452715476647*^9}, 
   3.7604527749509907`*^9, {3.7604528506748657`*^9, 3.760452874928322*^9}, {
   3.760452950721216*^9, 3.76045297253172*^9}, {3.7604530172091084`*^9, 
   3.760453032622451*^9}, {3.760453077834332*^9, 3.760453145288797*^9}, 
   3.760453185532572*^9, 3.760453236618285*^9, {3.760453300191379*^9, 
   3.760453378965549*^9}, 3.760453467140135*^9, 3.7604535107036324`*^9, 
   3.760453554643217*^9, 3.760453677051414*^9, {3.760453728501349*^9, 
   3.760453746862954*^9}, 3.7604541609866257`*^9, {3.760454251764958*^9, 
   3.7604542754868507`*^9}, {3.760454311460878*^9, 3.760454381455577*^9}, {
   3.7604544166735277`*^9, 3.760454450209713*^9}, 3.7604544959680843`*^9, 
   3.760454530887825*^9, 3.760454719344915*^9, {3.760454751934474*^9, 
   3.760454808933441*^9}, 3.7604548643524437`*^9, {3.760454920358921*^9, 
   3.76045497636546*^9}, {3.7604550794893227`*^9, 3.7604550996881313`*^9}, {
   3.7604552110846777`*^9, 3.7604553100411243`*^9}, 3.76045534153341*^9, {
   3.760455438334345*^9, 3.760455504658136*^9}, 3.760455572043743*^9, 
   3.760474339549234*^9}]
}, {2}]],

Cell[TextData[{
 "I see now that just using Graphics>Circle would have been a somewhat \
quicker effort than the ",
 StyleBox["ParametricPlot", "Input"],
 "."
}], "Text",
 CellChangeTimes->{{3.760456048847776*^9, 3.760456088797612*^9}, {
  3.760462868144548*^9, 3.760462872770328*^9}, {3.7604638440893583`*^9, 
  3.760463844319894*^9}, {3.769276148821836*^9, 3.7692761502346992`*^9}}],

Cell["13.  2 \[LessEqual] Im[z] \[LessEqual] 5, w = I z", "Text",
 CellChangeTimes->{{3.76031309870457*^9, 3.7603131468779*^9}, 
   3.760313261212832*^9, {3.760455785873698*^9, 3.760455800294615*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[TextData[{
 "Problem 7 told me that the mapping w=\[ImaginaryI] z is a positive rotation \
of ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    FractionBox["\[Pi]", "2"],
    FontSize->21], TraditionalForm]]],
 ". The mapping is the same in this problem,"
}], "Text",
 CellChangeTimes->{{3.7604561427955933`*^9, 3.760456186874271*^9}, {
  3.7604718584529552`*^9, 3.760471865033904*^9}, {3.760471964736278*^9, 
  3.760471976374658*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"u", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{"Re", "[", 
   RowBox[{"\[ImaginaryI]", 
    RowBox[{"(", 
     RowBox[{"x", "+", 
      RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{3.760471958938198*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"Im", "[", "x", "]"}]}], "-", 
  RowBox[{"Re", "[", "y", "]"}]}]], "Output",
 CellChangeTimes->{3.760472018585764*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"v", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{"Im", "[", 
   RowBox[{"\[ImaginaryI]", " ", 
    RowBox[{"(", 
     RowBox[{"x", "+", 
      RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7604720228235197`*^9, 3.760472052868421*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"Im", "[", "y", "]"}]}], "+", 
  RowBox[{"Re", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{3.760472054016136*^9}]
}, Open  ]],

Cell["\<\
The mapping will depend on the changes done to the boundary lines, so I will \
do them one at a time\
\>", "Text",
 CellChangeTimes->{{3.7604721411952553`*^9, 3.760472175272499*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"u", "[", 
    RowBox[{"x", ",", "2"}], "]"}], ",", 
   RowBox[{"v", "[", 
    RowBox[{"x", ",", "2"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.760472180578787*^9, 3.760472249518182*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "2"}], "-", 
    RowBox[{"Im", "[", "x", "]"}]}], ",", 
   RowBox[{"Re", "[", "x", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.760472251046377*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"%", ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"x", "\[Element]", "Reals"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.760472285235292*^9, 3.760472311604478*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "2"}], ",", "x"}], "}"}]], "Output",
 CellChangeTimes->{3.760472312302926*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"u", "[", 
    RowBox[{"x", ",", "5"}], "]"}], ",", 
   RowBox[{"v", "[", 
    RowBox[{"x", ",", "5"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.760472359964262*^9, 3.7604723638185167`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "5"}], "-", 
    RowBox[{"Im", "[", "x", "]"}]}], ",", 
   RowBox[{"Re", "[", "x", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.760472365173362*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"%", ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"x", "\[Element]", "Reals"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.760472367384635*^9, 3.760472385337892*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "5"}], ",", "x"}], "}"}]], "Output",
 CellChangeTimes->{3.7604723858135843`*^9}]
}, Open  ]],

Cell[TextData[{
 "The mapped boundary lines will be at ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"u", "=", 
     RowBox[{"-", "2"}]}], ",", 
    RowBox[{"u", "=", "-"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "5, and the w-points inside will be the new territory."
}], "Text",
 CellChangeTimes->{{3.760472395066717*^9, 3.760472484586697*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RGBColor", "[", 
           RowBox[{
            FractionBox["220", "255"], ",", 
            FractionBox["245", "255"], ",", 
            FractionBox["255", "255"]}], "]"}], ",", 
          RowBox[{"Rectangle", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "4"}], ",", "2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"4", ",", "5"}], "}"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Red", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"4", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "4"}], ",", "2"}], "}"}]}], "}"}], "]"}]}], "}"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Red", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"4", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "4"}], ",", "5"}], "}"}]}], "}"}], "]"}]}], 
         "}"}]}], "}"}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", " ", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4.5", ",", 
           RowBox[{"-", "4.5"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "6.5"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Ticks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "4"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2", ",", "3", ",", 
           "4", ",", "5", ",", "6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], 
          "}"}]}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "260"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x Re\>\"", ",", "\"\<y Im\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Framed", "[", "  ", "\"\<  z-plane \>\"", "]"}], ",", "10", 
         ",", "Blue", ",", 
         RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}]}], "]"}], " ", 
    ",", "\[IndentingNewLine]", 
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RGBColor", "[", 
           RowBox[{
            FractionBox["220", "255"], ",", 
            FractionBox["245", "255"], ",", 
            FractionBox["255", "255"]}], "]"}], ",", 
          RowBox[{"Rectangle", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "5"}], ",", 
              RowBox[{"-", "1"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "2"}], ",", "6.5"}], "}"}]}], "]"}]}], "}"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Red", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "2"}], ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "2"}], ",", "6.5"}], "}"}]}], "}"}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Red", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "5"}], ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "5"}], ",", "6.5"}], "}"}]}], "}"}], "]"}]}], 
         "}"}]}], "}"}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", " ", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", 
           RowBox[{"-", "6"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "6.5"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Ticks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "4"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2", ",", "3", ",", 
           "4", ",", "5", ",", "6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], 
          "}"}]}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "230"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<u Re\>\"", ",", "\"\<v Im\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Framed", "[", "  ", "\"\<  w-plane \>\"", "]"}], ",", "10", 
         ",", "Red", ",", 
         RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}]}], "]"}]}], 
   " ", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.760456518987069*^9, 3.760456647604753*^9}, {
  3.760456716964471*^9, 3.760456733123616*^9}, {3.760456776426113*^9, 
  3.760456802784067*^9}, {3.760456861088175*^9, 3.760456945029088*^9}, {
  3.760456993410619*^9, 3.760456998449829*^9}, {3.760463044091834*^9, 
  3.760463086989787*^9}, {3.760463126387905*^9, 3.760463173025496*^9}, {
  3.760463317435302*^9, 3.760463410579774*^9}, {3.76046345438555*^9, 
  3.7604634928383636`*^9}, {3.760463725912998*^9, 3.7604637314559317`*^9}, {
  3.760472804385332*^9, 3.760472810837884*^9}, {3.760472853643729*^9, 
  3.7604729048426867`*^9}, {3.7604729457861443`*^9, 3.760473083741131*^9}, {
  3.760741876659967*^9, 3.760741882451747*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      RGBColor[
       NCache[
        Rational[44, 51], 0.8627450980392157], 
       NCache[
        Rational[49, 51], 0.9607843137254902], 1], 
      RectangleBox[{-4, 2}, {4, 5}]}, {
      Dashing[{Small, Small}], 
      RGBColor[1, 0, 0], 
      LineBox[{{4, 2}, {-4, 2}}]}, {
      Dashing[{Small, Small}], 
      RGBColor[1, 0, 0], 
      LineBox[{{4, 5}, {-4, 5}}]}}, Axes -> True, AxesOrigin -> {0, 0}, 
    PlotRange -> {{4.5, -4.5}, {-1, 6.5}}, Ticks -> {{{-4, 
        FormBox[
         RowBox[{"-", "4"}], TraditionalForm]}, {-3, 
        FormBox[
         RowBox[{"-", "3"}], TraditionalForm]}, {-2, 
        FormBox[
         RowBox[{"-", "2"}], TraditionalForm]}, {-1, 
        FormBox[
         RowBox[{"-", "1"}], TraditionalForm]}, {0, 
        FormBox["0", TraditionalForm]}, {1, 
        FormBox["1", TraditionalForm]}, {2, 
        FormBox["2", TraditionalForm]}, {3, 
        FormBox["3", TraditionalForm]}, {4, 
        FormBox["4", TraditionalForm]}, {5, 
        FormBox["5", TraditionalForm]}, {6, 
        FormBox["6", TraditionalForm]}}, {{0, 
        FormBox["0", TraditionalForm]}, {1, 
        FormBox["1", TraditionalForm]}, {2, 
        FormBox["2", TraditionalForm]}, {3, 
        FormBox["3", TraditionalForm]}, {4, 
        FormBox["4", TraditionalForm]}, {5, 
        FormBox["5", TraditionalForm]}, {6, 
        FormBox["6", TraditionalForm]}}}, ImageSize -> 260, AxesLabel -> {
      FormBox["\"x Re\"", TraditionalForm], 
      FormBox["\"y Im\"", TraditionalForm]}, PlotLabel -> FormBox[
      StyleBox[
       FrameBox["\"  z-plane \"", StripOnInput -> False], 10, 
       RGBColor[0, 0, 1], Background -> GrayLevel[1], StripOnInput -> False], 
      TraditionalForm]],GraphicsBox[{{
      RGBColor[
       NCache[
        Rational[44, 51], 0.8627450980392157], 
       NCache[
        Rational[49, 51], 0.9607843137254902], 1], 
      RectangleBox[{-5, -1}, {-2, 6.5}]}, {
      Dashing[{Small, Small}], 
      RGBColor[1, 0, 0], 
      LineBox[{{-2, -1}, {-2, 6.5}}]}, {
      Dashing[{Small, Small}], 
      RGBColor[1, 0, 0], 
      LineBox[{{-5, -1}, {-5, 6.5}}]}}, Axes -> True, AxesOrigin -> {0, 0}, 
    PlotRange -> {{2, -6}, {-1, 6.5}}, Ticks -> {{{-4, 
        FormBox[
         RowBox[{"-", "4"}], TraditionalForm]}, {-3, 
        FormBox[
         RowBox[{"-", "3"}], TraditionalForm]}, {-2, 
        FormBox[
         RowBox[{"-", "2"}], TraditionalForm]}, {-1, 
        FormBox[
         RowBox[{"-", "1"}], TraditionalForm]}, {0, 
        FormBox["0", TraditionalForm]}, {1, 
        FormBox["1", TraditionalForm]}, {2, 
        FormBox["2", TraditionalForm]}, {3, 
        FormBox["3", TraditionalForm]}, {4, 
        FormBox["4", TraditionalForm]}, {5, 
        FormBox["5", TraditionalForm]}, {6, 
        FormBox["6", TraditionalForm]}}, {{0, 
        FormBox["0", TraditionalForm]}, {1, 
        FormBox["1", TraditionalForm]}, {2, 
        FormBox["2", TraditionalForm]}, {3, 
        FormBox["3", TraditionalForm]}, {4, 
        FormBox["4", TraditionalForm]}, {5, 
        FormBox["5", TraditionalForm]}, {6, 
        FormBox["6", TraditionalForm]}}}, ImageSize -> 230, AxesLabel -> {
      FormBox["\"u Re\"", TraditionalForm], 
      FormBox["\"v Im\"", TraditionalForm]}, PlotLabel -> FormBox[
      StyleBox[
       FrameBox["\"  w-plane \"", StripOnInput -> False], 10, 
       RGBColor[1, 0, 0], Background -> GrayLevel[1], StripOnInput -> False], 
      TraditionalForm]]},
  "RowDefault"]], "Output",
 CellChangeTimes->{
  3.760456372643758*^9, {3.7604565202694798`*^9, 3.76045656172139*^9}, {
   3.7604566036671124`*^9, 3.760456648486017*^9}, 3.760456803792379*^9, {
   3.7604568670703297`*^9, 3.7604569098262463`*^9}, 3.760456946032095*^9, {
   3.7604569944721413`*^9, 3.7604569991895247`*^9}, {3.7604630690915213`*^9, 
   3.7604630883269367`*^9}, {3.760463120337297*^9, 3.760463173989312*^9}, {
   3.760463334990221*^9, 3.760463411411976*^9}, {3.7604634694061832`*^9, 
   3.760463493871992*^9}, 3.760463732286359*^9, 3.7604728117064667`*^9, 
   3.7604728702056007`*^9, 3.760472905461771*^9, {3.760472947482918*^9, 
   3.760472954449732*^9}, {3.760472985285578*^9, 3.760473023329028*^9}, {
   3.760473057961841*^9, 3.7604730844686813`*^9}, 3.76074188299832*^9}]
}, {2}]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"15.", "  ", 
    RowBox[{"Abs", "[", 
     RowBox[{"z", "-", 
      FractionBox["1", "2"]}], "]"}]}], "\[LessEqual]", 
   FractionBox["1", "2"]}], ",", " ", 
  RowBox[{"w", "=", 
   FractionBox["1", "z"]}]}]], "Text",
 CellChangeTimes->{{3.7603131508713284`*^9, 3.760313191196186*^9}, 
   3.760313274356534*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell["\<\
The s.m. covers this problem, first noting that the circle equation can be \
manipulated\
\>", "Text",
 CellChangeTimes->{{3.760475242426114*^9, 3.760475278575749*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"x", "-", 
      FractionBox["1", "2"]}], ")"}], "2"], "+", 
   SuperscriptBox["y", "2"]}], "\[Equal]", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["1", "2"], ")"}], "2"], "\[DoubleLongRightArrow]", " ", 
    SuperscriptBox["x", "2"]}], "-", "x", "+", 
   FractionBox["1", "4"], "+", 
   SuperscriptBox["y", "2"]}], "\[Equal]", 
  RowBox[{
   RowBox[{
    FractionBox["1", "4"], "\[DoubleLongRightArrow]", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["x", "2"], "+", 
      SuperscriptBox["y", "2"]}], ")"}]}], "-", "x"}], "\[Equal]", 
  "0"}]], "Input",
 CellChangeTimes->{{3.760475310589061*^9, 3.760475452234378*^9}}],

Cell["\<\
while also pulling in an expression incorporating the conjugate (found on p. \
613 in numbered line (3))\
\>", "Text",
 CellChangeTimes->{{3.760475514809421*^9, 3.7604755163844757`*^9}, {
  3.760475579167851*^9, 3.760475593509878*^9}, {3.760475757794178*^9, 
  3.760475778776269*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["x", "2"], "+", 
   SuperscriptBox["y", "2"]}], "\[Equal]", 
  SuperscriptBox[
   RowBox[{"Abs", "[", "z", "]"}], "2"], "\[Equal]", 
  RowBox[{"z", " ", 
   RowBox[{"z", "\[Conjugate]"}]}]}]], "Input",
 CellChangeTimes->{{3.760475520166203*^9, 3.760475565175095*^9}}],

Cell["and noting that", "Text",
 CellChangeTimes->{{3.760475818639138*^9, 3.760475825286805*^9}}],

Cell[BoxData[
 RowBox[{"x", "\[Equal]", 
  FractionBox[
   RowBox[{"z", "+", 
    RowBox[{"z", "\[Conjugate]"}]}], "2"]}]], "Input",
 CellChangeTimes->{{3.760475830476306*^9, 3.7604758838049192`*^9}}],

Cell["\<\
follows from the definition of the conjugate, the circle equation is recast as\
\>", "Text",
 CellChangeTimes->{{3.760475895809309*^9, 3.7604759110358047`*^9}, {
  3.760476061448827*^9, 3.76047607329521*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"z", " ", 
    RowBox[{"z", "\[Conjugate]"}]}], "-", 
   FractionBox[
    RowBox[{"z", "+", 
     RowBox[{"z", "\[Conjugate]"}]}], "2"]}], "\[Equal]", "0"}]], "Input",
 CellChangeTimes->{{3.760572372808653*^9, 3.760572405369465*^9}}],

Cell["which is interesting, but which will not be pursued further.", "Text",
 CellChangeTimes->{{3.760572421720525*^9, 3.760572452471427*^9}}],

Cell["\<\
Instead I will make use of the transformation mapping equations:\
\>", "Text",
 CellChangeTimes->{{3.760537305648325*^9, 3.760537318015828*^9}, {
  3.760572467919161*^9, 3.7605724813991423`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"u", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{"Re", "[", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"x", "+", 
      RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], 
    RowBox[{"-", "1"}]], "]"}]}]], "Input",
 CellChangeTimes->{{3.76047386607738*^9, 3.760473874131822*^9}}],

Cell[BoxData[
 RowBox[{"Re", "[", 
  FractionBox["1", 
   RowBox[{"x", "+", 
    RowBox[{"\[ImaginaryI]", " ", "y"}]}]], "]"}]], "Output",
 CellChangeTimes->{3.760473878113751*^9, 3.760537355267866*^9, 
  3.760541404624317*^9, 3.7605699235629263`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"v", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{"Im", "[", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"x", "+", 
      RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], 
    RowBox[{"-", "1"}]], "]"}]}]], "Input",
 CellChangeTimes->{{3.760473892131181*^9, 3.76047389787536*^9}}],

Cell[BoxData[
 RowBox[{"Im", "[", 
  FractionBox["1", 
   RowBox[{"x", "+", 
    RowBox[{"\[ImaginaryI]", " ", "y"}]}]], "]"}]], "Output",
 CellChangeTimes->{3.760473899241296*^9, 3.760537358802003*^9, 
  3.760541408095907*^9, 3.760569926745343*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"com", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"u", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", 
    RowBox[{"v", "[", 
     RowBox[{"x", ",", "y"}], "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.760569404794283*^9, 3.76056945122825*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Re", "[", 
    FractionBox["1", 
     RowBox[{"x", "+", 
      RowBox[{"\[ImaginaryI]", " ", "y"}]}]], "]"}], ",", 
   RowBox[{"Im", "[", 
    FractionBox["1", 
     RowBox[{"x", "+", 
      RowBox[{"\[ImaginaryI]", " ", "y"}]}]], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7605694538029613`*^9, 3.760569929883339*^9}]
}, Open  ]],

Cell["\<\
to calculate some resulting transformation mapping of some points in the \
circle, like the center (yellow).\
\>", "Text",
 CellChangeTimes->{{3.7605373266391373`*^9, 3.760537349165839*^9}, {
  3.760569769812117*^9, 3.760569775218268*^9}, {3.760572494870306*^9, 
  3.760572556772645*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"u", "[", 
  RowBox[{
   FractionBox["1", "2"], ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.760537366744597*^9, 3.760537379372492*^9}, {
  3.760569887096264*^9, 3.760569963028537*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{{3.7605699529817123`*^9, 3.760569968494471*^9}},
 Background->RGBColor[1, 1, 0.85]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"v", "[", 
  RowBox[{
   FractionBox["1", "2"], ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.760537386312963*^9, 3.760537401435213*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.760537402589531*^9, 3.7605699378144693`*^9},
 Background->RGBColor[1, 1, 0.85]]
}, Open  ]],

Cell["\<\
The following cell shows the mapped circle will be stretched way out there on \
the u axis.\
\>", "Text",
 CellChangeTimes->{{3.760572606060042*^9, 3.760572625626523*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"u", "[", 
  RowBox[{"0.001", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.7605699926691103`*^9, 3.760569994027824*^9}, {
  3.76057006817148*^9, 3.760570068297653*^9}, {3.7605701137285643`*^9, 
  3.760570113831723*^9}}],

Cell[BoxData["1000.`"], "Output",
 CellChangeTimes->{3.760569995198748*^9, 3.760570069764106*^9, 
  3.7605701158020973`*^9}]
}, Open  ]],

Cell["\<\
I will work through the equivalence line. However, this is not really for \
application, just for interest.\
\>", "Text",
 CellChangeTimes->{{3.760463940851736*^9, 3.760463971760846*^9}, {
  3.7605683237437267`*^9, 3.760568340702277*^9}, {3.760568673987973*^9, 
  3.760568683235929*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["R\[ExponentialE]", 
   RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], "\[Equal]", "w", "\[Equal]", 
  RowBox[{"f", "[", "z", "]"}], "\[Equal]", 
  RowBox[{"f", "[", 
   RowBox[{"r", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}], "]"}], "\[Equal]", 
  RowBox[{
   SuperscriptBox["z", 
    RowBox[{"-", "1"}]], 
   SubscriptBox["\[LeftFloor]", 
    RowBox[{"z", "=", 
     RowBox[{"r", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}]}]]}], "\[Equal]", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"r", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}], ")"}], 
   RowBox[{"-", "1"}]], "\[Equal]", 
  RowBox[{
   SuperscriptBox["r", 
    RowBox[{"-", "1"}]], 
   SuperscriptBox[
    RowBox[{"(", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]], ")"}], 
    RowBox[{"-", "1"}]]}], "\[Equal]", 
  RowBox[{
   SuperscriptBox["r", 
    RowBox[{"-", "1"}]], 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Theta]"}]]}]}]], "Input",
 CellChangeTimes->{{3.7604640430788107`*^9, 3.760464081067169*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell["\<\
The below cell has a plot which doesn\[CloseCurlyQuote]t work, but I\
\[CloseCurlyQuote]m leaving it in anyway (the correct approach is in the cell \
after next). The problem is that the trig formatted circle formula causes \
problems when singularites are created by inverting it. It does show a \
illusory kind of promise, in that it presents the mapped circle outline, \
although accompanied with an extraneous curve and two illegal expression \
warnings.\
\>", "Text",
 CellChangeTimes->{{3.760568350390038*^9, 3.760568430603839*^9}, {
  3.760568506857066*^9, 3.760568539312648*^9}, {3.760568699619405*^9, 
  3.760568781457066*^9}, {3.760614366770138*^9, 3.760614399352751*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"Cos", "[", "t", "]"}]}], "+", 
          FractionBox["1", "2"]}], ")"}], ",", 
        RowBox[{"(", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"Sin", "[", "t", "]"}]}], ")"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", 
        RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Thickness", "[", "0.004", "]"}], "}"}]}], ",", 
      RowBox[{"Epilog", "\[Rule]", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x Re\>\"", ",", "\"\<y Im\>\""}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1.2", ",", 
           RowBox[{"-", "0.1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.7", ",", 
           RowBox[{"-", "0.7"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Framed", "[", "  ", "\"\<  z-plane \>\"", "]"}], ",", "10", 
         ",", "Blue", ",", 
         RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}]}], "]"}], ",", 
    
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            FractionBox["1", "2"], 
            RowBox[{"Cos", "[", "t", "]"}]}], "+", 
           FractionBox["1", "2"]}], ")"}], 
         RowBox[{"-", "1"}]], ",", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"Sin", "[", "t", "]"}]}], ")"}], 
         RowBox[{"-", "1"}]]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Green", ",", "Dashed", ",", 
         RowBox[{"Thickness", "[", "0.004", "]"}]}], "}"}]}], ",", 
      RowBox[{"Epilog", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RGBColor", "[", 
             RowBox[{
              FractionBox["220", "255"], ",", 
              FractionBox["245", "255"], ",", 
              FractionBox["255", "255"]}], "]"}], ",", 
            RowBox[{"Rectangle", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1.03", ",", 
                RowBox[{"-", "1"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"3", ",", "6.5"}], "}"}]}], "]"}]}], "}"}], ","}], 
         "*)"}], 
        RowBox[{"{", 
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{"2", ",", "0"}], "}"}], "]"}], "}"}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x Re\>\"", ",", "\"\<y Im\>\""}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"5", ",", 
           RowBox[{"-", "0.1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", 
           RowBox[{"-", "0.1"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Framed", "[", "  ", "\"\<  w-plane \>\"", "]"}], ",", "10", 
         ",", "Red", ",", 
         RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}]}], 
     RowBox[{"(*", 
      RowBox[{",", 
       RowBox[{"Exclusions", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          FractionBox["\[Pi]", "2"], ",", 
          RowBox[{"-", 
           FractionBox["\[Pi]", "2"]}], ",", 
          RowBox[{"-", "\[Pi]"}], ",", 
          RowBox[{"2", "\[Pi]"}], ",", "0"}], "}"}]}]}], "*)"}], "]"}]}], " ",
    "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.760464689850361*^9, 3.760464698819954*^9}, {
   3.760464728875188*^9, 3.76046473156043*^9}, {3.7604649898210783`*^9, 
   3.760464990619103*^9}, {3.7604650248895807`*^9, 3.760465423939762*^9}, {
   3.7604735462735977`*^9, 3.760473565542588*^9}, {3.760484300996162*^9, 
   3.760484328802289*^9}, {3.760536804824109*^9, 3.760536838171749*^9}, 
   3.76053746455473*^9, {3.760537506638761*^9, 3.760537506958552*^9}, {
   3.76053754209501*^9, 3.7605375767146797`*^9}, {3.760537610460166*^9, 
   3.760537735410131*^9}, {3.76053781738457*^9, 3.760537857203726*^9}, {
   3.76053788984019*^9, 3.760537918456274*^9}, {3.7605379661021223`*^9, 
   3.760538021569211*^9}, {3.760538157893561*^9, 3.760538205896812*^9}, {
   3.760539054520123*^9, 3.760539117987282*^9}, {3.760539151442998*^9, 
   3.760539186383937*^9}, {3.7605392800132647`*^9, 3.760539283091384*^9}, {
   3.760539348618396*^9, 3.7605393813506804`*^9}, {3.7605429029943733`*^9, 
   3.7605429117206182`*^9}, {3.760542948873053*^9, 3.760542998011889*^9}, {
   3.760551990821476*^9, 3.7605520799115477`*^9}, {3.760552113112175*^9, 
   3.760552131061804*^9}, {3.760552201491777*^9, 3.760552339914939*^9}, {
   3.760552381298788*^9, 3.7605524364381113`*^9}, {3.760552470804103*^9, 
   3.7605524715880423`*^9}, {3.7605525072843523`*^9, 3.760552535148221*^9}, {
   3.760552580094472*^9, 3.760552630628256*^9}, {3.760552767118997*^9, 
   3.7605528192665577`*^9}, {3.7605528610739202`*^9, 3.760552908022706*^9}, {
   3.760553012802814*^9, 3.760553014496586*^9}, {3.760553329634541*^9, 
   3.760553428443611*^9}, {3.76055359473882*^9, 3.760553748851041*^9}, {
   3.760553785524384*^9, 3.7605538152635517`*^9}, {3.760553960551456*^9, 
   3.760553993422345*^9}, {3.760554036092613*^9, 3.7605540895695677`*^9}, {
   3.760554197837707*^9, 3.7605542264743557`*^9}, {3.760554307686501*^9, 
   3.760554312885838*^9}, {3.760554469622167*^9, 3.760554482717113*^9}, {
   3.7605684443408337`*^9, 3.76056847701171*^9}, {3.760741908272871*^9, 
   3.760741914777459*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(\\*FractionBox[\\\"1\\\
\", \\\"0.`\\\"]\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.760568453721841*^9, 3.760568478512656*^9}, 
   3.760741915529685*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(\\*FractionBox[\\\"1\\\
\", \\\"0.`\\\"]\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.760568453721841*^9, 3.760568478512656*^9}, 
   3.76074191557257*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        FaceForm[
         Opacity[0.3]], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        Thickness[0.004]], 
       LineBox[CompressedData["
1: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
        "]]}}}, {
    DisplayFunction -> Identity, Axes -> {True, True}, AxesLabel -> {
       FormBox["\"x Re\"", TraditionalForm], 
       FormBox["\"y Im\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, 
     Method -> {"ScalingFunctions" -> None}, PlotLabel -> FormBox[
       StyleBox[
        FrameBox["\"  z-plane \"", StripOnInput -> False], 10, 
        RGBColor[0, 0, 1], Background -> GrayLevel[1], StripOnInput -> False],
        TraditionalForm], PlotRange -> {{1.2, -0.1}, {0.7, -0.7}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        FaceForm[
         Opacity[0.3]], 
        RGBColor[0, 1, 0], 
        Dashing[{Small, Small}], 
        Thickness[0.004]], 
       LineBox[CompressedData["
1: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
41C5Ot/m65E7VjY2BjG6sj3wHwxkonw=
        "]]}}}, {
    DisplayFunction -> Identity, Axes -> {True, True}, AxesLabel -> {
       FormBox["\"x Re\"", TraditionalForm], 
       FormBox["\"y Im\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Epilog -> {{
        PointBox[{2, 0}]}}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, 
     Method -> {"ScalingFunctions" -> None}, PlotLabel -> FormBox[
       StyleBox[
        FrameBox["\"  w-plane \"", StripOnInput -> False], 10, 
        RGBColor[1, 0, 0], Background -> GrayLevel[1], StripOnInput -> False],
        TraditionalForm], PlotRange -> {{5, -0.1}, {5, -0.1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{
  3.760542956349339*^9, 3.7605430000712976`*^9, {3.760552016767786*^9, 
   3.760552038937709*^9}, 3.7605520815696*^9, {3.760552117728333*^9, 
   3.760552132929734*^9}, {3.760552203304435*^9, 3.760552271727808*^9}, {
   3.7605523042659197`*^9, 3.7605523409974613`*^9}, {3.760552393888492*^9, 
   3.760552405574913*^9}, 3.7605524378470383`*^9, 3.760552475267415*^9, {
   3.760552511029798*^9, 3.760552536625124*^9}, {3.760552589588859*^9, 
   3.760552631992732*^9}, 3.760552768405342*^9, {3.760552800631146*^9, 
   3.760552822015427*^9}, {3.7605528645222073`*^9, 3.760552909506509*^9}, 
   3.760553015711422*^9, {3.760553336673758*^9, 3.7605534294214373`*^9}, 
   3.760553634100787*^9, {3.760553666811413*^9, 3.7605537498826017`*^9}, {
   3.760553796902389*^9, 3.7605538167441483`*^9}, {3.760553969892703*^9, 
   3.760553994214181*^9}, {3.760554044955345*^9, 3.760554090878509*^9}, {
   3.760554207456699*^9, 3.7605542273992968`*^9}, 3.76055431397646*^9, {
   3.760554473441827*^9, 3.760554484065583*^9}, {3.760568453778097*^9, 
   3.760568478575169*^9}, 3.760741915619693*^9}]
}, {4}]],

Cell["\<\
The below cell shows the format that works. This time the circle maps to a \
single line. By checking the center point of the mapped circle, calculated \
above in yellow cells, it can be seen on which side of the line the body of \
the circle falls.\
\>", "Text",
 CellChangeTimes->{{3.7605685469359617`*^9, 3.760568645661077*^9}, {
  3.760568816615306*^9, 3.760568818559884*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"Cos", "[", "t", "]"}]}], "+", 
          FractionBox["1", "2"]}], ")"}], ",", 
        RowBox[{"(", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"Sin", "[", "t", "]"}]}], ")"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", 
        RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Thickness", "[", "0.004", "]"}], "}"}]}], ",", 
      RowBox[{"Epilog", "\[Rule]", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x Re\>\"", ",", "\"\<y Im\>\""}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1.5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.7"}], ",", "0.7"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Framed", "[", "  ", "\"\<  z-plane \>\"", "]"}], ",", "10", 
         ",", "Blue", ",", 
         RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}]}], "]"}], ",", 
    
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Re", "[", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", "2"}], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "t"}]]}], "+", 
            RowBox[{"1", "/", "2"}]}], ")"}], 
          RowBox[{"-", "1"}]], "]"}], ",", 
        RowBox[{"Im", "[", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"1", "/", "2"}], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "t"}]]}], ")"}], 
          RowBox[{"-", "1"}]], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", 
        RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Green", ",", "Dashed", ",", 
         RowBox[{"Thickness", "[", "0.004", "]"}]}], "}"}]}], ",", 
      RowBox[{"Epilog", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RGBColor", "[", 
             RowBox[{
              FractionBox["220", "255"], ",", 
              FractionBox["245", "255"], ",", 
              FractionBox["255", "255"]}], "]"}], ",", 
            RowBox[{"Rectangle", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1.03", ",", 
                RowBox[{"-", "2"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"5", ",", "2"}], "}"}]}], "]"}]}], "}"}], ","}], 
         "*)"}], 
        RowBox[{"{", 
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{"2", ",", "0"}], "}"}], "]"}], "}"}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<u Re\>\"", ",", "\"\<v Im\>\""}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"5", ",", 
           RowBox[{"-", "0.1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", 
           RowBox[{"-", "3"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Framed", "[", "  ", "\"\<  w-plane \>\"", "]"}], ",", "10", 
         ",", "Red", ",", 
         RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}]}], "]"}]}], 
   " ", "}"}], "]"}]], "Input",
 CellChangeTimes->{
  3.76056780518043*^9, {3.7605678572320957`*^9, 3.760567890733143*^9}, {
   3.760567925964764*^9, 3.760567948083631*^9}, {3.76056801648356*^9, 
   3.760568043800844*^9}, {3.760568094599633*^9, 3.760568101671109*^9}, {
   3.760568165038809*^9, 3.760568165300802*^9}, {3.760568882896976*^9, 
   3.760568905486083*^9}, {3.7605701936963367`*^9, 3.760570194150649*^9}, {
   3.760572142532464*^9, 3.760572154402371*^9}, {3.760741930480932*^9, 
   3.760741935848178*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        FaceForm[
         Opacity[0.3]], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        Thickness[0.004]], 
       LineBox[CompressedData["
1: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
        "]]}}}, {
    DisplayFunction -> Identity, Axes -> {True, True}, AxesLabel -> {
       FormBox["\"x Re\"", TraditionalForm], 
       FormBox["\"y Im\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, 
     Method -> {"ScalingFunctions" -> None}, PlotLabel -> FormBox[
       StyleBox[
        FrameBox["\"  z-plane \"", StripOnInput -> False], 10, 
        RGBColor[0, 0, 1], Background -> GrayLevel[1], StripOnInput -> False],
        TraditionalForm], PlotRange -> {{0, 1.5}, {-0.7, 0.7}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        FaceForm[
         Opacity[0.3]], 
        RGBColor[0, 1, 0], 
        Dashing[{Small, Small}], 
        Thickness[0.004]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGBwB2IQDQEf7BlQwAf7k/tnFpX27t8P40+qk1aSrjsP57/s
nXKA0/UBnJ8T+n/L7pvP4Xzrl5PCPN68g/Pf8TYrHeX4DOcvTD5/3lPwG5zv
c3oX1+ofP+D8J/e8Vk9P+g3n6/5ccKvO9C+cH3n86emf6//B+QbTXRxaJv+H
84MDmXobriL4rHVHC9V/IvifOg8civ+L4NdELlTcdvf//v9g8N7+zvm9no7O
CPnH03KmKAv92/8PKn/p4EbX4oQ/cPm+xikNZ6N+wfmbWrSF5bZ/h5sn7WvG
XHj/C1x+nibPD1Gjz/sZofzoNoXk5ryPcP7UN+5V3Pbv4fxnzHMFTOpe7/8N
Ne/7/aWM4o+ew92zs+ar8km9J/vZoOpfb/VyWC/6AK4/4w6befGV6/vlofyG
mxF1F5+c3+8Li5+urd0MjAf2a96A8Pn47O9OTEjfPwNqvqjDnUurevbZf4Ly
lT4f/l4idsGeFaqff9tV3SXlN+xZoPxtHDnq+RIP7Jmh/B25Vxe6Pn1sD3OP
+F/ZN01vn9vDwuNv/Updk1uv4fK/Y1Xykqe+h8v3PFpbfXjaR3tYeHpdNFKJ
2f0FLl9ReEnutd83uP7p5ixb1U5+h/ONLr5Y1ff5O1x9mivPxemyP+D8iZs+
inYXIPjKTHPWPBb8Cee/sP4bddnxF5y/7InAn1DPP3D3OCZkzXRh/geX51Ja
5L9a7T+c7yzi3pp/8z/cPd5/yzMkfiPkNV9ddLj0B8Ffs0YvpfE+gn9//j3r
mYsR/BtGx5du3omwL8D9nolF0l84P2NrZvj57N9wfp/FFp8kZoR/rF84Vp+N
/wbnp6yPWbhH8TOcb76j3PbIdET4tzqWWp6Y/ALO3xR6w0ex7wGcfzlBZqfc
nItw/qWcebwPlh2E89ljRIzVlh20AQD34r+v
        "]]}}}, {
    DisplayFunction -> Identity, Axes -> {True, True}, AxesLabel -> {
       FormBox["\"u Re\"", TraditionalForm], 
       FormBox["\"v Im\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Epilog -> {{
        PointBox[{2, 0}]}}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, 
     Method -> {"ScalingFunctions" -> None}, PlotLabel -> FormBox[
       StyleBox[
        FrameBox["\"  w-plane \"", StripOnInput -> False], 10, 
        RGBColor[1, 0, 0], Background -> GrayLevel[1], StripOnInput -> False],
        TraditionalForm], PlotRange -> {{5, -0.1}, {3, -3}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{
  3.7605677357388372`*^9, 3.7605678089284487`*^9, 3.760567859669149*^9, 
   3.760567891754484*^9, {3.760567997292303*^9, 3.760568044764098*^9}, 
   3.76056810319944*^9, 3.760568166212028*^9, {3.760568885206676*^9, 
   3.760568906292982*^9}, 3.760570195109747*^9, 3.760572156721126*^9, 
   3.7607419364328547`*^9}]
}, {2}]],

Cell["\<\
A rectangle in the above plot was to show the body of the mapped circle in \
the w-plane, but it was very inaccurate. The set of nested concentric circles \
below gives a better idea of the area covered by the mapped body.\
\>", "Text",
 CellChangeTimes->{{3.760572208576385*^9, 3.760572281621298*^9}, {
  3.760572764023695*^9, 3.760572764798501*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pp1", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Re", "[", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{".1", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "t"}]]}], "+", 
           RowBox[{"1", "/", "2"}]}], ")"}], 
         RowBox[{"-", "1"}]], "]"}], ",", 
       RowBox[{"Im", "[", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{".1", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "t"}]]}], ")"}], 
         RowBox[{"-", "1"}]], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "10"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "12"}], ",", "12"}], "}"}]}], "}"}]}], ",", " ", 
     RowBox[{"AspectRatio", "\[Rule]", "0.6"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Brown", ",", " ", 
        RowBox[{"Thickness", "[", "0.003", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.760570954215885*^9, 3.760571048123231*^9}, {
  3.7605710789231033`*^9, 3.760571105761683*^9}, {3.76057124103769*^9, 
  3.760571255613306*^9}, {3.760571366779312*^9, 3.760571405208536*^9}, {
  3.76057143562495*^9, 3.76057149696548*^9}, {3.760571676041991*^9, 
  3.760571676512414*^9}, {3.760571853378612*^9, 3.760571853628401*^9}, {
  3.760571961449061*^9, 3.76057196750359*^9}, {3.7605720556688747`*^9, 
  3.760572080851248*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pp2", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Re", "[", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{".2", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "t"}]]}], "+", 
           RowBox[{"1", "/", "2"}]}], ")"}], 
         RowBox[{"-", "1"}]], "]"}], ",", 
       RowBox[{"Im", "[", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{".2", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "t"}]]}], ")"}], 
         RowBox[{"-", "1"}]], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Orange", ",", " ", 
        RowBox[{"Thickness", "[", "0.003", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.760571269158141*^9, 3.760571276620142*^9}, {
  3.760571499781931*^9, 3.760571499957686*^9}, {3.760571938018202*^9, 
  3.760571951920128*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pp3", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Re", "[", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{".3", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "t"}]]}], "+", 
           RowBox[{"1", "/", "2"}]}], ")"}], 
         RowBox[{"-", "1"}]], "]"}], ",", 
       RowBox[{"Im", "[", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{".3", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "t"}]]}], ")"}], 
         RowBox[{"-", "1"}]], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", " ", 
        RowBox[{"Thickness", "[", "0.003", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.760571285757653*^9, 3.760571293307824*^9}, {
   3.7605715031899633`*^9, 3.760571503565219*^9}, {3.760571917010764*^9, 
   3.760571928090036*^9}, 3.760572006933914*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pp4", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Re", "[", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{".4", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "t"}]]}], "+", 
           RowBox[{"1", "/", "2"}]}], ")"}], 
         RowBox[{"-", "1"}]], "]"}], ",", 
       RowBox[{"Im", "[", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{".4", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "t"}]]}], ")"}], 
         RowBox[{"-", "1"}]], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Green", ",", " ", 
        RowBox[{"Thickness", "[", "0.003", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.760571302045432*^9, 3.7605713103714523`*^9}, {
   3.760571507005892*^9, 3.76057150722151*^9}, {3.760571901331298*^9, 
   3.76057191234515*^9}, 3.7605720044639053`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pp5", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Re", "[", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{".5", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "t"}]]}], "+", 
           RowBox[{"1", "/", "2"}]}], ")"}], 
         RowBox[{"-", "1"}]], "]"}], ",", 
       RowBox[{"Im", "[", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{".5", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "t"}]]}], ")"}], 
         RowBox[{"-", "1"}]], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", " ", 
        RowBox[{"Thickness", "[", "0.003", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7605713178606863`*^9, 3.760571326139021*^9}, {
  3.760571510261737*^9, 3.7605715104612007`*^9}, {3.76057174275043*^9, 
  3.7605718377393427`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"pp1", ",", "pp2", ",", "pp3", ",", "pp4", ",", "pp5"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.76057132937453*^9, 3.760571341274478*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.6, 0.4, 0.2], Thickness[0.003], Opacity[1.], FaceForm[Opacity[
     0.3]], LineBox[CompressedData["
1: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
4P/fB+G9+BV/I/Rr1/8A9crxMg==
      "]]}}, {{}, {}, 
    {RGBColor[1, 0.5, 0], Thickness[0.003], Opacity[1.], FaceForm[Opacity[
     0.3]], LineBox[CompressedData["
1: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

      "]]}}, {{}, {}, 
    {RGBColor[1, 0, 0], Thickness[0.003], Opacity[1.], FaceForm[Opacity[0.3]],
      LineBox[CompressedData["
1:eJw12nk8VN//OHA7M0KMFqQkKSGUJUmvEyqVRFoQFWkhEi0qFCEiWuyisi+R
ImVJ96Jky5olSyFke0eZmTv23/k8fo+vP/B8MDOvc17LvefxuGvtXQ+f5eHi
4vqHv/3v5///YsL//VbifGH7/3yJ36Lo1qFbRG5d4sj/HClWEuBxKJjY5JIt
woO95kN9cmRJODFTH5TGix0XZvve6VAc4Zmm85Yf+4Rq75t4txdEWFeRthD2
hYBoQZ+SZCL5/tLNwtjTpX8fnuRPJ3IWd8SJYpdNLrmtcyiLUCWRpwS2Z4QQ
Pz02h9D0lW1aju3UzpPt5PaaOKXS+lQGW8qPcdRkeR7R+cOxSw67KdM4Wqkk
nzg30vNQEftIsdYSntMFxNHGrUUq2GGmrgdb+d4Tz/c8ctqOrd8u99TJtJiI
743/twv79fuqTuWpEsLIOXpiH/a79bIHh6JLibxUB+MT2JX+q2OSLpPEhtmd
KQ7YX7/JOzENyoi0x8uvXcL++KpYyGBZOfGI1nDND/u0xH8/GooqCHn1otQw
7H8nN78We/CJWC6fvz/uf/F/M/Pdf/Iz8Vh5bCoP+011+LHXPF+IIR+hTyPY
G6+1auocqCF8jJYkcLDHL3Y575OtJc4mmI4JcjNB/tBT4aMTtUTAwazfG7Df
lTW9Ph7+leAqDjztgu3m99T3rksjUdhgPHAHuy9CzOVSWyPhBP49T7Br7Hzg
GDQRpuMh6sXY5/i2b5USbyYC17VZifIwIfX71RDHty1Eu+HpYAVsOQe1AQ3Z
b4RoSI66HnbbrsrjrIBvxKO2oh+O2OS5MCWX461EZevHsjrsp81TObIzbcTW
mMM5GbxMWB9R9vfizk6in2ZZVoXNdoDrSbmdhLnRi9Mj2I83vLFskusiLlrr
71LhY0KDBLNgBW83cVM45kEhdlulqLHhlx7CSlnDZoyfCRpND8rm0nqJ1R2z
KpICTMiqDT1l8bOXMG/QC9bH3lcovSl1RR+x/bT76GPsnE1OfNuD+ggoUTLa
JciEiyuUhTc49hNZPFpuxUJMcN9xwYxr0wBRel5achx7ktdQlcd+gLio/M9o
NY0J2aIJWguxA8SYU7+ZP7bKyoqgAdogIfO5SPI4nQnP7/26cWFkkOD2/+mw
YgkTarkS70H6b8LJvWqWdykTOncljRXLjhGinjeWG2JPq51r0zMfI2oS9r2+
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
/N/z8EuMPLLA6euO/wcJNPDq
      "]]}}, {{}, {}, 
    {RGBColor[0, 1, 0], Thickness[0.003], Opacity[1.], FaceForm[Opacity[0.3]],
      LineBox[CompressedData["
1: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
      "]]}}, {{}, {}, 
    {RGBColor[0, 0, 1], Thickness[0.003], Opacity[1.], FaceForm[Opacity[0.3]],
      LineBox[CompressedData["
1:eJxTTMoPSmViYGBwB2IQDQEf7BlQwAf7k/tnFpX27t8P40+qk1aSrjsP57/s
nXKA0/UBnJ8T+n/L7pvP4Xzrl5PCPN68g/Pf8TYrHeX4DOcvTD5/3lPwG5zv
c3oX1+ofP+D8J/e8Vk9P+g3n6/5ccKvO9C+cH3n86emf6//B+QbTXRxaJv+H
84MDmXobriL4rHVHC9V/IvifOg8civ+L4NdELlTcdvf//v9g8N7+zvm9no7O
CPnH03KmKAv92/8PKn/p4EbX4oQ/cPm+xikNZ6N+wfmbWrSF5bZ/h5sn7WvG
XHj/C1x+nibPD1Gjz/sZofzoNoXk5ryPcP7UN+5V3Pbv4fxnzHMFTOpe7/8N
Ne/7/aWM4o+ew92zs+ar8km9J/vZoOpfb/VyWC/6AK4/4w6befGV6/vlofyG
mxF1F5+c3+8Li5+urd0MjAf2a96A8Pn47O9OTEjfPwNqvqjDnUurevbZf4Ly
lT4f/l4idsGeFaqff9tV3SXlN+xZoPxtHDnq+RIP7Jmh/B25Vxe6Pn1sD3OP
+F/ZN01vn9vDwuNv/Updk1uv4fK/Y1Xykqe+h8v3PFpbfXjaR3tYeHpdNFKJ
2f0FLl9ReEnutd83uP7p5ixb1U5+h/ONLr5Y1ff5O1x9mivPxemyP+D8iZs+
inYXIPjKTHPWPBb8Cee/sP4bddnxF5y/7InAn1DPP3D3OCZkzXRh/geX51Ja
5L9a7T+c7yzi3pp/8z/cPd5/yzMkfiPkNV9ddLj0B8Ffs0YvpfE+gn9//j3r
mYsR/BtGx5du3omwL8D9nolF0l84P2NrZvj57N9wfp/FFp8kZoR/rF84Vp+N
/wbnp6yPWbhH8TOcb76j3PbIdET4tzqWWp6Y/ALO3xR6w0ex7wGcfzlBZqfc
nItw/qWcebwPlh2E89ljRIzVlh20AQD34r+v
      "]]}}},
  AspectRatio->0.6,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->400,
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{0, 10}, {-12, 12}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7605713418258753`*^9, 3.760571408922709*^9, 3.760571451866376*^9, 
   3.7605714823334923`*^9, {3.760571515420787*^9, 3.760571532984133*^9}, 
   3.7605716938575497`*^9, {3.760571810998706*^9, 3.7605718576435013`*^9}, 
   3.7605719846962337`*^9, 3.760572014894444*^9, {3.760572064897292*^9, 
   3.760572084640811*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"17.", "  ", "-", 
    RowBox[{"Log", "[", "2", "]"}]}], "\[LessEqual]", "x", "\[LessEqual]", 
   RowBox[{"Log", "[", "4", "]"}]}], ",", " ", 
  RowBox[{"w", "=", 
   SuperscriptBox["\[ExponentialE]", "z"]}]}]], "Text",
 CellChangeTimes->{{3.7603131941824703`*^9, 3.760313239490735*^9}, 
   3.760313289811902*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell["Doing a little log identity,", "Text",
 CellChangeTimes->{{3.760622862184485*^9, 3.760622902253167*^9}, {
  3.7606233863885202`*^9, 3.760623401257682*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Log", "[", 
   FractionBox["1", "2"], "]"}], "\[LessEqual]", "x", "\[LessEqual]", 
  RowBox[{"Log", "[", "4", "]"}]}]], "Input",
 CellChangeTimes->{{3.760623409856021*^9, 3.760623440529496*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"Log", "[", "2", "]"}]}], "\[LessEqual]", "x", "\[LessEqual]", 
  RowBox[{"Log", "[", "4", "]"}]}]], "Output",
 CellChangeTimes->{3.7606234418188667`*^9, 3.770313626323578*^9}]
}, Open  ]],

Cell["\<\
As I understand it, the logarithm being a monotonically increasing function \
allows me to say\
\>", "Text",
 CellChangeTimes->{{3.760623482717534*^9, 3.7606234940930653`*^9}, {
  3.760623529955214*^9, 3.760623544826248*^9}, {3.760647021047369*^9, 
  3.76064703135107*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], "\[LessEqual]", 
  SuperscriptBox["\[ExponentialE]", "x"], "\[LessEqual]", "4"}]], "Input",
 CellChangeTimes->{{3.7606234980606613`*^9, 3.760623519453205*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], "\[LessEqual]", 
  SuperscriptBox["\[ExponentialE]", "x"], "\[LessEqual]", "4"}]], "Output",
 CellChangeTimes->{3.760623520813459*^9, 3.770313629534528*^9}]
}, Open  ]],

Cell["\<\
Meanwhile the little trick in numbered line (10) on p. 631 confers\
\>", "Text",
 CellChangeTimes->{{3.7606241382992764`*^9, 3.760624167992535*^9}, {
  3.760647057144905*^9, 3.760647059998151*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Abs", "[", 
   SuperscriptBox["\[ExponentialE]", "z"], "]"}], "\[Equal]", 
  SuperscriptBox["\[ExponentialE]", "x"]}]], "Text",
 CellChangeTimes->{{3.760624181958261*^9, 3.760624202966683*^9}, 
   3.760624235609029*^9}],

Cell["So that", "Text",
 CellChangeTimes->{{3.7606242893627853`*^9, 3.7606242899612417`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], "\[LessEqual]", 
   RowBox[{"Abs", "[", 
    SuperscriptBox["\[ExponentialE]", "z"], "]"}], "\[LessEqual]", 
   RowBox[{"4", " ", "\[DoubleLongRightArrow]", " ", 
    FractionBox["1", "2"]}], "\[LessEqual]", 
   RowBox[{"Abs", "[", "w", "]"}], "\[LessEqual]", 
   RowBox[{
    RowBox[{"4", " ", 
     StyleBox["by",
      FontFamily->"Charter"], 
     StyleBox[" ",
      FontFamily->"Charter"], 
     StyleBox["the",
      FontFamily->"Charter"], 
     StyleBox[" ",
      FontFamily->"Charter"], 
     StyleBox["problem",
      FontFamily->"Charter"], 
     StyleBox[" ",
      FontFamily->"Charter"], 
     StyleBox[
      RowBox[{"description", ".", " ", "So"}],
      FontFamily->"Charter"], 
     StyleBox[" ",
      FontFamily->"Charter"], 
     StyleBox["in",
      FontFamily->"Charter"], 
     StyleBox[" ",
      FontFamily->"Charter"], 
     StyleBox["the",
      FontFamily->"Charter"], 
     StyleBox[" ",
      FontFamily->"Charter"], 
     StyleBox["w",
      FontFamily->"Charter"]}], 
    StyleBox["-",
     FontFamily->"Charter"], 
    StyleBox[
     RowBox[{"plane", " ", "it", " ", "becomes", " ", "an", " ", "annulus"}],
     FontFamily->"Charter"]}]}], 
  StyleBox[",",
   FontFamily->"Charter"], 
  StyleBox[" ",
   FontFamily->"Charter"], 
  StyleBox[
   RowBox[{
   "with", " ", "the", " ", "radii", " ", "of", " ", "the", " ", "two", " ", 
    "circles", " ", "being", " ", 
    FractionBox["1", "2"], " ", "and", " ", "4."}],
   FontFamily->"Charter"]}]], "Text",
 CellChangeTimes->{
  3.7606243202109013`*^9, {3.760624362939209*^9, 3.760624439947363*^9}, {
   3.760624476394856*^9, 3.760624477640726*^9}, {3.760627724525597*^9, 
   3.760627746356607*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"-", 
   RowBox[{"Log", "[", "2", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.760573197720665*^9, 3.760573211440303*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.6931471805599453`"}]], "Output",
 CellChangeTimes->{3.760573212228043*^9, 3.770313633642127*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Log", "[", "4", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.760573215622263*^9, 3.760573222728047*^9}}],

Cell[BoxData["1.3862943611198906`"], "Output",
 CellChangeTimes->{3.760573223650975*^9, 3.770313636289921*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rangein", "=", 
  RowBox[{"Range", "[", 
   RowBox[{
    RowBox[{"-", ".69"}], ",", "1.38", ",", "0.15"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.760573676538351*^9, 3.760573707440971*^9}, 
   3.760574305095622*^9, {3.760574356156919*^9, 3.760574378004039*^9}, {
   3.760575008058769*^9, 3.7605750123361397`*^9}, 3.760575805761183*^9, {
   3.760575845920313*^9, 3.760575846118259*^9}, {3.7606145037239122`*^9, 
   3.760614539472653*^9}, 3.760622982914517*^9, {3.760625303648169*^9, 
   3.7606253130160418`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.69`"}], ",", 
   RowBox[{"-", "0.5399999999999999`"}], ",", 
   RowBox[{"-", "0.38999999999999996`"}], ",", 
   RowBox[{"-", "0.24`"}], ",", 
   RowBox[{"-", "0.08999999999999997`"}], ",", "0.06000000000000005`", ",", 
   "0.20999999999999996`", ",", "0.3600000000000001`", ",", "0.51`", ",", 
   "0.6599999999999999`", ",", "0.81`", ",", "0.96`", ",", 
   "1.1099999999999999`", ",", "1.26`"}], "}"}]], "Output",
 CellChangeTimes->{{3.760625304494553*^9, 3.760625320220325*^9}, 
   3.770313639855624*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     SuperscriptBox["\[ExponentialE]", "n"], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.69`"}], ",", 
        RowBox[{"-", "0.5399999999999999`"}], ",", 
        RowBox[{"-", "0.38999999999999996`"}], ",", 
        RowBox[{"-", "0.24`"}], ",", 
        RowBox[{"-", "0.08999999999999997`"}], ",", "0.06000000000000005`", 
        ",", "0.20999999999999996`", ",", "0.3600000000000001`", ",", "0.51`",
         ",", "0.6599999999999999`", ",", "0.81`", ",", "0.96`", ",", 
        "1.1099999999999999`", ",", "1.26`", ",", "1.38"}], "}"}]}], "}"}]}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.760614585871496*^9, 3.7606146567620497`*^9}, {
   3.76061478625893*^9, 3.7606148620058527`*^9}, {3.760615051451079*^9, 
   3.760615086888585*^9}, {3.760615122887762*^9, 3.760615129590163*^9}, {
   3.760615423277994*^9, 3.760615433612113*^9}, {3.760615467386355*^9, 
   3.760615525550641*^9}, {3.760615638491455*^9, 3.760615650519265*^9}, {
   3.7606157170609303`*^9, 3.760615824852848*^9}, {3.760620748737947*^9, 
   3.760620986062373*^9}, {3.7606210303886147`*^9, 3.7606212876856213`*^9}, {
   3.760621320325251*^9, 3.760621366664763*^9}, 3.760621476357411*^9, {
   3.7606215935397253`*^9, 3.760621633361165*^9}, {3.760621712966771*^9, 
   3.760621725162943*^9}, {3.760621781122336*^9, 3.760621998724181*^9}, {
   3.760622054697908*^9, 3.760622125188048*^9}, {3.760622219304564*^9, 
   3.760622221470367*^9}, {3.760622285572279*^9, 3.7606223008415623`*^9}, {
   3.760622795348548*^9, 3.7606228100527782`*^9}, {3.760628752166205*^9, 
   3.760628808475741*^9}, {3.760628885071315*^9, 3.760628906621913*^9}, 
   3.7606295058277473`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Flatten", "[", "%", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.760628929760523*^9, 3.760628932997684*^9}, {
  3.760629511848535*^9, 3.760629513670642*^9}}],

Cell["\<\
The annulus in the w-plane is a single, undivided annulus, but I thought it \
would be interesting to see the contributions from various radii in the \
circle in the z-plane.\
\>", "Text",
 CellChangeTimes->{{3.760642904318322*^9, 3.760642979723065*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"color1", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{
     FractionBox["210", "255"], ",", 
     FractionBox["210", "255"], ",", 
     FractionBox["100", "255"]}], "]"}]}], ";", 
  RowBox[{"color2", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{
     FractionBox["10", "255"], ",", 
     FractionBox["160", "255"], ",", 
     FractionBox["50", "255"]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"color3", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{
     FractionBox["200", "255"], ",", 
     FractionBox["30", "255"], ",", 
     FractionBox["250", "255"]}], "]"}]}], ";", 
  RowBox[{"color4", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{
     FractionBox["120", "255"], ",", 
     FractionBox["220", "255"], ",", 
     FractionBox["220", "255"]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"color5", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{
     FractionBox["200", "255"], ",", 
     FractionBox["22", "255"], ",", 
     FractionBox["22", "255"]}], "]"}]}], ";", 
  RowBox[{"color6", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{
     FractionBox["100", "255"], ",", 
     FractionBox["100", "255"], ",", 
     FractionBox["240", "255"]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"color7", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{
     FractionBox["240", "255"], ",", 
     FractionBox["240", "255"], ",", 
     FractionBox["50", "255"]}], "]"}]}], ";", 
  RowBox[{"color8", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{
     FractionBox["160", "255"], ",", 
     FractionBox["30", "255"], ",", 
     FractionBox["160", "255"]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"color9", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{
     FractionBox["40", "255"], ",", 
     FractionBox["100", "255"], ",", 
     FractionBox["180", "255"]}], "]"}]}], ";", 
  RowBox[{"color10", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{
     FractionBox["250", "255"], ",", 
     FractionBox["180", "255"], ",", 
     FractionBox["180", "255"]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"p1", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"p", ",", 
         RowBox[{"-", "0.6931"}], ",", "1.3862"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.693"}], ",", "1.386"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "4"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Thickness", "[", "0.006", "]"}], "}"}]}], ",", 
       RowBox[{"Epilog", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Blue", ",", 
            RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "0.693"}], ",", "0"}], "}"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"Red", ",", 
            RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "0.53"}], ",", "0"}], "}"}], "]"}]}], "}"}], ",", 
          
          RowBox[{"{", 
           RowBox[{"Green", ",", 
            RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "0.38"}], ",", "0"}], "}"}], "]"}]}], "}"}], ",", 
          
          RowBox[{"{", 
           RowBox[{"Orange", ",", 
            RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "0.24"}], ",", "0"}], "}"}], "]"}]}], "}"}], ",", 
          
          RowBox[{"{", 
           RowBox[{"Brown", ",", 
            RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "0.089"}], ",", "0"}], "}"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"color1", ",", 
            RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"{", 
              RowBox[{"0.06", ",", "0"}], "}"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"color2", ",", 
            RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"{", 
              RowBox[{"0.209", ",", "0"}], "}"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"color3", ",", 
            RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"{", 
              RowBox[{"0.36", ",", "0"}], "}"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"color4", ",", 
            RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"{", 
              RowBox[{"0.51", ",", "0"}], "}"}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"color5", ",", 
            RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"{", 
              RowBox[{"0.659", ",", "0"}], "}"}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"color6", ",", 
            RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"{", 
              RowBox[{"0.81", ",", "0"}], "}"}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"color7", ",", 
            RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"{", 
              RowBox[{"0.96", ",", "0"}], "}"}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"color8", ",", 
            RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"{", 
              RowBox[{"1.11", ",", "0"}], "}"}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"color9", ",", 
            RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"{", 
              RowBox[{"1.26", ",", "0"}], "}"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"color10", ",", 
            RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"{", 
              RowBox[{"1.386", ",", "0"}], "}"}], "]"}]}], "}"}]}], "}"}]}], 
       ",", 
       RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<x Re\>\"", ",", "\"\<y Im\>\""}], "}"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Framed", "[", "  ", "\"\<  z-plane \>\"", "]"}], ",", "10",
           ",", "Blue", ",", 
          RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}]}], "]"}]}], 
    ",", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", " ", 
          RowBox[{
           RowBox[{"Re", "[", 
            RowBox[{"(", 
             RowBox[{"n", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[ImaginaryI]", " ", "t"}]]}], ")"}], "]"}], ",", 
           RowBox[{"Im", "[", 
            RowBox[{"n", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "t"}]]}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", 
           RowBox[{"{", 
            RowBox[{
            "0.501", ",", "0.582", ",", "0.677", ",", "0.786", ",", "0.913", 
             ",", "1.061", ",", "1.233", ",", "1.433", ",", "1.665", ",", 
             "1.934", ",", "2.247", ",", "2.611", ",", "3.034", ",", "3.525", 
             ",", "3.974"}], "}"}]}], "}"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", 
        RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<u Re\>\"", ",", "\"\<v Im\>\""}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Framed", "[", "  ", "\"\<  w-plane \>\"", "]"}], ",", "10", 
         ",", "Red", ",", 
         RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "Blue", "}"}], ",", 
         RowBox[{"{", "Red", "}"}], ",", 
         RowBox[{"{", "Green", "}"}], ",", 
         RowBox[{"{", "Orange", "}"}], ",", 
         RowBox[{"{", "Brown", "}"}], ",", 
         RowBox[{"{", "color1", "}"}], ",", 
         RowBox[{"{", "color2", "}"}], ",", 
         RowBox[{"{", "color3", "}"}], ",", 
         RowBox[{"{", "color4", "}"}], ",", 
         RowBox[{"{", "color5", "}"}], ",", 
         RowBox[{"{", "color6", "}"}], ",", 
         RowBox[{"{", "color7", "}"}], ",", 
         RowBox[{"{", "color8", "}"}], ",", 
         RowBox[{"{", "color9", "}"}], ",", 
         RowBox[{"{", "color10", "}"}]}], "}"}]}]}], "]"}]}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{
  3.760626433914412*^9, {3.760626477440761*^9, 3.7606265030222607`*^9}, {
   3.760626565451619*^9, 3.760626633494686*^9}, {3.760626701461711*^9, 
   3.760626783017817*^9}, {3.760626822880185*^9, 3.760626945408724*^9}, {
   3.7606269971350613`*^9, 3.76062703208505*^9}, {3.760627080395328*^9, 
   3.7606271591993923`*^9}, {3.7606272010698853`*^9, 3.760627295705215*^9}, 
   3.760629335623764*^9, 3.760630116470664*^9, {3.760630399431952*^9, 
   3.760630401317917*^9}, 3.760636552086623*^9, {3.760636634234379*^9, 
   3.760636771366015*^9}, {3.7606368025175133`*^9, 3.760636853632077*^9}, {
   3.760637076638678*^9, 3.760637103195984*^9}, 3.7606386918459*^9, {
   3.760741959062336*^9, 3.760741968254846*^9}, {3.773318261080871*^9, 
   3.773318290585381*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6], 
        Thickness[0.006]], 
       LineBox[CompressedData["
1:eJxFz3lMEnAcBXB0iJtpLWV5tZxSiTq0zBxazsjMzMzUNKfEHzinmJiJNJxC
M/PIiY7SzdR1edRYmuGaR2KJNGKahDgyhoAHKnbMgMiszWqr7+9tb2+fP58v
/XJKjj0Gg0n807+bG5Nq05OWX2L+hRPvcbubiFybNBfCJCA/zsplbHogr7LK
tHgscn5nhyReYwQzHawN/dXILFmTf41+CTw+FT66nb0IVlDsatr8FsCFROrq
hNoAfrg3hDY0pwPrFLYkY5QW3FFxzXk65wO40Stg06FNDTbXEc6cwMyA5+z0
eTEkJZh7X626g38Lbth2kHzEJAP3VbqE0hIlYF6auymIMAwuLQsJjWruAY/h
dQVFEXzw63yWKHu9Nfq/NReVL6gYEZhYKflx9cYIOEh2ASezjoNZvHqStF4O
nqr2qX8inQI7U1qEN8OnwZErCqFIMwOmdC+XNl15D35FO8p7fkwDfhNN2TOp
14JPeVVZfAf0YCVuJqHl2DxYghdfauUvgIvuxe4fsS2C6aNdvbNxRvAYg303
+dYy+i9YIq5trIAjzgZVcONM4NSanSUHRGtg0XlFmA77Cczr/UVdPfcZjKuS
+7gOfQGbvodntGHXwT0fZ5niYeRHXaEDfOZXsDSAk5uFN4OjC1yMZDmyltMg
dyu2gJ8myObb3a1ggzZJdngCOYwsdZss/gYWY8uzB9nIJ5WH+js5yBn5HSlc
HnJZ+3VBcB2yBEPZIXiAnCwXO6W/Q9Y0szOPq5DpdJIwWI1c8rM93lGL3EIq
rx1cQTYIInHeW8gMmjnN0d4GNgcKuyxYZKzUM3bSCdnftlHJ3YXcJ+lTMTyR
yY15hPTdyKeJs5JgP2SVtdHVex8ydSyO7khENvK3nlkCkQszB+wMJOTfALVG
BQ==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"x Re\"", TraditionalForm], 
       FormBox["\"y Im\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Epilog -> {{
        RGBColor[0, 0, 1], 
        PointSize[0.03], 
        PointBox[{-0.693, 0}]}, {
        RGBColor[1, 0, 0], 
        PointSize[0.03], 
        PointBox[{-0.53, 0}]}, {
        RGBColor[0, 1, 0], 
        PointSize[0.03], 
        PointBox[{-0.38, 0}]}, {
        RGBColor[1, 0.5, 0], 
        PointSize[0.03], 
        PointBox[{-0.24, 0}]}, {
        RGBColor[0.6, 0.4, 0.2], 
        PointSize[0.03], 
        PointBox[{-0.089, 0}]}, {
        RGBColor[
         NCache[
          Rational[14, 17], 0.8235294117647058], 
         NCache[
          Rational[14, 17], 0.8235294117647058], 
         NCache[
          Rational[20, 51], 0.39215686274509803`]], 
        PointSize[0.03], 
        PointBox[{0.06, 0}]}, {
        RGBColor[
         NCache[
          Rational[2, 51], 0.0392156862745098], 
         NCache[
          Rational[32, 51], 0.6274509803921569], 
         NCache[
          Rational[10, 51], 0.19607843137254902`]], 
        PointSize[0.03], 
        PointBox[{0.209, 0}]}, {
        RGBColor[
         NCache[
          Rational[40, 51], 0.7843137254901961], 
         NCache[
          Rational[2, 17], 0.11764705882352941`], 
         NCache[
          Rational[50, 51], 0.9803921568627451]], 
        PointSize[0.03], 
        PointBox[{0.36, 0}]}, {
        RGBColor[
         NCache[
          Rational[8, 17], 0.47058823529411764`], 
         NCache[
          Rational[44, 51], 0.8627450980392157], 
         NCache[
          Rational[44, 51], 0.8627450980392157]], 
        PointSize[0.03], 
        PointBox[{0.51, 0}]}, {
        RGBColor[
         NCache[
          Rational[40, 51], 0.7843137254901961], 
         NCache[
          Rational[22, 255], 0.08627450980392157], 
         NCache[
          Rational[22, 255], 0.08627450980392157]], 
        PointSize[0.03], 
        PointBox[{0.659, 0}]}, {
        RGBColor[
         NCache[
          Rational[20, 51], 0.39215686274509803`], 
         NCache[
          Rational[20, 51], 0.39215686274509803`], 
         NCache[
          Rational[16, 17], 0.9411764705882353]], 
        PointSize[0.03], 
        PointBox[{0.81, 0}]}, {
        RGBColor[
         NCache[
          Rational[16, 17], 0.9411764705882353], 
         NCache[
          Rational[16, 17], 0.9411764705882353], 
         NCache[
          Rational[10, 51], 0.19607843137254902`]], 
        PointSize[0.03], 
        PointBox[{0.96, 0}]}, {
        RGBColor[
         NCache[
          Rational[32, 51], 0.6274509803921569], 
         NCache[
          Rational[2, 17], 0.11764705882352941`], 
         NCache[
          Rational[32, 51], 0.6274509803921569]], 
        PointSize[0.03], 
        PointBox[{1.11, 0}]}, {
        RGBColor[
         NCache[
          Rational[8, 51], 0.1568627450980392], 
         NCache[
          Rational[20, 51], 0.39215686274509803`], 
         NCache[
          Rational[12, 17], 0.7058823529411765]], 
        PointSize[0.03], 
        PointBox[{1.26, 0}]}, {
        RGBColor[
         NCache[
          Rational[50, 51], 0.9803921568627451], 
         NCache[
          Rational[12, 17], 0.7058823529411765], 
         NCache[
          Rational[12, 17], 0.7058823529411765]], 
        PointSize[0.03], 
        PointBox[{1.386, 0}]}}, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> FormBox[
       StyleBox[
        FrameBox["\"  z-plane \"", StripOnInput -> False], 10, 
        RGBColor[0, 0, 1], Background -> GrayLevel[1], StripOnInput -> False],
        TraditionalForm], PlotRange -> {{-0.693, 1.386}, {-1, 4}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        FaceForm[
         Opacity[0.3]], 
        RGBColor[0, 0, 1]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        FaceForm[
         Opacity[0.3]], 
        RGBColor[1, 0, 0]], 
       LineBox[CompressedData["
1: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
y5y4iqHHb+upS+YUhKUeyp2ceQn2J78KjVwnuUlTJv9r4kt4eTjqguRNCnga
+Z/8vvASKrik9jvfokDPe+WqP62FoKXwvvhf7uj2uytcm1kAXtt3LmEluaRm
2buGNJMCePalgX+fHck5A6EtPpsK4Evpl+rL90lObVc9IuebD9XJPZOZJOd8
0ImMsbLMgy/0HQarnCnY7jayIHU2B/bvevucleQmXfO7HvcxG5zvcEp8IJa/
r/OzZE82uKlVaPR4U7C565e4CE8WlNn91QkmOWxq2d8bOc3pUHh9m/7IE3L9
/25ZUX0oHWR6OJ4kkBznWpuZ1J6aBidCmTpmARSM+Ysb9nmmgpZ3w3MayX2R
6YoxCceToZbdRjAyhAIt9e3vvV8kwZ8k2fdHSY48v/ztGcstSeDQnXhmlNji
8eUuoT8JwPxe3chDcqjvMpVDX64nwMcdkoznxHnfr8lWD8dDqFrWY4lwkpuN
GuO0SuJgwePsU1mSayvey6iuFY0DZ7mD38qI166M2J0m/hyOH8ueOEhysGJt
kfGTiRi4/q3r4X8kJxttEvb8VhsNh5tUtwcRLxPqWKEXHwUb+Oj6v4gPxo5o
LjOMgFsUh0MNyd39Tvc947aGw93eT/yiJKfLse07um/8Kbz/ZGr3iFj4olcH
pocCZaMS/y/XH7g/F6p8KwRU1jsHHyC5P40xP9m4NxiWsn895UksnsG7VXEh
EFaMBrS8Jk58cEzhIssTyJacFtIlPSJ8RvKQrM9j0FB0nwsgvnrDtmwNrzeo
2X33rycu9NrixIzyhNHKI5+//eslGbLSmdvdQd/76MZtpNcUzo963s5yAdmS
z8tViM9t3mNwyfIB/JehUXWV+HzDn9w+RzsYkDpzzJ3Yilv3tvITKzgdRrlE
Ent21X41OXYdnkcv9/3Xw9TDUs33GRnDNvuKC0XEczlD1AKXOmiM/fzyr8fZ
mFt6tnXtxeHPePZfzwuXOk4xbp3HJE1um1fE6zLl3ybymyPyMi/nEf/JyxTp
+nwbb1fLr0kkftXiUuIwaY3ixpI+AcTVRl9YlvXbY/iN/EZb4gO2f5b71Tmh
V19n23liQ7uyQx5DrviDPSTiAPEunmjLirMeKDDCKs5D7O/7+N2nxkcomSvu
QSfXpzfqPrsQ+GCRxsakf72uJ0d3hWKRLwIr7bE1cc5B/lNXJPzR0d390EHi
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
HKiD////5TpoQhJbfZPK/wezFokg
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        FaceForm[
         Opacity[0.3]], 
        RGBColor[0, 1, 0]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        FaceForm[
         Opacity[0.3]], 
        RGBColor[1, 0.5, 0]], 
       LineBox[CompressedData["
1:eJw1m3c4lf//x8ksCaWQEUJRoj1UL5WI0KAkZZTSDi2VhshIsrdsyc6eedmS
vTfHmfdBilAkfe/Pdf1+/nE9rnO7r3Pu92s8H9flyF26e/rKEg4OjvtcHBz/
/Z7+2+HAVmIDx//9aFwwus4kGaPEHrFazsHnnc37Bklu2yloT2+5Bi41et8a
SeY9fMA7McIeftbWvSwg2bmCcbGnxQHqbE/NRJDcJPlMnovnBUg9IPSektxA
1VT1j3gF53mDnYxInuItOhSd9xq026+GKpLspXFT8GOLO8zyXfabVGQDn4BY
c9KoJzQZhNzKJ1nAwak6ntsbnOpFNz4iWWdNgZi+kC8IKBJV6iRfMe5MOBTh
B+lP1x+hK7BBZe+z1G3KATB+uzfWl2TPmNX1MnmBYC/Cx9e3ng2Ul7mNzOYQ
GLRLEXhA8lZ+7x/lF8JAumH91FKSey/9/RjEDgdQnbeWk2fDFg2Dc5u4ouBx
g89knBwbbON4dWZ0okE96JalLMlPC7zHTq6IgSd7HzB4Zdlgynrt8ycsFir9
mX9s15Gf5991dT2rOKBJKM10yLBBYi9DPGBDPJgvTfJ5I80GdfPwJRI5CXDt
0hHb1LVs6O5bPzXS8BFa30fHMCTY8OFzlzePfxKo2inmi5O8fnLXtLxpMuR0
3fG+JcaGlzqKJ/UYKeAQ2jb/dRUbuAKkhbT/psPZjTuM2leS9w8KiNhWmQFn
KQ98O0XYUMUVku+p9QlqDPzKaoXIz9cW4mu9LBMcmg1+XBJgg7HUlnJaYBbU
T1U937eMDa5K954U/M6Cwr7tMwJLyfNXqQh0N8sGi1nZ8AheNqywMfRbK5cD
UUZx7fc52bCosWoJV2ouHB9wBM5ZApYILea3lBVAMDovPztNgLjSc77QTYWw
x1YvL26KAOvg7+vPBxVC8LZlscrfCZCccNGtuVkE0idvEMMsAmbO8EweXlMC
ffxrPs52EzC+YhVP9nWEtKT6F72dBGzZrt8z144gfWtuf247AYXiT79IrisD
2fhtN0yaCZDi8Ig47lEGzoUVMdo1BLhmSiy1v1gOm0d3S7RmEWBo+CWjgbsS
fvBfCjr8iYCSwPiN0Xsr4WpBFVdaGgELJ2rk7typBHqBStatjwR0edudm+uu
BKHWZPvg9+TnMWWo1ydXwb/e+G3hrgR0f0mwOHGiBh4Ingy1MiJAfsQgwta/
DnxGnDaqniTgO609iruqDhqK3iRO6RPQef/hLr/pOjC1NXO4qU3AvEH8eOiZ
ryC6gfZUdC/599pcKufF6mGdcUuNljQBinPapv6hDaD9W/m9wggLeo63XwsI
aYYXip/b1QZZsHdM9+mRL81w17Bjzc5eFnjerYwe/dUMqw6516i2smBgT8QT
n00tcPmaKtFdxoKJTzMaQW9aQEbg2VrhKBZcHw/U6tNpBf9n3IViJix4YVOy
WxLb4P1PjQ3PT7OgfqjY42dnGxQEWy8OGbDggu4vk9rxNkiQmhvz1mJBoK6m
kdXadvBiuNHSt7LgrtnmzeYP2kGv9PIR6jIWrDoYHvdQpQOWm3HxbChkgmey
Qs2CTydI7oxqGchmAvcaf8l9iZ0Q2751k1c6E561mGnaf+4E5/3GfoNxTKCP
ZlDb2J2gU+Sif+AdE0Ln/GaMD3dBePS7gDkrJrgYTGaaTHWBnmVX1x0eJqxS
LcnbZtgDf1flOP1aZIDzXYk1/ld64AvN5vfj3wxoC5r2H3fsAYtVH07eGmPA
ie9NLW9SeiBqzWYKbysDbKqUg+/x9wIz5Z3M6nAGUFIS3v8o64UdR5rexqkw
gO50dufNzf2g9GfG4vp6Bvwrq/xCPdwPTgcp+5WlGBD0pz/ltGk/aEttlgoW
ZMAqF9SRdO2H1UIGyZt+0MGTI1XxxHA/GG7z6t6bQwd0X7eg4TMAhYMFl+d2
0+FuakDo4tggjL69FPNWnQ4mZ7iyeTiGYFejJXutMh1817ff5hEdgveNqVEb
19Lh8vHJ7AmNIWDe4urlX6ABv53AnI3nECS0JcoMldIg3rd3/eTGYWjTCNnB
1qSBpLL1ehk1CnRf3mIxsocGpjr5qxP3UMDq5I+WDnUaLO34JrD5MAWcTEd8
02RpcOt9yrzyGQpclJIpV+KgwaUK1eiZJxR4P/krcG8pFVzGkrm/VlPgkU/I
he+7qJDxc+d2k3Mj8OhpZFa4KhWOfek/Ln1pBLJHl349rECFhC8RlkM3R6Du
7ICOkwjJS9XvnXoxAjotJ+txbATOSmyamE8YgcSjt88cjRqB1fyfG85NjcDw
2Rza6yUjwPC/x63qRgUBju4S798UyAzbrmvgQ4WfVe6fAiYocKZteNu1UCpc
+LDup3cfBdJvO456pVBBN37VLv0sCny+HBYT0kwF5/q7MGRJAYvAjWMf19DA
KmTZmvn7w1Bbd1UqLpoGxUsI68OWw4BLhDPGPtLgnPWGeafjwxC/TeXrlkwa
TIXQVrDkhsHL8JVPfDkNGiufOes2DcH1qgZpQyoNrgXey7qvOASsH5s1g+Xp
kCjZcsurcQDUbzyQnYqkwyaLDfS6/AGwlX910+0DHbpvrrVYjBmAL9WPf69J
p8PR06IOJx4OwIBdRbPCZzo4rwii+MkMQMQb2Punjw6rkn7S4273wzNzK2Xf
1QywaqqdluDtA7cDuyyMXBngqA9d7B+9EGDNr5v/lgHax+i22f29QN+/bGG1
PwPeTQFze2YvXOe9n18ZxYCrSkZWo2a9gD/4TCkFDFgq5yCz7VMPNDaGTUuN
MuBkJ9eWU8bdwFXYohF6jAnL5d8euXSwGwqJJhsjQyYc2Hq28PbGbmCZKmzh
N2aCesaPvnsLXWDnetLFyoLs80enPQ/Ed0HHrIl6+wMmbMyuMqif6gShg+Xn
MmOY8CMtmWfWswNihTQ/n5hhwk+Gs/GDex1Qo5BxtHaeCde/DrROnO8AiYF7
Wns4WFCt+ftei3IHVDQ3RfIKsODYyQiJE7Xt4PaEFW4sy4KyMfEVmpztIL4l
5WqOLgsma2WXydu1QpbCRYnHwSyQVYtumDZpBdqraR+pCBa01U1GVRxshSvq
f04WRpNz8UJh4InlraCTLp4wlMSCVE7CVS2xBSS6DB/3FLMg9q9JqGRBM3Rc
+pLrNsSC3i1/1n9zaQDTOFmeBhkCfvNu/Dxk3ADX3/szzsiTc/3s/Ik6hQZo
f732a68iAa9DD/l5VNUDSrDDmzcToJUT1p3PVQ9bjr7Qu7ePgP2tfwY6X9bB
b3M58TBjAqYCackXTtZBfYJjR6UJARrLF7YOrqsDsEl1Y50nQPt4X3h96Reo
K7ndLGVFwFi4pZrFQi1s1FvWfPA2+X4U5Gg3H9bAOP9mwsKFgD/Jl0b9j9aA
0+O0/I1uBFQ8m7iZJ1oDp5cesR/zIKDI5OKKsaxquCrxPcHcmwC3C6oKot+r
INL5xfSfUAKaXnrtsL1aCbPHJN+LpBNwS0TH9+jOStCP5G92IPeq67JKlTXk
nk0vrB/pJffufp96raSYCsjJckj0yCeAc8vIjZCBcnjbfCwuqowAzw2D6gmn
ysB0dwglvpWABkddKVW5Mih6wFMWRe75tbfdLC6NIFRnzuQEkDnALWvbvNk6
hIuCzoO3eglYPf+PPRv2GYyKwqW6KAQE7BKrq9/7GcDWKjyGSoDBurOZoT0l
MPFxzWYbOgE7T03OyZI5Y6Iw2olC5o6B/S7Twz5FkKNSNOk5QeYQqZyEF2pF
YEFzmN7wg4CgcicJiaZCGFk5wVM6ScBtt6aEvQKFcGLHE6MeMucoK13r3/46
H5yuDb6rnidzifZ3YTmHHNj4NXDvKx42pG7Z1mKzJge2H3zyt5TMUc73RGqS
crLhrnT21xk+NqidaMlaN5kFEXp/Xpwic9hKi2KpruuZULRb0bB8BZkDpY5K
z/FlwtoxqnETmeMOew2uEP/wCXguNFzqFGZD8Yzg0YCqDJhWUvZvJXPgjJfg
Nq7cVFg27g6v1rBB77e/ueBkCjTJSjy2IHPktUMhVGHVFIh24CvYJc6G9yGj
KdwJSSDase1oO5k7X3nGG85QPsJSD0H/EDKnugrncFGkPkJ9pRPDRJIN8fbF
FvEBH0Cl3ym4SooNOU4q1s9bEsC+JW/Wjsy5traDO42WJ8C0Y7epBJmDD4DA
wjfnOAgbOLDpLJmTV+3jM8zBWBAQ2RM6RvLP7bobH/6JAZt/rsuekrla1zxN
/Zt9NKR+Dp91I3N3oJDzH4ZGFDxj8XQKkTldPDqyjfB9Dz/SX3/wIZnwUzWn
scKBd3L2xjIy11+0zFrddSAMRF/vln9G8oXsTNtyf9ID9m9oIEh+pJPFTGAH
wTt64jUD0ht+JPVzXgj0h0bxbw6cpGe4i0oGbRnzhW3yL8ZPknwt1339gqYP
HFx94HQoyXeO2Rx5o+oF5bErk/tIznlxTli01wNUHn77KUp6Dr8k//sgF1dw
3vlZ7RjJbqrhPSvVncHR6d7F+ySfk7GzXpX/Am7PcD0LJblip8i234KPwXSD
9bt8koW6rv/utLaHqURP3yaSnUyjN118ZAOhS+67DpEcZXMzVkjPGKw/i99m
kWxymy3ofGMvrjV9dPQ/z5O2dv+U+MIS953yFqKTnHfM0Xy+9TbOSF6q7yZ5
zeEHJvJ+D1Bd5adDFclbPf3tD2k44muWjnjyf6+byp/abO+EUGST5E6y4ilJ
7uwaFzzHdWGzJcm9SwRp2yXd8bGMeow6yfuvti6m3fXEKatJvnnyeaid07om
W/UOS2QyLEtIVvouJ350uS/ejX6S8p/XXdnZs/1Bnh9qqdoQm0je5J0nFG0Z
gLy8b8R6yfNo4lHfUb0sCMWuzu95QbLigUJlek4wWjq36suQLBb4xWHBPBRP
vVMxyiPP0+h4V5Lg0nDsyJTX1yFZK+LCUbHsCNRd1bu7layPWXp3u/jFSHza
dmeNMckt6zpnXvZEo2xjTaoWWV8eE0uO3E+LwW+bOq2zyPrbx8wIu/QqFkXU
zIQlSFbPCXuitjkeq5UdD7eS9RxS6nPf+UUiqvUfFv9G9oPYK0+vY8YfUfHu
Vjt5kttLz7TzKidhnuQGPEn2z+rnsbO325KRk2e1RgjZb9f8A1ZTFNKxPZpZ
2CZK/n3GgxXX5tJJ0Rkrbya9blRy8iyrMQMT83nKq8l+dv2z/v6V4k8oppGQ
EEH2u9K9xUoh6yyUTNwtMkt6XFfFmKhobRZurTNRaSHnB/fNmuZVKtloUpSt
GE963LmjXvI8P7IxJ/Zo1V5y3hRNxQenPs3FeNPtSZJL2MCpstffYygXQ/Q9
Bqo42MBTemu31aE8vCPiPW3zj4DaTnkJDr58HL3J0RG+QADddHPknG8Balmo
nC8ivW90lahG0nQB/rwRX7JthgCd1Gg8bVKIVzGGN+EnAbt9tNf5SxXhhuOp
px+R81QKbwfVfCjGxeeLnW1sAt5Y5p6lFZaiZos180o/AcFtJYpKUoj7ggYm
Hcn5fqrovZnVc8RbeyLGvEgvvLXyj4GlXBk+U+lJeU/uB7+SXpY3owx5b/Te
ul9P7oeSXD6l2xWoF+l76V8hAflfYy36HKpxnxtt9p0fuf9ar2c/T6vG61h9
NIXcb8mq0U1S1Grk+K7pXvaWgN4LszLax2sw79rFsU7S85raJl4el67FLRYy
h1OfkNeb2EiLln1BZe6BX3zkvtUf39ljMP0FD73fxM6+SMCPwyXXX26sQ5n5
GwPnyP28yYavs9mnDjvWBjZ4kZ5Y3JOuvMbqK6rPC3yPO0rAYyPu4u0cDTjP
+1nm1UYCPMzvUn5ub0CBZXMfShUI+JxIfEuxacC/Ws8OTcsSULA8+TVXcwPy
6hVl6kmQ7y//2tIT7xuxee3c+/ilBIgOldvp7WlG7onIOEE2C+QKfei521ux
1qijuCSWBV+nVhR767fi+CWBl9sjWWC+p+CL9ZVWNNzKVxIXygKH66J3OIJb
sabsfLStDwviRuZk/861IsTuOljyjAXLOBU382Ibfs1tmZIkvTFJGHQ2HO3A
gbClpbw8LMh+faP5/MUOZOdfFsr4R3rc0uxc9wcd+E/+PPcpMs+tGh1wak/o
wIgywWGn70xY/zn/ogJvJ5Y983YK7mVCuyHtVFp1J95oz2vxT2XCTovpaVXN
brzlWhndb8AEQ9p1yeVnuzHbJe6YIplHNwd+jaff7MZlxWYB1w8z4VSsbr1L
cDdeNO2Tou5iwkrbux0vJ7qxUfWfuP86JtyQvHr0cngPaqz1n5v5zgDF9F0X
0n70opeusmMdmZefqTg2NPL0oaom/fINMk9fddaYZ63tw4QMERnelww4c6D/
8dKjfXgyeUxoyz0GsBv7n3KE9qHF81+imqZk3p5qkiuCfmxbdp7rjgIDBtoa
F/e4D6Diz41JC3l0OBXGzTgYOYDUbruZSxl0sBYVzNqfM4APcg/YVCbS4eeP
T6x1lAHM4eKssg+hg8baoFUuuwfxHS9PlOdjOtj78fGX0gfR5jylJnEfHVic
jzIb9wxjgZKxX2gBDVLHc32qDIZxUCtt4NgnGmx/sCcg69IwaqUVBkwl0uCY
wPkf994OY2T1RZOdweT1Ej0mnsPDaDapdd3hAQ36N24Z4TpMwVIO6JklvbA/
cEqTj0ZBEV2fOUYcFRbltr7UHqfgW9cLe5zCqaC5x8bfaYaCUNVCEfOnAl9N
9OYxvhH80/734e5XVHji1zbquXkEe6+XT4ElFeAr7T3ngxGUqjVefCRJMl+U
UfoSKqrZ8hv5vxuBp/Fmny8LULGxcZYS9XoEzgfq5IiKUnE+YoX0R8cRKHsk
dei6IhWnXPw/ptwYgcjlnOEDOlRs8Zc6/kJ7BEqE3z0Y9aRiTexk1vm/FPL1
Y2oBwjTsn3wwOmlDgQABo+VXJGjIHMksSrtIAdEN4pfU5Wm4Mn9rk7URBcrj
4m7nbach9yjza9VBCmzdMfT5xVkafqrvuaO/mgI5V+RFeMJpuDQ3lWf+1TCI
Ho/Vq1tHR7XdYpcmNw/BYmL9XfoGOh5vr/c5Kkb6+I9LOKdGx5LpoqW+nENk
/zp1rNSko0jLrZ+CXYPgU3EpcNGCjt1uiWejnw9CddXbO0WRdBwLoxObmwZA
JXA3ZosxUOLx+LqVNv2QqLzc85sMA/fOGVCqT/ZD3mptezklBraJRHDa7+sH
y9yRN492MNDCauxFtmA/9Cb3pQ6cZKCzjN7agew+eNVydt7dnYGPPjlp1S32
gtujLToXfjLw2MWtTeDdA26ua4o75xi401uNKeDQA5lzJwR1OZioYn5bpdWy
B/oaXh+VFmTiruCgUzrbeiDvDnf7UyUmemb7tFA7ukHkrmqP0DkmCiY2aQ+I
d0NM4PpAtzwm/kUPOb6ITsj9sqW3u5iJS0zNF2Ned8L7Os4Q+XIm3o8zjNl9
txNOpwy8TKxnope+7gmjw53wyAL771CYePKWOV2f6ICn5nffT/GzMGxLd4nB
9g7426HdWn2GheGDnLmp1W0QbCwqcPk8CxuXdv1OTm+DC9+VQ+fNWehL1c+O
D26DjiWFaeLXWKg39DL2zfU28Ml2CRV+wsJHs228coJtkC6k7zERwcJkL9VW
R6NWeF976rnZEAstP8Sw1IqaYXz/0FQAlYVxe5v4ld2awVlvaVAtk4XP969V
kTBuhlBZ+8vi31lob2qZOPStCV46OM7Z/GOhwkMrRQ65Jsgy0RMulSHwvuLh
v0mvG6BkjwbNQ57AZvvReYnTDZAn5dFmqETgRX1hmpNMA5xX+sFZpUqgTjam
7c2vB31hHVez/QRukg6r0yO+gkzp3YMHzxH4Q3tiKYduHSg9sT4fbkbg4Sfh
4TOidTDLdevVpDmBI1z3uOmUL+CyjznlfoVAuag1wSkOX4DubqphbU+gm2q3
JSuxFi4tnomqf0MgTwTNV4anhtxHR6tN8gj8yP60cbqoAnr3Pk1KLiDwvXNI
ZaxHBYQdGb/6q4i8n1dcuf65Cii+vfvmcyTwJI+muP9MOXRmNXgc/kJgqkSQ
26haOWh2NH+I7SHQw6vGOlIH4dVdm0G/PpLd5Vzv0Uuh+tRXuuMAgXH7In9p
OpWCb4GA9UEKgZEORarVRZ/hPNNN7BGLfB7Fa8IeqJbAabH676XTBPJt+bf6
rUghHOk2+Ht8lsAncneaJ9MKYBk1t6PtF4HBWpXWp/QKwNAya7hxnsBbVXqu
i6/yoe+k5IXHHGw03q1vtmo6FyJYT9M7ONl4+axFsp5PLrwQptUqc7Hxa3F7
uOPmXBBQuGdYzsPGes09dS3WOSBvmR2TsIyNxwOieA50ZkEtnl3fLMDGO5WX
1unbZUGl8OvrU8vZGF1hEntWMAv0VS4dVhJi4zfFszrmRzNhfYCfzJFVbFzo
y3n74EYGPFyYLdknysaTFdlVJ2LToWa6UXrzajZau+pelO9LA2EaXXFhDRtF
jj1+lKmbCs9bXXVPrWWj4rxApePGJFiXNCG/SpKNh158rF1h/RFWZmj/aSK5
RH5+NiwqER5yrf64Q5qNI5KpvrFrPkBD7U7HIZKH7fnMZE4ngNGHcMNXMmzc
3iEoEOgVD7U3wr/lr2PjpO26/nvccRClNVaoK8vGlXfVTAcgFvxkx507Sc5m
/nys+TQG9gQ6CvfLsfG5vAX+pkXBn+jGNjJ3o1C5DU/S+UjgDjzt94Xk1CDB
padbI2B27A1/5Ho2XlvxuNy7NBQWDwngP5IrGq5uU9wZAhFXTe3NFNjI13So
NyclCIJvWshnkixYKScK8oHQ28bfzKHIRo6kdYeqQvzhzrvDDnokP8k6U6ol
5AfvOP5IvyOZf+swu+y1D0T+kSurJ1nr76cj9r+9YGfFR3MuJTa+afzsbsZ4
A7J8r+Z2kHxUXs7iYJsbWH6L8SG9BxM7xJ0l0QX28C+udyVZQoL+6WeKEyiY
eWUnkCyT5KrrvfUZUE2PAZL8bPD7TnWBR2BHbKxtI1lFzz2qnm4LK81UjlNI
bnuY8rfa8QoYPNStZ/13v8anW4ctTsP4HRcd0uNwoVhvRoe1BzlH+5D0OIz4
PpPu1G6O1AWDHX0kF1ETOQLzbuImVUp8Hcl+3320Mjnv42fbQJFskgcUJmDV
xidYonrvSRDJB7f9dNy94SV673s5fI9kM44/jlb7nHFgsErzOMmb/Rtprgau
+LZJL1KKZDGJTTMfLD2wfLv0bxb5vJbxdU6X3XuL3fHHDNNIltR5p9Th6o2X
lPujb5EclCnI+q7viyp76d8VSbY0jQm26/JDxZL7GqTX4dwRZs2ERQBeG3/4
RZXk3n8Syn32wXg1TGRZM3neZpSuKJ2FEFwoeX3sBslVhiNSGa/D0GPbhZJ3
ZL34CL3JvBHyHmd5f06KkTwwzClYKheFfacbFMLJeovYfuCPy5loFFXAV95k
PS7Whv6tGorBrmTxdA6Sf8yqppnHxWJ3yo7um2Q97zVOZv20iUP9iSPr1cl6
X1ZheEh4Mh43f1j8YEv2C11a9bIA10esd3t8PIbsr7zigzIbej5ij7jk8FcJ
Nmr/29yvkZaEcenVHfzi5PzgKblxwiQFl9Q0c6iT/avgM3JKPCUdU408FDeS
/f3hDb/XzIsM5BFw0ZBYSdbrxMEZa5VPqDBzdz+TnAeOHhfebfr3CWnDM2Gb
yPlxc5xx7fnHLLT58/z02FI2xh4z0a1ZmY1/+6l/4/jZqOzsUM//LBsV7qRt
5eAlz09X5cCzUzk4dnNIzJqcZ+8uHPKVnc/F2oGcvX0/CXT2vN+7S68Qc5rv
mitPEWi6waN9bU4hRl/MfWb3g8B9M76+v6SL8NzL1rTxcQIvzJymhk0WodSs
MfUdg0D2SH3A65ASlCL2rXLuJJAjJWZXKx2xdHpO5lI7gQMjIaUSG8qw4+Q3
1X2tBEY3cZ6tMSvDC2coJp0NBH5YMpogUl2GN7fafcuvJFDGUmfT3eBy9D/m
mLnlE4G7jfX79mhUYkK3z4mvaQRa2mulrb1ViXJbREcsUgg8c8P586+ISpzg
qqU4fCDQJWjiStxiJb5f3nz5UgSBNnrX3bC8Cp1OtHKLuhGYnm4XwqFTg9pP
pBVOuBC4//ihBJ9HNZh7guuQixO5H4J11SU/1uCrC+cfDjwlkMV9x3fd0los
Ev1M1bIlUOPp7u30r7W4e43l5VkTAhVjZv1OG9Shz/OYzFZjAoN8I6ZcntVh
lZPs0sRTBJq/q1mZmVaH3e9/dsFxAkO3374yK/gV33bzcKscJJ83rW7pjqav
GHbM0nSE3PcNejJL7AwakHvYmj3CYiH7oFZclHYzinlo30ilsbB1w7zt6ONm
TF55epntMAsfrovbsjmtGS3D61KpXSyknrde93VpC6ooDL5/UM3CUjbrzfzd
FnzoraBvFMPC72buVg81WrFQslbqlxELJ3hTWB+a2pBXcpqHMGThBWUTqTRW
GwYayu5t02Xht8s+w2kc7Sj22sjZD1g4wEuZjtzWjpzB71sqVMj7TVf7Hgxq
x1On26Np/5iYku988vaFDtyu/3X51gQmrtgTJmZC78TtLx9VXI9i4ilWUYfa
QiceLFlUjwhl4htbToclol24T3AFTHgxMV3R52zgkS7szM3R13nIxLJj3MW2
sV1kP85GNR1looD2Q6vf5t3YkmsqdJDCwK/h0s7S7T0oePuZbGYvA6NbRkyU
RnswxdtUTqadgRSHtMMbOXtxcMJ9jlHNwNNy7Zpiar24c/HwbtUUBl6bE1CN
edOLS66EeITfZ6B528G9Fpp9OCv+Zpybi4E/eXuVz33oR8PI5tu7F+j4pVYV
54v6Ueq59JD1DB3VjyfHBjX3Y4bSDb9PLPJ1i52aRb/78azlNgeBBjpWbE/W
+6Q3gHZbOjNa/OnIs1vhuNG3AVxyzbwunvSD3PrkitOqQ7ggK3Z/jzgdD//e
Gbr60BAu3U/TqhWmY7/8N7lW4yFM8WNadHHSsYunfdc2xyHM/Lc1vYhGwwP6
Huzwr0OYL3dH6/0HGp4mhk4uvTqMOxScz3VvpCFu2VYSeJyCjB0/OhRlaei0
jTX+5QwF110G2h0xGoZ0nHzyy4KCDdo38QcPDT+vyI7Svk/BLIeY4mwqFUfU
V1elRlBw6VTDzJ5wKq5llU4Fkp7H1+N7+jQ/Fb2uKap8cR/BNQ/Hfv5aHMGA
tBA7K78RvFx/6HHIzAiO7hssngkfwe8Snvu+UkfwbMC8gVDGCF6MvUP9UTKC
1OwCKd7OERTtlltvYDuCxkoeyzhkqaj/rt/buJ2CnIUdCSuzqMh+Pk/l+UrB
hwNXGu8UUfFcScmK7DIKst7Vna6poKLr7qtzHOkU/Hv1yx2bdireV1e4cNOd
ginF8ll201TkSDe1ctxPwVsnlkfG7yS9Tv/yMBwZxsV38rwPc2j4w6C1OkZt
GKnVI4t7S2gY/m3pzB/JYVzRn7J6rpKGUQGGh0Knh1D1ZH7gtXYaBlQVSDgk
DKGOsGHy8ika7kzqFa3nGcLOf++e22yhY/zX2TGibADX3H01cD6Ojly5NbLV
qQMYOZjOZZZMR+r+wy5hIQMoXsp36GwmHf/43xxVtx3AZu2IXweQjuLpqkXL
1w0gsUlWqa2PjmHSlBiXp/24gza+drkIA0fNx/OD1fowrSFuR/FjBkpFimyK
W9uH8d9+cEi+ZODDJxeuf+Tpw9SLIZ8euDJQ+9g5s+j+Xpw2Hc+W9GfgM57v
0dpuvZij9VFWJZWBPml+YnaDPdj14472iUEGBrSqKlq97sZ2amvcJw0mCn2W
J7pud+N0fddT5iEmRlVxSWmf7cYAaxRfc4yJ6+2+/xDe0I3xq06GXTJmYsbh
EH7TL1240tTy7adbpOfF3CktWNqFrrdfZ8pEMMl62baW4daBfNw9rntmmdiU
d4gReLcDd7Y8qoj7w8SRWvyladKBvVwL7/g5WZjDp7vCVakDD2gkdZQKsJDm
m1bWUNWOipvKiUFZFnKtb9hzmpxTqjuUx+jk3Fpx9XLe7XutmFRva788mIUO
hsJychdacVG77ci5cBZKO+aebNFqRdtuO+PIKPL6FfGr5de0oqncYTWJjyy0
4bjZ6V/Qgp/MzqbXFbBweIv1mRtzzThqe/mHaC8Ll2mpRG3hbkTLdROlBqsJ
vLxgOhjR0YB+sU3vhsUJ3JpDE+VOaMAI2pkXN6UI9HO+Ffn5aAM+/EcvtVtP
kHPzteWQaz0GPt0cvXsrgfnpPc0Uvq/YL2mw9SO5J94laSlp8NRizY8OfjFH
Aif757SbWmrQ727k3IYXBIqofB86H1GDt1yuMbe+Ij1vMPOT5fYabNN9/Und
nUAuIv6lrFU1znVyfu/1J7BJ3JXjeXElNt5IvNCXRO7NQ6VxGa6V6MawT3qS
SuBVncsZ/acqcVpYi7Eqg8Ao7if71xMVeOXuP6WtOeT7LR7otBOtwP5bzqVr
Sgmcl3+lt/ZWGWr//BTj1UJg0tJr3nO7yjA+/7dHSRuBY6+c1Do4y3DQ4NRZ
egeBBp7Wjr+2IM72lYbI9BLYHrzy5abXnzF9oSL7wAiB9uqcK+PWfsZXgUUp
22kE/klTNFz5qQQFOwSc5cmckf9YCXr6ilHsjmvjKEHg35UKZjzqRbgieaBC
kcwpHrGNgQeqC/F9sf8H6iTpdRGid++cL0Q2++6VEDLnvJfveVTkUoCNW+Pt
J0gPfHBop8a/njwsV6j9rPWX3Ns80SZnX2bj+i08OaFkjnqX91VDUyobuR+Z
32wic1ZGgf55xYIsnFxcS10gvW7q1Jnkke+Z2H3Ad7mOIOlBuhmnFS3I3Lbc
z8BHhMzJFBfP7pkMNJiW+O1H5roDJ949vKCagTvfd1h4k7lPPPvt+hMRabgY
x7rygPS4HR62RoOPk7Fz/xLtWTI33gvs61PLTEKeSb/2GjJXMlr6fz0lPqL7
rIeUL5k7Lx2XKeY0ScRiB+rwSinS48KjqzXefcDxaJrpV5KHFPZvsa1OQHe7
N++ekh7X1XaS+mV7PJpESGyoJ3PtQ901ft9uxKGgcvqb62Tuve7sdU0wNhb1
KjU/cpK5OObt7tMgHINvyuqE15E52v5iWd0pnWi8PORgFk8y5BtYlS1EouOL
YIv1ZO5+XuuuQusJR8rfBP8VZE7fI5U9wdYOw9vrzCqfkLxfUmT9aE4Ituov
S6WQPLuFZzNdPhgvrgoz0CRz/wH9n7d7fAIx13cqMZTkpj5Ng9pFf2x+9Ldo
nOQPYcZbMm/5IT/fB9e9pEfYeAQ9COrzwdUre5e9JDkwcHjFd593KPnXRaeM
ZGP5QJ+kW56Y8Dl0/zzJGTwKey8ec8eMPv5RVdJjRg9aty5TeI2pt6pPmJH8
/aSafPY/J3SSrrr96j/vUyoj0vKe4duNf47Ekfx6Ll5u4vYjTDl/qe0zyd4D
NS83KtrhnpU/xf/zuC8rKtQ+F1xBAfgo9p/H/VFCqo7haXx+6XnTfx73dPrv
pxIjDbjtfe/Afx53tPmVq8JvC9hxw836P49zl/Gc+uh1C3I3Fh/pJfl0zSHN
CO/7cMpPpL/2P4/z7aWb9zyBsX/vVD6RLLI/6YaXz0tgmu3d5vefN3bNASvH
GRTkxaduk7xxj7Py/l5X4LbcceMIyRV7b5p7/vUA85yQsJUkb1fsXd0h5wUu
J04595PPx2HySeWy9T6w/+dNhUiSk0Uf3t+Q6wslU7+enSd57tz9QtDxh+Rt
vD7CJFdc6L1tdTMIbg9OD14nz+f299ow95lgeKf9a34FyQ993/IlvwiFixu3
C6WT5517fodSn38ETHfmSveR9eJ2m72WkI6Ety/VxG1Izg8S75xIjIIbVseW
TZD1xf7c6D11MQaO2TV2ssl6zHtlM8eWjwU3UYcMc5KFd0fyD7Ji4UXXQadG
sn4dbzSez7WLh1eeaYKhZH37mA/HKr9OhMngfU0s0tv2/+NZMaf7EfrGmbc2
k/zDuDS+YkUSrE6e4L5J9lO39q/gIyHJ8Pt5vVwX2X/N6Zdv/kpOg9MPlUWt
yf7MpLH4/e+mg0vramcH0uM2yeqf27AjAwTuzo27kv18JfVvYoT5J+hp987y
Jfv/n47i5+esTEjuSxGwIOeD9LXlmKqbBUrl8+eOLGdjYcvhi10pWZCssTdO
jvQ60X2WwlK22dD1KkKtgZw/IzITn+/8zoGbGlNqvVzkfPjTs+LR+Vy455F0
y2sJG+Nac+FJSS7Erkn4qMFJ9ucBVZrtyzwQSExf57pIYK5sZqQUfwGMntZa
1f6bwH/Xyi/MXS+Al7v0jUx+EbhJLPdgS30B/NurG9g5Q+CoqqnwLW/yiK8F
yZaRHnhxh42p6ZpisDz329yA9L7HeWqLM/KlgF3X2o8NESg9p1eQ/LYUtr4S
7NIaIDCsq6f17GwpfFtyp31vH4Hj/T9SAuoQdulll63oIj2y9N1Aa34ZzBv8
fGDdSOCJs8oB8xcqQPb9aBcWkftzk+Sku28F3BMYbDpeQHpWSqLQypoK4Pme
Xd+SS+CgyL6zomqVYHlxqKua9MIMfo0b3RxVICAJOhdI7+u8+LpIL64afEvu
7NbwIT1y3XbN593VUNDD02XiReD6X91hKQI1QEmJfX37DYGHDogH/LxXA1IP
9km6kB64vPDE/C6tWvgkfHO3uQOBaYefFT2nfYEz3M9ma8wJVBMSCkqRagC5
u5wCdkrkPn2Tbemr3wBtdq0lk6S3Hd5+dKetYwNcm8p4fmsdgS1RYo3iAw3A
nyy86ySZB4Rl1e6IhjdCruGCZ8tSArfrJm9NEWsGxjWZyNwxFsZmHHr2iqcV
qPtrpsVSWCik7Z08L9UKV1XE7Ac+sDBDe1vsnR2tEH5vQTo8loXzM1d6dS+3
grdFLg9fGAuf5e2vaShrBWF/j22h7iwklo/5/XvSBtpNn34mWrNwwVF44cdY
OxwLVp54KM7CPqW7EeXcHWC0XWSlxCrSK0Ov338r3QFiGOiZI8jCjUNe6cIn
OsCpNOt19xIWjl9/6NyW2QE/k40qGseZSBx+cn/nw074YLizyhGZmMl9ZUZ7
vgtE60Ndf1gw0Ts+/uvJld3gpNPoVmbKxNkVxTNGKt1QrL5R9I0RE09rZmzV
Pt8NSHPuXKpDeuGn2ee9hd1wfp+7aokqE+NYTja5j3rgRtfrpm9zDCyXOhq5
cqIXZBjLVvl5MTBkfu1EI3cfCNdJ5OeT+XbPtNE/J8k+ECuvvtD9goEvRT/q
dxzrg4QtUTnc9gz8VHiOKhvXBxSOiw1iZxloaRvoaHy2H9T3vD8lJ83Ag6d0
fszlDcD6UIO85g90dA/UOFPeMABpAR8u742i47UDJrkvqQPQcU/E6H0wHe+f
aDJkCQ7CRakQDmN3OiZeKTlgZD0Ix8Xl2hyvkx7XJlQfLTQEnuFrtpWqkPn9
211xtsUwQFPpCaEkGjYcDpDXvDcM6fmuG41jaDiR8cfL23UYnE4WQEAoDW1z
hh6IpQ1Ds+2AOu8bGn55ep2vfm4YLtO5jDJv0HDwarLv0DEKBHvePKS0iYaS
51aFdA1SIOoI+2zIRyreTDpSzMWigMTuI3nHoqk4/lioZvMPCuy2MPSbDqbi
kaFQD/slIxBU6/nloBsVN9/wf9OgNAKxxteuvr9CRZuBre4Fd0Zg6Tmrra/l
qGhRt+OY1Z8RmNt+/o1g0AhazK4LKOemwsK5XnH7t6S/FSwrlVpBBbPM94mt
r0Zw2dHdMZWyVFjj8r3F6e4IqjZ8PN9+lApqzb1RH46NYPnAR/3f76ig+ckh
gnuegnJKT0W0pWlQVqldq2hKwUjmduG/ijQYzcmq+25IQSaXe1j6FhoYr+9S
ytWiYNei5DFOTRoohIwvbFWn4MWJv+XWl2hw7NWhG9O8FHSPU1oh/4EGj9yO
FB2wGca7+5R0rijT4Xomk+/gqiG0NDOZp6jT4VtNWaT8v0Fcp7cp2WQPHf4e
mK/4NzqIZnuMfu/UocPezLe1cRWDGN+2QjLPmg7/TkYb+NsNorpq+khFJB1M
U7jyRZsGcOF96SSnEAOOyo5/rHLqx8hVb4p6VzPAQtOltOpWP4oEyOikSjHg
lMMUd6lJP4rfGYw/pMKAqNwdeyNU+1HCK+iI6lEGvFVmtfL19mFmglUo7xMG
GPKrm0dv6UOZMLZ23jADihqvLl3o6EGH1uunqxgMMBEs1QvDHkwxPqLQOMaA
nN068duSe9Dur+bq5l8M8Jgwzzn1ogfH+a25A4SYUJ7zr1tXuQdDck70yx5k
QvP83VQlx24Uy9vatD+YCaIn7jXkSXdh406un9ERTNAtmlkVy9eFxFvPrH8x
TJBJKpFwn+zEuaGYhdRUJiyr2PpAq7oTb8qcCa0pZ0Ls5ax/z291otGawIHp
USZYxY/wchR1oNfq0uU797Lg87MXGian2vH2a6kjJw+yYMNqx4a8Pe0YI6Ew
ZX2EBa2yxr+EZdvxlPLTnCcGLFhlpbsrd6INt0nVxppYsaBP5aVkqWcbVii0
f+90YwGm5IR2V7WirkzrQl8zC4wf/7Q+v70F/3gf+ijfwYKePJv8tWtb8KKI
duzlHhZ4qPG7dHG04O6Eo89aKSygh1ufdIpoRuvNcukXJlmgUWVVg61NKGvh
OacmQgBTUrIsel8jBgWmva04TsCztp/KJrxf8QIjV+eXIQHFfUxNra46XFJS
K6x0moDIUTXeTR/qUPb8eJ3dOQKMPdu/Mo7W4S6ruopyawKyOOVdRV5/QW8b
yY1HHAkwMK4R019Si6PHna+LvyBg23eO8N7WGvx9Qi2N5UTAevoTD6uYGsx0
D9xz3428nhLSbalZg/whhfpH/QhYblPiIvO8GjenbOyp+UCAOkF3j/5difzb
/Cc0kgjgs3x4qq+2El+9/rmQnELArnGvI0LBlUh12fnv4ScCDLWXd9zYWYnh
2+w8agoJeLg2a5ptV4GUPdt3H6knIGB1dsrK0TJcseqLu0kjASfDFRK5C8tQ
jON53ZVmAgSbfT2n3MrwX9HxNbbtBEiEWkGFYhkK2RY0a/QToJqvoX2lohTn
v3GbZrAJoOZ8KqtML0bKyumggDEC0h7syivQLEbT8OD99t8IiN1572JCWxHq
DOWXrJkkIJGppXN1thA3i3A5cf8mgLNiz443BwpwGc+mb6lzBOxQN76s2ZyP
FonFJQZ/CLD1rj/53TIf6crSLg6LBAQf0f+22yUP/75898Gemw3K9S/6Hn3N
wRV8obJDPGwI0D2T/MssB7f8NZ4/xMcG3h2FR+2+ZWPD5631U0vZsCg9duW0
cDb6We/o/r2CDXPmAX+az2Riw/zdIxuE2fC3/Va3HOsTdjvtW24owoZNu168
vePwCQ+YimW5rGKD3bzXyqmdGcg4m3E0SIwNx3Z0LqRgCkqfFvFyE2fDB3uZ
ZG5qMu4tvr/FToINO1/9UTzDnYwUM8XnqpJsWNucHTx07COOKo9t4pBiwxfz
PFHxm4nI7R+3rZ5keY3wO3peH9Bp2S9dPRk2BP+1rw1rjcdOE+nziyQ3RkQa
FP6Mw0Ol+hXJ69iQ2iqNravj8PnibOi4LBskL7+3nzSNwbFyoaWv5Mjno8/Q
mHsajV/tbjf/93+VSx+uW/ylEYXf1hhYia5ng9UZUy5WZTiaxr7Y7Eny/e8M
n1a+MAzRPmc4T7LBfVe1nOMhuEIxt8ZKgQ1HBAOvensHIZHzMLD8v+9nKd35
fLk9AFUqXxRJKJLP44ht8VYxfyywz915g2Sj7j+sufO+eGH/P95skhf2MAMe
H/DGpgntLdMkn2+/1zFT5Ykl6Q4ppMfBAaGb76/ru2Pb7KvnFiTfXBm62Nnu
ggXBZxM9SA7WaeTdb+aEMgVMxVSSr4lkeeytfoqfOzbO15D8yk/Ge6r9PpqV
iSr0kZwuKfJIr/omNsTFxzFIlmy9nmVYbYb//305cQfzdrfSlJL/AaWQZXI=

        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        FaceForm[
         Opacity[0.3]], 
        RGBColor[0.6, 0.4, 0.2]], 
       LineBox[CompressedData["
1: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
vJKKgiqf8qzYRmFvSA3qrKahzETar3XKI3Bpb1Gl+QMaxpkfKRd/PAR61wzZ
+wJoyKFaK6RoPwS6HU/kLJ7R8NTctgd7jg9BTUnNWt0YGpZc806U3DwE1A3C
v/KLaahueYgn9cMgKBBGxcY/aKgx3b8eugbgSa0y25ordPzDxaoyLtoPl/NF
+FVs6Bikvunz8Eof3FK7XXDmNh2lcyV2dE33gQ6bU0mYBx2Xrhl9+5DTB/xx
9pF5z+noIH+jZIthH4jvE9xVVUHHlJKswRG3XuBIur+DZTMDOc6qrOxo6YZ9
V87BBXEGFs22vHXM64YDwd/KcmQYaJl+/WfOy24IvCn064gSA6N4Ar5LX+2G
C79sxOUOMrBGOLOx6b8usLjibJx2i4HRHLSSHeJdcNBXzC+1iIEim8nocqsD
Hsj25oWWMfCgk21homkH/Pkk/9uhioGuQ35Ff/Z0QH2wAIo0M/BB9+Xdb3+1
w1qm72ruMQa2cCn2vnvQDvuvfjdyYiMwVHssoIj0xieWR6QH1hJ4UXh5c+2d
NtAPYl/WXk+gywHZldaTbVBJz0+d2kjgXPxge6dIGxjE38Pe7QQONCvuMdzX
Cmudsoi9hwkcFjC9MHWpGYqaHRWkjQnkGy8wd5JshmrzDxZspgS+nZRa/Dnd
BMImirczLQis8ROLotg3gaVvh98bawL9v4b+ue7RCO/fcZ/+4UvgnnXJ8QsR
9aBQ6VsblE+u175y+VNFNVx2KW7Q+Uzgt6UHMfaB1RDc/CWNWkSgxa+I8a2m
1VAY5jQvjwT2ZjeEOg59BesKz4yz9QQueqwT7PtVBSuHHklYDhEoLd+qUyJf
Cd+9bB+9GyHQ6RKzU+p7BTi4GRb3jRE4slniR8DnCthPr41UmybfryrJqX+g
AjqLcpZfMgkkwtSFH1wsh7aUjzs5lgmUGx1M8xArhYrBbqvOfwQmLi7frsso
AWHvH5avWJjIIcQqsEGjBFgXz3zawMbEnu9jNx6bfoEn7V2FyVxMHA/KspP1
KYKV77U7tNYxsdj78WFYVwR7eS9drl7PRFOvthmzl4WgV0DfUsfLxLxCQZpV
9me45Lmr3k2IfH+ll5De2CeIqeu+0CbMxMnnQ7qy9p+grVQ3T1KUiTL5r3m5
F/Oh/wNLas5mJv65UatQtSEfzs48i78rzkSKrMKVRb1cuL/Zbv9LCSYKvqpa
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
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        FaceForm[
         Opacity[0.3]], 
        RGBColor[
         NCache[
          Rational[14, 17], 0.8235294117647058], 
         NCache[
          Rational[14, 17], 0.8235294117647058], 
         NCache[
          Rational[20, 51], 0.39215686274509803`]]], 
       LineBox[CompressedData["
1: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
VNXjMO8W7P9i9uUdN8ktzT2jzj5NaDXlx3noDIXW5QVJDy2bMK7JpO39WQrt
vOJzlK814TJ3/4gFOQpbX45nLtvchPICwTeyyZwXMrYSPOTdiPxCZ7lWqBLP
mH8ckuzRgI++6D3sI3ui1D4onY+zDmXdb/W5kT2kUnde+kZ1LWbrXIkJdSR7
R+Xn9Dv7WtzGsSn9M9lbQSImx1tna3CuNt0vy5XCjqEj99m6q3Fo+7mH/r4U
PvFi2d8XVomuasJz5pEUjmZK8/ppVuLGS1HZx6LJ3pNb9Ux+UyVK3hTLnCN7
dmvA4pSHfQVGVZvpmMRTyLY3L6tOvxwNYzrv8aZS+EVWYJZlXylu82fN90AK
b7m8Sb8wVIKzv3l/ryZ7/3DZoYPOgSVoq9Gl/5zkgrko+6jFNSWYU/upW514
3n8nmcOBU0W4MgV2tBCPE7Tel5sWUYRf3p6eEqqm8EToiZ9lN4tIH2WPW5Kc
kXb+VFtPdSHuFw9/uKyewpv60+EV8QWY18adOdxMoc3W8eyvugUo/KxwcT3J
Mb1NUe0hfAVYVcxhfozknMHpzRa6zvn4WEi235p44LZSxe57bXlYtlGkEXso
VB41EmZVycL/inZV6JEcZW4p5DVRlYl3amX3HCU5S+pprVOFbCbu5OVSWEpy
WHdLa9J/RzNQ6OOSSRficVFGy2zseL6g880PtuYkx90ek1p33DMdH+2kce4k
OS+j7PFJ2up05Ok2Mq0iHL1ecu74n1Q8waVvzcmg0GmeOzikNxkVl/bWmFHk
fgUmKw+oJeNbUxP3BcIyqZLhGXVJWMb+h8uB5Ey26m3Zz18moqKnm+U7kksH
ot+y2Zh/xivmKgpsJLeGq3h+faCTgJ023iPPCN9+f0L9tNwnXBLOpa9Fci7n
T2jYdjQO+w/tVKoifOdNbO7MnljsKj869y8Xrz7rsNR7ZTROvN8ROE341Vmj
QfW5SIz7UuyhSHI1xeojt3UiAmmxmxTDCMexJkU4VYWhu63OmjMkp8uv59sr
nROKtdlS698RDr9WKj0RH4Lg8KC9lvCcTN/VPSc+4kgSXYeD5H5Hr9RbZnwf
MJg/JkWB8Atpt92pCwG4N9e12I6wQMrcPmbvexRx8/L/StiK4+miQL4vHgqL
FRsj/IQldNe1UG9M4yxx3kg8xP7Dj+0vXnnitvVdcccJnzy/3DZKxx3LGwec
bhKW4sh19HjrjEuj6g/aEParF/xZq+CI7EMffX0IB2TqXGFjf40i0+fzP/3z
pnuHVR6GPEfni6Xxuf+8r7hpe63AI9Q357z5z+PWBtMuXLxqgmOLorX/PK5r
3ctlg+k38Lj3+mX/PO5AwTezhIcy4DCS8/sf25+z9Cr10oPvaWLp/zxu+65Y
cVc5C4hpMj38z+MyngZfkiiwgbKdj82LCV9Xi8kx3PYKzFyvWKYR9s0+US1x
0wEKuH5LhRCeuH/v3G//d9Bc+aToDeGOCja+zDZXyClqZ79PuNR0cVvGOw+w
38/Lf5HwiIqPklusFxyRucgQ+OeRe6R8tMt9oOii6av5f158ROv+gTE/4P3o
3VFDOHTv0ws/WQNga1TJ90DCIn9N/z44Gwy8Kc8e7iN8OlY6M29fCOwJyedh
kPO10RHcUHgkFNRf6iTG/+M3X/lyLoQDjKwM5ycsmpFyJUUlAl7n7l9ST+rH
Ljo5PPxWJGyQmFW0/fd3gjKDaKuH0aCqX5ZQS+rPmd+mXc0mBjYr/Co0I6wf
JCcsbh8LYry7StkJX3lUKtL2/hP0uaDvKVLPKusEU2swESxqv+mYkP4IUaq1
yNFNAsPLqZMM0j+yN/K2udKSQP+k3F1jwlWLkkKC35MhKPoGnybpt0QbcYdt
bGmwxWG8bAXpz09V8cIN79JgVLWhwoB4XPQ8o9eWIx0WHEOyS0g/H3Qx+VvJ
/QVko9xMLUj/r944E7RrXwb0fzvCH0zmwyraFZW4xAyoUKkP6yXzY9d8M5+o
RCbwPYvk4SUsXLnLiF86C5gdOV1vyPyZH0qwSFXKgQXRv18ODVLYE77zwsqm
HLhsWF51ZYDCxYXH4tfVciF0950m435yvq+by7rv5IE3rT77fS+FwxFS2eeP
5cOvtX9nsZNCI9Pdudee5INbzr1YJPPPQN2j8nZOPqztMb6c3U72wV2/ct3T
BbD39uUnUWR+Vv7O8zl1vhB2HXlxVZF438Bf00BetWL4IXX9fGs58ShxrX6L
4GLYdzWT9UkZhfcdPl8tHSmG8xs2svGUEu+wa32g/l8JFARJNJwvIp4sVKF8
1KMUvt59HGRKvO9RVey+zIpy4PMEvc4kCoNdVDvi1lfAQnu43eFEUo8rmeY+
ahVwd1XHpH0ChRcrOniujVSARXBg4LY4CtWOybM9ZamCAZWNDlzE+4LMH/Ve
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

        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        FaceForm[
         Opacity[0.3]], 
        RGBColor[
         NCache[
          Rational[2, 51], 0.0392156862745098], 
         NCache[
          Rational[32, 51], 0.6274509803921569], 
         NCache[
          Rational[10, 51], 0.19607843137254902`]]], 
       LineBox[CompressedData["
1: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
NB+BnU6PDgftZ2BX+N2DVoeH4c0wUyNWhYF/Qp4f37d7GFzeS93NVGNgSkkH
9UdoGF4HXnYrO8lAtczNZ91/DYH34ymP16YMHGW791olawhaxDg9/e8zMCJs
/9GKzUOQIbnIFtfEwM+aC5Yc1ACElq/5XtfGwPDGxSi3wQE44f3mMdXJwAuN
cUXjjQPAZeWAewYZmMM+lJeVOgCTJo5/PBkMrFq5oLjhygCc6ujYeHwdE7fb
tpurZPbDVwOWDf6aTOxZ3KaaatcHBodmQyS1mHg62Ptf6Ok+yPmzO6Zch4ml
55clOG3rg9NWR4wnDJkYIx+VLz7UCy0cOlos15gY3C32Q0arF1x3jV4yuMdE
ZK6Mm9/RAxtt99i/LWQiaP4NThzqhA7vpsxf75g4v988O7q4E0623wo7ikwM
T35XERzcCd2Xvp35/IGJx8pZR8wPdYLpY3Gb8BYmbvH3s8qJ7QDT9vjgbdNM
vH/jwcN1pu1gc2ShRZzGxM5Lmvwx+9pBXvFnyiYGue7UrSXF2Q47+LPFqQUm
Spl5TW4t/QIcMxmbLJZSuJGz9287/xdoXsMwOsJHIRo/HeP/0gqTslYfx/kp
VH9ce0sjtRVcqdp39zZTyFt+09DOpxX06GeOZ4lSWCEd5pezuxVuaXfUfZSh
cJer/N1vQS1wQqWAOQUUXlq7W/LO0WZAm9ql3JcoZF2+vbf7Yj1YqhlFjZpT
KCP7ydSdpx6iBSou51hQ+L3q+2u+T3UQeBduH7SiUHfVlnpFmTpgufkucYsN
he/f7w2VWqgFx3G3kh9uFHZ8Pkyv9quGxLU8DHcPCuPe9xawKFdDl8jgyb+e
FPqXzzvLzX6C5LfRdnRvCm2f8O/y1foEnm6+ri/8KPxyLT5iaNNHkGANl1ge
QmFO7YxGZHIlaH4xDFUJJfcHD2e4GVaCwzWa6K0wCmn8H4/oc1RCyDeN2A8R
FBa7b9RYYlsBC+sb+RUiKXz4K6pXUKEcxNaM31ePojA9K767c7IMir0ertN5
RWHv6KH4Jy8JV9vcNYqh8GiMXdX4H4Tk81lVcgkUqv40sd34sBSmt0sLCSZS
qDhz9MIZWgkYzCmFsrym8LixGtddrRJ4wnXiS/EbCh3WB3g28r6D9QnbE7+9
pXDrMa1MwYRC+Hncsy8/hULzrtJjW1YWwjaxalmHVArp60OGNl8rgFfHPCQH
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
e/LkXjLxdhbbdVWeLnzCJyz+IJfcHy/yUrOiHfVcPulUDpP7XQa+/4lsx/fz
r3mejDFxTUZXc5JzO87sM1XUnyQe2D4gQpNpx3PzCendpM+nB2vvVoj4guea
muSTfjJxc88z9pZrbagoUCBuQeaEdOvFBiPOFmTd5yB7icyhQnM5kQOjzZh6
trinZh+FTI4/2vwlzbh8zZkVMopkzs/H+VVaNWP74tv2fjLnfufZ3u6uasK4
o/Zay49T+DbL+qnGtwYMsU0SOq5PocjJ3er2sQ3YccXcRvcChV/nVRRDTzdg
eMqB/WZGxJuERKRLkupx5t8SUXMzCjPb1bpeG9XhYtMnQwlLCue+dpxcrKjB
ZP6J0Vgn4gGmtnUJt2owNXrjcX0y9+tHty87JliDmvb1PGwkF0T7Pfhh51iN
3c2jlIE7hToRw09dJD8hi0tETqEPhZ9pXpZTrR9xvXbr9UP3KBwxc83T8fqI
43EjgR/vUzj7+fD6jV0fMC2qbuV7fwq7uMYcTwdUITyktVmRnHJcfc2roH1V
+PLayuqPJMckeKstfhyqRC6T5C1CJOfc5mgtllKuxMM1LEtKiAfOZFQMvJ0u
x+DgWPvc5xSeEYxLdY94jw01a1sjSI5i3Zm/z+1XKb5aNP/uT3JWE9PkiL1x
KUYtOb7XmeSwI/tPPjgpVoL+VfULh4jHPb7/ez4pvQilnmc+i04m96fxjN9a
V4S6+47euUZy3d8jyWGyDoXIuSLLQZbkwMsWetXRigXYXqCRkkY8TkEyqlGx
Khd32l4WvZlB9l/T6EeLRC5+3fQ4n4vkSrm3g3xX/XPQp0nSLIOw5lf3r16n
s5FFcgXVR3LpftH9LSuystBIgaX3JvG4o+a/L/hxZ2GlUnPXD8JSijNP/2Rm
4K7b1twsJOfOJ2f8HHdMR/EfP067Eb5Mk/9Yq5SG66n2VxThxyaa1a5VbzHu
Ku+dVpKbX6gceanun4yJv9RWqpBcHbq9hoPrdBLaKZ99E01YIPXCmqCORDzv
kSeqT3L6prQu+cORCSh86+ufVMJhTp8Vv5nFo+T0o5lFwt5RM1ditsZhzGI2
7TjJ/dtmfq1Wn4pB34n9yx4Rfhh9ba7dOBrDd67Z0UhY+EEBY8N4JN7wF7Za
Tbyi1tmkRNPmBVrTLhUeIpwoOTzj8TMCu4Oq+R0Jn5mv3fLWOww/txx+EkdY
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
Kwcq8kr+B6r5DEM=
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        FaceForm[
         Opacity[0.3]], 
        RGBColor[
         NCache[
          Rational[40, 51], 0.7843137254901961], 
         NCache[
          Rational[2, 17], 0.11764705882352941`], 
         NCache[
          Rational[50, 51], 0.9803921568627451]]], 
       LineBox[CompressedData["
1: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
vbn49T/vuyZaliL+Dr3aFa0GCfNycG5wPvEGY47q1C3/z6sOTIapmPmic3OP
/W7CB7/MrhcU9sIXiVVm5wmrw1s5Pz1XPKm56qM54cjatK4NR51xe9bntf95
3JcHC32XVt/HcGX/dg/Cnjt5PgwnGuHO7Jq+/zzO0L/v6PaRk3DA9Pyu/zxu
kY+enMOWW3CMLlr6gnA9ujy7wPMQiu7vD39CeMdJGzu5709AwTa08B5hR24n
jlQ7DxBi6Epe+e/6vRKWsru9ofPkrdYjhFsVP0jUU6+AW/1Xtdh/XhlZtI63
0Q94jmbwzpD33ZF2t31/sj9caPjnWU1YR9g72cQ7ENRFC88H/edtDK5Bd4sP
oP9luZHJf17s1WN0YUsoVNox0rYSpvu2l3S8DoP2wYfnesl+ZPUu4Ou3+gR3
zPP1ThM+FKshJt8SCXPOwk9+k/118v/ItjscDZerlbaHEL7vrvny97I4OCl/
kdVJzsuDAtUIaet4kI6+u86GsH7hJfEr7Z/h/qrvedyESw3HFkTHJkLvsrPe
a8l52zW5SN/IIwlePy9JDyTnE1xzDo8oJkNMW/cVYcJ/fsCdyfAUWHLRRm6O
eJvRAfXq/DvpwCs92utB6mP44LddJBLBTU8JgV+kfgRrElRftmTAlZKtxdKE
63SmG44ezgRH29WJOaT+OOqb8m4szQbpj9kh70l9PnoGEyHfsyE4fro3n3jc
04iBO/V3c6CP917sAKlnpcrOOvGfuVB2bzBPhNR/42a1zQoX8sDz35+Np0h/
cHN8lJMenwfZZ9c/VWki50lM+5L8onyI+HTM4jDpJ6AgISeSmQ896pGVG+rJ
/VeXyn/fUAichyYbAqspDJC5fXu9bSGIXrS/YVlF9qOqZP5+bSFU6e18vL+S
wjNH3pQJPy0CI7ltp/PKiNdq3g4UGy6GXR1MZe9CChPOqG3UOlICd07zCe0p
oLDqatpZt8ASsAvPu9eYR/pnuMOZ5rOl8OO3ahUX6ZeFxzpddiWXwXrGDc4t
xPvqntM2lNtVwt/+kCL9eApjnrau3NpaCbzHVU3dYil0kXLabn+gCsJD30bE
RhNvrpc6v3imCs4nHBvrIF4oxDv/ruRhDWgVriihiPdJbA0NUM+tBVG/r9v/
PKcwqafhzL6JWsjl+hWT7UHWZ0pTYf2GOigRnay0cyPe6LfNqfFRHbTN6s51
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
4///v9zNE5ycT05n5fwPrNuuFA==
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        FaceForm[
         Opacity[0.3]], 
        RGBColor[
         NCache[
          Rational[8, 17], 0.47058823529411764`], 
         NCache[
          Rational[44, 51], 0.8627450980392157], 
         NCache[
          Rational[44, 51], 0.8627450980392157]]], 
       LineBox[CompressedData["
1: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
TEcNTfH//15u/D7PdK7ut6L/A7IPTBw=
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        FaceForm[
         Opacity[0.3]], 
        RGBColor[
         NCache[
          Rational[40, 51], 0.7843137254901961], 
         NCache[
          Rational[22, 255], 0.08627450980392157], 
         NCache[
          Rational[22, 255], 0.08627450980392157]]], 
       LineBox[CompressedData["
1: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
3etkguadFoBWb7A/Q48C97XXlmVI0MGzY10K7TwFVNdxfx3aSwde6YbK/Scp
kP5CtG3NETq5Fzz/BUtSgKP4AUPzAh2exOcEylDmQL+Xd+mzR3R4vmYwX9Nj
Dj5yZQwH/KKDPTtHpSRrFt4vBGR+MGTA8ccNhFHiLOxbJsw3as4An2zdanro
LKQfomketGZA5vu3RRtezMKFox5hea4McJNS0992fha8Evg5reMZYOtgFHS2
ewY+Uh4kus0w4IcM3+QWrhnICRfbe8JpEcoeFyXKjk3DYdm8GlHXRchR8S8S
rpkGNerO5bPuZB1/o/f8DZmGD0tb5NyDF4HRxHjbvX8aJFw6FO7nLALPkyWb
Qm9MgdqOkVtctEXAqDTJ8PQJqBXcUnjyDhOSOmOPRn2cgP1Rht7nrZnADL1k
FuE8AdcNKrIuOTDBIX9mzavTEzDnZSCi/ooJ1gL5z/61jcOeXqXegUgmaAbt
cf3GMQ7x1/g2dzYzQXJ54L3Dp0eh4WQF/ccJFgi3dSkJSY/CN2fOikeqLNhV
FjM1vHIUjLklfKTOs2C1wYrZx1UjUDnygWJLzhmKILf7mcsjYOGo05dgy4K9
h7YHh90chgWuwgKfWBYsP3qV+/rDQciV27r0xFI2bBRR8TG5MgjHY7tm5njZ
YJG8lddUcRDSFAQ+hguw4eyt2UktxgDYNdwQ7hFjw9ev526MPhmAGlfucPZ+
NnCMK6ZyuPZDrIXk+4TrbNj0Vu/2eo9e4Hxm5JqbzIZPbo8zX1v2wuWLRYRQ
Khs+qhqkUi72wuR3m00WGWyQ3VhY+VOoF6R47U/S88k5bxRtJR7WA+7fHf9h
FRvoJ/a9OGfUDbPaTY4TU2xYTnuSE7+jG1y77b7WzLHhttq8IjHSBaPvhR9+
obGhYCBY1de6C6QC3bM0CTbMrbY6ZfSiE0y9hmjHVxGg4d6ZH/G5HZwFfHzT
pAlYl37x2ttb7TC12+r1lj1kzol02XN3VzvIabZyvJQjoNk5N0k0rQ1eyC06
H1YkYLHANHVXYSukDai5q6sQ8OTT+vmNXc2QarDrEEHuzfMh6V1hkc1gYtQu
RCH3amahxsRGcs9O7ne53UPu3WtTz1OWTDRB3FyOfbQFAbvO3XD0ZTQCobZF
qM6WAPM1W84mCzbAGsWR9KI3BHxYn9KzsqUevE5rnd9P7vnqsqwfpqH1cOOn
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
uuaQsDX+///LKZmyuvkECn/8D0c1x9s=
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        FaceForm[
         Opacity[0.3]], 
        RGBColor[
         NCache[
          Rational[20, 51], 0.39215686274509803`], 
         NCache[
          Rational[20, 51], 0.39215686274509803`], 
         NCache[
          Rational[16, 17], 0.9411764705882353]]], 
       LineBox[CompressedData["
1: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
+P+flxsbU8aOtJYW/g9Z24f1
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        FaceForm[
         Opacity[0.3]], 
        RGBColor[
         NCache[
          Rational[16, 17], 0.9411764705882353], 
         NCache[
          Rational[16, 17], 0.9411764705882353], 
         NCache[
          Rational[10, 51], 0.19607843137254902`]]], 
       LineBox[CompressedData["
1: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
ouB/J+bAXg==
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        FaceForm[
         Opacity[0.3]], 
        RGBColor[
         NCache[
          Rational[32, 51], 0.6274509803921569], 
         NCache[
          Rational[2, 17], 0.11764705882352941`], 
         NCache[
          Rational[32, 51], 0.6274509803921569]]], 
       LineBox[CompressedData["
1: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
sZGxYOr5z/7Ky8t2or3/3lfEhxFwzZO5jzdZnaiukt5/MZKAk9WG3+JrOlCb
xkQWjibglfhHddxOHQjvl5rc/Y2ARNoFu8D0djRZkFczm09Aq/1gJdZsQ3cm
gnqNiwh4piEiIY6vDa1xtZVKKiGgDuj6/LarFQm2/tprUElAk7oV+aburQgf
Ujij95eAiWv95r8WtaC9Rx5Z7h4g4MbceX2fY//QUNJ+YZkhAuIbpjHKG/6h
2LqbYztGCOh36OfW7K5mZDalw8UzQUBf9lrH/dua0Ra+Z5Pv5gl42GeHYXtc
IzLMW871fDkJm7s0rMq//UHf5/OPn1tJwt2pXvTgI3+QnYSG+o5VJPwkMe1r
0VqP2n0UNnxZQ8KJ3ve7/nLWoxR7o7pzAiTcd0gl18q8Fh2bXnV1dh0Jr54x
y1+cqUGT0qcjnguRcGVRc4G7Zw3aHlO0yl+UhPoqyToeqdVI/uq+T2c3ktBG
8Ucz4KpCumFfLH9tIqFkit+VwIhKxOO/rZx3CwmZ/b6T44qVyMPi9tM4SRL2
naEFeF+sQOhskt+TnSTMqtkY5pFahmSq5a5F7yLhTf2AqrSjZajuw5eO3N0k
1DnYJliRX4puhSn/6JUhod7T9p0WoiUo1SXxT608CdX4HytI5BYghQ6OL3gv
CZeWSckoj+Sj4/OVm0L3kXBzS+5+XaF8tC9wqEdXkYQ7j8YnnLbORSbO3/YJ
KpFwe/wlr5PvctBszOzGJooJ06HnR7J+oyjnVdVHVUio2nSmRYI/G1laXnu7
QHGAeuZPploW2mh8eTpMlYTrpoe//7PMREohV178ASTUjE8TfPoLI3RsTaYl
JKGEZCHxqQyh6KQ33v99rvJ18b8t8ht/of5Zf/aQGgnrf386vbcwFSWpFn82
20+9Pw+e2UeLpqCafvXuIorvBb7s4Lf9jngMmzN2q5PQaPCY9J3fyYhz5X35
FxTfcHH80yDwFem0rDzQSvEtgw8XZK0SkUHP5eFdGiRUOXf16BOUgD7cuiPn
8N/nLB+QalGb4tCnjXK8yRRb6YglKRdFobksF0/K4+B6bevZHNuPaNd19XBh
TRK+Ej8kfHhdOBq67Xxck2L/jwzRXBSM6E94Ay0opm8cWOZa9B4dtFx+/x7F
rmqTMRfX+aJsNf0lyrtgzqH4sy+LnqH3lu38/30fzidd7KZ3kTP6/+/L3drd
cpDMKUj7HxhBpCw=
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        FaceForm[
         Opacity[0.3]], 
        RGBColor[
         NCache[
          Rational[8, 51], 0.1568627450980392], 
         NCache[
          Rational[20, 51], 0.39215686274509803`], 
         NCache[
          Rational[12, 17], 0.7058823529411765]]], 
       LineBox[CompressedData["
1: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
9Nm2caeXCQFTfupc+HqnH1mNgdoWRwIeNBTcIlrah/wPK88TTgTs0lLMLXrR
h15337+02ZWA+++e5b52pg9JPDcSuXKXgEMC+7g/jfUizSXDr4+fENBOynNH
++peFODSfM0nkoCDIIdX1bIbZS9Y5etGE9AjJSrTQ7EbqacWG3LHEXCLCGWq
dKoLyXJdk7FKJKDId9+zhj5daChq+WFtJgGfWSxfkUzsRPni+unXSgnISZkU
LptqR7sLpn0KywjIn6y1pwy1I8pwQMCqCgJO+n+oLn7YjvZqndoaWkNAytNQ
u8+i7WjFnpFCkxYC8onxD+vvbkNpnS/e+Q4RsCGsEfkz/yJqoWTixxECvpWZ
/aPk14KMzfK3FYwRsGeD1Pt8gRbUafU9vWGKgOEcPH+r1zQjxxcOtm+XCLhg
t5bniWIjuvXyis4tChtWIJOCzuQGdMTow+ujnGy4P7jadNt2kvvzIhu52fDw
2WOpX3f/QbsfX97iz2ZDNW+7PTf16tAhLb8sGV423BgfxvW0qhZZqJSlpK0g
X0+0qTzauBZxDGQvZAmwoXtT6PqcMzUoxCm67dRqNpR8L10aYleFvOC/8UQR
NqSn5jA8xyvRdY+CG7OibHjW46ubpVMlGlubUnh9LRvOndRLXO1egaobuJ5R
pdjwgvpFNy+x3+i9WqDwyvVs2KuyrYYiXYa+mPxhiEiz4as66wVHhV+IX9lc
hZBhwyxVvn6gUYLG+Dispv/7XpkAQzdkz0/kw69Cb5RlQ/Vyp9h/B4vR8hOx
xw/l2fBIyr+nN41/oO8SxjYGG9kQPvBJTz5diJS5hb+sVGDDWus6RveFArQ1
U/Pp7U1syNL8fWnn9e/I0Xf7WmlF8vm3NvCa3/qGSnE9/3/fq3RXv8fv4pmH
bq023dGjxIZ+yZ7ftSQRMtrSevGqMrnfjzKemCnnoksh5hx9JKdv7bC30cxG
ZvoJXOYqbIhaCuk3D2WhVZQ42yKSK3bL9N00yUA5vZu1FFTZsM7yR4L9xTRU
M6Dgdp9k/scO/87f+IzUnjhL1ZHs8G9UXf9eMtrQtawksZl8P8H1Vg5Sn5B2
anwk6XGwa/3uRrXd8Sj7+KW7wSRnqFZxTpvEICEsXfCDZK55T3bijUhk41d5
bYjk8LJWva9Sb9GJqQve7C1smGBwlyls+hL9K63hlCJ5/KWFboWUPyq/v6ZH
ieTABk5mrZQ7+v//lws5qDG4a83vnP8BYx8fLQ==
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        FaceForm[
         Opacity[0.3]], 
        RGBColor[
         NCache[
          Rational[50, 51], 0.9803921568627451], 
         NCache[
          Rational[12, 17], 0.7058823529411765], 
         NCache[
          Rational[12, 17], 0.7058823529411765]]], 
       LineBox[CompressedData["
1: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
        "]]}}}, {
    DisplayFunction -> Identity, Axes -> {True, True}, AxesLabel -> {
       FormBox["\"u Re\"", TraditionalForm], 
       FormBox["\"v Im\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, 
     Method -> {"ScalingFunctions" -> None}, PlotLabel -> FormBox[
       StyleBox[
        FrameBox["\"  w-plane \"", StripOnInput -> False], 10, 
        RGBColor[1, 0, 0], Background -> GrayLevel[1], StripOnInput -> False],
        TraditionalForm], PlotRange -> {{-5, 5}, {-5, 5}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.7703136599167957`*^9}]
}, {2}]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"19.", "  ", "1"}], "<", 
   RowBox[{"Abs", "[", "z", "]"}], "<", "4"}], ",", " ", 
  RowBox[{
   FractionBox["\[Pi]", "4"], "<", "\[Theta]", "\[LessEqual]", 
   FractionBox[
    RowBox[{"3", " ", "\[Pi]"}], "4"]}], ",", " ", 
  RowBox[{"w", "=", 
   RowBox[{"Log", "[", "z", "]"}]}]}]], "Text",
 CellChangeTimes->{{3.760313337129354*^9, 3.7603133943991003`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell["\<\
Tracing the influence of the mapping transformation on the z-plane, I see that\
\>", "Text",
 CellChangeTimes->{
  3.760639017546206*^9, {3.760643038019681*^9, 3.760643039233117*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["R\[ExponentialE]", 
   RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], "\[Equal]", "w", "\[Equal]", 
  RowBox[{"f", "[", "z", "]"}], "\[Equal]", 
  RowBox[{"f", "[", 
   RowBox[{"r", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}], "]"}], "\[Equal]", 
  RowBox[{
   RowBox[{"Log", "[", "z", "]"}], 
   SubscriptBox["\[LeftFloor]", 
    RowBox[{"z", "=", 
     RowBox[{"r", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}]}]]}], "\[Equal]", 
  RowBox[{"Log", "[", 
   RowBox[{"r", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}], "]"}], "\[Equal]", 
  RowBox[{
   RowBox[{"Log", "[", "r", "]"}], "+", 
   RowBox[{"Log", "[", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]], "]"}]}], "\[Equal]", 
  RowBox[{
   RowBox[{"Log", "[", "r", "]"}], "+", " ", 
   RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]}]}]], "Input",
 CellChangeTimes->{{3.760639067157654*^9, 3.760639112425886*^9}, {
  3.760639147704192*^9, 3.760639175936338*^9}, {3.7606392120775013`*^9, 
  3.760639242346822*^9}}],

Cell["\<\
and proceed to insert it directly into plot commands. In the z-plot I don\
\[CloseCurlyQuote]t bother to show radial boundary lines this time.\
\>", "Text",
 CellChangeTimes->{{3.760642605020905*^9, 3.760642651801464*^9}, {
  3.760647236474152*^9, 3.760647245728675*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", " ", 
          RowBox[{
           RowBox[{"Re", "[", 
            RowBox[{"(", 
             RowBox[{"n", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[ImaginaryI]", " ", "t"}]]}], ")"}], "]"}], ",", 
           RowBox[{"Im", "[", 
            RowBox[{"n", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "t"}]]}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "4"}], "}"}]}], "}"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", 
        RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x Re\>\"", ",", "\"\<y Im\>\""}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Framed", "[", "  ", "\"\<  z-plane \>\"", "]"}], ",", "10", 
         ",", "Blue", ",", 
         RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}], ",", 
      RowBox[{"Epilog", "->", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RGBColor", "[", 
           RowBox[{
            FractionBox["100", "255"], ",", 
            FractionBox["210", "255"], ",", 
            FractionBox["250", "255"]}], "]"}], ",", 
          RowBox[{"Annulus", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "4"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              FractionBox["\[Pi]", "4"], ",", 
              FractionBox[
               RowBox[{"3", "\[Pi]"}], "4"]}], "}"}]}], "]"}]}], "}"}], 
        "}"}]}]}], "]"}], ",", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", " ", 
          RowBox[{
           RowBox[{"Re", "[", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Log", "[", "r", "]"}], "+", " ", 
              RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]}], ")"}], "]"}], ",", 
           RowBox[{"Im", "[", 
            RowBox[{
             RowBox[{"Log", "[", "r", "]"}], "+", " ", 
             RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]}], "]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "4"}], "}"}]}], "}"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", 
        FractionBox["\[Pi]", "4"], ",", 
        FractionBox[
         RowBox[{"3", "\[Pi]"}], "4"]}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<u Re\>\"", ",", "\"\<v Im\>\""}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "3.5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "3"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Red", ",", "Dashed", ",", 
           RowBox[{"Thickness", "[", "0.007", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Red", ",", "Dashed", ",", 
           RowBox[{"Thickness", "[", "0.007", "]"}]}], "}"}]}], "}"}]}], ",", 
      
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Framed", "[", "  ", "\"\<  w-plane \>\"", "]"}], ",", "10", 
         ",", "Red", ",", 
         RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}], ",", 
      RowBox[{"Epilog", "->", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RGBColor", "[", 
           RowBox[{
            FractionBox["100", "255"], ",", 
            FractionBox["210", "255"], ",", 
            FractionBox["250", "255"]}], "]"}], ",", 
          RowBox[{"Rectangle", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0.03", ",", 
              FractionBox["\[Pi]", "4"]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Log", "[", "4", "]"}], ",", 
              FractionBox[
               RowBox[{"3", "\[Pi]"}], "4"]}], "}"}]}], "]"}]}], "}"}], 
        "}"}]}]}], "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7606398992416697`*^9, 3.760639930920705*^9}, {
  3.760639973136642*^9, 3.760640008709255*^9}, {3.760640076267717*^9, 
  3.7606400980806828`*^9}, {3.760640157166256*^9, 3.760640168141642*^9}, {
  3.760640235956284*^9, 3.760640248601753*^9}, {3.760640279585496*^9, 
  3.7606403773569403`*^9}, {3.760642496877099*^9, 3.760642505843574*^9}, {
  3.760742014140019*^9, 3.7607420196033278`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        FaceForm[
         Opacity[0.3]], 
        RGBColor[0.368417, 0.506779, 0.709798]], 
       LineBox[CompressedData["
1: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
WHxm8f8DJChnmQ==
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        FaceForm[
         Opacity[0.3]], 
        RGBColor[0.880722, 0.611041, 0.142051]], 
       LineBox[CompressedData["
1:eJw1m3c01u//x3Gb93orSqWiZRUVpd11FQ0jI6KhrJQks0hZJakospORlF1Z
Ccl12TNb9h6RvTe/9+f8ztc/PM4bx31dr/F8nHPbZmB+0YiNhYXlPoWF5b/P
///BC//3lcGePYJLqwR8xlki7+PtBIQ/JZqOkfyk/ew9T29PwAp8plpIdv/6
Nq/vSwBYTq9Lyib5+ZoThLN3GDj6wykqlOQPd6zrXvyMANxZ76qtSXbgHKgr
+xIFeo5KHThF8m6B7Xy0D3HA0kmhjJNk54zTAae9vwG7nPmgvBUCClw5LHsk
JxH0CKl+eESyUsWdcuWfyeBn4LUWMZLVQxTfXUv5DrbyyahWLBOwsHRM0OjL
D3D66uDcPZJvxls3G0emA5OtwY3sJLfODurcCvsJlrRVoeASAb8Zi2Yov0WA
EvWqIGiRgFVca9U25WMgK7Lv2VqSjyTIS73KzgYFJ2Hkv3kCZnC4p+pk5AKR
xgmqEsk5Rrm9Wal5IP5zWFTEHAEdQ+2om5PzwY54j5cnZgnIWJ96siCuENxl
7KxwnCGgZoNJzdroInBv1PBC2jQBtwQu3L7yqRg80v4wxTdFwLosgfc1waVA
82Pp5L0xAhajd1YPXlcAxeQr7JajBLzalBqVL18JRjPPqZqOEPCLgdeHspxK
YGUs56c0REDOUz2y5VlVwLZIeCD+LwFfmLi9D06tAQvcPLWWfQR84NT+9NmB
WlBY8GRRqpeA2c23nG4n1YKjvXqs3l0E5K9+eGLr1zrwM6xnfKGFgLNVu+4r
fa4HJk8vljxpJiBaYxrHvaMBvFZf6GRpIuC7/mE2/KEBZCpYVP79Q0Dlx/KB
m4MbwZJaXMrlSgIKG45TXnk3A/lXR2cKsgno4yi4XdCxHUxw+VtHIQIufkR8
i2wdYNlYusXxFwFf9VDYes52AP/oaMu16eT9WHrXRJV3gOizD1HZNwL28R7f
Pd3aCT4sejq+eU9AM33iu99iNyi+82u1NZCAK695G/eBHnCjQc52pz8Bs2ye
Sxc87QGe1+yV/b0IeOeW0+F2nl6gvWtNJMOVrCfV39ZFAn3gV8S/KiVT8n4f
dxfcku4HZTo1grQ7BBS6qyYb/KAfXBjIuZNtRECWh5mRJWn9IJthv45Pl4Dl
A6kn1oIB0H/mQqGiOgFfh8dKKCr9A7IG7vfpBwj4Jkj0mLLBEBBgT7HvmGDC
gde+mOfMGNiTfTOubIQJ/Qf+JI8ZjoHiKxo7Ev8xIZfRT6+ap2Ngcpx90qCL
CT+HB/d74DEAxTulTKqY0MlE+8jvY+NAzoGdm/srE8qNdkQ67J8Akfruwi/1
mfDPiz+SxhungPbv7YHOOkxIGVhw+HVoCphmWDtYaDPhwUyTXIbWFDjfpOZ/
5AITlmwYJ8K8p8AW/uKdloeZ8LrVyRYX2jQQ3mLUaMNgQtWdinGqS9MgXOas
eF8iA5peWk352TgLotqkF2nxDDicaKZeNjMLfl+2SJCIZEA103t76/nmQOXH
pyUXgxhQRuy0b/OFOXDycF/PhacMeLg89WRo9hwwrzs/O6bGgFCujZMjeh5c
3ynCO91Ph1dCm/aJWSwCvV88Yke76DBCSzrU2mMRODSEaDxspkOplV2WadGL
4GGaxlD7bzpkuV60R6pzEfxu+KGuk0SHiY6fTxSrL4FB/yZd2iM6LPQ17/ix
fxnsW//0sQo7HR4Z8NY6P7QCrhZuseFfokFFqhSNk7oKUhfEPKonadDA8OtK
hugqyJjr4DvUTYPr/FudqYar4LXIu5rwbBosPzjPBRpXge+rx+IsDjS45ws2
XdRngaJa7crjw1SY3tI/IKPACr92KxiiHiqU9FX94qjNCm9aDnW7NlNhZUyA
R54RK7zTICe1VESFa0WT35x6ygrLdN7vexNBhbPxP/ax/GSFzt2dJxS1qVB6
nc89j91scGckm93BdB44ynDZns9NgUTjyQO533hgfv/S56frKHDTjNAHxUge
SGu6aHdsOwVq9gn7nPXhgZrTfJSwYxRoOhkhOmnKA78EJilJmlFgf8iw4DYh
Hki5YLVoWE2BL0LcaZ2O3LAmJMtwZwA71M2nP465zw1Xc0wHz0Sww/OhQf13
Tbjhnyqob/CNHVo1Dhe2XeKGxroPaB6F7LCHAG32e7ghp9Qaro+z7PCzftan
4AYueCP/BNcfLQ4Yfzs3y34PFww3rKhQWMMJudYcYg0T5oLn/UZ2pG/hhJLC
rgEZ/FzwWvu79dslOKHJ97u/W5c4ocx5+eKO05xwN+twVm0ZJ1wp2Myy5j4n
HLxyMdftLvlc4v37I3Wc8JPtBLfgJw7YwFsq4ePNBXP1Rd6aBXDAx8utz/aG
ckGh7k9tP19xQF2dt8z8GC6o1y7RIGfJASPWOUQ0Yy4oo60bz3OSA361U7NJ
HeGCJf4GAhZ/2GHpn9hWIQVu6BJiLpfDxg6VSzOocXPccKdg5x3faQqcFy2a
O0DhgS3KVhT9fgq8EXhk4geDB85c/BQ68JsCnYzfLUZv54Ep3hYtaYEU2HRj
ZP0hZR6Ytmsm+aIkee4DeoMsoTwQv0rle3ORDU6vmKocOk6FVbY7Gr7Ls8EL
plt2tZ6hQqknxIsGWTa4+fbDL49VqXD9hep0piAbZA7ZF300oMLs3apVJ7tZ
YXnw1dbAF2Td6W48lGjFCpvWTR7cXkOFH75IXl94zQK72xTjAgxosC6I1u/k
zAJnC5oX00xoUC895z6rNQu8I7MvtsaKBodqyz7MabNAM7kLG6af0qCV2lzo
j20s0G25jtL/kQbPXV4jNmO8Clz4dO54dNJg5JX34je+LgOhq7cv5FyhQ+qh
EWcb72VQ+lImhqZPh1s3uya42SwDuQRxURVjOjRzfpnse3IZ8Px58zTLhg47
XPw5r5YvAcd7Ns+Vfejwh9rHmoChRWD1h/305lLy5619ZomdC0Bq/kOT40EG
DLpjaNnNvgCMt4uaWR9nwLv7xJ99650HyW2aCbpyDCgftilwf9Q8+OJXdFhI
nXzeH23VJj4Pdhs57zhqSs6h45XZXZJzoI7rUXLrBwb8mlYTV7tvBsSXXqsr
pzDh7lNpoWW8M8AkXfD9dx4m/PLLRTFrbBoUpGyp8yGYEBxXHn+TMA0+pR4P
kxVkws4as8d9e6fBLevs6+ukmTDKlvO5jSQ5h50zN8neYELdkx5DV3dOkHOn
t3T+GxOGfGeZK+KYAE2N6aqPUpiQ1cXWXfrvOFA64y47mcaETQ9yjedixoHe
8zSx8mwmdL/woEp17ziY3BblLFbDhPFDhZQDR8aA79sbvGZTTDhdUC90Y9MY
yL+ySe7+HBOeSXN9zD07Cuqi5gqtlphQ4cvLYy8fjwKZILG8y+wErOQufSn5
bATsnlp7t4iPgK7mCmVM3yEw23Ui7OB+Au4z7jP/d2kIBJjbPMHkHgu27aMj
gSGwwN8WKXeYgB7OGRYa7wdBdzn+IQ0IGPop01Pi4z/g8PJfY7IymXO8JhLC
vvYD64DqW6duEfCu+2GxtRb94E/eNwE1cq9G71H2ctzfD/LTkle0yL2ruHPE
4kzKX8Cqtd/0ghUBa78MirxO7wNlSnYJLQ4ENP0yyrI2twfsC5CHz3wImGCr
9um2aw/Y1hIozEPueV6DJsO0cz3gftyGR8/JHFBvJGulVNYNag+c8DcJIeDY
i/7bR+q6wHOXEYOGSPK5leGLOwFdwETo9pJwDAHTzmYd9bvSBZivHKkGcQTk
S6B4tZM5I8XL6OlvMnewHAp4d6qvA7g/fVytkEZA/Y81varRHSBu6xk2rQwy
V6n/O3LVpAMItPh8vJpJwEw90zsFLe1AYtMf6QuYgGrx1Tu9hlrBvFT/s/pC
AmpnXsispTYBdXW218515Pn53t7t/KYRmPNc8+SrJ+Dfh/Yuu9Y2gvzPuouh
DQT0txM2urGxAWyxnmaGkTlsmU93j4foHyDNartJvpM8vzjNbdS4OmBXe0Yv
iMxx2iOPhp5K1YGSm6yMgW4C/ium2xsdrAWbPFiDzMkceKvHDI2frgbazHa7
bYMEJDZSPysUVIFcWTxylMyRB7SvqoQoVIENtaeLlIcJuNlszOCwWiV4ekg8
+gqZQ0/1neNjiaoAQ/+Ir5pkTp0KqKhz+1IOOEdCBM6PE7CmlBb9JKMMeCUU
82+YJKAeV6zUFC4FT9vnoqZI7oLHN+gVlgC5ExMhxWTu7WvcxrartgiIXHmU
qEPm5PNv7to5NhWCYGpM+SYyR+8s9ztV3VEAPlV1Xqgi2aLbLenOcB5gd8y3
FCVz+C3KYW7rtlwgsPmgSi3JCdlcpTYVOWBlr5r0wwUyF+cvnn2As8Eq6t/C
R+b6OalNRWaJGPhp1fB+JrmLUXegUB4BV7a/VCnSCy4pDPJFi/wCPVrLtK8k
/zxV2qn+Lw2INX/a7kN6BC9LHsvmslSwr3D60BzJ62Y9M9q/pACO2iINTdJL
lh4qRYV4JoEBCXabKJIvPuTX1bJMAPF2XqHjJAtl8k/xR8aDqInLv6VJ72nO
fC/84E40KFNWYrtLstV71vvlez6Bz7naJ4JI9moUOCHfEQauClg6YpJvpVHC
u24FgFQPj/xWkh9e/tY/1fQaiA2Hr50g2dTv3Y3DlXag4Hmc0TLJFaxdESy7
9ZDansisVZIXimZvvF9+hvYefLtlnmRhtbzLh+e8kY2D2dMBks9sy/kWYvke
dRidHq4kOSh9PMZhOhzV1PDd+EYy/Yyylah0JLqyf6j2GcmNJ2NZSs1i0bZ7
9erqJPNMFOy8HfcV2S101/KTrNG+V3vZOhEpVW2/UUG+/lLZINnT3slok1nU
sDPJj3JdAp8kfEcLVW4u4iQf0qzoySj/gdyftggVk+f7ylTfZXgoHY2/xDm6
JL83F27ZQMtEFTbqpsPk/bSUTGkdF89Cx3S+bbYi+YpXz5e4HRilVy3VDJP3
m3DkTEyKdDaSmrzhrUfyI1HfqrRTOaheb1m7hKwPmUclTT/UchEAbLt2k+y3
rlH3s1k+in0wVVdFel32jjg5H4cCVBd3OkOA5M/KlxseeRSiUWZ6pCZZj9Y6
ij0HY4vRxvzFwGTS60R7RA5p9P5GX+OtBzgmCHjMRPci51Q5Gjb2WMdO9scl
3au6l1kr0ZEXxUrzZD89yHeWnCaqkHJlW30R2W+h6YYSU3tqkJmBnO1SPwFd
mjPrRFJqEOPRseUk0ut09/EtaByrRUPc0556ZD97BFHXhyjUoZxyidYPZL93
sxY86DOqR/ZXwrelthIwQrvrSEd3PXrK134Qkl531VJOrFa/AfFuoD3NIT1O
1LeIO/Z6I2Kp+JT7jZw/bju7HlMvNaOdSy9m9lQRkGq49WB1dTOqyK2rfVhB
QJVtCdt91FoQT93ekczfZH9WLgixKLeih0aoRrLkP68PPudyuh2ZmYfZJOUQ
MIWn/9wa3I6M7wYfweQ8lDz8NLd0awcS3AaOFWQRMNzMbcfZ4A70eNJoKYOc
pwGJxzN4AjpRy+8Dz84lkfPX/19rlns3Yt0xIDQcRkB7fbUoWNKN1M5o0JzI
+c4VrfX+F3cP+me6eoKH9EL49khBtGsP2jP3/DEnuR9OrqjYn3bqRbI42PiT
OwE9c1+ss7H8i6zTbrw3e0DWW4NxuLX6IGqr+KVwSo6AMS556+75DiIhY8UD
vuR+u7xtJuxG/SBa5yMu2naM7AcNjhjx60MoO3enhDa5Hx8Q9vevGw8jFoen
ua07yfoP75Dc7TCKbvD+BSfJfUt9bUkJQaPo9yjXQTYWsv5tlNrYWMcQe3C6
/K9FJiw9n1xwXW4MaTqkpW2YZMI3pmsUmwvH0OtdfOuNOpmwBkaWDlWMo0xn
eoFmJhP+2/T2RsPYOIqmVC+9+sGEafz3S7PWTKBK5pRBWhITipfpMuw1JpCf
bWPOXDQTNs9WiP/4M4F4d76cI/yY8MSE6CvRlkn00y7L8d1dJlxiO2H0rWsa
dfmb+u5Yy4Qf98tqXWCbQYv801I36Ex4aap9X++2GTQgO2fnxcmE/Yoazmz6
M0hdq0W0ZYEB/XY99plom0GaG0N5ebsZcFDqzciHxln0zer9y0HSG3U2p0/O
F8+j1JEUSQcFBpzk6FHJ659HT/KnhBJPM2BEe6CTG9cCYvjbLLQcY8AuniAw
J7+A1K9Vmm+WYkDn0hPKT9ECGuNTent0LQNuMq3ctz95ESmf3WYw3UCHAgHV
V5HvMqrOTjxjrUeHDyOGv75NWEZcSh5FUmQeDYz51qZTtozcJaLtutXp8AzF
NLWVsoKE1GPvHZajQ/OHK+4vrFaQWqxeudcuOnRVYazaq6yiZzEy7Mv9NHjt
pqn5FWcWvPjLeUclmZcpllP/il+z4GAx7akUMk8fiV1zV/Y9Cx6+ki7lc5UG
lce2mVJSWfDe3Om/xxRpcOrvXYF7gyy4R/BhxElxGrysYCxvf4kVt6htXKb2
kXm/aV+GtQgbfvPE1/n3VSp8XHBD0uYAG5ZYHmZsV6dC9/s/7axPk7y3XMz8
HBWuVOx5c+MGG1Y8JbR2UoYK479YH5rxY8Mr/vosH+lU2DLwZrMYOwUvx+/9
FZpJeiOdnftxCwVbdrEkiwrwwFZTq7VVAxS8fqTOxIfOA8UvKD/aNkvB7O48
9DlWHqixRVojcQ07VmV6rY8f4oaNn+Kxx1l2HHw24gPK5oZ5Uh1n935jx5RD
iTIBpBcq6bgd5bHnwEnPdvNt/cEF9x5XXClz48A+o6qKFvFc8CH7MWt3Hw5c
16MXlxnOBct61xrNxXLg0Pv103IeXNA2qlXAu5EDbwlVm6Hrc0HtS/KHcw5y
4kd7hxZf8XDBQZXGENZ/nDj/jJeAohYnZF4V5Fg/zYm5Nl3M61PkhF2BDrk7
Wbiw0i+xCQfACfU/Zx7dv54L/+DVankvxgnZ1ooXcpzmwvPNhUf8Fzjg8N3H
S0GBXLg8a5e/WwgHPPaoTsHwFDcWvCBLsWxnhxNXv4UEKXPjkjdP5fSr2aGY
5Gh/iTY3Vrjdba+Uzw5n1b9eXm/Gjf34aP8YceywNXPp9OUgbryH994GJRt2
KCom/tB1nBtvmJndGktjh8IG8vbmQTw4VJw+t06aAuN/PgtFn3jwBC22Wnkn
BY49fa3J/Y0Hs483bndcT4Hvzqy1cMnlwS9HhmUqF0gPzFi/VniIB3fLyLyU
zmWDDzIDrMaOUfGvvQVuk6Q33n/2KbixjoqvPRc2dDFjhYr6ZVRaOxWvyPnt
1dRjhd9PB88f6Kdib8/e7cIXWSFcWlSxWqDi4L1Tr2MOssKcLdFvvbfSsKwl
f+/TJRaoPcd25rYRDQfLr1uv8ZIFrn/544zaMA37DZ17RAOrwOd79LLHNA1f
uap++fm2VWBd59GfvUzD0BM/n6OsAmF9LhV+Jh0XeZdP5xStgEOj+zdck6Jj
Fd8d7OPqK+DPiZFks3t0HPHo4q50g2Vge16hKrSXjnspIbwHHBfB/udPzfWH
6HhR5Ojqd/1FcNkti2vLJB2fkks4t//MIrhjmCrkxMLAWudaWPnpi2B6syIe
2cTAg0pOra/eLYD1qfk3HqkwsPABJwX55HmwoSrs1OEEBp5t/8wq0DULQu96
rRdIZWBpXcuUqrxZcO7ni5SRnwz8MSM+/HnULDjq2nvmRSEDr17pP9duOgsc
NTkCbrYxcCaceaU8S3phnWoWpjLxSjjLni20GVApZdC4fJ2JM+yndxRLTYEL
f9aj64ZM3O2x554Gcwp8eHpwLsWYiTmfVC3VD0+CFvWgGwrWTFwm7MBfGT8J
Lj8eqeJ5wcTo33VxB4lJEPH5ArX/GxPvtH/FrCG9UZJ124PMFCbuGszYxMk+
AT5d3rn5RToT2y6Zsx3oHgez+XIbOXKZ2Lq666Vz+DjQvbs31q+OiXU3BTq1
bhkHbW/kWXnnmXjwuyL8tm4MFI+oeWkvM/FeZ9kGsYFRwPxWc9aflcCuFct8
/yJHwSHGrV3zPATWGPrkor59FEhMm7tpbiLw82nTS6kbRkB971SL3hECU5vK
r/VThkBX9uKpIgsCG7dwHrKu/Qs2Ds9v+WVN4Mcvt+qm+P0F5xWtRGJtCJza
Wx89qvUXmHD8Sze1J/C9xNh2zcY+0OXBqPdxI3BpjYNXc2svQGLK6neCCXzB
rizhb283OJhWE94RSuBAuvL56shuYPFkI79aOIG/u84t/rjdDbykHlwTiCSw
uXD0zP2BLmD0eezmuW8EnhXTHE8d6gS6sc9692ACOzdedqzqaQeGkU8YIjkE
lo+9P7bhVjtQImxUBPII/CjC3Pvy3zbwdv/ljV2FBGaESvbggVbwVXQ6f0MF
gTmJ69JHRppB0CGf6OpKAtvHzvqfMW8GleNPPjyrJp/7zYgqjTUB6r2I8so6
Akdbu144PdEIfq6N2EBtIfDlklXBnul68BoYBT1rJfCeQ8WXf9nUA3xLVWq2
jcBulf1ZXrN/wNb8Pe55nQTO0MSuIvN1wEbKimD5S97P1kP31yzVgPHSsg3H
+gk8w820QvY1oGvu036zAQInzL70N16uBr/UQ70yBwms5rCvOn6lCvi11i2S
OROPvPruzsJaCUybHgePjRH4ilUnZQN3BUg74PeufZzAn6sePRNllgNPWRAd
OUngwcl9+/dvKgODPIbpjlMEzt7eXrtbuBQ89BYWUZ0m8FmiZlFIpAQIHYxY
0zhD4Kp7OGd6fxFYu4nq5T1LYPp37ab6Q4WATVHljvwcgbnPW9xMOVEA2o4X
7H47T2C/BXN0XSEPbLwby79ngcCsnqtcu1VzwWJGmTYimeO4ftKkZg64nAKH
yhcJbKoxJ/hQD4McE/UTSksE7uLN+mxclgVydbb2I5L7Qqa+N9ZngoAI96E9
y+TrOazYIdedAar3OCl6k5xkZRMcNZIG7mZ0sI6RrHJb2oBjIRX86nq39uwK
gUtCD8dc5/gOvHn97X1J7hqXH0jgTQbbXXJAM8lBpvxBq4KJYLMKU2fTKoGP
3iq55avyFUReMakivQfLFA1d2W4UC4wMisOekHxyhliOeRwJHOeFCmNIHjH5
DvZ4fwSBz26eKyFZoBZt11QPAR0nPIW7SfZ8I5J73tEPcB0IujhFcl2ympOF
ljtQUnzSSnocZjJB61s9W2Bx+HQ26XHYL8nhHu2bLsp/1bJMehzeFOlaTw12
QTs/qvsM/ff7/Y2KBMLfopHkT0/qSc7f8X141/13iChpKsoguTlLY8WfXOmL
OQvG/iRvYWyiCbz+hGLVGQYmJFvujpX0tolGQcubU2RJdp15YsOlF49Kt8vq
LpLnEaLNu5ixMwGljd8yTCN5MsjlhtnGJHTNHOF7JFdsb7m3hZmCdjxQtxUk
+fglncRCtlQ0mbDPLZs8/6Ff5xJNZ3+gzZ+txkivw38kuqdppOfl9TpUuJL3
OQHlzQ7V/UKtOo/PMEiWqglKyilG6H6n3LrXZD2ADH2pHe0YTbgl5Twg6yVm
tv1JUE0OGrd5/6GNrK+E0HcvKn7nIk9GXQMgObKtuXq1MA+J/qu5PEjWZ9i3
z6fVMwtQeui/DwdJDqU+H7NMLUQcDVNyD8l67vv6YcIjoQh9qQ5630fWP2NU
nj3xUwm6u8nX/zbZL+tgS3WsB+l1u5QKdMl+AuWPRMreV6BT3vFzKmS/XR4k
J9+lSnTv0Kdba4cJPN3yqND+ZhUqZDW1kCT7V91fr/rS0xo0Hnsnq7WPwJoO
QhlZPKTXlWStce0lcDmFtrLtbS3aSpkpTusi8CnvJdb6sDqEG2vcU8h5YvTr
R8VMZj2iMn4QW5rJedJw0kxKvgFJucNg+0YCV3qcP6xb2oAoJVuqhP8Q+I1X
YmpcYyOC8lY/lssJ/G/kn8zQdDOyOK/2jwcReNtk7uz99R3IfZhxsDuTwE5N
V45WXelAo/mTXskZ5PmcL+kSC+lAPZ8THI+kkvP3j8nGkh2dqGKsUK4pnsDH
7p6lVe/rQpv5LGgWgWT/sXRY/VXoQZ+1ONIy/AhMUwiXGffoQQaqRc5L3gS+
1hO+e7qiB3HYjt0xek3eBxp9MHipF5nJcSSWPSFwwyG2m576fWjzlGrZuDFZ
/6l1kp9s+9FWFodvfUYElqsT46v73o/6+R911BgQWERwYmB1sh85Rw9IBeiQ
/Tw4JSVnMYDaZSR9slUJ3LbZ0tTR+B9K5xvYHXmAnM9XmcYZ2kOohRmsKLyf
wNW2AXIufkPo00dmnrckgV8Sz7acqRlCE/sTSvRECGwYu+SZrDKM0jb+AuEC
BNY7zlJ05MwIYq3u9EuZY+Lv3Kai5hvGUDlD5HfKFBPfPb+6LHBoDOmJzt/7
MsbEZzPXN2deGkNZ7KfG3PqZeAsqfLXgPYYaBqz4uuqZ+AiH8Ig8YxzlP1D/
ufs7Ew//vXOIYJ1AcHuA+GYTJk67Vxd+pncSnb13/EL2TfL7M1w9+zimUNOv
8ITrukwcuv5q+hORKTRT133cXpNk7e73kben0IivVoDaSSauc2P3jxmYQrbB
aZnavEz88dbzfR5D04ifSPYe/MLAAstbhp4Oz6L8tw4dj6MYeItisuoVxhzy
/Pv8EyWcgV2jrArEJOfQrrlS/3kfBn7UVF6UZDqHVF53XXayI/NTJ/c2q8E5
ZH5cj3XqNANHg3ci/n/n0U7K5VrPCjpedoqRPNC0iFbMWgoPFtHxLVc3Dve5
RZTDjMmqwXR8NUllU9P6JdQnqJo1m0jHTsPTDXoaS+h+zA/Q4UPHcrbfEFG2
hA66OG87qEXHO2/Jdw3+XEZeOtteLNfS8OL1nWaGfqvI4qUNV3QZDdvavcxJ
TFpFJyO6KhTzaHjpKaE0W7GK6K8Vz9gl03DdXdYhGQ4WzK/XSnn0lobP/NJe
NQMs+Pud3d10ZRq+9+J8Gi2ZBa/7KyL98icVe3R9eZzrz4ovJMa87kyiYsfA
5L/dEaxY+dV6W5lYKi7657CGJZEV95WtWcoNpOLt99Le7i5lxUsnQngCH1Cx
FnF7SGWVFbt4ePIypah4zQcxpbxbbJi/J4R6ivSD4bjBAQ1pCv7sGKRW4cWD
bXYwWftOUnBJ/AsTbTcezNT8aWWtRMHF87o7Lt3nwU9rAq4436RgCfYrA5wq
PPgPX0GHvj8F37eRLz/DwoPn3DccODVPwQkzxm6n9LixUpX0Tp2f7HizEv96
6UvcuKpaRl6riB3HTIlkCipy4+caUQ6KdexYLVnwWpMMNz6hsV9q2yg7fnSu
6zgHFzfeJACF3LZz4KEb4Bp/PBc25lJbK/2CA7t6j+dIjXNiO8vqrYMqnPjA
6UsO53s58fFtLGbbrnHiWie/H9caOXH3b7mb6rc58aLN4XSzbE6sHnHocKgT
J/7KpqB27i0n3nhSb8vgN0587U/A7/y9nDg2UrRdheDC/lqfDXmNObD/Ifbv
IsVcuMT478phHQ4smlvhUVzDhZVTz6vrqHFgp0A7p1ttXDjEWVTU5zAHlq7q
j30zyYWlRWoHsrk58K0z9KqALaTHiW0yFIlmx15J4+vcLbgx9V+xuHA3Be9g
C47vXsODc8VtLD//oeCgYru+PEEerDwVUbmrhIIVUnn/he3iwfVV3Z0CiRQs
nxArL3eEB0eO10VmO1LwmHosBejx4B1F9g+kNlKwV1vBG+4vPJih5nnMRZEN
9x9bvlpziopPbZS1TT7BhnvT8q1+KlLxSckgnfZ9pL/bySuGaFBxjVv5PgkB
Nvw2f3KvihEVW6V4anp0s2Lvjkvvb76g4sd8XEddH7NiO2JK2OA3FZtrVR7U
jWbBr/VFvry9SMMnnjh+pr5nwRWyOtlfrtJwlcj97UmvWbDgQphmrgENO/H0
q01bseC6oI9jTVY0zGLP0ah8ggVPg53FP71puFLFKvf5x1W0xTf50ukqGk5Q
3Z1bPLSMInt4ly4pkH3c8qfkT/kyEvAt/XZcnY7fHT/3qDlhGd3dJWQjeIWO
p51pE6X3l9Etrtz92cZ0vEbpxz7FpSVkxd0o+sWNjlX1C1VyeZZQ81sTSY48
Oj5dfvpT99YF5HjcmiNKloHZewz5Zlbn0dOOpgn3EwxyzsscY+2cR5bDyQnG
8gx83NajnjViHnnqMvx5LpLPWc/JfhGZR4VsO6v7TRk46eW73Sl75lDKgfB7
guTc6l/JvIxlZtBpPZN38hQm9ky1qxJcP4OUm6ubf3Iz8ad81X7LuWk0GuhY
tpvJxL0/ZRjMX9PoRrFm8vQGJl5j67/CeXYaLT69aLVfiolNlKobWbWn0MWj
ov7ntJnYr1fWReXBBDpXdaChN4KJFYo4GmnaE8jUzOO+RTQTa65GpuYdnkD3
8o4FTsYzMfvZXhHxpXHUfeuEZTc551vN9sb+ejqOXu55oHSnkPQyEb1UQc8x
tNoxn0wfYOKFpuQmpDCMqNs/qsaRe0i4mmuKzjWMNMV8Z95KkJ4QL/lLPW8I
qe99lWAuRe7VM4ZxOSeHkB5F4AqvLIFd7EUIeZlB9PCO5o0+eQJbS1PS6zYN
IKHOUpUePTLnulUUR9b3o99eGZHHbhL4wyX5Xxa+/ag2Upz11W0yt4+Lvhtl
9CNEz0mnmRHYbFkRvmf5ixaOLwpFPCJw3KMxyZ89PejSFbYFYXKvK2lcs94R
3oPCwDKj35fAv4pVKl2v96AothfrIwMIvNfu7NYjf7qRk8NuNq4QAsN368R1
CrtQAEVNSieKwCwCWgoBLl2oxPR6VVMMgZ8dP7T5N+hC800LBmpkzrh62lVU
PK0TJYsLqAonErhY5NzUp+gONPIbH9Igc8pJql3xj5sdKN5c9PhLMsdYlucN
5Qt3oAPWeeKpWQS2pbHVR+9vR9bHRLKmSA/cUWpa93BNK4odzMhgLyVwY2bn
gndFA5LjP+dqTuYoyBfQcVytARnKrVGcayLw8h3OlI7KerTe9P4mOzKH8Woq
Rayv/oNczrm1GLST97NfYSuorUW5GY3Nf3oILFkcOvRTk2TDy5NCZM7zyJCL
kqmrQSXDkXz6pNdtSWzX4/9Tjc523L9XSnqca4Kufmh9JSpW9HCAIwR++1OE
OaNdieoFD9QokLny+qFzyj4JFeg8m8FeJTJ3pti8lipJ/I1CltQWDk6QufHH
Lb2rSWWo5kmAsRDpcbu58m93J5UiqVWzFhYyxx60PDnTkVyMyr+O18SRHhcU
OrV0KaUIeZ6W1n5A5t6WdqOGvJRC9OqtVLssmYunt2fT337PRxd53y+Fkx53
79XF3pHvecjSJ+GtEpmrRRKH355LzUVPHpZJDJPcGxN6619qNlJatjXeQOZ0
M9lbzIM/MPLrzqR/JDn560G+WTOE2NOtUnaQub7g/L599ua/kPQWO90Qki/r
PZicN/+JLnxNZBCkF3hMoBYLi3QkxMOCHpL8LKnsbqfFDyRYrGDdRLL93yvC
ypbf0ZUXNhIHSM9oUxF9lGiZjKLazXtcSTZcmZ5bY5WI3G5tC68g+cIz3iMt
PV+RbPJDvTWk1zhPny726I1F368abVciGa3QPsr2RaL8sYY+e5JzV6dzmvo+
onGuwi+RJIe5b9SeKg9BXvt32RaRXOmZkbq70g8VLP873UVyV1zduZ8f3dHz
xTVr/vM4xX1bbfcp2iK/NL/O/zzu5MZXPbIG+sAj2zrlP49TtWALlNZ6BmrC
417+53Fc6032D4h7g7juk/qDJEsf/fo6RSwI7ODdf6yOZHbvhoRMvnAg9M1N
4AfJp1Z212/i+wwunlOc8SK5m/NMhvXaGABuPK03INksJPBqwZovQObhsZ97
SK4IV2l58SIBnN/gEj5CnkdYlJGJxIskoIONX0WTPOtdrl3olgKI8eUHV0l2
yCzcqeuWCpC41k12kn3yvNTHn6cB1/7nlyLJ8+cSDixle54JxP5VwWry/n4e
2av16HEWcGVhhN0g2f1h77kHhzGY3Dio2k3e/3kbjYBGyRzg5sUdW0d6G0/0
e3VXsVwgEvlCQ45kw1upVnt25IH0vZJqMWQ97TFGc3c3FAB3DTu5G2T9iXjd
6KXwFYK1hhZHv5D1mSQhfd6fUQSIKgnXKbJ+FTL6nGLYSsDx6eD1pmR9m2zt
2+Ey9BuMpuRKrZLeJlfiLNXfVw74JdYX85LsvlW7/ExnBXh1MCdtE9lPUqPx
I1P/KkHVjnXvBMj+Q8VKGrfbq4H+hOfN72R//oyw7HmoUwO+lLknvCQ97nTP
eIVrYw04eWRYQ4vs55DByRNva2pBVyrPxway/xen2yXvFv4B8fFSN5+Q80FK
IVlBU74esEVUWG9oI7DabE/Foex6cKxMuzWKnCfNXx0ihjMawGPTJ+gbOX+y
yl4Jr/naBOJDrpYY1hD4KLfK+RKJZrCGqpD8q4qs/2vF/+yjmsHmonXzRCWB
vX7tFyv/0ALufOgPDikjcP0tEbDFpw1U7durfj2fwIf8lmZCiXaQmpu151Eu
Oe+zzx/d6NFOOs07Y89sAp+w7Hzw+HQHoFK4KBG/COy4cW2z+LFOcOnylkqz
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
RCKrMv8P++0Sgg==
        "]]}}}, {
    DisplayFunction -> Identity, Axes -> {True, True}, AxesLabel -> {
       FormBox["\"x Re\"", TraditionalForm], 
       FormBox["\"y Im\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Epilog -> {{
        RGBColor[
         NCache[
          Rational[20, 51], 0.39215686274509803`], 
         NCache[
          Rational[14, 17], 0.8235294117647058], 
         NCache[
          Rational[50, 51], 0.9803921568627451]], 
        InterpretationBox[
         FilledCurveBox[
          
          BSplineCurve[{{2.8284271247461903`, 2.8284271247461903`}, {0., 
           5.656854249492381}, {-2.8284271247461903`, 
           2.8284271247461903`}, {-1.7677669529663689`, 
           1.7677669529663689`}, {-0.7071067811865476, 0.7071067811865476}, {
           0., 1.4142135623730951`}, {0.7071067811865476, 
           0.7071067811865476}, {1.7677669529663689`, 1.7677669529663689`}, {
           2.8284271247461903`, 2.8284271247461903`}}, 
           SplineKnots -> {0, 0, 0, 
             Rational[1, 4], 
             Rational[1, 4], 
             Rational[1, 2], 
             Rational[1, 2], 
             Rational[3, 4], 
             Rational[3, 4], 1, 1, 1}, 
           SplineWeights -> {1., 1., 2, 2, 2, 1., 1., 1., 1.}, SplineDegree -> 
           2]], 
         Annulus[{0, 0}, {1, 4}, {Rational[1, 4] Pi, Rational[3, 4] Pi}]]}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, 
     Method -> {"ScalingFunctions" -> None}, PlotLabel -> FormBox[
       StyleBox[
        FrameBox["\"  z-plane \"", StripOnInput -> False], 10, 
        RGBColor[0, 0, 1], Background -> GrayLevel[1], StripOnInput -> False],
        TraditionalForm], PlotRange -> {{-5, 5}, {-5, 5}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        FaceForm[
         Opacity[0.3]], 
        RGBColor[1, 0, 0], 
        Dashing[{Small, Small}], 
        Thickness[0.007]], 
       LineBox[CompressedData["
1:eJxNz2tI02EYBfD577K2cCKTZYTVLLHmxJU455q11LSagjmHgUrbSvKDtEBN
Q7cFZkkaOi/TmInWdAxli9Y0MyQxXUwFt3QqaaaQlc7rZqnTrD74Pj1wOPy+
HHioYklCGobD4eL+5l/vnHdgVKKL+uPcjv27hpvm/cBMwc31yZPgROmjuven
wIqBwe+Pz4OJt1KlR0Vgl+5O04V68GeGdq308CzyckPS/euMOeQab5bek2FH
TmvTzHTQ5pHl3cI9jewFZPowrzudtYhMpnFfGf2WkNVbVHdjC3j7Y62xgbaM
jBO9tQQawH1LWeGa0yvIWq9sfZ0eHLh4sCok1IGc159kbjeCJUJ25sRZJ3JO
0Q1feQ/4ksGfSopcRe6qLK3g9IF33S0TXL38E3mOzCwmD4FnIo6ZYpN/ITdn
aRMyx8CU1KErYeI1ZN7Fmnr7FLjS9HzV59o6csEWv3NhBsxhPrW1pG0gq/yK
xcRFsLv2nfNrtgv+CSq16RzggAyMfiB/E3mkmWTJcIGVcnE+N3cLeZOQrDJs
g+nVdoKX7Dcy9snXTsZvIz+jrvi4PQTTZLsDmBiOu2Nb9PS9M9Hgb2UlsrZC
MI9JYBaYwe2N2iV3khtyiZLC94gDv5wWSIQKcPgLUfAJC9gSo9jQeWCwx67I
K+SD9+pFams52OLs581XgGvZLAe+ChzcS4oIrwYLJzomNar/9vdTDknV4Ix0
s8K/FRyqCwmLaANjzvovKa/BT+Q5QeVvwL3K4wObneAjPbJ9VhN4ljirt38A
t8YLkvBmcOx4QBOnH5zrGI3UDIIjw6LmuixgklxfPm4FNxIfTHkOg2/HLxfR
bWCOMoURMwLGj5tGRKNgKzVYnj+Gcf8A+FkjLg==
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        FaceForm[
         Opacity[0.3]], 
        RGBColor[1, 0, 0], 
        Dashing[{Small, Small}], 
        Thickness[0.007]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ/d7y1z8nvW/2ErouIb8VX9rD+L/XlS1zXYDg3zNY
+aNf7hWc/3FheEuywWs4f4aExXpBgzdwfur25c92a72F8+sPJ7AutXoH5+tc
9T6cYfEezhfWctiyVfUDnL/kryLv1jUI/v/Lc7Yu1PoI5zMk7rmouxnBP/2h
xHa50Sc4f6VI6fp56xF83feSU03NP8P51WfCT+3ciuDnJ1gV37X7AueXd6Qo
1R9F8D03qyvyOX+F8w9O6Z9scxrBZ66cEBrh9Q3Ofy1s1i18BcF/5qR83Cf6
O5y/umRlUPFNBF8s9kqgZdIPON/bY8aCNw8R/CnHF3+Vjf8J5zf/Dd737hmC
b2M299qa1F9w/mzV7iSu9wg+78oDX56W/kb4R7//2rrPCL52DpOOeM0fOP/6
ar6LOb8R/Gn1STUOFX/h/D+c0bM3/0fwdaa/4RSp+wfnM91WeiPM/h/OX6T4
SZaxHcHXqmPRNmNicIDxr7k9arB2Q/CfT+ip296K4HubcZo1n0Lwdy5d+YGX
jxHO75kmFszvi+BvehSanzARwbfdkGiscRHBv+g+8dc6fiaEeVaTq1uDEXy2
9YlLLk1C8HMyTk1U34bgX1I0rq+5yeQAAKKDwQU=
        "]]}}}, {
    DisplayFunction -> Identity, Axes -> {True, True}, AxesLabel -> {
       FormBox["\"u Re\"", TraditionalForm], 
       FormBox["\"v Im\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Epilog -> {{
        RGBColor[
         NCache[
          Rational[20, 51], 0.39215686274509803`], 
         NCache[
          Rational[14, 17], 0.8235294117647058], 
         NCache[
          Rational[50, 51], 0.9803921568627451]], 
        RectangleBox[
         NCache[{0.03, Rational[1, 4] Pi}, {0.03, 0.7853981633974483}], 
         NCache[{
           Log[4], Rational[3, 4] Pi}, {1.3862943611198906`, 
          2.356194490192345}]]}}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, 
     Method -> {"ScalingFunctions" -> None}, PlotLabel -> FormBox[
       StyleBox[
        FrameBox["\"  w-plane \"", StripOnInput -> False], 10, 
        RGBColor[1, 0, 0], Background -> GrayLevel[1], StripOnInput -> False],
        TraditionalForm], PlotRange -> {{-2, 3.5}, {0, 3}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.760639979314249*^9, 3.760640009562347*^9}, 
   3.760640099307952*^9, 3.7606401692853117`*^9, 3.76064032954209*^9, 
   3.7606403780325603`*^9, 3.760642507799185*^9, 3.760742020363524*^9}]
}, {2}]],

Cell["\<\
21 - 26 Failure of conformity
Find all points at which the mapping is not conformal. \
\>", "Text",
 CellChangeTimes->{{3.7603134085171757`*^9, 3.760313431028463*^9}},
 Background->RGBColor[
  0.9600061036087587, 0.9600061036087587, 0.9600061036087587]],

Cell["21.  A cubic polynomial", "Text",
 CellChangeTimes->{{3.760313434806233*^9, 3.7603134428844976`*^9}, 
   3.7603135013157263`*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell["\<\
As prompted by the s.m. a general cubic polynomial looks like\
\>", "Text",
 CellChangeTimes->{{3.760643423710329*^9, 3.760643441804798*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gcubp", "=", 
  RowBox[{
   RowBox[{
    SubscriptBox["a", "3"], 
    SuperscriptBox["z", "3"]}], "+", 
   RowBox[{
    SubscriptBox["a", "2"], 
    SuperscriptBox["z", "2"]}], "+", 
   RowBox[{
    SubscriptBox["a", "1"], "z"}], "+", 
   SubscriptBox["a", "0"]}]}]], "Input",
 CellChangeTimes->{{3.760643447955323*^9, 3.7606435220423813`*^9}}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["a", "0"], "+", 
  RowBox[{"z", " ", 
   SubscriptBox["a", "1"]}], "+", 
  RowBox[{
   SuperscriptBox["z", "2"], " ", 
   SubscriptBox["a", "2"]}], "+", 
  RowBox[{
   SuperscriptBox["z", "3"], " ", 
   SubscriptBox["a", "3"]}]}]], "Output",
 CellChangeTimes->{{3.760643506014328*^9, 3.760643523213111*^9}}]
}, Open  ]],

Cell["First get the derivative", "Text",
 CellChangeTimes->{{3.760643536249763*^9, 3.760643541457885*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"inter", "=", 
  RowBox[{"D", "[", 
   RowBox[{"gcubp", ",", 
    RowBox[{"{", "z", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.760643545533902*^9, 3.7606435607532454`*^9}, {
  3.760645036614027*^9, 3.760645038140295*^9}}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["a", "1"], "+", 
  RowBox[{"2", " ", "z", " ", 
   SubscriptBox["a", "2"]}], "+", 
  RowBox[{"3", " ", 
   SuperscriptBox["z", "2"], " ", 
   SubscriptBox["a", "3"]}]}]], "Output",
 CellChangeTimes->{3.760643561515801*^9, 3.760645039137371*^9}]
}, Open  ]],

Cell["Then solve this for roots", "Text",
 CellChangeTimes->{{3.760643570825048*^9, 3.760643574208794*^9}, 
   3.7606451566736507`*^9, 3.760645593958302*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"inter", "\[Equal]", "0"}], ",", 
   RowBox[{"{", "z", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.760644682559169*^9, 3.7606446844712543`*^9}, {
   3.7606451198260403`*^9, 3.760645125905616*^9}, 3.760645192257432*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", 
        SubscriptBox["a", "2"]}], "-", 
       SqrtBox[
        RowBox[{
         SubsuperscriptBox["a", "2", "2"], "-", 
         RowBox[{"3", " ", 
          SubscriptBox["a", "1"], " ", 
          SubscriptBox["a", "3"]}]}]]}], 
      RowBox[{"3", " ", 
       SubscriptBox["a", "3"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", 
        SubscriptBox["a", "2"]}], "+", 
       SqrtBox[
        RowBox[{
         SubsuperscriptBox["a", "2", "2"], "-", 
         RowBox[{"3", " ", 
          SubscriptBox["a", "1"], " ", 
          SubscriptBox["a", "3"]}]}]]}], 
      RowBox[{"3", " ", 
       SubscriptBox["a", "3"]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7606446856346073`*^9, 3.760645128295063*^9, 
  3.760645193628171*^9}]
}, Open  ]],

Cell["\<\
The above notation is according to the s.m., which is not the same as the \
text. Using the text notation,\
\>", "Text",
 CellChangeTimes->{{3.760645280892601*^9, 3.760645306596074*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gcubt", "=", 
  RowBox[{
   SuperscriptBox["z", "3"], "+", 
   RowBox[{"a", " ", 
    SuperscriptBox["z", "2"]}], "+", 
   RowBox[{"b", " ", "z"}], "+", "c"}]}]], "Input",
 CellChangeTimes->{{3.7606453159675817`*^9, 3.760645354316207*^9}}],

Cell[BoxData[
 RowBox[{"c", "+", 
  RowBox[{"b", " ", "z"}], "+", 
  RowBox[{"a", " ", 
   SuperscriptBox["z", "2"]}], "+", 
  SuperscriptBox["z", "3"]}]], "Output",
 CellChangeTimes->{3.760645355102027*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tinter", "=", 
  RowBox[{"D", "[", 
   RowBox[{"gcubt", ",", 
    RowBox[{"{", "z", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.760645357871073*^9, 3.760645383985856*^9}}],

Cell[BoxData[
 RowBox[{"b", "+", 
  RowBox[{"2", " ", "a", " ", "z"}], "+", 
  RowBox[{"3", " ", 
   SuperscriptBox["z", "2"]}]}]], "Output",
 CellChangeTimes->{{3.760645368796707*^9, 3.760645384949133*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"tinter", "\[Equal]", "0"}], ",", "z"}], "]"}]], "Input",
 CellChangeTimes->{{3.760645387774094*^9, 3.760645405209049*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", 
     RowBox[{
      FractionBox["1", "3"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "a"}], "-", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["a", "2"], "-", 
          RowBox[{"3", " ", "b"}]}]]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", 
     RowBox[{
      FractionBox["1", "3"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "a"}], "+", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["a", "2"], "-", 
          RowBox[{"3", " ", "b"}]}]]}], ")"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.760645405996583*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["\<\
The above roots make the derivative equal to zero, and that is what \
constitutes nonconformality.\
\>", "Text",
 CellChangeTimes->{{3.7606454579924393`*^9, 3.760645534933055*^9}, {
  3.760646730714898*^9, 3.760646731216072*^9}}],

Cell[BoxData[
 RowBox[{"23.", "  ", 
  FractionBox[
   RowBox[{"z", "+", 
    FractionBox["1", "2"]}], 
   RowBox[{
    RowBox[{"4", " ", 
     SuperscriptBox["z", "2"]}], "+", "2"}]]}]], "Text",
 CellChangeTimes->{{3.760313446062408*^9, 3.7603134914199944`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"yeeha", "=", 
  FractionBox[
   RowBox[{"z", "+", 
    FractionBox["1", "2"]}], 
   RowBox[{
    RowBox[{"4", " ", 
     SuperscriptBox["z", "2"]}], "+", "2"}]]}]], "Input",
 CellChangeTimes->{{3.7606458158028507`*^9, 3.7606458201573772`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   FractionBox["1", "2"], "+", "z"}], 
  RowBox[{"2", "+", 
   RowBox[{"4", " ", 
    SuperscriptBox["z", "2"]}]}]]], "Output",
 CellChangeTimes->{3.760645821964274*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"yeehaD", "=", 
  RowBox[{"D", "[", 
   RowBox[{"yeeha", ",", 
    RowBox[{"{", "z", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7606458249771643`*^9, 3.760645854531455*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"8", " ", "z", " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox["1", "2"], "+", "z"}], ")"}]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"2", "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["z", "2"]}]}], ")"}], "2"]]}], "+", 
  FractionBox["1", 
   RowBox[{"2", "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["z", "2"]}]}]]}]], "Output",
 CellChangeTimes->{{3.760645843558445*^9, 3.760645856499778*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Together", "[", "yeehaD", "]"}]], "Input",
 CellChangeTimes->{{3.760646023403206*^9, 3.760646029725998*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"1", "-", 
   RowBox[{"2", " ", "z"}], "-", 
   RowBox[{"2", " ", 
    SuperscriptBox["z", "2"]}]}], 
  RowBox[{"2", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["z", "2"]}]}], ")"}], "2"]}]]], "Output",
 CellChangeTimes->{3.760646030473229*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"1", "-", 
     RowBox[{"2", " ", "z"}], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox["z", "2"]}]}], "\[Equal]", "0"}], ",", "z"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7606460483546963`*^9, 3.760646063012718*^9}, {
  3.760646413701326*^9, 3.760646430673483*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "-", 
        SqrtBox["3"]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SqrtBox["3"]}], ")"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.760646064057325*^9, {3.7606464196408043`*^9, 3.760646431275544*^9}},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["\<\
The above green cell matches the text answer in content, as demonstrated by \
the following two cells.\
\>", "Text",
 CellChangeTimes->{{3.760646369027273*^9, 3.7606463902186813`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PossibleZeroQ", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SqrtBox["3"]}], ")"}], "2"], "-", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SqrtBox["3"]}], ")"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.760646206781322*^9, 3.7606462811195393`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.760646281786393*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PossibleZeroQ", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "-", 
      SqrtBox["3"]}], ")"}], "2"], "-", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "-", 
      SqrtBox["3"]}], ")"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.760646307022925*^9, 3.760646341556898*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.7606463170180273`*^9, 3.760646342521557*^9}}]
}, Open  ]],

Cell["25.  Cosh[z]", "Text",
 CellChangeTimes->{{3.7603135338520193`*^9, 3.7603135438183126`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"coshD", "=", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"Cosh", "[", "z", "]"}], ",", 
    RowBox[{"{", "z", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7606488205012217`*^9, 3.760648843839851*^9}}],

Cell[BoxData[
 RowBox[{"Sinh", "[", "z", "]"}]], "Output",
 CellChangeTimes->{3.760648846458315*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"coshD", "\[Equal]", "0"}], ",", "z"}], "]"}]], "Input",
 CellChangeTimes->{{3.760648855876051*^9, 3.7606488733428907`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", 
     RowBox[{"ConditionalExpression", "[", 
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
        RowBox[{"C", "[", "1", "]"}]}], ",", 
       RowBox[{
        RowBox[{"C", "[", "1", "]"}], "\[Element]", "Integers"}]}], "]"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", 
     RowBox[{"ConditionalExpression", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "+", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
         RowBox[{"C", "[", "1", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"C", "[", "1", "]"}], "\[Element]", "Integers"}]}], "]"}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7606488740489388`*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["\<\
The above green cell constant C[1] offers enough flexibility to match all the \
answers in the text.\
\>", "Text",
 CellChangeTimes->{{3.7606490076038017`*^9, 3.760649056049231*^9}}],

Cell["\<\
29 - 35 Magnification ratio, Jacobian
Find the magnification ratio, M. Describe what it tells you about the \
mapping. Where is M=1? Find the Jacobian J.\
\>", "Text",
 CellChangeTimes->{{3.760313599202656*^9, 3.760313648917646*^9}, 
   3.760649075939107*^9, {3.760650041027997*^9, 3.760650049226293*^9}},
 Background->RGBColor[
  0.9600061036087587, 0.9600061036087587, 0.9600061036087587]],

Cell[BoxData[
 RowBox[{
  RowBox[{"29.", "  ", "w"}], "=", 
  RowBox[{
   FractionBox["1", "2"], 
   SuperscriptBox["z", "2"]}]}]], "Text",
 CellChangeTimes->{{3.76031365220743*^9, 3.760313665237341*^9}, 
   3.760313708046639*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell["\<\
Examining the Magnification ratio amounts to looking at the absolute value of \
the first derivative.\
\>", "Text",
 CellChangeTimes->{{3.760651595699296*^9, 3.760651622417523*^9}, {
  3.760658546900795*^9, 3.760658552276888*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "z_", "]"}], "=", 
  RowBox[{
   FractionBox["1", "2"], 
   SuperscriptBox["z", "2"]}]}]], "Input",
 CellChangeTimes->{{3.76065162811714*^9, 3.760651646000821*^9}}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["z", "2"], "2"]], "Output",
 CellChangeTimes->{3.760651647085799*^9, 3.7606581045671597`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mdog", "=", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"f", "[", "z", "]"}], ",", 
    RowBox[{"{", "z", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.760651654941998*^9, 3.7606516746637383`*^9}, {
  3.760657915466978*^9, 3.760657921698361*^9}, {3.760658088389195*^9, 
  3.760658119386888*^9}}],

Cell[BoxData["z"], "Output",
 CellChangeTimes->{3.760658121339645*^9}]
}, Open  ]],

Cell["\<\
The cell below tells me that magnification equals 1 on the unit circle,\
\>", "Text",
 CellChangeTimes->{{3.760659424138022*^9, 3.760659446384366*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComplexExpand", "[", 
  RowBox[{"Abs", "[", 
   RowBox[{"x", "+", 
    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7606580115311337`*^9, 3.760658027901822*^9}, 
   3.760658061469029*^9, {3.760658132842548*^9, 3.760658137834198*^9}}],

Cell[BoxData[
 SqrtBox[
  RowBox[{
   SuperscriptBox["x", "2"], "+", 
   SuperscriptBox["y", "2"]}]]], "Output",
 CellChangeTimes->{3.7606580623827133`*^9, 3.7606581393482*^9}]
}, Open  ]],

Cell["\<\
The grid below shows some points close to the origin along with the resulting \
magnification there.\
\>", "Text",
 CellChangeTimes->{{3.760651934599422*^9, 3.7606519456953773`*^9}, {
  3.760652441768968*^9, 3.760652445839492*^9}, {3.7606582420164537`*^9, 
  3.760658278485672*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["x", "2"], "+", 
         SuperscriptBox["y", "2"]}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{3.760658154780669*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", 
       RowBox[{"-", "2"}], ",", 
       RowBox[{"2", " ", 
        SqrtBox["2"]}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", 
       RowBox[{"-", "1"}], ",", 
       SqrtBox["5"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "0", ",", "2"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "1", ",", 
       SqrtBox["5"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "2", ",", 
       RowBox[{"2", " ", 
        SqrtBox["2"]}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "2"}], ",", 
       SqrtBox["5"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}], ",", 
       SqrtBox["2"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1", ",", 
       SqrtBox["2"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "2", ",", 
       SqrtBox["5"]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"0", ",", "2", ",", "2"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "2"}], ",", 
       SqrtBox["5"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}], ",", 
       SqrtBox["2"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", 
       SqrtBox["2"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", 
       SqrtBox["5"]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"-", "2"}], ",", 
       RowBox[{"2", " ", 
        SqrtBox["2"]}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"-", "1"}], ",", 
       SqrtBox["5"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{"2", ",", "0", ",", "2"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"2", ",", "1", ",", 
       SqrtBox["5"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", 
       RowBox[{"2", " ", 
        SqrtBox["2"]}]}], "}"}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.76065815704177*^9}]
}, Open  ]],

Cell["The Jacobian, according to numbered line (5) on p. 741, is", "Text",
 CellChangeTimes->{{3.760652315996633*^9, 3.760652349298401*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"Abs", "[", 
   RowBox[{
    RowBox[{"f", "'"}], "[", "z", "]"}], "]"}], "2"]], "Input",
 CellChangeTimes->{{3.760652360572401*^9, 3.760652377409519*^9}}],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"Abs", "[", "z", "]"}], "2"]], "Output",
 CellChangeTimes->{3.760652378973454*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"31.", "  ", "w"}], "=", 
  FractionBox["1", "z"]}]], "Text",
 CellChangeTimes->{{3.760313668814686*^9, 3.7603136764126883`*^9}, 
   3.7603137184462357`*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "z_", "]"}], "=", 
  FractionBox["1", "z"]}]], "Input",
 CellChangeTimes->{{3.760652611070013*^9, 3.760652621162182*^9}}],

Cell[BoxData[
 FractionBox["1", "z"]], "Output",
 CellChangeTimes->{3.760652622292527*^9, 3.760658396086115*^9}]
}, Open  ]],

Cell["The expression for the Magnification ratio M is", "Text",
 CellChangeTimes->{{3.760653009853492*^9, 3.7606530205252457`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Abs", "[", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"f", "[", "z", "]"}], ",", 
    RowBox[{"{", "z", "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7606526281438227`*^9, 3.7606526377454147`*^9}, {
  3.760652948089468*^9, 3.760652953376773*^9}}],

Cell[BoxData[
 FractionBox["1", 
  SuperscriptBox[
   RowBox[{"Abs", "[", "z", "]"}], "2"]]], "Output",
 CellChangeTimes->{3.760652639212009*^9, 3.760652953969656*^9, 
  3.760658399014522*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComplexExpand", "[", 
  FractionBox["1", 
   SuperscriptBox[
    RowBox[{"Abs", "[", 
     RowBox[{"x", "+", 
      RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}], "2"]], "]"}]], "Input",
 CellChangeTimes->{{3.760655688860764*^9, 3.760655716311571*^9}}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{
   SuperscriptBox["x", "2"], "+", 
   SuperscriptBox["y", "2"]}]]], "Output",
 CellChangeTimes->{{3.76065570274587*^9, 3.760655718119042*^9}, 
   3.760658402205633*^9}]
}, Open  ]],

Cell["\<\
As the cell below shows, the magnification is equal to 1 on the unit circle.\
\>", "Text",
 CellChangeTimes->{{3.7606595006303263`*^9, 3.76065951706996*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"tes", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  FractionBox["1", 
   RowBox[{
    SuperscriptBox["x", "2"], "+", 
    SuperscriptBox["y", "2"]}]]}]], "Input",
 CellChangeTimes->{{3.7606558254801283`*^9, 3.760655845670497*^9}}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{
   SuperscriptBox["x", "2"], "+", 
   SuperscriptBox["y", "2"]}]]], "Output",
 CellChangeTimes->{3.7606558476708813`*^9, 3.760658406470084*^9}]
}, Open  ]],

Cell[TextData[{
 "The concept of Magnification concerns what the absolute value of the \
derivative may do to various ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", "0"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " values. Again, taking integers, the following grid shows what \
magnifications result from various x and y values around the origin."
}], "Text",
 CellChangeTimes->{{3.7606526546007223`*^9, 3.760652698135229*^9}, {
  3.760657813852326*^9, 3.76065784659556*^9}, {3.760658436897627*^9, 
  3.760658442906245*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", 
       RowBox[{"tes", "[", 
        RowBox[{"x", ",", "y"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7606574753869953`*^9, 3.760657485696476*^9}, {
  3.7606575165823383`*^9, 3.760657520158092*^9}, {3.760657737224804*^9, 
  3.7606577814940233`*^9}, {3.760658350516233*^9, 3.760658371987006*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(\\*FractionBox[\\\"1\\\
\", \\\"0\\\"]\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7606584109788322`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", 
       RowBox[{"-", "2"}], ",", 
       FractionBox["1", "8"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", 
       RowBox[{"-", "1"}], ",", 
       FractionBox["1", "5"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "0", ",", 
       FractionBox["1", "4"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "1", ",", 
       FractionBox["1", "5"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "2", ",", 
       FractionBox["1", "8"]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "2"}], ",", 
       FractionBox["1", "5"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}], ",", 
       FractionBox["1", "2"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1", ",", 
       FractionBox["1", "2"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "2", ",", 
       FractionBox["1", "5"]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "2"}], ",", 
       FractionBox["1", "4"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "ComplexInfinity"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"0", ",", "2", ",", 
       FractionBox["1", "4"]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "2"}], ",", 
       FractionBox["1", "5"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}], ",", 
       FractionBox["1", "2"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", 
       FractionBox["1", "2"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", 
       FractionBox["1", "5"]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"-", "2"}], ",", 
       FractionBox["1", "8"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"-", "1"}], ",", 
       FractionBox["1", "5"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{"2", ",", "0", ",", 
       FractionBox["1", "4"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{"2", ",", "1", ",", 
       FractionBox["1", "5"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", 
       FractionBox["1", "8"]}], "}"}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.760657157274764*^9, 3.7606574862759*^9, 3.760657521014456*^9, {
   3.7606577474546747`*^9, 3.7606577824714737`*^9}, {3.760658356895002*^9, 
   3.7606584109863157`*^9}}]
}, Open  ]],

Cell["And the Jacobian is equal to", "Text",
 CellChangeTimes->{{3.760658483064128*^9, 3.760658488942976*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   FractionBox["1", 
    SuperscriptBox[
     RowBox[{"Abs", "[", "z", "]"}], "2"]], ")"}], "2"]], "Input",
 CellChangeTimes->{{3.7606584987916107`*^9, 3.760658513573859*^9}}],

Cell[BoxData[
 FractionBox["1", 
  SuperscriptBox[
   RowBox[{"Abs", "[", "z", "]"}], "4"]]], "Output",
 CellChangeTimes->{3.7606585146967688`*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"33.", " ", "w"}], "=", 
  SuperscriptBox["e", "z"]}]], "Text",
 CellChangeTimes->{{3.760313678998296*^9, 3.7603136860043383`*^9}, 
   3.76031373015797*^9, 3.76031377066149*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "z", "]"}], "=", 
  SuperscriptBox["\[ExponentialE]", "z"]}]], "Input",
 CellChangeTimes->{{3.760658572833026*^9, 3.760658584923729*^9}}],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", "z"]], "Output",
 CellChangeTimes->{3.760658586608514*^9, 3.760658825979494*^9}]
}, Open  ]],

Cell["\<\
The cell below shows that the magnification is 1 wherever z=0; as the y value \
is not involved, this means that the entire y-axis has a magnification of 1.\
\>", "Text",
 CellChangeTimes->{{3.7606595477567043`*^9, 3.7606596187308702`*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Abs", "[", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"f", "[", "z", "]"}], ",", 
    RowBox[{"{", "z", "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7606585901930017`*^9, 3.760658602715373*^9}, {
  3.760658650091545*^9, 3.760658654123148*^9}}],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  RowBox[{"Re", "[", "z", "]"}]]], "Output",
 CellChangeTimes->{3.760658604110107*^9, 3.7606586547714167`*^9, 
  3.760658828917337*^9}]
}, Open  ]],

Cell[TextData[{
 "The above factor is equal to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", "x"], "."}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " To see some examples of the magnification around the origin, look at"
}], "Text",
 CellChangeTimes->{{3.7606586936734743`*^9, 3.760658720827321*^9}, {
  3.7606587716536093`*^9, 3.760658790493466*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", 
       SuperscriptBox["\[ExponentialE]", "x"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.760658842157057*^9, 3.76065884589935*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", 
       RowBox[{"-", "2"}], ",", 
       FractionBox["1", 
        SuperscriptBox["\[ExponentialE]", "2"]]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", 
       RowBox[{"-", "1"}], ",", 
       FractionBox["1", 
        SuperscriptBox["\[ExponentialE]", "2"]]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "0", ",", 
       FractionBox["1", 
        SuperscriptBox["\[ExponentialE]", "2"]]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "1", ",", 
       FractionBox["1", 
        SuperscriptBox["\[ExponentialE]", "2"]]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "2", ",", 
       FractionBox["1", 
        SuperscriptBox["\[ExponentialE]", "2"]]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "2"}], ",", 
       FractionBox["1", "\[ExponentialE]"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}], ",", 
       FractionBox["1", "\[ExponentialE]"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "0", ",", 
       FractionBox["1", "\[ExponentialE]"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1", ",", 
       FractionBox["1", "\[ExponentialE]"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "2", ",", 
       FractionBox["1", "\[ExponentialE]"]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "2"}], ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"0", ",", "2", ",", "1"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "2"}], ",", "\[ExponentialE]"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}], ",", "\[ExponentialE]"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "\[ExponentialE]"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "\[ExponentialE]"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "\[ExponentialE]"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"-", "2"}], ",", 
       SuperscriptBox["\[ExponentialE]", "2"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"-", "1"}], ",", 
       SuperscriptBox["\[ExponentialE]", "2"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{"2", ",", "0", ",", 
       SuperscriptBox["\[ExponentialE]", "2"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{"2", ",", "1", ",", 
       SuperscriptBox["\[ExponentialE]", "2"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", 
       SuperscriptBox["\[ExponentialE]", "2"]}], "}"}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.760658849495837*^9}]
}, Open  ]],

Cell["As for the Jacobian,", "Text",
 CellChangeTimes->{{3.760658884451229*^9, 3.7606588885140743`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   SuperscriptBox["\[ExponentialE]", "x"], ")"}], "2"]], "Input",
 CellChangeTimes->{{3.7606589204272957`*^9, 3.760658940344233*^9}}],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  RowBox[{"2", " ", "x"}]]], "Output",
 CellChangeTimes->{3.760658941774987*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["35. w = Log[z]", "Text",
 CellChangeTimes->{{3.760313688533733*^9, 3.760313695405725*^9}, 
   3.760313742989532*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "z_", "]"}], "=", 
  RowBox[{"Log", "[", "z", "]"}]}]], "Input",
 CellChangeTimes->{{3.760659053400434*^9, 3.7606590602303753`*^9}}],

Cell[BoxData[
 RowBox[{"Log", "[", "z", "]"}]], "Output",
 CellChangeTimes->{3.76065906187976*^9}]
}, Open  ]],

Cell["\<\
As the cell below testifies, and the grid corroborates, the magnification \
equals 1 on the unit circle.\
\>", "Text",
 CellChangeTimes->{{3.7606596484815617`*^9, 3.760659678256912*^9}, {
  3.7606597223193483`*^9, 3.760659725791162*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Abs", "[", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"f", "[", "z", "]"}], ",", 
    RowBox[{"{", "z", "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7606590663844433`*^9, 3.760659081421248*^9}}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"Abs", "[", "z", "]"}]]], "Output",
 CellChangeTimes->{3.760659082311325*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", 
       FractionBox["1", 
        RowBox[{"Abs", "[", 
         RowBox[{"x", "+", 
          RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7606592034432917`*^9, 3.760659218319923*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(\\*FractionBox[\\\"1\\\
\", \\\"0\\\"]\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7606592216351137`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", 
       RowBox[{"-", "2"}], ",", 
       FractionBox["1", 
        RowBox[{"2", " ", 
         SqrtBox["2"]}]]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", 
       RowBox[{"-", "1"}], ",", 
       FractionBox["1", 
        SqrtBox["5"]]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "0", ",", 
       FractionBox["1", "2"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "1", ",", 
       FractionBox["1", 
        SqrtBox["5"]]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "2", ",", 
       FractionBox["1", 
        RowBox[{"2", " ", 
         SqrtBox["2"]}]]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "2"}], ",", 
       FractionBox["1", 
        SqrtBox["5"]]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}], ",", 
       FractionBox["1", 
        SqrtBox["2"]]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1", ",", 
       FractionBox["1", 
        SqrtBox["2"]]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "2", ",", 
       FractionBox["1", 
        SqrtBox["5"]]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "2"}], ",", 
       FractionBox["1", "2"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "ComplexInfinity"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"0", ",", "2", ",", 
       FractionBox["1", "2"]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "2"}], ",", 
       FractionBox["1", 
        SqrtBox["5"]]}], "}"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}], ",", 
       FractionBox["1", 
        SqrtBox["2"]]}], "}"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", 
       FractionBox["1", 
        SqrtBox["2"]]}], "}"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", 
       FractionBox["1", 
        SqrtBox["5"]]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"-", "2"}], ",", 
       FractionBox["1", 
        RowBox[{"2", " ", 
         SqrtBox["2"]}]]}], "}"}], 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"-", "1"}], ",", 
       FractionBox["1", 
        SqrtBox["5"]]}], "}"}], 
     RowBox[{"{", 
      RowBox[{"2", ",", "0", ",", 
       FractionBox["1", "2"]}], "}"}], 
     RowBox[{"{", 
      RowBox[{"2", ",", "1", ",", 
       FractionBox["1", 
        SqrtBox["5"]]}], "}"}], 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", 
       FractionBox["1", 
        RowBox[{"2", " ", 
         SqrtBox["2"]}]]}], "}"}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.7606592216382637`*^9}]
}, Open  ]],

Cell["As for the Jacobian,", "Text",
 CellChangeTimes->{{3.760659234224166*^9, 3.760659237598996*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   FractionBox["1", 
    RowBox[{"Abs", "[", "z", "]"}]], ")"}], "2"]], "Input",
 CellChangeTimes->{{3.7606592823152227`*^9, 3.760659303244841*^9}}],

Cell[BoxData[
 FractionBox["1", 
  SuperscriptBox[
   RowBox[{"Abs", "[", "z", "]"}], "2"]]], "Output",
 CellChangeTimes->{3.7606593043799143`*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]]
},
WindowSize->{1366, 843},
WindowMargins->{{4, Automatic}, {Automatic, 4}},
Magnification:>1.5 Inherited,
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 10, \
2015)",
StyleDefinitions->"Charter1.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 221, 5, 51, "Text",
 Evaluatable->False],
Cell[624, 20, 73, 1, 45, "Input"],
Cell[700, 23, 412, 14, 76, "Text"],
Cell[1115, 39, 985, 23, 122, "Text"],
Cell[2103, 64, 381, 10, 50, "Text"],
Cell[2487, 76, 73, 1, 45, "Input"],
Cell[2563, 79, 125, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[2713, 84, 271, 6, 50, "Input"],
Cell[2987, 92, 169, 3, 49, "Output"]
}, Open  ]],
Cell[3171, 98, 97, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[3293, 103, 182, 4, 47, "Input"],
Cell[3478, 109, 121, 2, 45, "Output"]
}, Open  ]],
Cell[3614, 114, 328, 6, 86, "Text"],
Cell[CellGroupData[{
Cell[3967, 124, 248, 5, 45, "Input"],
Cell[4218, 131, 116, 2, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4371, 138, 270, 6, 75, "Input"],
Cell[4644, 146, 140, 3, 76, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4821, 154, 329, 6, 71, "Input"],
Cell[5153, 162, 187, 3, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5377, 170, 352, 7, 71, "Input"],
Cell[5732, 179, 197, 3, 45, "Output"]
}, Open  ]],
Cell[5944, 185, 129, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[6098, 190, 7874, 220, 718, "Input"],
Cell[13975, 412, 5293, 124, 519, "Output"]
}, {2}]],
Cell[19280, 539, 284, 7, 110, "Text"],
Cell[19567, 548, 364, 10, 49, "Text"],
Cell[19934, 560, 190, 3, 75, "Text"],
Cell[20127, 565, 73, 1, 45, "Input"],
Cell[20203, 568, 358, 10, 66, "Text"],
Cell[20564, 580, 297, 6, 51, "Text"],
Cell[CellGroupData[{
Cell[20886, 590, 372, 10, 47, "Input"],
Cell[21261, 602, 218, 6, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21516, 613, 367, 10, 47, "Input"],
Cell[21886, 625, 218, 6, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22141, 636, 145, 3, 45, "Input"],
Cell[22289, 641, 118, 3, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22444, 649, 145, 3, 45, "Input"],
Cell[22592, 654, 123, 3, 45, "Output"]
}, Open  ]],
Cell[22730, 660, 178, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[22933, 668, 507, 14, 45, "Input"],
Cell[23443, 684, 830, 28, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24310, 717, 236, 5, 45, "Input"],
Cell[24549, 724, 415, 15, 45, "Output"]
}, Open  ]],
Cell[24979, 742, 324, 6, 86, "Text"],
Cell[CellGroupData[{
Cell[25328, 752, 6352, 178, 394, "Input"],
Cell[31683, 932, 3637, 79, 418, "Output"]
}, {2}]],
Cell[35332, 1014, 362, 6, 51, "Text"],
Cell[35697, 1022, 159, 3, 51, "Text"],
Cell[CellGroupData[{
Cell[35881, 1029, 407, 12, 45, "Input"],
Cell[36291, 1043, 783, 27, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37111, 1075, 233, 5, 45, "Input"],
Cell[37347, 1082, 417, 15, 45, "Output"]
}, Open  ]],
Cell[37779, 1100, 228, 4, 86, "Text"],
Cell[CellGroupData[{
Cell[38032, 1108, 6616, 186, 394, "Input"],
Cell[44651, 1296, 3747, 87, 378, "Output"]
}, {2}]],
Cell[48410, 1386, 234, 4, 51, "Text"],
Cell[48647, 1392, 202, 3, 75, "Text"],
Cell[48852, 1397, 73, 1, 45, "Input"],
Cell[48928, 1400, 102, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[49055, 1405, 339, 10, 47, "Input"],
Cell[49397, 1417, 181, 4, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49615, 1426, 343, 10, 47, "Input"],
Cell[49961, 1438, 182, 4, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50180, 1447, 341, 11, 45, "Input"],
Cell[50524, 1460, 827, 27, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51388, 1492, 166, 4, 45, "Input"],
Cell[51557, 1498, 457, 15, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52051, 1518, 5901, 171, 394, "Input"],
Cell[57955, 1691, 3259, 72, 418, "Output"]
}, {2}]],
Cell[61226, 1766, 259, 5, 86, "Text"],
Cell[CellGroupData[{
Cell[61510, 1775, 412, 12, 45, "Input"],
Cell[61925, 1789, 857, 28, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62819, 1822, 235, 5, 45, "Input"],
Cell[63057, 1829, 461, 15, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63555, 1849, 6276, 176, 394, "Input"],
Cell[69834, 2027, 3952, 93, 397, "Output"]
}, {2}]],
Cell[73798, 2123, 314, 6, 86, "Text"],
Cell[74115, 2131, 276, 6, 110, "Text"],
Cell[74394, 2139, 498, 15, 94, "Text"],
Cell[74895, 2156, 73, 1, 45, "Input"],
Cell[74971, 2159, 160, 3, 51, "Text"],
Cell[75134, 2164, 1170, 33, 57, "Input"],
Cell[76307, 2199, 1522, 51, 153, "Text"],
Cell[77832, 2252, 93, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[77950, 2257, 10336, 274, 919, "Input"],
Cell[88289, 2533, 59989, 1034, 463, "Output"]
}, {2}]],
Cell[148290, 3570, 384, 8, 51, "Text"],
Cell[148677, 3580, 236, 3, 75, "Text"],
Cell[148916, 3585, 73, 1, 45, "Input"],
Cell[148992, 3588, 436, 12, 67, "Text"],
Cell[CellGroupData[{
Cell[149453, 3604, 295, 9, 47, "Input"],
Cell[149751, 3615, 169, 5, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149957, 3625, 326, 9, 47, "Input"],
Cell[150286, 3636, 169, 5, 45, "Output"]
}, Open  ]],
Cell[150470, 3644, 192, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[150687, 3652, 246, 7, 45, "Input"],
Cell[150936, 3661, 220, 7, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[151193, 3673, 228, 5, 45, "Input"],
Cell[151424, 3680, 134, 4, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[151595, 3689, 248, 7, 45, "Input"],
Cell[151846, 3698, 220, 7, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[152103, 3710, 228, 5, 45, "Input"],
Cell[152334, 3717, 136, 4, 45, "Output"]
}, Open  ]],
Cell[152485, 3724, 370, 11, 52, "Text"],
Cell[CellGroupData[{
Cell[152880, 3739, 6500, 176, 560, "Input"],
Cell[159383, 3917, 4280, 95, 378, "Output"]
}, {2}]],
Cell[163675, 4015, 394, 12, 93, "Text"],
Cell[164072, 4029, 73, 1, 45, "Input"],
Cell[164148, 4032, 178, 4, 51, "Text"],
Cell[164329, 4038, 756, 24, 77, "Input"],
Cell[165088, 4064, 294, 6, 51, "Text"],
Cell[165385, 4072, 320, 9, 49, "Input"],
Cell[165708, 4083, 97, 1, 51, "Text"],
Cell[165808, 4086, 200, 5, 76, "Input"],
Cell[166011, 4093, 218, 4, 51, "Text"],
Cell[166232, 4099, 279, 8, 76, "Input"],
Cell[166514, 4109, 142, 1, 51, "Text"],
Cell[166659, 4112, 205, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[166889, 4120, 332, 10, 54, "Input"],
Cell[167224, 4132, 251, 6, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[167512, 4143, 332, 10, 54, "Input"],
Cell[167847, 4155, 249, 6, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168133, 4166, 329, 10, 47, "Input"],
Cell[168465, 4178, 375, 11, 80, "Output"]
}, Open  ]],
Cell[168855, 4192, 298, 6, 51, "Text"],
Cell[CellGroupData[{
Cell[169178, 4202, 214, 5, 75, "Input"],
Cell[169395, 4209, 131, 2, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[169563, 4216, 165, 4, 75, "Input"],
Cell[169731, 4222, 129, 2, 69, "Output"]
}, Open  ]],
Cell[169875, 4227, 181, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[170081, 4235, 248, 5, 45, "Input"],
Cell[170332, 4242, 124, 2, 45, "Output"]
}, Open  ]],
Cell[170471, 4247, 338, 7, 75, "Text"],
Cell[170812, 4256, 1315, 38, 81, "Input"],
Cell[172130, 4296, 692, 11, 155, "Text"],
Cell[CellGroupData[{
Cell[172847, 4311, 6310, 151, 427, "Input"],
Cell[179160, 4464, 528, 11, 56, "Message"],
Cell[179691, 4477, 527, 11, 56, "Message"],
Cell[180221, 4490, 41220, 687, 523, "Output"]
}, {4}]],
Cell[221453, 5180, 390, 7, 120, "Text"],
Cell[CellGroupData[{
Cell[221868, 5191, 4591, 124, 372, "Input"],
Cell[226462, 5317, 21669, 369, 556, "Output"]
}, {2}]],
Cell[248143, 5689, 361, 6, 86, "Text"],
Cell[248507, 5697, 1809, 47, 123, "Input"],
Cell[250319, 5746, 1211, 34, 94, "Input"],
Cell[251533, 5782, 1234, 34, 94, "Input"],
Cell[252770, 5818, 1236, 34, 94, "Input"],
Cell[254009, 5854, 1214, 34, 94, "Input"],
Cell[CellGroupData[{
Cell[255248, 5892, 188, 4, 45, "Input"],
Cell[255439, 5898, 66888, 1111, 360, "Output"]
}, Open  ]],
Cell[322342, 7012, 395, 10, 70, "Text"],
Cell[322740, 7024, 73, 1, 45, "Input"],
Cell[322816, 7027, 161, 2, 51, "Text"],
Cell[CellGroupData[{
Cell[323002, 7033, 229, 5, 75, "Input"],
Cell[323234, 7040, 227, 5, 45, "Output"]
}, Open  ]],
Cell[323476, 7048, 283, 6, 51, "Text"],
Cell[CellGroupData[{
Cell[323784, 7058, 208, 4, 75, "Input"],
Cell[323995, 7064, 205, 4, 75, "Output"]
}, Open  ]],
Cell[324215, 7071, 207, 4, 51, "Text"],
Cell[324425, 7077, 254, 6, 46, "Text"],
Cell[324682, 7085, 93, 1, 51, "Text"],
Cell[324778, 7088, 1745, 56, 133, "Text"],
Cell[CellGroupData[{
Cell[326548, 7148, 169, 4, 45, "Input"],
Cell[326720, 7154, 127, 2, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[326884, 7161, 150, 3, 45, "Input"],
Cell[327037, 7166, 110, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[327184, 7172, 537, 10, 45, "Input"],
Cell[327724, 7184, 564, 12, 45, "Output"]
}, Open  ]],
Cell[328303, 7199, 1785, 33, 148, "Input"],
Cell[330091, 7234, 193, 4, 45, "Input"],
Cell[330287, 7240, 264, 5, 86, "Text"],
Cell[CellGroupData[{
Cell[330576, 7249, 10841, 281, 1195, "Input"],
Cell[341420, 7532, 283831, 4820, 493, "Output"]
}, {2}]],
Cell[625263, 12355, 445, 12, 94, "Text"],
Cell[625711, 12369, 73, 1, 45, "Input"],
Cell[625787, 12372, 193, 4, 51, "Text"],
Cell[625983, 12378, 1203, 30, 55, "Input"],
Cell[627189, 12410, 281, 5, 86, "Text"],
Cell[CellGroupData[{
Cell[627495, 12419, 5465, 146, 447, "Input"],
Cell[632963, 12567, 42492, 734, 496, "Output"]
}, {2}]],
Cell[675467, 13304, 263, 6, 110, "Text"],
Cell[675733, 13312, 171, 3, 75, "Text"],
Cell[675907, 13317, 73, 1, 45, "Input"],
Cell[675983, 13320, 151, 3, 51, "Text"],
Cell[CellGroupData[{
Cell[676159, 13327, 368, 12, 49, "Input"],
Cell[676530, 13341, 346, 11, 49, "Output"]
}, Open  ]],
Cell[676891, 13355, 106, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[677022, 13360, 251, 6, 45, "Input"],
Cell[677276, 13368, 283, 8, 49, "Output"]
}, Open  ]],
Cell[677574, 13379, 157, 2, 51, "Text"],
Cell[CellGroupData[{
Cell[677756, 13385, 282, 6, 45, "Input"],
Cell[678041, 13393, 956, 32, 101, "Output"]
}, Open  ]],
Cell[679012, 13428, 196, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[679233, 13436, 263, 7, 49, "Input"],
Cell[679499, 13445, 207, 6, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[679743, 13456, 201, 5, 45, "Input"],
Cell[679947, 13463, 207, 5, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[680191, 13473, 183, 4, 45, "Input"],
Cell[680377, 13479, 745, 26, 101, "Output"]
}, Open  ]],
Cell[681137, 13508, 239, 5, 51, "Text"],
Cell[681379, 13515, 299, 9, 104, "Text"],
Cell[681681, 13526, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[681779, 13531, 267, 8, 89, "Input"],
Cell[682049, 13541, 208, 7, 89, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[682294, 13553, 203, 5, 45, "Input"],
Cell[682500, 13560, 504, 17, 102, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[683041, 13582, 132, 2, 45, "Input"],
Cell[683176, 13586, 352, 12, 94, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[683565, 13603, 347, 10, 54, "Input"],
Cell[683915, 13615, 610, 21, 99, "Output"]
}, Open  ]],
Cell[684540, 13639, 194, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[684759, 13647, 404, 14, 94, "Input"],
Cell[685166, 13663, 73, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[685276, 13669, 402, 14, 94, "Input"],
Cell[685681, 13685, 99, 1, 45, "Output"]
}, Open  ]],
Cell[685795, 13689, 134, 2, 75, "Text"],
Cell[685932, 13693, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[686030, 13698, 231, 6, 45, "Input"],
Cell[686264, 13706, 100, 2, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[686401, 13713, 184, 4, 45, "Input"],
Cell[686588, 13719, 858, 24, 99, "Output"]
}, Open  ]],
Cell[687461, 13746, 192, 4, 51, "Text"],
Cell[687656, 13752, 401, 8, 144, "Text"],
Cell[688060, 13762, 266, 8, 93, "Text"],
Cell[688329, 13772, 73, 1, 45, "Input"],
Cell[688405, 13775, 240, 5, 51, "Text"],
Cell[CellGroupData[{
Cell[688670, 13784, 208, 6, 75, "Input"],
Cell[688881, 13792, 138, 3, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[689056, 13800, 325, 8, 45, "Input"],
Cell[689384, 13810, 70, 1, 45, "Output"]
}, Open  ]],
Cell[689469, 13814, 199, 4, 75, "Text"],
Cell[CellGroupData[{
Cell[689693, 13822, 297, 6, 45, "Input"],
Cell[689993, 13830, 176, 5, 64, "Output"]
}, Open  ]],
Cell[690184, 13838, 292, 6, 51, "Text"],
Cell[CellGroupData[{
Cell[690501, 13848, 569, 18, 70, "Input"],
Cell[691073, 13868, 2837, 102, 264, "Output"]
}, Open  ]],
Cell[693925, 13973, 140, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[694090, 13978, 195, 5, 49, "Input"],
Cell[694288, 13985, 161, 4, 73, "Output"]
}, Open  ]],
Cell[694464, 13992, 227, 6, 93, "Text"],
Cell[694694, 14000, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[694792, 14005, 165, 4, 75, "Input"],
Cell[694960, 14011, 112, 2, 75, "Output"]
}, Open  ]],
Cell[695087, 14016, 131, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[695243, 14021, 282, 7, 45, "Input"],
Cell[695528, 14030, 192, 5, 82, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[695757, 14040, 275, 7, 82, "Input"],
Cell[696035, 14049, 212, 6, 82, "Output"]
}, Open  ]],
Cell[696262, 14058, 205, 4, 75, "Text"],
Cell[CellGroupData[{
Cell[696492, 14066, 270, 8, 82, "Input"],
Cell[696765, 14076, 187, 5, 82, "Output"]
}, Open  ]],
Cell[696967, 14084, 540, 12, 88, "Text"],
Cell[CellGroupData[{
Cell[697532, 14100, 699, 18, 45, "Input"],
Cell[698234, 14120, 478, 10, 56, "Message"],
Cell[698715, 14132, 3135, 105, 248, "Output"]
}, Open  ]],
Cell[701865, 14240, 110, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[702000, 14245, 222, 6, 86, "Input"],
Cell[702225, 14253, 185, 5, 106, "Output"]
}, Open  ]],
Cell[702425, 14261, 247, 6, 70, "Text"],
Cell[702675, 14269, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[702773, 14274, 181, 4, 47, "Input"],
Cell[702957, 14280, 129, 2, 47, "Output"]
}, Open  ]],
Cell[703101, 14285, 288, 5, 110, "Text"],
Cell[CellGroupData[{
Cell[703414, 14294, 280, 7, 45, "Input"],
Cell[703697, 14303, 185, 4, 49, "Output"]
}, Open  ]],
Cell[703897, 14310, 395, 10, 52, "Text"],
Cell[CellGroupData[{
Cell[704317, 14324, 527, 15, 54, "Input"],
Cell[704847, 14341, 3285, 102, 228, "Output"]
}, Open  ]],
Cell[708147, 14446, 104, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[708276, 14451, 180, 4, 56, "Input"],
Cell[708459, 14457, 168, 4, 73, "Output"]
}, Open  ]],
Cell[708642, 14464, 158, 3, 75, "Text"],
Cell[708803, 14469, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[708901, 14474, 176, 4, 47, "Input"],
Cell[709080, 14480, 98, 2, 45, "Output"]
}, Open  ]],
Cell[709193, 14485, 285, 6, 75, "Text"],
Cell[CellGroupData[{
Cell[709503, 14495, 231, 6, 45, "Input"],
Cell[709737, 14503, 120, 3, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[709894, 14511, 622, 18, 80, "Input"],
Cell[710519, 14531, 478, 10, 56, "Message"],
Cell[711000, 14543, 3394, 122, 288, "Output"]
}, Open  ]],
Cell[714409, 14668, 102, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[714536, 14673, 195, 5, 81, "Input"],
Cell[714734, 14680, 185, 5, 106, "Output"]
}, Open  ]]
}
]
*)


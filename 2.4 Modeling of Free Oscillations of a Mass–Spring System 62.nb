(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    366326,       7578]
NotebookOptionsPosition[    357930,       7312]
NotebookOutlinePosition[    358318,       7329]
CellTagsIndexPosition[    358275,       7326]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[""], "Input",
 Evaluatable->False,
 CellChangeTimes->{3.7679144725263433`*^9}],

Cell["Develop the SHM formulas", "Text",
 CellChangeTimes->{{3.673101128164098*^9, 3.673101137498191*^9}}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6731008493682213`*^9, 3.673100850755167*^9}, 
   3.767737679101822*^9, {3.772894016894498*^9, 3.772894017403371*^9}}],

Cell["For the undamped case", "Text",
 CellChangeTimes->{{3.76781180622843*^9, 3.767811809259308*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"undamped", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"m", " ", 
       RowBox[{
        RowBox[{"y", "''"}], "[", "t", "]"}]}], "+", 
      RowBox[{"k", " ", 
       RowBox[{"y", "[", "t", "]"}]}]}], "\[Equal]", "0"}], ",", 
    RowBox[{"y", "[", "t", "]"}], ",", "t"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"numbered", " ", "line", " ", 
    RowBox[{"(", "3", ")"}], " ", "on", " ", 
    RowBox[{"p", ".", " ", "63"}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6731008523670073`*^9, 3.673100879820157*^9}, {
  3.673100912037117*^9, 3.673100913666965*^9}, {3.673101003360283*^9, 
  3.6731010152072153`*^9}, {3.673101164555794*^9, 3.673101178801*^9}, {
  3.673101805611171*^9, 3.673101810977234*^9}, {3.673114446268138*^9, 
  3.673114446995764*^9}, {3.7678080702317944`*^9, 3.767808077774066*^9}, {
  3.7678082942259083`*^9, 3.767808313271887*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"C", "[", "1", "]"}], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{
         SqrtBox["k"], " ", "t"}], 
        SqrtBox["m"]], "]"}]}], "+", 
     RowBox[{
      RowBox[{"C", "[", "2", "]"}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{
         SqrtBox["k"], " ", "t"}], 
        SqrtBox["m"]], "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6731008822148533`*^9, 3.673100914259384*^9, {3.673101009357032*^9, 
   3.6731010427075853`*^9}, 3.673101143545291*^9, 3.673101184103272*^9, 
   3.673101822664968*^9, 3.673114309268882*^9, 3.673114453909967*^9, 
   3.767808087023781*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"simpfac", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"undamped", "/.", 
    RowBox[{
     FractionBox[
      SqrtBox["k"], 
      SqrtBox["m"]], "\[Rule]", 
     SubscriptBox["\[Omega]", "0"]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.673100917948515*^9, 3.673100960801139*^9}, {
  3.6731010260241823`*^9, 3.673101071390358*^9}, {3.673101814578929*^9, 
  3.673101815105157*^9}, {3.767808095383092*^9, 3.767808098015575*^9}, {
  3.7678081840359707`*^9, 3.767808186563201*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"C", "[", "1", "]"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"t", " ", 
        SubscriptBox["\[Omega]", "0"]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"C", "[", "2", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"t", " ", 
        SubscriptBox["\[Omega]", "0"]}], "]"}]}]}]}], "}"}], "}"}]], "Output",\

 CellChangeTimes->{
  3.6731009647311993`*^9, {3.673101033854046*^9, 3.673101044273181*^9}, 
   3.673101074316483*^9, 3.673101145844307*^9, 3.673101186265748*^9, 
   3.6731018273543158`*^9, 3.673114312073868*^9, 3.673114457583798*^9, 
   3.7678081011297092`*^9, 3.767808189042729*^9}]
}, Open  ]],

Cell["And a simplified version of undamped", "Text",
 CellChangeTimes->{{3.7678118162751837`*^9, 3.767811821539151*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"simpconst", "=", 
  RowBox[{"simpfac", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"C", "[", "1", "]"}], "\[Rule]", "A"}], ",", 
     RowBox[{
      RowBox[{"C", "[", "2", "]"}], "\[Rule]", "B"}]}], "}"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"numbered", " ", "line", " ", 
     RowBox[{"(", "4", ")"}], " ", "on", " ", 
     RowBox[{"p", ".", " ", "63"}]}], " ", "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.673101201571908*^9, 3.673101234566682*^9}, {
  3.7678081931872683`*^9, 3.767808204602697*^9}, {3.767808358607707*^9, 
  3.7678083902858257`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"A", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"t", " ", 
        SubscriptBox["\[Omega]", "0"]}], "]"}]}], "+", 
     RowBox[{"B", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"t", " ", 
        SubscriptBox["\[Omega]", "0"]}], "]"}]}]}]}], "}"}], "}"}]], "Output",\

 CellChangeTimes->{3.673101236189274*^9, 3.673101836797303*^9, 
  3.6731143147187366`*^9, 3.6731144636542463`*^9, 3.767808106624546*^9, 
  3.767808205932638*^9}]
}, Open  ]],

Cell["Whereas for the damped case", "Text",
 CellChangeTimes->{{3.767811827626748*^9, 3.767811831506731*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"damped", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"m", " ", 
       RowBox[{
        RowBox[{"y", "''"}], "[", "t", "]"}]}], "+", 
      RowBox[{"c", " ", 
       RowBox[{
        RowBox[{"y", "'"}], "[", "t", "]"}]}], "+", 
      RowBox[{"k", " ", 
       RowBox[{"y", "[", "t", "]"}]}]}], "\[Equal]", "0"}], ",", 
    RowBox[{"y", "[", "t", "]"}], ",", "t"}], "]"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"numbered", " ", "line", " ", 
    RowBox[{"(", "5", ")"}], " ", "on", " ", 
    RowBox[{"p", ".", " ", "64"}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.673119688637101*^9, 3.6731197203353243`*^9}, {
  3.767808113126593*^9, 3.767808115205105*^9}, {3.767808437022065*^9, 
  3.767808448484405*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["c", "m"]}], "-", 
          FractionBox[
           SqrtBox[
            RowBox[{
             SuperscriptBox["c", "2"], "-", 
             RowBox[{"4", " ", "k", " ", "m"}]}]], "m"]}], ")"}], " ", "t"}]],
       " ", 
      RowBox[{"C", "[", "1", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["c", "m"]}], "+", 
          FractionBox[
           SqrtBox[
            RowBox[{
             SuperscriptBox["c", "2"], "-", 
             RowBox[{"4", " ", "k", " ", "m"}]}]], "m"]}], ")"}], " ", "t"}]],
       " ", 
      RowBox[{"C", "[", "2", "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.673119722423588*^9, 3.767808119991304*^9, 
  3.767808210178055*^9}]
}, Open  ]],

Cell["\<\
The constant c is called the damping constant. The constant k is Hook\
\[CloseCurlyQuote]s, and m is the mass. On text p. 65 a box of cases is \
shown, as in the following grid.\
\>", "Text",
 CellChangeTimes->{{3.767808635567411*^9, 3.767808715364585*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\"\<Case I\>\"", ",", " ", 
       "\"\<\!\(\*SuperscriptBox[\(c\), \(2\)]\) > 4mk\>\"", ",", 
       "\"\<Distinct real roots \!\(\*SubscriptBox[\(\[Lambda]\), \(1\)]\),\!\
\(\*SubscriptBox[\(\[Lambda]\), \(2\)]\)\>\"", ",", "\"\<Overdamping\>\""}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Case II\>\"", ",", " ", 
       "\"\<\!\(\*SuperscriptBox[\(c\), \(2\)]\) = 4mk\>\"", ",", 
       "\"\<A real double root\>\"", ",", "\"\<Critical damping\>\""}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Case III\>\"", ",", " ", 
       "\"\<\!\(\*SuperscriptBox[\(c\), \(2\)]\) < 4mk\>\"", ",", 
       "\"\<Complex conjugate roots\>\"", ",", "\"\<Underdamping\>\""}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7678087192972927`*^9, 3.7678088319613533`*^9}, {
  3.7678088757619247`*^9, 3.767809009516856*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Case I\"\>", "\<\"\\!\\(\\*SuperscriptBox[\\(c\\), \\(2\\)]\\) > \
4mk\"\>", "\<\"Distinct real roots \\!\\(\\*SubscriptBox[\\(\[Lambda]\\), \
\\(1\\)]\\),\\!\\(\\*SubscriptBox[\\(\[Lambda]\\), \\(2\\)]\\)\"\>", \
"\<\"Overdamping\"\>"},
    {"\<\"Case II\"\>", "\<\"\\!\\(\\*SuperscriptBox[\\(c\\), \\(2\\)]\\) = \
4mk\"\>", "\<\"A real double root\"\>", "\<\"Critical damping\"\>"},
    {"\<\"Case III\"\>", "\<\"\\!\\(\\*SuperscriptBox[\\(c\\), \\(2\\)]\\) < \
4mk\"\>", "\<\"Complex conjugate roots\"\>", "\<\"Underdamping\"\>"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.767808880645544*^9, 3.767808927272438*^9, 
  3.7678090106077423`*^9}]
}, {2}]],

Cell["1 - 10 Harmonic oscillations (undamped motion)", "Text",
 CellChangeTimes->{{3.767737905039435*^9, 3.767737923454118*^9}},
 Background->RGBColor[
  0.9600061036087587, 0.9600061036087587, 0.9600061036087587]],

Cell[TextData[{
 "1.  Initial value problem. Find the harmonic motion, numbered line (4), p. \
63, that starts from ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", "0"], TraditionalForm]]],
 " with initial velocity ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["v", "0"], TraditionalForm]]],
 ". Graph or sketch the solutions for ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Omega]", "0"], TraditionalForm]]],
 " = \[Pi], ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", "0"], TraditionalForm]]],
 " = 1, and various ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["v", "0"], TraditionalForm]]],
 " of your choice on common axes. At what t-values do all these curves \
intersect? Why?"
}], "Text",
 CellChangeTimes->{{3.767737934287184*^9, 3.767738047908845*^9}, {
  3.7678071153208523`*^9, 3.7678071336873093`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7728940276122417`*^9, 3.7728940280747967`*^9}}],

Cell[TextData[{
 "The harmonic motion equation is ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"y", "[", "t", "]"}], "=", 
   RowBox[{
    RowBox[{"A", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{
       SubscriptBox["\[Omega]", "0"], "t"}], "]"}]}], "+", 
    RowBox[{"B", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{
       SubscriptBox["\[Omega]", "0"], "t"}], "]"}]}]}]}]]],
 ". Only curves with the same ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", "0"], TraditionalForm]]],
 " will work around to intersect with each other, so I limited the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", "0"], TraditionalForm]]],
 " to the one asked for. (I don\[CloseCurlyQuote]t know whether it\
\[CloseCurlyQuote]s a plot defect, but I have to exend the interval of t \
slightly to get the four curves to intersect at t=3\[Pi].)"
}], "Text",
 CellChangeTimes->{{3.767815204085472*^9, 3.7678152128616533`*^9}, {
  3.767815274741021*^9, 3.767815275255865*^9}, {3.76781533084335*^9, 
  3.76781538559999*^9}, {3.767815421807126*^9, 3.767815457382037*^9}, {
  3.7678673626731167`*^9, 3.767867364848979*^9}, {3.767869336520522*^9, 
  3.767869356356909*^9}, {3.76989876748053*^9, 3.76989877118293*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Evaluate", "@", 
      RowBox[{"Table", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "t", "]"}], "+", 
         RowBox[{"B", " ", 
          RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"B", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"\[Pi]", " ", "t"}], "]"}], "+", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Pi]", " ", "t"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"3.01", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.7678150736519527`*^9, {3.767815120217572*^9, 3.767815152295884*^9}, {
   3.767815400648265*^9, 3.767815401464226*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
pNh/rA==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVmHk8VN8bx20zc2/WGWvMDCZkSwhp4TxkjRQhWpQW0kabbC3KnrRY0oIo
a9JC5SvMTZIkISmiLCX7vq+/+/tn5vV+PXPPOc/n+TznnDuK+70dDvHx8PCs
JT/+/917Xxi1dkUaq6z2usfDM4w05+/VXC3zRKrNew6lrBhG9AvtPC5l55CS
bJO1vuUw4kcCssZl4ajx5Yi4RcwwCkqJV9Epu40EUGbEjNwI+m/rr1z1skzU
Q6v/k6A/ir5n8vmsLHuNUiK0MCX3cdT1Na5OuewDYqmZbd8XP40eT13wHHn7
A1G/z5+/7ssDInWM6WWjP9AlDb/I2RAe8MnJiFDiNCG/QGPYHcsDentqsndc
bkIt87rX+Z/xQGkZq7/EtBkt6MXXtnXzQP21Yp+odz9R/eij9hoXXphdMeu/
4v0vFDvpuddUhw92L1xbZjTxC0mVL148bcwH3EbFe87Kv1Fn2RWHuzZ8EBJp
XRwZ+hsRZplDlYf4IPyc7dIUpw2ZvyrfkH2HD+it90zcOttQVdLGIu8lPlDO
Wl+hfrADafX6XO4o44dEvrnK0sAO9DGfGXWphh+E9rz55BDbgZymeevEm/lh
nL6xLqCsA7WU7uKXHeGHskCjliqFTjRuUmnziC0Ablth9EhrJ1oTW7Hs8TkB
SJw0Zz92/ovCynPP7lCkgJA9VRGd+ItufyzNualBgYuPK1Z8Df2L9DgR7oQ+
BTz2WarNFfxFuL268Zw1BfSrrPRsxLvQ9onjsl0nKVCfZLO570sXetqYlX2V
S45nbu+rYd2NDI8t+zBiT4V77T/p3P3diNtz2cp7FxXUL3g8cQjqRs0v8oJ/
HaSC1evAP/5Pu5FGqjD/rXNUCFXLcKiU7EGJvz3v2d6nwqLwnNahjh7Uav9K
SLCTCtdyQqum53qQ7Gbjzal9VGBainlES/Yi6U+7OlXHqbD+knJSvlUvCpmL
YwhRaOA7ulWQ72kv4vMvrlFUocFQ46N/yYF9qOpRnnrYIRpcOL36im58HyoI
3JS1+jgNRMSK2BV5fWhUN0er6gwNNK2/OA209yGj7xGm9VdocPjNzLsNVv0o
pPwPj1YqDdpS7B78kBhABdZ+VaJNNKg/PO3CyBtEbSsGFNyMMJiK+LI0/H4Q
Je/xUSs1xYCZnZHxpXUQbYja8ELMCgOPHsfxaOEh9LXkh+E1BwxmvJ5fpx0f
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
X/fzsYsj3P8BgGCHyg==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
i/YCAf4DUNbm8w==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 9.456193887305277}, {-3.1622763513507395`, 
       3.1622774187759624`}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         RowBox[{"cos", "(", "t", ")"}], "+", 
         RowBox[{"sin", "(", "t", ")"}]}], 
       RowBox[{
         RowBox[{"cos", "(", "t", ")"}], "+", 
         RowBox[{"2", " ", 
           RowBox[{"sin", "(", "t", ")"}]}]}], 
       RowBox[{
         RowBox[{"cos", "(", "t", ")"}], "+", 
         RowBox[{"3", " ", 
           RowBox[{"sin", "(", "t", ")"}]}]}], 
       RowBox[{
         RowBox[{"cos", "(", 
           RowBox[{"\[Pi]", " ", "t"}], ")"}], "+", 
         RowBox[{"sin", "(", 
           RowBox[{"\[Pi]", " ", "t"}], ")"}]}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.767815138316141*^9, 3.767815153161846*^9}, 
   3.7678154023865223`*^9}]
}, Open  ]],

Cell["\<\
3.  Frequency. How does the frequency of the harmonic oscillation change if \
we (i) double the mass, (ii) take a spring of twice the modulus? First find \
qualitative answers by physics, then look at formulas.\
\>", "Text",
 CellChangeTimes->{{3.767738072004874*^9, 3.767738127451406*^9}, 
   3.767815609156166*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[TextData[{
 "By increasing the mass it will increase inertia, lowering the frequency. By \
increasing the k-factor, it decreases the range of motion, which speeds up \
the frequency. Looking at the formula ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    SqrtBox[
     RowBox[{"k", "/", "m"}]], 
    RowBox[{"2", " ", "\[Pi]"}]], TraditionalForm]]],
 ", doubling m reduces the frequency by ",
 Cell[BoxData[
  FormBox[
   SqrtBox["2"], TraditionalForm]]],
 " , and doubling k increases it by the same amount."
}], "Text",
 CellChangeTimes->{{3.767815778101248*^9, 3.7678158346343403`*^9}, {
   3.767815879968977*^9, 3.767815974870071*^9}, 3.7678747809260883`*^9}],

Cell[TextData[{
 "5.  Springs in parallel. What are the frequencies of vibration of a body of \
mass m = 5 kg (i) on a spring of modulus ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = 20 nt/m, (ii) on a spring of modulus ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = 45 nt/m, (iii) on the two springs in parallel? See the figure below."
}], "Text",
 CellChangeTimes->{{3.7677381634117613`*^9, 3.767738281049095*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell["For part (i)", "Text",
 CellChangeTimes->{{3.767811445383713*^9, 3.767811449030118*^9}}],

Cell["\<\
Setting the problem up is easy since I already have the mass and the k \
factor, it being simply\
\>", "Text",
 CellChangeTimes->{{3.767810491187312*^9, 3.7678105445124197`*^9}, {
  3.767810737092475*^9, 3.767810765562096*^9}, {3.767811298708825*^9, 
  3.767811328905839*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  SqrtBox[
   RowBox[{"20", "/", "5"}]], 
  RowBox[{"2", "\[Pi]"}]]], "Input",
 CellChangeTimes->{{3.767811204827759*^9, 3.767811224742876*^9}}],

Cell[BoxData[
 FractionBox["1", "\[Pi]"]], "Output",
 CellChangeTimes->{3.767811226537257*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "[", "%", "]"}], " ", 
  RowBox[{"(*", " ", "hertz", " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.767811234492282*^9, 3.7678112383580427`*^9}, {
  3.767811395152276*^9, 3.767811401943996*^9}, {3.767811598147636*^9, 
  3.767811598610029*^9}}],

Cell[BoxData["0.3183098861837907`"], "Output",
 CellChangeTimes->{3.767811403020941*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["For part (ii), with k = 45", "Text",
 CellChangeTimes->{{3.767811456806188*^9, 3.7678114666057158`*^9}, {
  3.767811854692728*^9, 3.767811867497706*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"LightGreen", ",", 
      RowBox[{"Rectangle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"6.5", ",", "4.5"}], "}"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.8", ",", "0.8", ",", "0.8"}], "]"}], ",", 
      RowBox[{"Rectangle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2.3", ",", "4.3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"4.3", ",", "4.5"}], "}"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.4", ",", "0.7", ",", "0.9"}], "]"}], ",", 
      RowBox[{"Thickness", "[", "0.01", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2.7", ",", "4.3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.7", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.9", ",", "3.9"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.5", ",", "3.8"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "3.7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.5", ",", "3.6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "3.5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.5", ",", "3.4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "3.3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.5", ",", "3.2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "3.1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.5", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "2.9"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.5", ",", "2.8"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "2.7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.5", ",", "2.6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "2.5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.5", ",", "2.4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "2.3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.5", ",", "2.2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "2.1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.5", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "1.9"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.75", ",", "1.85"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.75", ",", "1.7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.75", ",", "1.7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3.4", ",", "1.7"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.4", ",", "0.7", ",", "0.9"}], "]"}], ",", 
      RowBox[{"Thickness", "[", "0.01", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3.85", ",", "4.3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3.85", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"4.05", ",", "3.9"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3.65", ",", "3.8"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"4.15", ",", "3.7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3.65", ",", "3.6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"4.15", ",", "3.5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3.65", ",", "3.4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"4.15", ",", "3.3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3.65", ",", "3.2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"4.15", ",", "3.1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3.65", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"4.15", ",", "2.9"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3.65", ",", "2.8"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"4.15", ",", "2.7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3.65", ",", "2.6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"4.15", ",", "2.5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3.65", ",", "2.4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"4.15", ",", "2.3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3.65", ",", "2.2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"4.15", ",", "2.1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3.65", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"4.15", ",", "1.9"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3.9", ",", "1.85"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3.9", ",", "1.7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3.35", ",", "1.7"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Disk", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3.35", ",", "0.9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.35", ",", "0.13"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"White", ",", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3.35", ",", "0.94"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.35", ",", "0.13"}], "}"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Disk", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3.35", ",", "1.15"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.35", ",", "0.13"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"White", ",", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3.35", ",", "1.15"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.3", ",", "0.1"}], "}"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.006", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3.02", ",", "1.15"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3.02", ",", "0.9"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3.68", ",", "1.15"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3.68", ",", "0.9"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.4", ",", "0.7", ",", "0.9"}], "]"}], ",", 
      RowBox[{"Thickness", "[", "0.01", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3.35", ",", "1.7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3.35", ",", "1.17"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    
    RowBox[{"{", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2.3", ",", "4.32"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"4.3", ",", "4.32"}], "}"}]}], "}"}], "]"}], "}"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.767738319890452*^9, 3.7677384716949873`*^9}, {
   3.767738503534583*^9, 3.767738584725452*^9}, {3.767738616158444*^9, 
   3.767738856481992*^9}, {3.767738886513822*^9, 3.7677389490725937`*^9}, {
   3.767738988433927*^9, 3.767739091047071*^9}, {3.76773913635194*^9, 
   3.7677391967652082`*^9}, {3.767739238269741*^9, 3.767739400954379*^9}, {
   3.767739454379277*^9, 3.767739499353479*^9}, {3.767739546288707*^9, 
   3.767739620319747*^9}, {3.767739682928527*^9, 3.767739847677133*^9}, {
   3.767739879428314*^9, 3.7677398959427423`*^9}, {3.76773992742141*^9, 
   3.767740062026845*^9}, {3.767740095298346*^9, 3.767740366870222*^9}, {
   3.767740464644652*^9, 3.76774059026726*^9}, {3.7677406314835997`*^9, 
   3.767740668562072*^9}, {3.7677407462008677`*^9, 3.767740958910227*^9}, {
   3.7677410518781548`*^9, 3.767741114189094*^9}, {3.7677411547724333`*^9, 
   3.767741159074563*^9}, {3.7677412323952093`*^9, 3.767741389135827*^9}, {
   3.767741520653069*^9, 3.76774155884476*^9}, {3.767741625123474*^9, 
   3.767741626435483*^9}, {3.767741697139772*^9, 3.767741748993555*^9}, {
   3.767741786257186*^9, 3.767742169586725*^9}, {3.7677422057080097`*^9, 
   3.767742284184684*^9}, 3.767784129600597*^9, {3.767784173115202*^9, 
   3.767784214801519*^9}, {3.767784245162602*^9, 3.76778428510542*^9}, {
   3.7677843616390553`*^9, 3.7677843635096197`*^9}, {3.767784422270046*^9, 
   3.767784558856954*^9}, {3.7677846134412937`*^9, 3.767784712758669*^9}, {
   3.7677847651410027`*^9, 3.767784802252529*^9}, {3.767784836818964*^9, 
   3.767784886916006*^9}, {3.767789092621704*^9, 3.767789104797885*^9}, {
   3.767789159728368*^9, 3.767789275635292*^9}, 3.767789394997036*^9}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.88, 1, 0.88], RectangleBox[{0, 0}, {6.5, 4.5}]}, 
   {RGBColor[0.8, 0.8, 0.8], RectangleBox[{2.3, 4.3}, {4.3, 4.5}]}, 
   {RGBColor[0.4, 0.7, 0.9], Thickness[0.01], 
    LineBox[{{2.7, 4.3}, {2.7, 4}, {2.9, 3.9}, {2.5, 3.8}, {3, 3.7}, {2.5, 
      3.6}, {3, 3.5}, {2.5, 3.4}, {3, 3.3}, {2.5, 3.2}, {3, 3.1}, {2.5, 3}, {
      3, 2.9}, {2.5, 2.8}, {3, 2.7}, {2.5, 2.6}, {3, 2.5}, {2.5, 2.4}, {
      3, 2.3}, {2.5, 2.2}, {3, 2.1}, {2.5, 2}, {3, 1.9}, {2.75, 1.85}, {2.75, 
      1.7}, {2.75, 1.7}, {3.4, 1.7}}]}, 
   {RGBColor[0.4, 0.7, 0.9], Thickness[0.01], 
    LineBox[{{3.85, 4.3}, {3.85, 4}, {4.05, 3.9}, {3.65, 3.8}, {4.15, 3.7}, {
      3.65, 3.6}, {4.15, 3.5}, {3.65, 3.4}, {4.15, 3.3}, {3.65, 3.2}, {4.15, 
      3.1}, {3.65, 3}, {4.15, 2.9}, {3.65, 2.8}, {4.15, 2.7}, {3.65, 2.6}, {
      4.15, 2.5}, {3.65, 2.4}, {4.15, 2.3}, {3.65, 2.2}, {4.15, 2.1}, {
      3.65, 2}, {4.15, 1.9}, {3.9, 1.85}, {3.9, 1.7}, {3.35, 1.7}}]}, 
   DiskBox[{3.35, 0.9}, {0.35, 0.13}], 
   {GrayLevel[1], DiskBox[{3.35, 0.94}, {0.35, 0.13}]}, 
   DiskBox[{3.35, 1.15}, {0.35, 0.13}], 
   {GrayLevel[1], DiskBox[{3.35, 1.15}, {0.3, 0.1}]}, 
   {Thickness[0.006], LineBox[{{3.02, 1.15}, {3.02, 0.9}}]}, 
   {Thickness[0.005], LineBox[{{3.68, 1.15}, {3.68, 0.9}}]}, 
   {RGBColor[0.4, 0.7, 0.9], Thickness[0.01], 
    LineBox[{{3.35, 1.7}, {3.35, 1.17}}]}, 
   LineBox[{{2.3, 4.32}, {4.3, 4.32}}]}]], "Output",
 CellChangeTimes->{
  3.767741115669984*^9, 3.7677411604864883`*^9, {3.767741240004663*^9, 
   3.767741297679309*^9}, 3.7677413607841787`*^9, 3.76774139225704*^9, {
   3.767741546212332*^9, 3.767741559669739*^9}, 3.76774181278522*^9, {
   3.767741846658976*^9, 3.7677418615601883`*^9}, {3.767741893831925*^9, 
   3.767742170391444*^9}, {3.76774220682701*^9, 3.76774228504519*^9}, {
   3.7677841989612503`*^9, 3.7677842155792933`*^9}, 3.767784247113948*^9, 
   3.767784286321837*^9, 3.767784364780118*^9, {3.7677844734107933`*^9, 
   3.767784510449942*^9}, 3.767784559871478*^9, {3.7677846321133547`*^9, 
   3.7677847137289886`*^9}, 3.767784804872044*^9, {3.767784838142138*^9, 
   3.767784889202702*^9}, 3.7677891065493402`*^9, 3.767789228753923*^9, {
   3.767789262671998*^9, 3.767789276712739*^9}, 3.767789397263184*^9}]
}, {2}]],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  SqrtBox[
   RowBox[{"90", "/", "5"}]], 
  RowBox[{"2", "\[Pi]"}]]], "Input",
 CellChangeTimes->{{3.7678118868426533`*^9, 3.767811887553339*^9}, {
  3.767812293582786*^9, 3.76781232633232*^9}}],

Cell[BoxData[
 FractionBox["3", 
  RowBox[{
   SqrtBox["2"], " ", "\[Pi]"}]]], "Output",
 CellChangeTimes->{3.767811888634363*^9, 3.7678122958888187`*^9, 
  3.7678123326812477`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "[", "%", "]"}], "  ", 
  RowBox[{"(*", " ", "hertz", " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.76781189802711*^9, 3.7678119346398277`*^9}}],

Cell[BoxData["0.6752372371178296`"], "Output",
 CellChangeTimes->{3.7678119031151133`*^9, 3.7678122989161386`*^9, 
  3.767812335993166*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["\<\
For part (iii), I am informed by Wikipedia that the spring constants are \
additive, thus\
\>", "Text",
 CellChangeTimes->{{3.76781195636712*^9, 3.767811978318293*^9}, {
   3.767812420410583*^9, 3.767812436792705*^9}, 3.767812469521164*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  SqrtBox[
   RowBox[{"65", "/", "5"}]], 
  RowBox[{"2", "\[Pi]"}]]], "Input",
 CellChangeTimes->{{3.7678120112312117`*^9, 3.76781204431666*^9}, {
  3.767812380939958*^9, 3.767812381786641*^9}}],

Cell[BoxData[
 FractionBox[
  SqrtBox["13"], 
  RowBox[{"2", " ", "\[Pi]"}]]], "Output",
 CellChangeTimes->{3.7678120144842854`*^9, 3.767812045051425*^9, 
  3.7678123828344927`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.7678120186406603`*^9, 3.7678120212547617`*^9}}],

Cell[BoxData["0.5738413080613819`"], "Output",
 CellChangeTimes->{{3.767812022288138*^9, 3.76781204797288*^9}, 
   3.767812385129842*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["\<\
The answers in the green cells above match those of the text.\
\>", "Text",
 CellChangeTimes->{{3.7678124426246777`*^9, 3.767812459224169*^9}}],

Cell["\<\
7.  Pendulum. Find the frequency of oscillation of a pendulum of length L, \
neglecting air resistance and the weight of the rod, and assuming \[Theta] to \
be so small that Sin[\[Theta]] practically equals \[Theta]. See the figure \
below.\
\>", "Text",
 CellChangeTimes->{{3.767789421191101*^9, 3.767789497555944*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.772894047881873*^9, 3.77289404835398*^9}}],

Cell[TextData[{
 "I just took the following off a site, ",
 StyleBox["https://www.school-for-champions.com/science/pendulum_equations.\
htm#.XOnkD9NKjOQ. ",
  FontSize->14,
  FontSlant->"Italic"],
 "It turns out that the assumption about small \[Theta] is necessary, since \
otherwise the simple-looking problem cannot be solved in closed form. When it \
is necessary to deal with larger angles, going with NDSolve is apparently a \
common option."
}], "Text",
 CellChangeTimes->{{3.767821156197139*^9, 3.7678212946798563`*^9}, {
  3.767821371334556*^9, 3.767821372541483*^9}, {3.7678223090804567`*^9, 
  3.7678223168554573`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"freq", "=", 
  FractionBox[
   SqrtBox[
    RowBox[{"g", "/", "L"}]], 
   RowBox[{"2", "\[Pi]"}]]}]], "Input",
 CellChangeTimes->{{3.767821042796571*^9, 3.7678210698487043`*^9}}],

Cell[BoxData[
 FractionBox[
  SqrtBox[
   FractionBox["g", "L"]], 
  RowBox[{"2", " ", "\[Pi]"}]]], "Output",
 CellChangeTimes->{3.767821071858345*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"LightGreen", ",", 
       RowBox[{"Rectangle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", "3.7"}], "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RGBColor", "[", 
        RowBox[{"0.85", ",", "0.85", ",", "0.85"}], "]"}], ",", 
       RowBox[{"Rectangle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2.1", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.9", ",", "3.17"}], "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Rectangle", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1.0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "3.2"}], "}"}]}], "}"}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2.5", ",", "3"}], "}"}], ",", "0.065"}], "]"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2.1", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.9", ",", "3"}], "}"}]}], "}"}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Thick", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2.5", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.9", ",", "1.8"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Dashed", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2.5", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.5", ",", "1.95"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"White", ",", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2.5", ",", "3"}], "}"}], ",", "0.051"}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RGBColor", "[", 
        RowBox[{"0.4", ",", "0.78", ",", "0.92"}], "]"}], ",", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2.93", ",", "1.7"}], "}"}], ",", "0.22"}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Opacity", "[", "0.3", "]"}], ",", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0.6", ",", "0.85", ",", "1"}], "]"}], ",", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2.9", ",", "1.75"}], "}"}], ",", "0.13"}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Opacity", "[", "0.15", "]"}], ",", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0.94", ",", "0.99", ",", "1"}], "]"}], ",", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2.89", ",", "1.76"}], "}"}], ",", "0.08"}], "]"}]}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Arrowheads", "[", ".041", "]"}], ",", 
       RowBox[{"Arrow", "[", 
        RowBox[{"BezierCurve", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2.5", ",", "2.04"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2.7", ",", "2.05"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2.8", ",", "2.1"}], "}"}]}], "}"}], "]"}], "]"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\[Theta]", ",", "Medium"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"2.6", ",", "1.85"}], "}"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"L", ",", "Medium"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"2.9", ",", "2.4"}], "}"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Body of mass m\>\"", ",", "Medium"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"3.4", ",", "1.3"}], "}"}]}], "]"}], "}"}]}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.767789372232638*^9, 3.767789404529448*^9}, {
   3.767789524995899*^9, 3.76778970286335*^9}, {3.767789740944277*^9, 
   3.767789816756485*^9}, {3.767789860285349*^9, 3.767789968754409*^9}, {
   3.76779001530581*^9, 3.767790178044046*^9}, {3.767790228316626*^9, 
   3.767790300961237*^9}, {3.7677903749768963`*^9, 3.767790759622117*^9}, {
   3.767791035050599*^9, 3.767791309561096*^9}, {3.7677913829049*^9, 
   3.767791491799225*^9}, {3.767791569621729*^9, 3.7677915831879883`*^9}, 
   3.767791629490786*^9, {3.7677918824200983`*^9, 3.7677919185372972`*^9}, {
   3.767792221386874*^9, 3.767792289151814*^9}, {3.767792363775934*^9, 
   3.7677924865304937`*^9}, {3.7677925354029007`*^9, 3.767792611063113*^9}, {
   3.7677927154058943`*^9, 3.7677927185256033`*^9}, {3.767792776204193*^9, 
   3.767792852240549*^9}, {3.767792896601487*^9, 3.7677931027140827`*^9}, {
   3.767797265234606*^9, 3.767797297889572*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.88, 1, 0.88], RectangleBox[{0, 0}, {5, 3.7}]}, 
   {RGBColor[0.85, 0.85, 0.85], RectangleBox[{2.1, 3}, {2.9, 3.17}]}, 
   RectangleBox[{{1., 1}, {3, 3.2}}, Null], DiskBox[{2.5, 3}, 0.065], 
   LineBox[{{2.1, 3}, {2.9, 3}}], 
   {Thickness[Large], LineBox[{{2.5, 3}, {2.9, 1.8}}]}, 
   {Dashing[{Small, Small}], LineBox[{{2.5, 3}, {2.5, 1.95}}]}, 
   {GrayLevel[1], DiskBox[{2.5, 3}, 0.051]}, 
   {RGBColor[0.4, 0.78, 0.92], DiskBox[{2.93, 1.7}, 0.22]}, 
   {RGBColor[0.6, 0.85, 1], Opacity[0.3], DiskBox[{2.9, 1.75}, 0.13]}, 
   {RGBColor[0.94, 0.99, 1], Opacity[0.15], DiskBox[{2.89, 1.76}, 0.08]}, 
   {Arrowheads[0.041], 
    ArrowBox[BezierCurveBox[{{2.5, 2.04}, {2.7, 2.05}, {2.8, 2.1}}]]}, 
   InsetBox[
    StyleBox["\[Theta]",
     StripOnInput->False,
     FontSize->Medium], {2.6, 1.85}], InsetBox[
    StyleBox["L",
     StripOnInput->False,
     FontSize->Medium], {2.9, 2.4}], InsetBox[
    StyleBox["\<\"Body of mass m\"\>",
     StripOnInput->False,
     FontSize->Medium], {3.4, 1.3}]},
  ImageSize->300]], "Output",
 CellChangeTimes->{{3.767792255293096*^9, 3.767792289864259*^9}, {
   3.767792404299193*^9, 3.767792487330289*^9}, {3.7677925380296717`*^9, 
   3.767792611875482*^9}, 3.7677927203904037`*^9, {3.767792782515418*^9, 
   3.767792853086293*^9}, {3.7677929269143257`*^9, 3.767792956652772*^9}, {
   3.76779298710527*^9, 3.767793003061962*^9}, {3.767793062901197*^9, 
   3.7677931035111847`*^9}, 3.767793135597035*^9, {3.767797269285305*^9, 
   3.767797298853484*^9}}]
}, {2}]],

Cell["\<\
9.  Vibration of water in a tube. If 1 liter of water (about 1.06 US quart) \
is vibrating up and down under the influence of gravitation in a U-shaped \
tube of diameter 2 cm, what is the frequency? Neglect friction. See figure \
below.\
\>", "Text",
 CellChangeTimes->{{3.767803544771443*^9, 3.76780360795396*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.772894061530841*^9, 3.772894061993401*^9}}],

Cell[TextData[{
 "I found this same problem developed at ",
 StyleBox["https://web.mit.edu/8.01t/www/materials/InClass/WE_Sol_W13D1-2.pdf",
  FontSize->14,
  FontSlant->"Italic"],
 ". The following is a combination of that site and the text answer. The site \
description supposes that a quickly retracting piston initiates the height \
offset. I\[CloseCurlyQuote]ve also seen an influx of air pressure described \
as the initiator in this type of problem. It should be noted that the \
y-dimension and y=0 level exactly demarcate the halfway point on the excess \
right side height."
}], "Text",
 CellChangeTimes->{{3.767822341751545*^9, 3.7678225063132057`*^9}, {
  3.767867531262187*^9, 3.76786761626656*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"LightGreen", ",", 
      RowBox[{"Rectangle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"5", ",", "3.7"}], "}"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.75", ",", "0.95", ",", "1"}], "]"}], ",", 
      RowBox[{"Annulus", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2.5", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.53", ",", "0.92"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Pi]", ",", 
          RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.2", ",", "0.7", ",", "0.9"}], "]"}], ",", 
      RowBox[{"Rectangle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"2.5", "+", "0.53"}], ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"2.5", "+", "0.92"}], ",", "2.5"}], "}"}]}], "]"}]}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{"Circle", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2.5", ",", "2"}], "}"}], ",", "0.92", ",", 
       RowBox[{"{", 
        RowBox[{"\[Pi]", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Circle", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2.5", ",", "2"}], "}"}], ",", "0.53", ",", 
       RowBox[{"{", 
        RowBox[{"\[Pi]", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"2.5", "-", "0.92"}], ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"2.5", "-", "0.92"}], ",", "3"}], "}"}]}], "}"}], "]"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"2.5", "+", "0.92"}], ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"2.5", "+", "0.92"}], ",", "3"}], "}"}]}], "}"}], "]"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"2.5", "-", "0.53"}], ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"2.5", "-", "0.53"}], ",", "3"}], "}"}]}], "}"}], "]"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"2.5", "+", "0.53"}], ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"2.5", "+", "0.53"}], ",", "3"}], "}"}]}], "}"}], "]"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Circle", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.7766", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.198", ",", "0.035"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.75", ",", "0.95", ",", "1"}], "]"}], ",", 
      RowBox[{"EdgeForm", "[", 
       RowBox[{"Thickness", "[", "0.003", "]"}], "]"}], ",", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1.7766", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.198", ",", "0.035"}], "}"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Circle", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3.224", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.198", ",", "0.035"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.2", ",", "0.7", ",", "0.9"}], "]"}], ",", 
      RowBox[{"EdgeForm", "[", 
       RowBox[{"Thickness", "[", "0.003", "]"}], "]"}], ",", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3.224", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.198", ",", "0.035"}], "}"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.2", ",", "0.7", ",", "0.9"}], "]"}], ",", 
      RowBox[{"EdgeForm", "[", 
       RowBox[{"Thickness", "[", "0.003", "]"}], "]"}], ",", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3.224", ",", "2.5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.198", ",", "0.035"}], "}"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"2.5", "-", "0.53"}], ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"2.5", "+", "0.53"}], ",", "2"}], "}"}]}], "}"}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2.5", ",", "2.5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"2.5", "+", "0.53"}], ",", "2.5"}], "}"}]}], "}"}], 
       "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2.5", ",", "2.25"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3.5", ",", "2.25"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Arrowheads", "[", ".03", "]"}], ",", 
      RowBox[{"Arrow", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2.77", ",", "2.25"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.77", ",", "2.5"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"y", ",", "Medium"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.65", ",", "2.39"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<(y=0)\>\"", ",", "Medium"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.75", ",", "2.25"}], "}"}]}], "]"}], "}"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.767795274048271*^9, 3.767795389882927*^9}, {
   3.767795486484253*^9, 3.7677955244790297`*^9}, {3.7677955578149767`*^9, 
   3.767795572197824*^9}, 3.7677956140802603`*^9, {3.767796004457611*^9, 
   3.767796064055244*^9}, {3.767796094519952*^9, 3.7677961267567263`*^9}, {
   3.767796183453369*^9, 3.767796202506794*^9}, {3.767796242426778*^9, 
   3.767796304944108*^9}, {3.767796358910574*^9, 3.767796558816676*^9}, {
   3.7677965963757143`*^9, 3.76779667744452*^9}, {3.7677967138925533`*^9, 
   3.767796734730843*^9}, {3.767796770278318*^9, 3.7677967868844633`*^9}, {
   3.767796899508843*^9, 3.76779692563654*^9}, {3.76779696849883*^9, 
   3.7677969714336243`*^9}, 3.767797025525015*^9, 3.7677970704452333`*^9, {
   3.767797133043358*^9, 3.7677971805538797`*^9}, {3.767802650903257*^9, 
   3.7678027059757853`*^9}, {3.7678028189443398`*^9, 3.767802886052641*^9}, {
   3.76780293784509*^9, 3.767802970395162*^9}, {3.7678030004758*^9, 
   3.767803090351965*^9}, {3.767803149536023*^9, 3.767803511981971*^9}, {
   3.76780369185181*^9, 3.767803692577916*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.88, 1, 0.88], RectangleBox[{0, 0}, {5, 3.7}]}, 
   {RGBColor[0.75, 0.95, 1], 
    InterpretationBox[
     FilledCurveBox[
      BSplineCurve[{{1.58, 2.}, {1.58, 1.08}, {2.5, 1.08}, {3.42, 1.08}, {
       3.42, 2.}, {3.225, 2.}, {3.0300000000000002`, 2.}, {
       3.0300000000000002`, 1.47}, {2.5, 1.47}, {1.97, 1.47}, {1.97, 2.}, {
       1.775, 2.}, {1.58, 2.}}, 
       SplineKnots -> {
        0, 0, 0, Rational[1, 6], Rational[1, 6], Rational[1, 3], Rational[
         1, 3], Rational[1, 2], Rational[1, 2], Rational[2, 3], Rational[
         2, 3], Rational[5, 6], Rational[5, 6], 1, 1, 1}, 
       SplineWeights -> {1., 1., 2, 2, 4, 4, 4, 2, 2, 1., 1., 1., 1.}, 
       SplineDegree -> 2]],
     Annulus[{2.5, 2}, {0.53, 0.92}, {Pi, 2 Pi}]]}, 
   {RGBColor[0.2, 0.7, 0.9], 
    RectangleBox[{3.0300000000000002`, 2}, {3.42, 2.5}]}, 
   CircleBox[{2.5, 2}, 0.92, 
    NCache[{Pi, 2 Pi}, {3.141592653589793, 6.283185307179586}]], 
   CircleBox[{2.5, 2}, 0.53, 
    NCache[{Pi, 2 Pi}, {3.141592653589793, 6.283185307179586}]], 
   LineBox[{{1.58, 2}, {1.58, 3}}], LineBox[{{3.42, 2}, {3.42, 3}}], 
   LineBox[{{1.97, 2}, {1.97, 3}}], 
   LineBox[{{3.0300000000000002`, 2}, {3.0300000000000002`, 3}}], 
   CircleBox[{1.7766, 3}, {0.198, 0.035}], 
   {RGBColor[0.75, 0.95, 1], EdgeForm[Thickness[0.003]], 
    DiskBox[{1.7766, 2}, {0.198, 0.035}]}, 
   CircleBox[{3.224, 3}, {0.198, 0.035}], 
   {RGBColor[0.2, 0.7, 0.9], EdgeForm[Thickness[0.003]], 
    DiskBox[{3.224, 2}, {0.198, 0.035}]}, 
   {RGBColor[0.2, 0.7, 0.9], EdgeForm[Thickness[0.003]], 
    DiskBox[{3.224, 2.5}, {0.198, 0.035}]}, 
   {Dashing[{Small, Small}], 
    LineBox[{{1.97, 2}, {3.0300000000000002`, 2}}]}, 
   {Dashing[{Small, Small}], 
    LineBox[{{2.5, 2.5}, {3.0300000000000002`, 2.5}}]}, 
   {Dashing[{Small, Small}], LineBox[{{2.5, 2.25}, {3.5, 2.25}}]}, 
   {Arrowheads[0.03], ArrowBox[{{2.77, 2.25}, {2.77, 2.5}}]}, InsetBox[
    StyleBox["y",
     StripOnInput->False,
     FontSize->Medium], {2.65, 2.39}], InsetBox[
    StyleBox["\<\"(y=0)\"\>",
     StripOnInput->False,
     FontSize->Medium], {3.75, 2.25}]}]], "Output",
 CellChangeTimes->{
  3.767802707157353*^9, {3.767802878345562*^9, 3.767802887012891*^9}, 
   3.7678029768737383`*^9, {3.767803050281435*^9, 3.767803091038744*^9}, {
   3.7678032396659937`*^9, 3.767803333658455*^9}, {3.767803381635579*^9, 
   3.767803422936097*^9}, {3.767803480524583*^9, 3.767803512901416*^9}, 
   3.767803694141449*^9}]
}, {2}]],

Cell["\<\
\[Gamma] = weight of a cubic meter of water = 1000 kg = 9800 nts force\
\>", "Text",
 CellChangeTimes->{{3.767822674027376*^9, 3.7678226882750397`*^9}, {
  3.7678227721376657`*^9, 3.7678227900475397`*^9}, {3.7678240384633493`*^9, 
  3.76782404109544*^9}}],

Cell[TextData[{
 "The problem description gives the information that one liter of water is \
sloshing around. However, it may not be clear whether that liter comprises \
the total volume or just the darker-colored, 2y slug. If it was just the \
slug, then the y dimension could be calculated exactly based on the pipe \
diameter. However, the text leaves the y length unstated, implying that the \
liter volume is the whole thing. Anyway, I guess the whole mass is involved \
in the oscillation. But the \[Pi]*(0.01",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[")", "2"], TraditionalForm]]],
 "*2 y mete",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["r", "3"], TraditionalForm]]],
 " plug mass is the cause of the restoring force under examination, that \
force tagged by the text answer as equal to (a \[Gamma] y). As for the \
equation that will result in the frequency, how about"
}], "Text",
 CellChangeTimes->{{3.7678230920548897`*^9, 3.767823106589364*^9}, {
  3.767823386836226*^9, 3.767823458177908*^9}, {3.767823504104446*^9, 
  3.767823583422076*^9}, {3.7678236353884706`*^9, 3.767823658427672*^9}, {
  3.767823821270672*^9, 3.767823890572468*^9}, {3.767823922171405*^9, 
  3.767823928610971*^9}, {3.767824107133377*^9, 3.7678241691718473`*^9}, {
  3.767867679017398*^9, 3.7678676843933687`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqn", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"y", "''"}], "[", "t", "]"}], "+", 
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[Omega]", "0"], "2"], 
     RowBox[{"y", "[", "t", "]"}]}]}], "\[Equal]", "0"}]}]], "Input",
 CellChangeTimes->{{3.767824174619958*^9, 3.767824219929435*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[Omega]", "0", "2"], " ", 
    RowBox[{"y", "[", "t", "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["y", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", "0"}]], "Output",\

 CellChangeTimes->{3.767824229478448*^9}]
}, Open  ]],

Cell["\<\
The following is the solution to the equation, and though it reassuringly \
shows the form of SHM, it will not be used to crack the numerical value of \
the frequency.\
\>", "Text",
 CellChangeTimes->{{3.767828514564101*^9, 3.767828545201874*^9}, {
  3.767867719249385*^9, 3.767867801125389*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{"eqn", ",", "y", ",", "t"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.767824242972481*^9, 3.7678242532327757`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"C", "[", "2", "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"t", " ", 
          SubscriptBox["\[Omega]", "0"]}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"C", "[", "1", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"t", " ", 
          SubscriptBox["\[Omega]", "0"]}], "]"}]}]}]}], "]"}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.767824253850451*^9}]
}, Open  ]],

Cell["\<\
An equivalence or two from the text answer are unclear to me, so I will \
switch over to the the online site mentioned above to get a different \
perspective by grabbing the following.\
\>", "Text",
 CellChangeTimes->{{3.767824602374672*^9, 3.7678246296686687`*^9}, {
  3.767828938335829*^9, 3.767828956275915*^9}, {3.767867829542398*^9, 
  3.7678678786756697`*^9}}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[Omega]", "0"], "=", 
  SqrtBox[
   FractionBox[
    RowBox[{"2", " ", "g"}], "L"]]}]], "Input",
 CellChangeTimes->{{3.767824634930687*^9, 3.7678246712431602`*^9}, 
   3.7678282049043627`*^9, 3.767828484910945*^9}],

Cell["\<\
Working now in meters, cubic meters, and kilograms. Area of liquid surface \
times length equals volume equivalent to one thousandth of a cubic meter, \
according to the problem description. \
\>", "Text",
 CellChangeTimes->{{3.76786792275736*^9, 3.767867939569889*^9}, {
  3.767868021895694*^9, 3.767868070262371*^9}, {3.767868143892496*^9, 
  3.767868169843779*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Pi]", "*", 
     SuperscriptBox["0.01", "2"], "*", "L"}], "\[Equal]", "0.001"}], ",", 
   "L"}], "]"}]], "Input",
 CellChangeTimes->{{3.767827130414556*^9, 3.767827208468783*^9}, {
  3.767827454966774*^9, 3.7678274583252287`*^9}, {3.767827583522562*^9, 
  3.767827622111754*^9}, {3.76782773518817*^9, 3.7678277360444736`*^9}, {
  3.767827899777007*^9, 3.76782790127923*^9}, {3.7678681324130363`*^9, 
  3.767868132581135*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"L", "\[Rule]", "3.183098861837907`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.767827182087162*^9, 3.767827211405212*^9}, 
   3.767827591488463*^9, 3.767827624125182*^9, 3.767827738054463*^9, 
   3.767827902610676*^9}]
}, Open  ]],

Cell["And using the length I can solve for the freqency \
\[OpenCurlyDoubleQuote]kernel\[CloseCurlyDoubleQuote].", "Text",
 CellChangeTimes->{{3.767868255186796*^9, 3.767868267473278*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[Omega]", "0"], "=", 
  RowBox[{
   SqrtBox[
    FractionBox[
     RowBox[{"2", " ", "g"}], "L"]], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"L", "\[Rule]", "3.1831"}], ",", 
     RowBox[{"g", "\[Rule]", "9.80665"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.767828211158904*^9, 3.767828253564025*^9}, {
  3.767868752214025*^9, 3.767868753188876*^9}}],

Cell[BoxData["2.482276720283812`"], "Output",
 CellChangeTimes->{{3.767828234646974*^9, 3.767828255122161*^9}, 
   3.767868756080023*^9}]
}, Open  ]],

Cell["And convert to numerically expressed frequency.", "Text",
 CellChangeTimes->{{3.7678682780901833`*^9, 3.7678682965125103`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["2.481434947631652", 
   RowBox[{"2", "\[Pi]"}]], " ", 
  RowBox[{"(*", " ", "hertz", " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.767828303623938*^9, 3.767828308722145*^9}, {
  3.767828380307054*^9, 3.767828408967964*^9}, {3.7678687764760933`*^9, 
  3.767868786355953*^9}}],

Cell[BoxData["0.39493263787655586`"], "Output",
 CellChangeTimes->{3.767868760462473*^9},
 Background->RGBColor[1, 1, 0.85]]
}, Open  ]],

Cell["\<\
The answer in the yellow cell above is close to the text answer of 0.4.\
\>", "Text",
 CellChangeTimes->{{3.76786835757618*^9, 3.767868390030034*^9}}],

Cell["11 - 20 Damped motion", "Text",
 CellChangeTimes->{{3.7678039232107773`*^9, 3.767803932138102*^9}},
 Background->RGBColor[
  0.9600061036087587, 0.9600061036087587, 0.9600061036087587]],

Cell[TextData[{
 "11.  Overdamping. Show that for numbered line (7), p. 65 to satisfy initial \
conditions y(0) = ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", "0"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and v(0) = ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["v", "0"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " we must have ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["c", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"\[Alpha]", "/", "\[Beta]"}]}], ")"}], 
     SubscriptBox["y", "0"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " + ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["v", "0"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "/\[Beta]]/2 and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["c", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"\[Alpha]", "/", "\[Beta]"}]}], ")"}], 
     SubscriptBox["y", "0"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " - ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["v", "0"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " /\[Beta]]/2."
}], "Text",
 CellChangeTimes->{{3.767803937865965*^9, 3.76780410079804*^9}, {
  3.767807069435915*^9, 3.7678070775846853`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[TextData[{
 "13.  Initial value problem. Find the critical motion, numbered line (8), p. \
66, that starts from ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", "0"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " with initial velocity ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["v", "0"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". Graph solution curves for \[Alpha] = 1, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", "0"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = 1 and several ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["v", "0"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " such that (i) the curve does not intersect the t-axis, (ii) it intersects \
it at t = 1, 2, . . . , 5, respectively."
}], "Text",
 CellChangeTimes->{{3.767804122990849*^9, 3.7678042336506977`*^9}, {
  3.767807173375716*^9, 3.767807189781847*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[TextData[{
 "For this one it looks like I\[CloseCurlyQuote]m expected to work directly \
with numbered line (8),  ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"y", "[", "t", "]"}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["c", "1"], "+", 
      RowBox[{
       SubscriptBox["c", "2"], "t"}]}], ")"}], 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "\[Alpha]"}], " ", "t"}]]}]}]]]
}], "Text",
 CellChangeTimes->{{3.767881150780731*^9, 3.767881176410879*^9}, {
  3.767881227474884*^9, 3.7678812436568613`*^9}}],

Cell["\<\
It may be as well to let c1 remain equal to 1, and let c2 evolve around it.\
\>", "Text",
 CellChangeTimes->{{3.767898779512529*^9, 3.767898821687072*^9}, {
  3.767914019893826*^9, 3.7679140206438932`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"c2", " ", "t"}]}], ")"}], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "t"}]]}], "\[Equal]", "0"}], ",", 
     RowBox[{"{", "c2", "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "1", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.767881935697575*^9, 3.7678820740977297`*^9}, {
  3.767896228897229*^9, 3.767896256422903*^9}, {3.7678963445010023`*^9, 
  3.767896359764174*^9}, {3.767898189259652*^9, 3.7678981960096617`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"c2", "\[Rule]", 
      RowBox[{"-", "1"}]}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"c2", "\[Rule]", 
      RowBox[{"-", 
       FractionBox["1", "2"]}]}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"c2", "\[Rule]", 
      RowBox[{"-", 
       FractionBox["1", "3"]}]}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"c2", "\[Rule]", 
      RowBox[{"-", 
       FractionBox["1", "4"]}]}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"c2", "\[Rule]", 
      RowBox[{"-", 
       FractionBox["1", "5"]}]}], "}"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.767881999546548*^9, {3.767882055684651*^9, 3.767882075055821*^9}, 
   3.767896257648527*^9, {3.767896350337174*^9, 3.7678963609212017`*^9}, 
   3.767898197686471*^9}]
}, Open  ]],

Cell[TextData[{
 "The consolidated plot below is equivalent to the text answer. In the first \
curve in the legend, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", "0"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "=1 and \[Alpha] = 1; the second curve has a different ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", "0"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and c1=2, c2=3; the other curves in the legend meet the intersection \
requirements of the problem description."
}], "Text",
 CellChangeTimes->{{3.767898962154522*^9, 3.7678990454719048`*^9}, {
  3.767899080582767*^9, 3.767899159540538*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "t"}]], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "-", 
        RowBox[{"3", "t"}]}], ")"}], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], "t"}]]}], ",", 
     RowBox[{"Evaluate", "@", 
      RowBox[{"Table", "[", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"c2", "*", "t"}]}], ")"}], "*", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", " ", "t"}]]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"c2", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", 
             FractionBox["1", "2"]}], ",", 
            RowBox[{"-", 
             FractionBox["1", "3"]}], ",", 
            RowBox[{"-", 
             FractionBox["1", "4"]}], ",", 
            RowBox[{"-", 
             FractionBox["1", "5"]}]}], "}"}]}], "}"}]}], "]"}]}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "5"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.2"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "2"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Thickness", "[", "0.004", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.767898483035027*^9, 3.767898551455171*^9}, {
  3.767898646054304*^9, 3.7678986672936487`*^9}, {3.767898865622546*^9, 
  3.767898924324347*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6], 
        Thickness[0.004]], 
       LineBox[CompressedData["
1:eJwVjX040wkcwL00RUv4RcjLUleRHFcq7vL9osh5LTltq5hFJeUxytVmFaLJ
lFSeeSl56+2Zi1QILbrKy9Z56ZwrjxJWMzZpkRbX/fF5Pn98/vgsjYjdHqml
oaHh/53/XciN0HHay3azubKhZXZWAVdoctdQChXyjCJ9WRMK6PXPYFEoB2Bl
pk3dh2EFJHpT9UmUY5DOuBgiFSvA6wnumrTmQUTNoQDLAgUIk9elKK0F8Dob
81kuCnjLqDAZtb4JP8X1RtxLHAP2toPhI9a1sP3gIot1WqOg+yW/JcahFTyK
XLzKF8kgrulEppzVBaka63kuhVJwKM3pqK7ohd8M+eAUMwRDAfst+je+gc99
zqRgr3eQa55meS38HVDzO+I1Et+CC6vmD+32YeDc17z9mNkPzT35QbErZcDz
crWI83wNTpkzbqY+o8DVLNs3VtQL3sOu/Y6hSqg1M3jKJPeAdM39LZ/k4yBx
6OEP9XcDW81bW398Ajap+fwd450w1/D9gR12KngQcppOJ3cASUzynt/wGWZd
/BQ0qQS+SoQxF+KmgH4iMfDSszYYCq0ws7KaBt/uzXVLSS3gfubwoefCr9Cc
zPURVj6FSzM1up5h38AjnJnqHv0E6BbNfq8nZiBwKin9DrcJyKLVcpsQDezx
otmbXhFBpHOximqviT+zrmseH2mARO7v2ykqTdT2rXTbQHkIp2U5XRKJFgou
Ll78jVkDfnYLb5DztDF1574jpib3gS9cL/JjzEHS0yLaiG41tAaXqBNcSNhO
4UiM5lWBSBybaa+tg6Q7xwQmoXegKvoUtvfpoIrJazYPE4KVL2w8XD0XlQnz
Db6yboHn7K6Uq5x5KL9hnBSrvg57/370sSZEF91TbYnuC2Xgdir5HoOihyv0
BV84GSVwIXb8IVmqhzE02zGt+mswcLJs+GrjfGzKs6O8lF+FkcjavU3pZNTT
VnXtUBaA8pDRXDFjAdru2ky1mZMHFT5t6qg1+riM+kNPHz8Xhvc7rtdW6aOj
mwlrcPclML/9b066eCEGUxZUU1xyICWcVSz2NcCQ0uD6xuhsmFSb8X1rDVDn
ZgPP0f8crHqYK2hdbohH18WFlzhkgjPzz0BDniFGxUgai/g8EBUYm7arDDHg
F/XZ4uk0WCUyzgigG+HgIsXRIy9SwZ8kt+xsNEKrj6/+MRlIBuWrweYWOwJZ
DZ1m1JmTEFvAJ3jnCAxijmcdFnOhXXO54tdsAgUq0c4Pj7hgt6+ulZxDYN2n
DsPoKi4MOklPnb9MYLbC3zsplws7n6Eyt5DA5fWkRBmDCx4fJ9rLbxM4EjV6
vW8yCUy20tKePCOw8wyNa7wqCeKFSkZaC4HxrB9dfZYkwV9G6Zu2thEY1bP4
YrJ+Epztu/upTULgHndvUx0VBzTiFzC7XhI4TaVZBjVxQFYogoF3BHLp5ZOj
uzngrR26pHSIwIYSu9jj2zhQun/0c6SUQM+SF7vJWzgQtta84oOMQHnQ4GW0
50D383iL8fHvXSvQWTbNBicHvamqCQIfub63KR5jQ1ZOUVeC6vsvOSshbIAN
PnvEGVNTBHp4ZbrKWthQ3syMqpsm8AB99a0HDWyYYzvtzlETmHI3KiGjkg2M
rPOWbjMEvqkcvBxRxobGiRVfZmcJbHvstxAFbPgPtw0+nQ==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6], 
        Thickness[0.004]], 
       LineBox[CompressedData["
1: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
NZ6rRlq+Oga9kjTQ7vjnj/j1amQwpjZw6CwNitdmclWzq5Fra9t0uC0NPnWE
hU/nVaMwivdyvxMN3jlHnIr8WI2qX6UJR1+lQV72A4FoVI3UT28x+fOQBpaZ
agHpbdXI+kT6eSyGBgEarJrSLmJ8sppuCc9pUCCh3VPeX40+cfqG6P1Lg44d
59seTFQjxZKuktQKGmQtjUyqrVQj04xrdYs4Ddxno+6Wrlcjr1i+ttPfaFBT
vLdo7wYcZXtpzf3XToOp18Lu9bw42iOVvdd6jmj3be9U3omjbY/8Y0m76fBF
Q+QIRQ1Hx26SUi7J0OG4utCotCaOLJzf51IU6FB57kyTvxaOnmoOfvVWpwM1
VDdj1gBHPEyD9QYLOowVm4gKW+BIbvA37+4LdJB9Ei27YIWjk023xQIc6FCO
wpTrz+Pofmb+0f3edMgi4Q9VL+Jo/cI2r9BwOli7lHc7XMKRhOGHgO5oOjzQ
K1Sp9cTRiWPG4UrxdLiUt6i33RtHAYL30gZS6JDUptsS54ujF/+JFhzLpIME
2ed2mR+OiicLK6Nz6VBAVlP6eQNHzJqxTvUyOsyM/hBtv4UjUmHQWCyFDq6F
jBuUQBwdeiPG+lNHhxQvO9Wkuzi6HGAq8KKVDi0tqdryITgaP1isx5qmQ8V+
rC4xAke771x2kWfSQTxa8yLfIxzZNErfd1yig4dtZpxPJI6oHnE11I0MuHFC
T4L0GEdbyoxGNvMyYKVp82vTJzjS4+bYACQGfF87veFuDI7KMq/q5EowoDso
buhTLI5YC/udRqQZsG3Q7V5VHI4U9AdCdsgzIEfGz6IsHkf/jpzCH6owQKee
zox8jqP+wxuHKBoMGE94NOKQgCPR0Ar2RR0GPPB7d17+BY6ipOS1XM0YEO3S
J/7yJY7qrg7ZJ1kx4LnKpRiNVzhio7wMarNhQFzl5dZ2wmoCZ1J4nBhwz9tn
0SERR9ftuCjalxhgd35UaIhwQS4aCLjCAC31vcpWr3E0uXpjveA6A0yf3fSs
IixtorBr4jYD3uB8VLEkHNkljmruCmHAVv4Nvp6EX0y+trOKYAD3VwenAsKt
qhZ3ox8zgMtme/EfwvwPeZJr4hlwxpUrcFsykZ9OvHLlFQPMv/2tUyUcsv9W
n3IqAyS+JGaZEa64ofTfpUwGFHHEK9sQXqidEE/NZYB6peeN/1lJOOVEZxED
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
dVAVc9/S+joZqzo3v5NppYP+D8IdHL0=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6], 
        Thickness[0.004]], 
       LineBox[CompressedData["
1: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
ncqnoB+iR9aUUOfpbhD8jMoz69TdW29/JZDn0fA1k1pUfVt5/FGqJtADg6iP
Cfup8TIp0zctBMryAIkBKi+XPNdVDmARiOXp6sej8vbvtctL++cIFDImZ6NO
OdcwZFBvgUD7Mgfb7Kl8tuG1vObx01DgtO7nWiUSM+xclrlI0FAU+4PmXUUS
26rGT5sr0JDKzZhLNlT++wdJLXXfSUOOg692+shR97XXd0vcbhoSli8lkql+
wXrheLpHg4aYXasquqj+4svVJJ31aKi897iirgyJ331tDHh8lob2fxSKfbuS
On9zMdmCEBo6/1HxhqQwiSUzPfd3hNGQDnX8c4IkVhOdOsEfQUMFX5VP/BYg
8b3CX36HommIpuqt/obqj+Kbkkd/vqWh40n7FKR5TLx7SDtvpIiGJlfN7c6Z
ZuJbHrdNZaZpyDfcZUcm1a+3DN0V9ZmlobF/HEUOdTBxk7lX6fA8Dbks2r20
rZ2JNVT99+bx8aFzHicjeFT/nx2M3HhCnA/ZFLT8UGxgYjdzPPF4Ox96dSDt
mXo5E3uoCIbNWPKhZh2LR9x0JvYeCKuvruZDwSm/6piuTPywsbt8/jsf2nf/
yT6x25RL1Iu2/ORDIq8O2J26ycT3Y1rS77fwofXKIYKDztR8ppuC1Pr4kPmV
inCaPRPfZGQcjKHxo6dHDfinzzDxRf/vBVdV+JH9JCN8gfofM9q2NFn0JT/y
OZk+1cDPxIEf1JhGlovQ437jwBd8GJf/+5pzfY8A8hQTLomtLsDMKscABX5B
9Fu1a3dXTD7OuOyFKtsEEcuwhHfucB5eZwgaDllC6IbF7OqlrFysw7N4EHtX
GFWpveJqf87BNg14IsdsMepXa2I8O/cZa3nd/2QpI4KWLOPvO7UpG4c6jueJ
9oogje0h9ZGTWbjT801PbOE/SO+lnU5lRiYetM21KfIRRSqGTtnskAw8dlVS
qMpSDH2zGi3aY/URpx6q4NjtWIJKFeTqJk3Tcc/FXWr800uQdl+/jFFyKl6d
8ivMp2op2nvYvVnsxXv84LxzfJWhONq8942P3Jd3eIazKtAwVxxF37bNtvmb
jLfkRbwol5VA/I1GfhlySVjV+stRCT8JtKfu8Dg7+g1mRkmtrJyWQJIjg8JJ
ogl4C1PK3/i0JFLtXtNy8H08PiIwtLauUBLdbq34KnzhFR5r+Vtcto2OFGIv
uHevicOOUYF0v2A60pf6+mxwKhpX0mRHDz+hI6MTK+c2D0bjbRcY5aJhdNSl
xt5q/Sca/1Xq9Qp5RkfBrtLT3VXR+NRXNBYRTUerK57IiCVFY+2JycrEFDoy
VGg/9Mc8Gi8/+N+jkq90NDPw+nsUGYVdPoxZPiqjo8sz8t07c6JwraTP/oMV
dKTrFZ71JTUKP27LnKqopqMfzQ0P5yKjMOEiZl3/k44e33z2y+tmFB6IZkJn
Fx1tllnXtEwhChvwn1yT0E1H6R6rbOo3RuGEi8Ms2146qlFJiH+6KgqfU16d
2j9ARzJV4qrrhaLwj28u0uPjdJRyrifmeGckVlIUmc2YpKMjezipW5ojcVBY
XP31aTrKfzJpz6uJxIfOVvnPztJRXOHOsayCSJxYbG3HYNPRcYlDWWFZkXjR
VvaBuxw6uvt7aNONlEhsGRSyVotL7e8Fby3z+EhcOCk3x+NR7rnLj15E4v8B
YPpE+g==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6], 
        Thickness[0.004]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6], 
        Thickness[0.004]], 
       LineBox[CompressedData["
1:eJwV13k4VV0XAHDzcKdzuOUrKSpJplIUDfYiUkpRKVQvMs9cwz0hQ0RUUooS
DRo0IiJUtilDkYqSUokyZZ6SId/pr/v8nvPsvdded6+1z1l82Hu3o5CAgICW
oIDAv9+00MNimg7Bep3vRvNnZwfQFeve9fsVrNB3GY/vmwcGULNpHE9BwRVJ
8DUg4esA4htbcUQVjqDT40tP6j8fQFsq4OBv+VjknaHwSzR4AD08phU5KH8J
2TAuBktP9KPvdpkyffJ30bDrnmCFiT4UbO5u+0u+EDVbzvE2IHqR5J/LNR4a
L9Hr+ichXqZdyLcs7FQvrwGdkktx/KLzE2ncTHz7OLMZJRwIS02Nb0M/d7rI
fdNpRbFrP+VEibSiZNnohddt29GBp3sqpL9/Rrq8gizh2g5UVnDI6/hAEypv
umzmvbwH8ZSTbmxIaESap/7qzdvWh/ir7mlR9W+Rccf6b6v2D6K/Sd3Nfs6v
Uad6vtFo7xASircs8lZ+iYKnY9c8CxpBuy4uWf3sWCUSl+py3asyhrQ1Lq96
T5Qj0TpRY+bzcfT+0luJy5tL0NTrhx7nfCfQe0cteQXDp+jn/sz5ixZNovkW
TvJ/6vOR/gkvz+qHUyjcyVVEcV0uuvC3QHKzzQwSsV+yoik7Cx2QK9/RMvIX
Bb48+2rllnuIVaLau8RCAJY3sdQsNt5CjtrpY1ZqgvB4kqnAE72O+KHUboUx
QRhp/6Nua34ZHe9JbHj9Wgi8PdNtty+4gHaoEHdYKcKw8+G5B5mrEtDph2tL
dtiJQIZYjNuE+gmkZKts99BBBAS02d6IfQIVS8sKcVxEYEQpvDStNwYN8mc2
13uJQKR187xr92PQXoOKKvMQEbD6WkAUqcQguSbz+n3JIuBw4u6KderR6IGA
51fbOhGYaoC+3wZR6OWeG9P+uqLQGxduUJQZjnKOt326vFEU/MimYr0L4Sjl
yeLCMiQKFU4X8xqDw5HbgmsB5BZRuPJZ4ZfWtnAk2Z7af3+3KFjtPl0TVxOG
tvKSWtvcRaEswFx9o14oepEQW2F2RRSGbdDqJghGJXXep9SExUB37T6B1tsB
SGsOMJPFxMDduKk8hApAd6zJOEGGGGxVclTdZBKAznRmx3wgxWDXisZ45X5/
9J/g8LHwRWIgZNphkLHOH01r+R9p1BWDBXNHnDTf8pBuKuUU4iMG5TYWpu0L
fVCOWwTUfhGDqdnWd7zVTkjrsG210ncxeP+DZ5zc6YjyrZBZxA8xaF9ed2o8
1REVbp2xWftLDJiZdn8cJBxRidKRsGsTYnBWXcZ95rs9qmvzKfbnikPu7MiR
mat2qMvaduPCbeKQpdG9JPaUNVq0Hel4PRaHTtdm9b9vDVF/qftM/BNxyDvE
f3GubzPCOhfLsorE4Vh8wIMPkpuRrdLQjqEScdCK2vHGzVAfpQvesPOvE4cS
E7l0XuQGtLxA7GRQhzjol24sP8BTRauWvf4SPU8C8n1uBZx8vgJvnj0YeTVE
Ar5O9urD0l34Wpxst3C4BAyZB1s86N+Fp+d+3OkSKQHMoj+6uQfNcL7aHlnN
OAkwmdpkaq9kjpWttz0qS5YAv8/fQq/n7casPO1vP3MkIG2PsUNVuQVudONs
UOuWgNaZlMObrh3ADh/wcIGFJAhXpU5XrrbH5PeXF9otJWHzD4G/GZb2+Omv
9zqcg5Lw4MmMuEuoPZYW7A21PywJNRt3Rx+vscdYdR6T4y0JTWqC/+n854Bl
I3yW2p+QhIRTmu3xEY74reriveynkqBk0OV8ItsZ60Ucy7NTYIAQKrnUmOuO
f29MtQtZyoCTwMjgv3XH2RN57GQlBli3P42f7XfHS326HWvVGPDGMWtl8QoP
LGFjJrNOlwFxlw9FT6R54IaNi/is3Qx4/dHzq3eEJ3aZKNR5EsmAld1vNT9p
eePFjxt+vI1mQEPpfabOLm/8ybsvoTeWAdyBbWUhrt7YtFOhe3ECA8rlu4Wf
pnnj1R9iLp1KZQBjrNgwWsgHz+RaTNrlMcBtRVHUCWcffM576CmrkwE9mUeq
opR9cRNKlXDvYQAKSh9Q1/bFcqSxRU0fA3pFtzjX6PvijOzU/uOjDEheOcet
ydoXPxsyXjwryAT9bFRidsoXd/hdiR6SY4Kwfld2Sa8vXk9tN/+wmwnOTVeu
Nt7g4bCt42la+5hg28Iyac7k4Yp513vOWTGhace1w28LeXhX4XjkLlsmhBzN
FUit52GHyev51Z5MCNT60Hp5kofjQyYWPD3BhMW9YjdMd/rhtvBbHVeLmVBs
ePBZbq8fDnyT5lNRyoQvjPeViWN+mKGQNNlVwQS3Q2lVrn/98GoczVn9igmP
DipV/ib8ceSM89qKJiaE2yV5pK72x4pBKtFdg0zgI51ZdqA/dvLLWqa5lAWp
i/6LLh7zx5NlGVkWSiyQRjJ5rjP+OF76mm7QChbY80tvMEUDcP6jBNPylSzo
2AzNa+YEYPFB3wCLjSwIeWK6U2Z1AL7jofXiiAULXs1qX1f2CMC/HAsdymJY
kLHG3+BBcwBmvTQ4o3KSBXmsS1lVrQFYTaO28Fw8CwKTUhY0dwZgj/GvHPsL
LAia/R/761gA7o0WKRS+wYKeE8byvlKBuDdjF9uomAVmHgUby7YE4v7un3lV
oyzQlufa6N8LxJyd3q0rJ1gwop1joZIdiDVyJhgXp1gwpqyjwsgPxF5BTFsX
ITbYd5THZJbS4xmaDEmSDcc3xtTHfQzEA6oh/5mossE1e8wqWYSPBz2lxevs
aHttqVXfx8c25t1eUw5ssC2TLntozcevtUo+rHBhQ7fxigAlGz5+MOV5O9qL
DR+mvJYLufCxS2yNEQSzoal/9zb7I3zcejM8Kvc8Gw7Of9f6JoWP6z/3C6ZU
saFZIOF58Ec+1sMvXKtfsiH1m9GIXAs9X3rq2/E6NuzTKTj25Bsfx7maXN/T
yIajvzNKP3bw8Zbft4D9nQ0WQaMGtaN8XCx9KCx8kg27paMcggkKZ257Ne2k
zoHS+9JLZYHCql+zPY+v4sDJjEt7vxtQ+A4v6euNNRz4+fvTw3QjCqdftitp
1eXAknypLu52Cl/o+x1pvYUDH1f49mdbUDjkrCJzpw0Hfgx6NH50pfCfZYwQ
j8McyPqfs4ehB4UDiwZ64xw54D1H0fOeF4V92oteV7lzoCLrY4GjH4Xttc3P
6VMciJY07boUQmGT5qPztc9yYJsBe/70aQpXedrH7TnPgeGdAzJkAoUNhbZN
+SZzQGaJ1bNF5yispzrnS2YaB/a3LGerJVFY8+i9a8r3OJCRMqQpfoXC8xY3
LZcr50Ad9b/PZQ/o+POeXVxfyQGL4tuykZkUljZJl7Sq4YCHu7meXjaFWX6e
vy7UcyD80zu4lUvh2QrhLKKFAzY5Iilriyjc4bJqrfAYBzR9tN65VlJ4QCrD
2HGCA7WlIcJ/qig8UbTQqmqKA71G0vxjNRSWZDNDTgoRsGnSY11ULYXVHv0s
5ZIEPB9bn7r5HYW1rQ82BHAJaHlsbXOrgd6PcMOPJhkC5u/hxAq+p7CZRYl4
6kICRBTkl9xtorDfnxRTRVUCuLm1nXktdP7TpWyiNQiYKIk6+OsLhaO2n/Dp
0iTA8JDDgQXfKJyUFpD4QIeeL32lpPt3ChfpmzVrbSFgtJp3teYnhct7KnuS
thFQPTP+raGDwrWJm6YndhBgcyq67mMnhb/8VJF/voeAsxyx0nfdFBaIE3U0
siPgZtDNiJg+en9rQgIzHAgYN3ic7txP57NlOEbShYA2S7FEgwEKL9VovVfn
RYCrnvVw1yCFt7wrGrQIoePNjls8MULhXcGaQgVhBAQaxq7OGqWwpeIdrmwk
Aef092vZjVHYLfDC2q+xBDTpjcvmj1P4tKxPiFMyAdqmJZ1L/9D7K+84XZ1C
gEF47XAO7Sseh66qXCFg+954YtMkhbOLTcr6bxJQQAbEG0xRuNC5tMHsDgHD
mY8nntMuI3V+5twnIP/gtyitaQo3Hl4mwc8hYKklweXO0Ptnps5vziOgVXLB
wmDaHY+lVTcUEqCUtMjqK+3fYgI7ZzEBD0z+Bib9pfOTHWhjV07Ak5xa21+0
Jaz6fMorafP5pzbMUlj2/qfEmDoCXGRVC+to8xqutGW9IYDZ9ieMKXAE10wd
1vzYQIDp/gerjWgrKC4PF2giIMrNpzGINrXj12vlTwRQajyXB7Tf+GctNP9C
gEn956Fm2sppfh5HWgngZ7z3ExY8gsNfrHt6vZ2OXy16SJl2U9+U5MsOAm5N
SXmZ0NaQKbEc7iYAvb/c60w7Wi8qQ7aPAKfrhj4RtL86bR03GCRA0lt1Oon2
2jMsI/cRAg4GeCbeoR3/5E1i4jgBj+co6ebT/vntfNvTPwScbPIaxLQ3Slhp
/pgmIMjP5tkL2iYXOSAmQILyS/a1KtqBD3ycUwRJMOs5feXf8/SSd/EawiSk
ksNF/8a/btTKLxMh4e4dk4k82pNdSV/2iZEgufO21b/1lWYmRH6JkyBXJ9X2
L77dUgfUwiRJ4ChePP8v/tBlz/dwmSR8iTTwd6F9V1c+OINFgor5vKjttBtN
I9I3cEgwWSZfpUJb4HB7TT1Bgmy9NYjRVgs0GrKXImHO3rrhL3R+LeMy5k1I
k7BoKPD7I9pRVyTh1BwSTi7YRxyjnZ3j7qwgQwJ5zDlsJ22Jzyvzt84nIaCN
sbqF/r+1Bs5+aZElod32dFAabVvhURFfORKslJZKHaBdoFqw55I8Caw1+7Re
0efnB5INVl9MQn//+8qjtMm9IemlS0joaVHPVaPtHAJD3ctIqBeZdyuMPo/n
EtLnhS4n4XdJaPZS2sU3RUB6BR1fntPiCvp8y9RVx69XI0FP3wxN0ue/cqG5
2snVJJwx2vxsA10vw5q5e+S1SOjaesSwnK6nRVvmBudqk6Bbt3KbMe0Ar+aa
zzoklMUcbTCcoLAitnNWQyQYaTWtl6Hr06yhPL4ESFiWZjkeQddvSOey/L0G
JLiO9xr20PXdSPSIHDUi4VkF/3Y2Xf+Rtrz0uu0khJ1prp4zROHRv3IpkaYk
fO74mbyP7hdOaVVndXfR+dnqFXye7icmn+Qibu0moTCt7bTIv36zt8rmqBUJ
6zY76+f3UPiasdxCdWcSag4Ptx9up593VM5pdyFB2F35onMb3R+jfFmX3EiY
iDuf7EL3Q+fSyikRLxIiFH2O29D9UmOD76cWfxLerD8ctPgzhZ9rVCafOkbC
o8Ko+xNv6ed1PmcMoki41z57tfwNvZ77gpiJ4/T4j+vnnKyn57/jE+gQS+//
c9UJoo7CO5YssNiYQMLXlMypfvp++DTXR7o3jYTODss6xnO6f0zPP729kIRe
hnPzq5sUHhzZHvuniIQT7o+9tG5QuKvn6PGMZyTIl+wWTrlOj//4/ahwCQk3
3XK1D9L3W/Hju15PK0loYf9mPU+m1/fQNVNtJCEtXmNgOJY+Ly2WXOYACUvu
qvMM6PtYsiGOKBwkoVjo3AYzNwoLvXzGdB4mQeiRu/UBFwqPPFEQKR+j60Wu
Pt3VgcIfErtGg6ZJGOtfftvpIIVTt1MfeiSloDFYLfsH/T6g/DT50ktFKZib
3mogtILC1b4+jw8oScHimx/jOpQo7KK8rb53uRRolFW/qFak8N0LkyKEqhTM
ftoiF6NAYRWfQz57NKXgg5dXxK//0e8jy5Yat2ySguN6yz/sFaPzfSZztG+f
FFSPPinM/87H2vYvdknFSkGByeOVcol8XJI6d17tmBQseK946ExDIFYumRu3
84A0HDLOv7uMFYhNRXsXviuWhrLcXVdurA/Ag59/lNeocGGN4O0PyTv8sXfq
aW7sGS6EruRiIxc/XCuoOGBylgsW9Vef6jv4YRXnopesRC7kmnlEbLL1wz80
OyMSkrgg/jDVQ8vSD1tWwWByGhfyO7gt8lv9sMHwSO3t+1zgjccO9y33wzJb
raMrqrhQfGLE07OTh/0eDtpF13BB/85cW4d2Hn4jHbNp6ysuyPCe6Bz4xsMn
v+SOvnrNhc/j/de2NvGwgB/bvuE9F56z1jkuqeLhnrQS1NbOhZiLnOB3t3nY
WHj/gps/ueDZYb2hOp2Hb7r0jTt2cuFs862B51d42GaNbGZ3DxfaVoWuu5vE
w43VfnJDQ1xghf61DovmYU0NxkTOCBc66xnv/I/R3xuJ1xr8x7jw1y1hs1so
D2/7ry5uYoL2kXXzLQJ5+Ha5vVPRJBfCVg6EmvB4WGTFpH7INBdMc3a0IS8e
totPWKj3lwtmLvMNtd14uHhE6c/sLBckxBfdUnHi4f8DzAETiQ==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.772079, 0.431554, 0.102387], 
        AbsoluteThickness[1.6], 
        Thickness[0.004]], 
       LineBox[CompressedData["
1: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
uWgP4vp/VcGByQ==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.363898, 0.618501, 0.782349], 
        AbsoluteThickness[1.6], 
        Thickness[0.004]], 
       LineBox[CompressedData["
1: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
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 2, Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 6}, {-0.2, 1}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "t"}]], 
       RowBox[{
         RowBox[{"(", 
           RowBox[{"2", "-", 
             RowBox[{"3", " ", "t"}]}], ")"}], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
            RowBox[{"-", "2"}], " ", "t"}]]}], 
       RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", "t"}]], " ", 
         RowBox[{"(", 
           RowBox[{"1", "-", "t"}], ")"}]}], 
       RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", "t"}]], " ", 
         RowBox[{"(", 
           RowBox[{"1", "-", 
             FractionBox["t", "2"]}], ")"}]}], 
       RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", "t"}]], " ", 
         RowBox[{"(", 
           RowBox[{"1", "-", 
             FractionBox["t", "3"]}], ")"}]}], 
       RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", "t"}]], " ", 
         RowBox[{"(", 
           RowBox[{"1", "-", 
             FractionBox["t", "4"]}], ")"}]}], 
       RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", "t"}]], " ", 
         RowBox[{"(", 
           RowBox[{"1", "-", 
             FractionBox["t", "5"]}], ")"}]}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.07200000000000001]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.07200000000000001]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.07200000000000001]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.07200000000000001]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.07200000000000001]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.07200000000000001]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.07200000000000001]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.07200000000000001]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.07200000000000001]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.07200000000000001]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.07200000000000001]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.07200000000000001]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.07200000000000001]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.07200000000000001]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.004`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.004`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.004`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.004`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.004`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.004`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.004`", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm], ",", 
               TagBox[#5, HoldForm], ",", 
               TagBox[#6, HoldForm], ",", 
               TagBox[#7, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.767898487179565*^9, 3.767898553507228*^9, 3.7678986685959063`*^9, {
   3.767898906570237*^9, 3.767898925238454*^9}}]
}, Open  ]],

Cell[TextData[{
 "15.  Frequency. Find an approximation formula for ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Omega]", "*"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " in terms of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Omega]", "0"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " by applying the binomial theorem in numbered line (9) p. 67, and retaining \
only the first two terms. How good is the approximation in example 2, section \
III, p. 68?"
}], "Text",
 CellChangeTimes->{{3.767804244443862*^9, 3.7678043187128696`*^9}, {
  3.767807213350172*^9, 3.767807226764846*^9}, {3.7678072718205853`*^9, 
  3.7678072805153427`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell["\<\
Here is an example of using the binomial command in a series setting.\
\>", "Text",
 CellChangeTimes->{{3.767879664815115*^9, 3.767879690669154*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Binomial", "[", 
     RowBox[{
      FractionBox["1", "2"], ",", "k"}], "]"}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "x"}], ")"}], "k"]}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "0", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.767878431216762*^9, 3.7678784541882753`*^9}, {
  3.7678796103117867`*^9, 3.767879629110786*^9}}],

Cell[BoxData[
 RowBox[{"1", "+", 
  FractionBox[
   RowBox[{"1", "+", "x"}], "2"], "-", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "x"}], ")"}], "2"]}]}]], "Output",
 CellChangeTimes->{
  3.767878456752798*^9, {3.7678796121162157`*^9, 3.7678796306365023`*^9}}]
}, Open  ]],

Cell["And an example of a series with binomial persuasion.", "Text",
 CellChangeTimes->{{3.767879701604671*^9, 3.767879725307968*^9}, {
  3.767880883725873*^9, 3.76788088793081*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "[", 
  RowBox[{"Series", "[", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "a"}], ")"}], 
     RowBox[{"1", "/", "2"}]], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "0", ",", "2"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7678786195601587`*^9, 3.7678786378667307`*^9}, {
  3.7678786818750668`*^9, 3.7678786934650173`*^9}, {3.767879565218795*^9, 
  3.767879572968525*^9}}],

Cell[BoxData[
 RowBox[{"1", "+", 
  FractionBox["a", "2"], "-", 
  FractionBox[
   SuperscriptBox["a", "2"], "8"]}]], "Output",
 CellChangeTimes->{3.767878694728202*^9, 3.767879573698842*^9}]
}, Open  ]],

Cell["\<\
In numbered line (9) the focus is on the following expression for \[Omega]*, \
which assents to factoring.\
\>", "Text",
 CellChangeTimes->{{3.767879737569096*^9, 3.767879792954213*^9}, {
  3.767879953574645*^9, 3.767879961757248*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[Omega]", "*"], "==", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     FractionBox["k", "m"], "-", 
     FractionBox[
      SuperscriptBox["c", "2"], 
      RowBox[{"4", 
       SuperscriptBox["m", "2"]}]]}], ")"}], 
   RowBox[{"1", "/", "2"}]], "==", 
  RowBox[{
   SqrtBox[
    FractionBox["k", "m"]], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", 
      FractionBox[
       SuperscriptBox["c", "2"], 
       RowBox[{"4", "m", " ", "k"}]]}], ")"}], 
    RowBox[{"1", "/", "2"}]]}]}]], "Input",
 CellChangeTimes->{{3.7678792125518227`*^9, 3.767879258249391*^9}, {
  3.767879534820694*^9, 3.7678795378816137`*^9}, {3.767879974301486*^9, 
  3.767879988508754*^9}}],

Cell["And the factored form can be expressed as a series.", "Text",
 CellChangeTimes->{{3.767879812633462*^9, 3.767879831401083*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SqrtBox[
   FractionBox["k", "m"]], 
  RowBox[{"Simplify", "[", 
   RowBox[{"Normal", "[", 
    RowBox[{"Series", "[", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox[
          SuperscriptBox["c", "2"], 
          RowBox[{"4", "m", " ", "k"}]]}], ")"}], 
       RowBox[{"1", "/", "2"}]], ",", 
      RowBox[{"{", 
       RowBox[{"c", ",", "0", ",", "2"}], "}"}]}], "]"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.767879275370017*^9, 3.7678793322634277`*^9}, {
  3.767879420974943*^9, 3.767879453892138*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"1", "-", 
    FractionBox[
     SuperscriptBox["c", "2"], 
     RowBox[{"8", " ", "k", " ", "m"}]]}], ")"}], " ", 
  SqrtBox[
   FractionBox["k", "m"]]}]], "Output",
 CellChangeTimes->{
  3.7678793342677813`*^9, {3.767879427163969*^9, 3.767879454659154*^9}}]
}, Open  ]],

Cell["\<\
Applying the particular criteria of example 2, case III, I get\
\>", "Text",
 CellChangeTimes->{{3.7678808187261*^9, 3.767880836780253*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      FractionBox[
       SuperscriptBox["c", "2"], 
       RowBox[{"8", " ", "k", " ", "m"}]]}], ")"}], " ", 
    SqrtBox[
     FractionBox["k", "m"]]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"c", "\[Rule]", "10"}], ",", 
     RowBox[{"m", "\[Rule]", "10"}], ",", 
     RowBox[{"k", "\[Rule]", "90"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.767880280749571*^9, 3.767880317187538*^9}}],

Cell[BoxData["2.9583333333333335`"], "Output",
 CellChangeTimes->{{3.7678803041030684`*^9, 3.767880317817457*^9}},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["\<\
The number in the green cell above matches the answer in the text.\
\>", "Text",
 CellChangeTimes->{{3.7678803513758583`*^9, 3.767880369025683*^9}}],

Cell[TextData[{
 "17.  Underdamping. Determine the values of t corresponding to the maxima \
and minima of the oscillation y(t) = ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", "t"}]], TraditionalForm]]],
 " Sin[t]. Check your result by graphing y(t)."
}], "Text",
 CellChangeTimes->{{3.767804334777678*^9, 3.767804397166885*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7728940962247763`*^9, 3.7728940966634693`*^9}}],

Cell["\<\
I do not understand the text answer regarding Tan[t]. I tried the command \
ExpToTrig, and Tan didn\[CloseCurlyQuote]t fall out. I just will plug around \
with some plots.\
\>", "Text",
 CellChangeTimes->{{3.7679050025931*^9, 3.767905037168104*^9}, {
  3.767914126649622*^9, 3.767914151671299*^9}}],

Cell["\<\
If a long view is taken of the function, a gigantic spike is seen out around \
t=-120.\
\>", "Text",
 CellChangeTimes->{{3.767903118639591*^9, 3.767903172796914*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   FormBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "t"}]], 
     RowBox[{"Sin", "[", "t", "]"}]}],
    TraditionalForm], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "120"}], ",", "100"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.767899702702468*^9, 3.767899721883142*^9}, {
  3.76790081842494*^9, 3.767900907357779*^9}, {3.767902687141748*^9, 
  3.76790268740455*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
EkMS8C5keW9/NcdyKjpRvnpyK29f6zHmlRmWWt5zfvQJEqTzj1/IfD3Fqk1O
fvdFhQStes+4g7aNsfbYp+0wUtjSh1rQ8pAYYTkqZVrlyZKgPqZ/29X+Qdbb
2ewsXmkSGH4tky//1c8SrM77eUWcBEUry4o7grpZ9sGFJ1tFtu5nd27ymelW
ViWyOOzoHhLgrbmjXcpbWDsFX3bG7SJBj8ZXiduhtSy73lKp3zwk+IivzS9W
K2WVp5ZdseIigf7jn2pR+oksvkuVFVVr1pDmIcV8ffkBhqLyZlN82Rp6fdzf
/HQqxJTO1RgHzFsDzoHnMzOlDLPtbd3T4RlrWD1emYVcrcbY3G4cOzNlDf2M
h9v2XnmHeYluPp4zbg0xPZo781caMFx7GIHbR6whXeSUiv0oYIj9LNblIWv4
89N3OHe6CVOc3irK/mANog1NFQnPmjH/HDsuqvZYg0c6f9AxqRYMQa3rRWyH
NeTuuMX13bwFUzjfszzL3pqPNGl/ZdqC+VvTj7CkW8ON5ogXs1v9ZncGHlY0
WkPH7/dld5qaMXnYoaF977bOlwkJjchmzMreL0p+1dbw4kGzTMCLJozJx5Gb
g2XWsFvJ7wX3GmCyM8caDUu29r0IJajoAWbx8oRAVpE1sCOepDx934DBHpuy
4c63hniNoKIciXpMxuLPPMcsawjPzu6+bP0Ogw77baCcZA2/JvepLzW8waTi
FyNjHltDSEVvfd9SFeaX8HLvdKw1XGZrRr0+UYlJzl53KwuzBg1RVGZA92vM
9JXNN6K3rYExhDlucK0Uc+74Nh7fAGsgOwUigigvMFP1O9JPeVlDn+Vpn4Gi
AsyZcP7JdHdrWNiL2vd0dx4m3mS39uYVawhL+2MA6dmYCVGhUAdHa9BlG3tR
S9Ixp4ZE2lsuWIOzeFtGhG8yJi53n4QixRpgs+PVRkIiZsxVwinK2hpSvni4
7eF5jNHTlHr9w8IaGr7HXp+Muo+JXTm4bmJiDVxGnR3/5YdjRhplsa8w1mDc
Ihzdbh2K0Yk8nCiM2OKzg/33qcotTIyZ4sjNM9awdmNhwfjqNcyXfSpHP+hb
w8HknHiedRpG67Oan57Olr7biKymX4qYiHx1eqqGNew7rTIvyLBiDbppCm2o
WUNC+FiUZZIj6/gJbdpFJWswVxVdmW5zY937q1vUJG8NcxPP69QsvVgDTfqL
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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.767899722799608*^9, {3.767900821403614*^9, 3.767900873618291*^9}, 
   3.767900908308609*^9, 3.767902688592442*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Maximize", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "t"}]], " ", 
       RowBox[{"Sin", "[", "t", "]"}]}], ",", 
      RowBox[{
       RowBox[{"-", "120"}], "<", "t", "<", 
       RowBox[{"-", "110"}]}]}], "}"}], ",", "t"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.767903606000184*^9, 3.767903613510923*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.2630406741402676`*^51", ",", 
   RowBox[{"{", 
    RowBox[{"t", "\[Rule]", 
     RowBox[{"-", "118.59512267301469`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.767903614901514*^9}]
}, Open  ]],

Cell["The adjacent minimum goes into deep water.", "Text",
 CellChangeTimes->{{3.767903800017563*^9, 3.767903809688257*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Minimize", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "t"}]], " ", 
       RowBox[{"Sin", "[", "t", "]"}]}], ",", 
      RowBox[{
       RowBox[{"-", "120"}], "<", "t", "<", 
       RowBox[{"-", "110"}]}]}], "}"}], ",", "t"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.767903766411255*^9, 3.7679037673313704`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Minimize", "::", "wksol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Warning: there is no minimum in the region in which the \
objective function is defined and the constraints are satisfied; returning a \
result on the boundary. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Minimize/wksol\\\", ButtonNote -> \
\\\"Minimize::wksol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.767903769740904*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "7.57222004231183`*^51"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", "\[Rule]", 
     RowBox[{"-", "120.`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.767903769747301*^9}]
}, Open  ]],

Cell["There is another notable maximum close to negative zero.", "Text",
 CellChangeTimes->{{3.767903514192213*^9, 3.767903548760612*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   FormBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "t"}]], 
     RowBox[{"Sin", "[", "t", "]"}]}],
    TraditionalForm], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "11"}], ",", "15"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "10"}], ",", "15"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "500"}], ",", "200"}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.767903196245903*^9, 3.7679032871213827`*^9}, {
  3.767903319360249*^9, 3.767903356359137*^9}, {3.7679052539779053`*^9, 
  3.767905263624503*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[{{-9.439779401301946, 
     200.}, {-9.419775091675001, -61.68416222807123}, {-9.411861437365715, \
-157.99852979256673`}, {-9.403947783056427, -252.78086667844948`}, \
{-9.388120474437851, -437.79856027499966`}, {-9.382529862906573, -500.}}], 
    LineBox[CompressedData["
1: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
CldYp+apamOx/wEoVIzL
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-10, 15}, {-500, 200}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.767903219560964*^9, {3.767903262963655*^9, 3.767903288050782*^9}, {
   3.7679033219065323`*^9, 3.767903357163663*^9}, 3.767905264518656*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Maximize", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "t"}]], " ", 
       RowBox[{"Sin", "[", "t", "]"}]}], ",", 
      RowBox[{
       RowBox[{"-", "6"}], "<", "t", "<", "4"}]}], "}"}], ",", "t"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7679027560817842`*^9, 3.767902788273313*^9}, {
  3.7679034303104362`*^9, 3.7679034522841988`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"172.64087217816086`", ",", 
   RowBox[{"{", 
    RowBox[{"t", "\[Rule]", 
     RowBox[{"-", "5.497787143782138`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.76790276265583*^9, 3.7679027889949093`*^9}, {
  3.76790343276123*^9, 3.76790345357782*^9}}]
}, Open  ]],

Cell["And a mild minimum is located to the right of it.", "Text",
 CellChangeTimes->{{3.767903887005581*^9, 3.7679039108368797`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Minimize", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "t"}]], " ", 
       RowBox[{"Sin", "[", "t", "]"}]}], ",", 
      RowBox[{
       RowBox[{"-", "6"}], "<", "t", "<", "0"}]}], "}"}], ",", "t"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7679038444327374`*^9, 3.76790384602453*^9}, {
  3.767903878095792*^9, 3.767903878405674*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "7.460488539293396`"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", "\[Rule]", 
     RowBox[{"-", "2.356194490192345`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7679038477299747`*^9, 3.767903879575096*^9}]
}, Open  ]],

Cell["Whereas, if I\[CloseCurlyQuote]m interested in the positive domain", \
"Text",
 CellChangeTimes->{{3.767903660286262*^9, 3.767903673308751*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   FormBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "t"}]], 
     RowBox[{"Sin", "[", "t", "]"}]}],
    TraditionalForm], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "1"}], ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7679036854540577`*^9, 3.767903702787984*^9}, {
  3.767903996804473*^9, 3.767903997946138*^9}, {3.76790529922471*^9, 
  3.767905303104329*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwVlnc81d8fx+29s13CrYQGkuzz5pa2MtMuK6FhZCtlcxVJJFFESglfCXEP
kk3GVfaemdkrfvf3z+fzeH7O+ZzPeb3er3POR8byjrENAx0dXQPt8v/7/Yte
wVtbM7hxb7yP3ymGksaqNsdLQzP40+jP1BgVhhJZtUPGBVUz2Ccr5kqRKENJ
Bd8CwSVqBv/KdUvSHaYv4am4lTMiO4MPvDyrKfKAviRR6Xp3/ZFpvJ3+mvL2
PLoSCvOxAwnhk9glrzHQ3moTb34W6lUXGcfif751FeMVPNrQnaq/OoZVXj5M
dIhawY1TqY6nOsfwDo+p/sNWKzhZUW3tatIYPhCjMeHJuoIN3pkLBcuNYa1f
Y8NTRss4IjH2ZOuhUaxjfOHB+vQiJkSI5TtZDON3+y7LPTk+j5k/9t/31hzG
CU+9P6ZJz+PpmvdHAgnDOCS9Xnx8eQ6XsGm2xPUN4dplvSfTaXPYOuDCNLYb
wp0H1RvXWObwR++XO3g8B3GEv2AJ789ZrGUvGfXhRT+2eRD6LvvfJKbubk3O
8u3Hx5Ki/XZ9m8S3R8m5edf78c9y9dBBj0n82nrjd5l8PzZfyPlxcHECM13t
lOos6MNWjk+J6n//4Ph3KudFcntxfLK+5aulMUzxUohsV+3CJ3oe0O9UG8az
yy/+G97oxPl0TxftN4aw7D3233/LO7FpXVbIYtkQDr4zJslh1okfXCzgbDs7
hM9ap2Vo3uvAGUGryw13BvHAadnKl1/acMNtnZs3Cvsxi4z45mW1Vpzrvz0l
haEbd+sWSvhvUXEfXeXZ72+6cO6lCxrpVVS8tqXw7IpeF7aMi3edu0DFZ2aW
vrM86sSYV2Ii6EELVm8V5Rdm78AemxJtn6ua8EPqodm/e39j6lcta8a8Olzr
e8nydWMTfjTvnXT6WB2Wti/+l3a/CSvtL+qI7ajFLBpENum9TTgiTdtoz1YN
Dis6r2EX3ogNYnR0zY5V4/s+jJZR8Q043xmJvuv4gftTC/W566qx2sWguJjN
YizzqN8xo7kEn7hqKh7FV4w/MF6Qe61bgq9YySaQZYtwgEHVdeFzGAc5UJL8
DQrx7btCHI9o/X55L6U5Pc7DW75Jwwrx+XhKvd7+pXYm/qBk+usyaxb267xN
HGc4g5WYyuRucZzBSRVWvq1bNqhRXXR/wawN4k1ueqPS54lC0qVO383zRJVP
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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 4}, {-5, 5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7679037034696007`*^9, 3.7679039988968143`*^9, 
  3.767905304227344*^9}]
}, Open  ]],

Cell["A little hump is the tallest there is in this neighborhood.", "Text",
 CellChangeTimes->{{3.767903923556218*^9, 3.767903937691839*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Maximize", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "t"}]], " ", 
       RowBox[{"Sin", "[", "t", "]"}]}], ",", 
      RowBox[{"0", "<", "t", "<", "10"}]}], "}"}], ",", "t"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.767903722732736*^9, 3.767903728827221*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.3223969419448344`", ",", 
   RowBox[{"{", 
    RowBox[{"t", "\[Rule]", "0.7853981633974485`"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.767903730053917*^9}]
}, Open  ]],

Cell["And there is a little undercurl for a minimum.", "Text",
 CellChangeTimes->{{3.76790396845226*^9, 3.767903986514222*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Minimize", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "t"}]], " ", 
       RowBox[{"Sin", "[", "t", "]"}]}], ",", 
      RowBox[{"0", "<", "t", "<", "10"}]}], "}"}], ",", "t"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.767903950429083*^9, 3.767903951309053*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.013932035097694207`"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", "\[Rule]", "3.9269908169872414`"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.76790395369763*^9}]
}, Open  ]],

Cell[TextData[{
 "19.  Damping constant. Consider an underdamped motion of a body of mass m = \
0.5 kg. If the time between two consecutive maxima is 3 sec and the maximum \
amplitude decreases to ",
 Cell[BoxData[
  FractionBox["1", "2"]]],
 " its initial value after 10 cycles, what is the damping constant of the \
system?"
}], "Text",
 CellChangeTimes->{{3.767804408799745*^9, 3.767804500380612*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7728941173279047`*^9, 3.772894117862562*^9}}],

Cell["Looks like the frequency is 0.3333 hertz.", "Text",
 CellChangeTimes->{{3.767907963269932*^9, 3.767907983190185*^9}, 
   3.767913315245232*^9}],

Cell["So I should be able to claim that", "Text",
 CellChangeTimes->{{3.7679081950151863`*^9, 3.7679082031834803`*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[Omega]", "*"], "\[Equal]", " ", 
  RowBox[{"freq", 
   RowBox[{"(", 
    RowBox[{"2", " ", "\[Pi]"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.767908209217086*^9, 3.767908263759062*^9}}],

Cell["or", "Text",
 CellChangeTimes->{{3.7679082756373043`*^9, 3.767908275781212*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[Omega]", "*"], "=", 
  RowBox[{"N", "[", 
   RowBox[{"0.3333", 
    RowBox[{"(", 
     RowBox[{"2", " ", "\[Pi]"}], ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.767908281469919*^9, 3.767908303414077*^9}, {
   3.767912575672884*^9, 3.767912581167657*^9}, {3.767912617518852*^9, 
   3.767912621702405*^9}, {3.767913039360511*^9, 3.767913044894988*^9}, {
   3.76791308794973*^9, 3.76791308818182*^9}, 3.7679131532351923`*^9}],

Cell[BoxData["2.094185662882956`"], "Output",
 CellChangeTimes->{
  3.7679083058193398`*^9, {3.7679126095601873`*^9, 3.767912622796007*^9}, 
   3.767912890735708*^9, 3.767913046201264*^9, 3.7679130893409157`*^9, 
   3.767913154199067*^9}]
}, Open  ]],

Cell["But I also have that ", "Text",
 CellChangeTimes->{{3.7679083143801203`*^9, 3.767908317564131*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[Omega]", "*"], "=", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     FractionBox["k", "m"], "-", 
     FractionBox[
      SuperscriptBox["c", "2"], 
      RowBox[{"4", 
       SuperscriptBox["m", "2"]}]]}], ")"}], 
   RowBox[{"1", "/", "2"}]]}]], "Input",
 CellChangeTimes->{{3.767908351787376*^9, 3.7679083572749453`*^9}, 
   3.7679084053804092`*^9}],

Cell["\<\
from up around problem 15. So if I knew what k was, I could calculate c \
directly. Aha, Wikipedia to the rescue (article on simple harmonic motion).\
\>", "Text",
 CellChangeTimes->{{3.767908414122368*^9, 3.7679084554079113`*^9}, {
  3.7679097128597803`*^9, 3.767909819791018*^9}, {3.76791140221725*^9, 
  3.7679114197517433`*^9}, {3.767911539605392*^9, 3.767911556427738*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"3", "\[Equal]", 
    RowBox[{"2", "\[Pi]", 
     SqrtBox[
      FractionBox["0.5", "k"]]}]}], ",", "k"}], "]"}]], "Input",
 CellChangeTimes->{{3.767911434692507*^9, 3.76791148572591*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"k", "\[Rule]", "2.193245422464302`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.7679114882046623`*^9, 3.7679126909330177`*^9, 
  3.76791289752365*^9, 3.767912997728361*^9}]
}, Open  ]],

Cell["and I can plug that k-value in ", "Text",
 CellChangeTimes->{
  3.767911424609614*^9, 3.767911644776929*^9, {3.7679122063424673`*^9, 
   3.7679122340279837`*^9}}],

Cell[BoxData[
 RowBox[{"2.09419", "=", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     FractionBox["k", "m"], "-", 
     FractionBox[
      SuperscriptBox["c", "2"], 
      RowBox[{"4", 
       SuperscriptBox["m", "2"]}]]}], ")"}], 
   RowBox[{"1", "/", "2"}]]}]], "Input",
 CellChangeTimes->{{3.767911082564267*^9, 3.767911097236162*^9}, {
  3.767912643413818*^9, 3.76791264528586*^9}, {3.7679130602145977`*^9, 
  3.767913061438582*^9}, {3.7679132027934227`*^9, 3.7679132050176497`*^9}}],

Cell["and solve for c.", "Text",
 CellChangeTimes->{{3.767912238779684*^9, 3.767912241620034*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       FractionBox["2.19325", "0.5"], "-", 
       FractionBox[
        SuperscriptBox["c", "2"], "1"]}], ")"}], "0.5"], "\[Equal]", 
    "2.09419"}], ",", "c"}], "]"}]], "Input",
 CellChangeTimes->{{3.7679111146060123`*^9, 3.767911206925858*^9}, {
   3.767911259204954*^9, 3.7679112645884447`*^9}, {3.7679115771807337`*^9, 
   3.767911603714514*^9}, {3.767911991317548*^9, 3.767912029987706*^9}, {
   3.767912721260893*^9, 3.767912723491086*^9}, {3.7679130702226477`*^9, 
   3.767913102469207*^9}, 3.7679131340440493`*^9, {3.767913164259087*^9, 
   3.767913165578966*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "ifun"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Inverse functions are being used by \
\[NoBreak]\\!\\(\\*RowBox[{\\\"Solve\\\"}]\\)\[NoBreak], so some solutions \
may not be found; use Reduce for complete solution information. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Solve/ifun\\\", \
ButtonNote -> \\\"Solve::ifun\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.767911207610387*^9, 3.7679112665400333`*^9, 
  3.7679116058864*^9, 3.767911999223192*^9, 3.767912031740608*^9, 
  3.767912724662376*^9, 3.767912798912512*^9, 3.767912909733955*^9, 
  3.7679130103115883`*^9, 3.7679130725898533`*^9, 3.7679131036594563`*^9, 
  3.767913135914832*^9, 3.767913166765964*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"c", "\[Rule]", 
     RowBox[{"-", "0.029465978687267642`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", "\[Rule]", "0.029465978687267642`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.767911207616983*^9, 3.767911266549962*^9, 
  3.7679116058962593`*^9, 3.76791199923205*^9, 3.767912031749999*^9, 
  3.767912724672682*^9, 3.767912798922243*^9, 3.767912909746304*^9, 
  3.767913010320496*^9, 3.767913072599842*^9, 3.76791310366945*^9, 
  3.767913135925455*^9, 3.767913166775234*^9},
 Background->RGBColor[1, 1, 0.85]]
}, Open  ]],

Cell["\<\
However, the above values of c look somewhat different than the text answer.  \
The text answer says that c = 0.0231, less than what shows in yellow. But \
what if I use the text answer c-value to work backward to the k-value.\
\>", "Text",
 CellChangeTimes->{{3.767912273338625*^9, 3.7679123674396544`*^9}, {
  3.767913221128541*^9, 3.767913236976108*^9}, {3.76791334285991*^9, 
  3.7679133533556128`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       FractionBox["k", "0.5"], "-", 
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", "0.0231", ")"}], "2"], "1"]}], ")"}], "0.5"], 
    "\[Equal]", "2.09419"}], ",", "k"}], "]"}]], "Input",
 CellChangeTimes->{{3.767911758205723*^9, 3.767911812019451*^9}, {
  3.767912818247736*^9, 3.7679128199116993`*^9}, {3.767913396858828*^9, 
  3.767913397418373*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "ifun"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Inverse functions are being used by \
\[NoBreak]\\!\\(\\*RowBox[{\\\"Solve\\\"}]\\)\[NoBreak], so some solutions \
may not be found; use Reduce for complete solution information. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Solve/ifun\\\", \
ButtonNote -> \\\"Solve::ifun\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.767911813230152*^9, 3.767912821138447*^9, 
  3.767913398710493*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"k", "\[Rule]", "2.1930826830500005`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.767911813238371*^9, 3.7679128211482973`*^9, 
  3.7679133987202177`*^9}]
}, Open  ]],

Cell["\<\
Now, comparing 2.18913 with 2.19325, they do not look that far apart. The \
ratio\
\>", "Text",
 CellChangeTimes->{{3.7679123791519003`*^9, 3.7679124385487213`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox["2.19325", "2.19308"]], "Input",
 CellChangeTimes->{{3.7679124560455093`*^9, 3.767912486043408*^9}, {
  3.7679132741830673`*^9, 3.767913296766036*^9}, {3.767913428801386*^9, 
  3.767913429609036*^9}}],

Cell[BoxData["1.0000775165520637`"], "Output",
 CellChangeTimes->{3.76791248820839*^9, 3.767913297984445*^9, 
  3.7679134309184523`*^9},
 Background->RGBColor[1, 1, 0.85]]
}, Open  ]],

Cell["\<\
looks pretty close. It appears that the damping constant is insanely \
sensitive to the k-factor. The following plot is not related to the problem, \
but maybe someday I will come back and shape it up.\
\>", "Text",
 CellChangeTimes->{{3.767912512449986*^9, 3.767912517969852*^9}, {
  3.7679142473956537`*^9, 3.767914318009324*^9}, {3.7679144282613573`*^9, 
  3.7679144571245117`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "0.2"}], " ", "x"}]], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"3.", " ", "x"}], "]"}]}], ",", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "0.2"}], " ", "x"}]], ",", 
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "0.2"}], " ", "x"}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "25"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Thickness", "[", "0.002", "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Dashed", ",", 
        RowBox[{"Thickness", "[", "0.002", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Dashed", ",", 
        RowBox[{"Thickness", "[", "0.002", "]"}]}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.002], Opacity[1.], 
    LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], Thickness[0.002], Opacity[1.], 
    Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwVkGs01AkYh92yXbAlhlTOmGpRs0Iz/OnyvjaxbUSkZkY2mZjJJQw11Vxy
ptmYyqW2y5EYGlI6LVKSENPV6TI1qxWrdEMJM2hyyWTth995PjwfnnN+DlGJ
IdFGBgYGgVP7n5RsvaLAvmgNpcCzeXJSA/7JpTMSuAfhrGX0Bt6wBja9pWY7
cbPB8Ril9lO3BrbkajaZcuWQvuNkWM8TDTB0wSt0nHKIqknYuPCcBpgKw+I+
zm3oOI55PC8NsMaZ2z5yVOCe3BZ1nT8A7UsOE92cTgiJs1pAM+qHEoHhd+MI
Lawt9PK7YNUL5lXy8tKgUZAaeMi88nvgnN+EkZu5AW6Zkwlu8V1QECV5T/I3
wa+v6NNC/d7D6qKenc3EdGTkPU8x4L+Fh1kX8kwOmqGg2vByE7sT2mN2nChh
zMYMP+8FyWs7QG6z3bE80BJFhiWcgcI2aJfPsNHHW+GNebPvs81agX1z0VY3
LgkfubRmdnW2QL4gHuOYtug9kZm5eVANgdZR0k+pdlgV9kd4uNlz2IAPbDfG
L8ARrwANq+cp3P6l7YeRTHsMPcgPOvXgEQx9NXumDiHj2hbfWodpzUC1jvbN
D3DAWol4/ZXK++Agn9stC6egVyRb6hN7F+oHx8p3MRah/6govUKsBKsKj9K4
2MWo8mNRbQsa4Y5yZkoSfwlSeaWGBz7Xg10BicPl/YS63yrXeJJvAbVrX4ZE
4oiykzY2enYNdH2xVGenOSGfwdljS6qGrwxfrXy/M47eK2R9nnENlE6PV6rT
l2IjWfjUcvpVoDcdLR85tAwnyvfnkrZWAPteUTCcomI3W3bHbvsV6F0YdF9W
9DO+T501+xuvDGyBtvNBngu+uWgtSpwoBcPHicsdLy9HD6nz3JYTJfAwJ3nO
6s2u6GCROyY8ooC6rr06zjNX5LCcB4zqiiAryVE79TjWnl1KftEnh6rOYXFb
ixuaGuv+3qw9B9XSuMXkCHd03ubLpJicBXOLyYjIDnckM5e0vso8Azk+rw0p
zBXosobE+xBxCrRl3LrUNyswlGx+jez1JxSPWsxq+p2GYcWhdQ2xx4EujEwq
6KGh6aV6mWtgNgxf0oM+gY6JtORIhcsxMKmrVoR9piMz/mlDYaYMho3n20OK
B65eNXH0/PhhoLvmUSlDHthipdm7RyUFhSmn5PBuT7Qe+vcl6Z0ENJavaUKd
J0bXq+cxv6dBtnEyIy6FQDf2YNbuJ2LwNeovy99D4AFdI+PTbTGMGuzSq/gE
Kr48nxN7VQyR3yPP04RTXhPoLzojBvex4D69lEDTumn83h1i+GfANS3nNIEv
YvpLX42IwL5dW3r9JoF3MlhiaycRqF/Gj/fcInAnb7n3+vkiSG/9GGDXQGBw
q81JiYUItC1vBsVKAoN8/G1NdUJQqp6t/PURgX1M1sJgpRBi7lWo2jsITAq/
MNIfIQS7u1SKeSeB1YqliQc2CUGlvJgKbwmkK1QRZuuEQDQWzivuIrAr+MNp
pAph5q0cdsIAgauMgui94wJouGlWLdcSWOP9kXJ+QAApNRnT1UNTPUlW6vZ3
Aui4nnbFY4TAlX7HvHubBZBzbWKSO0ZgVPiyshv1AlhXtS8k7xuBh6piUo9U
CmC88kvxEz2BbZUfTkeVCOCviqSRyUkC7zYF/Ii5AvgPj2A+aQ==
     "]]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], Thickness[0.002], Opacity[1.], 
    Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwVkGs01AkYh92yXbAlhlTOmGpRs0Iz/Onyf9vEthGRmiGbTMzkkmup5pIj
G1MNarsciaGhKZ0WKUl4ma5Ol6lZrVilG0qYQZNLJms//M7z4fnwnPOzi4gP
jDTQ09Pzm9r/pOXoZIW2xWtohe7Nk5Nq9EmUz4jjHSLPmUduTBpW4+a39BwH
Xg5pf5xW+6lbjVvz1JuNeVIyc+ep4J4namRpA1ZoueVkRE3cpoXn1ciW6Zf0
cZHsOAH5SR5qDBlnb//IVZKuiW0RN1IHsH3JEaKb20kGxlgsYBj0Yylf/7th
mIZcV+ThfdGiF02rpOVy/1EyQ89N7FHQg+e9JwxcTPVg6xwJ6RLbhYUR6e8p
Pkbw9RVzWpD3e1xd3LOrmZgOrPznyXqpb/Fh9sV8o0MmwK/Wv9LE6cT2qJ0n
S1mzIcvbc0Hiug6UWu2wL/czB6F+KXegqA3bpTOsdLEWcHPe7Psck1bk3Fq0
zYVHgUdOrZKuzhYs4MdCDNsaPCckki2DKvSzjMj4lGIDVcF/hIaaPMeN8MB6
U+wCGPHwVYf0PEX8pe2HEYktBB1K9T/94BEOfTV5pgqkwroWr1q7ac1It4z0
KvC1g9p00YarlffRTjq3WxxKA49wTsba6LtYPzhWvpu1CHxGhZkVIgVaVLjJ
Y6IXg9I7hG5d2Ih3FDOTE1KXAD1Jrn/wcz3aFFK4vKSfQPtb5Rp36m2kd+3P
Sk+3B/EpKysdpwa7vpirctIcIJXF3WtNqcavLC+N9IAjjN4rCvk84zoqHB6v
VGUuhUaq4Kn59GvIbDpWPnJ4GUyUH8ijbKtAzr3iAPI0Hbo54js2O65i70L/
++Lin+F9yqzZ35LK0Jpk7HqQ7wRvLlkK4yfkqP84frn9leXgluE4t+VkKT7M
TZyzeosz2JnljQmOyrCua5+W+8wZuCGOAwZ1xZidYK+Zehxqzy2lvuiTYlXn
sKitxQWMDbV/b9Gcx+qMmMXUMFdw3O7FphmdQ1OzybDwDlegspe0vpKcxdy1
r/Vp7BXgtIaS9CHsNGrKeHUpb1ZAENX0OtXjTywZNZvV9DsDgkuC6hqiTyBT
EJ5Q2MMA48v1Yme/HBy+rCN1cUyIZySGy5yOo1FdtSz4MxPYsU8biiRiHDac
b0smu8HqVRPHLowfQaZzPp025AYtFup9e5UZKDPmlh7Z4w6WQ/++pLxLR7X5
a4ZA6w6R9ap57O9pmGOYyIpJJsCFM5i954kIvQz6ywr2EnBQ28j6hCIc1dut
U6YSIPvyfE70NRGGfw+/wBBMebWfj/CsCF3HAvp0GQQY101L7d0pwn8GnNNy
zxDwIqpf/mpEiLbtGvmNWwTcyQoRWToIUfUydrznNgG7kpZ7bpgvxMzWj742
DQQEtFqdSjcToqblzaBIQYD/Wh9rY60AFcpnK399REAfO2RhgEKAUfcqlO0d
BCSEXhzpDxOgzV06zbSTgGrZ0viDmwWoVFxKId8SwJQpw0zWC5BoLJpX0kVA
V8CHM0AX4MzbuZy4AQJWGfgze8f52HDLpFqqIaDG8yPtwgAfk2uypquGpnrp
2Sk73vGx40baVbcRAlZ6H/fsbeZj7vWJSd4YARGhy8pu1vNxfdX+wPxvBByu
iko5WsnH8covJU90BLRVfjgTUcrHvyoSRiYnCbjb5Psj5PHxPytEZOk=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.767906757216337*^9}]
}, Open  ]]
},
WindowSize->{1366, 843},
WindowMargins->{{4, Automatic}, {Automatic, 4}},
Magnification:>1.5 Inherited,
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 10, \
2015)",
StyleDefinitions->"Charter1.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 91, 2, 45, "Input",
 Evaluatable->False],
Cell[494, 17, 106, 1, 51, "Text"],
Cell[603, 20, 216, 3, 45, "Input"],
Cell[822, 25, 102, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[949, 30, 930, 21, 45, "Input"],
Cell[1882, 53, 787, 24, 96, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2706, 82, 504, 12, 96, "Input"],
Cell[3213, 96, 755, 21, 45, "Output"]
}, Open  ]],
Cell[3983, 120, 120, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[4128, 125, 602, 15, 45, "Input"],
Cell[4733, 142, 568, 17, 45, "Output"]
}, Open  ]],
Cell[5316, 162, 109, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[5450, 167, 781, 21, 45, "Input"],
Cell[6234, 190, 1145, 37, 91, "Output"]
}, Open  ]],
Cell[7394, 230, 267, 5, 86, "Text"],
Cell[CellGroupData[{
Cell[7686, 239, 1037, 26, 2796, "Input"],
Cell[8726, 267, 853, 16, 134, "Output"]
}, {2}]],
Cell[9591, 286, 214, 3, 75, "Text"],
Cell[9808, 291, 854, 27, 148, "Text"],
Cell[10665, 320, 146, 2, 45, "Input"],
Cell[10814, 324, 1195, 30, 124, "Text"],
Cell[CellGroupData[{
Cell[12034, 358, 898, 26, 75, "Input"],
Cell[12935, 386, 78495, 1378, 352, "Output"]
}, Open  ]],
Cell[91445, 1767, 362, 7, 110, "Text"],
Cell[91810, 1776, 668, 17, 143, "Text"],
Cell[92481, 1795, 587, 15, 145, "Text"],
Cell[93071, 1812, 94, 1, 51, "Text"],
Cell[93168, 1815, 286, 6, 51, "Text"],
Cell[CellGroupData[{
Cell[93479, 1825, 172, 5, 86, "Input"],
Cell[93654, 1832, 94, 2, 76, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93785, 1839, 282, 6, 45, "Input"],
Cell[94070, 1847, 126, 2, 69, "Output"]
}, Open  ]],
Cell[94211, 1852, 159, 2, 51, "Text"],
Cell[CellGroupData[{
Cell[94395, 1858, 9188, 238, 9702, "Input"],
Cell[103586, 2098, 2263, 36, 402, "Output"]
}, {2}]],
Cell[CellGroupData[{
Cell[105883, 2139, 222, 6, 86, "Input"],
Cell[106108, 2147, 181, 5, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106326, 2157, 184, 4, 45, "Input"],
Cell[106513, 2163, 177, 3, 69, "Output"]
}, Open  ]],
Cell[106705, 2169, 250, 5, 51, "Text"],
Cell[CellGroupData[{
Cell[106980, 2178, 222, 6, 86, "Input"],
Cell[107205, 2186, 181, 5, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107423, 2196, 124, 2, 45, "Input"],
Cell[107550, 2200, 175, 3, 69, "Output"]
}, Open  ]],
Cell[107740, 2206, 153, 3, 51, "Text"],
Cell[107896, 2211, 366, 7, 110, "Text"],
Cell[108265, 2220, 141, 2, 45, "Input"],
Cell[108409, 2224, 630, 13, 155, "Text"],
Cell[CellGroupData[{
Cell[109064, 2241, 202, 6, 84, "Input"],
Cell[109269, 2249, 189, 6, 121, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109495, 2260, 5364, 148, 5238, "Input"],
Cell[114862, 2410, 1539, 31, 359, "Output"]
}, {2}]],
Cell[116413, 2444, 362, 7, 144, "Text"],
Cell[116778, 2453, 142, 2, 45, "Input"],
Cell[116923, 2457, 712, 13, 189, "Text"],
Cell[CellGroupData[{
Cell[117660, 2474, 7604, 219, 8203, "Input"],
Cell[125267, 2695, 2493, 51, 427, "Output"]
}, {2}]],
Cell[127772, 2749, 265, 5, 51, "Text"],
Cell[128040, 2756, 1307, 24, 225, "Text"],
Cell[CellGroupData[{
Cell[129372, 2784, 334, 10, 49, "Input"],
Cell[129709, 2796, 319, 10, 51, "Output"]
}, Open  ]],
Cell[130043, 2809, 306, 6, 86, "Text"],
Cell[CellGroupData[{
Cell[130374, 2819, 188, 4, 45, "Input"],
Cell[130565, 2825, 595, 19, 45, "Output"]
}, Open  ]],
Cell[131175, 2847, 376, 7, 86, "Text"],
Cell[131554, 2856, 255, 7, 92, "Input"],
Cell[131812, 2865, 378, 7, 86, "Text"],
Cell[CellGroupData[{
Cell[132215, 2876, 501, 11, 54, "Input"],
Cell[132719, 2889, 282, 6, 45, "Output"]
}, Open  ]],
Cell[133016, 2898, 188, 2, 51, "Text"],
Cell[CellGroupData[{
Cell[133229, 2904, 403, 12, 92, "Input"],
Cell[133635, 2918, 137, 2, 45, "Output"]
}, Open  ]],
Cell[133787, 2923, 133, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[133945, 2928, 314, 7, 76, "Input"],
Cell[134262, 2937, 124, 2, 69, "Output"]
}, Open  ]],
Cell[134401, 2942, 160, 3, 51, "Text"],
Cell[134564, 2947, 191, 3, 75, "Text"],
Cell[134758, 2952, 1504, 56, 114, "Text"],
Cell[136265, 3010, 926, 27, 148, "Text"],
Cell[137194, 3039, 562, 17, 51, "Text"],
Cell[137759, 3058, 216, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[138000, 3066, 656, 17, 54, "Input"],
Cell[138659, 3085, 918, 30, 76, "Output"]
}, Open  ]],
Cell[139592, 3118, 634, 16, 124, "Text"],
Cell[CellGroupData[{
Cell[140251, 3138, 1820, 54, 155, "Input"],
Cell[142074, 3194, 65765, 1227, 672, "Output"]
}, Open  ]],
Cell[207854, 4424, 707, 18, 146, "Text"],
Cell[208564, 4444, 159, 3, 51, "Text"],
Cell[CellGroupData[{
Cell[208748, 4451, 443, 13, 75, "Input"],
Cell[209194, 4466, 321, 10, 76, "Output"]
}, Open  ]],
Cell[209530, 4479, 182, 2, 51, "Text"],
Cell[CellGroupData[{
Cell[209737, 4485, 454, 12, 54, "Input"],
Cell[210194, 4499, 191, 5, 80, "Output"]
}, Open  ]],
Cell[210400, 4507, 245, 5, 51, "Text"],
Cell[210648, 4514, 726, 24, 95, "Input"],
Cell[211377, 4540, 133, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[211535, 4545, 603, 19, 95, "Input"],
Cell[212141, 4566, 310, 10, 95, "Output"]
}, Open  ]],
Cell[212466, 4579, 150, 3, 51, "Text"],
Cell[CellGroupData[{
Cell[212641, 4586, 507, 16, 95, "Input"],
Cell[213151, 4604, 152, 2, 69, "Output"]
}, Open  ]],
Cell[213318, 4609, 158, 3, 51, "Text"],
Cell[213479, 4614, 403, 10, 111, "Text"],
Cell[213885, 4626, 146, 2, 45, "Input"],
Cell[214034, 4630, 308, 6, 86, "Text"],
Cell[214345, 4638, 176, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[214546, 4646, 526, 15, 54, "Input"],
Cell[215075, 4663, 44077, 735, 363, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[259189, 5403, 446, 13, 54, "Input"],
Cell[259638, 5418, 231, 6, 54, "Output"]
}, Open  ]],
Cell[259884, 5427, 124, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[260033, 5432, 448, 13, 54, "Input"],
Cell[260484, 5447, 546, 11, 59, "Message"],
Cell[261033, 5460, 234, 7, 54, "Output"]
}, Open  ]],
Cell[261282, 5470, 138, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[261445, 5475, 746, 24, 54, "Input"],
Cell[262194, 5501, 23054, 387, 360, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[285285, 5893, 477, 14, 54, "Input"],
Cell[285765, 5909, 298, 7, 45, "Output"]
}, Open  ]],
Cell[286078, 5919, 133, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[286236, 5924, 472, 14, 54, "Input"],
Cell[286711, 5940, 268, 7, 45, "Output"]
}, Open  ]],
Cell[286994, 5950, 150, 2, 51, "Text"],
Cell[CellGroupData[{
Cell[287169, 5956, 709, 22, 54, "Input"],
Cell[287881, 5980, 15983, 271, 341, "Output"]
}, Open  ]],
Cell[303879, 6254, 141, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[304045, 6259, 400, 12, 54, "Input"],
Cell[304448, 6273, 208, 6, 45, "Output"]
}, Open  ]],
Cell[304671, 6282, 127, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[304823, 6287, 400, 12, 54, "Input"],
Cell[305226, 6301, 228, 7, 45, "Output"]
}, Open  ]],
Cell[305469, 6311, 440, 10, 150, "Text"],
Cell[305912, 6323, 144, 2, 45, "Input"],
Cell[306059, 6327, 149, 2, 51, "Text"],
Cell[306211, 6331, 119, 1, 51, "Text"],
Cell[306333, 6334, 232, 6, 46, "Input"],
Cell[306568, 6342, 86, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[306679, 6347, 471, 10, 46, "Input"],
Cell[307153, 6359, 238, 4, 45, "Output"]
}, Open  ]],
Cell[307406, 6366, 105, 1, 51, "Text"],
Cell[307514, 6369, 400, 13, 88, "Input"],
Cell[307917, 6384, 388, 6, 86, "Text"],
Cell[CellGroupData[{
Cell[308330, 6394, 248, 7, 92, "Input"],
Cell[308581, 6403, 234, 5, 45, "Output"]
}, Open  ]],
Cell[308830, 6411, 168, 3, 51, "Text"],
Cell[309001, 6416, 494, 13, 88, "Input"],
Cell[309498, 6431, 98, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[309621, 6436, 688, 16, 88, "Input"],
Cell[310312, 6454, 834, 15, 34, "Message"],
Cell[311149, 6471, 600, 14, 69, "Output"]
}, Open  ]],
Cell[311764, 6488, 417, 7, 86, "Text"],
Cell[CellGroupData[{
Cell[312206, 6499, 489, 14, 88, "Input"],
Cell[312698, 6515, 599, 12, 34, "Message"],
Cell[313300, 6529, 214, 5, 45, "Output"]
}, Open  ]],
Cell[313529, 6537, 175, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[313729, 6545, 227, 4, 76, "Input"],
Cell[313959, 6551, 171, 3, 69, "Output"]
}, Open  ]],
Cell[314145, 6557, 395, 7, 86, "Text"],
Cell[CellGroupData[{
Cell[314565, 6568, 1040, 32, 90, "Input"],
Cell[315608, 6602, 42306, 707, 342, "Output"]
}, Open  ]]
}
]
*)


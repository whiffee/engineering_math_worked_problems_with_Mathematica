(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    281028,       6777]
NotebookOptionsPosition[    267283,       6335]
NotebookOutlinePosition[    267671,       6352]
CellTagsIndexPosition[    267628,       6349]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[""], "Input",
 Evaluatable->False,
 CellChangeTimes->{3.76893363278723*^9}],

Cell[BoxData[""], "Input",
 Evaluatable->False,
 CellChangeTimes->{3.768933634114996*^9}],

Cell["\<\
1 - 10 Parametric representations
What curves are represented by the following? Sketch them.\
\>", "Text",
 CellChangeTimes->{{3.768926128988256*^9, 3.76892616110502*^9}}],

Cell["1.  {3 + 2 Cos[t], 2 Sin[t], 0}", "Text",
 CellChangeTimes->{{3.76892616797823*^9, 3.768926208759704*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"3", "+", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", "t", "]"}]}]}], ",", 
     RowBox[{"2", " ", 
      RowBox[{"Sin", "[", "t", "]"}]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.676154299268333*^9, 3.6761543559912043`*^9}, {
  3.676154437758972*^9, 3.676154443484541*^9}}],

Cell[BoxData[
 Graphics3DBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
    Line3DBox[CompressedData["
1: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
     "]]}},
  Axes->True,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->300,
  Method->{},
  PlotRange->{{1.0000002338536562`, 4.999999999999984}, {-1.999999718426341, 
   1.9999997564224232`}, {-1., 1.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.5242158642319896, -0.20140588004202006`, 3.3368598111356156`},
  
  ViewVertical->{-0.26118693179879166`, 0.6834716451622348, 
   1.3633017430112409`}]], "Output",
 CellChangeTimes->{3.676154357917824*^9, 3.676154444426936*^9}]
}, Open  ]],

Cell["Above: this is a circle. Center {3, 0}, radius 2.", "Text",
 CellChangeTimes->{{3.676154495850264*^9, 3.676154550464588*^9}, {
  3.768930726327216*^9, 3.7689307386677933`*^9}}],

Cell[BoxData[
 RowBox[{"3.", "  ", 
  RowBox[{"{", 
   RowBox[{"0", ",", "t", ",", 
    SuperscriptBox["t", "3"]}], "}"}]}]], "Text",
 CellChangeTimes->{{3.768926235479163*^9, 3.768926256700745*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "t", ",", 
     SuperscriptBox["t", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.676154568945697*^9, 3.6761546107109957`*^9}, {
  3.6761546490637207`*^9, 3.676154659637526*^9}, {3.676154784963176*^9, 
  3.676154793817129*^9}}],

Cell[BoxData[
 Graphics3DBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
    Line3DBox[CompressedData["
1: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
     "]]}},
  AspectRatio->1,
  Axes->True,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->300,
  Method->{},
  PlotRange->{{-1., 1.}, {0., 6.283185178951315}, {0., 248.05019825565105`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{3.3654514064417853`, -0.3435752073849291, -0.07545136015615045},
  
  ViewVertical->{74.8749262199711, -3.226960694826555, 
   0.7930040493908984}]], "Output",
 CellChangeTimes->{{3.676154596843298*^9, 3.676154613575883*^9}, 
   3.676154661091269*^9, {3.676154786115149*^9, 3.676154795044808*^9}}]
}, Open  ]],

Cell["\<\
Above: this looks like half of a \[OpenCurlyQuote]u\[CloseCurlyQuote] shape. \
The text answer calls it a cubic parabola.\
\>", "Text",
 CellChangeTimes->{{3.6761548324956093`*^9, 3.676154850911305*^9}, {
  3.7689307706582403`*^9, 3.768930781993589*^9}}],

Cell["5.  {2 + 4 Cos[t], 1 + Sin[t], 0}", "Text",
 CellChangeTimes->{{3.768926279760922*^9, 3.768926317882689*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", "+", 
      RowBox[{"4", " ", 
       RowBox[{"Cos", "[", "t", "]"}]}]}], ",", 
     RowBox[{"1", "+", 
      RowBox[{"Sin", "[", "t", "]"}]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Thickness", "[", "0.004", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.676154873560174*^9, 3.676154903095331*^9}, {
  3.676154949293323*^9, 3.676154964260377*^9}}],

Cell[BoxData[
 Graphics3DBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.004], 
    Line3DBox[CompressedData["
1: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
fkuS4P8DTkfOGA==
     "]]}},
  AspectRatio->1,
  Axes->True,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->300,
  Method->{},
  PlotRange->{{-1.9999995322926876`, 5.999999999999967}, {0., 
   1.9999998782112116`}, {-1., 1.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.1040122522120486`, -2.413296119082972, 1.0950499003062146`},
  ViewVertical->{0.3376012099826755, -0.4409177961003834, 
   3.7392508115193532`}]], "Output",
 CellChangeTimes->{3.676154907513311*^9, 3.676154965415805*^9}]
}, Open  ]],

Cell["Above: this looks like an ellipse.", "Text",
 CellChangeTimes->{{3.676154993026731*^9, 3.6761549993707857`*^9}}],

Cell["7.  {4 Cos[t], 4 Sin[t], 3 t}", "Text",
 CellChangeTimes->{{3.768926343543778*^9, 3.7689263673657846`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"4", " ", 
      RowBox[{"Cos", "[", "t", "]"}]}], ",", 
     RowBox[{"4", " ", 
      RowBox[{"Sin", "[", "t", "]"}]}], ",", 
     RowBox[{"3", " ", "t"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Thickness", "[", "0.004", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.676155030849681*^9, 3.67615505106546*^9}}],

Cell[BoxData[
 Graphics3DBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.004], 
    Line3DBox[CompressedData["
1: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
vA==
     "]]}},
  AspectRatio->1,
  Axes->True,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->300,
  Method->{},
  PlotRange->{{-3.9999995322926876`, 3.999999999999967}, {-3.999999436852682, 
   3.9999995128448464`}, {0., 18.849555536853945`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.8863623988201237`, -2.3151095421626513`, 1.5911959992738272`},
  
  ViewVertical->{0.39725910428084665`, -0.1176014340186645, 
   0.9844197278088397}]], "Output",
 CellChangeTimes->{3.676155053107504*^9}]
}, Open  ]],

Cell["Above: this is a helix.", "Text",
 CellChangeTimes->{{3.676155066456411*^9, 3.676155073808242*^9}}],

Cell["9.  {Cos[t], Sin[2 t], 0}", "Text",
 CellChangeTimes->{{3.7689263873883667`*^9, 3.7689264096750097`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot3D", "[", 
  RowBox[{
   RowBox[{"{", " ", 
    RowBox[{
     RowBox[{"Cos", "[", "t", "]"}], ",", 
     RowBox[{"1", "+", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "t"}], "]"}]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Thickness", "[", "0.004", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.676155091185637*^9, 3.67615509628821*^9}}],

Cell[BoxData[
 Graphics3DBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.004], 
    Line3DBox[CompressedData["
1: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
jLNzVvwk+5b6d2o82Nc02JeOWa/4hkL8hm9zcmFfNhnW6JMoKUURy3fGK8lB
/xB4Y8zJifsQuTD2v4wygb7rl416EsvpDfYRWuVRodxNuRTd85nv3i94ZoG7
bWMGnXL2lruMbHoDbt48laLY2kj556/d9fhGC3YXD/hWKPWJcpUExurY5y34
h2A5V/jLR8qHNa8csK1swca9R/VeBYPPOy2s1jqtFcvo5r7SHSqj3NxikdCV
k634h/BfydVtpZSvCVM4HWDyGx8dufDW8lMx5c3ixx4dDGrDakGfvv79XEj5
YauOfh9FOs58VP1aqv455Tf8JpxOqZPe0R503gd89U69XB9dOhbxNvcemAue
9frqRzs7OvbyNWCveP4M+o2pgBND8XTcGzF38bqfjykPWMTdt3p6B+6dzEre
Ep9O+YTe323nmzuwds4Jd5UDydCH0Pcb1LI7cNtz6zIjhyTKt/YtfL5smHSd
ngN17reg7vXWhOdIdmLt4ANnl8fdpNxdnvgTubMTy9M/hLfMuwHr6D+X82uz
O3FRyEsPrV9XKT/v/Tv5v4JOHOTf0HH1bAT01UrbWmU/k+Ov512rlL8Cfchv
Wv4gnfQ3sVdXRITB9dfwdLGR7sLaQs/srcovUn5ma6SHqH8XDpq1TLOW6QP7
tcLmdVWXuzCtWTNulf1JqA9dkulX48jx7RF96xlelNfGv7s58ogcX+w72LzT
nfKL9v/tjm0ivX/lKq1XRyhPLPTfqdRF+hLljEt3HShvcx5tft9LesoPsWhz
W5hvgUJVDTMYmMZaPiNTw5Lyl1/qjhdvJL3XrCWAoU/5Fd065lod0n3T984P
0qF88I4x+6Yx6atP/pe1Vgv61akTbmNWpLdVClywUac8usvTzcrx3/GDa5xm
qED9WeXPeOZJukMuijdToHz92Jcm2jnS5VsrlFYugOvZG6e7J5T0orrowo0z
KK8Zmbn0RjTpND0nLdHe7f9z4yPHjzck/3ORz61tryl/18RaJpnxz4OGRGpK
KZ/hXqq3K/efb6mfe22A8siwzdWnC/+dd+JRksJM6rzlw5fe3y8nPfW6leT6
RZTP6KXPKa8j/fmsYMH7KyjvUGBWCXST/tZJRNV0I+XbsyU2Sv/5d94rs+sM
tsK8OmI9sILGxLTEakUXOV3oe9WPua6TJj38alzddSM4713vISFd0gO/G/Ur
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
     "]]}},
  AspectRatio->1,
  Axes->True,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->300,
  Method->{},
  PlotRange->{{-0.9999998830731719, 0.9999999999999918}, {0., 
   1.9999993650500514`}, {-1., 1.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.5330097955523536, -3.2426189197136646`, 0.8070459090784285},
  ViewVertical->{-0.10732032363363639`, -0.408869970419983, 
   0.9062603394820811}]], "Output",
 CellChangeTimes->{3.676155100139223*^9}]
}, Open  ]],

Cell["Above: this is a figure-8, a \[OpenCurlyDoubleQuote]Lissajous\
\[CloseCurlyDoubleQuote].", "Text",
 CellChangeTimes->{{3.676155116046788*^9, 3.6761551246150227`*^9}, {
  3.6761551815517473`*^9, 3.6761551896927977`*^9}}],

Cell[TextData[StyleBox["11 - 20 Find a parametric representation",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.768926433033085*^9, 3.768926445103015*^9}}],

Cell["\<\
11.  Circle in the plane z = 1 with center {3, 2} and passing through the \
origin.\
\>", "Text",
 CellChangeTimes->{{3.768926654545751*^9, 3.7689266796160507`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.676155614955371*^9, 3.67615561671218*^9}, 
   3.7689258663121443`*^9}],

Cell["I need the radius.", "Text",
 CellChangeTimes->{{3.6761556237451963`*^9, 3.676155627255522*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e1", "=", 
  RowBox[{"Norm", "[", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2"}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.676155632511989*^9, 3.6761556465430107`*^9}}],

Cell[BoxData[
 SqrtBox["13"]], "Output",
 CellChangeTimes->{3.676155647149654*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e2", "=", 
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"3", "+", 
       RowBox[{
        SqrtBox["13"], " ", 
        RowBox[{"Cos", "[", "t", "]"}]}]}], ",", 
      RowBox[{"2", "+", 
       RowBox[{
        SqrtBox["13"], " ", 
        RowBox[{"Sin", "[", "t", "]"}]}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", 
      RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6761557184142714`*^9, 3.676155766499309*^9}, {
  3.676155839139687*^9, 3.676155843945683*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
g/NPYTI3qGxtEehXYuHFTVsSkr4TeU6Ijo7jeha2n860voW5QMq/bbJ4EwvL
XZfL9nvJBWsijuQqqbKwqJPLf0b3uUDZsODt1p0s/EBuWnvHDS4IZK3fsWo3
C8cFTwvKX+CCFrvHV3MQC7uKld2ZsOMCzbu6pobaLHzX4YB5mzEXCBs63vmm
w8IHY3FFOXCB6tnIIxcNWNi7nVUVvYYLKmeudj0/wMIeaaZOF+lc4Cif3fTh
IAv71ygWOVG44I1kOiXKlIW/OF9KUxkhwYfcyH0m5ixMEcX7pX+TICyuaXDK
goVxOCt/sZbwVub8JUsW/kw3HGWVEuUD5/2Gj7Dw72XTua/5JFigrrbfY83C
vfE2bbnPSNArBzlnbFh4dn95zP04Ii/zppyItGXh197D6y6Gk4hzsPrN23Ys
7HhjW6LjRRLYLd+j+9izsAI/e0r3FAmqv3cL7XJgYZXTj7ZuOEoCVdK0+x/C
c3qBR6imJEi1T1HxO8rCzv/NuU9rk8BNr+roMOGZq2c9W1VJIFNwcFbHkYUF
RQ44YSUSRO2Smb1KmMeiwzhVhng+z4qjzwj7TdxUCxckwVTjwS3ZhGspJ7a3
s5eRvnjuiTjCY0anFp+1LyPVnH2UE4RpQ/21XiXLSFNDWnwFYQHp2Je7Uony
fRpX84nnT/HvfM4TtozCfKtsVQi/7w8v/n5yGbnt6Xl8l2i/e9fB6bhDyyh7
z3P9ZuJ9w8W0jzhtJ+7nMbLjIhwfrji0UXoZmRQttogR/eN+pKhgdm4JScmy
P3IT/edytrC47PcS6o24KNpK9Lck0U+RZUtIdqnmy30rYvz3sJ9Zpy0hyiIa
ViPG59CdN/cUby6hiMYfPquJ8XSJ3xr00XQJtXx+0ehtxsLsSycibqkR5X1W
PXtqwsJ3YvaSrYk8diE/LCzfiIUN49scp7sWUarS6cf3DFmYt0f64KdPi6hA
4NtKS30WfiE4XhqdsYgeONK8bu5j4U5zH0dV70XU7qW8Zx5Y+PGX6Dg+i0Wk
qrQUYKLFwmHYwLd5J3Fd+7p+hjoxvshl06XlBWR08pKWyEYWtjDj9f8RSTh6
UthSmYWXT/zt1PFeQF0nGn0uryHm/8WzBm9NF5DbQ3We07Is/JyN4ZnUAqo7
zeNSScSv0+RE3s34eRR16j+yKBHfq26eFSMHzqMMNQOD7Vws/PGdWf41+3lE
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
/e//cNN2rbxru5bR//+/3MLy//2g/wMyMtYx
     "]]}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->300,
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-0.6055508541018626, 6.60555127546399}, {-1.6055507680951573`, 
   5.605550836576416}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6761557684238663`*^9, 3.6761558456850367`*^9}]
}, Open  ]],

Cell["\<\
The above result in 2D shows that the equation works.  Only necessary to add \
the z-plane requirement.\
\>", "Text",
 CellChangeTimes->{{3.6761558811595716`*^9, 3.676155904463257*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e3", "=", 
  RowBox[{"ParametricPlot3D", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"3", "+", 
       RowBox[{
        SqrtBox["13"], " ", 
        RowBox[{"Cos", "[", "t", "]"}]}]}], ",", 
      RowBox[{"2", "+", 
       RowBox[{
        SqrtBox["13"], " ", 
        RowBox[{"Sin", "[", "t", "]"}]}]}], ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", 
      RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6761559113309727`*^9, 3.6761559387521067`*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 Graphics3DBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
    Line3DBox[CompressedData["
1:eJxF1XtMU1ccwPEiUKS0UGihpZvYCkMk5eFQV5zu/thG4lS0MESYoKzgxAcB
BFkywFYg8ggqCAKC23TKQLE8slkmdF7AichQisJEcDxaHoM0RQoISEdnlnjO
Tc4f9/PXeXxPjkASF3R4FYVC8X87TN+OvtveP9mf4EHsTcYnb3+B8v/3iqj7
UuZse5gHikOhq2wemiCvjc6S0sQ8cOnu1EnyTJG/iPUZzdjAg7Zg5awm0Rz5
wNF8VYfeEdZEz8rc9lkgj+/JXSeQOAK1mhHUTdKQ67Vkc8ZVLqQmOYueTjOQ
h78Y7pgs4UD2yctd/CImcqp3Y4AywQF0N+srHPW2yLdz3JV/mtmD9t81Vs5+
LOTyMP9Oi2QWnPSLrLm2n41cJHlpZzlqCwZG+XMbd3vkESnBfiUOTChW2Buu
92CnyDzSf463hviq+Uq1tQPyAK83Y01yOgg1odyNH2PfXLGuQDhNg6J891Bd
KHZzcPi228MSesYaHxhjsN8Yee5N97cA1+vUqvFj2P346T9wI8zhj5yitGvh
2PXfVxYdLzUFg2trfztg1zob2q36TGDlSmGVGQc7o+JBq3LGSLSxpYmb+/G6
AgKlB574GwiF6K7dmXPYA0//zjELmSdWD4nZVh143/IkiY+WzuuILQnRa+4N
433OnK3r2pejJs72xgo+qrNDLmvaEpPM6SaSNzQV+sXg86JAta+bTynZ9qF4
V5LCBrn4UvdVytcqUhfrZM+KpiOP7LtayFjuJ8O314uvcy2Rg6pLuyNsiDzo
skuqInBv+XxrYnf4CDnxfmlWw0Hcp2ypTXHuOzUZcvY1f74E9wyF4Y4TrhrS
qgQO/vgY98+/fepQRaSG9AhIW8im4fvSaVbjxRBqyItlgmXVeQOBusrsDEpK
VpPC+3HyXnIR+SsdmWoJI2RUrTTCdGkOOfOSQfFryBBJmRks1KTNII9R+STH
BQ2QeQM3iEWBFjnl6fTIQEYXGekiS5MXDmBf+WBJK88mm/f08auuXUS+OH/X
ZkSkIlYP3lmvlfaS7/y3nZP9Yd1qIjXH+wXZOoZ8xwKr4TVdR5Q+8bysqdYh
L74zwbtJnSdah6Z8z6zokSfMxXYpDcvE7aHq05vfe438qzKD4Va4kaCzU/oe
bVtAHjoZNXXkGxMYbEn3yHVbRK713kPU7DQFNq18/LMp7BJC1RO6yRyosZ83
qI4tIY/q/aI1k2IBOo0TRVqJ/VlPQ0ft49XwadmFzPJb2P9O/cuOXkCDthr9
RMsp7NzE+8qZQDpEGhp9Wy2xj28VWq7dZA1vcipFyhA8nwNaSlaFBRPKTJh7
udF4Xf02KUVuClvQK38pGVqcQ55/RHTUJY4FwXtpXi5xM8hZAjnZssKGl/Im
TqPXFPIMz437i/c6QDZdIFRXDyPfdnx0+twFDtQ9U3qu195HTvWteajO5UKz
/Y383Z6d6NyNqVPiFbEjsP85vBxcr0EOBh+XEzpHSOiVFTxm4d7O7IkuuLKO
B07PhyVH83CfVGE7680OHljfy90qYuKe9e0bmbujeBBllnC81hz3/+59cZaP
ZhiNRuT/AQ+EYJk=
     "]]}},
  Axes->True,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->300,
  Method->{},
  PlotRange->{{-0.6055476059385718, 6.605551275463959}, {-1.6041522195970548`,
    5.604395509152516}, {0., 2.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.005288453960293128, -0.031760060993561816`, 3.383631677765828},
  ViewVertical->{-0.7588710124747827, 0.26538393137712063`, 
   2.1444260421326233`}]], "Output",
 CellChangeTimes->{3.676155939417491*^9}]
}, Open  ]],

Cell["\<\
With the pseudo-parallax effect, it is hard to tell whether the origin is \
part of the circle.\
\>", "Text",
 CellChangeTimes->{{3.676156879696697*^9, 3.6761569094140463`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e4", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"3", "+", 
      RowBox[{
       SqrtBox["13"], " ", 
       RowBox[{"Cos", "[", "t", "]"}]}]}], "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{"2", "+", 
      RowBox[{
       SqrtBox["13"], " ", 
       RowBox[{"Sin", "[", "t", "]"}]}]}], "\[Equal]", "0"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6761566128052177`*^9, 3.676156641249609*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"t", "\[Rule]", 
    RowBox[{"ConditionalExpression", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "\[Pi]"}], "+", 
       RowBox[{"ArcTan", "[", 
        FractionBox["2", "3"], "]"}], "+", 
       RowBox[{"2", " ", "\[Pi]", " ", 
        RowBox[{"C", "[", "1", "]"}]}]}], ",", 
      RowBox[{
       RowBox[{"C", "[", "1", "]"}], "\[Element]", "Integers"}]}], "]"}]}], 
   "}"}], "}"}]], "Output",
 CellChangeTimes->{3.676156643875904*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e5", "=", 
  RowBox[{"N", "[", 
   RowBox[{"\[Pi]", "+", 
    RowBox[{"ArcTan", "[", 
     FractionBox["2", "3"], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.676156691681974*^9, 3.676156704137074*^9}, 
   3.6761567472561207`*^9}],

Cell[BoxData["3.7295952571373605`"], "Output",
 CellChangeTimes->{3.676156704830511*^9, 3.6761567493719187`*^9}]
}, Open  ]],

Cell["\<\
Since this result points to a number in the defining interval of the \
function, I take it to show that (0,0,1) is in the circle.\
\>", "Text",
 CellChangeTimes->{{3.676156787571722*^9, 3.6761568553849487`*^9}}],

Cell[TextData[{
 "13.  Straight line through {2, 1, 3} in the direction of ",
 StyleBox["i",
  FontWeight->"Bold"],
 " + 2",
 StyleBox["j",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.768926725166185*^9, 3.7689267483637037`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.676157059179432*^9, 3.6761570608805103`*^9}, 
   3.768925882301754*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ParametricPlot3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"u", "+", "2"}], ",", 
       RowBox[{
        RowBox[{"2", " ", "u"}], "+", "1"}], ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Thickness", "[", "0.03", "]"}], ",", 
        RowBox[{"Opacity", "[", ".2", "]"}]}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}], ",", 
   RowBox[{"ParametricPlot3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"t", "+", "2"}], ",", 
       RowBox[{
        RowBox[{"2", " ", "t"}], "+", "1"}], ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"Thickness", "[", "0.003", "]"}]}], "}"}]}]}], "]"}], ",", 
   RowBox[{"ParametricPlot3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"t", "+", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"2", " ", "t"}], "+", "2"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Teal", ",", 
        RowBox[{"Thickness", "[", "0.003", "]"}]}], "}"}]}]}], "]"}], ",", 
   RowBox[{"ListPointPlot3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}], ",", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Text", "[", 
       RowBox[{"\"\<2,1,3\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"2.2", ",", "1.2", ",", "3.2"}], "}"}]}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<1,2,0\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"1.2", ",", "2.2", ",", ".2"}], "}"}]}], "]"}]}], "}"}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.67615708347965*^9, 3.676157087277822*^9}, {
   3.676157171194133*^9, 3.676157216167919*^9}, {3.676158705576666*^9, 
   3.676158819719942*^9}, {3.6761589907369843`*^9, 3.676159009984293*^9}, {
   3.6761590581616592`*^9, 3.676159099340425*^9}, {3.676159308205289*^9, 
   3.6761593530904713`*^9}, {3.6761593932178717`*^9, 3.676159430816745*^9}, {
   3.6761595122376947`*^9, 3.67615957470545*^9}, {3.676159608400362*^9, 
   3.676159636016409*^9}, {3.676159819267889*^9, 3.676159860270434*^9}, {
   3.676159929772765*^9, 3.676159947554503*^9}, {3.676159991225749*^9, 
   3.676160006594817*^9}, {3.676194488964246*^9, 3.6761945627497272`*^9}, {
   3.676194635746676*^9, 3.676194636904457*^9}, {3.6761946676391277`*^9, 
   3.676194682679021*^9}, {3.6761947139665213`*^9, 3.67619473612987*^9}, {
   3.676194802421844*^9, 3.676194824467942*^9}, {3.676194948879572*^9, 
   3.676194970938678*^9}, {3.676195002593526*^9, 3.676195057949668*^9}, 
   3.676195276927216*^9, {3.676195336821714*^9, 3.67619547154928*^9}, {
   3.6761955926194143`*^9, 3.676195701859995*^9}, {3.6761957579281807`*^9, 
   3.6761957906142673`*^9}}],

Cell[BoxData[
 Graphics3DBox[{{{}, {}, 
    {RGBColor[1, 0, 0], Thickness[0.03], Opacity[0.2], 
     Line3DBox[CompressedData["
1:eJxF1H9Qk3UcB/DHbWzwCGM/HOLmTBnbwaH9MByXk75fcRmCBRsgpp0gQ0Tu
YKTkhcoiroQ8WAQqKsQmZZIREBRJyR5ucBwdjMgppxwSGBrN6aQgQnpcXMFn
n7v3ve9e/33+ea9L02sPMAiCCF8IcyGlHVEWt9tF6ZrKXW63sJP477zx32cy
mdXSR5RBPtyZUezxzBxjtFLlpC5UyypsXI+fMMgsr8gnKdMvJXqNjwB8N46L
vJQ4QQUMJsSFivjga7e9xt9QNUb1xieo++Q8cBwTelHCv02Va2Mmt6u54INv
3dtYYPiZynuzfacpxRfc3JSpXFdppaZFNkW6lgQvfHL8ekxTJeVw7QjreN0b
vNN+p211cDvqDqoIt2SzwUOGOOl1o/1I5fVua1g6C7yZDpLNk0PoNI6I2FrA
AM8zfpKVWHgH6Wp233OYCPC0ZutDuu8uqo2LFDDCaWrJu38z1bxXcR9tCUzV
GbLnwJ3Ui6nrrzjQCtxvsifNgIckzww0Nj5Ct+rJFzSaKfD4NbwLj5VTqPMk
VRUZ/ABcP04kS9GfSH3sn09PMX8Fb4hV+NcFz6DP6mwnXcND4LHsy5rvN84i
s/KZvm/r28HzzJZDL0fMoWiOo/r+kS605D+MkwXiVfNo2C950t57C/zAkRbx
KRmNTtt+zAoxToCvbzC2apa70dfNmwe2b3CCo7vEx9Y8As+XMNWkfQr8fECm
n+KdZTh9j3nTubEZ8KLaQ8WbshiYfexz6VD9HHjNwLkeYy4T527WiVVWGvxE
TuVj6WEWnh1RjKsmCLzkjv0hgW+keWF7V/zzLd0M8A9pB2s0g40F8zd9rtlY
4Fedr7q4ezhYf/ujUek3bPArsbndb0d746SqsZIH5d7gP2l79ilifXDtpdKO
nWdJ8KKv2v4q2kJi1t7sh175vuAHm28khEYtxwOpX1zWvs8FH2aXNR5X+i42
D1xo400zFX6LzQcvUFmf3gzlLrYA/Cjtx0lc7b/YQvDB1m2OMj4Pmw8W35DI
VoD3rs3oKa3g4fKt/aWr5CLw4u+SLo6TfMzVfxnVJQoATwka2be3jI8t6qsd
beKV4E/bnpOEcQSYzk5R7uIGghcyf+8/YxDgZZzr58Noj0uCX9ovJ4RYGX3Y
GkOIPX/l7Jom84X4yUjDpOgPj6/U+R/94JoQP9uzxknmS8BbkntnF/YL/79j
Hv8X2o2NDQ==
      "]]}}, {{}, {}, 
    {GrayLevel[0], Thickness[0.003], Line3DBox[CompressedData["
1:eJxF1H9Qk3UcB/DHbWzwCGM/HOLmTBnbwaH9MByXk75fcRmCBRsgpp0gQ0Tu
YKTkhcoiroQ8WAQqKsQmZZIREBRJyR5ucBwdjMgppxwSGBrN6aQgQnpcXMFn
n7v3ve9e/33+ea9L02sPMAiCCF8IcyGlHVEWt9tF6ZrKXW63sJP477zx32cy
mdXSR5RBPtyZUezxzBxjtFLlpC5UyypsXI+fMMgsr8gnKdMvJXqNjwB8N46L
vJQ4QQUMJsSFivjga7e9xt9QNUb1xieo++Q8cBwTelHCv02Va2Mmt6u54INv
3dtYYPiZynuzfacpxRfc3JSpXFdppaZFNkW6lgQvfHL8ekxTJeVw7QjreN0b
vNN+p211cDvqDqoIt2SzwUOGOOl1o/1I5fVua1g6C7yZDpLNk0PoNI6I2FrA
AM8zfpKVWHgH6Wp233OYCPC0ZutDuu8uqo2LFDDCaWrJu38z1bxXcR9tCUzV
GbLnwJ3Ui6nrrzjQCtxvsifNgIckzww0Nj5Ct+rJFzSaKfD4NbwLj5VTqPMk
VRUZ/ABcP04kS9GfSH3sn09PMX8Fb4hV+NcFz6DP6mwnXcND4LHsy5rvN84i
s/KZvm/r28HzzJZDL0fMoWiOo/r+kS605D+MkwXiVfNo2C950t57C/zAkRbx
KRmNTtt+zAoxToCvbzC2apa70dfNmwe2b3CCo7vEx9Y8As+XMNWkfQr8fECm
n+KdZTh9j3nTubEZ8KLaQ8WbshiYfexz6VD9HHjNwLkeYy4T527WiVVWGvxE
TuVj6WEWnh1RjKsmCLzkjv0hgW+keWF7V/zzLd0M8A9pB2s0g40F8zd9rtlY
4Fedr7q4ezhYf/ujUek3bPArsbndb0d746SqsZIH5d7gP2l79ilifXDtpdKO
nWdJ8KKv2v4q2kJi1t7sh175vuAHm28khEYtxwOpX1zWvs8FH2aXNR5X+i42
D1xo400zFX6LzQcvUFmf3gzlLrYA/Cjtx0lc7b/YQvDB1m2OMj4Pmw8W35DI
VoD3rs3oKa3g4fKt/aWr5CLw4u+SLo6TfMzVfxnVJQoATwka2be3jI8t6qsd
beKV4E/bnpOEcQSYzk5R7uIGghcyf+8/YxDgZZzr58Noj0uCX9ovJ4RYGX3Y
GkOIPX/l7Jom84X4yUjDpOgPj6/U+R/94JoQP9uzxknmS8BbkntnF/YL/79j
Hv8X2o2NDQ==
      "]]}}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.003], 
     Line3DBox[CompressedData["
1:eJxF1X9M1HUcx/G7g/hx0veL4FEcYmLEJMmpE2J5+X3H0LMDzZ0/0M1pK5Sy
hGbJDGUFGwmbt27l2iwNrVXLijTJaQM/5F23i3XT5FiDmAYRA2JBeDtux3EX
2yvfn8/23mN7/vH+4/3PJ+eFGvt+g06n2zw/cfPj2ZtzNxaLCah26f5/y4OF
5bWhmICyNzts1yamYgLKXt7x+vt9gzEBZfdneqyXXTEBZf/Df/DigRMxAWWP
2NobfEpMQNnXPmnN/Sg7KqDCfb1YePeTtIiAKdwLzn3xsf3xsIBG7s7znzd/
UBYSMEl2u210Y2lQwATub+y5Vt66LyBgPPeAyZdXaZ8W0MB9fPLZFZ1bpgTU
ybttyH35+O8TAkbE/V5rjB6o8I4KGOK+vKG6ujE8LGCAu6f4UnevNijgv9wt
rXW58S/1CzjO/eiqLk+k/7aAQ9y36la/taXiJwF7ub/tuJCabvpMwO+56/7S
n0+uuaxBl8b7FyReHQ/9rME+7m0rT1ua3/NrcJh7QeaZjWPdAxqc4D5G9T3H
q4c0OM291mUKr10zosEg9+6RysJF1nENhrnv3pVd9WnGPxqMcq9365c1jU1p
UEf3+5onbpnLp6Y1aOAe93SP8oo/oMF47sVnVzuyB4MaTOA+M5A3uG44pMEk
7j2urau+c4c1aOSeNtub3OGLaDCFe03fu3ey26MaVLhfKHvNfWSTjmAq95t2
z968Mj3Bhdwbv7kSbLQYCKZxr7ro35ZfEkcwnXt/gqPtWFE8wUXc032pgbi8
BwiauNevuxHtzU8gmMG9du7BxO2LEwk+xP1c1Ql/1qNJBB/m7nzml5OZjyUT
zOSu1HxV4jIZCZq5Xy+92nnFvIBgFve5Q/uKdiopBBdz1yfePr1iLoWg7EWb
Dt+w6RSCS7iHB74eNU0rBGUvfdXr3BxUCMrumP2zuCmsEJR9qTmrJWBQCT7C
3VrRkt+TrhKU/dSv+w86C1WCsq/0LJkwvqkSlP3ojqdOldSrBGX/cXiHpa5B
JSj79jjHybEWlaDsx2i2wPuhSlB27w+/HWrqUAnKnma7Z+rsUgnKvqdPuR5w
qwRln5zZoFT6VIKyZxS2t5XcUQnK/rz75s66IZWg7F9u+zt6aUQlKLvl8LLn
ciZVgrK/o18/s+ueSlD2W87drc4ZlaDs5qVHrN5ZlaDsL37rnJz/FwnK/h+1
sEJN
      "]]}}, 
   {RGBColor[0, 0, 1], Point3DBox[{{2., 1., 3.}, {1., 2., 0.}}]}, {Text3DBox[
     FormBox["\<\"2,1,3\"\>", StandardForm], {2.2, 1.2, 3.2}], Text3DBox[
     FormBox["\<\"1,2,0\"\>", StandardForm], {1.2, 2.2, 0.2}]}},
  Axes->True,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->200,
  Method->{},
  PlotRange->{{-0.9999998775510206, 4.999999877551021}, {-4.999999755102041, 
   6.999999755102041}, {0., 6.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.9431445951894036, -3.117688178915866, 0.9167871572035119},
  ViewVertical->{0.354973553057028, -0.31349312617987596`, 
   1.8657121245862975`}]], "Output",
 CellChangeTimes->{
  3.676194564162335*^9, {3.676194638315371*^9, 3.676194684950068*^9}, {
   3.67619471649541*^9, 3.676194738282858*^9}, {3.676194809635305*^9, 
   3.6761948254505863`*^9}, {3.676194951041265*^9, 3.6761949720127573`*^9}, {
   3.6761950370135803`*^9, 3.676195059446314*^9}, 3.6761952783907537`*^9, {
   3.676195338123885*^9, 3.676195374994462*^9}, {3.6761954064749804`*^9, 
   3.676195472267517*^9}, 3.6761956275970287`*^9, {3.676195662675111*^9, 
   3.676195702920452*^9}, {3.676195764063077*^9, 3.676195791389967*^9}}]
}, Open  ]],

Cell["\<\
The red line goes through the specified point and has the same direction as \
[1,2,0]. The text answer line (black) runs inside the red line.\
\>", "Text",
 CellChangeTimes->{{3.676157370872591*^9, 3.6761573903519497`*^9}, {
  3.6761950915005693`*^9, 3.676195187908896*^9}, {3.67619549077177*^9, 
  3.676195514602811*^9}}],

Cell["15.  Straight line y = 4x -1, z = 5x.", "Text",
 CellChangeTimes->{{3.768926794441904*^9, 3.768926810919972*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.676157530612582*^9, 3.6761575322270937`*^9}, 
   3.768925888469392*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"y", "\[Equal]", 
    RowBox[{
     RowBox[{"4", " ", "x"}], "-", "1"}]}], "&&", 
   RowBox[{"z", "\[Equal]", 
    RowBox[{"5", " ", "x"}]}], "&&", 
   RowBox[{"x", "\[Equal]", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.67615753426199*^9, 3.676157592431045*^9}, {
  3.676157664948235*^9, 3.676157669843979*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", "1"}], ",", 
    RowBox[{"y", "\[Rule]", "3"}], ",", 
    RowBox[{"z", "\[Rule]", "5"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.676157548451342*^9, {3.676157582621904*^9, 3.676157593319313*^9}, 
   3.6761576709990063`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"y", "\[Equal]", 
    RowBox[{
     RowBox[{"4", " ", "x"}], "-", "1"}]}], "&&", 
   RowBox[{"z", "\[Equal]", 
    RowBox[{"5", " ", "x"}]}], "&&", 
   RowBox[{"x", "\[Equal]", "4"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6761576953729553`*^9, 3.676157696554533*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", "4"}], ",", 
    RowBox[{"y", "\[Rule]", "15"}], ",", 
    RowBox[{"z", "\[Rule]", "20"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.676157697682989*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e1", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"ParametricPlot3D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"3", " ", "u"}], "+", "1"}], ",", 
        RowBox[{
         RowBox[{"12", " ", "u"}], "+", "3"}], ",", 
        RowBox[{
         RowBox[{"15", " ", "u"}], "+", "5"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"u", ",", 
        RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Red", ",", 
         RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
         RowBox[{"Opacity", "[", ".4", "]"}]}], "}"}]}]}], "]"}], ",", 
    RowBox[{"ParametricPlot3D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{
         RowBox[{"4", " ", "t"}], "-", "1"}], ",", 
        RowBox[{"5", " ", "t"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Thickness", "[", "0.003", "]"}]}]}], "]"}], ",", 
    RowBox[{"ListPointPlot3D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "15", ",", "20"}], "}"}]}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.676157844127696*^9, 3.6761579863251047`*^9}, {
   3.676158016500202*^9, 3.676158025011341*^9}, {3.676158134462325*^9, 
   3.676158141782157*^9}, {3.6761583771747923`*^9, 3.6761584076177588`*^9}, {
   3.676158446018221*^9, 3.676158514220749*^9}, 3.676158565181094*^9, {
   3.676158606993827*^9, 3.676158607185223*^9}}],

Cell[BoxData[
 Graphics3DBox[{{{}, {}, 
    {RGBColor[1, 0, 0], Thickness[0.005], Opacity[0.4], 
     Line3DBox[CompressedData["
1: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
      "]]}}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.003], 
     Line3DBox[CompressedData["
1:eJwt1XtYTHkcx/EmNUfUSPcyOzszzZmamlNblFat85XcoockilBKKuWWa2iV
bCGMO2VdFimREh6xdX5MmIRSVirbRVg1ZehuSq3nOb8/Ps/rr8/fb9GKtfNX
6uro6Pj92IgfC7+h0AwPE4hVhrzqN6qHhylkNmAj9RwksDJUW3RBM2uAQqXT
L4ds7iewMrTp1Iuuo70UkjYUlbV/IbAylB9oP2jXQaE2w5aLtc0EVoYklfWG
8+ootC7GLahQSWBlyPCRt9P5WxRKJOtQZCqBlaGGPOP1EE2hjEzbI895BFaG
diVf691VJUfnGtPW+htwsfYo1XJ1+eX9jsiiMmCuzFwfa4f4pfYX4xc7INW8
AJ9yUg8rRVpJlPlkZxmaKSM32opHYEmUEe/kf63NDk3KC8mqcNbFSpCqtuuQ
8v6P375IU1cZB2uL7lJwKjGeRD19l44vs9PBilGnG8/T3UWCSsVHJpTEDTEr
xs6yaXQXoXuB9U0n9GyRp/7vhY4Rg8zZZKbW3FWIpoU7z8ssEaFjMHHilJ1a
hlWAQtKSH848KEThZ4I+tJ3rZ1j5aIcy7+yHJwJUcUVgwMnoZVhtkNI/cnYS
8JHAMN+FudPNsFoh6Rj+0Jr31miU8GNF69VOhtUCGWY3Tr0UaIliF+w5lZ39
hWE1Q6k5WSVVVWYoVNlYLjjSweQ3a1aOKTNB/LrVdMB2EyT+bcj/UVIrc1gw
nP0OGaOYZzuz3N+NQTlRhc3373xgWI1QtbewLkYyGsV0FYTsz2hmWA2Qz7qG
8U4cLnJK1A/m2tYzlkyyfPdhffTvmot9LT06yHTbq9EnMquZfV5t+uXPOSjo
ZNnB7cn9TE1ErMONlsdMrKv78Zr1A4xRItGTcaad2ZLgcLDseB4zd+4jl6Kq
LmZfel3/nz9VM1cPecClX67TFm+/al4XfmKeBttmR06uog9GJ70OTX5Cv5d/
nz95oJLpVIoMv63ooI2653he86+mo86vqgs78JQ2dhH6Wkr76aaNjydsTqmn
UWt6dPvI/2hDg8GmMlcOfC7ye7hF1Uy/jc9M0Si66Bj75pvHJ3EhK/VCaMTe
D/ScMVMfqEwGaEVr2dZi9Sgge3NNt2a20qwcqNk229CRYwwNN38u9ozqoFn1
obxi/EIyzAQCTzalqRVf6KtOD8bWiAzAodhqtfS2GZy9nF4850Qn7TXbevtp
uRFwKzTtjZ6WoLckrkN/WzfNagyPClRRM05aw4vQnCvzU3ppVhPQLTrqv4rk
w20jm6V9sf00qxmID4dOcEsTgDRD9ImYo6VZLSBIx/xrylohaDenfM8NGKRZ
rSDk6YbE2bdEoNaO42V7DNGsNlC94+XI6BYxnF+V+mqcrQ5ABS9n4nQ+pE3J
KXvnKAHFlGfp1iQHhLtPWY/3FUC3/7Bm+RoSeGtzvZXmulghVPkuNJ2QKYUS
n7vFd2xGYEXwOVAaF9FsB9/jlrsv5OlhxbBjVp9SPVYGHKLqtON3PawYHqRN
37XZywHcZ2546KvDxUrAp44Xv3SXI2jfXvtk3snFSsDD7M2KzDw5+MSqFH69
XKwEAlO13U2Fcjgw0OKxR8vFSmCdlp8qLZKD0Gbc3m5dAktCdlNYboFSDjMW
7ZVVmxJYEqyvq7uevJHDsZcrYxRuBJaEb9OGU7p1KXB6LGgftY3AknBvi/SK
3yIKtgZOOua9k8CS8Lpt5q9HQyh48D7QKyGJwJLwdenq8jdhFCwYcSC9dS+B
JUHmk68Jj6VgOwzIVRkEloQM40keCUkUqO7VxO35m8CSkJDjV5aVS4GJb5d5
MSKwJJzgr1vSnk9BSC2vpLuUwJJQeOhIh8sdCjR903gRzwksCepNNWOLEQUW
brfyvBsILAkh3mGLq/+hILS0YmHCOwJLwtbbu9ut6inICVAPFXwksCQctc9K
XNZEgdcG8VyRhsCSUM5T/9XaRsEfnMl9QV0EloRPSUZuzl8oqFQEn1P0EVgS
9Hqcn2zsocBGuGmGaoDAkiCMmh98T0sB7iOWBNxH+B/U9mxZ
      "]]}}, 
   {RGBColor[1, 0, 0], Point3DBox[{{1., 3., 5.}, {4., 15., 20.}}]}},
  Axes->True,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{376.69396756842207`, 422.21572271701393`},
  Method->{},
  PlotRange->{{-7.999999632653061, 9.999999632653061}, {-32.999998530612245`, 
   38.999998530612245`}, {-39.99999816326531, 49.99999816326531}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.859693421021725, -1.7203319791405647`, 0.5591166419553031},
  ViewVertical->{2.7625023972409526`, 0.03326045304555129, 
   0.833087759637585}]], "Output",
 CellChangeTimes->{3.676158566981488*^9, 3.676158608037767*^9}]
}, Open  ]],

Cell["\<\
Above: the line shown meets the requirements. The text answer line is shown \
within.\
\>", "Text",
 CellChangeTimes->{{3.6761581945709267`*^9, 3.6761582071703*^9}, {
  3.676158635472776*^9, 3.6761586470309553`*^9}}],

Cell[TextData[{
 "17. Circle ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], 
     SuperscriptBox["x", "2"]}], "+", 
    SuperscriptBox["y", "2"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = 1, z = y."
}], "Text",
 CellChangeTimes->{{3.768926845038645*^9, 3.768926876803434*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6761972950339413`*^9, 3.676197296856694*^9}, 
   3.768925917699081*^9}],

Cell[TextData[{
 "This didn\[CloseCurlyQuote]t look like a circle when I first did the \
problem. This problem is treated in the s.m., so I take that general \
direction. It looks like an ellipse, and the form of the equation can be \
changed.\ne1=",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox[
      SuperscriptBox["x", "2"], 
      SuperscriptBox[
       RowBox[{"(", 
        SqrtBox["2"], ")"}], "2"]], "+", 
     SuperscriptBox["y", "2"]}], "=", "1"}], TraditionalForm]]],
 ". From the general form, it can be seen that it is an ellipse with \
semi-major axis of ",
 Cell[BoxData[
  FormBox[
   SqrtBox["2"], TraditionalForm]]],
 ". Putting that into parametric form would be ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SqrtBox["2"]}], TraditionalForm]]],
 "cos u+a)+(sin u+b), where the a and b are center locations. Here both are \
zero."
}], "Text",
 CellChangeTimes->{{3.632054538812511*^9, 3.632054552133412*^9}, {
  3.676197343416622*^9, 3.6761973656930656`*^9}, {3.676197682634704*^9, 
  3.6761977396869287`*^9}, {3.6761977921650887`*^9, 3.676198003053625*^9}, {
  3.768931005176258*^9, 3.768931008742607*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SqrtBox["2"], 
      RowBox[{"Cos", "[", "u", "]"}]}], ",", 
     RowBox[{"Sin", "[", "u", "]"}], ",", 
     RowBox[{"Sin", "[", "u", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"u", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Thickness", "[", "0.004", "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6320563947113647`*^9, 3.6320564214095297`*^9}, {
  3.6761980192151747`*^9, 3.676198049691934*^9}}],

Cell[BoxData[
 Graphics3DBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.004], 
    Line3DBox[CompressedData["
1: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
qyqzOA==
     "]]}},
  Axes->True,
  AxesLabel->{
    FormBox["x", TraditionalForm], 
    FormBox["y", TraditionalForm], 
    FormBox["z", TraditionalForm]},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->300,
  Method->{},
  PlotRange->{{-1.414213397013589, 1.4142135623730836`}, {-0.9999998592131705,
    0.9999998782112116}, {-0.9999998592131705, 0.9999998782112116}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.9835718999175596, -2.312674570855299, 2.265860244368973},
  ViewVertical->{-0.10797339344857369`, 0.08689925106522908, 
   1.4032577456334572`}]], "Output",
 CellChangeTimes->{3.632056426919231*^9, 3.632308378695665*^9, 
  3.633630414736569*^9, 3.67619732792527*^9, 3.676198051248548*^9}]
}, Open  ]],

Cell[TextData[{
 "The ",
 StyleBox["z",
  FontSlant->"Italic"],
 " part of the equation just mirrors ",
 StyleBox["y",
  FontSlant->"Italic"],
 ", it\[CloseCurlyQuote]s not necessary to ponder what effect it might have.  \
But after it is plotted, it can be seen to be a true circle, due to that ",
 StyleBox["z",
  FontSlant->"Italic"],
 " component, which represents its tilt away from the ",
 StyleBox["xy",
  FontSlant->"Italic"],
 "-plane. "
}], "Text",
 CellChangeTimes->{{3.676198073402564*^9, 3.676198162503601*^9}, {
   3.676198241671733*^9, 3.676198244892633*^9}, 3.768931047340723*^9}],

Cell[TextData[{
 "19.  Hyperbola 4",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " - 3",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["y", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", z = -2"
}], "Text",
 CellChangeTimes->{{3.7689268990511637`*^9, 3.768926926304323*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.676206079460766*^9, 3.6762060812184277`*^9}, 
   3.7689259256428967`*^9}],

Cell[TextData[{
 "Hyperbola. I looked this one up before. The parametric version is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["a", 
     RowBox[{"cos", " ", "t"}]], ",", 
    RowBox[{"b", " ", "tan", " ", 
     RowBox[{"t", "."}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " In this case ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"a", "=", "1"}], ",", 
    RowBox[{"b", "=", 
     RowBox[{"-", 
      RowBox[{
       FractionBox[
        SqrtBox["3"], "2"], "."}]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.676206086130389*^9, 3.676206145290533*^9}, {
  3.6762064648076773`*^9, 3.6762065444756813`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ParametricPlot3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"Cos", "[", "u", "]"}]], ",", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          SqrtBox["3"], "2"]}], 
        RowBox[{"Tan", "[", "u", "]"}]}], ",", 
       RowBox[{"-", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "0", ",", 
       RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", 
     RowBox[{"Exclusions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "u", "]"}], "\[Equal]", "0"}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.015", "]"}], ",", 
        RowBox[{"Opacity", "[", ".4", "]"}]}], "}"}]}]}], "]"}], ",", 
   RowBox[{"ParametricPlot3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cosh", "[", "t", "]"}], ",", 
         RowBox[{
          FractionBox[
           SqrtBox["3"], "2"], 
          RowBox[{"Sinh", "[", "t", "]"}]}], ",", 
         RowBox[{"-", "2"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Cosh", "[", "t", "]"}]}], ",", 
         RowBox[{
          FractionBox[
           SqrtBox["3"], "2"], 
          RowBox[{"Sinh", "[", "t", "]"}]}], ",", 
         RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[Pi]"}], ",", 
       RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Thickness", "[", "0.003", "]"}]}], "}"}]}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.676206339505702*^9, 3.6762063729498787`*^9}, {
   3.676206552095076*^9, 3.6762068252055483`*^9}, {3.67620695950592*^9, 
   3.6762070318458977`*^9}, {3.6762070962913094`*^9, 3.676207123762073*^9}, 
   3.676207156993005*^9, 3.676207238701902*^9, {3.676207290548049*^9, 
   3.676207431806674*^9}, {3.676207486660821*^9, 3.676207504211656*^9}, 
   3.6762076702909613`*^9, 3.6762077105309353`*^9, {3.6762077493162127`*^9, 
   3.6762077612338257`*^9}, {3.6762077952006197`*^9, 3.676207808256413*^9}, {
   3.676278440876742*^9, 3.676278477379094*^9}}],

Cell[BoxData[
 Graphics3DBox[{{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.015], Opacity[0.4], 
      Line3DBox[CompressedData["
1:eJxTTMoPSmViYGAQBGJmIFZlAIEP9rccz8+3PF+7jwECDpzgvX75DPsHe7H+
lnPzElbvh4kf+Z5TFyn/wT719lKJ/OrdcHFmmZOOpt4f7Avs5ioyhx+Fi2c3
HXqh2P3BPvuGRJu08lm4+ImSRMcvth/tM+KtRfWdrsHFV5ZMkwx1+2Svx8q/
I2naPbj4UcaAjTnPP9trsvqazGl8AhePj5mfyyPxzf6KuoHEheRXcPENC9vC
hKb9tF9+ebH0NK+PcPEutdWM/W//2W+W3hL85fU3uDin/YK7AtOYHVp3hM9W
/f4PLr5CX+TscQseB1mZuYlGBewHYOLG0bcMRFZKOJirLtnzSEgULl5mHsHN
s1LZQTzUskrpgwJcXDK4aZVRuYUD39cvTn3apnDxz0LObYcN6x1q31x1vsNc
DRcHAHK4i7w=
       "]], Line3DBox[CompressedData["
1:eJxTTMoPSmViYGBQAmJmIP7q9Uth437nA76Cnk5fJBwdGCDgQOIJuZ2XH6oe
CF5SdJLlvhJcPNrlQc1tQ6kDjQYPFoRmi8HF58+acPHnXqEDOQWRB+9u44eL
b6sWNf2bwn7gtUfnp/eczHBxrktBpz76MR4Q3sByfdnUX/Yw8QCrpF/Npn/2
T9hwsX6r3Be4eM+211cOX/m+fw5Xhovs9Hdw8boI9oZL0l/3P26ckiV58zlc
3Ea+a6KvyOf9sqGSAbkMj+DijwOe+Vzf/nF/iewPxlOxt+DiS25MZrC782H/
uTVnn2pmX0K4Z4om55X2D/tryp+e7TpxBi4+PamH85HHh/2b+9dfVGU8ChfP
79Vcr6nwYb9qu9iSkmu74eJRnz+ysHN82F9/+OkZ6WOrEf66ZSTIyPBhf371
T7MQuxC4uDRrSo8/+4f93rvNXv9vWLUf7t889ra9QPMzVqwWTxfbAxe3LPOJ
+uTzYb/SRgaJxGlH4eIu0248Y+n4sJ87Y1H+2bNn4OI8K48GtV39sF9xBXfW
DYVLcHFfx9+2GUc/7q/UtJ1ceeoWXJxvh8xCUfXP+5OEz5o8sH6EsPf+tcPi
jF/3C15qufpw4nO4+NV5JpYMr7/vP/hQOZTx9Du4+LoZJd3P//7e37pa4rj8
k89w8eUiRp5sMowHMg59qOU0+gUXn3pa+twkfvYDh1neP1TZzXQAJr53fgib
a7XggfVFc/YeqOSFi2dM9UiIbJQ4UMu4cArzBxG4uNWsNwp3FqkcOOessar3
pCJcXO759hSN5zYHODb8W8PKYgkXd9F3bjtsWH+AifWa8x3marg4AJJHMic=

       "]], Line3DBox[CompressedData["
1:eJxTTMoPSmViYGAQAGJmIL6sVfrM9LOjw7PqjXt5ROwdGCDgwMnwvhmCVWoO
074b2aUnK8PFzR67SnNvlXJQ0+7zcbknBhefvfv6t/yFPA6rqx2Ll51jh4ub
X/oclmzM4tC7RHRRkgADXLxs1mZVc67/9rdeJ8a+5/huDxM/83DbBfvlP+2v
vnvsvCj2I1xcJP9Sk0XiN/vLtlvaAqVew8VTGRxvXfj62Z4jk3VuxuoncPHT
gben30j9ZN/bs/vmk9L7cPHIqdXeKiEf7Vfc/TElmPc6XNyW5UVo0IQP9g/m
XF7os/4sXFy7e1O5VvAHe9uEXdc7io/BxQWeS7UGqX+w14jgVbU/vQ8uvibh
4oKjnB/s4z/46s5Yug4urgqmPti7GG1cYHm+1g4mDgD/noXn
       
       "]]}, {}}, {{}, {}, {}}}, {{}, {}, 
    {RGBColor[1, 0, 0], AbsoluteThickness[2], Line3DBox[CompressedData["
1:eJxd1GtMkwcUBuCWSysVXAiZHaSFQkFwEAEBSQX8Di0SwIG1lEuooAhd9yG3
FapjyAYd2zBRGALZIKJMwA2nWYIKSAcjTgbj1gYFUm4RiHFY5wrVjlrEkSwc
kp3k/fPkzcn5dVxP5YmkFhQKhbcZy82IhN6Fq6p8mK/JTjSas/so/02fQ3B9
6GBdDriYacX0qyQ62V4VYOWZBaW2V1fWWz9En2m0XHC2ygTZSXlwRUI6epB0
R/6C7wn453yT3NpCst0/UimUZiXD80VGb6d7ArpUOTat7RLBA54o/vgB4baT
0cULvFgY8HPTX4iLRm+JcVm0TI6EtQkNJz9ZgB6X6nHmxvvhMDCmcK3sCkNX
22z0zGsPQo/VZZMmNBh9lhLxdselQGhgKtWcYX/05qEi1RrDD+aD0qqvq7zR
CwvK20179sJ82b7xHzs80B9xUo9KRFy4Ja61aGvhoJce+5jtEOoM7Chu8L6X
juglPGZffwATqqZY3aYhB/TOH9bP0V7Yg7b9xfWhw7vQM6gSwXKULXyhtwz8
7TM6ujg9xF72xhp8om9mu/VQ0cebkwZrKqhw7bEknkYz/7rlWbl/T9G1ZqJ4
RB3k1WNAvzv7feF7vxiJS+/+dbjJpEPfCB+UVH5kIOQVBSoufQl9Yeo435e1
SrBk/NzKjDn0pbODXa1uK8TinunacGIC3efQ137FpXoilrzoHW8eRleMXzvl
yNETEUsPX6epVei2acMRVhQ9oeST7IRDmejvhLGMIWw9cYK0C7A7301sOdVv
7dWgUk/UtT3jC0JH0INi7O+N7F8hXnWQbT9pJ9AbfD7J0W/ef/crpzw3cg7d
5OxeEhhnIEJoIfE7OxbRiyReVbZ6IzGQ7aDpPfscvUTmOkl3XicKTt5o3rB+
ub1HfOZOTQoVTHR3SL35Gv3W8vSAyYUGNrWZWYI5Kmz5zO3hR6sbO8FTKOs3
hNDR8+RuMXZd9pBaMeA1+8QO3b3x54u5xt1QUL6Sb1PngB5QkNjWF8sGWe8d
4xOuI3r8aLW/M4sLnU6ff5qr4KC3y/8o0pV5gdIcHAWeHujc5f4I3xhfoDDW
yycZ3ugmxp9hWmkg5DfwtZoWf/R5G/UDnetBUDjWP5U2HkB/yGOwq5nhcC5n
Vqf4NgzdlZc3zIJI0OwVK1UCAXp30hu/UMUHcE8gvMBriUKv0CXfr68VwTfV
u8aMu4Xox1qfjRKTSTD61vAl2SJGZxpKb2fkpgG1srlKnpKCPhJud5oxkQFl
U5zI+z7p6OqZI/v5UhKuOH035bshRX/6++XH6Z45IGtSJJ4mSPT//U/0fwFx
MNSV
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], Thickness[0.003], 
     Line3DBox[CompressedData["
1:eJxd1GtMkwcUBuCWSysVXAiZDNJCS0FwEAEBSQWEtkgAB6vlGiooQtd9yG2F
6hiyQcdmTRSGQCZElAm44TRLUAHp4DtxMhi3EhRIuUUgxiHOFaodtYgjWTgk
O8n758mbk/PrcE7miaVmFAqFtxnzzYhFnoWr6nyYq85ONJiygfLfgF1gXXB/
bQ44m2jF9GsEOtFW6WfhngWl1tdW1ls+QZ9uMJ93ssgE2Ql5oCohHT1AuiN/
3vs4/HO+UW5pJtnuH6kQSbOS4cUCo6fDNQFdqhyZ0naK4SFPHHfsgGjbiaji
eV4M9Pm46C7ERqE3RzsvmCdHwNr4KDs/WYgem+p2+uaHfOgbUXAqOkPQNVYb
3XPag9BtccU4GhyIPkMJf7fjkj/U2ys17EFf9KaBIvUawwfmAtKqbqg90QsL
ytuMe/bCXNm+sZ/a3dAfs1M/loi5cDu+xqy1mY1eevQzll2wE7AiuYH7Xjmg
l/DsodfPHionmV3GATv0jh/Xz9Je2oK27eWNgcO70DOoEuFSpDV8rTP3/+1L
Onp8epCt7K0leEXdynbppqKPNSX1V6uocP2JJI5GM5FbnpX79yRdayKLhzQB
Ht169HszPxR+8KuBvPT+X4cbjcvoG/x+ScWnelKuKlBz6Yvo85PHBN7MVZIp
E+RWZMyiL57p72xxWSEX9kzV8EPH0b0OnfMpLtWRMcRFzzjTILpi7PpJB7aO
DF989CZNo0a3ThsMt6DoSKWAYCUcykR/L4RpCGLpyOOEjZ/N+a7QLaf6rL3u
V+rI2tbnAmHwEHpAtO39of0r5Ot2ovVn7Th6vdfnObrN++9965jnQsyiG51c
S/xj9WQQLShuZ/sCepHEo9JaZyD7su1Ge868QC+RcSboTutkwYmbTRuWr7b3
xJ++W51CBSPdNSz11hv020tTfUZnGljVZGYJZ6lhWz59Z/Dx6sZOcBfJevVB
dPQ8uUu0TactpKr6PGae2qC7NvxyMdewGwrKV/Ktau3Q/QoSWyGGBbKeu4an
XAf0uOEqXycmFzocv/oiV8FGb5P/UbRc5gFKU2BkmLsbOnepN9w72hsojPXy
CYYnupHxZ4hW6g/59QLtaLMv+pyV5uEy5yAoHOqeSRsOoD/iMVhV9nw4mzOz
rPg+BJ3DyxtkhkXA6N54pVooRO9KeusTrPgI7gtFF3jNkeiq5eQHdTVi+K5q
14hhtwj9aMvz4dCJJBh+p/+GaI5Ht9eX3snITQNqRVOlPCUFfYhvc4oxngFl
k+yIB17p6JrpI/sFUgKuOl6e9N6Qoj/7/cqTdPcckDUqEk+FEuj/+5/o/wIq
M/EV
      "]]}}},
  Axes->True,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->300,
  Method->{},
  PlotRange->{{-7.101243557994728, 6.938087791992314}, {-5.967973027233715, 
   5.864193288542449}, {-4., 0.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.676207714187298*^9, 3.676207762879305*^9, {3.676207796947497*^9, 
   3.676207811112444*^9}, {3.676278458242461*^9, 3.676278478668429*^9}}]
}, Open  ]],

Cell["\<\
Three things going on here. The first is my own plot of the hyperbola, skinny \
black. The second and third are the fatter versions of the hyperbola, but \
only the red one is contained in the text answer. It deficient to me because \
it is necessary to show two functions in order to get both sides of the \
hyperbola.\
\>", "Text",
 CellChangeTimes->{{3.676207836190048*^9, 3.676207896419533*^9}, {
  3.676278360610136*^9, 3.676278408772163*^9}, {3.676278560604824*^9, 
  3.676278580083675*^9}, {3.768931126796929*^9, 3.7689311558473186`*^9}, {
  3.768931235595242*^9, 3.768931340862154*^9}}],

Cell["\<\
21.  Orientation. Explain why setting t = -t* reverses the orientation of {a \
Cos[t], a Sin[t], 0}.\
\>", "Text",
 CellChangeTimes->{{3.768926984701784*^9, 3.768927040329056*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[TextData[{
 StyleBox["23. CAS project. Famous curves in polar form.",
  FontWeight->"Bold"],
 " Use your CAS to graph the following curves given in polar form \[Rho] = \
\[Rho](\[Theta]), ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Rho]", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " + ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["y", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", Tan[\[Theta]] = ",
 Cell[BoxData[
  FormBox[
   FractionBox["y", "x"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", and investigate their form depending on parameters ",
 StyleBox["a",
  FontSlant->"Italic"],
 " and ",
 StyleBox["b",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.768927061752714*^9, 3.768927181744021*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[GridBox[{
   {
    RowBox[{"\[Rho]", "=", 
     RowBox[{"a", " ", "\[Theta]"}]}], 
    RowBox[{"Spiral", " ", "of", " ", "Archimedes"}]},
   {
    RowBox[{"\[Rho]", "=", 
     RowBox[{"a", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"b", " ", "\[Theta]"}]]}]}], 
    RowBox[{"Logarithmic", " ", "spiral"}]},
   {
    RowBox[{"\[Rho]", "=", 
     FractionBox[
      RowBox[{"2", "a", " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]]}], 
    RowBox[{"Cissoid", " ", "of", " ", "Diocles"}]},
   {
    RowBox[{"\[Rho]", "=", 
     RowBox[{
      FractionBox["a", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]], "+", "b"}]}], 
    RowBox[{"Conchoid", " ", "of", " ", "Nicomedes"}]},
   {
    RowBox[{"\[Rho]", "=", 
     FractionBox["a", "\[Theta]"]}], 
    RowBox[{"Hyperbolic", " ", "spiral"}]},
   {
    RowBox[{"\[Rho]", "=", 
     FractionBox[
      RowBox[{"3", "a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", "\[Theta]"}], "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], "+", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "3"]}]]}], 
    RowBox[{"Folium", " ", "of", " ", "Descartes"}]},
   {
    RowBox[{"\[Rho]", "=", 
     RowBox[{"2", "a", " ", 
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{"3", "\[Theta]"}], "]"}], 
       RowBox[{"Sin", "[", 
        RowBox[{"2", "\[Theta]"}], "]"}]]}]}], 
    RowBox[{
     RowBox[{"Maclaurin", "'"}], "s", " ", "trisectrix"}]},
   {
    RowBox[{"\[Rho]", "=", 
     RowBox[{
      RowBox[{"2", "a", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", "b"}]}], 
    RowBox[{
     RowBox[{"Pascal", "'"}], "s", " ", "snail"}]}
  }]], "Text",
 CellChangeTimes->{{3.768927269309827*^9, 3.768927675178598*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[TextData[{
 StyleBox["24 - 28 Tangent",
  FontWeight->"Bold"],
 "\nGiven a curve C: ",
 StyleBox["r",
  FontWeight->"Bold"],
 "[t], find a tangent vector ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox[
     RowBox[{"r", "'"}],
     FontWeight->"Bold"], "[", "t", "]"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", a unit tangent vector ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox[
      RowBox[{"u", "'"}],
      FontWeight->"Bold"], "[", "t", "]"}], ",", " ", 
    RowBox[{
    "and", " ", "the", " ", "tangent", " ", "of", " ", "C", " ", "at", " ", 
     RowBox[{"P", ".", " ", "Sketch"}], " ", "curve", " ", "and", " ", 
     RowBox[{"tangent", "."}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.768927748677019*^9, 3.768927826594943*^9}}],

Cell["25.  r[t] = {10 Cos[t], 1, 10 Sin[t]}, P : {6, 1, 8}", "Text",
 CellChangeTimes->{{3.7689278819510927`*^9, 3.768927937619548*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.67621725069611*^9, 3.676217252330537*^9}, 
   3.768925938546364*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e1", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"10", " ", 
      RowBox[{"Cos", "[", "t", "]"}]}], "\[Equal]", "6"}], "&&", 
    RowBox[{
     RowBox[{"10", " ", 
      RowBox[{"Sin", "[", "t", "]"}]}], "\[Equal]", "8"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.6762138795046873`*^9, 3.676213887908635*^9}, {
  3.676213918365666*^9, 3.676213930219306*^9}, {3.676217289053706*^9, 
  3.676217289915856*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"t", "\[Rule]", 
    RowBox[{"ConditionalExpression", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ArcTan", "[", 
        FractionBox["4", "3"], "]"}], "+", 
       RowBox[{"2", " ", "\[Pi]", " ", 
        RowBox[{"C", "[", "1", "]"}]}]}], ",", 
      RowBox[{
       RowBox[{"C", "[", "1", "]"}], "\[Element]", "Integers"}]}], "]"}]}], 
   "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.676217279018211*^9, 3.676217291011191*^9}, 
   3.6762257742608967`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e2", "=", 
  RowBox[{"e1", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "1", ",", "2", ",", "1"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.676217298805463*^9, 3.676217343915123*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ArcTan", "[", 
   FractionBox["4", "3"], "]"}], "+", 
  RowBox[{"2", " ", "\[Pi]", " ", 
   RowBox[{"C", "[", "1", "]"}]}]}]], "Output",
 CellChangeTimes->{{3.676217305557578*^9, 3.6762173446173077`*^9}, 
   3.6762257771540833`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e3", "=", 
  RowBox[{"e2", "/.", 
   RowBox[{
    RowBox[{"C", "[", "1", "]"}], "\[Rule]", "0"}]}]}]], "Input",
 CellChangeTimes->{{3.6762173573961077`*^9, 3.676217366376967*^9}}],

Cell[BoxData[
 RowBox[{"ArcTan", "[", 
  FractionBox["4", "3"], "]"}]], "Output",
 CellChangeTimes->{3.676217367555068*^9, 3.676225779815673*^9}]
}, Open  ]],

Cell["\<\
Above: this is the value that satisfies the problem vector function for the \
given point.\
\>", "Text",
 CellChangeTimes->{{3.676222287423667*^9, 3.67622231516608*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e4", "=", 
  RowBox[{
   RowBox[{"r", "[", "t_", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"10", " ", 
      RowBox[{"Cos", "[", "t", "]"}]}], ",", "1", ",", 
     RowBox[{"10", " ", 
      RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.67621763115598*^9, 3.676217660398271*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"10", " ", 
    RowBox[{"Cos", "[", "t", "]"}]}], ",", "1", ",", 
   RowBox[{"10", " ", 
    RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.676217661628476*^9, 3.676225783380875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e5", "=", 
  RowBox[{"r", "[", 
   RowBox[{"ArcTan", "[", 
    FractionBox["4", "3"], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6762176712263937`*^9, 3.676217681135309*^9}, {
  3.676218651149564*^9, 3.6762186522607403`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"6", ",", "1", ",", "8"}], "}"}]], "Output",
 CellChangeTimes->{3.676217681888698*^9, 3.676218653150774*^9, 
  3.676225786236751*^9}]
}, Open  ]],

Cell[TextData[{
 "The above shows that P corresponds to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", "=", 
    RowBox[{"ArcTan", "[", 
     FractionBox["4", "3"], "]"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " with regard to the given function ",
 StyleBox["r",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.676218532368802*^9, 3.6762185721194143`*^9}, {
  3.676222348805153*^9, 3.676222357068939*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e6", "=", 
  RowBox[{
   RowBox[{"r", "'"}], "[", 
   RowBox[{"ArcTan", "[", 
    FractionBox["4", "3"], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6762186594203997`*^9, 3.676218691459296*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "8"}], ",", "0", ",", "6"}], "}"}]], "Output",
 CellChangeTimes->{3.676218692284618*^9, 3.676218725933054*^9, 
  3.6762257892062893`*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e7", "=", 
  RowBox[{"e5", "+", 
   RowBox[{"w", " ", "e6"}]}]}]], "Input",
 CellChangeTimes->{{3.676218344362376*^9, 3.676218363893119*^9}, {
  3.676218720097471*^9, 3.676218745255973*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"6", "-", 
    RowBox[{"8", " ", "w"}]}], ",", "1", ",", 
   RowBox[{"8", "+", 
    RowBox[{"6", " ", "w"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6762183664003363`*^9, {3.6762187218245277`*^9, 3.676218746628117*^9}, 
   3.676225792057622*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["Above: this is the tangent of C:r[t] at P, called Q(w).", "Text",
 CellChangeTimes->{{3.676217932726142*^9, 3.676217956540196*^9}, {
  3.67621875690471*^9, 3.676218758015525*^9}, {3.6762221705772257`*^9, 
  3.676222185321151*^9}}],

Cell["\<\
Below: using the (8) on p. 384 of the text, I find the unit tangent at P,\
\>", "Text",
 CellChangeTimes->{{3.676218043282317*^9, 3.676218054992486*^9}, {
  3.6762188951635523`*^9, 3.676218927361261*^9}, {3.676219027981379*^9, 
  3.6762190364053*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e8", "=", 
  RowBox[{
   RowBox[{"r", "'"}], "[", "t", "]"}]}]], "Input",
 CellChangeTimes->{{3.676218943221651*^9, 3.67621901490987*^9}, {
  3.67621914129517*^9, 3.676219148669498*^9}, {3.6762193149636307`*^9, 
  3.676219352625339*^9}, {3.676219390538219*^9, 3.676219394792245*^9}, {
  3.6762195706864433`*^9, 3.6762195730686626`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "10"}], " ", 
    RowBox[{"Sin", "[", "t", "]"}]}], ",", "0", ",", 
   RowBox[{"10", " ", 
    RowBox[{"Cos", "[", "t", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6762190164484167`*^9, 3.676219150197379*^9, {3.676219325873475*^9, 
   3.6762193548600283`*^9}, 3.6762193957943172`*^9, 3.6762195744691563`*^9, 
   3.676225795696897*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e9", "=", 
  RowBox[{"Norm", "[", "e8", "]"}]}]], "Input",
 CellChangeTimes->{{3.676219050394085*^9, 3.676219056965913*^9}, {
   3.676219418159787*^9, 3.676219425615679*^9}, {3.676219595132201*^9, 
   3.676219600053602*^9}, {3.676219659436357*^9, 3.6762196623240747`*^9}, {
   3.676219759010273*^9, 3.676219856062744*^9}, {3.676220277943131*^9, 
   3.676220278109243*^9}, {3.676220343691832*^9, 3.67622038906831*^9}, {
   3.676220482578393*^9, 3.676220498008402*^9}, {3.676221102140274*^9, 
   3.676221122050333*^9}, 3.676221249600892*^9, {3.676221657782979*^9, 
   3.676221665341424*^9}, {3.6762219294560423`*^9, 3.676221929631083*^9}}],

Cell[BoxData[
 SqrtBox[
  RowBox[{
   RowBox[{"100", " ", 
    SuperscriptBox[
     RowBox[{"Abs", "[", 
      RowBox[{"Cos", "[", "t", "]"}], "]"}], "2"]}], "+", 
   RowBox[{"100", " ", 
    SuperscriptBox[
     RowBox[{"Abs", "[", 
      RowBox[{"Sin", "[", "t", "]"}], "]"}], "2"]}]}]]], "Output",
 CellChangeTimes->{3.6762211235122747`*^9, 3.676221666088456*^9, 
  3.6762219304606953`*^9, 3.676225798690897*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e10", "=", 
  RowBox[{"FullSimplify", "[", "e9", "]"}]}]], "Input",
 CellChangeTimes->{{3.676219672199785*^9, 3.676219679778172*^9}, {
  3.676221952056584*^9, 3.676221958383655*^9}}],

Cell[BoxData[
 RowBox[{"10", " ", 
  SqrtBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"Abs", "[", 
      RowBox[{"Cos", "[", "t", "]"}], "]"}], "2"], "+", 
    SuperscriptBox[
     RowBox[{"Abs", "[", 
      RowBox[{"Sin", "[", "t", "]"}], "]"}], "2"]}]]}]], "Output",
 CellChangeTimes->{3.67621968133946*^9, 3.676221128915839*^9, 
  3.676221959168779*^9, 3.6762258018780413`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e11", "=", 
  RowBox[{"10", "/.", 
   RowBox[{
    SqrtBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        RowBox[{"Cos", "[", "t", "]"}], "]"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        RowBox[{"Sin", "[", "t", "]"}], "]"}], "2"]}]], "\[Rule]", 
    "1"}]}]}]], "Input",
 CellChangeTimes->{{3.6762220129229107`*^9, 3.676222028524849*^9}}],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{3.676222029263728*^9, 3.676225807849245*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e12", "=", 
  RowBox[{"e8", 
   FractionBox["1", "e11"]}]}]], "Input",
 CellChangeTimes->{{3.676222038186083*^9, 3.676222061283408*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"Sin", "[", "t", "]"}]}], ",", "0", ",", 
   RowBox[{"Cos", "[", "t", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.676222062985199*^9, 3.676225810960479*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["\<\
Above: this is the unit tangent. The above answers agree with the text.\
\>", "Text",
 CellChangeTimes->{{3.676222079764636*^9, 3.676222086187354*^9}, {
  3.676222408867711*^9, 3.676222418227549*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e14", "=", 
  RowBox[{"e12", "[", 
   RowBox[{"{", 
    RowBox[{"6", ",", "1", ",", "8"}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6762257179485064`*^9, 3.676225733884815*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Sin", "[", "t", "]"}]}], ",", "0", ",", 
    RowBox[{"Cos", "[", "t", "]"}]}], "}"}], "[", 
  RowBox[{"{", 
   RowBox[{"6", ",", "1", ",", "8"}], "}"}], "]"}]], "Output",
 CellChangeTimes->{3.676225735409996*^9, 3.676225817504611*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e13", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"ParametricPlot3D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"10", " ", 
         RowBox[{"Cos", "[", "t", "]"}]}], ",", "1", ",", 
        RowBox[{"10", " ", 
         RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"-", "3.275"}], ",", "3"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Red", ",", 
         RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
         RowBox[{"Opacity", "[", ".4", "]"}]}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], ",", 
    RowBox[{"ListPointPlot3D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"6", ",", "1", ",", "8"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}], ",", 
    RowBox[{"ParametricPlot3D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"6", "-", 
         RowBox[{"8", " ", "w"}]}], ",", "1", ",", 
        RowBox[{"8", "+", 
         RowBox[{"6", " ", "w"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"w", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Green", ",", 
         RowBox[{"Thickness", "[", "0.005", "]"}]}], "}"}]}]}], "]"}], ",", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"{", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<{6,1,8}\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"6.7", ",", "1", ",", "8.7"}], "}"}]}], "]"}], "}"}], 
     "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6762251082369127`*^9, 3.676225136693802*^9}, {
  3.67622517628811*^9, 3.6762253404726667`*^9}, {3.676225435288004*^9, 
  3.676225531011092*^9}, {3.6762255690834923`*^9, 3.67622559686865*^9}, {
  3.676225629571328*^9, 3.676225650648048*^9}, {3.67622584076303*^9, 
  3.676225847760682*^9}, {3.676225922377294*^9, 3.676225946628975*^9}, {
  3.676226011242899*^9, 3.676226026121957*^9}, {3.676226067464531*^9, 
  3.67622607377637*^9}, {3.6762262980894413`*^9, 3.676226436186392*^9}}],

Cell[BoxData[
 Graphics3DBox[{{{}, {}, 
    {RGBColor[1, 0, 0], Thickness[0.005], Opacity[0.4], 
     Line3DBox[CompressedData["
1:eJxF1Hs01GkYB/BZYijlMm5jGmbmp5vKHrmsyzKvu3bdatpNu81RxFGjMxGV
pV2XIkLk2s6RUmoiszZbxOr3Wiqsyo4T5UTTFLFRhowhss6e433fc55/Pv+8
5zyXLztMuDNCjUKheC+V+lKdK3fISJESkPL/m+BGLxj9YOU3zRWMJT7pmsQO
VwjCLiuHuQYtecFNi9jbZtJXse0buVAhjpHOYM8AO/Z7G8rJU6M1MZzn2Ed+
SarxrZkiJTymt7YYu36m01FFxgIpit8UFB6OXevmCONihTqcJjdLWZUc5I4/
ZfW+UuhA/pz0xo50NvKoun2UVB8aHD516WGCLQv5tP7DZt84Ewi39a+uml2L
/PwNd9HRAgasEFh+V2tGRx65puX9BksLCAdrL4rpRsjlif6MPxZYsKZkg+7d
SD3kYQW6Gx+7cqAqTx7AS6Yib0xXlJuYE1CjLoQc61JD/oUp6BMdIeBgwjWj
YN15ctkn3H8MuVZLQNGBq9k+JQrk9xz4rkoZAV1959JcrF8g31e0QGp9IuCh
B+GDPcUPuMte5+4os12aE2M45TCVP4r85a6O/W8+EHCr3HbnP0EzyGO8qTx+
BwE/BxQddnxHAcs+F1SpbZNNwHyTb0NM1TWR1532Sg51JqChlY+oVm0V8tUn
W+NDejiQ00x7IqUYIO/n/+pFf8GGRd0MYFVgjNwC2jdUpbJgbFlStkGSGfKR
32hVA7NM2OlC2XPHwxy5gbMnq2GjGTSv9+qjNrCQ00pUlJdTRvDLgk1XT0+w
kbfe96C/lOjDC8z+5paPHOTyJptnzFRtqKPjuXsymEB+kzd16XjzCui8vSNt
5gL29KcOx0+0L5J8j8HH1Y+xJxXLPWkbleTW7M1nEyewc4b8mk2GRkimvdji
+iL238XfKx88aSZFPfcHQ1XYb1u79e6Kf8Wtj9Pg7B3Arq/dcCa/cJLLauNp
jkuwJ8761AXunefu/fB6VBaJfU1smtJSoA7mu1VncrSwv/WaiurN1wI9K6M/
uenhPgglNarOzfoggNcoy5ThflpeaSpPOmYE0vMjht+KcP8bpfcD2ZAOKvhc
vUVrBnKV8rLWwm4m2HG3a5ujwAT/KzYPhg4sMNxKHzulwPuw/ro873AZGwQV
yTMHPugg787YM7KzkgN4X13d3vCGijwlKOddoDEBCj0qHvndU0Mesf76ip9j
CGBzPipcWP8J7XPg7Vhm6S0C5LqFlt/qVSAnU9rWGcoIsIfXR4vZIkPOGE9u
j5slgI5/EmfaogndVwrFLPrO0vxOM9iloaUjyGnjKrJ/ad7/GpdVpj9TIvep
orZl/k2A5wVrng75U+Cyd3ZAcUkhAV6fcz+UxdRAHi34Uyr8hgArjy3Ut3N1
kSe3DGi4HuSA/Pf2Vlk8Q+Suu8gr1U5sYNZQuv5IhClyY7vbAe9vWQAjmnTO
7QDOt+RRu6+3bV0LkuNdEiyrLZBvWddx4qzQFMxaRz+at8X5aWerI2yJNATU
4mqpZiTO25zcVM5nvi5wlWR2HXTC+bwpNWvypJ4maGOvXDebi11ypVWUUE8B
H4PUFX91YS/pPzbgW6jk/geXSmDq
      "]]}}, 
   {RGBColor[0, 0, 1], Point3DBox[{{6., 1., 8.}, {0., 1., 0.}}]}, {{}, {}, 
    {RGBColor[0, 1, 0], Thickness[0.005], Line3DBox[CompressedData["
1:eJxF1H1Q0wUYB/DNgZPxMmQTBgO2wcbeTHcCh+NFH7GUDqSwJDjCuZiixuHs
FCyLFEPRbZYiZ8SlI+ROwR0uEAYtX8AX5LCSBmjGBkur/S62XlgNTl2rO589
d9+75z5/f5+H99aujVsXkEikFF8ovpzmBLu9XimQ/p/fV2e2WLm+BS4M/jzW
1On3gMu5NSv+IIG5fKAnWeH3b4ZMD1V2MuwkAt1TlyToA+Dkls5QIGwq7Rg7
zO8WRZHSMBYIP6Taa49UitHVm4urd3RTQXaL5am4LvK74XJU31dB8P6drBs2
jt+1reu6tuiDYSPVFTKiFqKHECseNBtCIb+N1ee4kYQeGd5jyTbSYU2PzHyK
7/czzp7H3DvhcIU8ltFXJUBXfQBJxN3FILtWHvG2hY/eq1CpFNcjYNj6Tl5+
qt+/M76mo11igDONRumoT0SPuaje7/2SCUEBn4Q3/pKA/tecsFx/bglcpH3x
mWel35+6Qlia9kjYt3tpvU7HQx/Z9HVXR0cUyHPbRjpnuOgS+qIN+5pZ8JGi
XZcLfu9XH+g4fjYaNHczch2ZHPT7ggZqwckY4BVk7FlmjUMXHfpeVNrEhsBG
qWq8Ltbfh1dtKWebY2H8iofc9CIb3aauW6XTxkF/qfXT/F+j0bvlxaE3T8SD
xq6fjG9lobMKbz84X8eBduHrjgJVFDp394EcZToXJqc5zmpaJPqG4O6FDDMX
nhwc0ptuM9Gzv+0ejEnlwbLTR/N+28FAf6U8r2y9iQedFRlXayMi0Ff1vuwJ
kydArGjYljwaju6WMbVLjQkgN9r/7JwJQ79Zs3fBruREYFiJgy9sDUF/8+/W
aqohETQayxm1Iwh9XLDSns7ngzjRZWhKo6JvF5ctb2jjg/7wIMvTFYA+UFiy
f028ALIsQ3sz58noKUXEBWaLALY/pJdWTD5b/dwrD62byGIngZZeQBC2OXTN
tkXz5AZfj1mzJalVs+jX4pRegimEHPUS2tg9J7r52WGK5LgQRMULBRPWn9BH
u9YSusW+uzo677RmjaIPc7fd0p70efSpR0UBn1997sd6N7VM08Qw1R/4XvrH
E+jKhB83l+jEYCLm1mY7H6OTepezpVQJ1Lt3Mu5Nu9BrKY6RxhoJTElDQh8V
utHj+HKlgCSFnJdc9/dsmUf/sLJwlvau7+/wzkG67Ck6q4xeVWeWgulJ0Xmv
14tufGPon//+2r+RJ6lL
      "]]}}, Text3DBox[
    FormBox["\<\"{6,1,8}\"\>", StandardForm], {6.7, 1, 8.7}]},
  Axes->True,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->300,
  Method->{},
  PlotRange->{{-9.99947597281474, 9.99932192734064}, {0., 
   2.}, {-9.998442656390443, 9.999438646482533}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.8232377951667323, -3.28155424774677, -0.06067331954128931},
  ViewVertical->{0.11870434552424587`, -5.943580813211332, 
   0.7954013276519023}]], "Output",
 CellChangeTimes->{{3.676225471956697*^9, 3.67622553222418*^9}, 
   3.676225570991631*^9, 3.676225651830955*^9, 3.676225849011561*^9, {
   3.676225935622932*^9, 3.676225947664777*^9}, {3.676226013246063*^9, 
   3.676226026962997*^9}, 3.676226074697588*^9, 3.6762263302380953`*^9, {
   3.676226369756761*^9, 3.676226436739244*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"27.", "  ", 
    RowBox[{"r", "[", "t", "]"}]}], "=", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     FractionBox["1", "t"], ",", "0"}], "}"}]}], ",", " ", 
  RowBox[{"P", ":", 
   RowBox[{"{", 
    RowBox[{"2", ",", " ", 
     FractionBox["1", "2"], ",", " ", "0"}], "}"}]}]}]], "Text",
 CellChangeTimes->{{3.768927967295559*^9, 3.7689280201886673`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.67622261704335*^9, 3.676222618545336*^9}, 
   3.768925960520989*^9}],

Cell["\<\
By inspection it can be seen that P represents t=2, as demonstrated in e2.\
\>", "Text",
 CellChangeTimes->{{3.676223280825613*^9, 3.676223303382868*^9}, {
  3.6762240749268723`*^9, 3.676224081685281*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e1", "=", 
  RowBox[{
   RowBox[{"r", "[", "t_", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     FractionBox["1", "t"], ",", "0"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.6762233573694963`*^9, 3.6762233820848846`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"t", ",", 
   FractionBox["1", "t"], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.676223385149827*^9, 3.676223865314767*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e2", "=", 
  RowBox[{"r", "[", "2", "]"}]}]], "Input",
 CellChangeTimes->{{3.676223388642374*^9, 3.676223398078599*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", 
   FractionBox["1", "2"], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.676223399124042*^9, 3.676223867040839*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e3", "=", 
  RowBox[{
   RowBox[{"r", "'"}], "[", "t", "]"}]}]], "Input",
 CellChangeTimes->{{3.6762234118882303`*^9, 3.676223415220645*^9}, {
  3.676223497173051*^9, 3.676223497306776*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"-", 
    FractionBox["1", 
     SuperscriptBox["t", "2"]]}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.6762234161756687`*^9, 3.676223498171626*^9, 
  3.6762238710163383`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e4", "=", 
  RowBox[{
   RowBox[{"r", "'"}], "[", "2", "]"}]}]], "Input",
 CellChangeTimes->{{3.67622345657557*^9, 3.676223463755692*^9}, {
  3.676223501452608*^9, 3.676223501810659*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"-", 
    FractionBox["1", "4"]}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.6762234647482452`*^9, 3.676223502556856*^9, 
  3.676223874296487*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e5", "=", 
  RowBox[{"e2", "+", 
   RowBox[{"w", " ", "e4"}]}]}]], "Input",
 CellChangeTimes->{{3.6762234820473547`*^9, 3.6762235129222603`*^9}, {
  3.6762237826285887`*^9, 3.676223785924122*^9}, {3.676223829284912*^9, 
  3.676223832115213*^9}, {3.676224008825059*^9, 3.6762240091589527`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"2", "+", "w"}], ",", 
   RowBox[{
    FractionBox["1", "2"], "-", 
    FractionBox["w", "4"]}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.6762235144236317`*^9, 3.6762237874630117`*^9, 
  3.6762238331350203`*^9, 3.676223878488844*^9, 3.676224010656858*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["\<\
Above: the tangent of C:r[t], matching the answer in the text.\
\>", "Text",
 CellChangeTimes->{{3.676223528363014*^9, 3.676223541809661*^9}, {
  3.7689316762224083`*^9, 3.76893168356465*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e9", "=", 
  RowBox[{"Norm", "[", "e3", "]"}]}]], "Input",
 CellChangeTimes->{{3.676223597429631*^9, 3.676223601730028*^9}, {
  3.676224147797534*^9, 3.676224147923974*^9}}],

Cell[BoxData[
 SqrtBox[
  RowBox[{"1", "+", 
   FractionBox["1", 
    SuperscriptBox[
     RowBox[{"Abs", "[", "t", "]"}], "4"]]}]]], "Output",
 CellChangeTimes->{3.676223887493565*^9, 3.676224149045286*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e10", "=", 
  FractionBox["e3", "e9"]}]], "Input",
 CellChangeTimes->{{3.676223631491706*^9, 3.67622364851129*^9}, {
  3.6762241540454807`*^9, 3.6762241555477533`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", 
    SqrtBox[
     RowBox[{"1", "+", 
      FractionBox["1", 
       SuperscriptBox[
        RowBox[{"Abs", "[", "t", "]"}], "4"]]}]]], ",", 
   RowBox[{"-", 
    FractionBox["1", 
     RowBox[{
      SuperscriptBox["t", "2"], " ", 
      SqrtBox[
       RowBox[{"1", "+", 
        FractionBox["1", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "t", "]"}], "4"]]}]]}]]}], ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.676223649459771*^9, 3.676223896473804*^9, 
  3.676224157211523*^9},
 Background->RGBColor[0.87, 0.94, 1]]
}, Open  ]],

Cell["Above: this is the unit tangent. ", "Text",
 CellChangeTimes->{{3.676223660056005*^9, 3.676223671014826*^9}, {
   3.676224963484153*^9, 3.676224983041054*^9}, {3.7689280461232433`*^9, 
   3.7689280500094624`*^9}, 3.7689317009637747`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e13", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"ParametricPlot3D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t", ",", 
        FractionBox["1", "t"], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"-", "3.5"}], ",", "3.5"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Red", ",", 
         RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
         RowBox[{"Opacity", "[", ".4", "]"}]}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], ",", 
    RowBox[{"ListPointPlot3D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", 
          FractionBox["1", "2"], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}], ",", 
    RowBox[{"ParametricPlot3D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", "+", "w"}], ",", 
        RowBox[{
         FractionBox["1", "2"], "-", 
         FractionBox["w", "4"]}], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"w", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Green", ",", 
         RowBox[{"Thickness", "[", "0.005", "]"}]}], "}"}]}]}], "]"}], ",", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"{", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<{2,\!\(\*FractionBox[\(1\), \(2\)]\),0}\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"2.1", ",", "1", ",", "0"}], "}"}]}], "]"}], "}"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.676226132903245*^9, 3.676226157165042*^9}, {
  3.676226198452387*^9, 3.676226255721141*^9}, {3.6762264721069193`*^9, 
  3.676226539166464*^9}}],

Cell[BoxData[
 Graphics3DBox[{{{}, {}, 
    {RGBColor[1, 0, 0], Thickness[0.005], Opacity[0.4], 
     Line3DBox[CompressedData["
1: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

      "]]}}, 
   {RGBColor[0, 0, 1], Point3DBox[{{2., 0.5, 0.}, {0., 0., 0.}}]}, {{}, {}, 
    {RGBColor[0, 1, 0], Thickness[0.005], Line3DBox[CompressedData["
1:eJxN1Xs01GkYB/AxZuaVJDshkmUq01SKzaGket9oJW0aDs02SYx0VqphbEvj
0gVdTkX3dHFiu7kURwqdpNYKTa4hRJLcksu4jMltbOe05/f0nPP95/PH9zz/
POfhiMRufnQajbb5W9S/xb9lWJNGk+PSuJixqalOTPt/nNT77KLocuyp0hDl
q8B53M69LKYc9+w9/Sp8ErwzoKFcS1OOtZwvxI+Oge9SPjtvqCvHLowkmyEF
uLf28TlWPDmuDM2TdHwBF6w2XLybL8c1PkPdpXXg6+PXbCxNlONmK5/Gqxng
l/XGNE22DGBrxVFp4O/ggyYlB9oGBjCSG72cgcC5MuOI0HODuHdO0D8OOR2U
V9p2ogtrh7CBr1Z4tjd4tE2BnWnLEM5v+7m1fyZ4+ledIau4YZwSFcLandtO
+UNhp6O+nQLfczvd9KcI/PnGCoeARgU23W7g5cwGt1ctLnQ8OYI/HO5O8Hza
Bvvg+N6LS5TYoMXqpPUecBvOmaxMmRL7iW259+aAs0sUE+4hX7HSKOaIR+En
ypXj4v49BqOYQXc6IQsGd1fs8EPFo3gr03Vz+FzwE7HVIRLJGM5bqV9YVNRK
efEjoRWfPY4T7rh11P0FHp7oIXn0fBwXWNQWmZmCrzIUCU/5TGDfoXK3VRUf
KQ8UtL7s0pnETjXaCadCwCOsu8t0n03ide2aVw9wwC8lqh/K2qHC2RaRhFvV
Qvn8qrNZ9dOnsPjKiruzpOBPYy3OBaZP4Vsr/8gp5oHrjaTGfOHSSO2s1GHe
ww+Un0ShDFEEjfTJZyrtmOBHPpTV/VROIyqyi9/k20y59bX3PdFmauTK6/Xc
kUfvKa9Z8At/Z5gaEWQn7Fw3DXz0wAyN4NdqRFu3vd/Qv4nyhpRbas7z6MTl
fu5EwNNGytfeLtgiDKaTmByp9yZD8Lj9Zj1VBXTyad7jhZ7Sd5RfN7KXaRmq
E1lJWEBHWQPl5nGdE4f91UnyR0uWyhw8tN0xKPeFOplpLTGOi6yn3JlusWoR
m0H2jSedetBYRznqF7qqiRhkkOO8Y9IO/HA+Sb2RyyC0qMi0oti3lEe6ZwiC
pjEJQ5DEN+6tpXxFWZ3jNB8mOe/Hl/SuAW/SWx+tkcMkTjUhyr5zNZSzzGz1
1yEWGX58pjpioJryHv2uz6u9WGTRGwvzYw7gWytM2JIMFnH3edFolPSG8vuC
6ye0p1gkmf+qr1UNPL+gkuz3QCRa6hU536MK7mI4djO6i4hgduuugaxKygvK
7S3F9xAJE0lvcjLBLVNG2HXJiCQ+YL9zTQfX8vKqv5uGSJeDw5aHyeCFxUt9
HTMRORh42zY4AXz59dLQmDxEbrzara04Bq5jr3lbvRqRlrAvOV+3gUfOzT8W
UIMIozhqkCcA7xkJ8q+uRYTHnrt0mzt4SVrDslv1iAQl//b3ExfwQ3opT+yb
EaHXPjgtdQDv69pQceQzIguWBfpMmIN7/jue+bkbkY0HNW6YLwaXJWRcdO1B
ZF9h4lvPheB33GYLOf2IZAurNj3j/NCT19H2YhiRDceX20Tq/9Bz+VoxbwSR
gDeywPRZ4CuDXFLPKhE5a+yb1qwDrsvNFnuPIVKfdcEUTwc/StvjVjKOyIRq
yXaxBrj8nbG15SQips6Fl24ywb0eV82OVyHy6yXPygo6+Pe/iMj3Pwn+H0ri
Ung=
      "]]}}, Text3DBox[
    FormBox["\<\"{2,\\!\\(\\*FractionBox[\\(1\\), \\(2\\)]\\),0}\"\>", 
     StandardForm], {2.1, 1, 0}]},
  Axes->True,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->300,
  Method->{},
  PlotRange->{{-3.499999857142857, 3.499999857142857}, {-3.391165723051139, 
   3.3011280131100875`}, {-1., 1.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.04015316408332839, -0.9236413100852803, 3.255038318317935},
  ViewVertical->{0.003528915464176198, 0.6059836677138261, 
   2.8527595722135763`}]], "Output",
 CellChangeTimes->{
  3.676226166004588*^9, {3.676226199714497*^9, 3.6762262563776712`*^9}, {
   3.676226514762764*^9, 3.6762265405546417`*^9}}]
}, Open  ]],

Cell[TextData[{
 StyleBox["29 - 32 Length",
  FontWeight->"Bold"],
 "\nFind the length and sketch the curve."
}], "Text",
 CellChangeTimes->{{3.768928064849847*^9, 3.7689280792396708`*^9}}],

Cell[TextData[{
 "29.  Catenary ",
 StyleBox["r",
  FontWeight->"Bold"],
 "[",
 StyleBox["t",
  FontSlant->"Italic"],
 "] = {",
 StyleBox["t",
  FontSlant->"Italic"],
 ", Cosh[",
 StyleBox["t",
  FontSlant->"Italic"],
 "]} from ",
 StyleBox["t",
  FontSlant->"Italic"],
 " = 0 to ",
 StyleBox["t",
  FontSlant->"Italic"],
 " = 1."
}], "Text",
 CellChangeTimes->{{3.768928245327033*^9, 3.7689282734040327`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.676227452591083*^9, 3.676227454310007*^9}, 
   3.768925977695508*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e1", "=", 
  RowBox[{
   RowBox[{"r", "[", "t_", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"Cosh", "[", "t", "]"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.676227673895769*^9, 3.676227697363912*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"t", ",", 
   RowBox[{"Cosh", "[", "t", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.67622770001129*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e2", "=", 
  RowBox[{
   RowBox[{"r", "'"}], "[", "t", "]"}]}]], "Input",
 CellChangeTimes->{{3.6762277023734207`*^9, 3.676227708162952*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"Sinh", "[", "t", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6762277094759493`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e3", "=", 
  RowBox[{"len", "=", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     SqrtBox[
      RowBox[{
       RowBox[{
        RowBox[{"r", "'"}], "[", "t", "]"}], ".", 
       RowBox[{
        RowBox[{"r", "'"}], "[", "t", "]"}]}]], " ", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.676227748215498*^9, 3.6762278071841383`*^9}}],

Cell[BoxData[
 RowBox[{"Sinh", "[", "1", "]"}]], "Output",
 CellChangeTimes->{3.67622780979331*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e4", "=", 
  RowBox[{"N", "[", 
   RowBox[{"Sinh", "[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6762291578975286`*^9, 3.676229182238367*^9}}],

Cell[BoxData["1.1752011936438014`"], "Output",
 CellChangeTimes->{{3.6762291617131367`*^9, 3.676229183943597*^9}},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["\<\
Above in green: two values which agree with the answer in the text.\
\>", "Text",
 CellChangeTimes->{{3.768931832118219*^9, 3.76893185967562*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"Cosh", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
        RowBox[{"Opacity", "[", ".4", "]"}]}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"Cosh", "[", "0", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"Cosh", "[", "1", "]"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6762285422333317`*^9, 3.6762285645751266`*^9}, {
   3.6762286213431168`*^9, 3.676228699219063*^9}, {3.676228738403216*^9, 
   3.676228747937173*^9}, {3.676228798065613*^9, 3.676228798759487*^9}, {
   3.6762288327764263`*^9, 3.6762288537259607`*^9}, {3.676228917787467*^9, 
   3.676228927243325*^9}, {3.67622906114493*^9, 3.676229067640593*^9}, {
   3.676229279735406*^9, 3.676229324939457*^9}, {3.6762293599778633`*^9, 
   3.676229365131019*^9}, 3.6762294743800364`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[1, 0, 0], Thickness[0.005], Opacity[0.4], 
     LineBox[CompressedData["
1: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
PoN/AXUj1Cg=
      "]]}}, {{}, {{}, 
     {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6], PointBox[{{0., 1.}, {1., 1.5430806348152437`}}]}, {}}, {}}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->Automatic,
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->300,
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{0., 1.}, {1., 1.5430806348152437`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.676228683813582*^9, 3.676228700178294*^9}, 
   3.676228749308913*^9, 3.6762288009994087`*^9, {3.676228835836812*^9, 
   3.676228854904277*^9}, {3.676228919070735*^9, 3.676228928252866*^9}, 
   3.676229068522265*^9, {3.676229306403035*^9, 3.6762293263328657`*^9}, 
   3.6762293666733217`*^9, 3.6762294754358377`*^9}]
}, Open  ]],

Cell["\<\
31.  Circle r[t] = {a Cos[t], a Sin[t]} from {a, 0} to {0, a}.\
\>", "Text",
 CellChangeTimes->{{3.768928328474012*^9, 3.76892836361471*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.676228488437933*^9, 3.676228490236017*^9}, 
   3.768925984975171*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e1", "=", 
  RowBox[{
   RowBox[{"r", "[", "t_", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", " ", 
      RowBox[{"Cos", "[", "t", "]"}]}], ",", 
     RowBox[{"a", " ", 
      RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.676229728438757*^9, 3.676229764629476*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", " ", 
    RowBox[{"Cos", "[", "t", "]"}]}], ",", 
   RowBox[{"a", " ", 
    RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.67622976612013*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e2", "=", 
  RowBox[{
   RowBox[{"r", "'"}], "[", "t", "]"}]}]], "Input",
 CellChangeTimes->{{3.67622977828866*^9, 3.676229783572402*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "a"}], " ", 
    RowBox[{"Sin", "[", "t", "]"}]}], ",", 
   RowBox[{"a", " ", 
    RowBox[{"Cos", "[", "t", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.676229785050085*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e3", "=", 
  RowBox[{"len", "=", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     SqrtBox[
      RowBox[{
       RowBox[{
        RowBox[{"r", "'"}], "[", "t", "]"}], ".", 
       RowBox[{
        RowBox[{"r", "'"}], "[", "t", "]"}]}]], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       FractionBox["\[Pi]", "2"]}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6762297972872543`*^9, 3.676229832098193*^9}, {
  3.676229894479184*^9, 3.676229920605978*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SqrtBox[
    SuperscriptBox["a", "2"]], " ", "\[Pi]"}], "2"]], "Output",
 CellChangeTimes->{3.67622992297506*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["\<\
Above: The answer shown agrees with the text. Integration limits based on \
initial values.\
\>", "Text",
 CellChangeTimes->{{3.676230071150896*^9, 3.676230265435363*^9}, {
  3.676279029415853*^9, 3.676279062076743*^9}, {3.676279128569763*^9, 
  3.6762791624241247`*^9}, {3.768931998532778*^9, 3.768932023403255*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", "t", "]"}]}], ",", 
       RowBox[{"2", " ", 
        RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       FractionBox["\[Pi]", "2"]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
        RowBox[{"Opacity", "[", ".4", "]"}]}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", "0", "]"}]}], ",", 
         RowBox[{"2", " ", 
          RowBox[{"Sin", "[", "0", "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", 
           FractionBox["\[Pi]", "2"], "]"}]}], ",", 
         RowBox[{"2", " ", 
          RowBox[{"Sin", "[", 
           FractionBox["\[Pi]", "2"], "]"}]}]}], "}"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.676233743797751*^9, 3.676233797947538*^9}, {
  3.6762338526138973`*^9, 3.676233938214697*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[1, 0, 0], Thickness[0.005], Opacity[0.4], 
     LineBox[CompressedData["
1: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
Zr989CqxKIlMUmDVmwi1oOXCqLfVrYzMCdlVu5x36ufCi026fo74e6ju6B+u
XEx13UraTeYMrXLx9y5BOdB5WvPrMfE5Nbtu/5B3+L75sYvuDIUdb935o8Kz
MGv8WuotmWNYDI0OXjDPQv0B/+x24lS3gJViQlkIcDQrZCJzT6T+muiYyEx8
ffzm5BlioQPc26PeZGA2oeD1LPHJfyQYaPHp0Ml8USlE5q4jTG1FYxbp8Hpz
3FWDOKimeIf+pnQwz68Pukq8xTt4JdeTNPyczRjOJs5Zt3laoD8Fr+PsTqiR
Oa+rQvdGs0kKOrY7iF4kfpZywzioOhnpga4m3sSsVla31mYmQSYpaqqMmEFA
VnHULQFtPbtaVcjcaJx83SpuLB7COQZfzIlF/Xawn7OKx/V8D1EX4o6B2uEv
2nG4LP59KZ14isH2YBRPDM6eCrPcQObYyJihLCPvaAxLfnbeR9x80r6KbT4K
O5THhjWJ/6HrfHbofIPBXcosTsR7y+M0FBNeYdo+a6iMWFE6qXxk0ytcXywT
aiMe7VKYefkkEpddGrKHiVUCgyoYByIg3tO5npPM6eJH9PUtv4YjeGt73RZi
Dr4M7Y+ZL5A1VzsvubwX0HrD7ro/x2r5eMfjxFkRroudVmEIW+dbZk4c6Kz8
S1EnFEn6lm5XiWdNvp2e5XmGcuElfi9ip+YLgwbzQfgr8X6eRrxxKXljemcg
GNNvqoQTW8v+MrJOoCEI1fPLe8vLqlDHj0+eYn2vzbV84g9redwVBvxxWJZB
rZSY4YSM21jmI/Cy+rnRl/eMCdOxaHdfXJBh21xPbO+m+/OMzkOwBXsKtRE7
u1eYs/N6oW3V2IMuYpeHobbFnZ6IuGhwfHkvuy7httkh4S74I5Ldlvc2vVVu
QzoDblgZsLB+jHiTLJhT3W+DX1yFeYqYfUdFJBevM1accTk/S2zIEl3tlHAd
l1kSSfhRuMeXo5vufgUj4jUqy3vmhYqR284J57GjYIBcD7mfgytinBNOIDFl
+XMpMJvySIvFvFL43x77f+P/4yA=
      "]]}}, {{}, {{}, 
     {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6], PointBox[{{2., 0.}, {0., 2.}}]}, {}}, {}}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->Automatic,
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{0., 2.}, {0., 2.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.676233806788825*^9, 3.6762338592815857`*^9, {3.676233909536606*^9, 
   3.676233939060338*^9}}]
}, Open  ]],

Cell[TextData[{
 StyleBox["33. Plane curve.",
  FontWeight->"Bold"],
 " Show that numbered line (10) on p. 385 implies ",
 Cell[BoxData[
  RowBox[{"\[ScriptL]", "=", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Integral]", "a", "b"], "1"}], "+", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"y", "'"}], ")"}], "2"], 
     RowBox[{"\[DifferentialD]", "x"}]}]}]}]]],
 " for the length of a plane curve C: y = f[x], z = 0, and a = x = b."
}], "Text",
 CellChangeTimes->{{3.768928402597418*^9, 3.7689284117316513`*^9}, {
  3.768928474633609*^9, 3.768928518069418*^9}, {3.7689290350172586`*^9, 
  3.7689290369207582`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[TextData[{
 StyleBox["35 - 46 Curves in mechanics",
  FontWeight->"Bold"],
 "\nForces acting on moving objects (cars, airplanes, ships, etc.) require \
the engineer to know corresponding ",
 StyleBox["tangential",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " and ",
 StyleBox["normal accelerations",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ". In problems 35 - 38 find them, along with the ",
 StyleBox["velocity",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " and ",
 StyleBox["speed",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ". Sketch the path."
}], "Text",
 CellChangeTimes->{{3.768929085493101*^9, 3.768929151801133*^9}}],

Cell[TextData[{
 "35.  Parabola ",
 StyleBox["r",
  FontWeight->"Bold"],
 "[t] = {t, ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["t", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", 0}. Find ",
 StyleBox["v",
  FontWeight->"Bold"],
 " and ",
 StyleBox["a",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.768929208759302*^9, 3.768929235140456*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6762365549026403`*^9, 3.6762365566369*^9}, 
   3.768925995254754*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e1", "=", 
  RowBox[{
   RowBox[{"rr", "[", "t_", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     SuperscriptBox["t", "2"], ",", "0"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.676236577623057*^9, 3.676236611457753*^9}, {
  3.676236698519725*^9, 3.67623669917519*^9}, {3.676236895472878*^9, 
  3.676236904704607*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"t", ",", 
   SuperscriptBox["t", "2"], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.6762366128246098`*^9, 3.676236700793642*^9, 
  3.676236909352414*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e2", "=", 
  RowBox[{
   RowBox[{"rr", "'"}], "[", "t", "]"}]}]], "Input",
 CellChangeTimes->{{3.676236618027165*^9, 3.676236619633548*^9}, {
  3.676236703384585*^9, 3.676236704120388*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"2", " ", "t"}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.676236630636286*^9, 3.6762367047698174`*^9, 
  3.676236912047598*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e3", "=", 
  RowBox[{
   RowBox[{"rr", "''"}], "[", "t", "]"}]}]], "Input",
 CellChangeTimes->{{3.676236635835628*^9, 3.6762366382568197`*^9}, {
  3.676236707640482*^9, 3.6762367084628553`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "2", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.676236639199757*^9, 3.6762367092423162`*^9, 
  3.676236914623808*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["Above: general acceleration.", "Text",
 CellChangeTimes->{{3.676237146472821*^9, 3.676237153896708*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e4", "=", 
  RowBox[{"v", "=", 
   RowBox[{"Norm", "[", 
    RowBox[{
     RowBox[{"rr", "'"}], "[", "t", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.67623665101199*^9, 3.6762366621761093`*^9}, {
  3.676236712344246*^9, 3.676236712670414*^9}, {3.6762369535592403`*^9, 
  3.676236972849291*^9}}],

Cell[BoxData[
 SqrtBox[
  RowBox[{"1", "+", 
   RowBox[{"4", " ", 
    SuperscriptBox[
     RowBox[{"Abs", "[", "t", "]"}], "2"]}]}]]], "Output",
 CellChangeTimes->{3.676236663989893*^9, 3.676236714127117*^9, 
  3.676236917256123*^9, 3.6762369747957993`*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["Above: magnitude of the velocity.", "Text",
 CellChangeTimes->{{3.676237195343375*^9, 3.676237204535326*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e5", "=", 
  RowBox[{"aT", "=", " ", 
   FractionBox[
    RowBox[{"e2", ".", "e3"}], "e4"]}]}]], "Input",
 CellChangeTimes->{{3.6762366754115953`*^9, 3.6762367459736147`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"4", " ", "t"}], 
  SqrtBox[
   RowBox[{"1", "+", 
    RowBox[{"4", " ", 
     SuperscriptBox[
      RowBox[{"Abs", "[", "t", "]"}], "2"]}]}]]]], "Output",
 CellChangeTimes->{3.676236748041312*^9, 3.676236920319744*^9}]
}, Open  ]],

Cell["Above: the tangential acceleration.", "Text",
 CellChangeTimes->{{3.6762372190705023`*^9, 3.67623722578226*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e6", "=", 
  RowBox[{"aN", "=", 
   FractionBox[
    RowBox[{"Norm", "[", 
     RowBox[{"Cross", "[", 
      RowBox[{"e2", ",", "e3"}], "]"}], "]"}], 
    RowBox[{"Norm", "[", "e2", "]"}]]}]}]], "Input",
 CellChangeTimes->{{3.6762367533247643`*^9, 3.6762368019571877`*^9}}],

Cell[BoxData[
 FractionBox["2", 
  SqrtBox[
   RowBox[{"1", "+", 
    RowBox[{"4", " ", 
     SuperscriptBox[
      RowBox[{"Abs", "[", "t", "]"}], "2"]}]}]]]], "Output",
 CellChangeTimes->{3.676236802823641*^9, 3.6762369235233917`*^9}]
}, Open  ]],

Cell["Above: the normal acceleration.", "Text",
 CellChangeTimes->{{3.676237233514394*^9, 3.6762372589098873`*^9}}],

Cell["\<\
Green cells above match the answer in the text. The formulas used here were \
used in my workthru of Ed9, and originally came from Larson p. 816.\
\>", "Text",
 CellChangeTimes->{{3.6762368107965803`*^9, 3.6762368449545603`*^9}, {
  3.7689321293739634`*^9, 3.7689321396774483`*^9}}],

Cell[TextData[{
 "37.  Cycloid ",
 StyleBox["r",
  FontWeight->"Bold"],
 "[t] = (",
 StyleBox["R",
  FontSlant->"Italic"],
 " Sin[\[Omega] t]+",
 StyleBox["R",
  FontSlant->"Italic"],
 " t)",
 StyleBox["i",
  FontWeight->"Bold"],
 " +(",
 StyleBox["R",
  FontSlant->"Italic"],
 " Cos[\[Omega] t] + ",
 StyleBox["R",
  FontSlant->"Italic"],
 ")",
 StyleBox["j",
  FontWeight->"Bold"],
 ". This is the path of a point on the rim of a wheel of radius ",
 StyleBox["R",
  FontSlant->"Italic"],
 " that rolls without slipping along the x-axis. Find ",
 StyleBox["v",
  FontWeight->"Bold"],
 " and ",
 StyleBox["a",
  FontWeight->"Bold"],
 " at the maximum y-values of the curve."
}], "Text",
 CellChangeTimes->{{3.7689292863149433`*^9, 3.76892937891673*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[TextData[{
 StyleBox["39 - 42 The use of a CAS",
  FontWeight->"Bold"],
 " may greatly facilitate the investigation of more complicated paths, as \
they occur in gear transmissions and other constructions. To grasp the idea, \
using a CAS, graph the path and find velocity, speed, and tangential and \
normal acceleration."
}], "Text",
 CellChangeTimes->{{3.768929488471277*^9, 3.768929557403191*^9}}],

Cell[TextData[{
 "39.  ",
 StyleBox["r",
  FontWeight->"Bold"],
 "[t] = {Cos[t] + Cos[2t], Sin[t] - Sin[2t]}"
}], "Text",
 CellChangeTimes->{{3.768929579107239*^9, 3.7689296151597652`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.676238074078334*^9, 3.676238075532776*^9}, 
   3.768926008021936*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e13", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "t", "]"}], "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "t"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Sin", "[", "t", "]"}], "-", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "t"}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[Pi]"}], ",", 
        RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Red", ",", 
         RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
         RowBox[{"Opacity", "[", ".4", "]"}]}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}], ",", 
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"6", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}], 
   RowBox[{"(*", 
    RowBox[{",", 
     RowBox[{"ParametricPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"6", "-", 
          RowBox[{"8", " ", "w"}]}], ",", "1", ",", 
         RowBox[{"8", "+", 
          RowBox[{"6", " ", "w"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"w", ",", 
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Green", ",", 
          RowBox[{"Thickness", "[", "0.005", "]"}]}], "}"}]}]}], "]"}], ",", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Text", "[", 
        RowBox[{"\"\<{6,1,8}\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"6.7", ",", "1", ",", "8.7"}], "}"}]}], "]"}], "}"}], 
      "]"}]}], "*)"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.67624081289459*^9, 3.676240830443218*^9}, {
  3.676240913513842*^9, 3.676240954882421*^9}, {3.676281751446054*^9, 
  3.676281752300477*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[1, 0, 0], Thickness[0.005], Opacity[0.4], 
     LineBox[CompressedData["
1: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
/Hs2bLmyLQOm8vf8esWiYpuBN8n3JgN8fQdFz3CoaKnXP5sUzgBrkmhNF5eK
pF2F0skfGFCu9nvD+lkqxlVb5fpWMGBQQ8REc46Ks00xTuu6GHBA/P1ZHoEN
rP99f0tnQNJX05Bn81T03SR6fmoZEwInUhYOEjj11f2aFRuYIGajOvXf80nK
PpV3gvpMKCVvuf3feaS5d5c9a62Y4FPAbrtPYK9OY9IFNyYY73ylPUGM7+IE
Dn8CmfDt3DKUIzAv2yZrcRwTRt+uSxMl+HW177OSzGUCecXT9dUE/y6zlWOT
1UwwdG9yMCbsc/Z9KRTTy4QitdOxTwn7WQ5SB8WZTKC6n+O9JPS5au2x7/Qy
FlSrU7+5EPqZhihHEo0pnFzGJ7NwmopV2ftaj+9iQYbfIX17Qv/0t54pgmYs
OJ5+4VIQ4R+FYXb8A0cWxDkWN1wn/KfgVmTbcJMFb1QDs1SHqPiFb3Pg6DMW
SC+vhxTC33JTt9Jq37Pg1NS2sywiPniT266zalgwdtDLrpZExcb1wmf0+1gg
Ag+EXBupWCn1oMyUzgKdLB2tBdVUXHrxyotaeTY0Gtpqcb4T8UC6baK3mQ09
Di61Jd+oOLz2lqDnfjb4SNWOvM2lYu8SmuauS2wo2REo3PORiP9nUh2ut9jg
aUX/N5ZCxdO3+qydn7JB1Weu+tIrKkZQyvy+ZrFhIN3cuiuSipHVb/ylytmw
ZqYuVeEZlcj/hUI6TWxwrjketcSfmP/2HYc/M2wQUw0rLvCh4jYLo+iDiziQ
MmSbtdWDiuQHQaKPpDigiPeUX9hREQJ1Ik5v5wDTZckCOQMivn+cuXHYkwOh
vz08DHdQMfjY0VN0fw4sayBPG2hSMeGem7zjcw5o6T2wypAj9Nj5fuPzDxwI
SrCvkxenYkdEafehIg78UW58dF6Yink3FU79quSAn0zC9NkZCl5T+X1Too8D
s/nxBjJjFLzbL/qyc4IDu7RchVN6KEjWv+/ozCH4SSkZGvyi4K2+LbxKcS5I
k6IsXF5T8OHgvvmXBlw4vtDC+BeRH4ffGtu7H+aCxFLNg3wPKSgftNBd+AQX
LvEt/zTlRkH3J4Uvb7pwoXunSXmaHQVlpmC3pRcXdCQlt+oR+TZr/uWrsTtc
WMeOvDeoR0FRoewU61AunJfIFZ3XpGCVzdV+rRguKIhpnqQqUZDDnWdVvOPC
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
4JuGRyLPpXvA//1f0e7/ARV0qqA=
      "]]}}, {{}, {{}, 
     {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6], PointBox[{{6., 1.}, {0., 1.}}]}, {}}, {}}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-1.1249999975499982`, 2.}, {-1.7601724927244362`, 
   1.7601725901242427`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6762380797693644`*^9, 3.676240956614396*^9, {3.6762817532150173`*^9, 
   3.676281782793339*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e1", "=", 
  RowBox[{"positionfunction", "=", 
   RowBox[{
    RowBox[{"r", "[", "t_", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "t", "]"}], "+", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "t"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"Sin", "[", "t", "]"}], "-", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "t"}], "]"}]}]}], "}"}]}]}]}]], "Input",
 CellChangeTimes->{{3.67623809908479*^9, 3.676238163433099*^9}, {
  3.676281767075453*^9, 3.676281772995277*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"Cos", "[", "t", "]"}], "+", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "t"}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"Sin", "[", "t", "]"}], "-", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "t"}], "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6762381536173487`*^9, 3.6762381645675592`*^9}, {
  3.676281773830923*^9, 3.6762817850590563`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e2", "=", 
  RowBox[{"velocityfunction", "=", 
   RowBox[{
    RowBox[{"r", "'"}], "[", "t", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6762382140016327`*^9, 3.676238223150403*^9}, {
  3.6762817907400417`*^9, 3.676281794674122*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Sin", "[", "t", "]"}]}], "-", 
    RowBox[{"2", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "t"}], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"Cos", "[", "t", "]"}], "-", 
    RowBox[{"2", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "t"}], "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.676238224458403*^9, 3.676281795813067*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e3", "=", 
  RowBox[{"accelerationfunction", "=", 
   RowBox[{
    RowBox[{"r", "''"}], "[", "t", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6762382279607887`*^9, 3.676238231342145*^9}, {
  3.6762817999140797`*^9, 3.676281804881753*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Cos", "[", "t", "]"}]}], "-", 
    RowBox[{"4", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "t"}], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Sin", "[", "t", "]"}]}], "+", 
    RowBox[{"4", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "t"}], "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.6762382321359997`*^9, 3.676281805702414*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["Above: general acceleration.", "Text",
 CellChangeTimes->{{3.676238249525207*^9, 3.6762382547014093`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e4", "=", 
  RowBox[{"magnitudeofvelocity", "=", 
   RowBox[{"Norm", "[", 
    RowBox[{
     RowBox[{"r", "'"}], "[", "t", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.676238266472432*^9, 3.676238278132846*^9}, {
  3.676281815769423*^9, 3.676281821945283*^9}}],

Cell[BoxData[
 SqrtBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Cos", "[", "t", "]"}], "-", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "t"}], "]"}]}]}], "]"}], "2"], "+", 
   SuperscriptBox[
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Sin", "[", "t", "]"}]}], "-", 
      RowBox[{"2", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "t"}], "]"}]}]}], "]"}], "2"]}]]], "Output",
 CellChangeTimes->{3.676238280890306*^9, 3.6762818239292583`*^9}]
}, Open  ]],

Cell["Above: magnitude of the velocity.", "Text",
 CellChangeTimes->{{3.6762382864919233`*^9, 3.6762382937000732`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e41", "=", 
  RowBox[{"velocitymagnitudesquared", "=", 
   SuperscriptBox["e4", "2"]}]}]], "Input",
 CellChangeTimes->{{3.676239921935358*^9, 3.676239936090019*^9}, {
  3.6762818348662233`*^9, 3.676281843272078*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"Abs", "[", 
    RowBox[{
     RowBox[{"Cos", "[", "t", "]"}], "-", 
     RowBox[{"2", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "t"}], "]"}]}]}], "]"}], "2"], "+", 
  SuperscriptBox[
   RowBox[{"Abs", "[", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Sin", "[", "t", "]"}]}], "-", 
     RowBox[{"2", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "t"}], "]"}]}]}], "]"}], "2"]}]], "Output",
 CellChangeTimes->{3.676239940305875*^9, 3.676281845228314*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e42", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", "t", "]"}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "t"}], "]"}]}]}], ")"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Sin", "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "t"}], "]"}]}]}], ")"}], "2"]}], "\[Equal]", 
    RowBox[{"5", "-", 
     RowBox[{"4", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"3", " ", "t"}], "]"}]}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6762401911930532`*^9, 3.676240267885614*^9}, 
   3.6762826012542267`*^9, {3.676282653378516*^9, 3.67628269515941*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.6762402692916737`*^9, 3.676281856536577*^9, 
  3.6762826030729322`*^9, 3.6762826978539753`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e43", "=", 
  RowBox[{"5", "-", 
   RowBox[{"4", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"3", " ", "t"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.676282495715279*^9, 3.676282545127355*^9}, 
   3.6762827286176567`*^9}],

Cell[BoxData[
 RowBox[{"5", "-", 
  RowBox[{"4", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"3", " ", "t"}], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.676282548124135*^9, 3.676282625815152*^9, {3.676282708142206*^9, 
   3.676282731896595*^9}},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[TextData[{
 "Above: Mathematica verifies that the text answer for ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"\[LeftBracketingBar]", "v", "\[RightBracketingBar]"}], "2"], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 " agrees with the tangled forest above. (I did remove the absolute value \
restrictions for the test, since they did not show up in the text answer.)"
}], "Text",
 CellChangeTimes->{{3.67624031342873*^9, 3.676240332851347*^9}, {
  3.676240367626274*^9, 3.6762404923099318`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e5", "=", 
  RowBox[{"aT", "=", 
   FractionBox[
    RowBox[{"e2", ".", "e3"}], "e43"]}]}]], "Input",
 CellChangeTimes->{{3.67623833269552*^9, 3.676238337618813*^9}, {
   3.6762384376249447`*^9, 3.676238451927207*^9}, 3.676282763709928*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Cos", "[", "t", "]"}]}], "-", 
      RowBox[{"4", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "t"}], "]"}]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Sin", "[", "t", "]"}]}], "-", 
      RowBox[{"2", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "t"}], "]"}]}]}], ")"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cos", "[", "t", "]"}], "-", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "t"}], "]"}]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Sin", "[", "t", "]"}]}], "+", 
      RowBox[{"4", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "t"}], "]"}]}]}], ")"}]}]}], 
  RowBox[{"5", "-", 
   RowBox[{"4", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"3", " ", "t"}], "]"}]}]}]]], "Output",
 CellChangeTimes->{3.6762384541422663`*^9, 3.676281897389451*^9, 
  3.676282764887624*^9, 3.676282864024005*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e6", "=", 
  RowBox[{"FullSimplify", "[", "e5", "]"}]}]], "Input",
 CellChangeTimes->{{3.676238482611381*^9, 3.676238490023329*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"6", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"3", " ", "t"}], "]"}]}], 
  RowBox[{"5", "-", 
   RowBox[{"4", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"3", " ", "t"}], "]"}]}]}]]], "Output",
 CellChangeTimes->{3.676238491719879*^9, 3.676281911746016*^9, 
  3.676282772733108*^9, 3.6762828666386766`*^9},
 Background->RGBColor[0.87, 0.94, 1]]
}, Open  ]],

Cell[TextData[{
 "Above: this would be the tangential acceleration, except it needs a ",
 StyleBox["v",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.6762829333190536`*^9, 3.676282960564538*^9}}],

Cell["prime dot doubleprime divided by magnitude of velocity.", "Text",
 CellChangeTimes->{{3.676238391168661*^9, 3.676238427543828*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e8", "=", 
  RowBox[{"tangentialacceleration", "=", 
   RowBox[{"e6", " ", "e2"}]}]}]], "Input",
 CellChangeTimes->{{3.676282131280772*^9, 3.6762821637871647`*^9}, {
  3.676283020132552*^9, 3.676283020866578*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"6", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", "t", "]"}]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "t"}], "]"}]}]}], ")"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"3", " ", "t"}], "]"}]}], 
    RowBox[{"5", "-", 
     RowBox[{"4", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"3", " ", "t"}], "]"}]}]}]], ",", 
   FractionBox[
    RowBox[{"6", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", "t", "]"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "t"}], "]"}]}]}], ")"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"3", " ", "t"}], "]"}]}], 
    RowBox[{"5", "-", 
     RowBox[{"4", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"3", " ", "t"}], "]"}]}]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.676282164597867*^9, 3.676283022198275*^9}]
}, Open  ]],

Cell["\<\
Above: the actual tangential acceleration, but more complicated than the text \
answer.\
\>", "Text",
 CellChangeTimes->{{3.6762830579301567`*^9, 3.676283080672371*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e9", "=", 
  RowBox[{"aN", "=", 
   FractionBox[
    RowBox[{"Norm", "[", 
     RowBox[{"Cross", "[", 
      RowBox[{"e2", ",", "e3"}], "]"}], "]"}], 
    RowBox[{"Norm", "[", "e2", "]"}]]}]}]], "Input",
 CellChangeTimes->{{3.6762385330730753`*^9, 3.676238602684197*^9}, {
  3.676282174116173*^9, 3.676282174538659*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Cross", "::", "nonn1"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The arguments are expected to be vectors of equal length, \
and the number of arguments is expected to be 1 less than their length. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Cross/nonn1\\\", \
ButtonNote -> \\\"Cross::nonn1\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.6762385965801992`*^9, 3.676238603531979*^9}, 
   3.6762821810627613`*^9, 3.676283097338249*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"Norm", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", "t", "]"}]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "t"}], "]"}]}]}], ",", 
      RowBox[{
       RowBox[{"Cos", "[", "t", "]"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "t"}], "]"}]}]}]}], "}"}], "\[Cross]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", "t", "]"}]}], "-", 
       RowBox[{"4", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "t"}], "]"}]}]}], ",", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", "t", "]"}]}], "+", 
       RowBox[{"4", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "t"}], "]"}]}]}]}], "}"}]}], "]"}], 
  SqrtBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"Abs", "[", 
      RowBox[{
       RowBox[{"Cos", "[", "t", "]"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "t"}], "]"}]}]}], "]"}], "2"], "+", 
    SuperscriptBox[
     RowBox[{"Abs", "[", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", "t", "]"}]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "t"}], "]"}]}]}], "]"}], "2"]}]]]], "Output",
 CellChangeTimes->{3.676238603538888*^9, 3.676282181072165*^9, 
  3.676283097348187*^9}]
}, Open  ]],

Cell[TextData[{
 "Above, oops, this is only 2 dimensional. How to get normal acceleration? \
Looks like I need ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[DifferentialD]", "u"}], 
     RowBox[{"\[DifferentialD]", "s"}]], 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{"\[DifferentialD]", "s"}], "dt"], ")"}], "2"]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 " where u is the unit tangent vector and s is the speed, or norm of \
velocity. And ",
 Cell[BoxData[
  FormBox[
   RowBox[{"u", "=", 
    FractionBox[
     RowBox[{
      RowBox[{"r", "'"}], "[", "t", "]"}], 
     RowBox[{"\[LeftBracketingBar]", 
      RowBox[{
       RowBox[{"r", "'"}], "[", "t", "]"}], "\[RightBracketingBar]"}]]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.6762386451368847`*^9, 3.6762386669682903`*^9}, {
  3.6762389688563643`*^9, 3.676239058084227*^9}, {3.67623911598825*^9, 
  3.676239135105877*^9}, {3.676239250942501*^9, 3.6762393094846363`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e10", "=", 
  RowBox[{"u", "=", 
   FractionBox["e2", "e4"]}]}]], "Input",
 CellChangeTimes->{{3.676239330272257*^9, 3.676239355987288*^9}, {
  3.676282191234054*^9, 3.676282191763276*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Sin", "[", "t", "]"}]}], "-", 
     RowBox[{"2", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "t"}], "]"}]}]}], 
    SqrtBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"Cos", "[", "t", "]"}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "t"}], "]"}]}]}], "]"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "t", "]"}]}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "t"}], "]"}]}]}], "]"}], "2"]}]]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"Cos", "[", "t", "]"}], "-", 
     RowBox[{"2", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "t"}], "]"}]}]}], 
    SqrtBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"Cos", "[", "t", "]"}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "t"}], "]"}]}]}], "]"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "t", "]"}]}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "t"}], "]"}]}]}], "]"}], "2"]}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.676239360224327*^9, 3.676282192859906*^9, 
  3.67628310488883*^9}]
}, Open  ]],

Cell["\<\
Above: hold on, looks like it\[CloseCurlyQuote]s getting complicated. The \
text mentions an easier way: normal acceleration is general acceleration \
minus tangential acceleration.\
\>", "Text",
 CellChangeTimes->{{3.676239574077479*^9, 3.676239624250984*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e11", "=", 
  RowBox[{"e3", "-", "e6"}]}]], "Input",
 CellChangeTimes->{{3.676239629574394*^9, 3.676239630356473*^9}, {
  3.676239666123206*^9, 3.676239667441771*^9}, {3.67623972350594*^9, 
  3.6762397239917097`*^9}, {3.6762821994031363`*^9, 3.6762821998673162`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Cos", "[", "t", "]"}]}], "-", 
    RowBox[{"4", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "t"}], "]"}]}], "-", 
    FractionBox[
     RowBox[{"6", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"3", " ", "t"}], "]"}]}], 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"Cos", "[", "t", "]"}], "-", 
          RowBox[{"2", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "t"}], "]"}]}]}], "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"Sin", "[", "t", "]"}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"Cos", "[", "t", "]"}], " ", 
           RowBox[{"Sin", "[", "t", "]"}]}]}], "]"}], "2"]}]]]}], ",", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Sin", "[", "t", "]"}]}], "+", 
    RowBox[{"4", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "t"}], "]"}]}], "-", 
    FractionBox[
     RowBox[{"6", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"3", " ", "t"}], "]"}]}], 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"Cos", "[", "t", "]"}], "-", 
          RowBox[{"2", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "t"}], "]"}]}]}], "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"Sin", "[", "t", "]"}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"Cos", "[", "t", "]"}], " ", 
           RowBox[{"Sin", "[", "t", "]"}]}]}], "]"}], "2"]}]]]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6762396684003677`*^9, 3.67623972470646*^9, 
  3.676282201305995*^9}]
}, Open  ]],

Cell["\<\
Above: this would be the normal acceleration. How to simplify? I notice that \
the text does not bother to report the normal acceleration, so I could just \
skip it.\
\>", "Text",
 CellChangeTimes->{{3.676239779559331*^9, 3.676239792413844*^9}, {
  3.676240752236631*^9, 3.6762407767482758`*^9}, {3.676279574143072*^9, 
  3.676279580661106*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e12", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", "t", "]"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "t"}], "]"}]}]}], ")"}], "2"], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Sin", "[", "t", "]"}], "+", 
       RowBox[{"4", " ", 
        RowBox[{"Cos", "[", "t", "]"}], " ", 
        RowBox[{"Sin", "[", "t", "]"}]}]}], ")"}], "2"]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6762436656724453`*^9, 3.676243731385461*^9}, {
  3.676282213106449*^9, 3.676282214010651*^9}}],

Cell[BoxData[
 RowBox[{"5", "-", 
  RowBox[{"4", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"3", " ", "t"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.676243733694615*^9, 3.676282214964222*^9, 
  3.6762831299289*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e13", "=", 
  RowBox[{"normalacceleration", "=", 
   RowBox[{"e11", "/.", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"Cos", "[", "t", "]"}], "-", 
          RowBox[{"2", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "t"}], "]"}]}]}], "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"Sin", "[", "t", "]"}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"Cos", "[", "t", "]"}], " ", 
           RowBox[{"Sin", "[", "t", "]"}]}]}], "]"}], "2"]}], ")"}], "->", 
     RowBox[{"5", "-", 
      RowBox[{"4", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"3", " ", "t"}], "]"}]}]}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.6762437730620623`*^9, 3.676243813986198*^9}, {
  3.6762822200585213`*^9, 3.676282220344912*^9}, {3.67628225242558*^9, 
  3.676282271086883*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Cos", "[", "t", "]"}]}], "-", 
    RowBox[{"4", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "t"}], "]"}]}], "-", 
    FractionBox[
     RowBox[{"6", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"3", " ", "t"}], "]"}]}], 
     SqrtBox[
      RowBox[{"5", "-", 
       RowBox[{"4", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"3", " ", "t"}], "]"}]}]}]]]}], ",", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Sin", "[", "t", "]"}]}], "+", 
    RowBox[{"4", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "t"}], "]"}]}], "-", 
    FractionBox[
     RowBox[{"6", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"3", " ", "t"}], "]"}]}], 
     SqrtBox[
      RowBox[{"5", "-", 
       RowBox[{"4", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"3", " ", "t"}], "]"}]}]}]]]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.676243815970517*^9, 3.6762822220923767`*^9, {3.676282253940021*^9, 
   3.676282271702291*^9}, 3.676283133014752*^9}]
}, Open  ]],

Cell["\<\
Above: that looks quite a bit better. However, I don\[CloseCurlyQuote]t see a \
path to anything simpler.\
\>", "Text",
 CellChangeTimes->{{3.67624382709555*^9, 3.6762438334144297`*^9}, {
  3.67624394973965*^9, 3.6762439621381207`*^9}}],

Cell[TextData[{
 "41.  ",
 StyleBox["r",
  FontWeight->"Bold"],
 "[t] = {Cos[t], Sin[2t], Cos[2t]}"
}], "Text",
 CellChangeTimes->{{3.768929662118733*^9, 3.768929686444255*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6762797179632597`*^9, 3.676279719720272*^9}, 
   3.768926025932782*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e1", "=", 
  RowBox[{"positionfunction", "=", 
   RowBox[{
    RowBox[{"r", "[", "t_", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cos", "[", "t", "]"}], ",", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "t"}], "]"}], ",", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "t"}], "]"}]}], "}"}]}]}]}]], "Input",
 CellChangeTimes->{{3.676279726841544*^9, 3.67627976526091*^9}, {
  3.676281489336206*^9, 3.676281493294437*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Cos", "[", "t", "]"}], ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", "t"}], "]"}], ",", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "t"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.676279767163994*^9, 3.6762813494509277`*^9, 
  3.676281495439101*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e2", "=", 
  RowBox[{"velocityfunction", "=", 
   RowBox[{
    RowBox[{"r", "'"}], "[", "t", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6762797751843*^9, 3.6762797781564827`*^9}, {
  3.6762814995741453`*^9, 3.676281503677943*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"Sin", "[", "t", "]"}]}], ",", 
   RowBox[{"2", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "t"}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "2"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "t"}], "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.67627977909853*^9, 3.6762813510985403`*^9, 
  3.676281505027321*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e3", "=", 
  RowBox[{"accelerationfunction", "=", 
   RowBox[{
    RowBox[{"r", "''"}], "[", "t", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.676279781743801*^9, 3.676279784988019*^9}, {
  3.676281510205756*^9, 3.676281515637472*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"Cos", "[", "t", "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "4"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "t"}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "4"}], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "t"}], "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.6762797859654922`*^9, 3.6762813534127283`*^9, 
  3.676281516249384*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["Above: general acceleration.", "Text",
 CellChangeTimes->{{3.676279794124846*^9, 3.676279800923389*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e4", "=", 
  RowBox[{"magnitudeofvelocity", "=", 
   RowBox[{"Norm", "[", 
    RowBox[{
     RowBox[{"r", "'"}], "[", "t", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.676279858901045*^9, 3.676279882552001*^9}, {
  3.676281535198497*^9, 3.676281542364438*^9}}],

Cell[BoxData[
 SqrtBox[
  RowBox[{
   RowBox[{"4", " ", 
    SuperscriptBox[
     RowBox[{"Abs", "[", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "t"}], "]"}], "]"}], "2"]}], "+", 
   SuperscriptBox[
    RowBox[{"Abs", "[", 
     RowBox[{"Sin", "[", "t", "]"}], "]"}], "2"], "+", 
   RowBox[{"4", " ", 
    SuperscriptBox[
     RowBox[{"Abs", "[", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "t"}], "]"}], "]"}], "2"]}]}]]], "Output",
 CellChangeTimes->{3.676279884195722*^9, 3.676281356614188*^9, 
  3.676281543197287*^9}]
}, Open  ]],

Cell["Above: magnitude of the velocity.", "Text",
 CellChangeTimes->{{3.6762798922074537`*^9, 3.676279901743012*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e5", "=", 
  RowBox[{"squareofvelocity", "=", 
   SuperscriptBox["e4", "2"]}]}]], "Input",
 CellChangeTimes->{{3.676279914971561*^9, 3.6762799195516977`*^9}, {
  3.6762815593398533`*^9, 3.6762815631716022`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"4", " ", 
   SuperscriptBox[
    RowBox[{"Abs", "[", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "t"}], "]"}], "]"}], "2"]}], "+", 
  SuperscriptBox[
   RowBox[{"Abs", "[", 
    RowBox[{"Sin", "[", "t", "]"}], "]"}], "2"], "+", 
  RowBox[{"4", " ", 
   SuperscriptBox[
    RowBox[{"Abs", "[", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "t"}], "]"}], "]"}], "2"]}]}]], "Output",
 CellChangeTimes->{3.676279922047104*^9, 3.6762813605915318`*^9, 
  3.6762815638780518`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e6", "=", 
  RowBox[{"e5", "/.", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "t"}], "]"}], "]"}], "2"]}], "+", 
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        RowBox[{"Sin", "[", "t", "]"}], "]"}], "2"], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "t"}], "]"}], "]"}], "2"]}]}], ")"}], "\[Rule]", 
    RowBox[{"4", "+", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "t", "]"}], "2"]}]}]}]}]], "Input",
 CellChangeTimes->{{3.676280159708971*^9, 3.676280252448902*^9}}],

Cell[BoxData[
 RowBox[{"4", "+", 
  SuperscriptBox[
   RowBox[{"Sin", "[", "t", "]"}], "2"]}]], "Output",
 CellChangeTimes->{{3.6762802142683992`*^9, 3.676280254077899*^9}, 
   3.676281365424905*^9},
 Background->RGBColor[0.87, 0.94, 1]]
}, Open  ]],

Cell["Above: hand simplification.", "Text",
 CellChangeTimes->{{3.676281589626238*^9, 3.676281596106078*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e6", "=", 
  FractionBox[
   RowBox[{"e2", ".", "e3"}], "e6"]}]], "Input",
 CellChangeTimes->{{3.676280116674659*^9, 3.676280136397345*^9}, {
  3.67628026610445*^9, 3.676280266376136*^9}, {3.676281309671245*^9, 
  3.676281328484557*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"Cos", "[", "t", "]"}], " ", 
   RowBox[{"Sin", "[", "t", "]"}]}], 
  RowBox[{"4", "+", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "t", "]"}], "2"]}]]], "Output",
 CellChangeTimes->{
  3.676280137840766*^9, 3.6762802673569613`*^9, {3.676281311494899*^9, 
   3.6762813297366133`*^9}, 3.676281368570716*^9},
 Background->RGBColor[0.87, 0.94, 1]]
}, Open  ]],

Cell[TextData[{
 "Above: tangential acceleration, but it is incomplete, because it needs to \
be multiplied by ",
 StyleBox["v",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.676280331654731*^9, 3.676280338253187*^9}, {
  3.6762813808678226`*^9, 3.67628141062535*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e7", "=", 
  RowBox[{"e6", " ", "e2"}]}]], "Input",
 CellChangeTimes->{{3.676281423981739*^9, 3.67628144694385*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"Cos", "[", "t", "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "t", "]"}], "2"]}], 
     RowBox[{"4", "+", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "t", "]"}], "2"]}]]}], ",", 
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"Cos", "[", "t", "]"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "t"}], "]"}], " ", 
     RowBox[{"Sin", "[", "t", "]"}]}], 
    RowBox[{"4", "+", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "t", "]"}], "2"]}]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"2", " ", 
      RowBox[{"Cos", "[", "t", "]"}], " ", 
      RowBox[{"Sin", "[", "t", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "t"}], "]"}]}], 
     RowBox[{"4", "+", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "t", "]"}], "2"]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.676281671514114*^9, 3.6762816785378027`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e7", "=", 
  RowBox[{"normalacceleration", "=", 
   FractionBox[
    RowBox[{"Norm", "[", 
     RowBox[{"Cross", "[", 
      RowBox[{"e2", ",", "e3"}], "]"}], "]"}], 
    RowBox[{"Norm", "[", "e2", "]"}]]}]}]], "Input",
 CellChangeTimes->{{3.676280344146337*^9, 3.676280393572699*^9}, {
  3.676281683069936*^9, 3.676281687638796*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"\[Sqrt]", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "4"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "t"}], "]"}], " ", 
          RowBox[{"Sin", "[", "t", "]"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", "t", "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "t"}], "]"}]}]}], "]"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", "t", "]"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "t"}], "]"}]}], "+", 
         RowBox[{"4", " ", 
          RowBox[{"Sin", "[", "t", "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "t"}], "]"}]}]}], "]"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "8"}], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "t"}], "]"}], "2"]}], "-", 
         RowBox[{"8", " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "t"}], "]"}], "2"]}]}], "]"}], "2"]}], ")"}]}], 
   ")"}], "/", 
  RowBox[{"(", 
   SqrtBox[
    RowBox[{
     RowBox[{"4", " ", 
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "t"}], "]"}], "]"}], "2"]}], "+", 
     SuperscriptBox[
      RowBox[{"Abs", "[", 
       RowBox[{"Sin", "[", "t", "]"}], "]"}], "2"], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "t"}], "]"}], "]"}], "2"]}]}]], ")"}]}]], "Output",\

 CellChangeTimes->{3.676280395708013*^9, 3.6762816886979923`*^9}]
}, Open  ]],

Cell["Again, normal acceleration is a mess. Try it the other way.", "Text",
 CellChangeTimes->{{3.676280426699017*^9, 3.6762804601041803`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e8", "=", 
  RowBox[{"normalacceleration", "=", 
   RowBox[{"e3", "-", "e6"}]}]}]], "Input",
 CellChangeTimes->{{3.6762804640206747`*^9, 3.676280486063261*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Cos", "[", "t", "]"}]}], "-", 
    FractionBox[
     RowBox[{
      RowBox[{"Cos", "[", "t", "]"}], " ", 
      RowBox[{"Sin", "[", "t", "]"}]}], 
     RowBox[{"4", "+", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "t", "]"}], "2"]}]]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{"Cos", "[", "t", "]"}], " ", 
       RowBox[{"Sin", "[", "t", "]"}]}], 
      RowBox[{"4", "+", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "t", "]"}], "2"]}]]}], "-", 
    RowBox[{"4", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "t"}], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "4"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "t"}], "]"}]}], "-", 
    FractionBox[
     RowBox[{
      RowBox[{"Cos", "[", "t", "]"}], " ", 
      RowBox[{"Sin", "[", "t", "]"}]}], 
     RowBox[{"4", "+", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "t", "]"}], "2"]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.6762804879331703`*^9, 3.6762817071326942`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e9", "=", 
  RowBox[{"FullSimplify", "[", "e8", "]"}]}]], "Input",
 CellChangeTimes->{{3.676280591927864*^9, 3.676280600403921*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"Cos", "[", "t", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"Sin", "[", "t", "]"}]}], 
       RowBox[{
        RowBox[{"-", "9"}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "t"}], "]"}]}]]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "4"}], "+", 
      FractionBox["1", 
       RowBox[{
        RowBox[{"-", "9"}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "t"}], "]"}]}]]}], ")"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "t"}], "]"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "4"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "t"}], "]"}]}], "+", 
    FractionBox[
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "t"}], "]"}], 
     RowBox[{
      RowBox[{"-", "9"}], "+", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "t"}], "]"}]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.676280601337655*^9, 3.676281710161415*^9}]
}, Open  ]],

Cell["Above: I don\[CloseCurlyQuote]t see much to choose between e8 and e9.", \
"Text",
 CellChangeTimes->{{3.67628063587383*^9, 3.676280654152175*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e10", "=", 
  RowBox[{"ParametricPlot3D", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cos", "[", "t", "]"}], ",", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "t"}], "]"}], ",", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "t"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", 
      RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Red", ",", 
       RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
       RowBox[{"Opacity", "[", ".4", "]"}]}], "}"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.676280700371202*^9, 3.676280844488689*^9}}],

Cell[BoxData[
 Graphics3DBox[{{}, {}, 
   {RGBColor[1, 0, 0], Thickness[0.005], Opacity[0.4], 
    Line3DBox[CompressedData["
1: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
v+Mr+L/f8f0/6ELxOQ==
     "]]}},
  Axes->True,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->300,
  Method->{},
  PlotRange->{{-0.9999998830731719, 0.9999999999999918}, {-0.9999996658276197,
    0.9999993650500513}, {-0.999999512844876, 0.9999999999999671}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.03772097128467524, -3.3786616222409775`, 0.18227114615679887`},
  ViewVertical->{0.12084333576286627`, -0.5458729588474738, 
   0.829108020367704}]], "Output",
 CellChangeTimes->{3.676280846159837*^9, 3.676281713195325*^9}]
}, Open  ]],

Cell["\<\
43.  Sun and Earth. Find the acceleration of the Earth toward the sun from \
numbered line (19) on p. 387 and the fact that Earth revolves about the sun \
in a nearly circular orbit with an almost constant speed of 30 km/s.\
\>", "Text",
 CellChangeTimes->{{3.768929728243206*^9, 3.768929803789619*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[TextData[{
 "45.  Satellite. Find the speed of an artificial Earth satellite traveling \
at an altitude of 80 miles above Earth\[CloseCurlyQuote]s surface, where g = \
31 ft/se",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["c", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". (The radius of the Earth is 3960 miles.)"
}], "Text",
 CellChangeTimes->{{3.768929822246333*^9, 3.7689298860896397`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[TextData[StyleBox["47 - 55 Curvature and torsion",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.768929910633357*^9, 3.768929919647517*^9}}],

Cell[TextData[{
 "47.  Circle. Show that a circle of radius ",
 StyleBox["a",
  FontSlant->"Italic"],
 " has a curvature 1/",
 StyleBox["a",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.768929933142853*^9, 3.768929954557749*^9}, {
  3.768930640898237*^9, 3.768930654696012*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[TextData[{
 "49.  Plane curve. Using numbered line (22) on p. 389, show that for a curve \
y = f[x]\n\n",
 Cell[BoxData[
  RowBox[{
   RowBox[{"\[Kappa]", "[", "x", "]"}], "=", 
   RowBox[{
    FractionBox[
     RowBox[{"|", 
      RowBox[{"y", "''"}], "|"}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"y", "'"}], ")"}], "2"]}], ")"}], 
      RowBox[{"3", "/", "2"}]]], " ", "where", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"y", "'"}], "=", 
       FractionBox["dy", "dx"]}], ",", " ", 
      RowBox[{"etc", "."}]}], ")"}]}]}]], "Input",
  CellChangeTimes->{{3.768930291408288*^9, 3.768930369951454*^9}}]
}], "Text",
 CellChangeTimes->{{3.7689299851103773`*^9, 3.7689300151862288`*^9}, {
  3.768930249942809*^9, 3.7689302786922817`*^9}, {3.768930378816062*^9, 
  3.768930381442621*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[TextData[{
 "Note: Problem 49 calls for reference to numbered line (22*), but no such \
numbered line exists in the present section. Numbered line (22) looks like it \
deals with related matter and it reads: ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"\[Kappa]", 
    RowBox[{"(", "s", ")"}]}], "=", 
   RowBox[{
    RowBox[{"|", 
     RowBox[{
      RowBox[{"u", "'"}], 
      RowBox[{"(", "s", ")"}]}], "|"}], "=", 
    RowBox[{"|", 
     RowBox[{
      RowBox[{"r", "''"}], 
      RowBox[{"(", "s", ")"}]}], "|"}]}]}]], "Input",
  CellChangeTimes->{{3.768930497022056*^9, 3.768930533862492*^9}}]
}], "Text",
 CellChangeTimes->{{3.768930395383346*^9, 3.768930471249381*^9}, 
   3.7689305423461037`*^9, {3.768930607572459*^9, 3.768930613498054*^9}}]
},
WindowSize->{1366, 843},
WindowMargins->{{4, Automatic}, {Automatic, 4}},
Magnification:>1.5 Inherited,
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 10, \
2015)",
StyleDefinitions->"Charter1.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 88, 2, 45, "Input",
 Evaluatable->False],
Cell[491, 17, 89, 2, 45, "Input",
 Evaluatable->False],
Cell[583, 21, 181, 4, 86, "Text"],
Cell[767, 27, 148, 2, 75, "Text"],
Cell[CellGroupData[{
Cell[940, 33, 555, 15, 45, "Input"],
Cell[1498, 50, 7796, 137, 452, "Output"]
}, Open  ]],
Cell[9309, 190, 182, 2, 51, "Text"],
Cell[9494, 194, 235, 6, 78, "Text"],
Cell[CellGroupData[{
Cell[9754, 204, 535, 13, 54, "Input"],
Cell[10292, 219, 3583, 68, 423, "Output"]
}, Open  ]],
Cell[13890, 290, 264, 5, 51, "Text"],
Cell[14157, 297, 151, 2, 75, "Text"],
Cell[CellGroupData[{
Cell[14333, 303, 693, 18, 75, "Input"],
Cell[15029, 323, 7699, 136, 479, "Output"]
}, Open  ]],
Cell[22743, 462, 118, 1, 51, "Text"],
Cell[22864, 465, 149, 2, 75, "Text"],
Cell[CellGroupData[{
Cell[23038, 471, 641, 17, 75, "Input"],
Cell[23682, 490, 10326, 180, 486, "Output"]
}, Open  ]],
Cell[34023, 673, 105, 1, 51, "Text"],
Cell[34131, 676, 147, 2, 75, "Text"],
Cell[CellGroupData[{
Cell[34303, 682, 621, 16, 75, "Input"],
Cell[34927, 700, 11309, 195, 457, "Output"]
}, Open  ]],
Cell[46251, 898, 225, 3, 51, "Text"],
Cell[46479, 903, 163, 2, 51, "Text"],
Cell[46645, 907, 211, 5, 75, "Text"],
Cell[46859, 914, 166, 3, 45, "Input"],
Cell[47028, 919, 102, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[47155, 924, 198, 5, 45, "Input"],
Cell[47356, 931, 82, 2, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47475, 938, 646, 19, 63, "Input"],
Cell[48124, 959, 19070, 323, 487, "Output"]
}, Open  ]],
Cell[67209, 1285, 195, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[67429, 1293, 649, 19, 87, "Input"],
Cell[68081, 1314, 2314, 47, 493, "Output"]
}, Open  ]],
Cell[70410, 1364, 187, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[70622, 1372, 455, 15, 63, "Input"],
Cell[71080, 1389, 506, 15, 76, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71623, 1409, 259, 7, 76, "Input"],
Cell[71885, 1418, 112, 1, 45, "Output"]
}, Open  ]],
Cell[72012, 1422, 221, 4, 86, "Text"],
Cell[72236, 1428, 283, 10, 75, "Text"],
Cell[72522, 1440, 167, 3, 45, "Input"],
Cell[CellGroupData[{
Cell[72714, 1447, 3411, 83, 191, "Input"],
Cell[76128, 1532, 5310, 98, 328, "Output"]
}, Open  ]],
Cell[81453, 1633, 332, 6, 86, "Text"],
Cell[81788, 1641, 155, 2, 75, "Text"],
Cell[81946, 1645, 167, 3, 45, "Input"],
Cell[CellGroupData[{
Cell[82138, 1652, 376, 10, 45, "Input"],
Cell[82517, 1664, 319, 9, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82873, 1678, 330, 9, 45, "Input"],
Cell[83206, 1689, 244, 7, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83487, 1701, 1785, 47, 133, "Input"],
Cell[85275, 1750, 5101, 92, 655, "Output"]
}, Open  ]],
Cell[90391, 1845, 226, 5, 51, "Text"],
Cell[90620, 1852, 365, 13, 81, "Text"],
Cell[90988, 1867, 167, 3, 45, "Input"],
Cell[91158, 1872, 1153, 31, 216, "Text"],
Cell[CellGroupData[{
Cell[92336, 1907, 739, 20, 111, "Input"],
Cell[93078, 1929, 8034, 142, 444, "Output"]
}, Open  ]],
Cell[101127, 2074, 596, 17, 86, "Text"],
Cell[101726, 2093, 389, 14, 77, "Text"],
Cell[102118, 2109, 169, 3, 45, "Input"],
Cell[102290, 2114, 695, 23, 62, "Text"],
Cell[CellGroupData[{
Cell[103010, 2141, 2478, 67, 263, "Input"],
Cell[105491, 2210, 5405, 103, 340, "Output"]
}, Open  ]],
Cell[110911, 2316, 604, 10, 120, "Text"],
Cell[111518, 2328, 226, 5, 75, "Text"],
Cell[111747, 2335, 933, 33, 117, "Text"],
Cell[112683, 2370, 1913, 60, 360, "Text"],
Cell[114599, 2432, 837, 28, 119, "Text"],
Cell[115439, 2462, 172, 2, 75, "Text"],
Cell[115614, 2466, 164, 3, 45, "Input"],
Cell[CellGroupData[{
Cell[115803, 2473, 461, 13, 45, "Input"],
Cell[116267, 2488, 521, 15, 76, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116825, 2508, 214, 5, 45, "Input"],
Cell[117042, 2515, 267, 7, 76, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[117346, 2527, 203, 5, 45, "Input"],
Cell[117552, 2534, 145, 3, 76, "Output"]
}, Open  ]],
Cell[117712, 2540, 179, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[117916, 2548, 349, 10, 47, "Input"],
Cell[118268, 2560, 261, 7, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[118566, 2572, 254, 6, 76, "Input"],
Cell[118823, 2580, 172, 4, 45, "Output"]
}, Open  ]],
Cell[119010, 2587, 436, 14, 58, "Text"],
Cell[CellGroupData[{
Cell[119471, 2605, 222, 6, 76, "Input"],
Cell[119696, 2613, 231, 6, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[119964, 2624, 214, 5, 45, "Input"],
Cell[120181, 2631, 340, 10, 69, "Output"]
}, Open  ]],
Cell[120536, 2644, 236, 3, 51, "Text"],
Cell[120775, 2649, 261, 5, 51, "Text"],
Cell[CellGroupData[{
Cell[121061, 2658, 360, 7, 45, "Input"],
Cell[121424, 2667, 412, 11, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[121873, 2683, 661, 10, 45, "Input"],
Cell[122537, 2695, 415, 12, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122989, 2712, 206, 4, 45, "Input"],
Cell[123198, 2718, 385, 11, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123620, 2734, 417, 13, 64, "Input"],
Cell[124040, 2749, 93, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[124170, 2755, 160, 4, 76, "Input"],
Cell[124333, 2761, 267, 7, 69, "Output"]
}, Open  ]],
Cell[124615, 2771, 210, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[124850, 2779, 208, 5, 45, "Input"],
Cell[125061, 2786, 318, 9, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[125416, 2800, 2283, 58, 162, "Input"],
Cell[127702, 2860, 4073, 76, 478, "Output"]
}, Open  ]],
Cell[131790, 2939, 436, 13, 94, "Text"],
Cell[132229, 2954, 164, 3, 45, "Input"],
Cell[132396, 2959, 215, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[132636, 2967, 256, 7, 76, "Input"],
Cell[132895, 2976, 169, 4, 76, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[133101, 2985, 144, 3, 45, "Input"],
Cell[133248, 2990, 169, 4, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[133454, 2999, 214, 5, 45, "Input"],
Cell[133671, 3006, 245, 7, 78, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[133953, 3018, 211, 5, 45, "Input"],
Cell[134167, 3025, 216, 6, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[134420, 3036, 317, 6, 45, "Input"],
Cell[134740, 3044, 354, 9, 99, "Output"]
}, Open  ]],
Cell[135109, 3056, 202, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[135336, 3064, 197, 4, 45, "Input"],
Cell[135536, 3070, 207, 6, 91, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[135780, 3081, 192, 4, 76, "Input"],
Cell[135975, 3087, 601, 21, 149, "Output"]
}, Open  ]],
Cell[136591, 3111, 243, 3, 51, "Text"],
Cell[CellGroupData[{
Cell[136859, 3118, 1893, 52, 347, "Input"],
Cell[138755, 3172, 7188, 129, 450, "Output"]
}, Open  ]],
Cell[145958, 3304, 189, 5, 86, "Text"],
Cell[146150, 3311, 446, 22, 75, "Text"],
Cell[146599, 3335, 165, 3, 45, "Input"],
Cell[CellGroupData[{
Cell[146789, 3342, 252, 7, 47, "Input"],
Cell[147044, 3351, 146, 4, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[147227, 3360, 165, 4, 45, "Input"],
Cell[147395, 3366, 149, 4, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[147581, 3375, 429, 13, 63, "Input"],
Cell[148013, 3390, 137, 3, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[148187, 3398, 178, 4, 45, "Input"],
Cell[148368, 3404, 152, 2, 69, "Output"]
}, Open  ]],
Cell[148535, 3409, 156, 3, 51, "Text"],
Cell[CellGroupData[{
Cell[148716, 3416, 1452, 34, 104, "Input"],
Cell[150171, 3452, 4195, 79, 275, "Output"]
}, Open  ]],
Cell[154381, 3534, 187, 4, 75, "Text"],
Cell[154571, 3540, 165, 3, 45, "Input"],
Cell[CellGroupData[{
Cell[154761, 3547, 338, 10, 47, "Input"],
Cell[155102, 3559, 226, 7, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[155365, 3571, 162, 4, 45, "Input"],
Cell[155530, 3577, 247, 8, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[155814, 3590, 503, 15, 70, "Input"],
Cell[156320, 3607, 193, 6, 120, "Output"]
}, Open  ]],
Cell[156528, 3616, 327, 6, 51, "Text"],
Cell[CellGroupData[{
Cell[156880, 3626, 1462, 41, 226, "Input"],
Cell[158345, 3669, 5666, 105, 318, "Output"]
}, Open  ]],
Cell[164026, 3777, 685, 19, 118, "Text"],
Cell[164714, 3798, 650, 22, 120, "Text"],
Cell[165367, 3822, 416, 18, 76, "Text"],
Cell[165786, 3842, 165, 3, 45, "Input"],
Cell[CellGroupData[{
Cell[165976, 3849, 353, 9, 54, "Input"],
Cell[166332, 3860, 199, 5, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[166568, 3870, 213, 5, 45, "Input"],
Cell[166784, 3877, 236, 6, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[167057, 3888, 218, 5, 45, "Input"],
Cell[167278, 3895, 212, 5, 69, "Output"]
}, Open  ]],
Cell[167505, 3903, 110, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[167640, 3908, 324, 8, 45, "Input"],
Cell[167967, 3918, 296, 8, 88, "Output"]
}, Open  ]],
Cell[168278, 3929, 115, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[168418, 3934, 199, 5, 76, "Input"],
Cell[168620, 3941, 257, 8, 98, "Output"]
}, Open  ]],
Cell[168892, 3952, 118, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[169035, 3957, 297, 8, 79, "Input"],
Cell[169335, 3967, 236, 7, 98, "Output"]
}, Open  ]],
Cell[169586, 3977, 115, 1, 51, "Text"],
Cell[169704, 3980, 292, 5, 86, "Text"],
Cell[169999, 3987, 789, 34, 110, "Text"],
Cell[170791, 4023, 406, 8, 120, "Text"],
Cell[171200, 4033, 225, 7, 75, "Text"],
Cell[171428, 4042, 165, 3, 45, "Input"],
Cell[CellGroupData[{
Cell[171618, 4049, 2163, 62, 162, "Input"],
Cell[173784, 4113, 35673, 597, 360, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[209494, 4715, 560, 16, 47, "Input"],
Cell[210057, 4733, 422, 12, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[210516, 4750, 256, 6, 45, "Input"],
Cell[210775, 4758, 478, 15, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[211290, 4778, 261, 6, 45, "Input"],
Cell[211554, 4786, 501, 16, 69, "Output"]
}, Open  ]],
Cell[212070, 4805, 112, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[212207, 4810, 289, 7, 45, "Input"],
Cell[212499, 4819, 567, 18, 64, "Output"]
}, Open  ]],
Cell[213081, 4840, 119, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[213225, 4845, 240, 5, 49, "Input"],
Cell[213468, 4852, 538, 17, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[214043, 4874, 855, 25, 54, "Input"],
Cell[214901, 4901, 148, 2, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[215086, 4908, 250, 7, 45, "Input"],
Cell[215339, 4917, 284, 8, 69, "Output"]
}, Open  ]],
Cell[215638, 4928, 529, 12, 87, "Text"],
Cell[CellGroupData[{
Cell[216192, 4944, 264, 6, 76, "Input"],
Cell[216459, 4952, 1110, 37, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[217606, 4994, 156, 3, 45, "Input"],
Cell[217765, 4999, 383, 11, 103, "Output"]
}, Open  ]],
Cell[218163, 5013, 211, 6, 51, "Text"],
Cell[218377, 5021, 137, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[218539, 5026, 237, 5, 45, "Input"],
Cell[218779, 5033, 985, 32, 79, "Output"]
}, Open  ]],
Cell[219779, 5068, 179, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[219983, 5076, 344, 9, 79, "Input"],
Cell[220330, 5087, 584, 11, 34, "Message"],
Cell[220917, 5100, 1487, 49, 98, "Output"]
}, Open  ]],
Cell[222419, 5152, 1059, 32, 104, "Text"],
Cell[CellGroupData[{
Cell[223503, 5188, 213, 5, 76, "Input"],
Cell[223719, 5195, 1570, 52, 190, "Output"]
}, Open  ]],
Cell[225304, 5250, 271, 5, 86, "Text"],
Cell[CellGroupData[{
Cell[225600, 5259, 291, 5, 45, "Input"],
Cell[225894, 5266, 1792, 57, 190, "Output"]
}, Open  ]],
Cell[227701, 5326, 355, 7, 86, "Text"],
Cell[CellGroupData[{
Cell[228081, 5337, 663, 19, 54, "Input"],
Cell[228747, 5358, 216, 6, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[229000, 5369, 969, 27, 83, "Input"],
Cell[229972, 5398, 1052, 35, 87, "Output"]
}, Open  ]],
Cell[231039, 5436, 246, 5, 51, "Text"],
Cell[231288, 5443, 213, 7, 75, "Text"],
Cell[231504, 5452, 167, 3, 45, "Input"],
Cell[CellGroupData[{
Cell[231696, 5459, 476, 13, 47, "Input"],
Cell[232175, 5474, 317, 9, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[232529, 5488, 254, 6, 45, "Input"],
Cell[232786, 5496, 446, 14, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[233269, 5515, 257, 6, 45, "Input"],
Cell[233529, 5523, 469, 15, 69, "Output"]
}, Open  ]],
Cell[234013, 5541, 110, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[234148, 5546, 289, 7, 45, "Input"],
Cell[234440, 5555, 541, 17, 64, "Output"]
}, Open  ]],
Cell[234996, 5575, 117, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[235138, 5580, 235, 5, 49, "Input"],
Cell[235376, 5587, 520, 16, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[235933, 5608, 737, 22, 54, "Input"],
Cell[236673, 5632, 237, 6, 73, "Output"]
}, Open  ]],
Cell[236925, 5641, 109, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[237059, 5646, 261, 6, 76, "Input"],
Cell[237323, 5654, 394, 11, 106, "Output"]
}, Open  ]],
Cell[237732, 5668, 284, 8, 51, "Text"],
Cell[CellGroupData[{
Cell[238041, 5680, 140, 3, 45, "Input"],
Cell[238184, 5685, 991, 31, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[239212, 5721, 358, 9, 79, "Input"],
Cell[239573, 5732, 1896, 59, 186, "Output"]
}, Open  ]],
Cell[241484, 5794, 143, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[241652, 5799, 184, 4, 45, "Input"],
Cell[241839, 5805, 1112, 37, 82, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[242988, 5847, 156, 3, 45, "Input"],
Cell[243147, 5852, 1104, 38, 79, "Output"]
}, Open  ]],
Cell[244266, 5893, 152, 2, 51, "Text"],
Cell[CellGroupData[{
Cell[244443, 5899, 745, 20, 75, "Input"],
Cell[245191, 5921, 19074, 321, 454, "Output"]
}, Open  ]],
Cell[264280, 6245, 349, 6, 110, "Text"],
Cell[264632, 6253, 453, 11, 111, "Text"],
Cell[265088, 6266, 152, 2, 51, "Text"],
Cell[265243, 6270, 332, 11, 75, "Text"],
Cell[265578, 6283, 946, 28, 192, "Text"],
Cell[266527, 6313, 752, 20, 88, "Text"]
}
]
*)


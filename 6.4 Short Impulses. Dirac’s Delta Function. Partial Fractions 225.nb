(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    238262,       5389]
NotebookOptionsPosition[    230269,       5124]
NotebookOutlinePosition[    230657,       5141]
CellTagsIndexPosition[    230614,       5138]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
3 - 12 Effect of delta (impulse) on vibrating systems
Find and graph or sketch the solution of the IVP. \
\>", "Text",
 CellChangeTimes->{{3.768744083365302*^9, 3.768744118178966*^9}},
 Background->RGBColor[
  0.9600061036087587, 0.9600061036087587, 0.9600061036087587]],

Cell["3.  y'' + 4 y = \[Delta] (t - \[Pi]),  y[0] = 8, y'[0] = 0", "Text",
 CellChangeTimes->{{3.768744123834553*^9, 3.7687441830424767`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.675293180323807*^9, 3.675293241636715*^9}, {
   3.6752938689000893`*^9, 3.67529390821786*^9}, 3.768743800811324*^9, {
   3.7729042633318853`*^9, 3.772904263912952*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e1", "=", 
  RowBox[{"LaplaceTransform", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"y", "''"}], "[", "t", "]"}], "+", 
      RowBox[{"4", " ", 
       RowBox[{"y", "[", "t", "]"}]}]}], "\[Equal]", 
     RowBox[{"DiracDelta", "[", " ", 
      RowBox[{"(", 
       RowBox[{"t", "-", "\[Pi]"}], ")"}], "]"}]}], ",", "t", ",", "s"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.675293925801461*^9, 3.6752939265674877`*^9}, {
  3.675294381450912*^9, 3.675294397920643*^9}, {3.6753562495446577`*^9, 
  3.6753562545422907`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"4", " ", 
    RowBox[{"LaplaceTransform", "[", 
     RowBox[{
      RowBox[{"y", "[", "t", "]"}], ",", "t", ",", "s"}], "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["s", "2"], " ", 
    RowBox[{"LaplaceTransform", "[", 
     RowBox[{
      RowBox[{"y", "[", "t", "]"}], ",", "t", ",", "s"}], "]"}]}], "-", 
   RowBox[{"s", " ", 
    RowBox[{"y", "[", "0", "]"}]}], "-", 
   RowBox[{
    SuperscriptBox["y", "\[Prime]",
     MultilineFunction->None], "[", "0", "]"}]}], "\[Equal]", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "\[Pi]"}], " ", "s"}]]}]], "Output",
 CellChangeTimes->{{3.675293915273439*^9, 3.675293927353664*^9}, {
   3.6752943894619503`*^9, 3.675294400194674*^9}, 3.6753562568178368`*^9, 
   3.7706425835710917`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e2", "=", 
  RowBox[{"e1", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"y", "[", "0", "]"}], "\[Rule]", "8"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"y", "'"}], "[", "0", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"LaplaceTransform", "[", 
       RowBox[{
        RowBox[{"y", "[", "t", "]"}], ",", "t", ",", "s"}], "]"}], "\[Rule]", 
      "bigY"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.675293930474298*^9, 3.675293975148944*^9}, {
   3.675294245457314*^9, 3.675294263350771*^9}, 3.67535626463206*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"4", " ", "bigY"}], "-", 
   RowBox[{"8", " ", "s"}], "+", 
   RowBox[{"bigY", " ", 
    SuperscriptBox["s", "2"]}]}], "\[Equal]", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "\[Pi]"}], " ", "s"}]]}]], "Output",
 CellChangeTimes->{3.6752939768879013`*^9, 3.675294268578113*^9, 
  3.675356272181817*^9, 3.7706425877452793`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e3", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{"e2", ",", "bigY"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.675293980481159*^9, 3.675293990036165*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"bigY", "\[Rule]", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[Pi]"}], " ", "s"}]], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"8", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[Pi]", " ", "s"}]], " ", "s"}]}], ")"}]}], 
     RowBox[{"4", "+", 
      SuperscriptBox["s", "2"]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.675293991398394*^9, 3.67529427332734*^9, 
  3.6753562763440847`*^9, 3.7706425913290443`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e4", "=", 
  RowBox[{"e3", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.675293993857871*^9, 3.675294001363497*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "\[Pi]"}], " ", "s"}]], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"8", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[Pi]", " ", "s"}]], " ", "s"}]}], ")"}]}], 
  RowBox[{"4", "+", 
   SuperscriptBox["s", "2"]}]]], "Output",
 CellChangeTimes->{3.675294002214149*^9, 3.675294275823575*^9, 
  3.675356279344099*^9, 3.770642595188342*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e5", "=", 
  RowBox[{"InverseLaplaceTransform", "[", 
   RowBox[{"e4", ",", "s", ",", "t"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6752940048649406`*^9, 3.675294018554743*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"8", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "t"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"Cos", "[", "t", "]"}], " ", 
   RowBox[{"HeavisideTheta", "[", 
    RowBox[{
     RowBox[{"-", "\[Pi]"}], "+", "t"}], "]"}], " ", 
   RowBox[{"Sin", "[", "t", "]"}]}]}]], "Output",
 CellChangeTimes->{3.6752940197220173`*^9, 3.6752942787765837`*^9, 
  3.6753562843677*^9, 3.770642600738141*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PossibleZeroQ", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Cos", "[", "t", "]"}], 
    RowBox[{"Sin", "[", "t", "]"}]}], "-", 
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"Sin", "[", 
     RowBox[{"2", "t"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.768744294505032*^9, 3.7687443267724533`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.76874432730199*^9, 3.770642604677505*^9}]
}, Open  ]],

Cell[TextData[{
 "I showed in section 6.3 that ",
 StyleBox["HeavisideTheta", "Input"],
 " is equivalent to ",
 StyleBox["UnitStep", "Input"],
 ". Combined with the PZQ above, it makes the green cell equivalent to the \
text answer."
}], "Text",
 CellChangeTimes->{{3.768744365284054*^9, 3.7687443676664457`*^9}, {
  3.7687444128662043`*^9, 3.768744461439533*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"plot1", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{"e5", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"3", " ", "\[Pi]"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Yellow", ",", 
        RowBox[{"Thickness", "[", "0.003", "]"}]}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "250"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plot2", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"8", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "t"}], "]"}]}], "+", 
      RowBox[{
       FractionBox["1", "2"], 
       RowBox[{"UnitStep", "[", 
        RowBox[{"t", "-", "\[Pi]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "t"}], "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"3", " ", "\[Pi]"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "250"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6752944705696077`*^9, 3.6752946334151783`*^9}, {
  3.6752948780599813`*^9, 3.675294878330079*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"plot2", ",", "plot1"}], "]"}]], "Input",
 CellChangeTimes->{{3.6752946365044527`*^9, 3.675294645700654*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {RGBColor[1, 0, 0], Thickness[0.01], Opacity[1.], LineBox[CompressedData["
1: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
qV/lBeByxnfqdw7/D1gonMg=
       "]], LineBox[CompressedData["
1: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

       "]]}, {}}, {{}, {}, {}}}, {{{}, {}, 
     {RGBColor[1, 1, 0], Thickness[0.003], Opacity[1.], 
      LineBox[CompressedData["
1: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
qV/lBeByxnfqdw7/D1gonMg=
       "]], LineBox[CompressedData["
1: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

       "]]}, {}}, {{}, {}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->250,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0., 9.424777768426972}, {-8.015592579742584, 
   8.015591973967455}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.675294646868085*^9, 3.675294882663553*^9, 
  3.675356293528043*^9, 3.77064261565236*^9}]
}, Open  ]],

Cell["Above: The solution tracks well with that of the text.", "Text",
 CellChangeTimes->{{3.6752946980512238`*^9, 3.675294744520295*^9}, {
  3.675294798989705*^9, 3.675294856914928*^9}, {3.76874454482047*^9, 
  3.768744560692168*^9}}],

Cell["5.  y'' + y = \[Delta] (t - \[Pi]) - \[Delta] (t - 2 \[Pi]), y[0] = 0, \
y'[0] = 1", "Text",
 CellChangeTimes->{{3.768744570554463*^9, 3.7687446343072166`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.675294974331627*^9, 3.675294977238277*^9}, 
   3.7687438108507853`*^9, {3.772904272346157*^9, 3.772904272808442*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e1", "=", 
  RowBox[{"LaplaceTransform", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"y", "''"}], "[", "t", "]"}], "+", 
      RowBox[{"y", "[", "t", "]"}]}], "\[Equal]", 
     RowBox[{
      RowBox[{"DiracDelta", "[", 
       RowBox[{"t", "-", "\[Pi]"}], "]"}], "-", 
      RowBox[{"DiracDelta", "[", 
       RowBox[{"t", "-", 
        RowBox[{"2", " ", "\[Pi]"}]}], "]"}]}]}], ",", "t", ",", "s"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.675294981082488*^9, 3.675295050697136*^9}, {
  3.675356342109418*^9, 3.67535636890001*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"LaplaceTransform", "[", 
    RowBox[{
     RowBox[{"y", "[", "t", "]"}], ",", "t", ",", "s"}], "]"}], "+", 
   RowBox[{
    SuperscriptBox["s", "2"], " ", 
    RowBox[{"LaplaceTransform", "[", 
     RowBox[{
      RowBox[{"y", "[", "t", "]"}], ",", "t", ",", "s"}], "]"}]}], "-", 
   RowBox[{"s", " ", 
    RowBox[{"y", "[", "0", "]"}]}], "-", 
   RowBox[{
    SuperscriptBox["y", "\[Prime]",
     MultilineFunction->None], "[", "0", "]"}]}], "\[Equal]", 
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[Pi]", " ", "s"}]]}], "+", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "\[Pi]"}], " ", "s"}]]}]}]], "Output",
 CellChangeTimes->{3.675295054086425*^9, 3.675356371674328*^9, 
  3.77064312159298*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e2", "=", 
  RowBox[{"e1", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"y", "[", "0", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"y", "'"}], "[", "0", "]"}], "\[Rule]", "1"}], ",", 
     RowBox[{
      RowBox[{"LaplaceTransform", "[", 
       RowBox[{
        RowBox[{"y", "[", "t", "]"}], ",", "t", ",", "s"}], "]"}], "\[Rule]", 
      "bigY"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.675295067141437*^9, 3.675295106494575*^9}, {
   3.67529578963549*^9, 3.675295806924533*^9}, 3.675356395107464*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "1"}], "+", "bigY", "+", 
   RowBox[{"bigY", " ", 
    SuperscriptBox["s", "2"]}]}], "\[Equal]", 
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[Pi]", " ", "s"}]]}], "+", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "\[Pi]"}], " ", "s"}]]}]}]], "Output",
 CellChangeTimes->{3.675295107958766*^9, 3.675295809466126*^9, 
  3.675356398363771*^9, 3.770643125849451*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e3", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{"e2", ",", "bigY"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.675295111309719*^9, 3.675295125453826*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"bigY", "\[Rule]", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[Pi]", " ", "s"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[Pi]", " ", "s"}]], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[Pi]", " ", "s"}]]}], ")"}]}], 
     RowBox[{"1", "+", 
      SuperscriptBox["s", "2"]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.675295126824069*^9, 3.675295813236837*^9, 
  3.6753564054473133`*^9, 3.770643130139284*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e4", "=", 
  RowBox[{"e3", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6752951289964533`*^9, 3.6752951369730864`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "2"}], " ", "\[Pi]", " ", "s"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[Pi]", " ", "s"}]], "+", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[Pi]", " ", "s"}]]}], ")"}]}], 
  RowBox[{"1", "+", 
   SuperscriptBox["s", "2"]}]]], "Output",
 CellChangeTimes->{3.6752951378112698`*^9, 3.675295816179628*^9, 
  3.675356408788142*^9, 3.770643133801712*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e5", "=", 
  RowBox[{"InverseLaplaceTransform", "[", 
   RowBox[{"e4", ",", "s", ",", "t"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.675295140234292*^9, 3.675295151972625*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"HeavisideTheta", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[Pi]"}], "+", "t"}], "]"}], "+", 
     RowBox[{"HeavisideTheta", "[", 
      RowBox[{
       RowBox[{"-", "\[Pi]"}], "+", "t"}], "]"}]}], ")"}]}], " ", 
  RowBox[{"Sin", "[", "t", "]"}]}]], "Output",
 CellChangeTimes->{3.675295153471245*^9, 3.6752958202987328`*^9, 
  3.675356413015675*^9, 3.770643137494603*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e6", "=", 
  RowBox[{"e5", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"HeavisideTheta", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[Pi]"}], "+", "t"}], "]"}], "\[Rule]", 
      "0"}], ",", 
     RowBox[{
      RowBox[{"HeavisideTheta", "[", 
       RowBox[{
        RowBox[{"-", "\[Pi]"}], "+", "t"}], "]"}], "\[Rule]", "0"}]}], 
    "}"}]}]}]], "Input",
 CellChangeTimes->{{3.675295216431397*^9, 3.675295220938806*^9}, {
  3.675295327509907*^9, 3.6752953537554913`*^9}}],

Cell[BoxData[
 RowBox[{"Sin", "[", "t", "]"}]], "Output",
 CellChangeTimes->{3.675295355549184*^9, 3.675295826859371*^9, 
  3.6753564180056667`*^9, 3.770643142076048*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[TextData[{
 "Above: The answer agrees with the text for the subinterval ",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", "<", "\[Pi]"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.675295367130377*^9, 3.675295398249116*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e7", "=", 
  RowBox[{"e5", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"HeavisideTheta", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[Pi]"}], "+", "t"}], "]"}], "\[Rule]", 
      "0"}], ",", 
     RowBox[{
      RowBox[{"HeavisideTheta", "[", 
       RowBox[{
        RowBox[{"-", "\[Pi]"}], "+", "t"}], "]"}], "\[Rule]", "1"}]}], 
    "}"}]}]}]], "Input",
 CellChangeTimes->{{3.675295406944038*^9, 3.675295436895668*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.67529543894741*^9, 3.675295831075211*^9, 
  3.675356423270772*^9, 3.770643147315062*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[TextData[{
 "Above: The answer agrees with the text for the subinterval ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Pi]", "<", "t", "<", 
    RowBox[{"2", "\[Pi]"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.6752958838544064`*^9, 3.675295928583544*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e8", "=", 
  RowBox[{"e5", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"HeavisideTheta", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[Pi]"}], "+", "t"}], "]"}], "\[Rule]", 
      "1"}], ",", 
     RowBox[{
      RowBox[{"HeavisideTheta", "[", 
       RowBox[{
        RowBox[{"-", "\[Pi]"}], "+", "t"}], "]"}], "\[Rule]", "1"}]}], 
    "}"}]}]}]], "Input",
 CellChangeTimes->{{3.675295659859723*^9, 3.6752956771656513`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"Sin", "[", "t", "]"}]}]], "Output",
 CellChangeTimes->{3.675295678339383*^9, 3.675295835181942*^9, 
  3.6753564271679707`*^9, 3.770643155346162*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[TextData[{
 "Above: The answer agrees with the text for the subinterval ",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", ">", 
    RowBox[{"2", "\[Pi]"}]}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.67529594088765*^9, 3.675295952990883*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plot1", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"e6", ",", "e7", ",", "e8"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", 
      RowBox[{"3", " ", "\[Pi]"}]}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Blue", ",", 
         RowBox[{"Thickness", "[", "0.003", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"RGBColor", "[", 
          RowBox[{"0.1", ",", "0.5", ",", "0.3"}], "]"}], ",", 
         RowBox[{"Thickness", "[", "0.007", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Red", ",", 
         RowBox[{"Thickness", "[", "0.003", "]"}]}], "}"}]}], "}"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "250"}], ",", 
    RowBox[{"Ticks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         FractionBox["\[Pi]", "2"], ",", "\[Pi]", ",", 
         FractionBox[
          RowBox[{"3", "\[Pi]"}], "2"], ",", 
         RowBox[{"2", "\[Pi]"}], ",", 
         FractionBox[
          RowBox[{"5", "\[Pi]"}], "2"], ",", 
         RowBox[{"3", "\[Pi]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", ".5"}], ",", ".5", ",", "1"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"GridLines", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         FractionBox["\[Pi]", "2"], ",", "\[Pi]", ",", 
         FractionBox[
          RowBox[{"3", "\[Pi]"}], "2"], ",", 
         RowBox[{"2", "\[Pi]"}], ",", 
         FractionBox[
          RowBox[{"5", "\[Pi]"}], "2"], ",", 
         RowBox[{"3", "\[Pi]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", ".5"}], ",", ".5", ",", "1"}], "}"}]}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.770643197269457*^9, 3.770643222858659*^9}, {
  3.770643345061934*^9, 3.770643364076851*^9}, {3.7706434185392714`*^9, 
  3.770643536140621*^9}, {3.7706435787133627`*^9, 3.7706436751064873`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 0, 1], Thickness[0.003], Opacity[1.], LineBox[CompressedData["

1:eJwtmnk8VP/3xylaRJhBiJmhaLGGIuS87SmppKgUElrsQkVRSlFSH0qWkETZ
IlsKN7JlS0K2yL7Mcu3LWPrd7+Px+2fej+dj7nLOeb3O+973e0bqgpu5wxoO
Do4DxMf/xvsUgfzWphAdq/8fowVexp3KcgLvOV0vC2K8kcJgS2f5gktgw0lx
Yrw8KbJ7Y9YDeNYg8mI48wH0iWToLmdGAemG/rQHMb5679Mwm5kKMuEzifXp
qbA0dTZiKrMQ1ohFxJi9LYS0KLO5icxqmNR183J+VA19XqGr/RntILgV2TwS
bAf6LRf/YIt+oB53dRO26gP5P+Ee65z7wdvysnPT1T5w1f7oGBzUD/EXNLju
BvTBBHvuWPDHfkind3XUpPTBjG+gTLDAAJyuFJ0dmOmDZY+Ixvv1A5Dce+WL
UXg/8DoW0e4bDMHtoCKKT/EAKJpxVwapjULx0gmzw3NDEKTSmsBpNgpPdcLj
GjcMQ7vI25sBTqOwQ1oR1986DHd6DZT9YkZBfkulJxcahhb3e7GeHGNgOhme
2fVwGG5GrPW0qx8Dudy5v+1bRqC6nZMKF+nwn9yfOGz3KEiU/FwsvkWH1cLt
Pi5ao+D++nWLZhQdzpCrWZtMR0H8im7ovlo68LyYixB3GQXXpcBZBWUG9H+n
hNzKGgUhCke9xDIDTCXYW44rjoGt/ep1dgQLOmUzkkalxuGadHFzRToLLLJH
POKUxiGk74Z8+DeCUxjVugfG4aPNbO+2aRa0BiuN21qNA7c1w+iIOQ652fb7
JsLG4eRuF55jGyYgJ8z2tuncOLClz7YnVU3AsCkHZ+0XOtxbo8n9sHkCEhVn
3ydW02Fzv6iKS88EKH5TXHD6RYdtr9seqc9NwAM+1ys143QwpZpDvcwklO1j
TP4QZUDCVpOU2XuTMPD12voZDwYYCKlfO6g/Bbuudww7iDLBqoARIX9sCn7a
3aSKbmOCs1VSrsC5Kbg6JuJaqMCE53F80+0+U3BC5/OeEj0mDG8f9LicNgXh
3gmRg1eZ8GDvM7dQwWkYPb6d89VnJsT9Ngp3pUxDuqPgDckKJmTfWM4yl5uG
b0+84kMbmNBe4sQSN5wG5a+7Onb/ZcJOIx2X9OvTkHiO5niXiwW1p+hX6nun
oTa/oPKhCQt6FhJDsxnT0CiCzH8eZ8FUzKm0yMVpKDilp7zuDAu29paNWZNn
wFTZrU7tCgucnV5eYhrNgL2bEyM5hAV81w0dN2fNQAX9r2d9BQukxZfuT32e
AcXKqtzfdSzYV5z9tq16BmTM8bnGZhac55AYiu+bgW8y/zzu/GVB1sMpeyXh
WejmycZm2Sw4Fp1gd8x/FqZmGjeIyuNwS5xxfOHhLKwqTzyv2oNDWqyGXuLz
WbBbey/eTh2HtfE/pSeyZuHD9g1C5/RwKEhaOxjeNwvowLE9ly1xGNh2rEWd
NQv7k25r+lnjIPA2rqKXPQug75R8ww6Hy6l73yoJzYHDynSY1lUcJDKcHH8Y
zUEY7337X7dwMFHIO+V7Yg4WdxRJHryLg08WhzHVdg7IHRxS74Nx+JEdvcPt
xhwYlvTNK4XjcDe/bnRzxhxEWGi/OpaAw4d9oh0Fn+ag7sXGUzve4NBdePH7
+co5MFY6rT+egsPezyvvs3rmoKNV6qNaFg6jpUpXzQTnQfBE4OuuLzgII/+z
c5LzkDyvjJExHPTKag7H756H8OP0f+rlOMR+s5Nn6c8DtSyj36AGhxqDLIkX
x+ah8fN4oEIdDjOVbF6dc/NgrJaouaYRB7OaCGaYzzzMHb206PYLBz+Tv3/2
Bs2DzyXhpQ1tOLyrlW/8Ez4P3rir4JN2HDgbKrMU3s+Do9GQt/UfHPJ+zrs1
dM3DKbu6mY3DOPSZG9h6j85Dzaq759pRHDa3PD0mOUvEcy5ocXQMB6e2XXtc
Ni/A4QIt6nUmDpGWPlLCWxfgeUzqFykch6/t5YIlOxZAQIj3XOEEDuJdZ6d4
dReAX6wlLWUaB2Prd/15Rxag96ndSY5ZHK79mWm2PrMAyb5anEZzOCSe1/3G
5bQA2za+yPSdx6GhNyw3w2sBjnJ9PP18AQe2becbi8AF+JrezZWwiINsv2zk
8uMFoFa5ZUWycThh73UvOZqIJ/7nSZ8lHAIHsWumKQuwg9ubrb+MA9+JoGTx
jwtg7BNdPklwTJlRy2jJAtiJvKE9WSGup8zDVfh9AQYqtIXEVol5J75B9X7r
Arh3i7/6j2DE98z+RN8CcKsufWYTXO9nESHFJO4v/tbl+D8cTo9v+YYvLEDH
+bG8FwQPW3VNlXAtwvpDSU9rCfasjpd+LLAIJom5HEyC/+29YH5GYhEkkni4
Vwl+nCxzd+fORRjYFP9qhWBR8ljOnOoi0IVda+kEv72T0VcBi+B67d6jGoJV
JtwEIw4vQqjlzN8IgkvPq+raWS6C1tXO2iMEH26Yc1eyXwTj39Ymc0S87Vqf
E1dcF0EO0q3DCL6Ydqup7uYicJavcpEJnhTV5YgJXoSL7Gi9B0Q9bj/gUr70
3yIYrNYIjxP14pmrttkXvwhV5/tuaxEcdfFROFfaIvDt1LvtR9Q7W5eEJ5Yt
gumjh7rVhD4Hslspbg2LkJ50dt0vQr9aSrTZgQ4iX0lz+wZC34ElalbHxCKk
eTFGwgg/uF8Z+JO6vAhXYr8LWMzgsNyewuezgQ2dxdotGwj/iBQouJBobIjL
xRR0CH8lbZ+M+yvHBtmXFpWlLByUIvLqs9TZwI4IYSsQ/jzoriV/+ChxPp+R
bjvh39ae1bNiZ9ngfTzegkz4+8KR8kcjjmy4sU9j4wHC/367TehBt9kQdV3z
jHU/Dhuiebeah7KhRhdbOP6X8Pv6pkO0F2y4GFSqva8Hh6zBU2nFmWwQ1mgo
qu3A4W/8xcuz3Wz4mfI6bVsTDi58O6O/jbJh8rBi1JMGwr9+9JpnM2yYdnBW
Ha3FgXzac6ci7xJcSK8LdKrEwYgcOOKotQQy3fXRL4pwaL6jv2Wv8RLYPTit
6FuAg83EOuO1J5bAvmtXgFEuDtcbwlISrizBl2PPrHMycEh/EOvQHr0E/0k5
7/8Uj0P5p70P36YswbEzseuwGEL/sR9pnrlLsCnu3cucFzisM+Wa4G1YAo+H
tcJnnuBgK+ByU5djGWSSV7BP/jgIReuEpzkug8/Dzec+nMRhd217jq/XMgwr
ZNZ5HcNBd8mzxSBwGabeflLcfhgH13OpYr3Ry6CmUtx7EBHzl5RAMrlhGRQt
Go8m7cLBP63vk7/qCkQE/E5+ucCC/7r8ukzQCiQ+VN9MmWLBe16RVZEjKzBh
4/QunM6CNtdD+jmOK4AV8gaq97BAWTW3YSh6BfIyN++NKWfB4Jd7/WYcq/BC
1S75wwMWHGnYwSvVsAqJGxvitdeyiOeYhqtQxyr82EsJGWMzQZPnUNP6oVUo
Nc8uuj/FBFlj50jW8iokvT3N8biPCRxl2RLF8v/g4Brx902lTMjL269g+fgf
uHx/nKPjw4TNjTKpVTIcyKjsad3PdgaYnFO0+irHgTxVM/Q8Ghlwj7Fv4+c9
HGj44ftUjgoGLPEcvJp5gANp98eb41kMGDW+ohR5kgPFCRf/5L3HgPKyrEK7
+xyo8tWe4iNyDPDOV69ZHuRA19UcTcmudNDOe2TXPs6BNC8cKGXb0YErt5ed
O8GBfpa9vfPrJB0ish8oXF3mQMHWeltOH6BDTvrv/zrInGizEu++/E10YL72
PVegx4nc/YIohW/HweFJ4ZRbIieqYA8KkX6MwUkndcmBs2sQ3fqoWNnCCFyo
nlPSubAGFeb1KfePjIDrjgK96EtrUNvQxz0zbSMQPKJ26aj3GtR7vUOMnjcC
n5xUcr88WYP0DLAcGfcRkLikYBJZtgZ1XV0I/T0wDAOXtnkb7liLKm/aUv2/
DoHHFf6G1Km1KPwFqd7y+ACEilVeVXPlRrGMiM/X/uuGXrETDgkb1yNyUoDP
yrMmMFop9rj3agPa5nqha+RRNqQ95nLZI8KDpA7aOuheK8UOuWz/Vpy1CQUJ
L6STN7dgI4tSGwTk+ZD++mHdF7M92Nff86m63zejZ7eqNGWrB7GK+PJTL39s
Rms5R/kudQ5iNQ5h3HjrZnRR4eP3OOYg9mNa2j6ufzP6obu5roc8hPXwm1Hm
lzajxR0n336zGcKWjJMjMxT5kaigkOW62SFs36djd7ZE8qNNGsNOFOERTDNg
q7JrDD9q9H0flSI7gukYDfdUJPKji1/rdGgaI5hhi5+2ZyY/+phnUT1yZgSz
mEiZr6/iR9vEwp5WJYxgHjtXXO4u8qPO6TcxRbKj2Kl6i0wfJQH08nWkmvyu
MUyZHhV5VUUADTLmc8vVxzAeni4/270C6LaqvPNhozGsxNju0CEtAfS9/rCT
qv0Ytv2by4iksQB6f4aebh03hk0XBUtVnhdANWPf3/DxjmNPUz89Jz8RQIlP
hB7n/R3HrlQt+W94JoDIVc6WQcxxzGBI5+JKhACyFbnirM8exxakK1VGogUQ
LeK2ZRSZjtnE//zx+a0A6qxcdg8zpGOKz8c3XigRQAXvrb9lpNCxursSt7MZ
AuhrVM320HMM7KC5sPQQLoCs8uSZNpcZWIXU5iqxaSI/1/0+27wZWPHXf3xB
iwKo8gc1w+sxA8ta7X91cp0gytl7vU39MwN7evN9CZsqiAQnuqsOkpgY76Ek
O6Vtgkjv9NzOeQkm9lAslvuirCAKzrRt/28HE7vz6fGRBnlBpBMwvfY/bSbm
Oef2J2G/IFrPbdCc5cDELDz3rRicEEThJr8irfOYWJOu0usbpwSRyofWvO4S
JmYquNMw67QgSqA3fzapZmKG2WJhW2wFkYJkhO14BxPbx1qWGHcWRHL3Pzgb
rjIxsSvftMODBdFM6lr/c/osrId4++0oEkRXWuXf46Us7CNDNvt3sSCyvZhp
HFrJwoJ9VwZaMUFEKq5JJ9ezMKWwtMPNlYJo08jegql2Fhb4iWtr3U9BZEhp
duubZGHS/EVFxWOCKJMu5n2bhmNz0eHMzwxBNG5pUrdWFsdqtztKFeGCKGmX
QI6vHI55aZJD8mcFUUymOlVuH45VOLhYZXGSEPthl8rXQzjmWCw1nyBGQuqV
67BEdxzTNF7YHS9BQnb8Zfl83ji2ubnxfByVhDQvNvNfvoFjhSN+VS9lSGj3
Ab3B8Ts4toHc9vzZHhIS6/atF/8Px7pfZXwPVyOhjKyqWPZzHMveGbQSpk5C
tj4rX2qicey0jrJD6AESOmKQOqz0GsfSLoeqBZmQkMOl/PRdH3Ds9oztpTum
JBQpV1Pj9xHHzAPU4wKOkpCVc4NscT6OLUUOrvU/SUJRhh7x64txzPSrzq9r
diQkbfjy8PdqHKMdFl7vdZGECq29IKwWx2Zb6ZoeTiQkZVHtCA04Fk9/meTi
QkI1Bp0mrs04hotMezjeICE5oz/757pwLPQ0Hn3Sn4T2ebE/0npwbHscvcwg
gIQatmut0/yLY1ZSg4Lb7pPQ8Zr0ffsHcWzK/u9+0kMSou7IF6QO41hYSrcd
5yMSsh+KLJ8ewbFyudac3qckdAPHX1+m45i168+OxggSYj560sjDxLH57AbO
0hckRNl9qCGGhWPy+6qOx8WR0NynigMPJnGs6nr5jUcJJLSJNZE5MIVjdl9K
X99MIqGwLCGm4gyOvUCFk1bvSKhTLKj12RyOKQflih1MJ6FLPPdvvZ/HsbrK
D7rqWST0gsSc/LBA6L0h47JsDgmFLCiovF3EMY7D754J55GQXsW3AyFsHIsJ
Sy7iKiShAUxVyHoJx9SaEvumi0howZc3X3IZxxpJrzYOFJNQ+pchaiPBl09G
72nGSIjzla2FywqOcb18frqsnIT4PXaYLxEc3/nsTnYlUf8mpuj1VRzTkHzy
PqGGhBjP3d8NENxsE/rzSR1xvT5vDp1/OOacFLx4q5GIR6SB9oDg9UN3pVx+
kpBlp9lGjOCkHQEm1i0k5Cj6p2iIYO0rfh6Hf5NQy+oFlSWC2zJ8ozU7SWj+
X4vnP4I9cK+yXX9IiNas7DdFMK+K+5joXxJ66XbrcAvBKdecBTcMkFCCSN1A
MsGo8NL++SESumCianCR4M7Fi3bDoySEN7Q7kwi+pm0X0kon8skaOfeBiJ8/
4FxOBYuEgtWfb9EiOK3sdEfuJAkdXKLG5BP5G3Cd4nwzQ0LrG38MUQjuMTLf
9d88CX2snmX7EPW7HmJ2/A6bhM7rMzpKiHqT6g/dcF8hIaFekaBpQo/Mzcav
bTjIKNavf24Lwf0RMHlgHRmFB+sgBUJP/zYtMYWNZCS55rcIhdB7i5iGrgQv
Gcm/pH1emSX6I175GVuQjF79074cMo1jw3/li8aEyEhnzM5nL+GnO9t29bVv
ISM5yW7zpgkcK3gntadQkox6T3X6NxP+PEaXPJ1CI6N319h1+xk4RlcQv/N8
Gxn1bXrHDB8n+i2X9NNrFxnFBZtkbCD8HlKy1kN5Lxl5qC7vke8l/Judf9JG
g4xYNYqkrm4cW5PspPlEi4zWV5VUeHcS8YfWrWXokhGfBX+qayuOuVtGvEg1
I6PzvrQnrkT/Zh4y9Gs7Tkaywf6K/kR/jx+Yt+E+SeSTVJLlXYFjF7ef3WV/
lowSs96eki/FMctJ6WLKJTJKH2vxf5eNY5GDLYlHrpKR/VK1hXAmjjX9Dr7v
70pGVk5Wkq7vcexQ6bhZ5zUyOsObEDJAzEc6jz72Pb9DRuuC0kg9z3BMRkZv
PV8scb+SYCUhVxy7IDpD14ono/bIND3dy4S/N6U0XXlNRk+1bD3OXMQx0amN
MTWpZKStuqBw/AzhN+yn/L08Mhrn7rl1zBDHpq3szJcayGireKNH9BaiX03J
6rt/ktGdXxsbQwQJ/0Pl1tMtZPRd6uItx02EXjK7hgo6yejJcb6hwVUW1jk1
4es5QkYB/qIH5wZZWNnjwFdjHELIXHqFyy2ThZ3SEiD1rxVCJ/RQ2psUFjY+
lhDcuU4IvVYjX6pOYGFCxphbHa8Q+qESqd39jIVd4lzVzRQVQpqKB/K1vFnY
Zh+/YXdlIfTZ1dOhVYOFWdv4KC3YCKEthvTUZ7lMbJJvXfLEBSFUmrLBKSeN
iQUXPxcdcxBCp2veff/6molli+Vzdl4VQt/WqIZlhTOxtS3Tv774CiEXr9zo
qitMLO2gx/WAcCEU+2TSmCnJxBb2OJetw4QQ4/FgjeZ1Bqb0LGdKp1wIdZIj
1ro5MzDHibltvpVCiDvgUstTWwbWmnUneKROiHifsrB8dZCBfZSLOlzTLoT6
ZxyKO7cwMBeZ8taQKSFkRfu5xPxIx/pFRcd5ZYWReujuG9ld41jDv28kcpgw
GrjQtD9ucRSrFVHS0H4qjNJTJa9Vjo1iNQox5xwihNHnQg1ab8coVn7W/V1h
tDDqxKJmB4pGsU+FEjrWKcLI+tCJTLUbo1iym/flt5gwusRYo7o0M4L598p+
VZ8SRirB7i8d+oYxOSzExdpSBHU/GSsUfjqIPbQoxTYKbUF+2+6Lz3n0YkEk
G0j5uwUJGEzfPlP2C/NPcS1ISRBFMYyouyfgK7Yqx9g3eEYMbXtz706OewZQ
OlsHBWTFUVPWoMhXoSY4cF4x9PWAONoz9uGn094uYPNMW0vlbEWUfoZhj/gA
cHdsZdDytqK7I1dHRBQHQCDVwI9WuBU103eVG+gOgKz+i2hqyVZ086HZQoDT
AJj77W+T/L4VfRjn0PLKHYD39ICj4n1b0Yam+/X6JoNgVc+rRxaUQJn25f/0
nYcgP0x2B7eHBOrjOnokLIxYH5C902a9JJBEuZ2O56sRsIr+pjDsI4F+Zb5z
PZQ5AuxkW7Vqfwm0Mp5wpaV+BHSKY3RDHkqgqHfH+49sGoWq8c3WfIkSyG1T
1PUf90fht/H8U+EfEmgj5j/9y30M3jUYCq1rlkBq9tqYQMAY3DwRGTXXIoEu
Lm6pgrAxkLDZE/+7UwLNNAQ7Xns/BrY+V9OjhyXQ1c2Jkup9YzCa3FspuSqB
5DMt2reajcMiZw1bRkESOUjtz1CSpIOzRr3mKWVJFDKqKZa7mw5/XZtuBqtK
ojN7tfRlNOhQ09XOHt4viWqrhTNazenwIn+MnWokiTo0swcdHtBB5fKmpV22
kijAvDRHm0mHK01mSwoRkijJI2Dj43QG9Kw7oXX+hSSy8Llv+7uAAccPWPo9
iZZEBbUt1wXKGaCRZrPESpBEqmUtTYeJ9eW6e+5LHzIk0UpK6OnhtUxIUv9v
aU+VJIpxTWtItmRCV3zr0t5FSRQocjlNbJIJKU8L65SWJRHPk5B630UmeN6N
jt31TxIZtLyyrORkAY/jOS1JbgoKMDZ5oUhigYbC0E0uQQqy99RX36/Cgsgv
M4vNOynoYEqDipwbC2wz277XyxHfNw423fJhgVzCp+gqRQraZVXyH3aLBeV3
/fd/VqOgaJ50D4HHLJgw4brxGlFQfu1RxZFUFpi2kxfcrChI3Gn/MYduFojW
zlZfPktB6enj1u/6WTDw5XeU/XkKenAh4HjnKAtuJsSqW16koJ7bbwd5Zlnw
znGbr447BbXcUj8Zz4sD16zKHO9DCopr3PvskQYOTcNCVeseUdCflqvPvxzA
IbZ97jnHEwp6uSxxtFMPB5Xiz3tnIiio1Tf594ApDrZBet5dCRRUKnd4QtYW
h2JB85n3hRR0pezp/JUgHHbnjQUOfKYgmechMt0PcHh56g6fZCkFPXoj3arx
GIdrsdmyTyuI45/RM/MicZCX4T/t85OCZI+VLuYn4xBTnTL0oYWClh10R+++
w2HDFR3Psd8UdPuPnL5WBg6DWS6PrHsoqODsSzXXXBziNOpL9OgUdFfMqbL7
Kw48XfaH/FkU1Cdv08ZVgcP1W0tt+ZMUFJr+R1e0GgeL8t0TOxcoiKroT+Ns
wKH8Yrn/hSUKejVYEd72Awfl9Wc2xq1SEJfr0PGoZhx4TUOk+bmp6M+uiOrO
3zjcZNE+HNxARSee5fme68Rh9OknrbubqGhevc2rrhuHitYRi1lBKup432Zy
uQ8HfxujB10UKrrEHNTPGMNhnLOHLCxNRcN4+e4QOg5Wyd6JZjJU1CN33fw4
Ewe1seSiMjkqCun9ZfPmf/tzj7SNlhSp6Pnv4/oKUzgIKLY0q6lQ0Z5Np+yT
pnFgeK5lpGpQ0flItZNmczicEY693qdFRTW25jL353GoKVTh3grE+Za3FFMX
cNh3pvaZhR4VDc0uuOUt4pC8bEd5YkhFVzRFxjLYOJASFtOqD1JR51vV6Kf/
2//VfabOaUpFZ7VKAmyWcWAN7KzQPEpFvYHycWIrOFgHfz12zZyKAgI2sEoJ
rt1p9SfzJBVVfhu6dnQVB406/PKIFRUtnnNUriM4xeXBHM2aik7176ep/MNB
SIAadMaGiowuSxrcI/juxwL+yAtUFBzeFVtG8ISFWVyDAxUd9THdMU7w+fmh
nesvU9HVbyeH/7e/Wx99Kx85U9Hh1+PtywRragvr3XSjIh5s079hgt/1ZDTm
elKR17Fqq2KCRe4YnGV6UxHOt3/Yn+B727pHZG9Qkb9aaOpOgqcqva7Z+lNR
2P3JOIyI1/bSJs6YACoaNcqt0iW4kedN2K+7VHRdT0rmA5GvVqamOF8wFUlU
xXxaT7D7+oUY9RAqUrCzpB4l6pVsl7/1wmNCL0nwv0vUs/2LZ9zjcCrCFJp/
vCbqzSuiLFn4H1HPE6/EMwk9kDvzVd9zKsr6s/9cMqHXtdo0Cm80Fa1NOfLy
AaFn920Zml0CFeWJ57AFZwk/dPQnPkqiokCNR9uKCD8YqCZKFbylolKfSWNT
wi8ZI+LbNmVQ0X4Fzgf7cBz+6ra/2fuBisouR78JI/wmFPd8u+1HIn6zWKyJ
8KP/MQHZ/E9EPJ76bPFRHLLTGlJ6v1ARX6H2Vulhov+4Hu3gwaho+3tDJDyI
g2kR9y6bSkKPswWxWC/hF/K39yE1VPTUuLXF53+/j7gE7s6ro6Jmdc8t4l04
SEovyW1spqJ2IQq2vQ0Hc/9PGaqthN6aB3c8/oVDcJu3wvl2KtrbIpvQ20T4
LXRCMbeHyFe/rOJQHQ6l00N7ztGpaIuOg5gKRuh15M3HBywqKs9vVWZ/wUH2
na3qx0kqOtZQ6pj1CYdw6y619QuEf7+b7OvKIfK5MBprtYaGKs9sf230hvAr
v3E3cy0NwcrAqFsCkV/xW4kgbhoyuLNiez8WB9Et9q8yN9CQcZc441oEkV/d
n/g1/DT0mFWS73iXmK+ua/dGCdBQUnVe9eQtIl+ZWKoCiYbaeDmpxHofRgOs
Ei2FaSimZM17CXccjqn9ep2xlYZUDLVvRVnjIPWqJvnUThqKXxc00LOHOH6H
SGbTLhr6sJ1J/k8eh6yP9vmH5GiE3wsM1XYQ/q5ZrdRRpKGvgTJFhhJE/abV
RmTVaGg9T5LqK26if0xe75oHGhIQHN8n1cqCgy2sPR66NOQs/WyispEFm220
Nel6NBTGLuo5XcOCmGu/D/Ua0tBajVjHo19Y8DGBz7n6MA39tBx46JHIgv7Z
G1lRljQUJfHB8rkT8TwJrC4QPE1D6PcDQSVbFrhuEsYenaGhAmF57U9WLGDT
sn8EnKOhgXHZmZcmLCCZDk842dPQDwqffeRuFugnmatquNFQgOGRJZ8xJiSb
yX1qD6Yhl4fJvTxnmfAl51e850MaWrjBMdh4jAnNQv73eUNp6FTtfkqgERM4
u+rNURgNPSwpMUvbw4TzTq7M1AgaKpteOktZzwTRwBxp30QamrcVUnyUxYCw
HPUw4c80FBz22SINp0Oy0F+vD19oiLa4v0Z6gA7Fvg/PmJTQ0LWwubMhbXQY
P9Cx49ZXGnL9HcAlVUKHg7U3yweraMixulTHL4QOawZK5nN/0VDWzdDkfgod
fIQMLpgzaSifX2mkSHsc9p/sEvjJIvLlf3OQU2kclp97YkcnaKgv6tZGTalx
CNryWuLINA2ZHNeoCeAeh6fiq23Gi4SfYg6RzzWMQRrt0+ED3FKobzG6yuHM
GPTIy+/dKSmF5PrNb45eHgVjQ6ENq6ZS6IOlxMEI22Fg2ZUqe5tJIT3BDpfa
o8MQefvSacZRKWQfMfVyVmcY/hYWp3WaS6FsltO2nZLDcHO3w5FCKykUtzi7
/l/7EGTwF/znflEKfdLeJ+ZvNgSkTkvJAT8pdOCPJD6jPAh/XGNVatKkUM5p
/2ecbX1QntE+HSIgjQK9z4gG3myHlJMN2bfcpFFyIp/t6aO1wCnBTJfxkEYs
5SWu5yPfwbqfN7XBUxrd0fIYLg34DiQ301eSPtJoSvuXX8+HGrj9sC6kxF8a
6UtvKrHgr4ZTX75fWAmRRkef9klb132DdVJVQreSpVGQUHx6tNdnsBsZ4pdJ
kUav0x3j8hOLoDiTe1NDqjTSUTnOxho+gaemIadkujSyidJGSTsKoedEBbM4
Rxr5ThV+z+jMhYLg8qrlUmn0NWzzgRz/NBA80l+W/JWIR4Q7XKf1HTiT15SY
lkujAzvedHxWSAXpRN3cuEppxN8a2n+v5w08KfqaoF0vjZ6M2ZNWbsfAWMDf
mMEGIt/drvVGSlFgYMTx4vEPaeQ1czMxsDcC2M3wuLtZGnGmbbSKDQiFk9E2
D+61SCPJXS+7a3uDINsm4K58mzSqh7jAjoCbwCObcKvltzRqOnREQyTwCjgw
Sq/7d0ij+O+/8v73/53/A7T5G+s=
     "]]}, 
   {RGBColor[0.1, 0.5, 0.3], Thickness[0.007], Opacity[1.], 
    LineBox[CompressedData["
1:eJxFz1tI0wEUBvCpzbzmnGulOWuSGmmWoQl2MUktYop4WZCSaSypnDKzpbCp
qE0nsxchW7pWMDa8bCihJk3nJW2ifwrRnF3M5sKk2WVm6dSVQZ5z4OPj9/A9
HGZ2fjLHnkQiJWzmX9/xo3RMvhKfIv0/KeV+I1uTE73lYqXZ6q+5Db72g37Q
WVMF/khvjVlX14NlTXxiWa0Cr1nS6yzqLnBzfeKv7+oXuL9ZYzO2GsBfhFyB
KNUIDk0kD1WEfwZfvmIrstZ9BcfSIgvPnbGAk6TyrCTBMrjMpCtkKVfALVUN
HIN0DZxABLkxCRv4Vkekft1EOr3ltJxIxly6PZh33YNQWRzANd5DN8LzyOAP
3ikcufN2cPyGllcpcwI3S7Zxw+gu4PPc/YNajSt4fpXpRAlxB/dN/VbFjOwA
s8dS1fzDFPBouW9Jmxk9s/n9dLcn+Bt9iXe1mAoW9zjwjkR4gfslZbIFEg28
Epbb76hDE38GqV61O8HBOjE34wIdXJ3aq3Om7QJXUDOjlbNogTKvUynfDbYF
m4+ZLnqD/d5MmiiBPuCTl0JrHs+hrS5LGcz2PeCO2sAgMs8XvGqntwYcYoDf
Ppxci1hFaz2TfzZ1+YGPq6N83EV7wUyZXsE+sA+sSAx+ahCh+bTY7ORF9Nk4
mpONxQS/z2s4qm9GD7QalsQUf7AyjWgT5qPtfBdbAnjoDKObiihAU/NZMgYf
XVI9Ku4RoNnPRrI3xGhH5jBNqEBnzX/yCFCitWqyK6FCF0TF2TFa0DMpzxe1
7ehO0cDwei/aM8HYr+hD53rZ97AG0P6PYp40DqHvdvfJT4yhF0pnH5gIdGw8
6Z7kJdo6Hi15N45Ok2ZWVU6g2zJLy0Neo10C5cKJKTTH3FskmEb/BSjNF/s=

     "]]}, 
   {RGBColor[1, 0, 0], Thickness[0.003], Opacity[1.], LineBox[CompressedData["

1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->
   NCache[{{Rational[1, 2] Pi, Pi, Rational[3, 2] Pi, 2 Pi, Rational[5, 2] Pi,
       3 Pi}, {-1, -0.5, 0.5, 1}}, {{1.5707963267948966`, 3.141592653589793, 
     4.71238898038469, 6.283185307179586, 7.853981633974483, 
     9.42477796076938}, {-1, -0.5, 0.5, 1}}],
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->250,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0., 9.424777768426972}, {-0.9999997370541668, 
   0.9999997370541668}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{{
      NCache[Rational[1, 2] Pi, 1.5707963267948966`], 
      FormBox[
       FractionBox["\[Pi]", "2"], TraditionalForm]}, {
      NCache[Pi, 3.141592653589793], 
      FormBox["\[Pi]", TraditionalForm]}, {
      NCache[Rational[3, 2] Pi, 4.71238898038469], 
      FormBox[
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "2"], TraditionalForm]}, {
      NCache[2 Pi, 6.283185307179586], 
      FormBox[
       RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}, {
      NCache[Rational[5, 2] Pi, 7.853981633974483], 
      FormBox[
       FractionBox[
        RowBox[{"5", " ", "\[Pi]"}], "2"], TraditionalForm]}, {
      NCache[3 Pi, 9.42477796076938], 
      FormBox[
       RowBox[{"3", " ", "\[Pi]"}], TraditionalForm]}}, {{-1, 
      FormBox[
       RowBox[{"-", "1"}], TraditionalForm]}, {-0.5, 
      FormBox[
       RowBox[{"-", "0.5`"}], TraditionalForm]}, {0.5, 
      FormBox["0.5`", TraditionalForm]}, {1, 
      FormBox["1", TraditionalForm]}}}]], "Output",
 CellChangeTimes->{{3.770643212363039*^9, 3.770643223763822*^9}, {
   3.7706433519466667`*^9, 3.770643364961309*^9}, 3.770643423931479*^9, {
   3.770643470784152*^9, 3.7706434986094513`*^9}, 3.7706435387380877`*^9, 
   3.7706436113615828`*^9, {3.770643649998884*^9, 3.770643675893461*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"7.", "  ", "4", 
     RowBox[{"y", "''"}]}], "+", 
    RowBox[{"24", 
     RowBox[{"y", "'"}]}], "+", 
    RowBox[{"37", "y"}]}], "=", 
   RowBox[{
    RowBox[{"17", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "t"}]]}], "+", 
    RowBox[{"\[Delta]", 
     RowBox[{"(", 
      RowBox[{"t", "-", 
       FractionBox["1", "2"]}], ")"}]}]}]}], ",", " ", 
  RowBox[{
   RowBox[{"y", "[", "0", "]"}], "=", "1"}], ",", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "'"}], "[", "0", "]"}], "=", "1"}]}]], "Text",
 CellChangeTimes->{{3.768744711593614*^9, 3.768744777324974*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.675345129935425*^9, 3.675345131693796*^9}, 
   3.768743821026649*^9, {3.7729042827614117`*^9, 3.7729042832873917`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e1", "=", 
  RowBox[{"LaplaceTransform", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"4", " ", 
       RowBox[{
        RowBox[{"y", "''"}], "[", "t", "]"}]}], "+", 
      RowBox[{"24", " ", 
       RowBox[{
        RowBox[{"y", "'"}], "[", "t", "]"}]}], "+", 
      RowBox[{"37", " ", 
       RowBox[{"y", "[", "t", "]"}]}]}], "\[Equal]", 
     RowBox[{
      RowBox[{"17", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "t"}]]}], " ", "+", 
      RowBox[{"DiracDelta", "[", 
       RowBox[{"t", "-", 
        FractionBox["1", "2"]}], "]"}]}]}], ",", "t", ",", "s"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.675345194317087*^9, 3.675345295230365*^9}, {
  3.675356449475524*^9, 3.675356455519948*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"37", " ", 
    RowBox[{"LaplaceTransform", "[", 
     RowBox[{
      RowBox[{"y", "[", "t", "]"}], ",", "t", ",", "s"}], "]"}]}], "+", 
   RowBox[{"24", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"s", " ", 
       RowBox[{"LaplaceTransform", "[", 
        RowBox[{
         RowBox[{"y", "[", "t", "]"}], ",", "t", ",", "s"}], "]"}]}], "-", 
      RowBox[{"y", "[", "0", "]"}]}], ")"}]}], "+", 
   RowBox[{"4", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["s", "2"], " ", 
       RowBox[{"LaplaceTransform", "[", 
        RowBox[{
         RowBox[{"y", "[", "t", "]"}], ",", "t", ",", "s"}], "]"}]}], "-", 
      RowBox[{"s", " ", 
       RowBox[{"y", "[", "0", "]"}]}], "-", 
      RowBox[{
       SuperscriptBox["y", "\[Prime]",
        MultilineFunction->None], "[", "0", "]"}]}], ")"}]}]}], "\[Equal]", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "s"}], "/", "2"}]], "+", 
   FractionBox["17", 
    RowBox[{"1", "+", "s"}]]}]}]], "Output",
 CellChangeTimes->{3.675345298127727*^9, 3.6753564586489887`*^9, 
  3.770645117682291*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e2", "=", 
  RowBox[{"e1", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"y", "[", "0", "]"}], "\[Rule]", "1"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"y", "'"}], "[", "0", "]"}], "\[Rule]", "1"}], ",", 
     RowBox[{
      RowBox[{"LaplaceTransform", "[", 
       RowBox[{
        RowBox[{"y", "[", "t", "]"}], ",", "t", ",", "s"}], "]"}], "\[Rule]", 
      "bigY"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.6753453194741993`*^9, 3.675345390515527*^9}, 
   3.67535647740905*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"37", " ", "bigY"}], "+", 
   RowBox[{"24", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"bigY", " ", "s"}]}], ")"}]}], "+", 
   RowBox[{"4", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "-", "s", "+", 
      RowBox[{"bigY", " ", 
       SuperscriptBox["s", "2"]}]}], ")"}]}]}], "\[Equal]", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "s"}], "/", "2"}]], "+", 
   FractionBox["17", 
    RowBox[{"1", "+", "s"}]]}]}]], "Output",
 CellChangeTimes->{3.67534539343635*^9, 3.675356479956911*^9, 
  3.770645121224166*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e3", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{"e2", ",", "bigY"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.67534540895078*^9, 3.6753454178184347`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"bigY", "\[Rule]", 
    FractionBox[
     RowBox[{"28", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "s"}], "/", "2"}]], "+", 
      RowBox[{"4", " ", "s"}], "+", 
      FractionBox["17", 
       RowBox[{"1", "+", "s"}]]}], 
     RowBox[{"37", "+", 
      RowBox[{"24", " ", "s"}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["s", "2"]}]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.67534542224091*^9, 3.6753564853673077`*^9, 
  3.7706451247888603`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e4", "=", 
  RowBox[{"e3", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.675345425935253*^9, 3.675345432594112*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"28", "+", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "s"}], "/", "2"}]], "+", 
   RowBox[{"4", " ", "s"}], "+", 
   FractionBox["17", 
    RowBox[{"1", "+", "s"}]]}], 
  RowBox[{"37", "+", 
   RowBox[{"24", " ", "s"}], "+", 
   RowBox[{"4", " ", 
    SuperscriptBox["s", "2"]}]}]]], "Output",
 CellChangeTimes->{3.675345433874804*^9, 3.675356488814268*^9, 
  3.770645128584532*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e5", "=", 
  RowBox[{"InverseLaplaceTransform", "[", 
   RowBox[{"e4", ",", "s", ",", "t"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.675345437630308*^9, 3.6753454540094023`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["\[ImaginaryI]", "4"]}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"3", "+", 
       FractionBox["\[ImaginaryI]", "2"]}], ")"}], " ", "t"}]}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"4", " ", 
     SuperscriptBox["\[ExponentialE]", 
      FractionBox["\[ImaginaryI]", "4"]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]"}], "-", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "t"}]]}], "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "+", 
           FractionBox["\[ImaginaryI]", "2"]}], ")"}], " ", "t"}]]}], ")"}]}],
     "+", 
    RowBox[{"\[ImaginaryI]", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"3", "/", "2"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        FractionBox["\[ImaginaryI]", "2"]], "-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "t"}]]}], ")"}], " ", 
     RowBox[{"HeavisideTheta", "[", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], "+", "t"}], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.675345455070505*^9, 3.675356492818902*^9, 
  3.77064513248897*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e6", "=", 
  RowBox[{"FullSimplify", "[", "e5", "]"}]}]], "Input",
 CellChangeTimes->{{3.675345664543943*^9, 3.675345677418188*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "3"}], " ", "t"}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "t"}]]}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"3", "/", "2"}]], " ", 
     RowBox[{"HeavisideTheta", "[", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], "+", "t"}], "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"2", " ", "t"}]}], ")"}]}], "]"}]}], "+", 
    RowBox[{"8", " ", 
     RowBox[{"Sin", "[", 
      FractionBox["t", "2"], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.6753456719400587`*^9, 3.675345678846046*^9}, 
   3.6753564969996*^9, 3.770645136428679*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e7", "=", 
  RowBox[{"Expand", "[", "e6", "]"}]}]], "Input",
 CellChangeTimes->{{3.675345726415153*^9, 3.6753457394653683`*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", "t"}]], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     FractionBox["3", "2"], "-", 
     RowBox[{"3", " ", "t"}]}]], " ", 
   RowBox[{"HeavisideTheta", "[", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], "+", "t"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{
     FractionBox["1", "4"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"2", " ", "t"}]}], ")"}]}], "]"}]}], "+", 
  RowBox[{"4", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "3"}], " ", "t"}]], " ", 
   RowBox[{"Sin", "[", 
    FractionBox["t", "2"], "]"}]}]}]], "Output",
 CellChangeTimes->{3.675345740467307*^9, 3.6753565027781467`*^9, 
  3.770645140230033*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PossibleZeroQ", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "t"}]], "-", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        FractionBox["3", "2"], "-", 
        RowBox[{"3", " ", "t"}]}]], "  ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "t"}]}], ")"}]}], "]"}]}], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "3"}], " ", "t"}]], " ", 
      RowBox[{"Sin", "[", 
       FractionBox["t", "2"], "]"}]}]}], ")"}], "-", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "t"}]], "+", 
     RowBox[{"4", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "3"}], "t"}]], 
      RowBox[{"Sin", "[", 
       RowBox[{
        FractionBox["1", "2"], "t"}], "]"}]}], "+", 
     RowBox[{
      FractionBox["1", "2"], 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "3"}], 
          RowBox[{"(", 
           RowBox[{"t", "-", 
            RowBox[{"1", "/", "2"}]}], ")"}]}]], 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], "t"}], "-", 
          FractionBox["1", "4"]}], "]"}]}], ")"}]}]}], ")"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.76874489517702*^9, 3.7687450393564377`*^9}, {
  3.768745090485084*^9, 3.7687451019866953`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.768745040807653*^9, 3.768745104318034*^9, 
  3.770645144579934*^9}]
}, Open  ]],

Cell[TextData[{
 "Above: By comparison of plots in section 6.3 I decided that ",
 StyleBox["HeavisideTheta", "Input"],
 " is equivalent to ",
 StyleBox["UnitStep", "Input"],
 ", the function the text prefers to use. Granted that equivalence, the PZQ \
above confirms that the green cell is equivalent to the text answer."
}], "Text",
 CellChangeTimes->{{3.675345916875436*^9, 3.675345980999969*^9}, {
  3.6753465505253763`*^9, 3.675346559445072*^9}, {3.7687451809131813`*^9, 
  3.768745245500997*^9}, {3.768745345140524*^9, 3.768745345689848*^9}, {
  3.770645236840233*^9, 3.770645256101712*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"plot1", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{"e7", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Yellow", ",", 
        RowBox[{"Thickness", "[", "0.002", "]"}]}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "250"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plot2", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "t"}]], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "3"}], " ", "t"}]], " ", 
       RowBox[{"Sin", "[", 
        FractionBox["t", "2"], "]"}]}], "+", 
      RowBox[{
       FractionBox["1", "2"], 
       RowBox[{"UnitStep", "[", 
        RowBox[{"t", "-", 
         FractionBox["1", "2"]}], "]"}], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "3"}], 
         RowBox[{"(", 
          RowBox[{"t", "-", 
           FractionBox["1", "2"]}], ")"}]}]], 
       RowBox[{"Sin", "[", 
        RowBox[{
         FractionBox["t", "2"], "-", 
         FractionBox["1", "4"]}], "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Thickness", "[", "0.008", "]"}]}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "250"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.675346043663835*^9, 3.675346213312999*^9}, {
  3.675346251672743*^9, 3.6753462601194344`*^9}, {3.675346294327574*^9, 
  3.6753463262215147`*^9}, {3.675346361245943*^9, 3.675346422370275*^9}, {
  3.675346456241272*^9, 3.6753464655286283`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"plot2", ",", "plot1"}], "]"}]], "Input",
 CellChangeTimes->{{3.6753462683482656`*^9, 3.675346275254529*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {RGBColor[1, 0, 0], Thickness[0.008], Opacity[1.], 
      LineBox[CompressedData["
1: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
       "]], 
      LineBox[CompressedData["
1:eJwVjH1Qy3EAh5MTha4SoryUHUdW9HZX1Mf75aZoKi+9iA7nklLG7XCOGd01
0q1TsmKmoqKUd6tWktdQa5qk729rW1tNX6KXiyR/PPf889zjuieJu9fSwsLC
Y4z/nlLtbtEawiD2Gdt7N6cbgUc3jzwfZpCSE9XylzFBclMkWyDRQOueoHvE
NyE2wqfRmqPF9rUbVEutTHig2iuuHtCiajg9sCHTCP935ZaGy51QRU7SOS8w
Yv76ff3idTqcSKSqnbe74Ovjm3nfoEP0xDsvBH5dIH0XXsuEeuwu/uXh+8IA
s3eYcJaXAX2rpwUrNxqwsIfdPU5pgHK05uq1T3rUs3jNyae78LpiaerQDj0y
WlTxXJYRv79EltiOfelWRaZlvRGJ2J8+k6dDRcT0tf6HTUgprJSm/e6ErFGQ
p3XoxltRWyM7vRODL6OPO9R1o+G85Zx3Dp1gMmv67Q71IIPVpF+Ur8VA04pZ
Z2zN0CXYl3z20iI5y03Bl5sxWGtfAYUGMxvd7HSx3zAuKtt1JFKDrarSPy5/
v2FnXsn5kz8Y9O2SHmwv7oU6zcs7XMigJq5MaLuJwqxwr93oxuDph4OcjlCK
4CNlj8TzGTwMWmJ/N4xiVXCo8utcBqUuBZKQbRTSa0Z+ijODXHVupWgPhTyp
42yeIwPelnMaGz5FQK1f1rAVA/dVMYETCymOVUdHSlsJFpbNHt96i8Ix4EZW
UAuB21z1q8ISCr+VDXPaPxI4/eGGb7hHUbekys7pDYHV4+AEoZziSamZL5YT
aDx9roxXUvBSE2NypATt+T9ilSqKK4eaOQH5BOqpZSyZmkKcHCdszyV437O4
fE0HhTLUus01i0BeNO/laRNFkcDapvwcweMZX0VhZgrn78u54QKCSmEu15VS
TNhcqB86RVAcP71D8YuiSi/oXcMnKGhull0aHOsz+uONPILrqy8diBumsLet
Z11MIZCUh3guG6HwF/1c5pNEkD1vcv/oKAWbnZbWlkDwD7VMh2k=
       
       "]]}, {}}, {{}, {}, {}}}, {{{}, {}, 
     {RGBColor[1, 1, 0], Thickness[0.002], Opacity[1.], 
      LineBox[CompressedData["
1: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
       "]], 
      LineBox[CompressedData["
1:eJwVjH0w03EAh1FHenGIUipvu7poKW93lD6hxImy0JuknLpOIS91u+q6WsOd
FW6ul4XSSoUiem8xhV6OilmW8P1tttmYvqWkU5L+eO7557nHaW8KJ9HEyMho
+ST/PbPOzagznEHcM7bnnrAB+B/ZNP5yjEHaxZ0dfxk9iq4LxC5FSqjcktSP
uHrERXu1moepsC0oWL7MVI8H8kRh3U8V6sZy/ZsLdPBtqTbRnu+DPGaa2t5F
B8f1+0aE69Q4fojKd9zuh7eXd8F9rRqxZneaeD79IMNn34j5Guwp/7Hcu0kL
g2ckf56HFsMBs0NkoVosHmQPGMu06Jiov3zlowaNrMz21FP9eFuzLP3Xdg3y
OuQJHJYOvz/HVFhMfukWaYFJow7J2J87N1ONmmjbIN/DeqSV1Zbm/O6DuJVX
rLIeQIugq5Wd24fRV7HHrF8MoDnbZGGLdR+YgvoRy+RB5LHaNEtKVPjZtmre
aQsD1ElWFZ88VEgtdJZyJQaMNljVQKrE3FZnS3XcEIx3XnAaj1Fii7zyz4K/
Q9hRXJF94huD4d2lB7vLv0CR4+EZxWdQH1/Ft9hIYZC6NYQ6M3j6/mBYbwTF
hoyqR0JHBg/XuFrdjaRASISsZxGDygU3isK3Uly9ouOm2TMQKUS1gr0UkpTe
M8U2DDI3Zymncyn8GnwKx0wZuK3d5W9WRnG0LjamtJNgcdX8KZ23KGz8rhWu
6SBwXqR4XVZB4bO6eWH3BwK7P5yo4HsUL1yfW9q9JTB9HJLEl1A8qTRwhRIC
pbvXpSkyioz0Q7sulhJ0l3yLk8kpRMntYX4lBIpZVSyxgkKYGs/vFhG8G1xa
HdhLIYsw73IqJJDcdHh1Sk9xi2c+vTqL4PGcHkGkgcL+60pOFI+gli/iOFGK
qZvKNL9OEpQn2PZKf1A81/C+BHIJbrS3i/NHJ/u8kQRdJsHVgPwD8WMUlhaN
rHNpBEXV4e4rxil8Bd9XeKUQXHCYMTIxQcFm5+R0JRH8A7xEh2o=
       
       "]]}, {}}, {{}, {}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.46},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->250,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0., 0.9999999795918367}, {0.4909578641242714, 
   1.054263504222429}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.675346276747285*^9, 3.6753463313876123`*^9, 3.675346380345521*^9, {
   3.675346412060272*^9, 3.6753464298650627`*^9}, 3.6753464699238*^9, 
   3.6753565143976107`*^9, 3.7706457679648867`*^9}]
}, Open  ]],

Cell["\<\
Note the interesting little gap which seems to exist in the combined plot \
above.\
\>", "Text",
 CellChangeTimes->{{3.768745536724564*^9, 3.768745554066687*^9}, {
  3.770646211235498*^9, 3.7706462257051563`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"plot3", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{"e7", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0.45", ",", "0.55"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Green", ",", 
        RowBox[{"Thickness", "[", "0.003", "]"}]}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "250"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.770645617691971*^9, 3.7706456335372953`*^9}, {
   3.770645707447426*^9, 3.770645788722843*^9}, {3.770645824088943*^9, 
   3.7706458278470917`*^9}, 3.770645999773965*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"plot5", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "t"}]], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "3"}], " ", "t"}]], " ", 
       RowBox[{"Sin", "[", 
        FractionBox["t", "2"], "]"}]}], "+", 
      RowBox[{
       FractionBox["1", "2"], 
       RowBox[{"UnitStep", "[", 
        RowBox[{"t", "-", 
         FractionBox["1", "2"]}], "]"}], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "3"}], 
         RowBox[{"(", 
          RowBox[{"t", "-", 
           FractionBox["1", "2"]}], ")"}]}]], 
       RowBox[{"Sin", "[", 
        RowBox[{
         FractionBox["t", "2"], "-", 
         FractionBox["1", "4"]}], "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0.45", ",", "0.55"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "250"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.77064564644247*^9, 3.770645646880622*^9}, {
   3.770645695056335*^9, 3.770645696246381*^9}, 3.770645956555484*^9, 
   3.7706460043674173`*^9}],

Cell["\<\
In zoomed view, there is a slight dogleg bend, but no gap. WolframAlpha rules \
that e7 is continuous on \[DoubleStruckCapitalR], so I don\[CloseCurlyQuote]t \
know what the problem is with plotting the superposition.\
\>", "Text",
 CellChangeTimes->{{3.770646085073455*^9, 3.770646183915205*^9}, {
  3.7706462675596*^9, 3.770646268830698*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{"plot3", ",", "plot5", ",", 
    RowBox[{"Show", "[", 
     RowBox[{"plot5", ",", "plot3"}], "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.770645665225367*^9, 3.770645669046707*^9}, {
  3.7706457938904457`*^9, 3.770645796800552*^9}, {3.770645835496262*^9, 
  3.770645868244524*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 1, 0], 
        Thickness[0.003]], 
       LineBox[CompressedData["
1:eJxtx31MzHEAx/ESJ1PUjDw0dNWZYeWpp1s+SlrTstaWLKSH5bHUjFu662GZ
eWol5fJHI6foiatWp7QQdoU6DyVPv999q0P5fnuiooh8/e+P9957OUQnhMRO
MzMzc+X9u0r/29DaKsBLYrpbaWCIOB59NKhNQJhQcEnJ7ePUPN/And0uS/Tn
lmRc2P3cICDKt9xJaGO44O1IX74QoO9XnJ/JXVwTMONNh4DGtmXBEc8YDJpc
ebcgwD+Z1s5uYXBIW1ky1i/ANmx8NLaJ4ebS6dPa54pQyO7XTlQzWMyy+xjp
KkK6aXJjWjGDyZ4EBgaLiIiUPdp6maHIbscGelTEZ4ljJj3LIN8zo9gzV8TQ
h9U2GSqG6rMxam+diNOR2pwf8Qy3iML6ylsR2arRuNt7GVLTH1ppx0Wce/2O
7QxhcLVszDy2xIjQMTd59xaGuvdDeVRuRGvBtpI9bgyPO99IG3cZoZp4EGO/
kqGq/shav1QjdAs72+sWMxzr9W5RXjHiquTUsm3WDHaTDWR/kxHnujZY1v+h
2OQ1pKo0GdEz0pNzaJhC/ihcU2pB4Od8R2Nroli0/nhAmIwgc/BlsLqDom2g
WVHrT/D6UFWXTTNFVPYT55aDBHoorA/WUSSHp4e7ZxJEvSo7M72M4kBigl1Y
BcHyp8EJ6gIK93jr0FXPCaR9DXMkWRRCjWlx5RDB3Ced0XHpFIU9toUuwwSe
9Ret3LljbTY7a7nLvvjrzLkHDxe43P5K4OFweVZ+GoW5Y6hfxQhB10mjtimV
Qpajjy/5QZAsTv1ckEJB741+WzFO0BfpW9StotD2S5NucncrU4IquD0C0jJu
TBD4ZolXfbgDp9zzi34RrGvc6henpLBZs8/eaZIg6VLQgBt3R3jetevcna7b
1ebcEbrhcs1vAo3es0+dTCH9uHSt9A/B4DOnnCjuXtsg3TXueWWWXqu5K6CU
O0wRZOz71PP9BEVifOmDQu5yScP5pv/4LxxgnQ4=
        "]], 
       LineBox[CompressedData["
1:eJwV0X9Q03UYB3BAkeFBTcC8yU6LJmTgrvOMEd35PpRERfIkWNdmKBMQp8Kl
TH4NCgwUkhwCwYSGv9pNzmOoRchA3PCQQ0HsoGzG+nwEuj7fZRMqtOi4Pv3x
uedefzzP83me5xVNbnKmj5eXVwx//0f9VPn0Ti+Co+HS77WFAuKCrmrvc2fP
VPq+zD10OFA34k1gkISqqwsETMgGqu4tIsiJ3UrT8gX41CmuD/oRZE37q/x0
Aq75jboCRQSl2qorrjwBGn320ve4K1eHLXzD7cg0pk9wn1W2mjK4y2PmX5z1
J1B9NTRmPypgkevmodAAgncjZpfrjwhYvHZLeI6YIKXd4/bkCljSl2IMlhD8
vecfNqYVoBN/3h+9lud/d/OF+HQBqeOr5F/HEoQ0jiseKgU8k1c/+jmRgExc
OnB6B6/Xvmx4Uk3gyNtsc28SUHbu6ULcYYI+xN7Wxgg40OXOKyghuHhu2G6Q
CwjOtK/7sIagdV/RkQmZgHUVv4e3mAhu07Ab21fyeYcUGdfbCUanTREasQDL
8YdUdovvr/dXbZOvAH9Nw8WcUYK7CstnRfMMUeNRlixC8Ej35zsVMwx9ttAn
XTMEyc8OTl35haH3TvixSW+KoME21fGfGCITqpAdTFFsdYXqHjCo1QOJzTIK
86uigtMDDHP1q1vMGygsZ8Zq1T0MPptGowK2UCzN8ETFXWUoDPnSe7uSot5R
7+s0M1wrjpdEZ1GId1sLTS28nnLzR/p8ihU9+4eKahlylWmBzScoVKUbZwNO
MJyk1X6T3C+1m5NclQwXDn3rHXmS92/Yb7Fyj5WL57q5L/T/oU7mjrU6XM4q
irZVCltjBcNiUUTHylMUa37TqcI+ZTDe8CSfNVDsaN0gVZTx/8RLkx5zR9eN
aETc9+5vTXi9luLf5w7Lj58wLEyff7ubG7ts6/XcGUEpMucZijc63RvtHzPI
D3b9JWmg6Nj9fkxiKUPC3JQnnTvrsSlPyr23bJlwmTusM67jSQlDXaPW9dYX
FK2lxjUG7uf90jsfNFIkhdSJxvUMQTu32c9zD1d3wswd6dTZGLe8981j+dxp
T0eshU38HqcSqIQ7v3j+sp37h3jncncxg2HJa5f8jRRznsFtPdxttSmmXdw1
zcElNdz90rImI3dqarc1jfs/qPnNyg==
        "]]}, {}}, {{}, {}, {}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.46, 0.794}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 250, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0.45000000204081636`, 0.5499999979591838}, {
      0.7963097984490256, 0.8689807558186609}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],
   GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[1, 0, 0], 
        Thickness[0.01]], 
       LineBox[CompressedData["
1:eJxtx31MzHEAx/ESJ1PUjDw0dNWZYeWpp1s+SlrTstaWLKSH5bHUjFu662GZ
eWol5fJHI6foiatWp7QQdoU6DyVPv999q0P5fnuiooh8/e+P9957OUQnhMRO
MzMzc+X9u0r/29DaKsBLYrpbaWCIOB59NKhNQJhQcEnJ7ePUPN/And0uS/Tn
lmRc2P3cICDKt9xJaGO44O1IX74QoO9XnJ/JXVwTMONNh4DGtmXBEc8YDJpc
ebcgwD+Z1s5uYXBIW1ky1i/ANmx8NLaJ4ebS6dPa54pQyO7XTlQzWMyy+xjp
KkK6aXJjWjGDyZ4EBgaLiIiUPdp6maHIbscGelTEZ4ljJj3LIN8zo9gzV8TQ
h9U2GSqG6rMxam+diNOR2pwf8Qy3iML6ylsR2arRuNt7GVLTH1ppx0Wce/2O
7QxhcLVszDy2xIjQMTd59xaGuvdDeVRuRGvBtpI9bgyPO99IG3cZoZp4EGO/
kqGq/shav1QjdAs72+sWMxzr9W5RXjHiquTUsm3WDHaTDWR/kxHnujZY1v+h
2OQ1pKo0GdEz0pNzaJhC/ihcU2pB4Od8R2Nroli0/nhAmIwgc/BlsLqDom2g
WVHrT/D6UFWXTTNFVPYT55aDBHoorA/WUSSHp4e7ZxJEvSo7M72M4kBigl1Y
BcHyp8EJ6gIK93jr0FXPCaR9DXMkWRRCjWlx5RDB3Ced0XHpFIU9toUuwwSe
9Ret3LljbTY7a7nLvvjrzLkHDxe43P5K4OFweVZ+GoW5Y6hfxQhB10mjtimV
Qpajjy/5QZAsTv1ckEJB741+WzFO0BfpW9StotD2S5NucncrU4IquD0C0jJu
TBD4ZolXfbgDp9zzi34RrGvc6henpLBZs8/eaZIg6VLQgBt3R3jetevcna7b
1ebcEbrhcs1vAo3es0+dTCH9uHSt9A/B4DOnnCjuXtsg3TXueWWWXqu5K6CU
O0wRZOz71PP9BEVifOmDQu5yScP5pv/4LxxgnQ4=
        "]], 
       LineBox[CompressedData["
1:eJwV0X9Q03UYB3BAkeFBTYZ1k50WTcjAXdcZI7rzfSiJiuSJsK7NKBYgToVL
mfwaGBgoJDkEggkNf+4m5zHUImQgbXjIkSB2UDZjfT4CXZ/vsgkVWlxcn/54
7rnXH89zz48XtXkpWX4+Pj6xPP7PhumKmZ0+BIcjZN/rigTEh1zV3eXOma3y
f4F7+GCwftSXwCgN09QUCpiUD1bfWUKQG7eVphcI8KtXXh8KIMiaCVQH6AVc
CxhzB4sIjuqqr7jzBWgNOct3c1etCV/8ituZZcqY5D6jajNnclfELjw7F0ig
vjQ87jgsYIn75oGwIIK3I+dWGg4JWLpuS0SumGB3h9fjzROwrD/VJJES/P3+
P2xcJ0Av/mwgZh2v/+7mMwkZAtImViu+jCMIbZpQ3lcJeKKoefBzEgGZvLjv
1A7er2PFyJSGwJm/2e7ZJKD87OPF+IME/Yi7pYsVsK/bk19YSnDh7IjDqBAg
yXKsf6+WoO3D4kOTcgHrK3+PaDUT3KLhN7av4vsOKzOvdxDcmzFHasUCrMfu
U/k3/H59v+qa/QUEahsv5I4RfKu0flq8wBA9EW3NJgQP9H++VTnL0G8Pe9Q9
S5DyZP/0lV8Y+m5HHJnypZAMtauP/cQQlViNHAlFic0dpr/HoNEMJrXIKSwv
iQpPDTLMN6xptWygsJ4er9P0MvhtGosO2kKxPNMbHX+VoSj0C9/tKooGZ4O/
y8JwrSRBGpNNId5jKzK38n6qzR8ZCiie7907XFzHkKdKD245TqEu2zgXdJzh
BK0JmOJ+rsOS7K5iOH/ga9+oExSXGvdabdzjFeL5Hu7zA39oUrjjbE63q5qi
fbXS3lTJsFQU2bnqJMXa3/Tq8E8YTDe8KWeMFDvaNsiU5XyeBFnyQ+6Y+lGt
iPvO3a2Jr9RR/PvUaf3xY4bFmXNv9nBjl/01A3dmSKrcdZri1S7PRsdRBsX+
7r+kjRSde96JTSpjSJyf9mZwZz8058u4PyhfIVzmDu+K73xUylDfpHO/8TlF
W5lprZH76YDs9rtNFMmh9aIJA0PIzm2Oc9wjNV2wcEe59HbGreh7/UgBd/rj
UVtRM//HyUQq5S4oWbjs4P4hwbXSU8JgXPbyxUATxbx3aFsvd3tdqnkXd22L
pLSWe0BW3mziTkvrsaVz/wep0c3L
        "]]}, {}}, {{}, {}, {}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.46, 0.794}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 250, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0.45000000204081636`, 0.5499999979591838}, {
      0.7963097984490256, 0.8689807558186609}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],
   GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1:eJxtx31MzHEAx/ESJ1PUjDw0dNWZYeWpp1s+SlrTstaWLKSH5bHUjFu662GZ
eWol5fJHI6foiatWp7QQdoU6DyVPv999q0P5fnuiooh8/e+P9957OUQnhMRO
MzMzc+X9u0r/29DaKsBLYrpbaWCIOB59NKhNQJhQcEnJ7ePUPN/And0uS/Tn
lmRc2P3cICDKt9xJaGO44O1IX74QoO9XnJ/JXVwTMONNh4DGtmXBEc8YDJpc
ebcgwD+Z1s5uYXBIW1ky1i/ANmx8NLaJ4ebS6dPa54pQyO7XTlQzWMyy+xjp
KkK6aXJjWjGDyZ4EBgaLiIiUPdp6maHIbscGelTEZ4ljJj3LIN8zo9gzV8TQ
h9U2GSqG6rMxam+diNOR2pwf8Qy3iML6ylsR2arRuNt7GVLTH1ppx0Wce/2O
7QxhcLVszDy2xIjQMTd59xaGuvdDeVRuRGvBtpI9bgyPO99IG3cZoZp4EGO/
kqGq/shav1QjdAs72+sWMxzr9W5RXjHiquTUsm3WDHaTDWR/kxHnujZY1v+h
2OQ1pKo0GdEz0pNzaJhC/ihcU2pB4Od8R2Nroli0/nhAmIwgc/BlsLqDom2g
WVHrT/D6UFWXTTNFVPYT55aDBHoorA/WUSSHp4e7ZxJEvSo7M72M4kBigl1Y
BcHyp8EJ6gIK93jr0FXPCaR9DXMkWRRCjWlx5RDB3Ced0XHpFIU9toUuwwSe
9Ret3LljbTY7a7nLvvjrzLkHDxe43P5K4OFweVZ+GoW5Y6hfxQhB10mjtimV
Qpajjy/5QZAsTv1ckEJB741+WzFO0BfpW9StotD2S5NucncrU4IquD0C0jJu
TBD4ZolXfbgDp9zzi34RrGvc6henpLBZs8/eaZIg6VLQgBt3R3jetevcna7b
1ebcEbrhcs1vAo3es0+dTCH9uHSt9A/B4DOnnCjuXtsg3TXueWWWXqu5K6CU
O0wRZOz71PP9BEVifOmDQu5yScP5pv/4LxxgnQ4=
         "]], 
        LineBox[CompressedData["
1:eJwV0X9Q03UYB3BAkeFBTYZ1k50WTcjAXdcZI7rzfSiJiuSJsK7NKBYgToVL
mfwaGBgoJDkEggkNf+4m5zHUImQgbXjIkSB2UDZjfT4CXZ/vsgkVWlxcn/54
7rnXH89zz48XtXkpWX4+Pj6xPP7PhumKmZ0+BIcjZN/rigTEh1zV3eXOma3y
f4F7+GCwftSXwCgN09QUCpiUD1bfWUKQG7eVphcI8KtXXh8KIMiaCVQH6AVc
CxhzB4sIjuqqr7jzBWgNOct3c1etCV/8ituZZcqY5D6jajNnclfELjw7F0ig
vjQ87jgsYIn75oGwIIK3I+dWGg4JWLpuS0SumGB3h9fjzROwrD/VJJES/P3+
P2xcJ0Av/mwgZh2v/+7mMwkZAtImViu+jCMIbZpQ3lcJeKKoefBzEgGZvLjv
1A7er2PFyJSGwJm/2e7ZJKD87OPF+IME/Yi7pYsVsK/bk19YSnDh7IjDqBAg
yXKsf6+WoO3D4kOTcgHrK3+PaDUT3KLhN7av4vsOKzOvdxDcmzFHasUCrMfu
U/k3/H59v+qa/QUEahsv5I4RfKu0flq8wBA9EW3NJgQP9H++VTnL0G8Pe9Q9
S5DyZP/0lV8Y+m5HHJnypZAMtauP/cQQlViNHAlFic0dpr/HoNEMJrXIKSwv
iQpPDTLMN6xptWygsJ4er9P0MvhtGosO2kKxPNMbHX+VoSj0C9/tKooGZ4O/
y8JwrSRBGpNNId5jKzK38n6qzR8ZCiie7907XFzHkKdKD245TqEu2zgXdJzh
BK0JmOJ+rsOS7K5iOH/ga9+oExSXGvdabdzjFeL5Hu7zA39oUrjjbE63q5qi
fbXS3lTJsFQU2bnqJMXa3/Tq8E8YTDe8KWeMFDvaNsiU5XyeBFnyQ+6Y+lGt
iPvO3a2Jr9RR/PvUaf3xY4bFmXNv9nBjl/01A3dmSKrcdZri1S7PRsdRBsX+
7r+kjRSde96JTSpjSJyf9mZwZz8058u4PyhfIVzmDu+K73xUylDfpHO/8TlF
W5lprZH76YDs9rtNFMmh9aIJA0PIzm2Oc9wjNV2wcEe59HbGreh7/UgBd/rj
UVtRM//HyUQq5S4oWbjs4P4hwbXSU8JgXPbyxUATxbx3aFsvd3tdqnkXd22L
pLSWe0BW3mziTkvrsaVz/wep0c3L
         "]]}, {}}, {{}, {}, {}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Thickness[0.003]], 
        LineBox[CompressedData["
1:eJxtx31MzHEAx/ESJ1PUjDw0dNWZYeWpp1s+SlrTstaWLKSH5bHUjFu662GZ
eWol5fJHI6foiatWp7QQdoU6DyVPv999q0P5fnuiooh8/e+P9957OUQnhMRO
MzMzc+X9u0r/29DaKsBLYrpbaWCIOB59NKhNQJhQcEnJ7ePUPN/And0uS/Tn
lmRc2P3cICDKt9xJaGO44O1IX74QoO9XnJ/JXVwTMONNh4DGtmXBEc8YDJpc
ebcgwD+Z1s5uYXBIW1ky1i/ANmx8NLaJ4ebS6dPa54pQyO7XTlQzWMyy+xjp
KkK6aXJjWjGDyZ4EBgaLiIiUPdp6maHIbscGelTEZ4ljJj3LIN8zo9gzV8TQ
h9U2GSqG6rMxam+diNOR2pwf8Qy3iML6ylsR2arRuNt7GVLTH1ppx0Wce/2O
7QxhcLVszDy2xIjQMTd59xaGuvdDeVRuRGvBtpI9bgyPO99IG3cZoZp4EGO/
kqGq/shav1QjdAs72+sWMxzr9W5RXjHiquTUsm3WDHaTDWR/kxHnujZY1v+h
2OQ1pKo0GdEz0pNzaJhC/ihcU2pB4Od8R2Nroli0/nhAmIwgc/BlsLqDom2g
WVHrT/D6UFWXTTNFVPYT55aDBHoorA/WUSSHp4e7ZxJEvSo7M72M4kBigl1Y
BcHyp8EJ6gIK93jr0FXPCaR9DXMkWRRCjWlx5RDB3Ced0XHpFIU9toUuwwSe
9Ret3LljbTY7a7nLvvjrzLkHDxe43P5K4OFweVZ+GoW5Y6hfxQhB10mjtimV
Qpajjy/5QZAsTv1ckEJB741+WzFO0BfpW9StotD2S5NucncrU4IquD0C0jJu
TBD4ZolXfbgDp9zzi34RrGvc6henpLBZs8/eaZIg6VLQgBt3R3jetevcna7b
1ebcEbrhcs1vAo3es0+dTCH9uHSt9A/B4DOnnCjuXtsg3TXueWWWXqu5K6CU
O0wRZOz71PP9BEVifOmDQu5yScP5pv/4LxxgnQ4=
         "]], 
        LineBox[CompressedData["
1:eJwV0X9Q03UYB3BAkeFBTcC8yU6LJmTgrvOMEd35PpRERfIkWNdmKBMQp8Kl
TH4NCgwUkhwCwYSGv9pNzmOoRchA3PCQQ0HsoGzG+nwEuj7fZRMqtOi4Pv3x
uedefzzP83me5xVNbnKmj5eXVwx//0f9VPn0Ti+Co+HS77WFAuKCrmrvc2fP
VPq+zD10OFA34k1gkISqqwsETMgGqu4tIsiJ3UrT8gX41CmuD/oRZE37q/x0
Aq75jboCRQSl2qorrjwBGn320ve4K1eHLXzD7cg0pk9wn1W2mjK4y2PmX5z1
J1B9NTRmPypgkevmodAAgncjZpfrjwhYvHZLeI6YIKXd4/bkCljSl2IMlhD8
vecfNqYVoBN/3h+9lud/d/OF+HQBqeOr5F/HEoQ0jiseKgU8k1c/+jmRgExc
OnB6B6/Xvmx4Uk3gyNtsc28SUHbu6ULcYYI+xN7Wxgg40OXOKyghuHhu2G6Q
CwjOtK/7sIagdV/RkQmZgHUVv4e3mAhu07Ab21fyeYcUGdfbCUanTREasQDL
8YdUdovvr/dXbZOvAH9Nw8WcUYK7CstnRfMMUeNRlixC8Ej35zsVMwx9ttAn
XTMEyc8OTl35haH3TvixSW+KoME21fGfGCITqpAdTFFsdYXqHjCo1QOJzTIK
86uigtMDDHP1q1vMGygsZ8Zq1T0MPptGowK2UCzN8ETFXWUoDPnSe7uSot5R
7+s0M1wrjpdEZ1GId1sLTS28nnLzR/p8ihU9+4eKahlylWmBzScoVKUbZwNO
MJyk1X6T3C+1m5NclQwXDn3rHXmS92/Yb7Fyj5WL57q5L/T/oU7mjrU6XM4q
irZVCltjBcNiUUTHylMUa37TqcI+ZTDe8CSfNVDsaN0gVZTx/8RLkx5zR9eN
aETc9+5vTXi9luLf5w7Lj58wLEyff7ubG7ts6/XcGUEpMucZijc63RvtHzPI
D3b9JWmg6Nj9fkxiKUPC3JQnnTvrsSlPyr23bJlwmTusM67jSQlDXaPW9dYX
FK2lxjUG7uf90jsfNFIkhdSJxvUMQTu32c9zD1d3wswd6dTZGLe8981j+dxp
T0eshU38HqcSqIQ7v3j+sp37h3jncncxg2HJa5f8jRRznsFtPdxttSmmXdw1
zcElNdz90rImI3dqarc1jfs/qPnNyg==
         "]]}, {}}, {{}, {}, {}}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.46, 0.794}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 250, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0.45000000204081636`, 0.5499999979591838}, {
      0.7963097984490256, 0.8689807558186609}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.770645869282745*^9, 3.770645966663342*^9, 
  3.77064600929298*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"9.", "  ", 
     RowBox[{"y", "''"}]}], "+", 
    RowBox[{"4", 
     RowBox[{"y", "'"}]}], "+", 
    RowBox[{"5", "y"}]}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"u", 
        RowBox[{"(", 
         RowBox[{"t", "-", "10"}], ")"}]}]}], ")"}], 
     SuperscriptBox["\[ExponentialE]", "t"]}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", "10"], "\[Delta]", 
     RowBox[{"(", 
      RowBox[{"t", "-", "10"}], ")"}]}]}]}], ",", "  ", 
  RowBox[{
   RowBox[{"y", "[", "0", "]"}], "=", "0"}], ",", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "'"}], "[", "0", "]"}], "=", "1"}]}]], "Text",
 CellChangeTimes->{{3.768745368485362*^9, 3.768745471015585*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.675347106728409*^9, 3.675347108715371*^9}, 
   3.7687438364899673`*^9, {3.772904303360235*^9, 3.772904303910715*^9}}],

Cell["\<\
I try again with the method of the last two problems, but this one is harder.\
\
\>", "Text",
 CellChangeTimes->{{3.770654486935378*^9, 3.770654503141217*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e1", "=", 
  RowBox[{"LaplaceTransform", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"y", "''"}], "[", "t", "]"}], "+", " ", 
      RowBox[{"4", " ", 
       RowBox[{
        RowBox[{"y", "'"}], "[", "t", "]"}]}], "+", " ", 
      RowBox[{"5", " ", 
       RowBox[{"y", "[", "t", "]"}]}]}], "\[Equal]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"UnitStep", "[", 
          RowBox[{"t", "-", "10"}], "]"}]}], ")"}], 
       SuperscriptBox["\[ExponentialE]", "t"]}], "-", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", "10"], " ", 
       RowBox[{"DiracDelta", "[", 
        RowBox[{"t", "-", "10"}], "]"}]}]}]}], ",", "t", ",", "s"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.675347113879554*^9, 3.675347215135132*^9}, {
  3.675356538310986*^9, 3.6753565415408497`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"5", " ", 
    RowBox[{"LaplaceTransform", "[", 
     RowBox[{
      RowBox[{"y", "[", "t", "]"}], ",", "t", ",", "s"}], "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["s", "2"], " ", 
    RowBox[{"LaplaceTransform", "[", 
     RowBox[{
      RowBox[{"y", "[", "t", "]"}], ",", "t", ",", "s"}], "]"}]}], "+", 
   RowBox[{"4", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"s", " ", 
       RowBox[{"LaplaceTransform", "[", 
        RowBox[{
         RowBox[{"y", "[", "t", "]"}], ",", "t", ",", "s"}], "]"}]}], "-", 
      RowBox[{"y", "[", "0", "]"}]}], ")"}]}], "-", 
   RowBox[{"s", " ", 
    RowBox[{"y", "[", "0", "]"}]}], "-", 
   RowBox[{
    SuperscriptBox["y", "\[Prime]",
     MultilineFunction->None], "[", "0", "]"}]}], "\[Equal]", 
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"10", "-", 
      RowBox[{"10", " ", "s"}]}]]}], "+", 
   FractionBox["1", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "s"}]], "-", 
   FractionBox[
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "10"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "s"}], ")"}]}]], 
    RowBox[{
     RowBox[{"-", "1"}], "+", "s"}]]}]}]], "Output",
 CellChangeTimes->{3.675347216494844*^9, 3.675348524852866*^9, 
  3.675356543735406*^9, 3.76874628305617*^9, 3.7706416265257597`*^9, 
  3.770653965621134*^9, 3.770655293514723*^9}]
}, Open  ]],

Cell["\<\
Above: The Laplace transform is similar to the one in the last problem, as a \
term containing s has been placed in the denominator of the rhs. I use the \
same ploy as in the past to isolate the expression I need for the reverse \
transform.\
\>", "Text",
 CellChangeTimes->{{3.6753493077057543`*^9, 3.6753494420924473`*^9}, {
  3.7706545694813538`*^9, 3.77065459620774*^9}, {3.7706548544323606`*^9, 
  3.77065492902809*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e2", "=", 
  RowBox[{"e1", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"y", "[", "0", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"y", "'"}], "[", "0", "]"}], "\[Rule]", "1"}], ",", 
     RowBox[{
      RowBox[{"LaplaceTransform", "[", 
       RowBox[{
        RowBox[{"y", "[", "t", "]"}], ",", "t", ",", "s"}], "]"}], "\[Rule]", 
      "bigY"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.675347321896224*^9, 3.675347404176641*^9}, 
   3.67534848612759*^9, 3.675356557582107*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   RowBox[{"5", " ", "bigY"}], "+", 
   RowBox[{"4", " ", "bigY", " ", "s"}], "+", 
   RowBox[{"bigY", " ", 
    SuperscriptBox["s", "2"]}]}], "\[Equal]", 
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"10", "-", 
      RowBox[{"10", " ", "s"}]}]]}], "+", 
   FractionBox["1", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "s"}]], "-", 
   FractionBox[
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "10"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "s"}], ")"}]}]], 
    RowBox[{
     RowBox[{"-", "1"}], "+", "s"}]]}]}]], "Output",
 CellChangeTimes->{3.6753474056079597`*^9, 3.675348490388492*^9, 
  3.675348531781974*^9, 3.6753565600048847`*^9, 3.768746286581723*^9, 
  3.770641630857875*^9, 3.770653968837634*^9, 3.770655297575626*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e3", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{"e2", ",", "bigY"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.675347414964093*^9, 3.675347427007538*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"bigY", "\[Rule]", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "10"}], " ", "s"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["\[ExponentialE]", "10"]}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"10", " ", "s"}]]}], ")"}], " ", "s"}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "s"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"5", "+", 
        RowBox[{"4", " ", "s"}], "+", 
        SuperscriptBox["s", "2"]}], ")"}]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.67534853797892*^9, 3.6753565671598253`*^9, 
  3.7687462901451387`*^9, 3.770641634462077*^9, 3.770653971715008*^9, 
  3.770655300581235*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e4", "=", 
  RowBox[{"e3", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.675347432259704*^9, 3.675347438319406*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "10"}], " ", "s"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", "10"]}], "+", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"10", " ", "s"}]]}], ")"}], " ", "s"}], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "s"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"5", "+", 
     RowBox[{"4", " ", "s"}], "+", 
     SuperscriptBox["s", "2"]}], ")"}]}]]], "Output",
 CellChangeTimes->{
  3.6753474395837507`*^9, {3.675348498830669*^9, 3.675348507704484*^9}, 
   3.675348561403223*^9, 3.675356570460841*^9, 3.7687462936030827`*^9, 
   3.770641638223629*^9, 3.77065397562938*^9, 3.7706553035669603`*^9}]
}, Open  ]],

Cell["\<\
I try to get a reverse transfrom from the bigY object, in which all \
subexpressions are real.\
\>", "Text",
 CellChangeTimes->{{3.7706549533304453`*^9, 3.770654982696879*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e5", "=", 
  RowBox[{"InverseLaplaceTransform", "[", 
   RowBox[{"e4", ",", "s", ",", "t"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6753474447949867`*^9, 3.6753474557425222`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "20"], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "-", "\[ImaginaryI]"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"4", " ", "\[ImaginaryI]"}]}], ")"}], "+", "t"}], ")"}]}]], 
  " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "-", "\[ImaginaryI]"}], ")"}], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"10", " ", "\[ImaginaryI]"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "-", 
         RowBox[{"4", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"4", "+", 
          RowBox[{"3", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "t"}]]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"3", "+", "\[ImaginaryI]"}], ")"}], " ", "t"}]]}]}], 
      ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"7", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"30", "+", 
          RowBox[{"20", " ", "\[ImaginaryI]"}]}]]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"7", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"30", "+", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "t"}]}]]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"3", "+", "\[ImaginaryI]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"3", " ", "\[ImaginaryI]"}]}], ")"}], "+", "t"}], 
           ")"}]}]]}]}], ")"}], " ", 
     RowBox[{"HeavisideTheta", "[", 
      RowBox[{
       RowBox[{"-", "10"}], "+", "t"}], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.675347456746305*^9, 3.6753485109711523`*^9, 
  3.675348567825276*^9, 3.67535657515711*^9, 3.7687462970695963`*^9, 
  3.770641642139423*^9, 3.7706474687058067`*^9, 3.7706539790491743`*^9, 
  3.770655306863655*^9}]
}, Open  ]],

Cell["\<\
But in the result I see there are imaginaries, which, unlike in previous \
cases, do not disappear after using FullSimplify.\
\>", "Text",
 CellChangeTimes->{{3.770654998583865*^9, 3.770655069203636*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e17", "=", 
  RowBox[{"FullSimplify", "[", "e5", "]"}]}]], "Input",
 CellChangeTimes->{{3.7706470276359367`*^9, 3.770647036852837*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "20"], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "-", "\[ImaginaryI]"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"4", " ", "\[ImaginaryI]"}]}], ")"}], "+", "t"}], ")"}]}]], 
  " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "-", "\[ImaginaryI]"}], ")"}], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"10", " ", "\[ImaginaryI]"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "-", 
         RowBox[{"4", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"4", "+", 
          RowBox[{"3", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "t"}]]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"3", "+", "\[ImaginaryI]"}], ")"}], " ", "t"}]]}]}], 
      ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"7", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"30", "+", 
          RowBox[{"20", " ", "\[ImaginaryI]"}]}]]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"7", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"30", "+", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "t"}]}]]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"3", "+", "\[ImaginaryI]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"3", " ", "\[ImaginaryI]"}]}], ")"}], "+", "t"}], 
           ")"}]}]]}]}], ")"}], " ", 
     RowBox[{"HeavisideTheta", "[", 
      RowBox[{
       RowBox[{"-", "10"}], "+", "t"}], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.770647038028123*^9, 3.770647282819072*^9, 
  3.770647474956439*^9, 3.770653996209894*^9, 3.7706553109175243`*^9}]
}, Open  ]],

Cell["\<\
So I take a side step to get rid of the imaginaries. Maybe later I can judge \
whether this is a wise step.\
\>", "Text",
 CellChangeTimes->{{3.7706550833308372`*^9, 3.770655135015626*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"e6", "=", 
   RowBox[{"ComplexExpand", "[", 
    RowBox[{"Re", "[", "e5", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6753474641967573`*^9, 3.675347474445921*^9}, {
   3.675348662560638*^9, 3.675348761323791*^9}, {3.675348842043174*^9, 
   3.675348850960335*^9}, {3.6753490542507553`*^9, 3.67534906461686*^9}, 
   3.768746317035125*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e7", "=", 
  RowBox[{"FullSimplify", "[", "e6", "]"}]}]], "Input",
 CellChangeTimes->{{3.675349126584981*^9, 3.675349134559978*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "10"], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "2"}], " ", "t"}]], " ", 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"3", " ", "t"}]], "-", 
    RowBox[{"Cos", "[", "t", "]"}], "+", 
    RowBox[{"7", " ", 
     RowBox[{"Sin", "[", "t", "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"3", " ", "t"}]]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", "30"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"10", "-", "t"}], "]"}], "+", 
          RowBox[{"7", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"10", "-", "t"}], "]"}]}]}], ")"}]}]}], ")"}], " ", 
     RowBox[{"UnitStep", "[", 
      RowBox[{
       RowBox[{"-", "10"}], "+", "t"}], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.675349136933591*^9, 3.675356591931637*^9, 
  3.768746324204211*^9, 3.7706416501293097`*^9, 3.770647323299062*^9, 
  3.770647493490842*^9, 3.770654009144305*^9, 3.770655318947891*^9}]
}, Open  ]],

Cell[TextData[{
 "Time to bring in the text answer. ( In entering the text answer I changed \
0.1 to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", "10"], " "}], TraditionalForm]]],
 "(two occurrences).)"
}], "Text",
 CellChangeTimes->{{3.675349554280361*^9, 3.675349576791647*^9}, {
  3.675350375198361*^9, 3.675350393396241*^9}, {3.675351615373331*^9, 
  3.675351655906496*^9}, {3.675355126156983*^9, 3.675355129061007*^9}, {
  3.76874740462214*^9, 3.768747410516385*^9}, {3.770655174958858*^9, 
  3.770655202667809*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e8", "=", 
  RowBox[{
   RowBox[{
    FractionBox["1", "10"], 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", "t"], "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "2"}], " ", "t"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Cos", "[", "t", "]"}]}], "+", 
         RowBox[{"7", " ", 
          RowBox[{"Sin", "[", "t", "]"}]}]}], ")"}]}]}], ")"}]}], "+", 
   RowBox[{
    FractionBox["1", "10"], " ", 
    RowBox[{"UnitStep", "[", 
     RowBox[{"t", "-", "10"}], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "t"}]]}], "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "t"}], "+", "30"}]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"t", "-", "10"}], "]"}], "-", 
         RowBox[{"7", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"t", "-", "10"}], "]"}]}]}], ")"}]}]}], 
     ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.6753505181566553`*^9, 3.6753505245532913`*^9}, {
  3.675351414285193*^9, 3.675351418090971*^9}, {3.675351502138137*^9, 
  3.675351505847722*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "10"], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", "t"], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "t"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Cos", "[", "t", "]"}]}], "+", 
        RowBox[{"7", " ", 
         RowBox[{"Sin", "[", "t", "]"}]}]}], ")"}]}]}], ")"}]}], "+", 
  RowBox[{
   FractionBox["1", "10"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "t"}]]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"30", "-", 
        RowBox[{"2", " ", "t"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"10", "-", "t"}], "]"}], "+", 
        RowBox[{"7", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"10", "-", "t"}], "]"}]}]}], ")"}]}]}], ")"}], " ", 
   RowBox[{"UnitStep", "[", 
    RowBox[{
     RowBox[{"-", "10"}], "+", "t"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.675351523924301*^9, 3.675356601267218*^9, 
  3.7687463289881268`*^9, 3.770641653007123*^9, 3.7706466160869017`*^9, 
  3.770654012858551*^9, 3.7706553263747797`*^9}]
}, Open  ]],

Cell["\<\
I see that the text answer comes up with the correct result for one of the \
initial conditions. The Mathematica answer also gets past this hurdle.\
\>", "Text",
 CellChangeTimes->{{3.770655220786461*^9, 3.770655263975922*^9}, {
  3.7706553724896717`*^9, 3.770655389752733*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e8t", "=", 
  RowBox[{"e8", "/.", 
   RowBox[{"t", "\[Rule]", "0"}]}]}]], "Input",
 CellChangeTimes->{{3.770653939286722*^9, 3.770653956237865*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.770654016663559*^9, 3.770655336680194*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e7t", "=", 
  RowBox[{"e7", "/.", 
   RowBox[{"t", "\[Rule]", "0"}]}]}]], "Input",
 CellChangeTimes->{{3.770655350992605*^9, 3.7706553607784777`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.770655362261958*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"e7t10", "=", 
   RowBox[{"e7", "/.", 
    RowBox[{"t", "\[Rule]", "11"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.770656378876954*^9, 3.770656441170994*^9}}],

Cell[BoxData[
 RowBox[{"-", "1594.8109097096035`"}]], "Output",
 CellChangeTimes->{{3.7706563936501923`*^9, 3.7706564430210533`*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"plot1", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{"e7", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "5"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Yellow", ",", 
        RowBox[{"Thickness", "[", "0.002", "]"}]}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "250"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plot2", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{"e8", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "5"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Thickness", "[", "0.014", "]"}]}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "250"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plot3", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{"e17", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "5"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Thickness", "[", "0.006", "]"}]}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "250"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.67534962488015*^9, 3.675349850998856*^9}, {
  3.675351532305286*^9, 3.6753515324465*^9}, {3.768746345546287*^9, 
  3.768746358056081*^9}, {3.76874648599605*^9, 3.7687465182186527`*^9}, {
  3.768746568585483*^9, 3.768746593128088*^9}, {3.7706471681851807`*^9, 
  3.770647219141897*^9}, {3.77064750980663*^9, 3.770647510804796*^9}, {
  3.77065418344278*^9, 3.770654196999942*^9}}],

Cell["\<\
Plotting all three of the proposed solutions. On the selected interval they \
all track one other well.\
\>", "Text",
 CellChangeTimes->{{3.770655414158798*^9, 3.770655480803259*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"plot2", ",", "plot3", ",", "plot1"}], "]"}]], "Input",
 CellChangeTimes->{{3.675349866010182*^9, 3.675349872765503*^9}, {
  3.7706471821130342`*^9, 3.770647184574793*^9}, {3.770647364482924*^9, 
  3.770647367808898*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[1, 0, 0], Thickness[0.014], Opacity[1.], LineBox[CompressedData["
1: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
w853j2lYOqU5v7JC4OiT4bRiBg3/B7cZvdw=
      "]]}}, {{}, {}, 
    {RGBColor[0, 0, 1], Thickness[0.006], Opacity[1.], LineBox[CompressedData["
1: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
4BET232vHtGwak5teWODwIns8YwKOg3/B+5KvJY=
      "]]}}, {{}, {}, 
    {RGBColor[1, 1, 0], Thickness[0.002], Opacity[1.], LineBox[CompressedData["
1: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
t724R8eKGY0fy8sEjt4fyShj0PE/OkK9dA==
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->250,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0., 4.999999897959183}, {0., 14.841282633440153`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.675349874052397*^9, 3.675351537249658*^9, 3.675356608955127*^9, {
   3.768746339261471*^9, 3.768746365359666*^9}, {3.768746505973743*^9, 
   3.7687465219757433`*^9}, {3.7687465838158197`*^9, 3.768746596918685*^9}, 
   3.770641866155057*^9, {3.770647186366452*^9, 3.770647222721273*^9}, {
   3.7706473423200283`*^9, 3.770647368604177*^9}, 3.770647514905581*^9, 
   3.7706540311129627`*^9, {3.770654189573166*^9, 3.770654200796343*^9}, 
   3.770655400814344*^9}]
}, Open  ]],

Cell["\<\
I try subtractive tests but the text answer is not the same as the \
Mathematica answer. I move on to looking at some more plots.\
\>", "Text",
 CellChangeTimes->{{3.7706555307131443`*^9, 3.77065556967796*^9}, {
   3.770655957120408*^9, 3.7706559658225307`*^9}, 3.7706578194427023`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"plot3", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{"e17", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "15"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "13"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "50000"}], ",", "50000"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"0.4", ",", "0.5", ",", "1"}], "]"}], ",", 
        RowBox[{"Thickness", "[", "0.007", "]"}]}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plot4", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{"e8", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "15"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Thickness", "[", "0.014", "]"}]}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plot7", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{"e7", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "15"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"White", ",", 
        RowBox[{"Thickness", "[", "0.003", "]"}]}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.768746644088051*^9, 3.768746669373376*^9}, {
   3.768746712229896*^9, 3.7687467428270063`*^9}, 3.768747094245494*^9, 
   3.770641682415389*^9, 3.770641732215234*^9, {3.770641770243991*^9, 
   3.770641772723404*^9}, {3.770641938724051*^9, 3.77064201134234*^9}, 
   3.770647704552442*^9, {3.7706542965875187`*^9, 3.77065431011278*^9}, {
   3.7706543435210047`*^9, 3.770654416403986*^9}, {3.770655686567918*^9, 
   3.77065568683947*^9}, {3.770656475720669*^9, 3.77065650895957*^9}}],

Cell["\<\
Plotting a slightly longer interval. It seems I have three different \
functions. The one that has discarded imaginary elements seems to have, for \
some reason, a slightly smaller range. However, Wolfram Alpha judges it to be \
continuous on \[DoubleStruckCapitalR]. In contrast the text function has a \
jump discontinuity at t=10.\
\>", "Text",
 CellChangeTimes->{
  3.7706543226234417`*^9, {3.770654375278925*^9, 3.7706543886642838`*^9}, 
   3.7706555795639973`*^9, {3.770655624875814*^9, 3.770655654448889*^9}, {
   3.77065571726921*^9, 3.770655720197089*^9}, {3.770655834046014*^9, 
   3.7706558751958923`*^9}, {3.7706569763975267`*^9, 3.770657023339301*^9}, {
   3.770657107741843*^9, 3.770657127899375*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"plot4", ",", "plot3", ",", "plot7"}], "]"}]], "Input",
 CellChangeTimes->{{3.768746687454167*^9, 3.7687466928444977`*^9}, {
  3.7706417043051863`*^9, 3.7706417073421783`*^9}, {3.770641894845693*^9, 
  3.770641898259737*^9}, {3.770654404613014*^9, 3.770654408634839*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {RGBColor[1, 0, 0], Thickness[0.014], Opacity[1.], 
      LineBox[CompressedData["
1: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
       "]], 
      LineBox[CompressedData["
1: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
       
       "]]}, {}}, {{}, {}, {}}}, {{{}, {}, 
     {RGBColor[0.4, 0.5, 1], Thickness[0.007], Opacity[1.], 
      LineBox[CompressedData["
1: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
       "]], 
      LineBox[CompressedData["
1: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
       "]], 
      LineBox[CompressedData["
1:eJwVz2lQ02cQB+BAxStOABG1GDFcfd9GJQhRERGX1osKY1NEEGQawnAUQjiC
QCAkXOUQhLR4xKg1HGJNbDyKYB3Alaq0SB1RwaOIQJHigeOBjYrY/vthZ+eZ
3Z3Zn5Mk+asYSxaLFcDU/z0rqPX1Zh8CR2Ves6yEhegX2FvQ40ugqi3Gq9+q
ELsCph8e9Sdw1o0ryjcU4Mg6aTcnkMAFG/cdxeZ8dFgt9IkQE3AWCF5K9Hk4
sCqoY1hCgHPn6Yb+jDx8P5Y6WxtHoEvUzLnIz0PZSvWgmTEM7njX4pqHwhVa
WX4CgbgKr9a1b9TYoD66ZpBxsA97n+ipGtu9Okv3JBPwO+5ouT9UjaWef9k7
phEwPW7IIdPVWD8yLao7g0DkqoJOTYYK53rYeyzLJHDijOu31okq7HN3bz2v
ILDJvMkqdqEKE5aIb/+hItA09eT6nsJcLCKX2OOlBNRVRu5PoUr84pP72txy
Ao9qx4x2HCXG3rMY9tAQOENqRteU5OAdF+ufNYyrr/VP7lPm4A/OFByqmXv9
84ozwhy0kS63zma8sUzn7MrPwSW88PClWgIBmZxEXUM2vnSU/92kI3Alri03
RpyNnJv7PROOMHlZ9U+uPVBgHveoRSfjJQE7fm/oUeCGBW2VwbUEipXT2hZ8
p8Bb85//GHuMQPjrEFvjDAU+s9t6v+I0gYe7vPlBFlkYxho2ud0jsLg1sVnn
lY46R/Ojwj4CT67WXrn6QY59vjPdhvoJGHa3Xv6mU46OEQvFMMjk6wpzSt8n
R9X3kwl1DwnURSkFW1bKUb//8973jGXCsCNXBXIcOrvNNmKUQHnR3QPzJtMw
9qWyZN4YAVHHb7wxbRqmD9uLZ7AoBL27HZo1PxWbLD89GGdJYUr61089H6fg
G55v7+UpFFqLD1FRSwr6rN1i6zqNAnekOvNGZQrqMgTcEjaFc4197ZWrU7Al
Z2fJAOM1gf++nRCm4IcDpe1+HAqhi379qG56Chb0mrwnZlNwb9Lnu0mS8dL4
Rfl2ewqRqvG9jexknGrXY2qeR2GmmW2yaJLhri0TrulcCvntbzZ2z5JhVxJH
fMORgsvoLYXolyTkVDgd9HCioIyvsi6PTcIvDcLeShcK25fOHVLOScJTg3MG
XxBm3xhzPVIlxRsj4YGbKYU7h4PritKkOMdKVnKcT2FRHXuD1lmKWv89kzEC
CqYjn4XcLUpE/fmBR/3eFCK27zlWK0pA0wlF+/XNFDQTNalb2fHYqTHKG1OZ
fP4CkJqjMb7Rr29ITiGsXTD11YVo5EmN4b0ZFLLkey0MO6NRSr0PuSkoHFo6
X+niG42uA/UOHysp+D1PjY5/JUHe8sXLy1QUquxOtrxtlmCns5E65FNYlVtc
zc5m5h8M1r7FzP/re9Y5sCTIDV7GP1FKwaP25nubjijMuGv4J7Kcwgs4aTaV
RiGvg//42W4K+lvjIaNBUZgdVN+k11Aoa9vF+tOG2a/ld9tUU6jWnj/teU+M
PI3hUs1eCtvOXXT2rxEj96HHA1sthYoQ61dNiWLUZ3afUukoLD44u2pyhRj/
AxViG8U=
       "]], LineBox[CompressedData["
1:eJwBUQKu/SFib1JlAgAAACQAAAACAAAAPK3OEsKiKEBIaKAyjw5fwC7slgRq
pShAcMSggSegXsDMDyptmKcoQF6qnBlmRl7Adv2pYCmqKEBRMVg82t1dwMzY
qUdLryhAw7LckR8QXcAiRqnj0sMoQOubzOGuBFrAHpsv/kLGKEAXaOhGmqxZ
wHghqcr0yChAk0EcK1NMWcAiDym+hcsoQDinNeGr8VjAfJWiijfOKECi4CIp
kZNYwHjqKKWn0ChA/h1LGl8/WMAi2KiYONMoQMiXdh6151fAeLOof1rYKEDA
Ng3STjtXwHQIL5rK2ihA0nqRHMXqVsDOjqhmfN0oQODA+2DBklbAvBlC9onf
KEB4cbpxZVBWwE4kMLfs4ChAN5GNh/EjVsAsiRvzcOUoQBpQbU7xlFXAeEWo
NMDnKEBkGrhw60xVwFoGVTlr6ShAIprjzVwZVcAonmxriewoQHrKhswDulTA
oGzur5rwKEBIDWT0nT9UwCT8pwIE8ihAcibCJqoVVMDO6Sf2lPQoQB1Qok0R
ylPAbA27XsP2KEBJLa6ufopTwJyK9KS9+ihAijAV0ysYU8DOsqfQR/woQPMz
07h37FLAJI6nt2kBKUBdvXkw+1xSwLTnTZU1AylAIJ3yrYwrUsBClnqNcQcp
QNJ3iMmguFHAJFcnkhwJKUApwkwz94tRwM5Ep4WtCylAau4Vi+tHUcD0om0m
1QwpQL+fkKuPKVHAPrSAgpQRKUDAtajbcK5QwM4NJ2BgEylAGLOcbo6AUMAO
AMcWTRUpQBPywkPRT1DAPcMRxw==
       "]]}, {}}, {{}, {}, {}}}, {{{}, {}, 
     {GrayLevel[1], Thickness[0.003], Opacity[1.], LineBox[CompressedData["
1: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
G4oXlzaZt3+QcOlscyV1SCj+DwEK0Jg=
       "]], LineBox[CompressedData["
1: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
5M4fsG+qhISsV7XTZbswKFp51i+5goR7eJdYNMHJh9Ku1glEAtB4zXcM0qGJ
ib7vqCUhO8HblaudDqfVtiwm1nHySp9cNHxOhxwdBcaORhKqVt+qv5xEh43m
3P4JbSSEBjyOmzGkQ42VV8zYe05fzFzhPaBGB9tjEzn6nSRo9X8p3itFh7TT
PW2j3Rw+IiNi6hM0kAiswvUGOXncdVG5LYoGIgVu74fnOP2R7uN7rE4YlgS+
MrdJM6Hb3WxSins5LOupm6+RYcJY43G7hl4hwEpyXxpvZILRreYaAyQE0jZu
x60ZTNAOly9t8hcC3SKuFG81JoySyxVl5gXBz3KDcKUBE5LEH6489UMA5nNs
hjVcmNCQFOJdVcMPM7s67iojJvw8WbkpP4gbLuiWyUbUMGGHdV67+HFumFeL
Sf3+gglOX/RPp+/kBi4ps1sZr5jQWuXEPSXIDbTx+uBVbUzYWBJxtTKKC+Rv
ljv8GuDgO59q7DZeosw/3ZJ9KsyCb9oHm6frF6iON+xUCYwFvwIS62qjFijr
2n3iF1ayYHFOYrzNeoGyvU8XUVnDAiOZn39LJuYpZ/8QrixpFrwznCpnS81T
wXLnv4SosmBqKE5dPWiOKj1tnrrbggXL1vnFPQ6YpRBPueOkFQuq22OrAkxn
qaakdSoxNiy4kqAhGy8+S31t/FTTaccCs56ukprSGUqEtBtycGbBx80Lc8IT
P6lzP86q+wSyYHa9nbcFe5ryufz2r1QwC1qeZm623DlNhUqq1j8L5dyTue97
/rppKtVkxpI/ksO3Zu0lkydTVHO+j39UHAu2hYoWOdKmKNw57NW9fBb8qQjz
QewJSoNv+OauAhbIbrtUNS07QUGKsc1oEQuipkzVXrSMU5bN9AnVchZ0XWyv
1lcZp0KZsaJPEAv2RK5bSPs1SvWPZhxre8+C3HMLygcyRqjJYB7cs5MF7dFB
FzQtR6gFqePTYl2cfW+bbj1YOUKt2q0UcrSXBSoNWuU2l4cpvQcP8oZHWPB4
fqDvtssQZbpzhUfkGAvWm7dTcswhyrLHVWfTJAtC3k2LqA5/p1zpGi0esyy4
98vHaPH4d8rv7q3EdXMcP6rLdlRt/E6F6fy2r55nAc30dz/Pt0Hq5ntL5pFF
jh7vPN0/Zg1SaWerZ5eWWLBKwFZT22GQ+h+KxIlX
       "]], 
      LineBox[{{10.104598108790855`, 471.7514026626006}, {10.108188240499885`,
        422.7853532600299}, {10.127924709343148`, 168.4887886976599}, {
       10.132858826553964`, 107.92138071630339`}, {10.13779294376478, 
       48.52463227907972}, {10.14766117818641, -66.8195936145986}, {
       10.167397647029674`, -284.14058649940966`}, {
       10.171996622033358`, -332.2664509141224}}]}}, {{}, {}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->350,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0., 14.999999693877552`}, {0., 55814.22373298263}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.768746694819628*^9, {3.7687467267754393`*^9, 3.768746746229651*^9}, 
   3.768747099988841*^9, {3.770641691994689*^9, 3.770641738315346*^9}, 
   3.770641776802706*^9, {3.770641880515955*^9, 3.770641899738721*^9}, {
   3.770641969358225*^9, 3.770642014932176*^9}, 3.770647708748872*^9, 
   3.7706540550510178`*^9, 3.770654421816476*^9, 3.7706556912820168`*^9, 
   3.7706565149323587`*^9}]
}, Open  ]],

Cell["\<\
Both the Mathematica (real) solution and the text solution meet the second \
initial condition.\
\>", "Text",
 CellChangeTimes->{{3.770657359996744*^9, 3.770657373908908*^9}, {
  3.77065750031735*^9, 3.770657535459482*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dp", "=", 
   RowBox[{"D", "[", 
    RowBox[{"e8", ",", "t"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.770657184325385*^9, 3.770657208886489*^9}, 
   3.770657348582775*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dp", "/.", 
  RowBox[{"t", "\[Rule]", "0"}]}]], "Input",
 CellChangeTimes->{{3.770657214780106*^9, 3.770657234533079*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.770657218995574*^9, 3.770657235882186*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"dpm", "=", 
   RowBox[{"D", "[", 
    RowBox[{"e7", ",", "t"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7706572592448874`*^9, 3.770657344694911*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dpm", "/.", 
  RowBox[{"t", "\[Rule]", "0"}]}]], "Input",
 CellChangeTimes->{{3.770657323504353*^9, 3.7706573386150417`*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.770657339857377*^9}]
}, Open  ]],

Cell["\<\
So if the Mathematica solution meets both initial conditions, is it \
considered correct?\
\>", "Text",
 CellChangeTimes->{{3.770657942731572*^9, 3.770657961890662*^9}}],

Cell["\<\
11.  y'' + 5 y' + 6 y = u (t - 1) + \[Delta] (t - 2),  y[0] = 0, y'[0] = 1\
\>", "Text",
 CellChangeTimes->{{3.768747150570908*^9, 3.7687471514292517`*^9}, {
  3.7687472244826193`*^9, 3.768747285459875*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.675353558048832*^9, 3.675353561596052*^9}, 
   3.768743858601334*^9, {3.772904332126717*^9, 3.7729043327091618`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e1", "=", 
  RowBox[{"LaplaceTransform", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"y", "''"}], "[", "t", "]"}], "+", 
      RowBox[{"5", " ", 
       RowBox[{
        RowBox[{"y", "'"}], "[", "t", "]"}]}], "+", 
      RowBox[{"6", " ", 
       RowBox[{"y", "[", "t", "]"}]}]}], "==", 
     RowBox[{
      RowBox[{"UnitStep", "[", 
       RowBox[{"t", "-", "1"}], "]"}], "+", 
      RowBox[{"DiracDelta", "[", 
       RowBox[{"t", "-", "2"}], "]"}]}]}], ",", "t", ",", "s"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.675353618975213*^9, 3.675353696806185*^9}, {
  3.675356633019548*^9, 3.675356638137623*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"6", " ", 
    RowBox[{"LaplaceTransform", "[", 
     RowBox[{
      RowBox[{"y", "[", "t", "]"}], ",", "t", ",", "s"}], "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["s", "2"], " ", 
    RowBox[{"LaplaceTransform", "[", 
     RowBox[{
      RowBox[{"y", "[", "t", "]"}], ",", "t", ",", "s"}], "]"}]}], "+", 
   RowBox[{"5", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"s", " ", 
       RowBox[{"LaplaceTransform", "[", 
        RowBox[{
         RowBox[{"y", "[", "t", "]"}], ",", "t", ",", "s"}], "]"}]}], "-", 
      RowBox[{"y", "[", "0", "]"}]}], ")"}]}], "-", 
   RowBox[{"s", " ", 
    RowBox[{"y", "[", "0", "]"}]}], "-", 
   RowBox[{
    SuperscriptBox["y", "\[Prime]",
     MultilineFunction->None], "[", "0", "]"}]}], "\[Equal]", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "2"}], " ", "s"}]], "+", 
   FractionBox[
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "s"}]], "s"]}]}]], "Output",
 CellChangeTimes->{{3.67535369054982*^9, 3.675353697750587*^9}, 
   3.675356640094942*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e2", "=", 
  RowBox[{"e1", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"y", "[", "0", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"y", "'"}], "[", "0", "]"}], "\[Rule]", "1"}], ",", 
     RowBox[{
      RowBox[{"LaplaceTransform", "[", 
       RowBox[{
        RowBox[{"y", "[", "t", "]"}], ",", "t", ",", "s"}], "]"}], "\[Rule]", 
      "bigY"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.6753537139127197`*^9, 3.675353799794407*^9}, 
   3.675356672305203*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   RowBox[{"6", " ", "bigY"}], "+", 
   RowBox[{"5", " ", "bigY", " ", "s"}], "+", 
   RowBox[{"bigY", " ", 
    SuperscriptBox["s", "2"]}]}], "\[Equal]", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "2"}], " ", "s"}]], "+", 
   FractionBox[
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "s"}]], "s"]}]}]], "Output",
 CellChangeTimes->{3.675353800529069*^9, 3.6753566745494432`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e3", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{"e2", ",", "bigY"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.67535381370277*^9, 3.6753538272970457`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"bigY", "\[Rule]", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "s"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", "s"], "+", "s", "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "s"}]], " ", "s"}]}], ")"}]}], 
     RowBox[{"s", " ", 
      RowBox[{"(", 
       RowBox[{"6", "+", 
        RowBox[{"5", " ", "s"}], "+", 
        SuperscriptBox["s", "2"]}], ")"}]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.67535382947407*^9, 3.675356678759943*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e4", "=", 
  RowBox[{"e3", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.675353832375155*^9, 3.675353838680707*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "2"}], " ", "s"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", "s"], "+", "s", "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "s"}]], " ", "s"}]}], ")"}]}], 
  RowBox[{"s", " ", 
   RowBox[{"(", 
    RowBox[{"6", "+", 
     RowBox[{"5", " ", "s"}], "+", 
     SuperscriptBox["s", "2"]}], ")"}]}]]], "Output",
 CellChangeTimes->{3.675353840097514*^9, 3.675356681984085*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e5", "=", 
  RowBox[{"InverseLaplaceTransform", "[", 
   RowBox[{"e4", ",", "s", ",", "t"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.675353843048602*^9, 3.6753538538641443`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "6"], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "3"}], " ", "t"}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"6", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["\[ExponentialE]", "t"]}], ")"}]}], "+", 
    RowBox[{"6", " ", 
     SuperscriptBox["\[ExponentialE]", "4"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[ExponentialE]", "2"]}], "+", 
       SuperscriptBox["\[ExponentialE]", "t"]}], ")"}], " ", 
     RowBox[{"HeavisideTheta", "[", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "t"}], "]"}]}], "+", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"\[ExponentialE]", "-", 
        SuperscriptBox["\[ExponentialE]", "t"]}], ")"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "\[ExponentialE]"}], "+", 
       SuperscriptBox["\[ExponentialE]", "t"]}], ")"}], " ", 
     RowBox[{"HeavisideTheta", "[", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "t"}], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.6753538544813547`*^9, 3.675356685844418*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e6", "=", 
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "3"}], " ", "t"}]]}], "+", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "2"}], " ", "t"}]], "+", 
   RowBox[{
    FractionBox["1", "6"], " ", 
    RowBox[{"UnitStep", "[", 
     RowBox[{"t", "-", "1"}], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"3", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"(", 
          RowBox[{"t", "-", "1"}], ")"}]}]]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "3"}], " ", 
         RowBox[{"(", 
          RowBox[{"t", "-", "1"}], ")"}]}]]}]}], ")"}]}], "+", 
   RowBox[{
    RowBox[{"UnitStep", "[", 
     RowBox[{"t", "-", "2"}], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        RowBox[{"(", 
         RowBox[{"t", "-", "2"}], ")"}]}]], "-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "3"}], " ", 
        RowBox[{"(", 
         RowBox[{"t", "-", "2"}], ")"}]}]]}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.675353957872615*^9, 3.675354153990147*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "3"}], " ", "t"}]]}], "+", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "2"}], " ", "t"}]], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "3"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "t"}], ")"}]}]]}], "+", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "t"}], ")"}]}]]}], ")"}], " ", 
   RowBox[{"UnitStep", "[", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "t"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "6"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "3"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "t"}], ")"}]}]]}], "-", 
     RowBox[{"3", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "t"}], ")"}]}]]}]}], ")"}], " ", 
   RowBox[{"UnitStep", "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "t"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.675354156366456*^9, 3.675356690585552*^9}]
}, Open  ]],

Cell["Above: The text answer is entered.", "Text",
 CellChangeTimes->{{3.675354790865679*^9, 3.675354801391971*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"plot1", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{"e5", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Yellow", ",", 
        RowBox[{"Thickness", "[", "0.002", "]"}]}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "250"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plot2", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{"e6", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Thickness", "[", "0.008", "]"}]}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "250"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.675354181006638*^9, 3.675354184452705*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"plot2", ",", "plot1"}], "]"}]], "Input",
 CellChangeTimes->{{3.6753541943533*^9, 3.6753542008523006`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[1, 0, 0], Thickness[0.008], Opacity[1.], LineBox[CompressedData["
1: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
Sg==
      "]]}}, {{}, {}, 
    {RGBColor[1, 1, 0], Thickness[0.002], Opacity[1.], LineBox[CompressedData["
1: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
xTApKvhytjMX/wO+ahKA
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->250,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0., 0.9999999795918367}, {0., 0.1481481365754192}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.675354202775351*^9, 3.675356697449139*^9}]
}, Open  ]],

Cell["Above: the two plots suggest equality.", "Text",
 CellChangeTimes->{{3.6753542650269947`*^9, 3.675354272793486*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e7", "=", 
  RowBox[{"e6", "/.", 
   RowBox[{"UnitStep", "\[Rule]", "HeavisideTheta"}]}]}]], "Input",
 CellChangeTimes->{{3.675354402660335*^9, 3.675354431270013*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "3"}], " ", "t"}]]}], "+", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "2"}], " ", "t"}]], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "3"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "t"}], ")"}]}]]}], "+", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "t"}], ")"}]}]]}], ")"}], " ", 
   RowBox[{"HeavisideTheta", "[", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "t"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "6"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "3"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "t"}], ")"}]}]]}], "-", 
     RowBox[{"3", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "t"}], ")"}]}]]}]}], ")"}], " ", 
   RowBox[{"HeavisideTheta", "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "t"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.6753544327608147`*^9, 3.675356703310255*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"e5", "\[Equal]", "e7"}], "]"}]], "Input",
 CellChangeTimes->{{3.6753543028183537`*^9, 3.675354306391964*^9}, {
  3.675354442212858*^9, 3.675354442691918*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.675354309244973*^9, 3.675354443896512*^9, 
  3.675356706754137*^9}]
}, Open  ]],

Cell["\<\
Above: So: If the UnitSteps are exchanged for Heavisides, the answers match.\
\>", "Text",
 CellChangeTimes->{{3.675354460956545*^9, 3.675354485778391*^9}}]
},
WindowSize->{1366, 843},
WindowMargins->{{4, Automatic}, {Automatic, 4}},
Magnification:>1.5 Inherited,
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 10, \
2015)",
StyleDefinitions->"Charter1.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 280, 6, 110, "Text"],
Cell[683, 21, 178, 2, 75, "Text"],
Cell[864, 25, 267, 4, 45, "Input"],
Cell[CellGroupData[{
Cell[1156, 33, 579, 16, 45, "Input"],
Cell[1738, 51, 802, 22, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2577, 78, 583, 16, 45, "Input"],
Cell[3163, 96, 395, 11, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3595, 112, 176, 4, 45, "Input"],
Cell[3774, 118, 595, 17, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4406, 140, 204, 5, 45, "Input"],
Cell[4613, 147, 478, 14, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5128, 166, 203, 4, 45, "Input"],
Cell[5334, 172, 467, 13, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5838, 190, 335, 10, 75, "Input"],
Cell[6176, 202, 94, 1, 45, "Output"]
}, Open  ]],
Cell[6285, 206, 364, 9, 86, "Text"],
Cell[6652, 217, 1414, 39, 185, "Input"],
Cell[CellGroupData[{
Cell[8091, 260, 156, 3, 45, "Input"],
Cell[8250, 265, 37933, 638, 246, "Output"]
}, Open  ]],
Cell[46198, 906, 235, 3, 51, "Text"],
Cell[46436, 911, 202, 3, 75, "Text"],
Cell[46641, 916, 216, 3, 45, "Input"],
Cell[CellGroupData[{
Cell[46882, 923, 592, 17, 45, "Input"],
Cell[47477, 942, 840, 25, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48354, 972, 583, 16, 45, "Input"],
Cell[48940, 990, 509, 15, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49486, 1010, 176, 4, 45, "Input"],
Cell[49665, 1016, 685, 19, 87, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50387, 1040, 208, 5, 45, "Input"],
Cell[50598, 1047, 565, 16, 87, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51200, 1068, 201, 4, 45, "Input"],
Cell[51404, 1074, 516, 15, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51957, 1094, 549, 17, 45, "Input"],
Cell[52509, 1113, 208, 4, 69, "Output"]
}, Open  ]],
Cell[52732, 1120, 273, 8, 52, "Text"],
Cell[CellGroupData[{
Cell[53030, 1132, 498, 16, 45, "Input"],
Cell[53531, 1150, 176, 3, 69, "Output"]
}, Open  ]],
Cell[53722, 1156, 309, 9, 52, "Text"],
Cell[CellGroupData[{
Cell[54056, 1169, 500, 16, 45, "Input"],
Cell[54559, 1187, 226, 5, 69, "Output"]
}, Open  ]],
Cell[54800, 1195, 259, 8, 52, "Text"],
Cell[CellGroupData[{
Cell[55084, 1207, 2177, 60, 247, "Input"],
Cell[57264, 1269, 27288, 473, 235, "Output"]
}, Open  ]],
Cell[84567, 1745, 682, 23, 93, "Text"],
Cell[85252, 1770, 218, 3, 45, "Input"],
Cell[CellGroupData[{
Cell[85495, 1777, 767, 23, 75, "Input"],
Cell[86265, 1802, 1156, 35, 107, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87458, 1842, 539, 16, 45, "Input"],
Cell[88000, 1860, 656, 22, 76, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88693, 1887, 177, 4, 45, "Input"],
Cell[88873, 1893, 564, 17, 91, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89474, 1915, 204, 5, 45, "Input"],
Cell[89681, 1922, 447, 14, 91, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90165, 1941, 203, 4, 45, "Input"],
Cell[90371, 1947, 1447, 42, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91855, 1994, 156, 3, 45, "Input"],
Cell[92014, 1999, 907, 28, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92958, 2032, 152, 3, 45, "Input"],
Cell[93113, 2037, 871, 28, 99, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94021, 2070, 1648, 53, 139, "Input"],
Cell[95672, 2125, 120, 2, 45, "Output"]
}, Open  ]],
Cell[95807, 2130, 596, 11, 120, "Text"],
Cell[96406, 2143, 1943, 53, 185, "Input"],
Cell[CellGroupData[{
Cell[98374, 2200, 156, 3, 45, "Input"],
Cell[98533, 2205, 11896, 213, 263, "Output"]
}, Open  ]],
Cell[110444, 2421, 223, 5, 51, "Text"],
Cell[110670, 2428, 655, 15, 75, "Input"],
Cell[111328, 2445, 1384, 39, 125, "Input"],
Cell[112715, 2486, 354, 6, 86, "Text"],
Cell[CellGroupData[{
Cell[113094, 2496, 354, 8, 45, "Input"],
Cell[113451, 2506, 12865, 244, 273, "Output"]
}, Open  ]],
Cell[126331, 2753, 811, 27, 73, "Text"],
Cell[127145, 2782, 216, 3, 45, "Input"],
Cell[127364, 2787, 169, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[127558, 2795, 891, 26, 119, "Input"],
Cell[128452, 2823, 1444, 44, 116, "Output"]
}, Open  ]],
Cell[129911, 2870, 436, 8, 86, "Text"],
Cell[CellGroupData[{
Cell[130372, 2882, 559, 16, 45, "Input"],
Cell[130934, 2900, 893, 27, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131864, 2932, 176, 4, 45, "Input"],
Cell[132043, 2938, 850, 25, 96, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132930, 2968, 204, 5, 45, "Input"],
Cell[133137, 2975, 790, 23, 96, "Output"]
}, Open  ]],
Cell[133942, 3001, 186, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[134153, 3009, 205, 4, 45, "Input"],
Cell[134361, 3015, 2588, 76, 117, "Output"]
}, Open  ]],
Cell[136964, 3094, 214, 4, 86, "Text"],
Cell[CellGroupData[{
Cell[137203, 3102, 159, 3, 45, "Input"],
Cell[137365, 3107, 2489, 74, 117, "Output"]
}, Open  ]],
Cell[139869, 3184, 199, 4, 51, "Text"],
Cell[140071, 3190, 382, 8, 45, "Input"],
Cell[CellGroupData[{
Cell[140478, 3202, 156, 3, 45, "Input"],
Cell[140637, 3207, 1162, 33, 76, "Output"]
}, Open  ]],
Cell[141814, 3243, 538, 13, 58, "Text"],
Cell[CellGroupData[{
Cell[142377, 3260, 1335, 42, 141, "Input"],
Cell[143715, 3304, 1294, 40, 141, "Output"]
}, Open  ]],
Cell[145024, 3347, 288, 5, 86, "Text"],
Cell[CellGroupData[{
Cell[145337, 3356, 172, 4, 45, "Input"],
Cell[145512, 3362, 92, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[145641, 3368, 174, 4, 45, "Input"],
Cell[145818, 3374, 70, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[145925, 3380, 205, 5, 45, "Input"],
Cell[146133, 3387, 133, 2, 45, "Output"]
}, Open  ]],
Cell[146281, 3392, 1781, 44, 191, "Input"],
Cell[148065, 3438, 193, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[148283, 3446, 268, 5, 45, "Input"],
Cell[148554, 3453, 9782, 173, 256, "Output"]
}, Open  ]],
Cell[158351, 3629, 296, 5, 86, "Text"],
Cell[158650, 3636, 2166, 54, 191, "Input"],
Cell[160819, 3692, 725, 12, 120, "Text"],
Cell[CellGroupData[{
Cell[161569, 3708, 318, 5, 45, "Input"],
Cell[161890, 3715, 41649, 703, 330, "Output"]
}, Open  ]],
Cell[203554, 4421, 233, 5, 51, "Text"],
Cell[203790, 4428, 215, 6, 45, "Input"],
Cell[CellGroupData[{
Cell[204030, 4438, 146, 3, 45, "Input"],
Cell[204179, 4443, 94, 1, 45, "Output"]
}, Open  ]],
Cell[204288, 4447, 192, 5, 45, "Input"],
Cell[CellGroupData[{
Cell[204505, 4456, 149, 3, 45, "Input"],
Cell[204657, 4461, 70, 1, 45, "Output"]
}, Open  ]],
Cell[204742, 4465, 179, 4, 51, "Text"],
Cell[204924, 4471, 253, 5, 75, "Text"],
Cell[205180, 4478, 216, 3, 45, "Input"],
Cell[CellGroupData[{
Cell[205421, 4485, 670, 20, 45, "Input"],
Cell[206094, 4507, 1094, 33, 114, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[207225, 4545, 540, 16, 45, "Input"],
Cell[207768, 4563, 493, 15, 78, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[208298, 4583, 177, 4, 45, "Input"],
Cell[208478, 4589, 676, 20, 96, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[209191, 4614, 204, 5, 45, "Input"],
Cell[209398, 4621, 551, 17, 96, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[209986, 4643, 203, 4, 45, "Input"],
Cell[210192, 4649, 1218, 36, 144, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[211447, 4690, 1346, 43, 76, "Input"],
Cell[212796, 4735, 1452, 49, 116, "Output"]
}, Open  ]],
Cell[214263, 4787, 116, 1, 51, "Text"],
Cell[214382, 4790, 985, 26, 133, "Input"],
Cell[CellGroupData[{
Cell[215392, 4820, 154, 3, 45, "Input"],
Cell[215549, 4825, 12339, 215, 247, "Output"]
}, Open  ]],
Cell[227903, 5043, 122, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[228050, 5048, 191, 4, 45, "Input"],
Cell[228244, 5054, 1466, 49, 116, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[229747, 5108, 214, 4, 45, "Input"],
Cell[229964, 5114, 120, 2, 45, "Output"]
}, Open  ]],
Cell[230099, 5119, 166, 3, 51, "Text"]
}
]
*)


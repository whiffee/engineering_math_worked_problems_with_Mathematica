(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    399242,       8496]
NotebookOptionsPosition[    391135,       8240]
NotebookOutlinePosition[    391578,       8259]
CellTagsIndexPosition[    391535,       8256]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[""], "Input",
 CellChangeTimes->{3.7683371626809883`*^9}],

Cell["1 - 6 RLC-Circuits: special cases", "Text",
 CellChangeTimes->{{3.7681271204351387`*^9, 3.768127140512599*^9}},
 Background->RGBColor[
  0.9600061036087587, 0.9600061036087587, 0.9600061036087587]],

Cell["\<\
1. RC-Circuit. Model the RC-Circuit in the figure below. Find the current due \
to a constant E.\
\>", "Text",
 CellChangeTimes->{{3.768127147864112*^9, 3.7681271842376213`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"LightGreen", ",", 
      RowBox[{"Rectangle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "4"}], "}"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1.3", ",", "2.7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.3", ",", "2.3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.95", ",", "2.3"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Circle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1.7", ",", "2.3"}], "}"}], ",", "0.25", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.35"}], ",", "0.35"}], "}"}]}], "]"}]}], "}"}], ",", 
    
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2.03", ",", "2.3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.7", ",", "2.3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.7", ",", "3.45"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.22", ",", "3.45"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.18", ",", "3.35"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.11", ",", "3.52"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.06", ",", "3.35"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "3.51"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.95", ",", "3.35"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.9", ",", "3.51"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.87", ",", "3.45"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.3", ",", "3.45"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.3", ",", "3.02"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2.03", ",", "2.21"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.03", ",", "2.39"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    
    RowBox[{"{", 
     RowBox[{"Disk", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.3", ",", "3.02"}], "}"}], ",", "0.04"}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"White", ",", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1.3", ",", "3.02"}], "}"}], ",", "0.03"}], "]"}]}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"Disk", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.3", ",", "2.7"}], "}"}], ",", "0.04"}], "]"}], "}"}], ",", 
    
    RowBox[{"{", 
     RowBox[{"White", ",", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1.3", ",", "2.7"}], "}"}], ",", "0.03"}], "]"}]}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<E(t)\>\"", ",", "Medium"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.2", ",", "2.86"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<R\>\"", ",", "Medium"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.05", ",", "3.65"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<C\>\"", ",", "Medium"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.99", ",", "2.1"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<RC-circuit\>\"", ",", "17"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "1.95"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.4", ",", "1.75"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.4", ",", "0.5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3.4", ",", "0.5"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.4", ",", "1.5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.5", ",", "1.5"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.2", ",", "0.6", ",", "0.85"}], "]"}], ",", 
      RowBox[{"BezierCurve", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.4", ",", "1.5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.5", ",", "0.6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3.3", ",", "0.54"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Current in problem 1\>\"", ",", "17"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.9", ",", "0.2"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<c\>\"", ",", "Medium"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.3", ",", "1.5"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<t\>\"", ",", "Medium"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.4", ",", "0.38"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Current I(t)\>\"", ",", "Medium"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.8", ",", "1.7"}], "}"}]}], "]"}], "}"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQvX7JgyYe4TeOJTNiT4Doc4ePngfRby6cfgui44N8
voDoqHRhIV4gncLaKwaihV5naIPoe/vCDEB0uPgCcxDNxqppA6K5pi12BNEd
79vdQXQPS6o3iOYPigsE0Xl55/NBtCkPQwmI/jc/fhGIjnvSuAxEy6hHrgar
1wzcAKIVvyruBtG/PjTtB9HOu5QPgWgnpajzIHrh2jkvQXTor7lvQXRUbd5X
EM3nZcrBB6S39f0zBdHfODhsQHQn92NnEP39lkgAiGaeFpUIomWOJaSC6Ljo
kmwQnceRUQqitdYydYLoQ9NajiiCwiFi4lkQnT278zOILlpcIKwEpAFMBoa+

  "]],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.88, 1, 0.88], RectangleBox[{0, 0}, {4, 4}]}, 
   {Thickness[0.004], LineBox[{{1.3, 2.7}, {1.3, 2.3}, {1.95, 2.3}}]}, 
   {Thickness[0.004], CircleBox[{1.7, 2.3}, 0.25, {-0.35, 0.35}]}, 
   {Thickness[0.004], 
    LineBox[{{2.03, 2.3}, {2.7, 2.3}, {2.7, 3.45}, {2.22, 3.45}, {2.18, 
      3.35}, {2.11, 3.52}, {2.06, 3.35}, {2, 3.51}, {1.95, 3.35}, {1.9, 
      3.51}, {1.87, 3.45}, {1.3, 3.45}, {1.3, 3.02}}]}, 
   {Thickness[0.004], LineBox[{{2.03, 2.21}, {2.03, 2.39}}]}, 
   DiskBox[{1.3, 3.02}, 0.04], 
   {GrayLevel[1], DiskBox[{1.3, 3.02}, 0.03]}, DiskBox[{1.3, 2.7}, 0.04], 
   {GrayLevel[1], DiskBox[{1.3, 2.7}, 0.03]}, InsetBox[
    StyleBox["\<\"E(t)\"\>",
     StripOnInput->False,
     FontSize->Medium], {1.2, 2.86}], InsetBox[
    StyleBox["\<\"R\"\>",
     StripOnInput->False,
     FontSize->Medium], {2.05, 3.65}], InsetBox[
    StyleBox["\<\"C\"\>",
     StripOnInput->False,
     FontSize->Medium], {1.99, 2.1}], InsetBox[
    StyleBox["\<\"RC-circuit\"\>",
     StripOnInput->False,
     FontSize->17], {2, 1.95}], 
   {Thickness[0.004], LineBox[{{0.4, 1.75}, {0.4, 0.5}, {3.4, 0.5}}]}, 
   {Thickness[0.004], LineBox[{{0.4, 1.5}, {0.5, 1.5}}]}, 
   {RGBColor[0.2, 0.6, 0.85], 
    BezierCurveBox[{{0.4, 1.5}, {1.5, 0.6}, {3.3, 0.54}}]}, InsetBox[
    StyleBox["\<\"Current in problem 1\"\>",
     StripOnInput->False,
     FontSize->17], {1.9, 0.2}], InsetBox[
    StyleBox["\<\"c\"\>",
     StripOnInput->False,
     FontSize->Medium], {0.3, 1.5}], InsetBox[
    StyleBox["\<\"t\"\>",
     StripOnInput->False,
     FontSize->Medium], {3.4, 0.38}], InsetBox[
    StyleBox["\<\"Current I(t)\"\>",
     StripOnInput->False,
     FontSize->Medium], {0.8, 1.7}]}]], "Output",
 CellChangeTimes->{{3.768087547345272*^9, 3.7680875902146187`*^9}, 
   3.76808762555582*^9, {3.768127066974368*^9, 3.768127085560697*^9}, {
   3.768127437609832*^9, 3.7681274709629183`*^9}, {3.7681275265350237`*^9, 
   3.768127571123292*^9}, {3.7681276148888817`*^9, 3.768127644248499*^9}}]
}, {2}]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.7683145227569838`*^9}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.772894649199514*^9, 3.772894649660583*^9}}],

Cell["The problem is asking for a look at RC circuit, not RLC. ", "Text",
 CellChangeTimes->{{3.770138436758642*^9, 3.7701384894751377`*^9}, {
  3.770138851918655*^9, 3.770138874885397*^9}, {3.770142327551241*^9, 
  3.7701423351430902`*^9}, {3.770142641240219*^9, 3.77014265511738*^9}, {
  3.7701475725887547`*^9, 3.770147582724184*^9}}],

Cell[TextData[{
 "The site ",
 StyleBox["https : // www.intmath.com/differential - equations/6 - rc - \
circuits.php",
  FontSize->14,
  FontSlant->"Italic"],
 " assumes a constant voltage source, just what the problem specifies. Below: \
There is no inductance here, only R and C."
}], "Text",
 CellChangeTimes->{{3.770142103634782*^9, 3.770142172415873*^9}, {
  3.770142533901649*^9, 3.770142535788065*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqnw", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"rR", 
     RowBox[{"(", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"eye", "[", "t", "]"}], ",", "t"}], "]"}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"eye", "[", "t", "]"}], "/", "cC"}]}], "\[Equal]", 
   "0"}]}]], "Input",
 CellChangeTimes->{{3.770140802136365*^9, 3.770140864638853*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{"eye", "[", "t", "]"}], "cC"], "+", 
   RowBox[{"rR", " ", 
    RowBox[{
     SuperscriptBox["eye", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}]}], "\[Equal]", 
  "0"}]], "Output",
 CellChangeTimes->{3.770140866500301*^9, 3.770143936666823*^9}]
}, Open  ]],

Cell["\<\
Within a certain range of capacitance and resistance, the plot resembles the \
one in the problem description, and can be manipulated to imitate changing \
parameters, with the voltage remaining constant.\
\>", "Text",
 CellChangeTimes->{{3.7701422585482273`*^9, 3.77014229680049*^9}, {
  3.770142408138729*^9, 3.770142447304837*^9}, {3.770142554700485*^9, 
  3.77014256047472*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol2", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{"eqnw", ",", "eye", ",", "t"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7701419230470057`*^9, 3.770141928414959*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"eye", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox["t", 
          RowBox[{"cC", " ", "rR"}]]}]], " ", 
       RowBox[{"C", "[", "1", "]"}]}]}], "]"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.7701419336881847`*^9, 3.7701439394674807`*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["\<\
It looks like the current is normalized to 1 at t=0, and the fraction of its \
max value at a given time needs to be estimated from the underlying grid.\
\>", "Text",
 CellChangeTimes->{{3.770144099368257*^9, 3.77014415044534*^9}, 
   3.770147680186555*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox["t", 
        RowBox[{"cC", " ", "rR"}]]}]], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "3"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"GridLines", "\[Rule]", "All"}]}], "\[IndentingNewLine]", "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"rR", ",", "0.2", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"cC", ",", "0.01", ",", "1"}], "}"}]}], " ", "]"}]], "Input",
 CellChangeTimes->{{3.77013731059814*^9, 3.7701373452341013`*^9}, {
   3.770137462420876*^9, 3.770137492162631*^9}, {3.770137553020701*^9, 
   3.770137553860956*^9}, 3.770137629530037*^9, {3.770137716562461*^9, 
   3.770137718769917*^9}, {3.770137756541387*^9, 3.770137763792651*^9}, {
   3.770138040703249*^9, 3.770138045069046*^9}, {3.770138165079414*^9, 
   3.770138165669552*^9}, {3.770141824957037*^9, 3.7701418685047703`*^9}, {
   3.770141949605942*^9, 3.770141964956984*^9}, {3.770141996746263*^9, 
   3.770142003905593*^9}, {3.7701439199831963`*^9, 3.7701439259090967`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`cC$$ = 
    0.9480000000000001, $CellContext`rR$$ = 0.98, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`rR$$], 0.2, 10}, {
      Hold[$CellContext`cC$$], 0.01, 1}}, Typeset`size$$ = {
    540., {160., 170.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`rR$408527$$ = 
    0, $CellContext`cC$408528$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`cC$$ = 0.01, $CellContext`rR$$ = 0.2}, 
      "ControllerVariables" :> {
        Hold[$CellContext`rR$$, $CellContext`rR$408527$$, 0], 
        Hold[$CellContext`cC$$, $CellContext`cC$408528$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[E^(-($CellContext`t/($CellContext`cC$$ $CellContext`rR$$))), \
{$CellContext`t, 0, 3}, PlotRange -> All, GridLines -> All], 
      "Specifications" :> {{$CellContext`rR$$, 0.2, 10}, {$CellContext`cC$$, 
         0.01, 1}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{608., {237., 247.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.770137346812818*^9, 3.7701375548592443`*^9, 3.7701376318174763`*^9, 
   3.770137720087326*^9, 3.7701377647584743`*^9, 3.77013804587611*^9, 
   3.770138166680382*^9, 3.770141966361394*^9, 3.770142004735952*^9, {
   3.77014392698279*^9, 3.770143942344976*^9}}]
}, Open  ]],

Cell["\<\
A random scrap from a different perspective, kept as interesing junk.\
\>", "Text",
 CellChangeTimes->{{3.7701424636010637`*^9, 3.770142485606605*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ind", ",", " ", "cap", ",", " ", "res"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"l", " ", 
       RowBox[{
        RowBox[{"i", "'"}], "[", "t", "]"}]}], "==", 
      RowBox[{
       SubscriptBox["v", "l"], "[", "t", "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["v", "c"], "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"1", "/", "c"}], " ", 
       RowBox[{"i", "[", "t", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"r", " ", 
       RowBox[{"i", "[", "t", "]"}]}], "\[Equal]", 
      RowBox[{
       SubscriptBox["v", "r"], "[", "t", "]"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kirchhoff", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["v", "l"], "[", "t", "]"}], "+", 
     RowBox[{
      SubscriptBox["v", "c"], "[", "t", "]"}], "+", 
     RowBox[{
      SubscriptBox["v", "r"], "[", "t", "]"}]}], "\[Equal]", 
    RowBox[{
     SubscriptBox["v", "s"], "[", "t", "]"}]}]}], ";"}]}], "Input"],

Cell["\<\
3. RL-Circuit. Model the RL-circuit in the figure below. Find a general \
solution when R, L, E are any constants. Graph or sketch solutions when L = \
0.25 H, R = 10 \[CapitalOmega], and E = 48 V.\
\>", "Text",
 CellChangeTimes->{{3.768127751488228*^9, 3.768127826009779*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnQd8W9XZh/GQ5CVZXrK895T33o63HSd24uwdO3tvQvaGsBISVlgpUAKB
QoFCyybsTZiljBbKKNABhbZ00X7/7/5PIseJTGRDElfJ29/vqeUr3aOjK3If
v+95zzlxXYs6ZrqfddZZy7y0/+voXFmzdGnnqhGe2i+1q5bP6PLQHkzWnv+F
21ln8aD2PwiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCILgyer0ePj4+8PX1hZeXl/rdw8PjO1/v5uYGnU6n
XstzjEYjTCZTN35+fvD29lbtuLu7D/jnEwRBEM4c6J68vDyMGTMG48aNQ1NT
E4qKihAVFQWDwdDrOf7+/khPT0dtbS3Gjx+PRYsWYeXKlYrly5dj6tSpaGtr
U+1YLJYB/4yCIAjCmQPjNDrtqquuwrXXXot169ZhypQpyM/PV3FXb+dERESg
tbUVy5Ytw969e/Hkk0/i1VdfVbz44ovYv38/zj//fNVOSkrKgH9GQRAE4fSE
+UPmBxlvWa1WJCQkqJhq48aNeOyxx/Doo4/iiiuuwNKlS1FZWale1/Ncei4k
JASlpaUqLrvhhhvw+OOP49e//jU+/vhj/Pa3v8V7772Hp59+Gvfccw8uvPBC
DB8+HImJiQgKCoKnp+eAXwNBEATh9IFjZmFhYbDZbKirq0NnZyc2bNiAn/3s
Z/jggw/wxhtv4KabbsLq1atRU1MDs9ncfS6dFB8fj/LycsyePVvFZG+99Zbi
l7/8JV577TU8//zzeOqpp1Tc9s477yhX7ty5EzNmzEBhYaEahxvoayAIgiCc
PrDWIy0tDc3NzZg7dy4uu+wy3HfffcpB33zzDT788EPccccdKn6rr69HQEBA
97kch6ObJk+erFz1yiuv4J///Cd+85vf4JlnnlHt3H777bjtttuU17766iv8
7ne/UzHgnj17VNwWHBw84NdAEARBOH3gWNqQIUOwdetW3HzzzXjiiSeU0/7w
hz/gX//613G9xrrHESNGYNeuXcphjNE++ugjFbedffbZ6OrqwsSJE1XNCMfp
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
L1t7PGfSJOU8jquFh4bKftmCSyNeEwTXheNmdBrX6KfHuPfMgilT1Dr9jL9W
zJql9qJZpbls7cKFKk6jx5h7tHtt05IlGNfWppzIeW3cd3ugP5cg/BDEa4Lg
unAMjHWL+RkZGNXaemjcbNEibNbcxfwi/dXTYfbfyealS1U95KLOThXTsa6f
jpQaSMHVEa8JgutCD3EdxyF1dZgxbhzWzJ+vakF6Oq03r/F5xnDTx4xROUrW
/gcFBBwaV5NaEcHFEa8JguvCusXKwkI1l3pxV5fKKfacj3YsPb1mrxPheBzz
j7KHqHC6IF4TBNeF9fuMtZqrq1W8xvX4++I1Yt9rjWNr+ZmZat1IjtdJbb/g
6ojXBMF14T4y8dHRKMnJwcThw5Wr+uo1jsFxnePF06apmpMIq1Wtc8z5AgP9
uQThhyBeEwTXxRrqg7rqKMyYmoUtq1tw7a4p2LdnlgPX7pyLizcsUrWQ9rE3
/lRumz9f1fjn2mxqXzbZI1twdcRrguC6ZGf5YfOGeBx4KB8vPlOFX77ahHfe
aHXgiQdG4KqLu1Q8x7VFerpt45Ilah+24c3NKMnNVetnDfTnEoQfgnhNEFyX
6moj7rwjCfhv8XF5760aXHvpKCyZPv1QzeThOWx2t62cPVvN2eb+NMxrcozN
rY/zsu1rnRgMBvj6+sJkMin8/f27HxuNRnh5ean1Jjnnu2fbfMxjfN7Pz++4
sH0fLZ7ka/mex7Zj7wPfr2cf+DvP43os/flsJwr7mjDsN/ti7w/7e+znOPba
HvuZ+FjW7Tw+4jVBcF366rVXXizGmhXFav+ZKSNHqv1oWDu5lXMCNLex3uQc
7RjXJCnKzkZoSIgau3NW88/7brAW3yUkJKCsrAwTtLhvqRYPnq21uWrVKvVz
ifY+szVvNjY2Ii0tDVarVd3TeT7v6bzXx8TEoKGhAVOnTsW0adMwXfPvjBkz
HJisuXf48OGo1/ybmJgIb29v1Qfe53nPLykpwcSJEzFfc/dy7bOdc845qj8L
tDh19OjRyMnJQVBQkHr/U1Ufo9aE0d7PYrGoa7BIu9YLFy7ECO1aV1RUIDY2
Vl2D3s4N0b6Hcu07Gzt2rLqGK7S/Qfj5eB157aTGp3fEa4LguvTVa089kYXJ
E6MRqTmlqboa86dMUTnJzYfjtq091vNv1J7nnqIh2v1f56SGhPdWOq2qqgqz
Zs3Cj370Izz33HM4ePAg3njjDbzyyit4+umn8Ytf/AJr1qxBc3Mz0tPTERAQ
oGIU3s/po6KiIuXBW2+9FXfccQfuuusu3H333Q7s27cPO3fuxMqVK7XPXq3i
Mbs3wsLC0NXVhRtuuAGPPvooXnzxRdUH9ufAgQO44oorMFJzenx8PAIDA09Z
fQxjRL5fSkqKugZPPvkkHnvsMezevRtztL8l6GJeg97OTUpKUj675ppr1DV8
6aWX1OfjdewtZhUO/3cpXhMEl6WvXnvsQDpGdASrmpBCLR4b196OhZ2dDvWT
S7WYqF2LKVj3z/pI/XesPcL7KfOCjL2amppU/EFv8J798ccf47e//S1+85vf
KN5//328/fbbuOWWW7Bu3TqMGjUKqampKtbi/T48PByDBw/Gnj178Oqrryon
vvzyywrex4n9d/rp5ptvxgUXXKDO4fl0ZFZWFoYOHaqcR4/9+te/Pgr245FH
HsG5556rYp/c3NxuJ55sLzCPyLgrIyMDF198MT744APVn/3792P16tWoqamB
2Wzu9VybzaZiznvuuQevvfYa/vjHP+KBBx5QsR6vH+NU8Vov/32K1wTBZemr
1w48mobhwwKVp5JiY1GlxQi97Ze9XIu5uB6Xs31F6TTGPcw9rl27Fj//+c9V
bEaHfPTRR8pFvP8yLvnVr36F3/3ud3jzzTfxzDPPKP+1au9BJzLW4/2e+UXG
aL///e+VB/laOo5tEt7TX3/9dTz11FO47bbbsGPHDgwZMkTlQOlI5h0ZxzA2
/OSTT5RXn332Wdx///3Kh/z9vffeU8678847Va6T/fc+BfMajvUa+8LP+JOf
/ATr169HXV3dd3qN59B9jNV4Tb744gs8+OCD4jVn1zxWh5DxJsRq7rI9HIeC
z2wo1pxGCr/MUMfidlkR2uUP71RZN04Q/pfos9ceSUN7e4AaL7NaLEhPTlZr
QjIf2dNrXCN5vBbL1Wi+SoiOVnvd9Pa+HKMqLCxUsQ9zg5999hn+9re/Kacw
9/ezn/0Ml19+uXIN/cLjf/7zn/Gvf/1LuY35N/ooX/Mnx5g45vTEE0/g3//+
t/IiXcTX0WOEj+mkhx56CDfeeCPOO+885TXmHpkDZZ6OcRD7wfd555138NOf
/hSXXXaZchvd+vnnn+Ovf/2rcsOFF16ocp/0Iusw6Ht6wl7TYa9T4WPGdXbs
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
Rufk4Phw1hTZa7vt0pF77521rcQl+XBqTtSR8PnENptbHzII2jOha0HQceFz
8b1o21w9eqQfLrhg2qDik9mPRu5NDJKu0bhj998//aSieasNHpwW6tMnzyGY
qhVztIOgvRG6FgQdHzE8GtVlhhnS4MUXz3O41ZaMO9/N2iMbrblmWsq+ohUd
bE1tZBC0N0LXgqDjIyaZ90ubZpq0cMVn+/FKK6UdNt00a1u1rvm39bjKHmw+
X+u2B8H4EroWBJMOairEI3+0yCJpnVVXTfvsuON3dM0+NjtW9M4+AAvNN1/O
sdW6zUEwvoSuBcGkA5+t+yyz5PyZ+W72GK3WNfMArFsiFsmv6xS6FtQhoWtB
MOlA19Q6WlvEfqO7b731d3RNnaTaEfPd7LFdyznaQTChhK4FwaSDudYzdumS
1xVZ5kc/SrttueV3dE2NpNjkdhttlNcfmaFTp5q3OQjGl9C1IJh0aEnX+GvW
JVE7MqB///DXgrokdC0IJh1a0jVrJu+57bZp83XWyfu6dQpdC+qQ0LUgqF+6
dp0i9e8/XRoypHOzLLro9GnmmafM+bVZZ545r5W10jLL5LX8q3XtsJ/8JM9t
22D11fPeNVEPGdQjoWtBUL/QtEMOniPdeP38zXLcsT3TEkt0yuuPzDPnnGmJ
AQPS+hXtsvZ/ta7Zk23bjTZKqy+/fJq/on3TxTrBQR0SuhYE9QtfjG6lsUs2
y/339U0brD9TXg/YvLRVBw9O22y4Yd4zu1rX/NueNfYEmLdnzzRtzMsO6pDQ
tSCoX1qraw8/uHDaaos5U/eZZ87raPHJ+GrqRKp1TS0kX23BWB8yqGNC14Kg
fmmtrv3hkUXTTtv3znvWrLvKKulnu+yS9xqt3q8G5mmrJ5GDUzMS6/kH9Ujo
WhDUL63Vtaf+tEQ6eP9BaciSS+a9aKr9tOMPOijPWztkzz3TVhtskH640EJZ
0+wD0Jo9z4KgvRG6FgT1S2t17aXnhqTzfrle3hf74N13z/vTFF3js4k/ik1a
W0tdiXUkw1cL6pVp5p0qzbpllzRvRbv639MrDfp3/7RkRdOw+IiF82u9zpw9
zbZj1zTdQrFnRRC0J1qra8NfWT1dd9l3ax/tu2ZfUXvVWOt4jSFD0qL9+uV1
tmp9X0EwMfRadLq0zTFzpJPunz+d/nL/dNbIAemcLxfLnD1qYH7t5IcXSLv8
cs7Ub5lYUycI2hMTo2vHVnw2e2Tvt9NOef1+6xzP0b17zFkL6p6llp0hXXRF
7zT8g8XSG58OSv8cvXh6c8x/+Wrx/NrwEYulYTfNn1Zbs2vN2xsEwbdMjK4d
te++uX5k5803T0svtliaZaaZck4t4o9BvdPq+S/39k3rrRfxiSBoTyw+qGs6
+4x+6W9/XT698sJK6bWXV80aNi5/enDDdPm5u6bjDjggHVHx0Q7affe81sjm
666bVh8yJK8/EnOwg45C6FoQ1C99es2UdtxmsXTmyWuloedsmoZdsl32y8aF
pp1+9E9z3WPRs9UGD875NPuMdu3SJa9FUuv7CYK2IHQtCOoXe4Sq3VfLKE9m
Ttq4dSHqHdWG2DNU3HGztdfOx/Sdb77UrWvkFoKOR+haENQvcmJLDRyYNllr
rbwfKP36Zl5aRdMO22uvrHfqHc3HHrzEEmmRvn3zvqLWHonYY9ARCV0Lgvpl
phlnTD9aeOGsWfa+VgtSPS+Npm2/8ca5hn/B3r1T186d85xr6z5OFXPUgg5K
6FoQ1C/iiAP69Utrrbhi3kvtqH32+UbXzL22Lpa443KDBqU5Zp215u0Ngv8F
oWtBUL/QNft/rlnxx3bdYotcF1Kta7tvtVXaYLXV0hKLLprjjrVubxD8L1hu
cOd01bD50kejBqWPvlg8jfxqiTRyzLd4zXu33r5gWmvtGWve3iAIvqVbly5p
kYUWSmssv3zeD7Ra18y79traK62UY5XW5691e4Pgf0GsNxIE9UvoWhA0pFPv
qdI8282YFj1z9rT0A33Sim8vnFb5bNHMyh/+ML824IIeqffu3VKX/rHHYBC0
J0LXgqAhsZ5/ENQvoWtB0JDQtSCoX0LXgqAhoWtBUL+ErgVBQ0LXgqB+CV0L
goaErgVB/RK6FgQNCV0LgvoldC0IGhK6FgT1S+haEDQkdC0I6pfQtSBoSOha
ENQvoWtB0JDQtSCoX0LXgqAhoWtBUL+ErgVBQ0LXgqB+CV0LgoaErgVB/RK6
FgQNCV0LgvoldC0IGhK6FgT1S+haEDQkdC0I6pfQtSBoSOhaENQvoWtB0JDQ
tSCoX0LXgqAhoWtBUL+ErgVBQ0LXgqB+CV0LgoaErgVB/dKzR5e07poLpgP3
Xi6deuz6aehZO6SrLtgtc/m5O+fXDt1vSNp0/f6pT6/QtWDSIHQtCOqXgQO6
pBN/sUB69MGl058fXzG98Jc10kvPrpV58Zk182uPPbRMOvuMfmnwct1q3t4g
+F8QuhYE9cuQIZ3TjdfPn9LYJZvl/nv7pvXWC10LJg1C14KgfgldC4KGhK4F
Qf0SuhYEDQldC4L6JXQtCBoSuhYE9UvoWhA0ZJp5p0qzbtklzVvRrv739EqD
/t0/LVnRNCw+YuH8Wq8zZ0+z7dg1TbfQ1DVvbxAE3xK6FgQN6bXodGmbY+ZI
J90/fzr95f7prJED0jlfLpY5e9TA/NrJDy+QdvnlnKnfMp1q3t4gCL4ldC0I
GrLUsjOki67onYZ/sFh649NB6Z+jF09vjvkvXy2eXxs+YrE07Kb502prdq15
e4Mg+JbQtSBoSPwugqB+GfSjLulXpy2QnnlqqfTic0PSqy+tmoa/snrmtZdX
y6/99eml08UX9ksrDonfbzBpELoWBPXLPHN1SZtuuGA65rDl0rmnrZt+8+tt
0nWX7ZS5Zuj2+bVfHLF82naL/mnB+WMdrWDSIHQtCOqXWPc4CBoSuhYE9Uvo
WhA0JHQtCOqX0LUgaEjoWhDUL6FrQdCQ0LUgqF9C14KgIcsN7pyuGjZf+mjU
oPTRF4unkV8tkUaO+Ravee/W2xdMa609Y83bGwTBt4SuBUFDYr2RIKhfQteC
oCGdek+V5tluxrTombOnpR/ok1Z8e+G0ymeLZlb+8If5tQEX9Ei9d++WuvSf
pubtDYLgW0LXgqAhsZ5/ENQvoWtB0JDQtSCoX0LXgqAhoWtBUL+ErgVBQ0LX
gqB+CV0LgoaErgVB/RK6FgQNCV2rcyabLP1g+unTZN26pclmmSVN3r17ZrLO
ndMPpp46/WCKKf7zmVq3M/heCF0LgoaErtU5Fd2afM4505QDBqSpll46TV2x
b1MPHpymWGCB9IOK1v1g2mn/o221bmfwvRC6FgQNCV2rU/hgU06ZJuvUKWva
tOuvn6bfdtvUaeedU6eddsr6Ntncc6cfdO36H7+t1u0NvhdC14KgIaFr9clk
M8yQpujVK0295JKp6157pe4XXJDmuGZY6nHddWmOq3+Tulbs29RDhqTJ55sv
TUbb2kGbg7YndC0IGhK6Vp9MPuusaeqll07Tb7NNmn3o0NTnhefTgu+8nRZ8
9500/+uvpe4XXpim33rrNOUSS6TJuneveXuD74fQtSBoSOhafTJ5jznStKuv
njrvt1+a85ab04Lvv5cWTl9n+n76Sepx/XWp8777pmlWXSVN3rNnzdsbfD+E
rgVBQ0LX6pMp5porTb/B+mnGnx+Z5rrrzsqzev8bXev32ajU847bK8/02DT9
xhunKfv0qXl7g++H0LUgaEjoWn0y5bzzpE6bb5ZmOvGENPf996WFPhzxra59
/ll+bZZfnZ5m2H67NNVCC9a8vcH3Q+haEDQkdK0+CV0LELoWBA0JXatPQtcC
hK4FQUNC1+qT0LUAoWtB0JDQtfokdC1A6FoQNCR0rT4JXQsQuhYEDQldq09C
1wKErgVBQ0LX6pPQtQCha0HQkNC1+uR707XY96au6NmjS1p3zQXTgXsvl049
dv009Kwd0lUX7Ja5/Nyd82uH7jckbbp+/9SnV+haMGkQulaffG+6Fvve1BUD
B3RJJ/5igfTog0unPz++YnrhL2ukl55dK/PiM2vm1x57aJl09hn90uDlutW8
vUHwvyB0rT5pc12LfW/qkiFDOqcbr58/pbFLNsv99/ZN660XuhZMGoSu1Sdt
rWux7019EroWBA0JXatP2lrXYt+b+iR0LQgaErpWn7S5rsW+N3VJ6FoQNCR0
rT5pa12LfW/qk9C1IGjINPNOlWbdskuat6Jd/e/plQb9u39asqJpWHzEwvm1
XmfOnmbbsWuabqGoF2gvtLWuxXy4+iR0LQga0mvR6dI2x8yRTrp//nT6y/3T
WSMHpHO+XCxz9qiB+bWTH14g7fLLOVO/ZTrVvL3BfwhdCxC6FgQNWWrZGdJF
V/ROwz9YLL3x6aD0z9GLpzfH/JevFs+vDR+xWBp20/xptTWjDq69ELoWIHQt
CBoSv4v6JHQtwKAfdUm/Om2B9MxTS6UXnxuSXn1p1TT8ldUzr728Wn7tr08v
nS6+sF9acUj8foNJg9C1+iR0LcA8c3VJm264YDrmsOXSuaetm37z623SdZft
lLlm6Pb5tV8csXzadov+acH5Yx2tYNIgdK0+CV0LEOseB0FDQtfqk9C1AKFr
QdCQ0LX6JHQtQOhaEDQkdK0+CV0LELoWBA0JXatPQtcChK4FQUOWG9w5XTVs
vvTRqEHpoy8WTyO/WiKNHPMtXvPerbcvmNZae8aatzf4D6FrAULXgqAhsd5I
fRK6FiB0LQga0qn3VGme7WZMi545e1r6gT5pxbcXTqt8tmhm5Q9/mF8bcEGP
1Hv3bqlL/2lq3t7gP4SuBQhdC4KGxHr+9UnoWoDQtSBoSOhafRK6FiB0LQga
Ms2806Rum8+cepw4V1rwrn5psbeWSEuMWiYtWWHxEUunhe7un+b6VUXbtp81
TbvQdDVvb/AfQtcCzNytWxq0yCJpvdVWSz/Zfvt0fEXPTj/qqMwphx+efrrD
DmnjH/84Lb3YYmn2WWeteXuD4PtkyimnTNNMM03quUjPNGT/FdJWw7ZJ+z99
QDrhwxPT6aPPSGeNPied+enZ6bBnjki73rx7+vHRa6U+y/TJxzh2sskmq/k9
TMqErk3alN/v/PPNl7bYZJN0bEXDhp5/frrthhvSA7ffnh688850f+XvlRdf
nE49/vi0S0XzFqn4bPH7DToyvt8zzDBDWmSZRdKuJ++azn707HTza7ekpz57
Kr009uX0+tjX02ujX08P/POBdNVfrkqHXHRIWmaNZVLnzp3zsfG7qC2ha5M2
5fc76Ec/SoccdFC6/ppr0uOPPpqGv/pqevftt9MH772X3n/33fTXP/853V3R
t1NOPDGtuMIK8fsNOixTTDFF6tmzZxo4cGDafPvN0xm/OSPd88o96fn3nk/v
jX4vfVb5/1f+P/arNPzD4emJfz6RLr39irTDfnukgcsPTj0HLJqmn69PtoVN
MU2vuVPvRbunpZadMc/9borlBnfJn+vUZ65mz9fW1Hv7Vtps/rTGMeulH191
UFruz79PAz557/vTtS8+T/M+9oc02yUXpxl/9rM03Uor1X3/1XP7pundK809
cEAaOHhw2nqnndLFl1ySnvzTn9Lw115Ln3z8cRr95Zdp7JgxaUyFt//97/Ti
Cy+kayu6t8vOO6cBAwakHj16pKmnnrrmdigI2hLjtSFDhqS99947nXfReemh
Jx5K//zon+mDzz9In439j6aN9f+vx6aPv/g4vfPJO+nxl59J5990ffrpGb9K
Qw46MM2+3bbZDjbFrNtsnLY5dvl00ZUL5/VMmuKqYQvlz8274wbNnq+tqff2
/e72RdPNj6+Yrntx87Tvu1elwV/++/vTtS+/SH2efy71/P3vU/fzzksz7r9f
3fdfPbdvpq23Sqseckja98wz0oXXX5ceq/hk777zTvq4StO+/vrrNHbs2DRq
1Kg0YsSI9PRTT6ULLrgg7bXXXmnppZdOXbp0qbkdCoK2pFOnTmnLLbdMQ4cO
TY899lj6d2VM19L/3v7kk/Tg66+ni59+Km1d+S3NX/lNsYFN0etXx6STHto2
DR+xQrPrc300atn8uQHnHdHs+dqajtK+kWNXTud+fVFa7et/fVfXHrg/zXLW
manzDjtUdG2hFr8TU847b5phiy3SzKecnI+t1rX+X41O8w9/PfWq+AQ9b70l
db/owg7Tf/XYvp6/PC3tfNPv0uV/+XP64z/fyL/NFn+/b7+dHnzwwXTRRRel
DTfcMM0yyyw1t0NB0JaIsRu33XPPPWn48OF5nNfS/0ZWxoEvVcZ99/7rzfSz
Z/+afvTIw3lc3xQLP3xbOv3Vw9Ibo1Zv/nf75ZD8uWUeu77Z87U1HaV9jeqa
uOHjf0yzXX5Z6rrP3mnqRX7Y4ndiqvnnS1122SVrlmP7jvzoW10bOybr3AIV
G9rnby/k9ztK/9Vj+/o99GA6vOI/P/DWv9Lwjz5KH3/xRcu/35Ej04svvpju
vvvutNNOO6XZZ5+95nYoCNqSrl27psMOOyy98MIL6fPPP09fffVVi7+LL8aO
TR+MHp1eqvyGTvj0k7TCRx9mW9cUS3z4Rjr7s7PSm1+t07xdHrNS/tzKH/2t
2fO1NR2mfY3p2pdfpN7P/CX1uOH6NNNhh6ZpFlusxe/E1BWfbsZ990lzDLs6
H9v3k4+/1bWvx2afjV72HfVp1rwO03912L7FK5z+6afplcpv8fOv5MHHtvz7
rXz2gw8+yL/5/fffP+fXa22HgqAtoWtHHXVUeu2111r8PZT/Ub5PK/yzYud+
WWGV/9q8plj665HZ3r45dr3xtsv/Czpy+7KuPfdsmvOWm9NMP/95mmbQoBa/
E1P365e6HfCzrIWO7VsZu0yq/dfe27d0hXMrvFmh1b/fiv59WtHC119/PR18
8MFprrnmqrkdCoK2JHStY7fvG137/a1p5qOPStMuvniL34msawcekHr87sbQ
tXbevtC1IGgIXTvyyCPTyy+/nL/vY1sRxxj99ddp5Jgx6bXK50/58su00uef
5fqEpljy83fTOaPPS2+OWbfFOIvPrfL5q82er63pMO1rTtduvSXNfNTE+2s5
Djl2zH9ikaO/zPHIDtN/ddi+JSucVfkNvv7fGOTYr1vWt9GjR+cc29///vd0
4IEHhq4FHY6oG+k47WuqbqTXE39Ks1/1f7kmf+pFF23xOzHVAvOnrrvvnmYb
ekk+tu/HI7/VtagbaVftm9C6kZdeeinXjey8885pjjnmqLkdCoK2RJ3/1ltv
na644or0xBNPpHfeeafF38U7n36aHn3jjXT5M39J2918U1rwgvPz/Kim6HPe
yenkP+yYhn+4YvO/28+Wy58beMlxzZ6vreko7Wuqzn+eyrije+UZddlt1zRV
/34tfiem7N07dd522zTLmWfkYxf66MNvda3ip9G03k8/lea68440++WXdZj+
q8f2zX3O2Wm3236frqqML5+ojDP9Nlv8/VZ+44888ki69NJL0yabbJJmjbUi
gw7GtNNOm1ZZZZUcZ7/sssvSk08+md5///30ySefpC8rfpl1CsQm4bV33303
Pfn882lo5bd04MW/TqscfVTqsftuec5vU8y2y1Zp19NXScNuHpDuv7dvk9x6
+8L5c3322rzZ87U19d6+Bx4dmB56dki667WN08EjrkzLjx5nXvaDD6RZzz4r
dd5xxzRV31bOX9tyizTzqafkY78zL3v0l9lPo2mz/frXqdshh9R9/9Vz+2bZ
eaf04+OOTYdecnG6/Pbb8m+zxd9v5Td+ySWXpAMOOCAtv/zyORdRazsUBG2J
dU979eqV1x0wl8X8bH7bq6++mj788MNvav/F5L326KOPpksuvzztss8+aek1
10y9llk6zbDwwnkdi6aYrt8Cqd+yPdNqP54lrbdetyZZa+2Z8ue6LDxfs+dr
a+q9fRvusmDa7NR10ubX7ZdWfvaWNPDTcdbRMi+74nvNsMP2rZ6X3WmLzdNM
J5/UYF52mQ/HT6Np01e+A/Xef/Xcvun69Ut9ll0mLVN5Djv99Cdp6H/jLs3+
fiuatssuu+Tf/Nxzz53XHKq1HQqCtsb3Wp5t0KBB6aCDDkrDhg1LDz/8cI7B
v/nmm3mMJ3bx0EMPpcsrmmacV9bfiXVTa0+sezxpE7/fIGjIN/vU9OyZ14q0
rtbuu++ev/+HHnporpc84ogj0m677Zbj8WIXZZwX+1zUntC1SZv4/QZBQ3yv
4Xsu1t69e/e8zrf6X9//eeaZJ6NuSo7ZZ8o4L34TtSd0bdImfr9BEHQ0QteC
IAiCjkToWhAEQdCRCF0LgiAIOhKha0EQBEFHInQtCIIg6EiErgVBEAQdidC1
IAiCoCMRuhYEQRB0JELXgiAIgo5E6FoQBEHQkQhdC4IgCDoSoWtBEARBRyJ0
LQiCIOhIhK4FQRAEHYnQtSAIgqAj0dY6NMXcc6XpN9wgdTv6qDTX3XelhUZ8
8O35PhuV5rrzjjTT8b9I02+2aZpyvvlqfv9BEARBx6LNda1HjzTtGmukLj/b
P/W89Za00PvvfXO+vqM+TXPeeEN+b5rVV09TzDVXze8/CIIg6Fi0ta5N3r17
mnr55VOnnXdOc1x9dZr/9ddT308/ySz47jtp9ssuTdNvv32acqml0uSzzVbz
+w+CIAg6Fm2ta5N16ZKmWGCBrG1d99kndb/wwjTHNdekHtdfV9G536Sue+2V
pqZpc8+dJpthhprffxAEQdCxaPM6j6mnTj/o1i1NVtGtqYcMSdNvvXWaYY89
UueKxnX+6U/TNBW9y37aNNOkH0wxRc3vPwiCIOhYtLmu0appp00/6No1TT7f
fGnKJZZIU1X0bepVVknTrLxymkKtyHTT1fy+gyAIgo5Jm+vaZJP9R9sqfttk
FW2brHv3NHmPHmnynj0zXgs/LQiCIPi+iPlmQRAEQUcidC0IgiDoSISuBUEQ
BB2J0LUgCIKgIxG6FgRBEHQkQteCIAiCjkToWhAEQdCRCF0LgiAIOhJTzD5b
mnalFVOXXXZJ3Sv6NfctN6deFS3DPHfekV+zpuN0a6ye96CpdXuDIAiCoDkm
m366NMWcc6ap+vVL0y27bJrhxz9Onddb7z+ss3Z+beqFF86aFusUB0EQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBK1l8sknT927d08LLrhgGjBgQFpyySXTUkst
leaZZ5403XTTZbw/99xzp9lmmy1169YtderUKU055ZQ1b3sQBEEQjMs000yT
Bg8enH7yk5+k448/Pp1//vnpoosuSptssknq0aNHxvsbbbRRGjJkSFp00UWz
5nXu3LnmbQ+CIAiCceF7bbnllumSSy5JDz30UPr73/+ehg8fno444oi0wAIL
pIUWWihtu+226eijj0477bRT+vGPf5wGDhyYZplllpq3PQiCIAjGpVrXHnnk
kfTaa6+lN998Mx111FFZ05ZYYol0zDHHpJtvvjmdfvrpae+9905rrbVW9tlq
3fYgCIIgGJeia0OHDk2PPvpo9tX+/e9/Z/+sb9++acUVV0yXXXZZevXVV7O2
/fKXv0zbb7991rxatz0IgiBoP6jXUHuhDoNGqNdQt9GvX79cozHDDDN85/PT
TjttrtuYb7750g9/+MPsR/Xv3z/NPPPM+TwzzTRTmmuuufK5Fl988ZwLKyy/
/PJpueWWy9eYf/7506yzzprPP9VUUzXQtTfeeCO99957Oce28cYbp7322ivd
c889aeTIkenpp59ON910U87Drbnmmvl6M844Y76+fFvv3r3TYostlutO5OSq
27Dsssvm67s/15966qnTFFNMke9NO7p06fJN/Yp7017txtJLL53vadCgQfk9
uM+ePXvm+5YjnGyyyfI9OYd2iJWWc5Q+0AbH6sPqPmjt89Jm+Ub9ri3ON+49
en3hhRdOs88++zftKsfrqwl5Ro4V99Vu/ef8/rrX6vY39TnfG233jPr06ZN+
9KMf5Typ90utULm299yfdjp/+W6O25eer3sQq9Ynnp/nWfpJ2+edd978ffD8
yveh+tjyDLt27frNdyEIgvrFb5+msCtiexdccEHWiwMPPDDrCftT/Xm2ie8k
x/Xzn/88nXvuuenggw/OdpoNYcc32GCDtO+++6azzz47XX/99emGG25IN954
Y7r22mvTVVddlS688MK02267ZfvL9rNFjenaRx99lGOSl156abruuuvSyy+/
nL788sv07rvvZr/tzjvvzHHK9ddfP9vGYi+32WabdPLJJ6df//rX6be//W2+
NrTliiuuyNd3f2wkPVJryQ5qB/vI5v30pz/N96a9zuH62nbmmWemM844I513
3nn5/X322Sett9562Q7TANrqnpxbO0488cT0m9/8Jp9DP/h75ZVX5uN32WWX
7/RBS89KG2mUNq+xxhq537XHPZV7hPNr42GHHZZWXnnlPOZgr2kb/VlkkUVy
n43vM3Jt2rDzzjvn/nN+f/UXTSjtbOxzBx10UNYTmkrvdthhh3Taaael4447
Lh1++OHpF7/4Rf7uuba/Ys2O2XDDDfNxvptqia6++ur8LLRXW6+55prcB3vu
uWce4xiPeJ6+1/pJ232vfB88v2HDhn3nWPfv3Ouuu26OC0w//fQ1/00GQTDh
sHP8LzZp1VVXzXG+f/zjH1lL2Di6ZdxffQybRNPY9Lvuuiu9+OKL2U6wP3wD
Nv7II4/M9uNvf/tb+uKLL9Jnn32WRo0alT7++OP0wQcfpNdffz1rDtu2zDLL
pDnmmCNr4lZbbfUdXfv000/zZ//85z/nc40YMSJ9/fXXacyYMemrr77KOnf5
5Zen/fffP9vvOeecM+sJm/jEE0/kY13z888/zzjfO++8k3N32rzddttlHeRb
sIPav8IKK2S9+b//+7/00ksv5Ws6xyeffJL++c9/pueffz6jn1555ZX8ObZ7
nXXWyTaUXWTT3Zt2PPbYY+nDDz/M59AH/E26rC6Gdoil6gPXbul50STPqlev
XllPxWOfe+659Pbbb+c+Lvfp/H/961/Tbbfdlnbffffsd+lf9p4+sf/qccb3
GRl7GOvQAtpyyy23ZE3ceuut83intFMfNPY5Ou8++Ui/+tWv0lNPPZVrhO64
4478nTNW0d/61fOjPb5Lnge90+fGOp6Ftnqe8Dx8d30P+GC00xjHd5XmnnLK
KelPf/pT+te//pWfRTnWeV544YV87jIG8F0oY4Ba/z6DIJgw+Be0jT1gZ9ly
NvHJJ5/M/15ppZXyZ8pvXdyIj3T33Xdn2+Pzt956a44T0gR2SIzw8ccfzzaD
/Wbbf//736f77rsv6+Bbb72VtYtdPfTQQ3O8kD2hM3yzoms0QDvYRraPHo0e
PTrbNrk3NpE/xK5uvvnm2ZYa47sWu8zeaaPz3X///fn6zz77bK5HYefOOeec
7JOwfWJYNNzxfKo//vGPuQ2uqQ0PPPBA+stf/pJtr/aLkdITNpt/W/SJv0BL
3Ee5nraw4eKoDz/8cNZjNtZ/8+WKv8vPaS4Oxu/Sxk033TT7LuKx+lNb7733
3twff/jDH/K16JX75xfSJv4d3wts+O9+97vxfkauT5suvvjibz7ruey4447f
0WX653mIIVd/znhIPzuXdvnuuJa20jL9bezgfrSPb1Z83fI8tJUG0mzjHf3o
GWk/HfQdEj8X9+Qvesa+qzSx3Kd/6zvPUhuc2xiBLnqGjcXfgyCoH2iV+Jbc
hfE1O+f3zl6wLeIzdK/kV9gkcSI2gn1mF9gstYrsFv+FDWEX2dUSR+T7nXXW
Wdnuvv/++1kTXINfyNdj79hH4+6ia8bWbBC/hx9HI/gjjtNOPpdYGv9jjz32
yPrCDnuP30HT2ET2VVwO9M212U86wN9zXXHMtddeO4/dnZ9u8u1ck73kn9I2
92Wsz8cx3nc+/aYd+oq2uw4/ymf1pXPwV8TdaIJ26QPXcJ/Oz89lS/mNTfkK
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
rq7xEfWHa5b+b0zX5DppiZhn0TV5QtqijqTUM/KxfA+0r8yFKGsKVK8PY2xT
anzE0Y0bPE99TT/FGtSZ6HPoB22gdfpRbNa11MjU+jcZBMHEQ9vEI+XQ6Jca
sgKbwP7Af7NncllyR2oyxJHYP/aDltAoY+fq8/N92D85JHanxLjEgugITWpN
HLJa18o6IyXHwlbRY3kh9pctVmthDE+P2E/jePrlvtg4tqxoqtf5Uvy1ajtK
18zf4hOoBef7jKtrfFZtoxvitPpBHlBtPd9Sv9JeOTI1L+7BmMF9yxWaa0E3
aWljz4eu0ht5JvfrPGpC1AeC/6wv+Uj6lU/Nbrs//mWZszWhz0ifiOWW/BqN
0N/uq1rX6C9tcW80zXXHR9fEk9Xm6GPt9TzUA/GfvV/8Z3kycx98/8TJ+ZNi
pWKv7q3UUnpG+ppeiVFqr++ONnoO5XtnbKEekq6Ou85OEAT1S3XO3/iVRvB9
5JzYFzaOLeMHlPUjjJPF4dgRPhC7SWPUtpX1F2lmWQPCHC+2hPbQEfFHcbKy
PkVLumYc73j2SfyRvZc/YkO9D/aQnVLPKPemnXxROSzaI7dF3+iaPA67xyeh
Se6X/1jya3RGrJNNpis0Shsa0zX1JPqAr2bOFr2Sk+NnqXWkw3wBNRI0Thv5
vWKL2kgTmpqbzS+hCeKgahbdmxpK7eS3it/pR3k2mq19+thz8W9aNjHPiAbw
o+iVe9N/tI2m0hd95Fz62Wv6wjX5Tfy21ugaXVWnJOZNP33f+Nfi1PpNjtNY
g7a5pteMG5yvzFfkZ/r+lvodrxmDydup7XV/BfcpL0fDjRPU24itt2b9lyAI
6gM2Q72ecat8UaltKOsOsRXstzExrTFmLmuQ0Av2ky00942doHl8EOfl27Eb
xtR0odS4O5YtEy+jXc3pGm2lRfI92lhsndgp+yjmpJaC7TbGV4chVupzai7o
j3tyfjFC5xJboy1sNhvsPmmd9rOFYlw0xfH8IzbU+avrIdnSsr4hH4muaQ8f
h3ao25Obo4vmSrie/BN9cH061dLau7RRfI9f5j74TvrM+fkXbDa95J/yt8s6
mu6XzedjTcwzUl/K59H3nhFNojtqc/Sz58TPo7V0wnXksFzftYwHGtM15y+6
Vr22pOfhHNXPw3fTOMH4y1iAJqnR1B5jMN9Z34WSX/OM9LExkzwgn5hmaadn
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
ErE19XdqU9SL00x2tbqttITNZjddg23l65b6kAntg+q+kJcs2kIv2X5+r3sb
16duy2dUNNY56JP70990tC3ubdz7VKvp3J4XPXaPNFEfN7e/dfWe8PRVX7lX
f8Uqy7rWtf69BEHQ/mFT2Tcaw3awQWxt8U0mZlxc/Lcyn7j6Pedlx1yH7rk+
mzaunXUce+Y9dpxd5quok5CLUdOhNkGeTPyLjyZ2JfenzqGsMSgOxxfkF7hu
dVtcgwa7Bv3RFm0q9SFt4RsUP7b4PWXfAG1pSVcm9hkVv4i2ub+2vrdqnNO5
tde13GNZe6Sl+yw+pnY6zr36SyuLH1vr30sQBEFbUdbHMnYXT1SfWGoS1EOU
dQPLupjqFKDegL7J+/DVyjqStb6fIAiCYNKmOq4pJ6X+Um2cGjo1meYKlBp2
c8XUaIpTql9QOy92Rxdb4zcEQRAEwf+CEk+Tf1EzUdaDV4evVr/MOVCTTtPU
0albUI9QajlD04IgCIL2htyNGg81feYaqA1X8y6vZn0mPppcm/p8NSARewyC
IAjaM/wuNR7qL9QtmuelxtA6Ivw4MUd14WrO+Wn8vPDTgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgqD9ob5P/bq1lNS9+2v9IesQ1UvtX5mPZo0k91Da
PyH1iz7vXGW9Yeez/hLUTpY+cq2yflRb9FNZ56tcB64zofcRBEEwqWJdQfuu
mZts/w5ztawvZd1fdrXW7WuJsla8OdPWI7ZHivWLreFozfaypnxrz1f2THW8
vWHsSWNfFOuS2OfF3mb6yDr91pi0RiI9mtD1EcseQdasdE570biOPWfsC2P9
/om9RhAEwaRCWTednbYP5EMPPZT3GjMv2foa1sStdRtbgg7RNPPOzKu2HpY9
ycrene6hNXvCFHzePG3H29PMGiRlTS1rbJX9l83Xtt6/fQT4VhM6X7vs6Wpd
fXsKWH/Zdez1bE1mY4yJvUYQBMGkApvKF7B/aFmz/umnn8623Pob1oqvdRtb
wpr09paxHjEdsD4xfeZ78jnNuRbLa6kfylr/juG72pvm1ltvzXtM2z+88OKL
L+Y1trx35JFHZp/OHij0dUJinmKm/E0aaZ9P+07bx3r06NHpqaeeynuq2ovG
/jLj7lcWBEEQfJdqXbO/GE3gK9x999153zGaUOs2Ntd2cTk6ZJ/me+65J2vO
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
R/Z3vvnmm9N1112X7aS9Mdk++6U99NBDea/Rf/zjH3n/5+aw56a9sh955JG8
h/bWW2+d91njF9T6XluCRtE0mqwP7BtnL7m11147r+Pc2DF80759+6ZVV101
7zduP2x7Y9s7HPYLHzZsWN4LbYkllvgm/zW+bSt7AW2yySZ577bf//73ed9t
fW4P0TfeeCNjv/KyR7fre572Y6Or9kTnU9pjwN7f9kS1P57zaKP95LxfT/51
EAQBqvd25mNcdtllee9mNth/21PUHmp8Ntpkn+vPPvssffTRR+ndd9/NttPn
7cvsLy0ruuc9+zTbF/u2227Le0rzV9j+9rYHWNkHVE7RvjHul7/F1tvH+pZb
bkm//e1v01ZbbZW1oPrYUqvBF+WX6jMa8uKLL+Y9sovGP/vss+nJJ5/Me4ry
sWibuN/47E9DO/lbnglfzJ7mzz//fO7rt99+Oz8f/37uuefy9e1zbn/yd955
J/3lL3/Je5pqn2etvb179857yPLLPW+6+Ic//CHtv//+eZ/UOeecM/KrQRDU
FcbjbJv9wMQY6dlbb72V7d+uu+6afQ9+XNE1NnrEiBFZwx577LF0ww035D2g
zz777HTeeeelCy+8MA0dOjRdccUVWcvY1g8++CDb9T/96U/p3HPPzbEwtrK9
1CbQWPkluUS23D7Te+21V97nm79FIx5//PF8P/yaan+zulbDfmqnnHJKevjh
h7O20DS6op/0K5+J/vBh9ZtYIb+I/9cajfcZMU7xTG3jO9Mh56RZDzzwQPq/
//u/PH5wbn3tOTz66KNZ27THvficmCVtsxccnRR3PPHEE/P79Nd5+Of2PHVv
tX5GQRAErYW+yHvJrZx++uk5DvXee+9lDTOOZ+tB19hLusYvYKv5L3wGez+L
MbL5cjM0QfxO7M7Yn659/PHH2c/jX4if8Y1a2nv7fwV95TfRNDk09pw20zIa
/uGHH2Zdvu+++/L92d+7HEsT+Xj2w7YPttjj559/nvuQ5tBy/XTRRRfleKy+
0x+0iGbuvffeOdfWUm298Qe/jnZecsklOc74/vvvp08//TSfi24aU8jnyblt
sMEGabvttkv77bdfuuqqq9IzzzyTfWef/+STT9K1116b86f2L3fv/EDPjCbz
vT3fm266KZ/D/baH5xQEQdASJQa58cYbZw2Sp3n66afzeF29h/2t1dKpJ6nW
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
xn7epu7JfwH+R/5Wml0sTV6Q/RT23vFdymk9zNluRVEU+4Sce8lvJhaE0+Qm
yBHnn2z9pAsXOTeBLku+iNx+eZ/iqeJ0S/HToiiKfQZuk8shp0B+Q/Id1p3j
XJz/4Belyfib5anak2H/Iv1Gw9Oa2+z9K4qi2CdkD5O8Pznu8vPVBuGn2nXb
is55URTFtkgOgVx2ufhywPkgN51ZWZy/6JwXRXEhIzVI2Dr72vio/Ctnctdt
KzrnRVEURVEURVEURVEURVEURVEURVEURVEURVEURbGK5MHJfVMf0rkmakSq
07sJ9jqpiay+lnoU+1TD9yhI3V/70u1RVp9YTf5ATXz9VStfzUd1pcZ6WHIJ
nWvjfDJ72J3D5hrjJG/e2LqnPWHOhLNnbLWGh/xDcyG/3jkKnuda9wDnJ6ir
b67UCDlKLS7tdH9nLJg77cr94ZJLLpnODPB8n9PG1TqWxsp+becW6at2ujZj
5R7ufdFFF02fy3mp/s3Zpf7uOatQ7ybws/7ac2D/gWd515bOWPcOep45NE/G
zpgZL2dOGNtxf/l4HqzPpQ/6nv3oq32XK6rWp7k1x8av5/cUxf6AzfI9ZeOc
Bfbkk09OZ4W++OKLBy+99NJaPPvss9N5JnfeeedUl8L3ep9qHh5lLNjOK6+8
ctqX7Jw1516r/Zyz1x555JGDe+655+Dyyy+fbCduY6vZSvu/2E9nrDojTV3N
p59+ehonZyQYW/d0Ro21A9uJm8Y2sLu4Ai+o8WJ83cPZaTlvWx1ic8XGs7nb
1gHBVe7vTFdz98QTT0z31k7/OiPvwQcfPLj55psnW4/r1bccn4M/cLRzeJxl
pJ2uz3ipMeneznHDT/g+Z8TifWfj3HXXXdN5EeB5gZ8feuihg4cffvjggQce
mPqrFrPza43rpZdeOvVhrsYmLtIu5487JzdjdtNNN82eL6Rf5uv222+fPufz
+qDv2o3zxrqYnmfN46xC9eXMsdosziJqnbmi2A/4jlvHWjs7B9OZ0M5RDn7/
/feD33777Qyc8+x3zmhW79+Zz6+99tpkg63N59a3+w72mp3Gy2o+4y22zVmg
P/zwwwRnXDvr2rktzuF05gFuoNvYatfnnDZneuL9L7/88uDbb7+dzuX87rvv
prF1TzbfWZ80r9r+ns9egrmw/scXTz311HQGnvOs3eP777+fziV15utjjz02
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
7jq8R/9Zr+A4P3tf2H58Yu3jc0u85neu4xfkA/fueT7t6BpjZGy3ea+T/2mO
5LjgVn5ibTQ31ijj+0cj0s2eR+f5DnjfvKvWOd4BffLu40ltjF/zuGO+RVEc
HUv1RtQTAboie1X9O4Ld8d1ni6192RG2b6znMIJ+wiXyBPlv8KN7HBap/UEj
sD+bcgjoBrZS7ElcRPyLFgBaiD4TTxrrWbFP9t+GP2gpfjacIz4jLsZGs/9s
nPW6dozPxYW4znNxt+vYVGNoPFOzBR/RAOKHxo9u8Fn3HnP3cl88oJ36xS57
vnnAj3hJPGkdr60CF/ML0mjxj2qne/7xxx/TmHsfzBN+oPXoZBpIW3Gez+Jh
OaFyIu2XMLbag8uTN+9z1kf06yqvpV/Ggs/R+2TtgBP5hunedXsY5uD+1jSe
R+PjJ/Nm/WXPoP54lj7gNvOL8+j15BHhd33gS6BnaTkcT3PjddeZY/Ox6+9x
URT/YM4PKR7u+86+iuGwzbSKHEk5CuB36iX6zuMYa2B+KvZpqf6xuAgesgcK
3/AnimdtC7pErsVSDkFqUukTG8u/l1opNANkH4M24KDE63CctTk7lpqBbH70
iXW9n+UAujb1KMbn00TugzPZUH7b7OlyrdgcG8tmug/+ktMopsOmG3dchafG
2i1zvIYr8QXbTcPRnIede7afDlIvyp4N/eWnM7/aIjeCHqNLzLPYGh3KJ2ht
gBf4K70r/HWpSaNd7L81z99//z1x5BKvJQfTu+OenmusjQ3/Kq7Ep3N71dbB
XLpO7JK/21rIWGUtwmfuWXzCxlouiP7zT5o7/bXG0HfvvvHVN5zmPaDx3IuP
csk/URTFbjDHa9lbJX7G9osB8TGy49a54HfsqPU7XcNHROfM1aJdfR495/Ns
Nh/gtqBh2PelHILU8cMrfE3W3db/tBafGNAC7KwYUOJS2o/TaA56g612rc/L
jTE2bLl4IJ0j3kPXrerF7KFir/lJcaZxsp9XnJAWc098gAu0gQ+MfWUv8Rr/
L5u+idfwI78dX5m8j21yzd0vZwe4Jx+s3FTza82CC/AWjSy/Qh6G8aFh9cc4
aGt80eJRxhisjej9U6dOreU1Y44XaFbvH97wTM8Wy9JPY7ht3mtikfjS2sKz
tQHf8mMbM/qUJvU3feHbztkU1k/WH9pCy+F6axrfDfNGa9N+2uf7s+vvcVEU
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
59c8rncc31szyG+Rk2n8Ej8dz2TL562/jKV93TSbcZEv4hpjSuPS4a0xUhT7
Cbwm1sQ/SD+xvWw5vxN7yObHFl1oiJ8ytaFwDr8bDbJt7RNxSH5bMUM8OJ7z
HPjZNTgp57uw32MexVy8aaz1Qmu4B77iWxOvwofJSVmtc5L26SPNxu9Hk/Hl
ivG5f/TL2E6cR6/hNLwk3oQ7xbzE3/hl2XfcpT3jPVyfOjR40mez732sMWLs
8S1tmfqMxm+uhsvZQNxP7kj0buK5q30b3ws5P2JnfKrGKuen0qZ8xb4Xu35/
i6KYB9uSc2PYRPFwdlFMxnc3NnPX7TwXSF0SvlF+Jf5EMTF+zm1rn9jTTHfK
nUx9ETqEpmL/6UH55HQOnxx/Hb8dv9yYR2EecqYNHyYfoWvpCvbVPeTvmSdc
an7EtZIjkzon8vnEjdI+faRb7H3AbTlXB7dqJ3+wdvqX7vQMf+cjZffllSTH
UpyP1pZDSgP5LG5KP8Xm+FxdT+fhKGujUdtk7O0XS21oY2L85mq4nA2yx1C/
5dF4Fr+uGNnYt/Ga1NK0zjBWfBfWB9pI+xn3Xb+/RVEsI3ty2cfsT7PGTc72
he5rYcP0l6Zg/45S+yQ1JXNeAc4RM6MRxLv8a+3Pj8q/5Tl08uqaIXuj8Q99
xYbiD74/+SvuQXuxxfzHoy92rs7JWJsF5O7FF4yf+DD5ULWRTzQ8hov0A7/Q
Mu477lfwDO+JPHdayLrA9ThAfgmO59v2fPywlP8xjr0+G7+5Gi5n+36nzo0x
8yz98qyxb+M1Gc+s+cZ1wdy8FUVRXMigD3CeWJT8QHbfv+qZsI/ilZtq+LKz
7Klr1Aihweg4P/v9cZyLkjiSHEVtxJd0mDgY272p1nDO8MYVdI17aKvcTHqm
+5WLoiguDIz75th8usC/+IxmoJk25br4Ox3hGtem3gst4/fHkbMw1prSRsCZ
0Z+bcnKiaUatqq2p2XE2+6mLoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiK
oiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiK
oiiKoiiKoiiKoiiKoiiKoiiKoiiKo+F/m6HMng==
    "], {{0, 606}, {438, 0}}, {0, 
    255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{131.4140625000004, Automatic},
  ImageSizeRaw->{438, 606},
  PlotRange->{{0, 438}, {0, 606}}]], "Input"],

Cell[TextData[{
 "The above screenshot came from the online app at ",
 StyleBox["https://falstad.com/circuit/",
  FontSize->14,
  FontSlant->"Italic"],
 ". The current it shows agrees with the old formula for current, I=E/R, and \
was captured after the resistance had plenty of time to decay. And that\
\[CloseCurlyQuote]s all it is, except that there is a time constant to apply. \
The time constant becomes ever smaller as the operation time increases. Since \
the problem description talks in terms of a constant state, it seems the time \
constant would become vanishingly small, leaving merely I=E/R=",
 StyleBox["4.8 amps.",
  Background->RGBColor[0.88, 1, 0.88]]
}], "Text",
 CellChangeTimes->{{3.768248962028112*^9, 3.76824902798542*^9}, {
  3.76825201303487*^9, 3.768252046496257*^9}, {3.76825221944355*^9, 
  3.768252345534012*^9}, {3.76831586955326*^9, 3.768315892356907*^9}, {
  3.768321170315639*^9, 3.7683211712539682`*^9}}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.772894664013473*^9, 3.772894664572103*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"rangex", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"0.4", ",", "3.3", ",", "0.1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rangey", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"0.5", ",", "2", ",", "0.1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Graphics", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"LightGreen", ",", 
      RowBox[{"Rectangle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "4.15"}], "}"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.7", ",", "0.7", ",", "0.7"}], "]"}], ",", 
      RowBox[{"Thickness", "[", "0.001", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.4", ",", "j"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"3.3", ",", "j"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "0.5", ",", "2", ",", "0.1"}], "}"}]}], "]"}], 
       "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.7", ",", "0.7", ",", "0.7"}], "]"}], ",", 
      RowBox[{"Thickness", "[", "0.001", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"j", ",", "0.5"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "2"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "0.4", ",", "3.3", ",", "0.1"}], "}"}]}], "]"}], 
       "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1.3", ",", "3.1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.3", ",", "2.7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.65", ",", "2.7"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Circle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1.76", ",", "2.7"}], "}"}], ",", "0.1", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.85"}], ",", "\[Pi]"}], "}"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Circle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1.89", ",", "2.7"}], "}"}], ",", "0.1", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.85"}], ",", 
          RowBox[{"\[Pi]", "+", "0.85"}]}], "}"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Circle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2.02", ",", "2.7"}], "}"}], ",", "0.1", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.85"}], ",", 
          RowBox[{"\[Pi]", "+", "0.85"}]}], "}"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Circle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2.15", ",", "2.7"}], "}"}], ",", "0.1", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Pi]", "+", "0.85"}]}], "}"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2.25", ",", "2.7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.7", ",", "2.7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.7", ",", "3.85"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.22", ",", "3.85"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.18", ",", "3.75"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.11", ",", "3.92"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.06", ",", "3.75"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "3.91"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.95", ",", "3.75"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.9", ",", "3.91"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.87", ",", "3.85"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.3", ",", "3.85"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.3", ",", "3.42"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Disk", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.3", ",", "3.42"}], "}"}], ",", "0.04"}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"White", ",", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1.3", ",", "3.42"}], "}"}], ",", "0.03"}], "]"}]}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"Disk", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.3", ",", "3.1"}], "}"}], ",", "0.04"}], "]"}], "}"}], ",", 
    
    RowBox[{"{", 
     RowBox[{"White", ",", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1.3", ",", "3.1"}], "}"}], ",", "0.03"}], "]"}]}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<E(t)\>\"", ",", "Medium"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.2", ",", "3.26"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<R\>\"", ",", "Medium"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.05", ",", "3.99"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<L\>\"", ",", "Medium"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.99", ",", "2.54"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<RL-circuit\>\"", ",", "17"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2.35"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.4", ",", "2.2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.4", ",", "0.5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3.4", ",", "0.5"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.4", ",", "0.8"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.5", ",", "0.8"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.4", ",", "1.1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.5", ",", "1.1"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.4", ",", "1.4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.5", ",", "1.4"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.4", ",", "1.7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.5", ",", "1.7"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.4", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.5", ",", "2"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.9", ",", "0.5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.9", ",", "0.6"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1.4", ",", "0.5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.4", ",", "0.6"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1.9", ",", "0.5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.9", ",", "0.6"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2.4", ",", "0.5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.4", ",", "0.6"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2.9", ",", "0.5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.9", ",", "0.6"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<0.02\>\"", ",", "Medium"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.9", ",", "0.4"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<0.04\>\"", ",", "Medium"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.4", ",", "0.4"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<0.06\>\"", ",", "Medium"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.9", ",", "0.4"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<0.08\>\"", ",", "Medium"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.4", ",", "0.4"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<0.1\>\"", ",", "Medium"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.9", ",", "0.4"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<0\>\"", ",", "Medium"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.4", ",", "0.4"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.2", ",", "0.6", ",", "0.85"}], "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.4", ",", "1.24"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.9", ",", "1.24"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.2", ",", "0.6", ",", "0.85"}], "]"}], ",", 
      RowBox[{"BezierCurve", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.4", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.55", ",", "1.1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.4", ",", "1.26"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.9", ",", "1.24"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.2", ",", "0.6", ",", "0.85"}], "]"}], ",", 
      RowBox[{"BezierCurve", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.4", ",", "0.5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.55", ",", "1.3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.4", ",", "1.22"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.9", ",", "1.24"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.2", ",", "0.6", ",", "0.85"}], "]"}], ",", 
      RowBox[{"BezierCurve", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.4", ",", "0.8"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.55", ",", "1.23"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.4", ",", "1.24"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.9", ",", "1.24"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Currents in problem 3\>\"", ",", "17"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.9", ",", "0.2"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<5\>\"", ",", "Medium"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.3", ",", "2"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<4\>\"", ",", "Medium"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.3", ",", "1.7"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<3\>\"", ",", "Medium"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.3", ",", "1.4"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<2\>\"", ",", "Medium"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.3", ",", "1.1"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<1\>\"", ",", "Medium"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.3", ",", "0.8"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<t\>\"", ",", "Medium"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.4", ",", "0.38"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Current I(t)\>\"", ",", "Medium"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.8", ",", "2.2"}], "}"}]}], "]"}], "}"}]}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.768083479020103*^9, 3.76808403492486*^9}, {
   3.768084094180152*^9, 3.768084334369253*^9}, {3.768084386385055*^9, 
   3.768084624606366*^9}, {3.768084660406908*^9, 3.768084827278695*^9}, {
   3.768084866710799*^9, 3.768084925002849*^9}, {3.768084961281863*^9, 
   3.7680850051120653`*^9}, {3.7680850522479897`*^9, 3.768085083156805*^9}, {
   3.768085130947517*^9, 3.76808537448223*^9}, {3.76808540800149*^9, 
   3.7680857789882803`*^9}, {3.768085812059127*^9, 3.768085850786024*^9}, {
   3.768085890536262*^9, 3.768085977061173*^9}, {3.768086012091916*^9, 
   3.768086033116487*^9}, {3.768086138816682*^9, 3.768086348896195*^9}, {
   3.768086380936808*^9, 3.7680864434528017`*^9}, {3.76808659366529*^9, 
   3.768086959954921*^9}, {3.768087008251094*^9, 3.768087071095158*^9}, {
   3.768087168651729*^9, 3.768087306830812*^9}, {3.7680873390241833`*^9, 
   3.768087387636153*^9}, {3.768087467251029*^9, 3.768087624083638*^9}, {
   3.768127012143403*^9, 3.76812708454204*^9}, {3.768127388300222*^9, 
   3.768127643519952*^9}, {3.7681279459094954`*^9, 3.768128109416383*^9}, {
   3.768128145518455*^9, 3.768128146061687*^9}, {3.768128202835864*^9, 
   3.7681282349836273`*^9}, {3.768128299221058*^9, 3.768128342464333*^9}, {
   3.768128396102624*^9, 3.7681284300184593`*^9}, {3.768128464368579*^9, 
   3.768128464887949*^9}, {3.768128521700658*^9, 3.768128707967067*^9}, {
   3.76812874627136*^9, 3.768128758787575*^9}, {3.7681288651422586`*^9, 
   3.768128959781855*^9}, {3.768128996997664*^9, 3.768129012074299*^9}, {
   3.768129049833249*^9, 3.768129051391824*^9}, {3.768129476004407*^9, 
   3.768129495297166*^9}, {3.76812957563787*^9, 3.768129583187105*^9}, {
   3.768134438534479*^9, 3.768134440318084*^9}, {3.768134510475156*^9, 
   3.768134527171337*^9}, {3.7681345663675327`*^9, 3.768134746881722*^9}, {
   3.768134777288312*^9, 3.768134821028945*^9}, {3.768135330098836*^9, 
   3.768135484136548*^9}, {3.7681355553719673`*^9, 3.76813556397082*^9}, {
   3.76813561012949*^9, 3.768135618640463*^9}, {3.768135695316687*^9, 
   3.7681357577816668`*^9}, {3.7681358018438883`*^9, 
   3.7681358162655287`*^9}, {3.7681358669441013`*^9, 3.768135937345335*^9}, {
   3.768135977288488*^9, 3.768136085447207*^9}, {3.7681361298148727`*^9, 
   3.7681361929598207`*^9}, {3.768136306413776*^9, 3.7681363203108873`*^9}, {
   3.768136632834638*^9, 3.76813663416934*^9}, {3.7681366829902477`*^9, 
   3.768136683334229*^9}, {3.7681367171889277`*^9, 3.768136783120379*^9}, {
   3.768136821550785*^9, 3.768136824244686*^9}, {3.7681368748181562`*^9, 
   3.768137084602956*^9}, {3.7681371857978897`*^9, 3.768137306020006*^9}, {
   3.768137352747044*^9, 3.768137355160679*^9}, {3.768137431612178*^9, 
   3.768137454914013*^9}, {3.768137621118573*^9, 3.7681376998093157`*^9}, {
   3.7681378114588223`*^9, 3.768138081264462*^9}, {3.768138118158698*^9, 
   3.768138307464293*^9}, {3.7681383379663258`*^9, 3.768138407665595*^9}, {
   3.768138439233837*^9, 3.768138447582841*^9}, {3.768138481900525*^9, 
   3.768138537784725*^9}, {3.768138577389846*^9, 3.768138739530651*^9}, {
   3.768138770905349*^9, 3.7681387879683867`*^9}, {3.768138855051762*^9, 
   3.768138864226232*^9}, {3.7681389405663223`*^9, 3.768138983195364*^9}, {
   3.7681393047895527`*^9, 3.768139312732459*^9}, {3.7681393474820004`*^9, 
   3.7681394685937233`*^9}, {3.768139530156802*^9, 3.7681395311884737`*^9}, {
   3.768139582833515*^9, 3.768139624648608*^9}, {3.768139662869515*^9, 
   3.7681397413502407`*^9}, {3.7681397916116247`*^9, 3.768139802066996*^9}, 
   3.7681398436504087`*^9, {3.768139880317812*^9, 3.768139981669797*^9}, 
   3.76814002812422*^9, {3.76814132001058*^9, 3.768141488925385*^9}, {
   3.768141533883486*^9, 3.768141627159483*^9}, {3.768141675228788*^9, 
   3.7681417048035793`*^9}, {3.768141742628516*^9, 3.76814174455402*^9}, {
   3.768149199544088*^9, 3.7681492427144547`*^9}, {3.7681542035328083`*^9, 
   3.7681542210727453`*^9}, {3.7681543104078007`*^9, 3.768154326259905*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.88, 1, 0.88], RectangleBox[{0, 0}, {4, 4.15}]}, 
   {RGBColor[0.7, 0.7, 0.7], Thickness[0.001], LineBox[CompressedData["
1:eJxTTMoPSmVmYGAQAGImKJ41EwRu2jOAwQP7NDDgcoDxYfLGYPAYLg/jw+Qh
4s/g8jA+TB5Cv4TLw/gw+bNnQOANXB7GR3XfBzT3fUAz/yOa+R/h8iZg936G
y8P4qPZ/QbP/C5r/vqH57xua+36gue8Hmvt+ornvJ5r7fqO57zea+/6gue8P
XD4dLP4PLg/jo7qPwQHVfQwOAL8Y44E=
     "]]}, 
   {RGBColor[0.7, 0.7, 0.7], Thickness[0.001], 
    LineBox[{{{0.4, 0.5}, {0.4, 2}}, {{0.5, 0.5}, {0.5, 2}}, {{
       0.6000000000000001, 0.5}, {0.6000000000000001, 2}}, {{
       0.7000000000000001, 0.5}, {0.7000000000000001, 2}}, {{0.8, 0.5}, {
       0.8, 2}}, {{0.9, 0.5}, {0.9, 2}}, {{1., 0.5}, {1., 2}}, {{1.1, 0.5}, {
       1.1, 2}}, {{1.2000000000000002`, 0.5}, {1.2000000000000002`, 2}}, {{
       1.3, 0.5}, {1.3, 2}}, {{1.4, 0.5}, {1.4, 2}}, {{1.5, 0.5}, {
       1.5, 2}}, {{1.6, 0.5}, {1.6, 2}}, {{1.7000000000000002`, 0.5}, {
       1.7000000000000002`, 2}}, {{1.8000000000000003`, 0.5}, {
       1.8000000000000003`, 2}}, {{1.9, 0.5}, {1.9, 2}}, {{2., 0.5}, {
       2., 2}}, {{2.1, 0.5}, {2.1, 2}}, {{2.2, 0.5}, {2.2, 2}}, {{
       2.3000000000000003`, 0.5}, {2.3000000000000003`, 2}}, {{2.4, 0.5}, {
       2.4, 2}}, {{2.5, 0.5}, {2.5, 2}}, {{2.6, 0.5}, {2.6, 2}}, {{2.7, 
       0.5}, {2.7, 2}}, {{2.8000000000000003`, 0.5}, {
       2.8000000000000003`, 2}}, {{2.9, 0.5}, {2.9, 2}}, {{3., 0.5}, {
       3., 2}}, {{3.1, 0.5}, {3.1, 2}}, {{3.2, 0.5}, {3.2, 2}}, {{
       3.3000000000000003`, 0.5}, {3.3000000000000003`, 2}}}]}, 
   {Thickness[0.004], LineBox[{{1.3, 3.1}, {1.3, 2.7}, {1.65, 2.7}}]}, 
   {Thickness[0.004], 
    CircleBox[{1.76, 2.7}, 0.1, 
     NCache[{-0.85, Pi}, {-0.85, 3.141592653589793}]]}, 
   {Thickness[0.004], 
    CircleBox[{1.89, 2.7}, 0.1, {-0.85, 3.991592653589793}]}, 
   {Thickness[0.004], 
    CircleBox[{2.02, 2.7}, 0.1, {-0.85, 3.991592653589793}]}, 
   {Thickness[0.004], CircleBox[{2.15, 2.7}, 0.1, {0, 3.991592653589793}]}, 
   {Thickness[0.004], 
    LineBox[{{2.25, 2.7}, {2.7, 2.7}, {2.7, 3.85}, {2.22, 3.85}, {2.18, 
      3.75}, {2.11, 3.92}, {2.06, 3.75}, {2, 3.91}, {1.95, 3.75}, {1.9, 
      3.91}, {1.87, 3.85}, {1.3, 3.85}, {1.3, 3.42}}]}, 
   DiskBox[{1.3, 3.42}, 0.04], 
   {GrayLevel[1], DiskBox[{1.3, 3.42}, 0.03]}, DiskBox[{1.3, 3.1}, 0.04], 
   {GrayLevel[1], DiskBox[{1.3, 3.1}, 0.03]}, InsetBox[
    StyleBox["\<\"E(t)\"\>",
     StripOnInput->False,
     FontSize->Medium], {1.2, 3.26}], InsetBox[
    StyleBox["\<\"R\"\>",
     StripOnInput->False,
     FontSize->Medium], {2.05, 3.99}], InsetBox[
    StyleBox["\<\"L\"\>",
     StripOnInput->False,
     FontSize->Medium], {1.99, 2.54}], InsetBox[
    StyleBox["\<\"RL-circuit\"\>",
     StripOnInput->False,
     FontSize->17], {2, 2.35}], 
   {Thickness[0.004], LineBox[{{0.4, 2.2}, {0.4, 0.5}, {3.4, 0.5}}]}, 
   {Thickness[0.004], LineBox[{{0.4, 0.8}, {0.5, 0.8}}]}, 
   {Thickness[0.004], LineBox[{{0.4, 1.1}, {0.5, 1.1}}]}, 
   {Thickness[0.004], LineBox[{{0.4, 1.4}, {0.5, 1.4}}]}, 
   {Thickness[0.004], LineBox[{{0.4, 1.7}, {0.5, 1.7}}]}, 
   {Thickness[0.004], LineBox[{{0.4, 2}, {0.5, 2}}]}, 
   {Thickness[0.004], LineBox[{{0.9, 0.5}, {0.9, 0.6}}]}, 
   {Thickness[0.004], LineBox[{{1.4, 0.5}, {1.4, 0.6}}]}, 
   {Thickness[0.004], LineBox[{{1.9, 0.5}, {1.9, 0.6}}]}, 
   {Thickness[0.004], LineBox[{{2.4, 0.5}, {2.4, 0.6}}]}, 
   {Thickness[0.004], LineBox[{{2.9, 0.5}, {2.9, 0.6}}]}, InsetBox[
    StyleBox["\<\"0.02\"\>",
     StripOnInput->False,
     FontSize->Medium], {0.9, 0.4}], InsetBox[
    StyleBox["\<\"0.04\"\>",
     StripOnInput->False,
     FontSize->Medium], {1.4, 0.4}], InsetBox[
    StyleBox["\<\"0.06\"\>",
     StripOnInput->False,
     FontSize->Medium], {1.9, 0.4}], InsetBox[
    StyleBox["\<\"0.08\"\>",
     StripOnInput->False,
     FontSize->Medium], {2.4, 0.4}], InsetBox[
    StyleBox["\<\"0.1\"\>",
     StripOnInput->False,
     FontSize->Medium], {2.9, 0.4}], InsetBox[
    StyleBox["\<\"0\"\>",
     StripOnInput->False,
     FontSize->Medium], {0.4, 0.4}], 
   {RGBColor[0.2, 0.6, 0.85], LineBox[{{0.4, 1.24}, {2.9, 1.24}}]}, 
   {RGBColor[0.2, 0.6, 0.85], 
    BezierCurveBox[{{0.4, 2}, {0.55, 1.1}, {2.4, 1.26}, {2.9, 1.24}}]}, 
   {RGBColor[0.2, 0.6, 0.85], 
    BezierCurveBox[{{0.4, 0.5}, {0.55, 1.3}, {2.4, 1.22}, {2.9, 1.24}}]}, 
   {RGBColor[0.2, 0.6, 0.85], 
    BezierCurveBox[{{0.4, 0.8}, {0.55, 1.23}, {2.4, 1.24}, {2.9, 1.24}}]}, 
   InsetBox[
    StyleBox["\<\"Currents in problem 3\"\>",
     StripOnInput->False,
     FontSize->17], {1.9, 0.2}], InsetBox[
    StyleBox["\<\"5\"\>",
     StripOnInput->False,
     FontSize->Medium], {0.3, 2}], InsetBox[
    StyleBox["\<\"4\"\>",
     StripOnInput->False,
     FontSize->Medium], {0.3, 1.7}], InsetBox[
    StyleBox["\<\"3\"\>",
     StripOnInput->False,
     FontSize->Medium], {0.3, 1.4}], InsetBox[
    StyleBox["\<\"2\"\>",
     StripOnInput->False,
     FontSize->Medium], {0.3, 1.1}], InsetBox[
    StyleBox["\<\"1\"\>",
     StripOnInput->False,
     FontSize->Medium], {0.3, 0.8}], InsetBox[
    StyleBox["\<\"t\"\>",
     StripOnInput->False,
     FontSize->Medium], {3.4, 0.38}], InsetBox[
    StyleBox["\<\"Current I(t)\"\>",
     StripOnInput->False,
     FontSize->Medium], {0.8, 2.2}]}]], "Output",
 CellChangeTimes->{
  3.768140042552833*^9, 3.768141398112483*^9, 3.768141428921632*^9, 
   3.768141458949519*^9, {3.768141592117073*^9, 3.768141628421311*^9}, 
   3.768141675901671*^9, 3.768141705964525*^9, 3.768141746109954*^9, {
   3.768149217173153*^9, 3.768149244297991*^9}, {3.768154206880086*^9, 
   3.768154222070627*^9}, 3.768154328096848*^9}]
}, {2}]],

Cell[TextData[{
 "When there are a lot of variables to watch, the Manipulate command is the \
only way I know to get an overview. The box below is based on the material at \
",
 StyleBox["https://www.electronics-tutorials.ws/inductor/lr-circuits.html",
  FontSize->14,
  FontSlant->"Italic"],
 " and may not agree with the text in detail."
}], "Text",
 CellChangeTimes->{{3.768312010489023*^9, 3.768312107041129*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eye", "[", 
   RowBox[{"vee_", ",", "are_", ",", "ell_", ",", "tee_"}], "]"}], "=", 
  RowBox[{
   FractionBox["vee", "are"], 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"are", " ", "tee"}], "ell"]}]]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.768260172204135*^9, 3.768260214145866*^9}, {
  3.768260299998865*^9, 3.7682603397736263`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "-", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"are", " ", "tee"}], "ell"]}]]}], ")"}], " ", "vee"}], 
  "are"]], "Output",
 CellChangeTimes->{
  3.768308745180148*^9, 3.7683090432209263`*^9, 3.768309096132156*^9, {
   3.768310083003488*^9, 3.7683101048060827`*^9}, 3.768314594535337*^9, 
   3.768314633389971*^9, 3.7683212205408583`*^9, 3.770115486494066*^9, 
   3.770154517251905*^9, 3.773755451185864*^9}]
}, Open  ]],

Cell["\<\
It takes some time for the current to reach its max value. From t=0.4 on in \
the green grid below, the circuit current is nominal.\
\>", "Text",
 CellChangeTimes->{{3.768314868432506*^9, 3.7683149209240637`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tee", ",", 
       RowBox[{"eye", "[", 
        RowBox[{"48", ",", "10", ",", "0.25", ",", "tee"}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"tee", ",", "0", ",", "0.6", ",", "0.1"}], "}"}]}], "]"}], ",", 
   
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7683145965761967`*^9, 3.7683147484635067`*^9}, {
  3.76831478457336*^9, 3.768314821042901*^9}, {3.76831494831645*^9, 
  3.7683149646105223`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"0.`", "0.`"},
    {"0.1`", "4.712084933334076`"},
    {"0.2`", "4.798389779386068`"},
    {"0.30000000000000004`", "4.799970507780705`"},
    {"0.4`", "4.799999459831161`"},
    {"0.5`", "4.799999990106463`"},
    {"0.6000000000000001`", "4.799999999818794`"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.7683147854885483`*^9, 3.768314822277747*^9}, {
   3.768314956306218*^9, 3.768314965708529*^9}, 3.7701154899502068`*^9, 
   3.77015452159517*^9, 3.773755454281242*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"veel", "[", 
   RowBox[{"vee_", ",", "are_", ",", "ell_", ",", "tee_"}], "]"}], "=", 
  RowBox[{"vee", 
   RowBox[{"(", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"are", " ", "tee"}], "ell"]}]], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.768260368595525*^9, 3.768260415508218*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"are", " ", "tee"}], "ell"]}]], " ", "vee"}]], "Output",
 CellChangeTimes->{
  3.768309033274946*^9, {3.768310085522481*^9, 3.768310107559963*^9}, 
   3.768321225149577*^9, 3.770115494912059*^9, 3.770154525439603*^9, 
   3.773755458907115*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{"eye", "[", 
         RowBox[{"vee", ",", "are", ",", "ell", ",", "tee"}], "]"}], "]"}], 
       ",", 
       RowBox[{"Abs", "[", 
        RowBox[{"veel", "[", 
         RowBox[{"vee", ",", "are", ",", "ell", ",", "tee"}], "]"}], "]"}], 
       ",", 
       RowBox[{"Abs", "[", 
        RowBox[{"eye", "[", 
         RowBox[{"48", ",", "10", ",", "0.25", ",", "tee"}], "]"}], "]"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"tee", ",", "0", ",", "5"}], "}"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<I=\!\(\*FractionBox[\(V\), \(R\)]\)(1-\!\(\*SuperscriptBox[\(\
\[ExponentialE]\), \(-\*FractionBox[\(R\\\ t\), \(L\)]\)]\))\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(V\), \(L\)]\)=V(\!\(\*SuperscriptBox[\(\
\[ExponentialE]\), \(-\*FractionBox[\(R\\\ t\), \(L\)]\)]\))\>\"", ",", 
        "\"\<L=0.25H,R=10\[CapitalOmega],E=48V\>\""}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0.1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "10"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<time\>\"", ",", "\"\<current I\>\""}], "}"}]}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "0.5"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"are", ",", "1", ",", "200"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"ell", ",", "0.01", ",", "10"}], "}"}], " ", ",", 
   RowBox[{"{", 
    RowBox[{"vee", ",", "1", ",", "50"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.768308937667624*^9, 3.768308979810814*^9}, {
   3.7683091148434753`*^9, 3.768309115113492*^9}, {3.768309152647565*^9, 
   3.768309184189086*^9}, {3.768309219763927*^9, 3.76830925732828*^9}, {
   3.768309385633567*^9, 3.768309454931188*^9}, {3.76830959176962*^9, 
   3.768309729184969*^9}, {3.7683103165167923`*^9, 3.768310345529613*^9}, {
   3.768310755809552*^9, 3.7683108023569183`*^9}, 3.7683109127200327`*^9, 
   3.76831096569592*^9, {3.768311059318521*^9, 3.768311113921091*^9}, {
   3.768311218924816*^9, 3.768311228058106*^9}, {3.7683114592917147`*^9, 
   3.768311638160284*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`are$$ = 1, $CellContext`ell$$ = 
    0.01, $CellContext`vee$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`are$$], 1, 200}, {
      Hold[$CellContext`ell$$], 0.01, 10}, {
      Hold[$CellContext`vee$$], 1, 50}}, Typeset`size$$ = {
    850., {137., 147.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`are$1208$$ = 
    0, $CellContext`ell$1209$$ = 0, $CellContext`vee$1210$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`are$$ = 1, $CellContext`ell$$ = 
        0.01, $CellContext`vee$$ = 1}, "ControllerVariables" :> {
        Hold[$CellContext`are$$, $CellContext`are$1208$$, 0], 
        Hold[$CellContext`ell$$, $CellContext`ell$1209$$, 0], 
        Hold[$CellContext`vee$$, $CellContext`vee$1210$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{
         Abs[
          $CellContext`eye[$CellContext`vee$$, $CellContext`are$$, \
$CellContext`ell$$, $CellContext`tee]], 
         Abs[
          $CellContext`veel[$CellContext`vee$$, $CellContext`are$$, \
$CellContext`ell$$, $CellContext`tee]], 
         Abs[
          $CellContext`eye[
          48, 10, 0.25, $CellContext`tee]]}, {$CellContext`tee, 0, 5}, 
        PlotLegends -> {
         "I=\!\(\*FractionBox[\(V\), \(R\)]\)(1-\!\(\*SuperscriptBox[\(\
\[ExponentialE]\), \(-\*FractionBox[\(R\\ t\), \(L\)]\)]\))", 
          "\!\(\*SubscriptBox[\(V\), \(L\)]\)=V(\!\(\*SuperscriptBox[\(\
\[ExponentialE]\), \(-\*FractionBox[\(R\\ t\), \(L\)]\)]\))", 
          "L=0.25H,R=10\[CapitalOmega],E=48V"}, 
        PlotRange -> {{0, 0.1}, {0, 10}}, AxesLabel -> {"time", "current I"}, 
        AspectRatio -> 0.5], 
      "Specifications" :> {{$CellContext`are$$, 1, 200}, {$CellContext`ell$$, 
         0.01, 10}, {$CellContext`vee$$, 1, 50}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{918., {229., 238.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.768312440372881*^9, 3.768321229083045*^9, 
  3.770115499860161*^9, 3.7701545284523087`*^9, 3.773755462487113*^9}]
}, Open  ]],

Cell["\<\
5.  LC-Circuit. This is an RLC-circuit with negligibly small R (analog of an \
undamped mass-spring system). Find the current when L=0.5 H, C = 0.005 F, and \
E = Sin[t] V, assuming zero initial current and charge.\
\>", "Text",
 CellChangeTimes->{{3.768141873642478*^9, 3.768141955774252*^9}, {
  3.770213014259574*^9, 3.7702130193634253`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"LightGreen", ",", 
      RowBox[{"Rectangle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "2.4"}], "}"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1.3", ",", "1.1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.3", ",", "0.7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.65", ",", "0.7"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Circle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1.76", ",", "0.7"}], "}"}], ",", "0.1", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.85"}], ",", "\[Pi]"}], "}"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Circle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1.89", ",", "0.7"}], "}"}], ",", "0.1", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.85"}], ",", 
          RowBox[{"\[Pi]", "+", "0.85"}]}], "}"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Circle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2.02", ",", "0.7"}], "}"}], ",", "0.1", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.85"}], ",", 
          RowBox[{"\[Pi]", "+", "0.85"}]}], "}"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Circle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2.15", ",", "0.7"}], "}"}], ",", "0.1", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Pi]", "+", "0.85"}]}], "}"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2.25", ",", "0.7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.7", ",", "0.7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.7", ",", "1.85"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.05", ",", "1.85"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "1.85"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.3", ",", "1.85"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.3", ",", "1.42"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2.05", ",", "1.77"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.05", ",", "1.92"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Circle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1.8", ",", "1.85"}], "}"}], ",", "0.2", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.4"}], ",", "0.39"}], "}"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Disk", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.3", ",", "1.42"}], "}"}], ",", "0.04"}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"White", ",", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1.3", ",", "1.42"}], "}"}], ",", "0.03"}], "]"}]}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"Disk", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.3", ",", "1.1"}], "}"}], ",", "0.04"}], "]"}], "}"}], ",", 
    
    RowBox[{"{", 
     RowBox[{"White", ",", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1.3", ",", "1.1"}], "}"}], ",", "0.03"}], "]"}]}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<E(t)\>\"", ",", "Medium"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.2", ",", "1.26"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<C\>\"", ",", "Medium"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.025", ",", "2.01"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<L\>\"", ",", "Medium"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.0", ",", "0.51"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<LC-circuit\>\"", ",", "17"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "0.25"}], "}"}]}], "]"}], "}"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQA2IQfahGWU5T+I2jedJBeRCt0zRPFUQ3sHipgeiCvTZa
IFpg6zIHEC24U9AVRKdqBbmD6DcR+8NBdIyiUySI9pp1NhZEHzqSkwmidzwR
LQXRu24rV4NoI+Vl9SCae0vadBCtfe/wch0Q/ap1BYj+5sSxFkTrfLsMpkVY
Pm4E0efu/dwFok8rfjoIok+YsJ0E0WcK9p4D0f6TllwC0QkdMtdB9Lz1bG9B
9J2G2j8gOuV0OYMukF7iacAKom+VMIqBaKeHWtIg2nFOngKINrh+Uw1Ea01k
NAfRC0+1OYBoK/d5/iC65tDJYBDdONUhAUSfYm9PA9GlEfV1IPpclfp0sHrW
cDANAPb8kbg=
  "]],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.88, 1, 0.88], RectangleBox[{0, 0}, {4, 2.4}]}, 
   {Thickness[0.004], LineBox[{{1.3, 1.1}, {1.3, 0.7}, {1.65, 0.7}}]}, 
   {Thickness[0.004], 
    CircleBox[{1.76, 0.7}, 0.1, 
     NCache[{-0.85, Pi}, {-0.85, 3.141592653589793}]]}, 
   {Thickness[0.004], 
    CircleBox[{1.89, 0.7}, 0.1, {-0.85, 3.991592653589793}]}, 
   {Thickness[0.004], 
    CircleBox[{2.02, 0.7}, 0.1, {-0.85, 3.991592653589793}]}, 
   {Thickness[0.004], CircleBox[{2.15, 0.7}, 0.1, {0, 3.991592653589793}]}, 
   {Thickness[0.004], 
    LineBox[{{2.25, 0.7}, {2.7, 0.7}, {2.7, 1.85}, {2.05, 1.85}}]}, 
   {Thickness[0.004], LineBox[{{2, 1.85}, {1.3, 1.85}, {1.3, 1.42}}]}, 
   {Thickness[0.004], LineBox[{{2.05, 1.77}, {2.05, 1.92}}]}, 
   {Thickness[0.004], CircleBox[{1.8, 1.85}, 0.2, {-0.4, 0.39}]}, 
   DiskBox[{1.3, 1.42}, 0.04], 
   {GrayLevel[1], DiskBox[{1.3, 1.42}, 0.03]}, DiskBox[{1.3, 1.1}, 0.04], 
   {GrayLevel[1], DiskBox[{1.3, 1.1}, 0.03]}, InsetBox[
    StyleBox["\<\"E(t)\"\>",
     StripOnInput->False,
     FontSize->Medium], {1.2, 1.26}], InsetBox[
    StyleBox["\<\"C\"\>",
     StripOnInput->False,
     FontSize->Medium], {2.025, 2.01}], InsetBox[
    StyleBox["\<\"L\"\>",
     StripOnInput->False,
     FontSize->Medium], {2., 0.51}], InsetBox[
    StyleBox["\<\"LC-circuit\"\>",
     StripOnInput->False,
     FontSize->17], {2, 0.25}]}]], "Output",
 CellChangeTimes->{{3.768142872744076*^9, 3.768142901305848*^9}, {
   3.768142935728182*^9, 3.7681429615593863`*^9}, {3.7681430151007843`*^9, 
   3.768143036136594*^9}, 3.7681493176075172`*^9, 3.768149359906777*^9, 
   3.7681494154631557`*^9, {3.768149447778319*^9, 3.768149465000167*^9}, {
   3.768149562506061*^9, 3.7681495773587427`*^9}, {3.768149624498129*^9, 
   3.7681496548694572`*^9}, {3.768149767029018*^9, 3.768149865026018*^9}, {
   3.76815012176659*^9, 3.7681501938234253`*^9}, {3.768150240228252*^9, 
   3.768150276430612*^9}, {3.768150327489636*^9, 3.7681504579348173`*^9}, {
   3.768150546972999*^9, 3.768150559392468*^9}, {3.768150623702086*^9, 
   3.768150653754081*^9}, {3.7681507205122004`*^9, 3.7681507869185543`*^9}, {
   3.7681508415605593`*^9, 3.768150871110889*^9}, {3.7681509158019333`*^9, 
   3.768151028757114*^9}, 3.768151228547265*^9}]
}, {2}]],

Cell[TextData[{
 "I ran across a couple of snippets, including one from the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " documentation, suggesting that state space modeling would be a good way to \
look at circuits in Mathematica. I use it here."
}], "Text",
 CellChangeTimes->{{3.7683123167014227`*^9, 3.768312409310183*^9}, {
  3.7701364766262693`*^9, 3.770136515061975*^9}, {3.770146408172477*^9, 
  3.770146412770996*^9}, {3.770146916708824*^9, 3.7701469248742437`*^9}}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.772894680988798*^9, 3.772894681435186*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"eqns", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"eL", " ", 
       RowBox[{
        RowBox[{"q", "''"}], "[", "t", "]"}]}], "+", 
      RowBox[{"aR", " ", 
       RowBox[{
        RowBox[{"q", "'"}], "[", "t", "]"}]}], "+", 
      RowBox[{
       FractionBox["1", "cC"], " ", 
       RowBox[{"q", "[", "t", "]"}]}]}], "\[Equal]", 
     RowBox[{"Vee", "[", "t", "]"}]}], "}"}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"m1", "=", 
  RowBox[{"StateSpaceModel", "[", 
   RowBox[{"eqns", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"q", "[", "t", "]"}], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"q", "'"}], "[", "t", "]"}], ",", "0"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Vee", "[", "t", "]"}], ",", "0"}], "}"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"q", "'"}], "[", "t", "]"}], "}"}], ",", "t"}], 
   "]"}]}]], "Input"],

Cell[BoxData[
 TemplateBox[{"0","1","0",RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"cC", " ", "eL"}]]}],RowBox[{"-", 
     FractionBox["aR", "eL"]}],FractionBox["1", "eL"],"0","1","0",
   InterpretationBox["\[InvisibleSpace]", None],{
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2}, {{
     Control`CommonDump`$DUMMY$}, {Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
    Automatic, 1, 1, 2, 1, {}, {False, False}, False, Automatic, None, {",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"q", "[", "t", "]"}], ",", "0"}], "}"}], ",", 
         SubscriptBox["\[FormalX]", "1"]}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{"Vee", "[", "t", "]"}], ",", "0"}], "}"}], "}"}], ",", 
     "Automatic", ",", "t"}},{}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3}, {#4, #5, #6}, {#7, #8, #9}}, 
        AllowedDimensions -> {3, 3}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, "Columns" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #10, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 2}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{4, 5}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{3, 3}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{6, 6}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{7, 8}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{9, 9}, ","], "}"}], "}"}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"q", "[", "t", "]"}], ",", "0"}], "}"}], ",", 
         SubscriptBox["\[FormalX]", "1"]}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{"Vee", "[", "t", "]"}], ",", "0"}], "}"}], "}"}], ",", 
     "Automatic", ",", "t", ",", "SamplingPeriod", "->", 
     RowBox[{#10}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellChangeTimes->{3.770144353269897*^9}]
}, Open  ]],

Cell["\<\
Here I put in the given parameters, taking the opportunity to equate the \
resistance with zero.\
\>", "Text",
 CellChangeTimes->{{3.770146438546074*^9, 3.7701464756487513`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ms", "=", 
  RowBox[{"m1", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"cC", "\[Rule]", "0.005"}], ",", 
     RowBox[{"eL", "\[Rule]", "0.5"}], ",", 
     RowBox[{"aR", "\[Rule]", "0"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.7701443797114677`*^9, 3.770144402629148*^9}, {
  3.770145285562131*^9, 3.770145286064172*^9}}],

Cell[BoxData[
 TemplateBox[{
  "0","1","0",RowBox[{"-", "400.`"}],"0.`","2.`","0","1","0",
   InterpretationBox["\[InvisibleSpace]", None],{
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2}, {{
     Control`CommonDump`$DUMMY$}, {Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
    Automatic, 1, 1, 2, 1, {}, {False, False}, False, Automatic, None, {",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"q", "[", "t", "]"}], ",", "0"}], "}"}], ",", 
         SubscriptBox["\[FormalX]", "1"]}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{"Vee", "[", "t", "]"}], ",", "0"}], "}"}], "}"}], ",", 
     "Automatic", ",", "t"}},{}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3}, {#4, #5, #6}, {#7, #8, #9}}, 
        AllowedDimensions -> {3, 3}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, "Columns" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #10, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 2}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{4, 5}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{3, 3}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{6, 6}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{7, 8}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{9, 9}, ","], "}"}], "}"}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"q", "[", "t", "]"}], ",", "0"}], "}"}], ",", 
         SubscriptBox["\[FormalX]", "1"]}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{"Vee", "[", "t", "]"}], ",", "0"}], "}"}], "}"}], ",", 
     "Automatic", ",", "t", ",", "SamplingPeriod", "->", 
     RowBox[{#10}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellChangeTimes->{{3.7701443743745823`*^9, 3.770144404012825*^9}, 
   3.770145287594838*^9}]
}, Open  ]],

Cell[TextData[{
 "The way to get output from a state space model is to use the command ",
 StyleBox["OutputResponse", "Input"],
 ". Since the voltage depends on a periodic function, I drop the V for the \
input field, the voltage, because it is just a label. "
}], "Text",
 CellChangeTimes->{{3.770146495470244*^9, 3.7701465359442883`*^9}, {
  3.770146622339973*^9, 3.770146684002142*^9}, {3.770146970560544*^9, 
  3.770146978584408*^9}, {3.770147268633367*^9, 3.770147273126587*^9}, {
  3.7701477543427477`*^9, 3.770147775446344*^9}, {3.770213055098477*^9, 
  3.770213074913538*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"outz", "=", 
  RowBox[{"OutputResponse", "[", 
   RowBox[{
    RowBox[{"{", "ms", "}"}], ",", 
    RowBox[{"Sin", "[", "t", " ", "]"}], ",", "t"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.770144445461206*^9, 3.770144473724625*^9}, 
   3.77014517365375*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1.460819769243627`*^-17", "+", 
     RowBox[{"0.05263157894736842`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"0.`", "\[VeryThinSpace]", "+", 
        RowBox[{"0.09523809523809523`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      
      RowBox[{"Cos", "[", 
       RowBox[{"20.`", " ", "t"}], "]"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"0.`", "\[VeryThinSpace]", "+", 
        RowBox[{"1.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"19.`", " ", "t"}], "]"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"20.`", " ", "t"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"0.`", "\[VeryThinSpace]", "+", 
        RowBox[{"0.9047619047619048`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"20.`", " ", "t"}], "]"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"21.`", " ", "t"}], "]"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1.665334536937735`*^-16", "-", 
        RowBox[{"7.216449660063514`*^-17", " ", "\[ImaginaryI]"}]}], ")"}], 
      " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"20.`", " ", "t"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"19.`", " ", "t"}], "]"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2.2468799307890076`*^-17", "+", 
        RowBox[{"6.608470384673586`*^-19", " ", "\[ImaginaryI]"}]}], ")"}], 
      " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"20.`", " ", "t"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2.3592239273284576`*^-16", "+", 
        RowBox[{"6.938893903907279`*^-18", " ", "\[ImaginaryI]"}]}], ")"}], 
      " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"19.`", " ", "t"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"20.`", " ", "t"}], "]"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2.134535934249557`*^-16", "+", 
        RowBox[{"6.278046865439914`*^-18", " ", "\[ImaginaryI]"}]}], ")"}], 
      " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"21.`", " ", "t"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"20.`", " ", "t"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"5.967448757360209`*^-17", "-", 
        RowBox[{"0.9999999999999999`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"19.`", " ", "t"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"20.`", " ", "t"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1.50673124770557`*^-16", "-", 
        RowBox[{"6.529168740057465`*^-17", " ", "\[ImaginaryI]"}]}], ")"}], 
      " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"20.`", " ", "t"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"21.`", " ", "t"}], "]"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"5.39912030427829`*^-17", "-", 
        RowBox[{"0.9047619047619048`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"20.`", " ", "t"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"21.`", " ", "t"}], "]"}]}]}], ")"}]}], "}"}]], "Output",
 CellChangeTimes->{3.770144475190032*^9, 3.770145177083823*^9, 
  3.7701452926941423`*^9}]
}, Open  ]],

Cell[TextData[{
 "It is necessary to clean up the result with a small ",
 StyleBox["Chop", "Input"],
 "."
}], "Text",
 CellChangeTimes->{{3.770146559695086*^9, 3.7701465713975487`*^9}, {
  3.7701477875096693`*^9, 3.770147789901718*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"outt", "=", 
  RowBox[{
   RowBox[{"Chop", "[", 
    RowBox[{
     RowBox[{"ComplexExpand", "[", 
      RowBox[{"Re", "[", "outz", "]"}], "]"}], ",", 
     SuperscriptBox["10", 
      RowBox[{"-", "16"}]]}], "]"}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.770144937476851*^9, 3.77014495116243*^9}, {
  3.770144981699655*^9, 3.7701450047773247`*^9}, {3.770145184195672*^9, 
  3.770145199290913*^9}, {3.7701454626282578`*^9, 3.770145583246468*^9}, {
  3.7701473019099483`*^9, 3.770147307397777*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.005012531328320802`", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"1.`", " ", "t"}], "]"}]}], "-", 
   RowBox[{"0.005012531328320802`", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"20.`", " ", "t"}], "]"}]}], "+", 
   RowBox[{"3.469446951953614`*^-18", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"39.`", " ", "t"}], "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.770144952424859*^9, 3.770144986894679*^9, 3.7701450518195972`*^9, {
   3.770145185888693*^9, 3.770145201679328*^9}, 3.770145299546393*^9, {
   3.770145503391341*^9, 3.7701455843135643`*^9}, 3.770147309700692*^9}]
}, Open  ]],

Cell["\<\
Recognizing the periodic value of cosine, I can get the expression ready for \
a second chop by doing\
\>", "Text",
 CellChangeTimes->{{3.770146720034045*^9, 3.770146760727386*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"outtf", "=", 
  RowBox[{"outt", "/.", 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"39.", "t"}], "]"}], "\[Rule]", "1"}]}]}]], "Input",
 CellChangeTimes->{{3.770145777705914*^9, 3.770145799039508*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.469446951953614`*^-18", "+", 
   RowBox[{"0.005012531328320802`", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"1.`", " ", "t"}], "]"}]}], "-", 
   RowBox[{"0.005012531328320802`", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"20.`", " ", "t"}], "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.770145801032407*^9}]
}, Open  ]],

Cell[TextData[{
 "And then the ",
 StyleBox["Chop", "Input"],
 "."
}], "Text",
 CellChangeTimes->{{3.7701467692631197`*^9, 3.770146772319127*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"outtff", "=", 
  RowBox[{"Chop", "[", 
   RowBox[{"%", ",", 
    SuperscriptBox["10", 
     RowBox[{"-", "17"}]]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7701458180566607`*^9, 3.770145834901952*^9}, {
  3.770145883254179*^9, 3.770145887213882*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.005012531328320802`", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"1.`", " ", "t"}], "]"}]}], "-", 
   RowBox[{"0.005012531328320802`", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"20.`", " ", "t"}], "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.770145836114272*^9, 3.770145887907585*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["Testing the identity of those coefficients", "Text",
 CellChangeTimes->{{3.770146802271233*^9, 3.7701468218054667`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "/", "0.005012531328320802`"}]], "Input",
 CellChangeTimes->{{3.770145380365696*^9, 3.770145389161997*^9}}],

Cell[BoxData["199.5`"], "Output",
 CellChangeTimes->{3.770145391130488*^9}]
}, Open  ]],

Cell["\<\
I find that the answer matches the text answer, justifying the green \
coloration above.\
\>", "Text",
 CellChangeTimes->{{3.770146830470977*^9, 3.770146891987192*^9}}],

Cell["The plot is interesting.", "Text",
 CellChangeTimes->{{3.770147207592527*^9, 3.770147210816516*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"outtff", ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "0.6"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.01"}], ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.015"}], ",", "0.015"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Thickness", "[", "0.003", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.768325370231092*^9, 3.768325490174862*^9}, {
   3.768325525174*^9, 3.768325525308172*^9}, {3.7683255635080338`*^9, 
   3.7683256264967937`*^9}, {3.76832566235163*^9, 3.768325703349957*^9}, {
   3.7683272799356203`*^9, 3.768327408239025*^9}, {3.7701470395040817`*^9, 
   3.770147071525535*^9}, {3.7701471069886017`*^9, 3.770147198633274*^9}, 
   3.770147849628331*^9, {3.770147892139949*^9, 3.770147931417171*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.003], Opacity[1.], 
    LineBox[CompressedData["
1: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
/wPU73lB
     "]]}},
  AspectRatio->0.6,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->350,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-0.01, 10}, {-0.015, 0.015}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.768325391984006*^9, {3.7683254363786182`*^9, 3.768325543314706*^9}, {
   3.768325578675569*^9, 3.768325584798283*^9}, 3.768325627807744*^9, {
   3.768325663791523*^9, 3.768325704012239*^9}, {3.76832728208706*^9, 
   3.7683274091085997`*^9}, {3.77014704454764*^9, 3.77014707225467*^9}, {
   3.770147108110613*^9, 3.770147130876597*^9}, 3.770147161340214*^9, {
   3.7701471938816*^9, 3.770147199448423*^9}, 3.770147864642824*^9, {
   3.7701479004367313`*^9, 3.770147932204771*^9}}]
}, Open  ]],

Cell["7 - 18 General RLC-circuits", "Text",
 CellChangeTimes->{{3.768151269332554*^9, 3.768151281322462*^9}, {
  3.768151772958211*^9, 3.7681517745967417`*^9}},
 Background->RGBColor[
  0.9600061036087587, 0.9600061036087587, 0.9600061036087587]],

Cell["\<\
7.  Tuning. In tuning a sterio system to a radio station, we adjust the \
tuning control (turn a knob) that changes C (or perhaps L) in an RLC-circuit \
so that the amplitude of the steady-state current, numbered line (5), p. 95 \
becomes maximum. For what C will this happen?\
\>", "Text",
 CellChangeTimes->{{3.768151285819131*^9, 3.7681513026971893`*^9}, {
  3.768151336607153*^9, 3.768151390076223*^9}, {3.768326104006592*^9, 
  3.7683261143742657`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[TextData[{
 "It is where the particular solution of the homogeneous equation is \
maximized. Numbered line (5) looks like\n\n",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SubscriptBox["I", "p"], 
    RowBox[{"(", "t", ")"}]}], "=", 
   RowBox[{
    SubscriptBox["I", "0"], 
    RowBox[{"Sin", "[", 
     RowBox[{
      RowBox[{"\[Omega]", " ", "t"}], "-", "\[Theta]"}], "]"}]}]}]]]
}], "Text",
 CellChangeTimes->{{3.768326379909595*^9, 3.768326395307941*^9}, {
  3.768326468122666*^9, 3.768326478560816*^9}, {3.768326522304351*^9, 
  3.768326523500265*^9}}],

Cell[TextData[{
 "The quantity \[Theta] is known as the phase lag, and, I suppose, the signal \
is best, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "p"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " maximized, when \[Theta] equals zero."
}], "Text",
 CellChangeTimes->{{3.768326481702919*^9, 3.768326593100607*^9}}],

Cell["\<\
8 - 14 Find the steady-state current in the RLC-circuit in the figure below \
for the given data. \
\>", "Text",
 CellChangeTimes->{{3.768151601888234*^9, 3.76815164901221*^9}},
 Background->RGBColor[
  0.9600061036087587, 0.9600061036087587, 0.9600061036087587]],

Cell["9.  R = 4 \[CapitalOmega], L = 0.1 H, C = 0.05 F, E = 110 V", "Text",
 CellChangeTimes->{{3.768151656859727*^9, 3.76815169684134*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[TextData[Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"L", " ", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"q", "[", "t", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "2"}], "}"}]}], "]"}]}], "+", 
   RowBox[{"R", " ", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"q", "[", "t", "]"}], ",", "t"}], "]"}]}], "-", 
   RowBox[{
    FractionBox["1", "C"], 
    RowBox[{"q", "[", "t", "]"}]}]}], "=", 
  RowBox[{"v", "[", "t", "]"}]}]]]], "Text",
 CellChangeTimes->{3.768326719756868*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqn", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"0.1", 
     RowBox[{
      RowBox[{"q", "''"}], "[", "t", "]"}]}], "+", 
    RowBox[{"4", 
     RowBox[{
      RowBox[{"q", "'"}], "[", "t", "]"}]}], "-", 
    RowBox[{
     FractionBox["1", "0.05"], 
     RowBox[{"q", "[", "t", "]"}]}]}], "\[Equal]", "110"}]}]], "Input",
 CellChangeTimes->{{3.768326732905363*^9, 3.76832675728706*^9}, {
  3.7683283896380253`*^9, 3.768328425098062*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"-", "20.`"}], " ", 
    RowBox[{"q", "[", "t", "]"}]}], "+", 
   RowBox[{"4", " ", 
    RowBox[{
     SuperscriptBox["q", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], "+", 
   RowBox[{"0.1`", " ", 
    RowBox[{
     SuperscriptBox["q", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}]}], "\[Equal]", 
  "110"}]], "Output",
 CellChangeTimes->{3.768328432756465*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{"eqn", ",", "q", ",", "t"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.768328439340254*^9, 3.768328451576886*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"q", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", 
      RowBox[{
       RowBox[{"-", "5.5`"}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "44.49489742783178`"}], " ", "t"}]], " ", 
        RowBox[{"C", "[", "1", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"4.494897427831781`", " ", "t"}]], " ", 
        RowBox[{"C", "[", "2", "]"}]}]}]}], "]"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.7683284522269983`*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["\<\
If C[1]=C[2]=0, then the green cell above matches the text answer.\
\>", "Text",
 CellChangeTimes->{{3.768328583533099*^9, 3.76832860641121*^9}}],

Cell[TextData[{
 "11.  R = 12 \[CapitalOmega], L = 0.4 H, C = ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", "80"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "F, E = 220 Sin[10 t] V"
}], "Text",
 CellChangeTimes->{{3.76815178493222*^9, 3.7681518325217323`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell["\<\
The state space method has been working where former methods I tried did not, \
so it makes sense to stick with it.\
\>", "Text",
 CellChangeTimes->{{3.7701489625759983`*^9, 3.7701489983736677`*^9}}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.772894697187881*^9, 3.772894697634371*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"eqns", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"eL", " ", 
       RowBox[{
        RowBox[{"q", "''"}], "[", "t", "]"}]}], "+", 
      RowBox[{"aR", " ", 
       RowBox[{
        RowBox[{"q", "'"}], "[", "t", "]"}]}], "+", 
      RowBox[{
       FractionBox["1", "cC"], " ", 
       RowBox[{"q", "[", "t", "]"}]}]}], "\[Equal]", 
     RowBox[{"Vee", "[", "t", "]"}]}], "}"}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"m1", "=", 
  RowBox[{"StateSpaceModel", "[", 
   RowBox[{"eqns", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"q", "[", "t", "]"}], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"q", "'"}], "[", "t", "]"}], ",", "0"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Vee", "[", "t", "]"}], ",", "0"}], "}"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"q", "'"}], "[", "t", "]"}], "}"}], ",", "t"}], 
   "]"}]}]], "Input"],

Cell[BoxData[
 TemplateBox[{"0","1","0",RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"cC", " ", "eL"}]]}],RowBox[{"-", 
     FractionBox["aR", "eL"]}],FractionBox["1", "eL"],"0","1","0",
   InterpretationBox["\[InvisibleSpace]", None],{
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2}, {{
     Control`CommonDump`$DUMMY$}, {Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
    Automatic, 1, 1, 2, 1, {}, {False, False}, False, Automatic, None, {",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"q", "[", "t", "]"}], ",", "0"}], "}"}], ",", 
         SubscriptBox["\[FormalX]", "1"]}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{"Vee", "[", "t", "]"}], ",", "0"}], "}"}], "}"}], ",", 
     "Automatic", ",", "t"}},{}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3}, {#4, #5, #6}, {#7, #8, #9}}, 
        AllowedDimensions -> {3, 3}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, "Columns" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #10, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 2}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{4, 5}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{3, 3}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{6, 6}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{7, 8}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{9, 9}, ","], "}"}], "}"}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"q", "[", "t", "]"}], ",", "0"}], "}"}], ",", 
         SubscriptBox["\[FormalX]", "1"]}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{"Vee", "[", "t", "]"}], ",", "0"}], "}"}], "}"}], ",", 
     "Automatic", ",", "t", ",", "SamplingPeriod", "->", 
     RowBox[{#10}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellChangeTimes->{3.770144353269897*^9}]
}, Open  ]],

Cell["Here I put in the given parameters.", "Text",
 CellChangeTimes->{{3.770146438546074*^9, 3.7701464756487513`*^9}, {
  3.770149048708189*^9, 3.770149054988188*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ms", "=", 
  RowBox[{"m1", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"cC", "\[Rule]", 
      FractionBox["1", "80"]}], ",", 
     RowBox[{"eL", "\[Rule]", "0.4"}], ",", 
     RowBox[{"aR", "\[Rule]", "12"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.7701443797114677`*^9, 3.770144402629148*^9}, {
  3.770145285562131*^9, 3.770145286064172*^9}, {3.77014818254652*^9, 
  3.770148207639966*^9}}],

Cell[BoxData[
 TemplateBox[{
  "0","1","0",RowBox[{"-", "200.`"}],RowBox[{"-", "30.`"}],"2.5`","0","1","0",
   InterpretationBox["\[InvisibleSpace]", None],{
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2}, {{
     Control`CommonDump`$DUMMY$}, {Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
    Automatic, 1, 1, 2, 1, {}, {False, False}, False, Automatic, None, {",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"q", "[", "t", "]"}], ",", "0"}], "}"}], ",", 
         SubscriptBox["\[FormalX]", "1"]}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{"Vee", "[", "t", "]"}], ",", "0"}], "}"}], "}"}], ",", 
     "Automatic", ",", "t"}},{}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3}, {#4, #5, #6}, {#7, #8, #9}}, 
        AllowedDimensions -> {3, 3}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, "Columns" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #10, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 2}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{4, 5}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{3, 3}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{6, 6}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{7, 8}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{9, 9}, ","], "}"}], "}"}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"q", "[", "t", "]"}], ",", "0"}], "}"}], ",", 
         SubscriptBox["\[FormalX]", "1"]}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{"Vee", "[", "t", "]"}], ",", "0"}], "}"}], "}"}], ",", 
     "Automatic", ",", "t", ",", "SamplingPeriod", "->", 
     RowBox[{#10}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellChangeTimes->{{3.7701443743745823`*^9, 3.770144404012825*^9}, 
   3.770145287594838*^9, 3.77014820947893*^9}]
}, Open  ]],

Cell[TextData[{
 "The way to get output from a state space model is to use the command ",
 StyleBox["OutputResponse", "Input"],
 ". "
}], "Text",
 CellChangeTimes->{{3.770146495470244*^9, 3.7701465359442883`*^9}, {
   3.770146622339973*^9, 3.770146684002142*^9}, {3.770146970560544*^9, 
   3.770146978584408*^9}, {3.770147268633367*^9, 3.770147273126587*^9}, {
   3.7701477543427477`*^9, 3.770147775446344*^9}, 3.7701490318154173`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"outz", "=", 
  RowBox[{"OutputResponse", "[", 
   RowBox[{
    RowBox[{"{", "ms", "}"}], ",", 
    RowBox[{"220", 
     RowBox[{"Sin", "[", 
      RowBox[{"10", "t"}], " ", "]"}]}], ",", "t"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.770144445461206*^9, 3.770144473724625*^9}, 
   3.77014517365375*^9, {3.770148220593336*^9, 3.770148225247464*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", "\[VeryThinSpace]", "+", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "30.`"}], " ", "t"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"22.000000000000014`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"10.`", " ", "t"}]]}], "-", 
      RowBox[{"27.500000000000007`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"20.`", " ", "t"}]]}], "-", 
      RowBox[{"7.105427357601002`*^-15", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"20.`", " ", "t"}]], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"10.`", " ", "t"}], "]"}]}], "+", 
      RowBox[{"5.5`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"30.`", " ", "t"}]], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"10.`", " ", "t"}], "]"}]}], "+", 
      RowBox[{"7.105427357601002`*^-15", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"20.`", " ", "t"}]], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"10.`", " ", "t"}], "]"}]}], "+", 
      RowBox[{"16.499999999999986`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"30.`", " ", "t"}]], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"10.`", " ", "t"}], "]"}]}], "+", 
      RowBox[{"7.105427357601002`*^-15", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"40.`", " ", "t"}]], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"10.`", " ", "t"}], "]"}]}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.770144475190032*^9, 3.770145177083823*^9, 
  3.7701452926941423`*^9, 3.770148228722929*^9}]
}, Open  ]],

Cell[TextData[{
 "It is necessary to clean up the result with a ",
 StyleBox["Chop", "Input"],
 "."
}], "Text",
 CellChangeTimes->{{3.770146559695086*^9, 3.7701465713975487`*^9}, {
  3.7701477875096693`*^9, 3.770147789901718*^9}, {3.770148520557556*^9, 
  3.770148521389511*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"outt", "=", 
  RowBox[{
   RowBox[{"Chop", "[", 
    RowBox[{"outz", ",", 
     SuperscriptBox["10", 
      RowBox[{"-", "14"}]]}], "]"}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.770144937476851*^9, 3.77014495116243*^9}, {
  3.770144981699655*^9, 3.7701450047773247`*^9}, {3.770145184195672*^9, 
  3.770145199290913*^9}, {3.7701454626282578`*^9, 3.770145583246468*^9}, {
  3.7701473019099483`*^9, 3.770147307397777*^9}, {3.770148282142872*^9, 
  3.770148321564168*^9}, {3.77014840463511*^9, 3.770148406129722*^9}, {
  3.77014848603097*^9, 3.770148509054255*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"22.000000000000014`", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "20.`"}], " ", "t"}]]}], "-", 
   RowBox[{"27.500000000000007`", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "10.`"}], " ", "t"}]]}], "+", 
   RowBox[{"5.5`", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"10.`", " ", "t"}], "]"}]}], "+", 
   RowBox[{"16.499999999999986`", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"10.`", " ", "t"}], "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.770144952424859*^9, 3.770144986894679*^9, 3.7701450518195972`*^9, {
   3.770145185888693*^9, 3.770145201679328*^9}, 3.770145299546393*^9, {
   3.770145503391341*^9, 3.7701455843135643`*^9}, 3.770147309700692*^9, {
   3.7701482969998703`*^9, 3.770148322720747*^9}, 3.7701484076759977`*^9, {
   3.770148499270412*^9, 3.7701485099282207`*^9}}]
}, Open  ]],

Cell["\<\
I guess the \[ExponentialE] factors can be dropped if they are small enough, \
say, at 3 seconds.\
\>", "Text",
 CellChangeTimes->{{3.77014856010032*^9, 3.7701485735639544`*^9}, {
  3.770148693233274*^9, 3.770148697575903*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{
    RowBox[{"-", "27.500000000000007`"}], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "10.`"}], " ", "t"}]]}], "]"}], "/.", 
  RowBox[{"t", "\[Rule]", "3"}]}]], "Input",
 CellChangeTimes->{{3.770148449585547*^9, 3.770148464295663*^9}}],

Cell[BoxData[
 RowBox[{"-", "2.573346316431053`*^-12"}]], "Output",
 CellChangeTimes->{3.770148465834914*^9}]
}, Open  ]],

Cell["\<\
Evidently the text considers that size to be negligible, leaving\
\>", "Text",
 CellChangeTimes->{{3.770148592899016*^9, 3.770148617898428*^9}, {
  3.770149070707404*^9, 3.770149072011383*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"5.5", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"10.", " ", "t"}], "]"}]}], "+", 
  RowBox[{"16.5", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"10.", " ", "t"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.770148640451351*^9, 3.7701486543933973`*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell["as the answer. The plot looks routine.", "Text",
 CellChangeTimes->{{3.770148665017516*^9, 3.7701486668328667`*^9}, {
  3.770148864707336*^9, 3.770148869474229*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"5.5", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"10.", " ", "t"}], "]"}]}], "+", 
    RowBox[{"16.5", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"10.", " ", "t"}], "]"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "0.6"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.01"}], ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "22"}], ",", "22"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Thickness", "[", "0.003", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7701487858748093`*^9, 3.770148834523904*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.003], Opacity[1.], 
    LineBox[CompressedData["
1:eJwUmnc81d8fx+29R0aSve+9nyuVos67jEpIVghZyaYhMhqUpIwyGiRJJUkl
CRnHSPjKSraM7MjIJn7399d9vB+fc96f93mf8/m8Xs/H/Ug7+ZqeZqCjo1tg
paP7/+/jy04sVJfb+4lHtd/Z6LZAqs3k3hNS7mjM2UPkKqModBpFnZOSuoQw
6acshV4cAg5Z8zBL3UL9hy9rHB3fBvpVYLu0/SFKnt4nW/RWBtzqb9yd10lB
t7f/m6mPl4XbrXXVs2eeoNUzuetK5+XA7VyW6GJ7OuLzCesdkVGAN2Ea4TPb
X6HDZ5nNhkEZSlnat02/z0KczIOrz1eUoSnqUsGUTjZ65z0SJp+tAnP3Sqcm
zrxFHHucW/P/qULYbaJqPuQdcrFnsAxIUYOob9f45/Xeo3dcr7TMNUiQclwu
e649F6UW/kxrMSZDRrz/ymzaB5QXbbeVaCbDmx/V+rPueUjCVo5OxpAC+SKi
CTPqH5F0TmNeVBkFSq3dB6bXPqKkrXj3S2ECviYXkaer8lFd75fUV4cIaOrl
DPkT/QkxHfh5HfsT0LHdrnbKsgCpjvI09z8hYMAxZ8vU9kK0lS7Lnq6agIln
m86TY4XoWETZpvAYAXPDJu9/vy9CBwXMroixUGFNMX1jIugzsi62eMYoRQUm
j79HJ3SKkV+8M7lhJxW4snUfjnOVoE5t3YHzh6gg/CdxZOxHCVJ0JIfMmFNB
khjdMZZain7f/1YG9lRQOKd5bfRMGToWz+Hj5EwF0S7dM+dFMbI/mWhg7kIF
ieAp7r8hGL0OoG7d4kgFKYmkvHMDGDEvVL7MtKaCXMn+k3N65WhQR7aI25gK
Svaj9OeyytHyaua2w/upQNqMzZzlqUCFD26knlShgnqa5rGz5ysQp3cbm5EA
FXYdGFiYaa9AL36FKsosErB38FaKn3YlMr5YWjHwg4D94eo6M2mVqDPlQWr8
ewIOynWP+zJXoYLtk4Fwi4BDX8Ljpt2rEAXsWOdsCTB0Vdvt21CFxDU35nPV
CDBh/dH7R/0LCjoYXLZtlgJWRxRU/6x9QQeeaD1LZKeA7URDs7dDNUrx2HM2
OooMjrcDAqeqqtFXjauvVZjI4PGt5stk9FcU+bw3rmNADXx8znp5zX1FBVJB
shR9NTjHKy44aVmD/E2T+vOfqULwcU+H39trkVqO5/SSgQpshO8S67tTi27b
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
dUPFuYQExwWP3Nz2hFa/Iqf5K0kS9LsEkJae80LoLp+UBwFqsMHaeinrAy8Y
vUw6oMGvCnuNowX4G3lBdzrfUXVcEWqffC6Y+MELfXT1bRe4FcFqdty+qocX
HHxd9sqpKoB/gv7rgAleUIm49LPQTA6spjalpxn4wOuTRJaeI83f7igsspDk
gwmTvXyvPvMAF1adlLHgAySkcanQSRgPPjxec8WKD5jvFrJo3hHBn84HZPSc
5IMoo77Lu96KYSfFStskJz6Y4eFQtO7bhj/F2Hxj9+ODoaCAVvFJGXzH7eor
1/N8cK75olrrT1nsdPDFjcqLfODqXmLEXy+HuRZn94WG8kHtu7t3BBIVsJPd
rZyZKFp+DqUpny5lrLn7bZRRDB9cW+UyC3qkgrn5f7hm3eWDcuOgXJKZKi6o
ktru8oAPJH8MXK14o4ajU/XXcDIfiB8M1NE9RsJOgV7t257wgc0zzfKcMRLm
ViuIbX/OBwtyfxuSGCh4kPmnp8YrPng0zBBdHUbBBX2Mh+9m84Hl4V8BOqsU
HF2oLPfnLR+U7fxy5KIGgZ3ij9Ed/cAHjpN9r46fIbCmt3/Py3za+p/ptTxP
JDD3oeQCpiJafV6ry6fLCDwoVZ7gWEJbn1nU/Yghml6ujviVYj4I7drt84+J
imNauYy2VvHBw/1NEeVSVOyco64c+JUPxmrldv+3m8aTkVbMP+r+308lWSED
KuZxujxAbeCDm37v998/QcW/tDJKYpr54N7j3gYTByouEK57+LuVD/odxD33
0/g2Znra/3AHHyQWNvyzp+mlc62w6fNu2vixl1W5drT8z7TIDH180OseaaJl
Rssf6shxapAPnhqI3VjToeW3vDnyeZgPnqz+u79EoeUn3lSIjtPyN2Xx7hSh
5ef4nuo/yQfHk36WF60Q2HloOahlmg+Ewsqa49pp/SmVPEH5ywcsailv8DsC
8zzQ3XFnkQ8chI9zWdwg8NBZD97xFdp+XDabsLYgcOHRuN96//jgop1TRI8U
gWPk87+m0/FDc3bx57ZGCnbZ7H62ycgPx+Lij6tZUPDeTvqrtqz88GnqV1Z3
MxnzflC0LeTgh1jZG6zs+mRc5Hpe6Dw/Pxg8vx8aJEzCcfBwplGIH56WPn4l
cFYNnxYvq1cT5QdGxvGRpipVzNfAcWNEkh/84hNHr1io4NM70xes1fihYjny
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
rOLKVMZVQaiUNaQaSRPY9G3zUHO4IIhlWqbbtFOwaYpsz0aEINQ2qIvrulCw
ycWvdVbRgmCm1fmH+QwZH3MWq7gRJwiOfqoZEr0kbGziWZgbLwjqy8d3dB4l
YUMV3kyuR4IwLX8yt1VQDVvX+GYqPxaEM5eWmfP9VLGra1OmfpogNAoLE2Jf
VfDV9Luvrr6gnV/iDy+rozLOExd6PZ8rCCP0katgrIDLCy685s8XhHW+qMnh
YHncYPnjNblQEPg6qq76Z8jhsXtJ2W5lghAB6U+kR2WwBKdYTs9/tPPuMK3P
c1YSK7+6lLPSIAgm+TV3n0VI4F2HunK2tNBis9XpwERxbBKe/NakQxC6r12d
+Zy2BV9f2/a+aoh2PvS29L5b4MKTv2Xysv8Jgqb3nfdPsgfRyq3wvFo6ISiw
26V3r3YWsSgN5Y0wCoEAEbr/ieYqknJ5/lGKQwjUGTo8ea8xg3mP4qeELUIQ
GTtR18JA61tQ5Kf3YrT4Zg/Vjl0YfETHPzVICIFgwH/mUxwiEGmeVcAmKwQv
hhlZ9/4Th+J6taIQihComTFx1h6WhlqP6KKH6kIgv8d8/CVVBtrY/hTl7xSC
oKacD5pbZGFG9+3nGS0h+O9rUe2DZjn4N8hbzI2EYIdVqNrmS3nguOZXrHJQ
CFqrUIXeJQWQK6GWuBwWgq46u/wcTiWgnrxXcu2oEEzIavaerVeC/StzJanG
QmB4+f5Py5vKYLUzr7TDXAiCv0uvtU2owOnvQmULJ2hxz+HlbfGqcO6sf5nA
SSFYPNb68qeGGkS/2YUNHYUgc0fgo50uJFBwUHJ84yIEhx+V3Sb/I0GpgDgD
j5sQ7PV88PhbNBlOfOF85uMpBGZOSlETwhSYCfin0+gjBPUKMh6nEilwS2V6
iHJOCMzfvzrFxEKATG//jTh/IbC6qlM2qE3A59gWhdlAIch1s72j5UuA+cGq
r8dDhGAfY3053WMCpuY/uuVeEYIswddp8tU0vnz5kl0wXAgklfo/pE4QsN3m
Ydb5iP9VcOXhUH5t2BYRQmbMjJkxi92YeacUER4tSGQpEilbiBISKmVNUbaK
SlJRVIRkJ06SQrZUZGklKsr2Q6i+9/ur673OvOc8536W+75dM8lDlptNt5sE
Hyolz217HS8PUtGPVL1U+GBbHz6mk4jn76iE+m0DPnwP9E9MS5GH+byKOwQr
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
ep7xWeSrJPofww/s7Q==
     "]]}},
  AspectRatio->0.6,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->350,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-0.01, 10}, {-22, 22}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.770148787592944*^9, 3.770148835498246*^9}}]
}, Open  ]],

Cell[TextData[{
 "13.  R = 12, L = 1.2 H, C = ",
 Cell[BoxData[
  FormBox[
   FractionBox["20", "3"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "*1",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["0", 
    RowBox[{"-", "3"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " F, E = 12,000 Sin[25 t] V"
}], "Text",
 CellChangeTimes->{{3.768151839459062*^9, 3.768151931708474*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[TextData[{
 "C=",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["20", "3"], "*", 
     FractionBox["1", "1000"]}], "=", 
    RowBox[{
     FractionBox["20", "3000"], "=", 
     FractionBox["2", "300"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.768330240879806*^9, 3.768330298024662*^9}}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.772894710779331*^9, 3.772894711385879*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"eqns", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"eL", " ", 
       RowBox[{
        RowBox[{"q", "''"}], "[", "t", "]"}]}], "+", 
      RowBox[{"aR", " ", 
       RowBox[{
        RowBox[{"q", "'"}], "[", "t", "]"}]}], "+", 
      RowBox[{
       FractionBox["1", "cC"], " ", 
       RowBox[{"q", "[", "t", "]"}]}]}], "\[Equal]", 
     RowBox[{"Vee", "[", "t", "]"}]}], "}"}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"m1", "=", 
  RowBox[{"StateSpaceModel", "[", 
   RowBox[{"eqns", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"q", "[", "t", "]"}], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"q", "'"}], "[", "t", "]"}], ",", "0"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Vee", "[", "t", "]"}], ",", "0"}], "}"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"q", "'"}], "[", "t", "]"}], "}"}], ",", "t"}], 
   "]"}]}]], "Input"],

Cell[BoxData[
 TemplateBox[{"0","1","0",RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"cC", " ", "eL"}]]}],RowBox[{"-", 
     FractionBox["aR", "eL"]}],FractionBox["1", "eL"],"0","1","0",
   InterpretationBox["\[InvisibleSpace]", None],{
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2}, {{
     Control`CommonDump`$DUMMY$}, {Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
    Automatic, 1, 1, 2, 1, {}, {False, False}, False, Automatic, None, {",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"q", "[", "t", "]"}], ",", "0"}], "}"}], ",", 
         SubscriptBox["\[FormalX]", "1"]}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{"Vee", "[", "t", "]"}], ",", "0"}], "}"}], "}"}], ",", 
     "Automatic", ",", "t"}},{}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3}, {#4, #5, #6}, {#7, #8, #9}}, 
        AllowedDimensions -> {3, 3}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, "Columns" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #10, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 2}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{4, 5}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{3, 3}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{6, 6}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{7, 8}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{9, 9}, ","], "}"}], "}"}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"q", "[", "t", "]"}], ",", "0"}], "}"}], ",", 
         SubscriptBox["\[FormalX]", "1"]}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{"Vee", "[", "t", "]"}], ",", "0"}], "}"}], "}"}], ",", 
     "Automatic", ",", "t", ",", "SamplingPeriod", "->", 
     RowBox[{#10}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellChangeTimes->{3.770144353269897*^9, 3.7701492539110413`*^9, 
  3.7701531891112967`*^9}]
}, Open  ]],

Cell["Here I put in the given parameters.", "Text",
 CellChangeTimes->{{3.770146438546074*^9, 3.7701464756487513`*^9}, {
  3.770149048708189*^9, 3.770149054988188*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ms", "=", 
  RowBox[{"m1", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"cC", "\[Rule]", 
      RowBox[{
       FractionBox["20", "3"], "*", 
       SuperscriptBox["10", 
        RowBox[{"-", "3"}]]}]}], ",", 
     RowBox[{"eL", "\[Rule]", "1.2"}], ",", 
     RowBox[{"aR", "\[Rule]", "12"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.7701443797114677`*^9, 3.770144402629148*^9}, {
  3.770145285562131*^9, 3.770145286064172*^9}, {3.77014818254652*^9, 
  3.770148207639966*^9}, {3.770149166466113*^9, 3.770149233126296*^9}}],

Cell[BoxData[
 TemplateBox[{
  "0","1","0",RowBox[{"-", "125.`"}],RowBox[{"-", "10.`"}],
   "0.8333333333333334`","0","1","0",InterpretationBox[
   "\[InvisibleSpace]", None],{
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2}, {{
     Control`CommonDump`$DUMMY$}, {Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
    Automatic, 1, 1, 2, 1, {}, {False, False}, False, Automatic, None, {",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"q", "[", "t", "]"}], ",", "0"}], "}"}], ",", 
         SubscriptBox["\[FormalX]", "1"]}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{"Vee", "[", "t", "]"}], ",", "0"}], "}"}], "}"}], ",", 
     "Automatic", ",", "t"}},{}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3}, {#4, #5, #6}, {#7, #8, #9}}, 
        AllowedDimensions -> {3, 3}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, "Columns" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #10, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 2}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{4, 5}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{3, 3}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{6, 6}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{7, 8}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{9, 9}, ","], "}"}], "}"}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"q", "[", "t", "]"}], ",", "0"}], "}"}], ",", 
         SubscriptBox["\[FormalX]", "1"]}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{"Vee", "[", "t", "]"}], ",", "0"}], "}"}], "}"}], ",", 
     "Automatic", ",", "t", ",", "SamplingPeriod", "->", 
     RowBox[{#10}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellChangeTimes->{{3.7701443743745823`*^9, 3.770144404012825*^9}, 
   3.770145287594838*^9, 3.77014820947893*^9, 3.770149259175438*^9, 
   3.770153192791996*^9}]
}, Open  ]],

Cell[TextData[{
 "The way to get output from a state space model is to use the command ",
 StyleBox["OutputResponse", "Input"],
 ". "
}], "Text",
 CellChangeTimes->{{3.770146495470244*^9, 3.7701465359442883`*^9}, {
   3.770146622339973*^9, 3.770146684002142*^9}, {3.770146970560544*^9, 
   3.770146978584408*^9}, {3.770147268633367*^9, 3.770147273126587*^9}, {
   3.7701477543427477`*^9, 3.770147775446344*^9}, 3.7701490318154173`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"outz", "=", 
  RowBox[{"OutputResponse", "[", 
   RowBox[{
    RowBox[{"{", "ms", "}"}], ",", 
    RowBox[{"12000", 
     RowBox[{"Sin", "[", 
      RowBox[{"25", "t"}], " ", "]"}]}], ",", "t"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.770144445461206*^9, 3.770144473724625*^9}, 
   3.77014517365375*^9, {3.770148220593336*^9, 3.770148225247464*^9}, {
   3.770149277998651*^9, 3.770149287876754*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"0.`", "\[VeryThinSpace]", "+", 
     RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"400.00000000000017`", "\[VeryThinSpace]", "+", 
      RowBox[{"1.5631940186722205`*^-14", " ", "\[ImaginaryI]"}]}], ")"}], 
    " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "5.000000000000001`"}], " ", "t"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"10.000000000000002`", " ", "t"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"5.000000000000001`", " ", "t"}]], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         RowBox[{"10.000000000000002`", " ", "t"}], "]"}], "2"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"25.`", " ", "t"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"0.7500000000000002`", "\[VeryThinSpace]", "-", 
         RowBox[{"4.805045250577677`*^-16", " ", "\[ImaginaryI]"}]}], ")"}], 
       " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"10.000000000000002`", " ", "t"}], "]"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"3.197442310920449`*^-16", "-", 
         RowBox[{"3.2152058793144527`*^-16", " ", "\[ImaginaryI]"}]}], ")"}], 
       " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"5.000000000000001`", " ", "t"}]], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"10.000000000000002`", " ", "t"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"25.`", " ", "t"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"10.000000000000002`", " ", "t"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"0.9999999999999997`", "\[VeryThinSpace]", "+", 
         RowBox[{"2.4558133304708465`*^-16", " ", "\[ImaginaryI]"}]}], ")"}], 
       " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"5.000000000000001`", " ", "t"}]], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"25.`", " ", "t"}], "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", 
         RowBox[{"10.000000000000002`", " ", "t"}], "]"}], "2"]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"0.5000000000000001`", "\[VeryThinSpace]", "-", 
         RowBox[{"7.496225862269058`*^-17", " ", "\[ImaginaryI]"}]}], ")"}], 
       " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"5.000000000000001`", " ", "t"}]], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         RowBox[{"10.000000000000002`", " ", "t"}], "]"}], "2"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"25.`", " ", "t"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1.4210854715201997`*^-16", "-", 
         RowBox[{"9.972467296393011`*^-17", " ", "\[ImaginaryI]"}]}], ")"}], 
       " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"5.000000000000001`", " ", "t"}]], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"10.000000000000002`", " ", "t"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"10.000000000000002`", " ", "t"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"25.`", " ", "t"}], "]"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"0.5000000000000002`", "\[VeryThinSpace]", "-", 
         RowBox[{"1.390354498198576`*^-16", " ", "\[ImaginaryI]"}]}], ")"}], 
       " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"5.000000000000001`", " ", "t"}]], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", 
         RowBox[{"10.000000000000002`", " ", "t"}], "]"}], "2"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"25.`", " ", "t"}], "]"}]}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.770144475190032*^9, 3.770145177083823*^9, 
  3.7701452926941423`*^9, 3.770148228722929*^9, 3.7701492931847277`*^9, 
  3.770153197852428*^9}]
}, Open  ]],

Cell[TextData[{
 "It is necessary to clean up the result with a ",
 StyleBox["Chop", "Input"],
 "."
}], "Text",
 CellChangeTimes->{{3.770146559695086*^9, 3.7701465713975487`*^9}, {
  3.7701477875096693`*^9, 3.770147789901718*^9}, {3.770148520557556*^9, 
  3.770148521389511*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"outt", "=", 
  RowBox[{
   RowBox[{"Chop", "[", 
    RowBox[{
     RowBox[{"ComplexExpand", "[", 
      RowBox[{"Re", "[", "outz", "]"}], "]"}], ",", " ", 
     SuperscriptBox["10", 
      RowBox[{"-", "15"}]]}], "]"}], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.770144937476851*^9, 3.77014495116243*^9}, {
  3.770144981699655*^9, 3.7701450047773247`*^9}, {3.770145184195672*^9, 
  3.770145199290913*^9}, {3.7701454626282578`*^9, 3.770145583246468*^9}, {
  3.7701473019099483`*^9, 3.770147307397777*^9}, {3.770148282142872*^9, 
  3.770148321564168*^9}, {3.77014840463511*^9, 3.770148406129722*^9}, {
  3.77014848603097*^9, 3.770148509054255*^9}, {3.770149314091794*^9, 
  3.770149332931055*^9}, {3.770149833916358*^9, 3.770149869889583*^9}, {
  3.770153169928114*^9, 3.7701531760611362`*^9}, {3.770153220718914*^9, 
  3.770153234821025*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "300.0000000000002`"}], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "5.000000000000001`"}], " ", "t"}]], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"10.000000000000002`", " ", "t"}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"10.000000000000002`", " ", "t"}], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"400.00000000000017`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "5.000000000000001`"}], " ", "t"}]]}], "+", 
      RowBox[{"1.2789769243681803`*^-13", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"25.`", " ", "t"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"10.000000000000002`", " ", "t"}], "]"}]}]}], ")"}]}], "-", 
   RowBox[{"2.8421709430404004`*^-14", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"20.000000000000004`", " ", "t"}], "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"25.`", " ", "t"}], "]"}]}], "+", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"Cos", "[", 
      RowBox[{"10.000000000000002`", " ", "t"}], "]"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "400.00000000000017`"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"25.`", " ", "t"}], "]"}]}], "+", 
      RowBox[{"200.00000000000014`", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"25.`", " ", "t"}], "]"}]}]}], ")"}]}], "+", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"Sin", "[", 
      RowBox[{"10.000000000000002`", " ", "t"}], "]"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "400.00000000000006`"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"25.`", " ", "t"}], "]"}]}], "+", 
      RowBox[{"200.00000000000017`", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"25.`", " ", "t"}], "]"}]}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.770144952424859*^9, 3.770144986894679*^9, 3.7701450518195972`*^9, {
   3.770145185888693*^9, 3.770145201679328*^9}, 3.770145299546393*^9, {
   3.770145503391341*^9, 3.7701455843135643`*^9}, 3.770147309700692*^9, {
   3.7701482969998703`*^9, 3.770148322720747*^9}, 3.7701484076759977`*^9, {
   3.770148499270412*^9, 3.7701485099282207`*^9}, 3.770149337512476*^9, {
   3.770149837928594*^9, 3.770149871077661*^9}, {3.770153202189275*^9, 
   3.770153235983327*^9}}]
}, Open  ]],

Cell[TextData[{
 "There is a si",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["n", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "+co",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["s", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " trig identity in the above, but I\[CloseCurlyQuote]m going to have to pull \
it out by hand."
}], "Text",
 CellChangeTimes->{{3.770151206118484*^9, 3.770151218837268*^9}, {
  3.7701532927143593`*^9, 3.770153328104136*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"outhnd", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "300."}], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "5."}], " ", "t"}]], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"10.", " ", "t"}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"10.", " ", "t"}], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{"400.", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "5."}], " ", "t"}]]}], ")"}]}], "+", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "400."}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"25.", " ", "t"}], "]"}]}], "+", 
     RowBox[{"200.", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"25.", " ", "t"}], "]"}]}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.77014947494805*^9, 3.770149564115615*^9}, 
   3.7701496300794764`*^9, {3.77014993342249*^9, 3.770149949230983*^9}, 
   3.770149993157769*^9, 3.7701532771461277`*^9, {3.770153346743536*^9, 
   3.770153429581218*^9}, {3.770153459988037*^9, 3.7701535022745*^9}, 
   3.770153539402861*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"400.`", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "5.`"}], " ", "t"}]], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"10.`", " ", "t"}], "]"}]}], "-", 
  RowBox[{"400.`", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"25.`", " ", "t"}], "]"}]}], "-", 
  RowBox[{"300.`", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "5.`"}], " ", "t"}]], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"10.`", " ", "t"}], "]"}]}], "+", 
  RowBox[{"200.`", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"25.`", " ", "t"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.7701535916876183`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"outhnd2", "=", 
  RowBox[{"Collect", "[", 
   RowBox[{"outhnd", ",", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "5."}], "t"}]]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7701535461962347`*^9, 3.7701535836792803`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "400.`"}], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"25.`", " ", "t"}], "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "5.`"}], " ", "t"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"400.`", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"10.`", " ", "t"}], "]"}]}], "-", 
     RowBox[{"300.`", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"10.`", " ", "t"}], "]"}]}]}], ")"}]}], "+", 
  RowBox[{"200.`", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"25.`", " ", "t"}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.7701535853550997`*^9, 3.7701535953901157`*^9}},
 Background->RGBColor[1, 1, 0.85]]
}, Open  ]],

Cell["\<\
While I was pulling things out by hand, I pulled out a choppable term. The \
text constant B is equal to -300. The text constant A is equal to 1 in one \
position and 400 in another position. That makes my answer wrong, \
technically. I guess I should make it yellow, though I don\[CloseCurlyQuote]t \
feel it is a just action to do so. I feel like it is correct.\
\>", "Text",
 CellChangeTimes->{{3.77014856010032*^9, 3.7701485735639544`*^9}, {
  3.770148693233274*^9, 3.770148697575903*^9}, {3.770151257939578*^9, 
  3.770151319721891*^9}, {3.770153722596489*^9, 3.770153731322816*^9}, {
  3.7701539312843113`*^9, 3.7701539398678627`*^9}, {3.770154013257491*^9, 
  3.770154058159726*^9}, {3.770154095958331*^9, 3.7701541309491158`*^9}, {
  3.77015416461271*^9, 3.770154191371463*^9}, {3.770154249667083*^9, 
  3.770154266825158*^9}, {3.7701544490774107`*^9, 3.770154449466977*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "400.`"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"25.`", " ", "t"}], "]"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "5.`"}], " ", "t"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"400.`", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"10.`", " ", "t"}], "]"}]}], "-", 
       RowBox[{"300.`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"10.`", " ", "t"}], "]"}]}]}], ")"}]}], "+", 
    RowBox[{"200.`", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"25.`", " ", "t"}], "]"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "4"}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "0.6"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.01"}], ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "600"}], ",", "500"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Thickness", "[", "0.003", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.770154340004793*^9, 3.77015441333282*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.003], Opacity[1.], 
    LineBox[CompressedData["
1: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
GKHbC6R/Q/CI/wMQRagP
     "]], LineBox[CompressedData["
1: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
jKFf43IJkTQmnJOwLd9YjaGZnns2QkwmfN17U7PyNo4/6EnGsplg+C0stvAk
hoT8Wme3ijLhkpWRyCZ7DNGpIZ8mlzLBxOh5L0keQ+LZ7Ed3ljMhZ7uM7MYB
AZI1yL90WBK3V7TvqMkUIOXPxsGSMkwwB1P3ThsB0gzttfogy4S9m/ZInxYW
ION8CbahIhPi802kZo34yNL44ehvJSbUUDmnp77wkEPP3rdFKkzYVhB8cNSH
h3yXnz6zaj0TshXrYpzCw1FYsbxn20YmsCcVny/7ietn8wrjBG0mKLbGqjh4
haHk2F8iQrpMsOAffbUUuOj6ysTeJ/pMqKQkhfZkhaK8UnUUsJ0Jyd9O63f8
C0HlY0eOdxsxQSxAKFTqTjDqd2yardjLBKnCADHNiAA09svvU9g+JpydtjAM
HfdDvxNoj9bZMmHfdW76LkdfxKyB4OuOTIDvcU0eEseQllbh6PGjeH4JF46l
7XRD+g2mbzd5MWFI6IjT3mhXtOvY4J0f3kz4vYSNPQ88iBxvrPQ8GMiE/Mlj
fyS32qFYRnyvPsaEBFvZu6XSBqjpq9enhQQmECsOEPcL2UFHJPHRg0tMGAx6
FKyZeQAGJTMv+aTi/uJ3LbTpHIT5va1WX64yobOpu3+LshusLjd++zSXCVqX
tZJiF71A1b73TvAdPF7vwcG8bG/Qnoo4o1qA57v88iYLQ18wUX5onF7MhKWP
k+5vdw+AwGR5xC9nwns7F2mr68GwL8XtGOEFE/7Gn8nfbxgCm1KzxM5XMiFI
3ckmozsE5i/LH818zYRT35Sz3Vhc6Lzixlatw+el5IRSagYXUFrWkwdvmSCh
FHFJoBQGcVfl6TWNTLheuESkUSUcvDLcHlg1M0FlA2mvcHY4mF7Lcm5vYcIF
3zE19+U80LjeR3Jvw+tvfRY6TvBgyQ35wh/tTCg4ez/P8jsPpm64OYR3MiE6
7cf8TXM+tGRmCQv3MMF7/I1lxW0+pGfJ24gP4O+jaoXwvKkAIrLd/l77xgRK
+75dk0kCOJSTlbt2BO+X+DX3wx8FsONW397iUSZEra810eVgoJgrP6c7zgRp
OdlIv50YUG67ZVVPMmFKeWzjWCAGI7ezzCynmdC868Hm4ssY1Of1TbfOMEFo
RTP53hOcn+/IXz88x4Q3d6Zff27EICnfbff3BSa8uDy2e+NXDELvZk2ELjJB
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
dyJS/HgDhi7LMX79+8cBkffDZZu+Yuh/0jrkBQ==
     "]]}},
  AspectRatio->0.6,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->350,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-0.01, 4}, {-600, 500}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7701543422769337`*^9, 3.770154414396015*^9}}]
}, Open  ]],

Cell[TextData[{
 "15. Cases of damping. What are the conditions for an RLC-circuit to be (I) \
overdamped, (II) critically damped, (III) underdamped? What is the critical \
resistance ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["R", "crit"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " (the analog of the critical damping constant 2 ",
 Cell[BoxData[
  FormBox[
   SqrtBox[
    RowBox[{"m", " ", "k"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " ?"
}], "Text",
 CellChangeTimes->{{3.7681520023937893`*^9, 3.768152025719071*^9}, {
  3.76815230758398*^9, 3.768152386483959*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell["\<\
16 - 18 Solve the initial value problem for the RLC-circuit shown below, with \
the given data, assuming zero initial current and charge. Graph or sketch the \
solution. \
\>", "Text",
 CellChangeTimes->{{3.768152392611143*^9, 3.7681524454965687`*^9}},
 Background->RGBColor[
  0.9600061036087587, 0.9600061036087587, 0.9600061036087587]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"LightGreen", ",", 
       RowBox[{"Rectangle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"4", ",", "2.5"}], "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1.3", ",", "1.1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.3", ",", "0.7"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.65", ",", "0.7"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1.76", ",", "0.7"}], "}"}], ",", "0.1", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.85"}], ",", "\[Pi]"}], "}"}]}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1.89", ",", "0.7"}], "}"}], ",", "0.1", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.85"}], ",", 
           RowBox[{"\[Pi]", "+", "0.85"}]}], "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2.02", ",", "0.7"}], "}"}], ",", "0.1", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.85"}], ",", 
           RowBox[{"\[Pi]", "+", "0.85"}]}], "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2.15", ",", "0.7"}], "}"}], ",", "0.1", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"\[Pi]", "+", "0.85"}]}], "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2.25", ",", "0.7"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.7", ",", "0.7"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.7", ",", "1.25"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2.63", ",", "1.25"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.77", ",", "1.25"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2.7", ",", "1.5"}], "}"}], ",", "0.15", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[Pi]", "2"]}], "-", "0.5"}], ",", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[Pi]", "2"]}], "+", "0.5"}]}], "}"}]}], "]"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2.7", ",", "1.35"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.7", ",", "1.85"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.22", ",", "1.85"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.18", ",", "1.75"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.11", ",", "1.92"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.06", ",", "1.75"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "1.91"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.95", ",", "1.75"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.9", ",", "1.91"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.87", ",", "1.85"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.3", ",", "1.85"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.3", ",", "1.42"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1.3", ",", "1.42"}], "}"}], ",", "0.04"}], "]"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"White", ",", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1.3", ",", "1.42"}], "}"}], ",", "0.03"}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1.3", ",", "1.1"}], "}"}], ",", "0.04"}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"White", ",", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1.3", ",", "1.1"}], "}"}], ",", "0.03"}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<E(t)=\!\(\*SubscriptBox[\(E\), \(0\)]\) Sin[\[Omega] t]\>\"", 
          ",", "Medium"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.2", ",", "1.26"}], "}"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<R\>\"", ",", "Medium"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"2.05", ",", "1.99"}], "}"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<L\>\"", ",", "Medium"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.99", ",", "0.54"}], "}"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<RLC-circuit\>\"", ",", "17"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "0.32"}], "}"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<C\>\"", ",", "Medium"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"2.85", ",", "1.3"}], "}"}]}], "]"}], "}"}]}], "}"}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7681527824568787`*^9, 3.768152840957938*^9}, {
  3.768152873828526*^9, 3.768152879675891*^9}, {3.768152918162138*^9, 
  3.768152926431629*^9}, {3.768152979237577*^9, 3.768153067503956*^9}, {
  3.768153139004834*^9, 3.76815318070615*^9}, {3.768153261079266*^9, 
  3.768153317819664*^9}, {3.7681533607946033`*^9, 3.768153363201147*^9}, {
  3.7681533977041063`*^9, 3.768153436982575*^9}, {3.768153478634873*^9, 
  3.768153683725451*^9}, {3.7681537149887447`*^9, 3.7681538523722754`*^9}, {
  3.768153897625534*^9, 3.768153963272566*^9}, {3.7681540104934053`*^9, 
  3.768154077647191*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.88, 1, 0.88], RectangleBox[{0, 0}, {4, 2.5}]}, 
   {Thickness[0.004], LineBox[{{1.3, 1.1}, {1.3, 0.7}, {1.65, 0.7}}]}, 
   {Thickness[0.004], 
    CircleBox[{1.76, 0.7}, 0.1, 
     NCache[{-0.85, Pi}, {-0.85, 3.141592653589793}]]}, 
   {Thickness[0.004], 
    CircleBox[{1.89, 0.7}, 0.1, {-0.85, 3.991592653589793}]}, 
   {Thickness[0.004], 
    CircleBox[{2.02, 0.7}, 0.1, {-0.85, 3.991592653589793}]}, 
   {Thickness[0.004], CircleBox[{2.15, 0.7}, 0.1, {0, 3.991592653589793}]}, 
   {Thickness[0.004], LineBox[{{2.25, 0.7}, {2.7, 0.7}, {2.7, 1.25}}]}, 
   {Thickness[0.004], LineBox[{{2.63, 1.25}, {2.77, 1.25}}]}, 
   {Thickness[0.004], 
    CircleBox[{2.7, 1.5}, 
     0.15, {-2.0707963267948966`, -1.0707963267948966`}]}, 
   {Thickness[0.004], 
    LineBox[{{2.7, 1.35}, {2.7, 1.85}, {2.22, 1.85}, {2.18, 1.75}, {2.11, 
      1.92}, {2.06, 1.75}, {2, 1.91}, {1.95, 1.75}, {1.9, 1.91}, {1.87, 
      1.85}, {1.3, 1.85}, {1.3, 1.42}}]}, DiskBox[{1.3, 1.42}, 0.04], 
   {GrayLevel[1], DiskBox[{1.3, 1.42}, 0.03]}, DiskBox[{1.3, 1.1}, 0.04], 
   {GrayLevel[1], DiskBox[{1.3, 1.1}, 0.03]}, InsetBox[
    StyleBox["\<\"E(t)=\\!\\(\\*SubscriptBox[\\(E\\), \\(0\\)]\\) \
Sin[\[Omega] t]\"\>",
     StripOnInput->False,
     FontSize->Medium], {1.2, 1.26}], InsetBox[
    StyleBox["\<\"R\"\>",
     StripOnInput->False,
     FontSize->Medium], {2.05, 1.99}], InsetBox[
    StyleBox["\<\"L\"\>",
     StripOnInput->False,
     FontSize->Medium], {1.99, 0.54}], InsetBox[
    StyleBox["\<\"RLC-circuit\"\>",
     StripOnInput->False,
     FontSize->17], {2, 0.32}], InsetBox[
    StyleBox["\<\"C\"\>",
     StripOnInput->False,
     FontSize->Medium], {2.85, 1.3}]},
  Axes->False]], "Output",
 CellChangeTimes->{
  3.7681527863293552`*^9, {3.768152818583467*^9, 3.7681528419194803`*^9}, 
   3.768152882255052*^9, 3.768152933725786*^9, 3.7681530822966747`*^9, {
   3.7681531587067223`*^9, 3.768153181794784*^9}, 3.768153321530756*^9, 
   3.768153363856422*^9, {3.768153399663884*^9, 3.768153438432684*^9}, {
   3.768153569945567*^9, 3.7681536104698477`*^9}, {3.7681536752936907`*^9, 
   3.768153684278908*^9}, {3.768153761232697*^9, 3.768153799571113*^9}, 
   3.768153853262857*^9, {3.76815390351575*^9, 3.768153929991829*^9}, 
   3.768153987326529*^9, {3.7681540206453323`*^9, 3.768154078387814*^9}}]
}, {2}]],

Cell["\<\
17.  R = 6 \[CapitalOmega], L = 1 H, C = 0.04 F, E = 600(Cos[t] + 4 Sin[t])V\
\>", "Text",
 CellChangeTimes->{{3.768152474783886*^9, 3.768152543067107*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.772894729818235*^9, 3.7728947303129683`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"eqns", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"eL", " ", 
       RowBox[{
        RowBox[{"q", "''"}], "[", "t", "]"}]}], "+", 
      RowBox[{"aR", " ", 
       RowBox[{
        RowBox[{"q", "'"}], "[", "t", "]"}]}], "+", 
      RowBox[{
       FractionBox["1", "cC"], " ", 
       RowBox[{"q", "[", "t", "]"}]}]}], "\[Equal]", 
     RowBox[{"Vee", "[", "t", "]"}]}], "}"}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"m1", "=", 
  RowBox[{"StateSpaceModel", "[", 
   RowBox[{"eqns", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"q", "[", "t", "]"}], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"q", "'"}], "[", "t", "]"}], ",", "0"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Vee", "[", "t", "]"}], ",", "0"}], "}"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"q", "'"}], "[", "t", "]"}], "}"}], ",", "t"}], 
   "]"}]}]], "Input"],

Cell[BoxData[
 TemplateBox[{"0","1","0",RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"cC", " ", "eL"}]]}],RowBox[{"-", 
     FractionBox["aR", "eL"]}],FractionBox["1", "eL"],"0","1","0",
   InterpretationBox["\[InvisibleSpace]", None],{
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2}, {{
     Control`CommonDump`$DUMMY$}, {Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
    Automatic, 1, 1, 2, 1, {}, {False, False}, False, Automatic, None, {",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"q", "[", "t", "]"}], ",", "0"}], "}"}], ",", 
         SubscriptBox["\[FormalX]", "1"]}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{"Vee", "[", "t", "]"}], ",", "0"}], "}"}], "}"}], ",", 
     "Automatic", ",", "t"}},{}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3}, {#4, #5, #6}, {#7, #8, #9}}, 
        AllowedDimensions -> {3, 3}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, "Columns" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #10, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 2}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{4, 5}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{3, 3}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{6, 6}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{7, 8}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{9, 9}, ","], "}"}], "}"}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"q", "[", "t", "]"}], ",", "0"}], "}"}], ",", 
         SubscriptBox["\[FormalX]", "1"]}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{"Vee", "[", "t", "]"}], ",", "0"}], "}"}], "}"}], ",", 
     "Automatic", ",", "t", ",", "SamplingPeriod", "->", 
     RowBox[{#10}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellChangeTimes->{3.770144353269897*^9, 3.7701492539110413`*^9}]
}, Open  ]],

Cell["Here I put in the given parameters.", "Text",
 CellChangeTimes->{{3.770146438546074*^9, 3.7701464756487513`*^9}, {
  3.770149048708189*^9, 3.770149054988188*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ms", "=", 
  RowBox[{"m1", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"cC", "\[Rule]", "0.04"}], ",", 
     RowBox[{"eL", "\[Rule]", "1"}], ",", 
     RowBox[{"aR", "\[Rule]", "6"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.7701443797114677`*^9, 3.770144402629148*^9}, {
  3.770145285562131*^9, 3.770145286064172*^9}, {3.77014818254652*^9, 
  3.770148207639966*^9}, {3.770149166466113*^9, 3.770149233126296*^9}, {
  3.7701523617932262`*^9, 3.7701523854548817`*^9}}],

Cell[BoxData[
 TemplateBox[{
  "0","1","0",RowBox[{"-", "25.`"}],RowBox[{"-", "6"}],"1","0","1","0",
   InterpretationBox["\[InvisibleSpace]", None],{
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2}, {{
     Control`CommonDump`$DUMMY$}, {Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
    Automatic, 1, 1, 2, 1, {}, {False, False}, False, Automatic, None, {",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"q", "[", "t", "]"}], ",", "0"}], "}"}], ",", 
         SubscriptBox["\[FormalX]", "1"]}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{"Vee", "[", "t", "]"}], ",", "0"}], "}"}], "}"}], ",", 
     "Automatic", ",", "t"}},{}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3}, {#4, #5, #6}, {#7, #8, #9}}, 
        AllowedDimensions -> {3, 3}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, "Columns" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #10, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 2}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{4, 5}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{3, 3}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{6, 6}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{7, 8}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{9, 9}, ","], "}"}], "}"}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"q", "[", "t", "]"}], ",", "0"}], "}"}], ",", 
         SubscriptBox["\[FormalX]", "1"]}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{"Vee", "[", "t", "]"}], ",", "0"}], "}"}], "}"}], ",", 
     "Automatic", ",", "t", ",", "SamplingPeriod", "->", 
     RowBox[{#10}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellChangeTimes->{{3.7701443743745823`*^9, 3.770144404012825*^9}, 
   3.770145287594838*^9, 3.77014820947893*^9, 3.770149259175438*^9, 
   3.770152392781999*^9}]
}, Open  ]],

Cell[TextData[{
 "The way to get output from a state space model is to use the command ",
 StyleBox["OutputResponse", "Input"],
 ". "
}], "Text",
 CellChangeTimes->{{3.770146495470244*^9, 3.7701465359442883`*^9}, {
   3.770146622339973*^9, 3.770146684002142*^9}, {3.770146970560544*^9, 
   3.770146978584408*^9}, {3.770147268633367*^9, 3.770147273126587*^9}, {
   3.7701477543427477`*^9, 3.770147775446344*^9}, 3.7701490318154173`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"outz", "=", 
  RowBox[{"OutputResponse", "[", 
   RowBox[{
    RowBox[{"{", "ms", "}"}], ",", 
    RowBox[{"600", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", "t", "]"}], "+", 
       RowBox[{"4", 
        RowBox[{"Sin", "[", "t", "]"}]}]}], ")"}]}], ",", "t"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.770144445461206*^9, 3.770144473724625*^9}, 
   3.77014517365375*^9, {3.770148220593336*^9, 3.770148225247464*^9}, {
   3.770149277998651*^9, 3.770149287876754*^9}, {3.770152404327903*^9, 
   3.7701524508931*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"0.`", "\[VeryThinSpace]", "+", 
     RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "3.0000000000000004`"}], " ", "t"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "100.00000000000003`"}], "-", 
         RowBox[{"1.1102230246251569`*^-14", " ", "\[ImaginaryI]"}]}], ")"}], 
       " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"4.`", " ", "t"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"100.00000000000003`", "\[VeryThinSpace]", "+", 
         RowBox[{"1.1102230246251569`*^-14", " ", "\[ImaginaryI]"}]}], ")"}], 
       " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"3.0000000000000004`", " ", "t"}]], " ", 
       RowBox[{"Cos", "[", "t", "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         RowBox[{"4.`", " ", "t"}], "]"}], "2"]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1.872140786622813`*^-14", "-", 
         RowBox[{"1.6544499974806252`*^-14", " ", "\[ImaginaryI]"}]}], ")"}], 
       " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"3.0000000000000004`", " ", "t"}]], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         RowBox[{"4.`", " ", "t"}], "]"}], "2"], " ", 
       RowBox[{"Sin", "[", "t", "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"75.00000000000003`", "\[VeryThinSpace]", "+", 
         RowBox[{"1.526556658859591`*^-14", " ", "\[ImaginaryI]"}]}], ")"}], 
       " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"4.`", " ", "t"}], "]"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"8.659739592076221`*^-15", "+", 
         RowBox[{"1.8041124150158794`*^-14", " ", "\[ImaginaryI]"}]}], ")"}], 
       " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"3.0000000000000004`", " ", "t"}]], " ", 
       RowBox[{"Cos", "[", "t", "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"4.`", " ", "t"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"4.`", " ", "t"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2.2737367544323206`*^-13", "+", 
         RowBox[{"2.911614304776761`*^-14", " ", "\[ImaginaryI]"}]}], ")"}], 
       " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"3.0000000000000004`", " ", "t"}]], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"4.`", " ", "t"}], "]"}], " ", 
       RowBox[{"Sin", "[", "t", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"4.`", " ", "t"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"99.99999999999997`", "\[VeryThinSpace]", "-", 
         RowBox[{"1.1449174941446927`*^-14", " ", "\[ImaginaryI]"}]}], ")"}], 
       " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"3.0000000000000004`", " ", "t"}]], " ", 
       RowBox[{"Cos", "[", "t", "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", 
         RowBox[{"4.`", " ", "t"}], "]"}], "2"]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"7.915554558944109`*^-14", " ", "\[ImaginaryI]"}]}], ")"}], 
       " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"3.0000000000000004`", " ", "t"}]], " ", 
       RowBox[{"Sin", "[", "t", "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", 
         RowBox[{"4.`", " ", "t"}], "]"}], "2"]}]}], ")"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.770144475190032*^9, 3.770145177083823*^9, 
  3.7701452926941423`*^9, 3.770148228722929*^9, 3.7701492931847277`*^9, 
  3.77015246815559*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"outt", "=", 
  RowBox[{
   RowBox[{"Chop", "[", 
    RowBox[{"ComplexExpand", "[", 
     RowBox[{"Re", "[", "outz", "]"}], "]"}], "]"}], "//", 
   "Simplify"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "100.00000000000003`"}], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "3.0000000000000004`"}], " ", "t"}]], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"4.`", " ", "t"}], "]"}]}], "+", 
   RowBox[{"100.00000000000003`", " ", 
    RowBox[{"Cos", "[", "t", "]"}], " ", 
    SuperscriptBox[
     RowBox[{"Cos", "[", 
      RowBox[{"4.`", " ", "t"}], "]"}], "2"]}], "+", 
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"4.`", " ", "t"}], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"75.00000000000003`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "3.0000000000000004`"}], " ", "t"}]]}], "+", 
      RowBox[{"99.99999999999997`", " ", 
       RowBox[{"Cos", "[", "t", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"4.`", " ", "t"}], "]"}]}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.770152519852882*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"outtf", "=", 
  RowBox[{"Collect", "[", 
   RowBox[{"outt", ",", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "3."}], "t"}]]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.770152552167131*^9, 3.770152581928398*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"100.00000000000003`", " ", 
    RowBox[{"Cos", "[", "t", "]"}], " ", 
    SuperscriptBox[
     RowBox[{"Cos", "[", 
      RowBox[{"4.`", " ", "t"}], "]"}], "2"]}], "+", 
   RowBox[{"99.99999999999997`", " ", 
    RowBox[{"Cos", "[", "t", "]"}], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", 
      RowBox[{"4.`", " ", "t"}], "]"}], "2"]}], "+", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "3.0000000000000004`"}], " ", "t"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "100.00000000000003`"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"4.`", " ", "t"}], "]"}]}], "+", 
      RowBox[{"75.00000000000003`", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"4.`", " ", "t"}], "]"}]}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.770152583667197*^9}]
}, Open  ]],

Cell[TextData[{
 "I can see the si",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["n", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "+co",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["s", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " identity in the above, but will have to take it out by hand."
}], "Text",
 CellChangeTimes->{{3.770152811753643*^9, 3.770152841695883*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"100.", " ", 
   RowBox[{"Cos", "[", "t", "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "3."}], " ", "t"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "100."}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"4.", " ", "t"}], "]"}]}], "+", 
     RowBox[{"75.", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"4.", " ", "t"}], "]"}]}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.7701528676566477`*^9, 3.770152905805876*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell["And with that, the above cell matches the text answer.", "Text",
 CellChangeTimes->{{3.770152927828239*^9, 3.770152938772612*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"100.", " ", 
     RowBox[{"Cos", "[", "t", "]"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "3."}], " ", "t"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "100."}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"4.", " ", "t"}], "]"}]}], "+", 
       RowBox[{"75.", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"4.", " ", "t"}], "]"}]}]}], ")"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "0.6"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.01"}], ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "125"}], ",", "125"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Thickness", "[", "0.003", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7701530079040403`*^9, 3.77015304800159*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.003], Opacity[1.], 
    LineBox[CompressedData["
1:eJwVmXc8Vf8fx8neGrjXinutjIwKDc67+opkc+89uMpIIrs0UKiM7EgaSEqD
okQh6WOVZCRCRjKTEdlk/M7vn3sfz8e95zNer9f7fT73XFlnHyvXDSwsLNeI
l/+/p19y5tQ8HqPPwlJ7uZBfBsuwG9/DkHHHQFLdM91uFftuGu0vI3MB+9n7
2LzygACcM7QV5JC5hmnsym4O3CQFh6qBubD1NuYoavg1Ik8Vnl/eeWVq61Ns
5xh//I/ve6Gcs11q8mUO5vleh0oO1IMv0ReKJw4+w148/XT9nigG00nlE6Nu
+dgmpnuTNmU/pFnKPZtuL8BseOMp5N3/QZ9TnujE1hKsK2RKxoLbGEYfrLuM
j5Rg26c7xuRLjGF6yOLl2MtSTE/DeXTK7Qiwe8wcGT1Yhh2u4x8/9t4EFPx1
w365vcdYpXnngmjmQOr8z+00CWGeKbwHWufMQTJoQmAmGGG1cECW39gC5N7p
208bVGDpic9TNYYsQHt/39xUeyU2xEjAFgStYE//tTTffVUYW2RUZgPdCvSv
aB2cyqzCpLslDW+nW4FhzZXESfdq7GH+Y92NStaAH1ZQ+fOvBst+wBkaq2ED
QZanHMe2fsKcYkuWZYXpsHZFm9wb+wmrF+m9IGVCh9DXrF+/Ln3CqtdsrEYj
6HBV4tbB0pY6zDcgm2V1kQ7xQ9UK1yLrMZVbv3pUmhggTErsDZ6tx865Cpi2
s+KQZGx/y9epAbOhHD1ybAcOqfl/efC9jZjwZ9OzfMk4ZF6QnlCYbMJ2s2c4
sRvYwsa2WSuB7V+w807ZrVXetmDlY6ceefwLFq1zb9Ar1Ra+3ZcfCWz+glld
mUy5NmQLontjqme5mjFNzRPb1nntAG+dyvTWb8b0ZgP03NTtoJOzzNY5txmD
glUZsQA7kMiU1e7ua8byxLdvdblpB8zdkZvopK/YhHXb8tPXdvDjlNXnw+Ff
MYeJl1Mas3Yw8GVkn+axFuyuPH+uk4s9yHmYkXNTWrBh1ad7KoPt4QRb4Zxc
fQuWzcEfrp5iDyO7QvJIu1sx5YhLKbur7GFb02B0kk8rdviqFl9Xhz14nDR2
43/Uip3nCbyTNGEP43dEZFg2f8OoE+9iTLcwQW1n0MqFw9+wpiybYpoCE7wb
fnbMhHzDsrUh+aIOE/6u517/Nf4Na960yKHNYILW7Y3eTtQ27LjM1uDPrkw4
o3XOuMu2Dev8MMiMPs2E+eMH2Jo+tGH5Dy22x8cyQWftca/RahtWOm7D25HK
hPOpAmWVO9oxcpS5Ii2LCaUap2/t82jHNHo9VrmeMeHfp44zrzPbMRv6eY6Z
Qibsc9G31Ghvx24frigmvWPCpZUHajkCHVjen47EoGomvE/h4ZX7rwO7LOHD
Jf2ZCSzqPsPpgR3YkSnqzQ3NTNhf21op9rIDu+fCfK3SxoTLTnvuXf/VgUnm
i/Xd7WRC1fK9ID7p79jeuzXxtB9MYL/BgYfbfMfqn0jp2PcxwUDt1M716O/Y
DdEFi/wBJkR8+CJ8oeI7FlUha2UzxITaY9oT0wvfseUeLN9kmAk8S3c/eW7v
xA5HZXbdIVg38nugsVMnltVbz/z/5ydFxFSVbnRi9ib77ngR16c+sOnh+NiJ
XdreFs8yyIQPmknxA0udGH0DaSdXP6Hn+yasQrULm8lcDbvSywR5M4G/Gce6
ME6eUe9z3Uyw6TbOCk7qwr7mJU4OdjDhqkeUtV1NF6Zo1Tvf0MqEwsUadt3F
LszEdiRg5xcmDESwvRZR6cby8hvsxQm9Nonsd5tx6MZ0FJ+lhNUw4cCDS6Tm
xG5M2j5S0PM9E/w1yz7lVXVjwpu187uKmXD//VJg7Hw3FipvfvTrS0Lv7jM9
hswebOSt51km4aeGR0G8fEIPNsxVmjlzmwnHFicxtsoeTMHjpz35OhPKt5zK
Klf8gclX7RoTu8SEiawn1ml2P7Az/n9OzRL5kdQcZg+M+4FF3zjTdsKdCUGm
Tm67Zn5gjtfUH2yxZkJOVwZps0Iv5hqtd9fakAmd7t2fpvBezOVH/hP1vYTe
EQzVZ+W9WEeUnuAHWeL63kfnNxr8xJRsBdLTRu0h6ZGBZejRn1itqOuf2S57
yPEa3DZ57ie2hTIoulhvD53/ZLvqc35iyuP6CRx59qBLSteLEu7Dpqs0aj08
7WHeInnDelcfVhv438L7LjsQJGl1ec31YQdM0u3Da+1AoffLq27Bfsz0Zd4l
wSI7oHkJupbu78fKXXKL/eLsoPDatY8Bj/uxLRzHlB/stQO/ypDYcf8BrF6H
Wvoj3hYWN9543hUzgDHbUjVnz9vCJacnjXUPB7A023i2QWdbiGVpFn7aNoB1
bYxUZ2jbwhN9SorrnkHs3ctgpZwuHH6WVqf/YB3CeKepTaMyOFi84sn/kjiM
bUmubXRIo8P2h8nNhXm/scRrRsfVQq1hyOykZK/uFLbbwLmk65wxpIpHSN13
nMHqntdQY/wAdvsX57PVz2Pr4VJjVRnboKr9roWP4jImQ8memvsqgTRj1/RJ
h1exWd8219C7u5Hh8J5eDQYLdPA7TmWmHUK/1F4bzI6zgvCg7r2iRTNEuejl
qjLDChEP7qfSxcwRs14u3HmJFdjkvDoHd5mjLx7J1V84NkC/9qFftf7mqPSx
78Hn0htAS+RB2bMxcxQrq7L/hMUGCKv6ZjniaYE0RTL3dbzaAAMWgtnB1pbI
8ziDKVS6AcjbxYLinCzRo1eCwYfQBihaUXyR7GOJxK0uvi2s3wCl5zk2hcZY
IvYEuz3XhzYAn/ifl+2VlqiNW0TXWIwN1gLpAYHqViho5dqOskA2MLj/hmLJ
Yo0az7jcCAxjg+cf2DqEBK2RzMS+Od0oNtim97MaSVij6p7J10UpbKCUB1JL
2taI/z1tT/4LNsgyrnpV6WmNMsJk92cNs0FnhQbby2/WqIKzxCzKih2kn46k
lKTZoC0hSfmHbNmh0Fx+/tkTG3Ri4ZQwhyM70JZlPK4X2iDeEemvYV7sMFST
6qlWb4OsPl2lBUWxQxCbydKLZRs0GGPB9C5nB4nHgia9NjTEtXHE3UaZA7at
XsAfrtLQfCTT4J4GB/SOFnCzcNHR8NoXmVFtDlDKnxo3FaajD+Ml7SEHOaCZ
S2wfotBRRG2MQS6TA2hFtk5rh+iIM1RddkMCB5SubTHqjqWj+fkHKyYpHBBa
OPIJTyHG8yJ1pN7lAMNi+vaP6cR49qwJak84IIdjIOZCHjGeTssKXsEBf5M6
RHY2EeNNnu3In+GA16NSLisCDDTvOvZqeYkD+kmMgRsiDDTcfSzBgIUTJOgv
V6WlGOhDndGhLn5OeGbbM8mlykARj8QLORU44cavSJrqYQbiPFqe4IBzAr5F
MeNtKANxNHAY8r3jBNW+nMffBxmI3yvNpaeKE7aHBlDIYwy0RWBHaH4dJzA/
2igY/mUgOVPHEusOTlCww0q8Vxnov4ZSlbQZTph+1Z4+tgVHlxt8hNWUuaCw
TIl8G3AU7cWptq7BBW4THvbvDXCUJJB+uFmHC3y96sZajHGUZVp3OcCAC+q1
yn9/tMFRRYPc3DtHLrj5eQtrlxuOWBq/fzdL5QK1J0uLOdE44vb2nZfJ4IIX
ASa5hfE4Ehbk2jzzkAsSzcKDnyXhSMZsp0lqARfcsj/vd+IOjrDG+PLeBi7o
G812ZHuKo0Pe8l0vW7mgi06qufgMR2aCZQtXurjgduTBXcP5ODpq9ltD6TcX
XD0kpBH2GkeXGg8+8GXnhuVOOVpvJY4ivDvfH+DjJuq8oPtTDY7iBf26t2zi
hpfVNceyanGUbpYhUrKVG9SvH7SUasTRwz87tWIUuOHUgkbZ+y84ehb/2cxB
jRu2OT6RsGjBUVnjYiTrXm5gNS9/uacDR9XeCQ9b9nPDkDc2dKMTR/WCChXZ
RtzAUSfE1dONo24z6+XDdG4o//FLSKcPR/8an3sm+XHDVXmpjZt+40i62enu
f+e54YW+o0PLKI4OtIjUzV/ihj0CVbuujBN+tF9UtI/lBmv+iYi8SRzlfdek
CyRzA+emltVtf3HU3DV09f1tbtAOFl1NnsYR6adpP/UxN3gE+FzfMYejff2s
G9uec8N5kzU593kcOQ4WYVGF3PBbskcvbgFHV4fdvfe85YbpvuNd9xZx9HhE
Kn28gtDj79JK5hKO6kabP2fUcsP6Cl9W4jKO/oyHL1s0EdeLitZ5/8PRpsnd
29jauOHfy4wze1dwpP13glHUzQ2y2Tr35wm2m7kf4TbADUFql8wzV3F0cY5W
RB7lhrdT4iG6azjKXOAZ/DzFDSfXK9TfE1y99G7TpQVu2N2u5bRzHUcj//z2
a6xxA91Vd/MtgvnX5H372XngPvdTg1GCNVg6M27w8cBY8olFZRZbZL0hvuHQ
Jh44ZHFUxY7gs+wHVhZJPCC/HvXjHMF3OOeVc7fyQHr36MarBJdz59g6KPDA
tfvJNZcI7uc9GiWkxgNF4RlLbgRzCmx6U7GDB1gPaOVhBG8T+jB0eg8PBGwK
G+Ag2GRj4BaF/TxgV1x7u5RYj+/m7Qc7DHnAMtiq2YHgGyL9ftFmPGCscTp6
ktjfG7GbmftoPJCqGVPjQ3An2bjpjz0PdHpwXvlB6LMmsbaa6cwD6zRm1V6C
KdIFqtbuPKC4JhQZSeh5SOaEPYcvD1xnfdFYQegfJ9dY7H6RB0ovbhtnJfx5
oXD5l8RVHhCl2lVxEf61KmmLNkbzQHCovOwK4bekWsZprVs8kOZaevoFkQ9Q
t8oazOCBF8s6Hr6zOHLR5Gy+mc0DTa7Fo9IzOMrZ5b39XwEPFH5+Gmc4haNG
HYrD8xIeiPutUlDxB0fTu9tijiEeeKDQclx5Ake79fV/VzXwwI6gHRc+Evlm
wrTY2VZiP//sev79wlHogUeHlLp4wMXvaqv0MI5qDwk+jB3hATx0T5hGP47G
jSq/6k/ywM65pN1bf+JI6MhZ1r9zPJArFh690oMjuvmPozQ2XpD6YLZy+TuO
hhh5ZGlpXkgSKTB534SjR/hqJVOOF8TM0mMtGnB00tbE864yLzgoTBV+rcPR
qN1oOUmHF9xFRqufEv1gykHh+GYLXjB/MiH4oBRHBUcDBKzovJARcrP87Rsc
nT5W/TqRyQt/rte61BTiaN7RmUfQnRdK11lv5ubhaMUlI4/7Mi+cmzVrrLqP
o/LjEwzDKF5ALlFHj2fgKMR1H2tEPC8wXbJn5oj+tsGt05rtLi9s0vy5czyZ
6I8eokurr3hhpCfbXD4cR5t94w/ODPFCApVz+PNxwj/fnnHNcV5o1F36ctER
Rzf9VG/6TvPCfL36sAyTqPfTdSMTa7wQHDJ/e4810U/OcsaPiPHBcGq1fxnR
z5WDL3X0HOYDZR9r1xUSoW9wQ5ikBR/kuGcerNyMo+cXJVXs6XyQ8dMv8IIg
UU8hpRc7nPlgq8vJtbdsRD1fnqe0BPFBucBq6fUJBtof5e1V+5wPpDkurl0u
ZyDxgl5GfCEfKHntdO58w0CzXRYHbN7ygYr/0ieZlwz0SH2H2M9aPvhQ1FAc
+IC4X7UvoIUBYvz87WkukQzUJh+2RVGcH1YSx4cETBjoVFXy2/AIfqhTimCO
1tLRfxPsj47E8YNJZ5i7KqIjabGziRtv8IOf+gXlo2/oxPkKd02/zw86O8/0
JWbTkfYmKaGiMn7o/q/n244wOmJxeuQ8OM0P06sfEgN20VHKWjHPwWMC4JFa
6kNKoiF+xRrvFFcBsNEyCRCJoqGr5s0tv04JwEG9UR6OSzTkn/k7Pfa8AKAZ
xtJbdxoyOyCu1XZdAC7WKGVdAxrijAiyc68WAB+/TPR0zAadF9DPTdgmCH62
zvyqujbIXrLKpHtGEKZWCw/W5VqhUa+/00XLghCFyk5Hpluh8++33k5gFYK2
jV6r2glW6KZz8NABISFoyHhn6OVvhb4+2XXpqbIQTB7m/6mja4WMdz3JP+sk
BKayniFmFZZoj1ncpo1NQuDGynmh8ZMF4kcq4xSaMMQ2XfqNeZki111Zc7aq
G6Eoeu/nRPw/dO7SeSuZuY1Qtvwou11KG4WPJrc0Nm6ClDwnpdv5U+9NlIWe
8N/ZDB+OGRegl1oQ91wbmThtAetk+zbu3ANQZ/1g5cxuETgV560/u3gECsL7
O+/uE4FlxG+bTDaBO29kSyoxEfAro7PK7jEBD4nMAOFDIhBSIJPDFWQCPANp
f3KtRMBC3Xoby4oJGPnf/Nl/SgTGWmpOxi6bQk3itWqLDBFQ3Ct0M+q3OaAG
n1hVNlHI/vJG+myNJezcAnypnKIQWz/ccLrVEp7YCUez8ooS90+V4OMDlpDw
60Vkm7AoGF47mSPNagVHWacvh0qLQjJtQXpurxWs7DxzoXW3KHgMSW+SzbeC
3WnnTwT7ikLDNk9/1RhreNZvNDR8WhTiys4/DLhlDTLbyMctz4lCIGMm5kW2
NXC/LnFSuCQKQVkPbf69t4aOpmXmlxhRYKg7VgzMWMNZtovWco9FQb1zW+MC
bgMFHmFQ3yMKj/QLxCbEaLDT2bFWoU8UVLOf1MtTafDaFrMIGxSFPPOlbPPt
NCgxWj2mPSYKsx4Wj87+RwOkcCEkc1EUEtpesm/0pUFDv2/5mc1iEKhafd23
mgYjdo77pA6LgVwB1+hjJzp4WGHV50zEYJj/Y9W8Bx3GD0ubfDUXg/Rhv65d
Z+gwqdttH0kXA6G4lJyrEXSYF8WD/rqIwXGVli3Hc+jA1mJeWnNJDJJZKx7I
TdJB+gim610oBgOvl8yveDLgT8Wp1fg3YrDq/mOz5WkGvNe9VZlfKgYrgsmh
woEMcFT4a/IXiYHp2ZmDxyMZkMX6wOlMgxj861dnPXafAYrFnDGBw2Lgui3s
V/pXBixu32Fx97cYkBcvMq92MKA2+5hI2bgY9KW67WP+YIBHcvG91WkxYJN+
v/3nbwY88/YoDF0XgyzHh0G6LDhoyDf2RJBI4PCmvVpRGQeWtOWsxxIk4NTy
MKeq49C8SfFkrTQJXtZPCQnvxMGfJXSaR54E8+fbFd7p4VDUpckVp0kC56S/
tq4WOERYHa1/vpME0vn1+0dtcKB/ir7eqEOCMy1hRo62OCy+HpAQ1ifBbOXt
x1udcdiTlKKRbEyC3QH2zmP+OPDyVM69MiVB2bGs+cWzOHSF/ClttSDBvdjJ
GwuBOAR7GRqIMkiww/Hn0MfLOJQbLdnediHBgab5m4XXcTi4zrxyL5gEftFj
B8qe4ZAZLf6bLZQEwkKZXJIvcFgR6TA7eYUEN8T5+Dxe4fBa1VpcM5oEQ58S
qr+U4KBkd/hlZSoJwv3GK2trcLg6xCmmeJcE1u9u6N2pxaHPtzo4JoMEqtL0
IdvPONyJxIxssklQXGRU+OALDvxFu3qHCkgg3vRWwqkTh5Mw85/xaxLcenC/
7kE3DjWfX+TklZDA+LTOrdYfOFzqVzl7DpEgL1XrGssADp1ev7u6qkjQ2Zv6
9N8gDjpLj/bDRxKY8T/vHxzGYUqIIsDTSOh948ztsFEcTO72+ns1k0BzKG7L
rnEcniqkdzS3kiCCU/5B2wQOznqkh3e6SJDuoTQ/MEXoVfuNZ/0HCZQqnYvN
p3GQsEn2ceknxhN5c+3pDA6tHoJ7VX8T66lopynOE/mY/5yZOE6C4ye/mx1Z
wCEu7Brn3CQJjj4+Zu2wiMMov6Gn7QwJwjyznR2WcDh0i/3ru3kSLCVMBx1Z
xiGLWqlDWSbBm9a7GYr/cFjPC0mPWCX8H9lQ95dg5h49tjEWMtw6cXP16QoO
xTXLJ83ZyfCspVnXYhWHLZbFja+4yPA6Sy9okGC/7oCdJD4yCO7wqT6xhkOj
2447wYJkUG7m3tJOsPLM1PrPjWQYfF3ivmudyOOlPFcDETIU8OnXhBE8wOP5
+SmJDN8HjyqUEQwp2zQFJclw3WA6dpDgNJlfN/23kkF+a9fiMsGLuQ9X2ihk
4LPk8VgnmKbj7LxXgQy/nlz4+Zfggsqttfe2kSG1fxfzK8GCZj1q7GpkUHpi
05NJsMf3O8knNchQcX3JhTjPwsfj+FL9DjIky9OmuAiWmxI5pqlDhpz2h5cz
ifWHBrVUp+whQxPPDglFgrs5rysv65HBgI9RepfY/+4ks8Sj+8lwgxTguEbo
dVOKf77yPzLssV8TMCd4+skne0UjMhz77VsVR+hrtjOyIuYIGQJqGGGlhB+5
7/9TnDIjQ0ePsdE3wq/jbe+ni2lkGBeZn2kl/BXuq0sZwMlwM5Om10D4/3bs
m64gkwwfUp70Fc3hsIl1/JKLMxmGWv/o4URe3vEtyMa7kqEkx2FhI5Gnk6Ib
aopPkmGK9Y1gGZG39yokPkEfMsRvibXrI/LooU3N0/Ung0lZcyKTyKvo/u2W
LgFkWClLUaol8uxJ/y+1OIgMVKtbob6/cBAP86W6RJFB2v3JFMdPHD7EBH2I
iyFD+1iZBTtRP343I9yL48kgRjWVmOnCoTY3LV8ghQyBfOS5++04nG2r3Vt8
nxi/na//v0YcKH0tP/ofEvnJP1H2gajfhrEfYQJPyPDxTi7/7k+EH6xzH53z
yHBO8LjIZBXR/1RkbQTekuFAf+V8ZjHRf7RVF3TKyfD+kUP+oyKiX+zXueNc
QQYecTSWVkDUM93055uPZOA4dWXBjug/qmEXPJ1byTC343WS1D0cOmKuCsW1
kyF8diXz8V0crtxMKHjTSeSJj36Qcouo/9zsRf4+MtS7S5r+TsQhqq356psJ
Mlx8TCkqD8NhZ1+3Yv8UGcy1+h40XMShd+xXHf8s4fc+t90NF3DQZl0Tdl4m
g7Bzl3OGH5F3FeV0fi5xyJ1ZXIhyxEE/7HKRk4w4+EnJJ4TtxWFhX5pTMFUc
0pNHWIq0cXixWCSQqiAOikqXe75r4kD1/e1aryoO+soz/QuKOHAfsxDV2S0O
INDhH74Zh5Z90uf4rYjPPd66/P7FgNhFHaoiTRwWoxZmd/Yz4FChZdN+XBw0
nkxQ/bsZUKwSrnjuqDhUufw9WfGFARni4+19HuJwwCl9+lUxA04ului+uSIO
n2XZ946HM0C2sGWwOUIczlmS7K1DGNDpM5E4fk0ctt85bfPsPANMf8n8lk0U
h6gEwYEdpxig1RZ5OzZNHDLHJPpvmzNg9RVt2alIHOJdEkVqRBiQ5PP3Lf8v
cWjadzDoTSod2rE07lOj4vD8lsNabjwdJIUNaZ8mxMEk/frlxHA6PH6R9id8
Vhy4JRSfbDtNh7K/hrLrrBKQ7/1wa7opHYZPZ0T8lZQAQ5Gi+/HrNNhz/ohl
m5UE/GGMGzUwaBBiNJ++ky4Bn5cMjjSZ0KCadH80yVYCnv+Z06rcTwPzkvkr
5o4SEC5Z1hyoQoPjy/df13pJgM3khLLumg3EBy9KvI2SgMOeQsdGM22gPzR7
+F65BIjp+8S6dRHnpS/pvtUVEsASYuXn32QNvDI3l0eqie+fvSfhV2UNWu8j
BLU+S8DuV5Qfh3Ot4cqqm3Z1uwQwzZXG3QOtQS5QOWJkSgKOXwlo8hC1hhOn
8+U1qZJgejPT7JGBFYy5lhyvjJSEFBUV2y+XLYC/7kCCcowkcJysO9LgbwGq
2+tLkuIlgRaNzMudLcBz/oegS4okvN5qXRp8wALGI9hL2B5IQvGUg7MnK8GP
zQUMyiUhGiKKDyybwZ/fQ0UfZyVhcnOHtleHCUx5beJqcJKCyeL3h+4wjCDv
8OeVE2rSIMUT29d4Xh+GT2pos81JQ4H+Ow3moAKI53YmRzZsBfL3nivDFlR0
xdE/q+GIDOiVfnLSWtmHFlbIcUdKZEBOlOfRaUsjNDVz5NpSqQzciDudLnHW
CI2MXgx/XCYD//Ufsim4Y4Q6O/ousiEZ2Hz6363cASNUXvjU++0HGZB+vSW/
7sxhdNVzt4VKqwx8nZkofZhsjIS78c18kzIw4W3iRKoyQUpvU2/XyckCZ0tO
7zc/C1Tr51toryALq6F5+tdDLdBJpcNN44qy0HJmPvhAggV6mrLMLqQiC0a/
DE9HPLNAyr4OvtaasnAygsUkedgCqchTDbv1ZCFSiXusGLdE2xPyZifospB0
/4Lkwk4r1GgQKRSCy8LAwFE3hwNWyHvlmLKwnSzcbgm8WGxuhfLdNzpqOciC
4pYboyYeVkjjvzOfz7rIQteP4MGJDCuktbQ7a91HFvQ4b5jzcFqjXS415huv
ycKgb+sen8/WSPLh8J7qaFnwkVR/5thhjTYMcSmci5UFJYs3nw8OWaPGE8Yr
3Qmy0BejNPVjzRqd8Gh68uSmLGy4/K7eTdMG3fL7zgoPZeGE45WRt8k2aDlk
4pX3e2K+8tqzGqY09BMJ3pOtkIV1ekvAIZyGPrBqRLdWysLXHB5BUxcaSr7i
77jngyz0jGiOqlygIdXIBX7OBlmQtPcMUH9IQw7xrCfSO2XhaIWepOECDaE0
EVL9nCyYfHKRD79OR2bpPbLOC7LAbRp4geMOHXWlZ6ssLsqCPfuDm+ey6Gg+
YxcmtyILLB2zopqv6EjtPu1E8AYKyOdvSV9soaM72SmFqkIUaPd/bPRtEwMp
PXIorxSmgB1JsdpHnIGKHsnX4psokPx27s0/WQb68rio66oIBTyWY+d+aTAQ
V863DT0SFEhyWDfYaMZAZ/JELOOUKLB9gNXgQTgDbcjvsaMqU6DPdXWrdSwD
JeRnHy9RoYB06mOV2SQGynmx6/zQdgp8oR6v5slkoL4C2j29XRRQPSdw7XIJ
A5m9SZmY2E+wlu3oo98M1P3GYeHKQQqc0j415TbJQO7F8qziBhTwje4aIc8x
0NWSoi2HjCig1xabZcGCo7dvv+3NMKNAqLBeO7cojpSQSLSZPQWMbjrT7uvj
aB/Z9VY3kwLBcW3djIM4svQvfORxlAIj4zMl64Y4CpSzropwosAJpWl3qiWO
6qMSV8rdKPA80dGm1BlHP/t6eU3dKRD5wWDfvxM4mtujTu7yoED3xOHjaqdw
JD3RsGvBiwJhC0kerqdx5GfJ56N+hgJ5agw+uSs4isixu/gugAIqtXL5fyJw
dIctJ+bIOQrouFWE/P/5eHWR0RO3QAoYV7lnzF3Hkah4RN+9UAro1gbd+H4P
R6X9LDbCcRQ4ynb4dlsxjhr3WjhnxFOgarlH8NVbHA3cuOermkiBNSGH66Hl
OOI31I8zSqaAU6/96z9VODqWG/Qh9DYFbFIVrMUacXSG/XOr4F0KeNembgj+
gqMoB/GBtDQK7Jh0Lmj+iqMCoZL14ntEXqinBCzaccR+Zl73bzaFuG/+i7nV
iyNSg4FhyGMKnN9QRArvw5GaQgpN4CkFWDOD7zoP4IjescN/2zMKrDiXXZoa
xpGH5pXQN88poHVdsCdzBEch0V/jDfKJ9dRT1A6M4ujJPr9cpwIKnEx8msGY
wFFZCiqZfEUBzkn98s9/cNT8R6j2YhEFuLi6P2tM4Wg5M2/wdjGRB7325w3T
OBJaXp1WLKVAgPD9UI5ZHMlZm7K+fksBdi5j/e1zODLlGJf6Wk6BIP6Ac1YL
xHwjV1bCEAWUM5hpzos42lAv0aVZSYHpKo1VxyUcOeS/KumrooBf2L7bpss4
Kk46cut6DQUeXWr3Ufr/8+6zA2f3f6SAO/eJUOL8j7xsg2h/a4k8CNvWPVnB
Ue2+zTvv11GgSX27qdn/n9/K5G6yrKeA5AMf7n6Cg9kO/mVppMC6WeE/lzUc
tQ93Nr1oIvwtv6fQSrBWnX+eYzOxf2p/lNY6jmKf88YJt1BgjKZLCSF4ODHr
FGqlAK391HQJwfvP7DH2baMAb5PVUj/BaYyvSjIdFHDl/6JNnP/R/B4Pri/f
KeBDNHTi/I8spDcMh3QR43UxaDME57LeqVbvoQBu7ab9jWDOIc0HvT8oMNop
apZNsGPtp7CEnxS4FBWV5kJwaa6TI9ZPgUDymKwwwSIJS/qTAxR4PX3hRw6x
fl//61L3hihgKnPx6w6C62jbVsx+EfVFO7yWQ+xfbndF59oIkdcxzFmY4BBJ
25K8UQqkDzauuRD6da5PpR4dpwD/sG9rNqHvzoGos4J/KLBB7/nAN8KP+A8y
tPJJCrzqElObJfz6/bR4h/dfor5tLV+yEJzhOzLVMEuBuxHTnoPzOFq0Dm26
OE8BwTud2W+JPFjrkPLUFilQZp0kGUbkhXvN8FTcP8L/sJUPbX9x5NzXe1hv
lQLPvG+snCDy9q76nNLEGgXypz6cHiLy6B/zeMhkAxW0oixVno8R/cIbq15h
o8KJLbNe879xpGjVnvWMgwo5sh/m1Yi8d5O4HPl5qCDvRfrpNogjw0cnOj8L
UeG2o4guVzeOsq6tFQdtpIKyftDXyu84WvG8maqymQqzianlnkT9Fez4YBMj
SgVdeJQUQ9SnZIV8k7EUFUZty+3nPuLo7MN3z5elqSDuQCmi1hD1EkmLzZGh
gljbiDf8//8vs/DDvHJUmMvo4zMow9FU12DVJ2UqiBptVQrKx9H0JWoFU5UK
UpITi/RnOJqVdS6fVKOC35uiUOpTQj+33mIRTSrx+1b9XXwWjlhmvz930qFC
JO0eNe8GjoT5m1KXDlJBRPPgjU1nifogfr3EGlDhh49j+7IfjrZYmSRtNaSC
/sq9uRYvon/c+hRrYEwFd93vDbgrjmTkqsOuWxDzRUTqPLfGkca+klPbHKgQ
eFjc6YoaUQ+9CyfLjhLz+wfeC1Qi8nBZ+4S5IxXiX4UPO1NxpFv7yjHAhQqJ
HgZ3Ock4Aps8WoU7FTaGcy3fYSPy7vkAsz1LBRJ3U8jyNwbySYvbfC2BCtv3
CCvl+TBQPavcpPF1KozESSWsuzGQsltpHX8yFRQmTw3qOzLQoOavsMSbVABa
nV+kBQPhH2EqNZ0K9arxlUDcHw9Mz9Q/yqVCWX5Ohe04HYka2UVUfyTm/zeh
ZcOgo9PPp5wiPlHhkE03h68pHX3ZFKln9JkKbm1q9wMP0lFMz6vZz41UcFz/
aM5UpyOW0wIuLd+oILH/qJsVJx2NpiOsf4DQ5+DpEOGXNGTIxpB4OESFFMq/
BMlHNPTw5MS86y8qdKRuGhW7S0PHdojn/R6lgvk2tvTuqzTUWnta8u9fKgjU
6k9mMGhIczvvYsEMFXYU79NTMKGh+OTMljNzVKiw1xNPBxo6fLQhenGRCv+u
TT+03UZDj6pcTpQuUwHLSDt+T4qG2Lct7w9eoYLaqZ3trRtpyCk+UUp/jQoB
u1s5ljloqHxGYWl9nQr7fmYtCS7boP8BalkGRQ==
     "]]}},
  AspectRatio->0.6,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->350,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-0.01, 10}, {-125, 125}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7701530095413647`*^9, 3.770153048733164*^9}}]
}, Open  ]],

Cell[TextData[{
 "19. Writing report. Mechanical-electrical analogy. Explain table 2.2 \
(reproduced below) in a 1 - 2 page report with examples, e.g. the analog \
(with L = 1 H) of a mass-spring system of mass 5 kg, damping constant 10 \
kg/sec, spring constant 60 kg/se",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["c", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", and driving force 220 cos 10t kg/sec."
}], "Text",
 CellChangeTimes->{{3.77375628305275*^9, 3.773756403316826*^9}, {
  3.77375729165193*^9, 3.773757297882114*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Item", "[", 
        RowBox[{
         RowBox[{"Electrical", " ", "System"}], ",", 
         RowBox[{"Background", "\[Rule]", 
          RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0.8", ",", "0.5"}], "]"}]}]}], "]"}], ",", " ", 
       
       RowBox[{"Item", "[", 
        RowBox[{
         RowBox[{"Mechanical", " ", "System"}], ",", 
         RowBox[{"Background", "\[Rule]", 
          RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0.8", ",", "0.5"}], "]"}]}]}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Inductance", " ", "L"}], ",", " ", "\"\<Mass m\>\""}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Reciprocal \!\(\*FractionBox[\(1\), \(c\)]\) of capacitance\>\"", 
       ",", "\"\<Spring modulus k\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Derivative \!\(\*SubscriptBox[\(E\), \(0\)]\)\[Omega] Cos[\[Omega] \
t] of electromotive force\>\"", ",", 
       "\"\<Driving force \!\(\*SubscriptBox[\(F\), \(0\)]\)Cos[\[Omega] t]\>\
\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Current I(t)\>\"", ",", "\"\<Displacement y(t)\>\""}], 
      "}"}]}], "}"}], ",", " ", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.773756467247611*^9, 3.773756786009716*^9}, {
  3.773756955439657*^9, 3.773757020866858*^9}, {3.7737570804888067`*^9, 
  3.773757228142617*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     ItemBox[
      RowBox[{"Electrical", " ", "System"}],
      Background->RGBColor[1, 0.8, 0.5],
      StripOnInput->False], 
     ItemBox[
      RowBox[{"Mechanical", " ", "System"}],
      Background->RGBColor[1, 0.8, 0.5],
      StripOnInput->False]},
    {
     RowBox[{"Inductance", " ", "L"}], "\<\"Mass m\"\>"},
    {"\<\"Reciprocal \\!\\(\\*FractionBox[\\(1\\), \\(c\\)]\\) of capacitance\
\"\>", "\<\"Spring modulus k\"\>"},
    {"\<\"Derivative \\!\\(\\*SubscriptBox[\\(E\\), \\(0\\)]\\)\[Omega] Cos[\
\[Omega] t] of electromotive force\"\>", "\<\"Driving force \
\\!\\(\\*SubscriptBox[\\(F\\), \\(0\\)]\\)Cos[\[Omega] t]\"\>"},
    {"\<\"Current I(t)\"\>", "\<\"Displacement y(t)\"\>"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.773757021878096*^9, 3.7737571026391087`*^9, {3.773757146248515*^9, 
   3.7737571929702263`*^9}, 3.773757229041395*^9},
 Background->RGBColor[1, 0.9, 0.8]]
}, {2}]]
},
WindowSize->{1366, 843},
WindowMargins->{{Automatic, 23}, {Automatic, 4}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
Magnification:>1.5 Inherited,
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 10, \
2015)",
StyleDefinitions->"Charter1.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 70, 1, 45, "Input"],
Cell[473, 16, 203, 3, 75, "Text"],
Cell[679, 21, 224, 5, 75, "Text"],
Cell[CellGroupData[{
Cell[928, 30, 6837, 203, 148758, "Input"],
Cell[7768, 235, 2028, 44, 561, "Output"]
}, {2}]],
Cell[9808, 282, 70, 1, 45, "Input"],
Cell[9881, 285, 142, 2, 45, "Input"],
Cell[10026, 289, 337, 4, 51, "Text"],
Cell[10366, 295, 409, 10, 86, "Text"],
Cell[CellGroupData[{
Cell[10800, 309, 378, 12, 45, "Input"],
Cell[11181, 323, 324, 10, 75, "Output"]
}, Open  ]],
Cell[11520, 336, 392, 7, 86, "Text"],
Cell[CellGroupData[{
Cell[11937, 347, 192, 4, 45, "Input"],
Cell[12132, 353, 489, 14, 90, "Output"]
}, Open  ]],
Cell[12636, 370, 267, 5, 86, "Text"],
Cell[CellGroupData[{
Cell[12928, 379, 1181, 25, 114, "Input"],
Cell[14112, 406, 2174, 43, 508, "Output"]
}, Open  ]],
Cell[16301, 452, 161, 3, 51, "Text"],
Cell[16465, 457, 1100, 37, 75, "Input"],
Cell[17568, 496, 323, 6, 110, "Text"],
Cell[17894, 504, 75943, 1250, 295, "Input"],
Cell[93840, 1756, 939, 17, 189, "Text"],
Cell[94782, 1775, 142, 2, 45, "Input"],
Cell[CellGroupData[{
Cell[94949, 1781, 19437, 515, 394209, "Input"],
Cell[114389, 2298, 5605, 120, 581, "Output"]
}, {2}]],
Cell[120006, 2421, 417, 9, 120, "Text"],
Cell[CellGroupData[{
Cell[120448, 2434, 469, 13, 72, "Input"],
Cell[120920, 2449, 536, 14, 97, "Output"]
}, Open  ]],
Cell[121471, 2466, 223, 4, 86, "Text"],
Cell[CellGroupData[{
Cell[121719, 2474, 577, 16, 45, "Input"],
Cell[122299, 2492, 712, 17, 270, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123048, 2514, 366, 10, 66, "Input"],
Cell[123417, 2526, 351, 9, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123805, 2540, 2417, 56, 298, "Input"],
Cell[126225, 2598, 2921, 58, 491, "Output"]
}, Open  ]],
Cell[129161, 2659, 391, 7, 110, "Text"],
Cell[CellGroupData[{
Cell[129577, 2670, 5841, 176, 3208, "Input"],
Cell[135421, 2848, 2257, 43, 354, "Output"]
}, {2}]],
Cell[137690, 2894, 484, 9, 86, "Text"],
Cell[138177, 2905, 142, 2, 45, "Input"],
Cell[138322, 2909, 453, 15, 76, "Input"],
Cell[CellGroupData[{
Cell[138800, 2928, 598, 20, 45, "Input"],
Cell[139401, 2950, 3936, 93, 147, "Output"]
}, Open  ]],
Cell[143352, 3046, 188, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[143565, 3054, 356, 9, 45, "Input"],
Cell[143924, 3065, 3886, 92, 115, "Output"]
}, Open  ]],
Cell[147825, 3160, 584, 10, 86, "Text"],
Cell[CellGroupData[{
Cell[148434, 3174, 281, 7, 45, "Input"],
Cell[148718, 3183, 3338, 91, 275, "Output"]
}, Open  ]],
Cell[152071, 3277, 236, 6, 51, "Text"],
Cell[CellGroupData[{
Cell[152332, 3287, 538, 12, 54, "Input"],
Cell[152873, 3301, 636, 15, 54, "Output"]
}, Open  ]],
Cell[153524, 3319, 191, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[153740, 3327, 231, 6, 45, "Input"],
Cell[153974, 3335, 356, 9, 54, "Output"]
}, Open  ]],
Cell[154345, 3347, 146, 5, 51, "Text"],
Cell[CellGroupData[{
Cell[154516, 3356, 275, 7, 54, "Input"],
Cell[154794, 3365, 384, 10, 69, "Output"]
}, Open  ]],
Cell[155193, 3378, 126, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[155344, 3383, 135, 2, 45, "Input"],
Cell[155482, 3387, 75, 1, 45, "Output"]
}, Open  ]],
Cell[155572, 3391, 178, 4, 51, "Text"],
Cell[155753, 3397, 106, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[155884, 3402, 1042, 23, 75, "Input"],
Cell[156929, 3427, 53662, 890, 318, "Output"]
}, Open  ]],
Cell[210606, 4320, 246, 4, 75, "Text"],
Cell[210855, 4326, 504, 9, 144, "Text"],
Cell[211362, 4337, 561, 16, 148, "Text"],
Cell[211926, 4355, 333, 9, 56, "Text"],
Cell[212262, 4366, 273, 6, 75, "Text"],
Cell[212538, 4374, 176, 2, 75, "Text"],
Cell[212717, 4378, 518, 17, 55, "Text"],
Cell[CellGroupData[{
Cell[213260, 4399, 460, 14, 76, "Input"],
Cell[213723, 4415, 463, 15, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[214223, 4435, 186, 4, 45, "Input"],
Cell[214412, 4441, 670, 19, 78, "Output"]
}, Open  ]],
Cell[215097, 4463, 155, 3, 51, "Text"],
Cell[215255, 4468, 311, 9, 82, "Text"],
Cell[215569, 4479, 209, 4, 51, "Text"],
Cell[215781, 4485, 142, 2, 45, "Input"],
Cell[215926, 4489, 453, 15, 76, "Input"],
Cell[CellGroupData[{
Cell[216404, 4508, 598, 20, 45, "Input"],
Cell[217005, 4530, 3936, 93, 147, "Output"]
}, Open  ]],
Cell[220956, 4626, 168, 2, 51, "Text"],
Cell[CellGroupData[{
Cell[221149, 4632, 427, 11, 76, "Input"],
Cell[221579, 4645, 3924, 92, 115, "Output"]
}, Open  ]],
Cell[225518, 4740, 435, 8, 51, "Text"],
Cell[CellGroupData[{
Cell[225978, 4752, 373, 9, 45, "Input"],
Cell[226354, 4763, 1646, 41, 91, "Output"]
}, Open  ]],
Cell[228015, 4807, 279, 7, 51, "Text"],
Cell[CellGroupData[{
Cell[228319, 4818, 604, 12, 54, "Input"],
Cell[228926, 4832, 915, 22, 54, "Output"]
}, Open  ]],
Cell[229856, 4857, 237, 5, 51, "Text"],
Cell[CellGroupData[{
Cell[230118, 4866, 326, 9, 55, "Input"],
Cell[230447, 4877, 109, 2, 49, "Output"]
}, Open  ]],
Cell[230571, 4882, 203, 4, 51, "Text"],
Cell[230777, 4888, 322, 9, 69, "Input"],
Cell[231102, 4899, 171, 2, 51, "Text"],
Cell[CellGroupData[{
Cell[231298, 4905, 866, 25, 75, "Input"],
Cell[232167, 4932, 43104, 717, 315, "Output"]
}, Open  ]],
Cell[275286, 5652, 433, 15, 82, "Text"],
Cell[275722, 5669, 362, 13, 58, "Text"],
Cell[276087, 5684, 142, 2, 45, "Input"],
Cell[276232, 5688, 453, 15, 76, "Input"],
Cell[CellGroupData[{
Cell[276710, 5707, 598, 20, 45, "Input"],
Cell[277311, 5729, 3987, 94, 147, "Output"]
}, Open  ]],
Cell[281313, 5826, 168, 2, 51, "Text"],
Cell[CellGroupData[{
Cell[281506, 5832, 555, 14, 76, "Input"],
Cell[282064, 5848, 3991, 94, 115, "Output"]
}, Open  ]],
Cell[286070, 5945, 435, 8, 51, "Text"],
Cell[CellGroupData[{
Cell[286530, 5957, 425, 10, 45, "Input"],
Cell[286958, 5969, 4212, 105, 239, "Output"]
}, Open  ]],
Cell[291185, 6077, 279, 7, 51, "Text"],
Cell[CellGroupData[{
Cell[291489, 6088, 876, 17, 54, "Input"],
Cell[292368, 6107, 2407, 62, 124, "Output"]
}, Open  ]],
Cell[294790, 6172, 483, 15, 52, "Text"],
Cell[CellGroupData[{
Cell[295298, 6191, 1096, 31, 54, "Input"],
Cell[296397, 6224, 652, 20, 49, "Output"]
}, Open  ]],
Cell[297064, 6247, 272, 7, 54, "Input"],
Cell[CellGroupData[{
Cell[297361, 6258, 73, 1, 45, "Input"],
Cell[297437, 6261, 705, 22, 73, "Output"]
}, Open  ]],
Cell[298157, 6286, 893, 13, 120, "Text"],
Cell[CellGroupData[{
Cell[299075, 6303, 1272, 38, 120, "Input"],
Cell[300350, 6343, 42880, 714, 321, "Output"]
}, Open  ]],
Cell[343245, 7060, 639, 18, 113, "Text"],
Cell[343887, 7080, 348, 7, 110, "Text"],
Cell[CellGroupData[{
Cell[344260, 7091, 7377, 210, 182130, "Input"],
Cell[351640, 7303, 2340, 48, 367, "Output"]
}, {2}]],
Cell[353992, 7354, 202, 4, 75, "Text"],
Cell[354197, 7360, 144, 2, 45, "Input"],
Cell[354344, 7364, 453, 15, 76, "Input"],
Cell[CellGroupData[{
Cell[354822, 7383, 598, 20, 45, "Input"],
Cell[355423, 7405, 3960, 93, 147, "Output"]
}, Open  ]],
Cell[359398, 7501, 168, 2, 51, "Text"],
Cell[CellGroupData[{
Cell[359591, 7507, 500, 11, 45, "Input"],
Cell[360094, 7520, 3965, 93, 115, "Output"]
}, Open  ]],
Cell[364074, 7616, 435, 8, 51, "Text"],
Cell[CellGroupData[{
Cell[364534, 7628, 561, 15, 45, "Input"],
Cell[365098, 7645, 3760, 98, 239, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[368895, 7748, 196, 6, 45, "Input"],
Cell[369094, 7756, 984, 28, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[370115, 7789, 264, 7, 54, "Input"],
Cell[370382, 7798, 893, 26, 54, "Output"]
}, Open  ]],
Cell[371290, 7827, 403, 13, 52, "Text"],
Cell[371696, 7842, 575, 18, 73, "Input"],
Cell[372274, 7862, 136, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[372435, 7867, 1138, 34, 90, "Input"],
Cell[373576, 7903, 14275, 244, 310, "Output"]
}, Open  ]],
Cell[387866, 8150, 585, 13, 145, "Text"],
Cell[CellGroupData[{
Cell[388476, 8167, 1539, 41, 234, "Input"],
Cell[390018, 8210, 1104, 27, 222, "Output"]
}, {2}]]
}
]
*)


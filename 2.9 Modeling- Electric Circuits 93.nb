(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    290905,       6417]
NotebookOptionsPosition[    284110,       6199]
NotebookOutlinePosition[    284498,       6216]
CellTagsIndexPosition[    284455,       6213]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[""], "Input",
 CellChangeTimes->{3.7683371626809883`*^9}],

Cell["1 - 6 RLC-Circuits: special cases", "Text",
 CellChangeTimes->{{3.7681271204351387`*^9, 3.768127140512599*^9}}],

Cell["\<\
1. RC-Circuit. Model the RC-Circuit in the figure below. Find the current due \
to a constant E.\
\>", "Text",
 CellChangeTimes->{{3.768127147864112*^9, 3.7681271842376213`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"LightGreen", ",", 
      RowBox[{"Rectangle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "4"}], "}"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1.3", ",", "2.7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.3", ",", "2.3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.95", ",", "2.3"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Circle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1.7", ",", "2.3"}], "}"}], ",", "0.25", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.35"}], ",", "0.35"}], "}"}]}], "]"}]}], "}"}], ",", 
    
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2.03", ",", "2.3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.7", ",", "2.3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.7", ",", "3.45"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.22", ",", "3.45"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.18", ",", "3.35"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.11", ",", "3.52"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.06", ",", "3.35"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "3.51"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.95", ",", "3.35"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.9", ",", "3.51"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.87", ",", "3.45"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.3", ",", "3.45"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.3", ",", "3.02"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2.03", ",", "2.21"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.03", ",", "2.39"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    
    RowBox[{"{", 
     RowBox[{"Disk", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.3", ",", "3.02"}], "}"}], ",", "0.04"}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"White", ",", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1.3", ",", "3.02"}], "}"}], ",", "0.03"}], "]"}]}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"Disk", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.3", ",", "2.7"}], "}"}], ",", "0.04"}], "]"}], "}"}], ",", 
    
    RowBox[{"{", 
     RowBox[{"White", ",", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1.3", ",", "2.7"}], "}"}], ",", "0.03"}], "]"}]}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<E(t)\>\"", ",", "Medium"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.2", ",", "2.86"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<R\>\"", ",", "Medium"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.05", ",", "3.65"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<C\>\"", ",", "Medium"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.99", ",", "2.1"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<RC-circuit\>\"", ",", "17"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "1.95"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.4", ",", "1.75"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.4", ",", "0.5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3.4", ",", "0.5"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.4", ",", "1.5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.5", ",", "1.5"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.2", ",", "0.6", ",", "0.85"}], "]"}], ",", 
      RowBox[{"BezierCurve", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.4", ",", "1.5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.5", ",", "0.6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3.3", ",", "0.54"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Current in problem 1\>\"", ",", "17"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.9", ",", "0.2"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<c\>\"", ",", "Medium"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.3", ",", "1.5"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<t\>\"", ",", "Medium"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.4", ",", "0.38"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Current I(t)\>\"", ",", "Medium"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.8", ",", "1.7"}], "}"}]}], "]"}], "}"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQvX7JgyYe4TeOJTNiT4Doc4ePngfRby6cfgui44N8
voDoqHRhIV4gncLaKwaihV5naIPoe/vCDEB0uPgCcxDNxqppA6K5pi12BNEd
79vdQXQPS6o3iOYPigsE0Xl55/NBtCkPQwmI/jc/fhGIjnvSuAxEy6hHrgar
1wzcAKIVvyruBtG/PjTtB9HOu5QPgWgnpajzIHrh2jkvQXTor7lvQXRUbd5X
EM3nZcrBB6S39f0zBdHfODhsQHQn92NnEP39lkgAiGaeFpUIomWOJaSC6Ljo
kmwQnceRUQqitdYydYLoQ9NajiiCwiFi4lkQnT278zOILlpcIKwEpAFMBoa+

  "]],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.88, 1, 0.88], RectangleBox[{0, 0}, {4, 4}]}, 
   {Thickness[0.004], LineBox[{{1.3, 2.7}, {1.3, 2.3}, {1.95, 2.3}}]}, 
   {Thickness[0.004], CircleBox[{1.7, 2.3}, 0.25, {-0.35, 0.35}]}, 
   {Thickness[0.004], 
    LineBox[{{2.03, 2.3}, {2.7, 2.3}, {2.7, 3.45}, {2.22, 3.45}, {2.18, 
      3.35}, {2.11, 3.52}, {2.06, 3.35}, {2, 3.51}, {1.95, 3.35}, {1.9, 
      3.51}, {1.87, 3.45}, {1.3, 3.45}, {1.3, 3.02}}]}, 
   {Thickness[0.004], LineBox[{{2.03, 2.21}, {2.03, 2.39}}]}, 
   DiskBox[{1.3, 3.02}, 0.04], 
   {GrayLevel[1], DiskBox[{1.3, 3.02}, 0.03]}, DiskBox[{1.3, 2.7}, 0.04], 
   {GrayLevel[1], DiskBox[{1.3, 2.7}, 0.03]}, InsetBox[
    StyleBox["\<\"E(t)\"\>",
     StripOnInput->False,
     FontSize->Medium], {1.2, 2.86}], InsetBox[
    StyleBox["\<\"R\"\>",
     StripOnInput->False,
     FontSize->Medium], {2.05, 3.65}], InsetBox[
    StyleBox["\<\"C\"\>",
     StripOnInput->False,
     FontSize->Medium], {1.99, 2.1}], InsetBox[
    StyleBox["\<\"RC-circuit\"\>",
     StripOnInput->False,
     FontSize->17], {2, 1.95}], 
   {Thickness[0.004], LineBox[{{0.4, 1.75}, {0.4, 0.5}, {3.4, 0.5}}]}, 
   {Thickness[0.004], LineBox[{{0.4, 1.5}, {0.5, 1.5}}]}, 
   {RGBColor[0.2, 0.6, 0.85], 
    BezierCurveBox[{{0.4, 1.5}, {1.5, 0.6}, {3.3, 0.54}}]}, InsetBox[
    StyleBox["\<\"Current in problem 1\"\>",
     StripOnInput->False,
     FontSize->17], {1.9, 0.2}], InsetBox[
    StyleBox["\<\"c\"\>",
     StripOnInput->False,
     FontSize->Medium], {0.3, 1.5}], InsetBox[
    StyleBox["\<\"t\"\>",
     StripOnInput->False,
     FontSize->Medium], {3.4, 0.38}], InsetBox[
    StyleBox["\<\"Current I(t)\"\>",
     StripOnInput->False,
     FontSize->Medium], {0.8, 1.7}]}]], "Output",
 CellChangeTimes->{{3.768087547345272*^9, 3.7680875902146187`*^9}, 
   3.76808762555582*^9, {3.768127066974368*^9, 3.768127085560697*^9}, {
   3.768127437609832*^9, 3.7681274709629183`*^9}, {3.7681275265350237`*^9, 
   3.768127571123292*^9}, {3.7681276148888817`*^9, 3.768127644248499*^9}}]
}, {2}]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.7683145227569838`*^9}],

Cell["\<\
I ran across a couple of snippets suggesting that state space modeling would \
be a good way to look at circuits in Mathematica. However, I didn\
\[CloseCurlyQuote]t find a cookbook recipe laid out, and didn\
\[CloseCurlyQuote]t try to invest the time to get results. \
\>", "Text",
 CellChangeTimes->{{3.7683123167014227`*^9, 3.768312409310183*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"eqns", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"L", " ", 
       RowBox[{
        RowBox[{"q", "''"}], "[", "t", "]"}]}], "+", 
      RowBox[{"R", " ", 
       RowBox[{
        RowBox[{"q", "'"}], "[", "t", "]"}]}], "+", 
      RowBox[{
       FractionBox["1", "C"], " ", 
       RowBox[{"q", "[", "t", "]"}]}]}], "\[Equal]", 
     RowBox[{"V", "[", "t", "]"}]}], "}"}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"m1", "=", 
  RowBox[{"StateSpaceModel", "[", 
   RowBox[{"eqns", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"q", "[", "t", "]"}], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"q", "'"}], "[", "t", "]"}], ",", "0"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"V", "[", "t", "]"}], ",", "0"}], "}"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"q", "'"}], "[", "t", "]"}], "}"}], ",", "t"}], 
   "]"}]}]], "Input"],

Cell[BoxData[
 TemplateBox[{"0","1","0",RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"C", " ", "L"}]]}],RowBox[{"-", 
     FractionBox["R", "L"]}],FractionBox["1", "L"],"0","1","0",
   InterpretationBox["\[InvisibleSpace]", None],{
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2}, {{
     Control`CommonDump`$DUMMY$}, {Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
    Automatic, 1, 1, 2, 1, {}, {False, False}, False, Automatic, None, {",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"q", "[", "t", "]"}], ",", "0"}], "}"}], ",", 
         SubscriptBox["\[FormalX]", "1"]}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{"V", "[", "t", "]"}], ",", "0"}], "}"}], "}"}], ",", 
     "Automatic", ",", "t"}},{}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3}, {#4, #5, #6}, {#7, #8, #9}}, 
        AllowedDimensions -> {3, 3}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, "Columns" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #10, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 2}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{4, 5}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{3, 3}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{6, 6}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{7, 8}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{9, 9}, ","], "}"}], "}"}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"q", "[", "t", "]"}], ",", "0"}], "}"}], ",", 
         SubscriptBox["\[FormalX]", "1"]}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{"V", "[", "t", "]"}], ",", "0"}], "}"}], "}"}], ",", 
     "Automatic", ",", "t", ",", "SamplingPeriod", "->", 
     RowBox[{#10}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellChangeTimes->{3.7681658826327047`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"OutputResponse", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"0","1","0",RowBox[{"-", 
          FractionBox["1", 
           RowBox[{"C", " ", "L"}]]}],RowBox[{"-", 
          FractionBox["R", "L"]}],FractionBox["1", "L"],"0","1","0",
        InterpretationBox["\[InvisibleSpace]", None],{
        StateSpaceModel, {
         False, False, {
          False, False}}, {$CellContext`stname1, $CellContext`stname2}, {{
          Control`CommonDump`$DUMMY$}, {Control`CommonDump`$DUMMY$}, {
          Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
         Automatic, 1, 1, 2, 1, {}, {False, False}, False, Automatic, None, {
         ",", 
          RowBox[{"{", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"q", "[", "t", "]"}], ",", "0"}], "}"}], ",", 
              SubscriptBox["\[FormalX]", "1"]}], "}"}], ",", 
          RowBox[{"{", 
            RowBox[{"{", 
              RowBox[{
                RowBox[{"V", "[", "t", "]"}], ",", "0"}], "}"}], "}"}], ",", 
          "Automatic", ",", "t"}},{}},
       "StateSpaceModelFull",
       BaseStyle->{NumberMarks -> False},
       DisplayFunction->(TagBox[
         SubsuperscriptBox[
          RowBox[{"(", 
            
            GridBox[{{#, #2, #3}, {#4, #5, #6}, {#7, #8, #9}}, 
             AllowedDimensions -> {3, 3}, AutoDelete -> False, 
             AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
             BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
             GridBoxDividers -> {"Rows" -> {False, False, 
                 Directive[
                  GrayLevel[0], 
                  GrayLevel[0.6]], {False}, False}, 
               "Columns" -> {False, False, 
                 Directive[
                  GrayLevel[0], 
                  GrayLevel[0.6]], {False}, False}}, 
             GridBoxBackground -> {"Rows" -> {{
                  GrayLevel[1], 
                  RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #10, 
          ButtonBox[
           GraphicsBox[{
             RGBColor[0.8, 0.85, 0.85], 
             EdgeForm[
              RGBColor[0.6, 0.7, 0.7]], 
             RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
             InsetBox[
              StyleBox[
              "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
               GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
               GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
               GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
               FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
           ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
             ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
           None], MultilineFunction -> None], 
         EventHandlerTag[{
          "MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
               FrontEnd`Value[
                FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
           True}]]& ),
       InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
          RowBox[{"{", 
            RowBox[{"{", 
              RowBox[{"{", 
                TemplateSlotSequence[{1, 2}, ","], "}"}], ",", 
              RowBox[{"{", 
                TemplateSlotSequence[{4, 5}, ","], "}"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"{", 
                TemplateSlotSequence[{3, 3}, ","], "}"}], ",", 
              RowBox[{"{", 
                TemplateSlotSequence[{6, 6}, ","], "}"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"{", 
                TemplateSlotSequence[{7, 8}, ","], "}"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"{", 
                TemplateSlotSequence[{9, 9}, ","], "}"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"q", "[", "t", "]"}], ",", "0"}], "}"}], ",", 
              SubscriptBox["\[FormalX]", "1"]}], "}"}], ",", 
          RowBox[{"{", 
            RowBox[{"{", 
              RowBox[{
                RowBox[{"V", "[", "t", "]"}], ",", "0"}], "}"}], "}"}], ",", 
          "Automatic", ",", "t", ",", "SamplingPeriod", "->", 
          RowBox[{#10}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
       Tooltip->StateSpaceModel], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0.1`"}], "}"}]}], "}"}], ",", "0", ",", "t"}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7681660137304363`*^9, 3.768166041114111*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", 
    RowBox[{
     SqrtBox["C"], " ", 
     SqrtBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", "L"}], "+", 
       RowBox[{"C", " ", 
        SuperscriptBox["R", "2"]}]}]]}]], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"R", "-", 
            FractionBox[
             SqrtBox[
              RowBox[{
               RowBox[{
                RowBox[{"-", "4"}], " ", "L"}], "+", 
               RowBox[{"C", " ", 
                SuperscriptBox["R", "2"]}]}]], 
             SqrtBox["C"]]}], ")"}], " ", "t"}], 
         RowBox[{"2", " ", "L"}]]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1.`"}], "-", 
        RowBox[{"0.05`", " ", "C", " ", "R"}], "+", 
        RowBox[{"0.05`", " ", 
         SqrtBox["C"], " ", 
         SqrtBox[
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", "L"}], "+", 
           RowBox[{"C", " ", 
            SuperscriptBox["R", "2"]}]}]]}]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"R", "+", 
            FractionBox[
             SqrtBox[
              RowBox[{
               RowBox[{
                RowBox[{"-", "4"}], " ", "L"}], "+", 
               RowBox[{"C", " ", 
                SuperscriptBox["R", "2"]}]}]], 
             SqrtBox["C"]]}], ")"}], " ", "t"}], 
         RowBox[{"2", " ", "L"}]]}]], " ", 
      RowBox[{"(", 
       RowBox[{"1.`", "\[VeryThinSpace]", "+", 
        RowBox[{"0.05`", " ", "C", " ", "R"}], "+", 
        RowBox[{"0.05`", " ", 
         SqrtBox["C"], " ", 
         SqrtBox[
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", "L"}], "+", 
           RowBox[{"C", " ", 
            SuperscriptBox["R", "2"]}]}]]}]}], ")"}]}]}], ")"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.768166015869544*^9, 3.768166042005785*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ind", ",", " ", "cap", ",", " ", "res"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"l", " ", 
       RowBox[{
        RowBox[{"i", "'"}], "[", "t", "]"}]}], "==", 
      RowBox[{
       SubscriptBox["v", "l"], "[", "t", "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["v", "c"], "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"1", "/", "c"}], " ", 
       RowBox[{"i", "[", "t", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"r", " ", 
       RowBox[{"i", "[", "t", "]"}]}], "\[Equal]", 
      RowBox[{
       SubscriptBox["v", "r"], "[", "t", "]"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kirchhoff", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["v", "l"], "[", "t", "]"}], "+", 
     RowBox[{
      SubscriptBox["v", "c"], "[", "t", "]"}], "+", 
     RowBox[{
      SubscriptBox["v", "r"], "[", "t", "]"}]}], "\[Equal]", 
    RowBox[{
     SubscriptBox["v", "s"], "[", "t", "]"}]}]}], ";"}]}], "Input"],

Cell["\<\
3. RL-Circuit. Model the RL-circuit in the figure below. Find a general \
solution when R, L, E are any constants. Graph or sketch solutions when L = \
0.25 H, R = 10 \[CapitalOmega], and E = 48 V.\
\>", "Text",
 CellChangeTimes->{{3.768127751488228*^9, 3.768127826009779*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnQd8W9XZh/GQ5CVZXrK895T33o63HSd24uwdO3tvQvaGsBISVlgpUAKB
QoFCyybsTZiljBbKKNABhbZ00X7/7/5PIseJTGRDElfJ29/vqeUr3aOjK3If
v+95zzlxXYs6ZrqfddZZy7y0/+voXFmzdGnnqhGe2i+1q5bP6PLQHkzWnv+F
21ln8aD2PwiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCILgyer0ePj4+8PX1hZeXl/rdw8PjO1/v5uYGnU6n
XstzjEYjTCZTN35+fvD29lbtuLu7D/jnEwRBEM4c6J68vDyMGTMG48aNQ1NT
E4qKihAVFQWDwdDrOf7+/khPT0dtbS3Gjx+PRYsWYeXKlYrly5dj6tSpaGtr
U+1YLJYB/4yCIAjCmQPjNDrtqquuwrXXXot169ZhypQpyM/PV3FXb+dERESg
tbUVy5Ytw969e/Hkk0/i1VdfVbz44ovYv38/zj//fNVOSkrKgH9GQRAE4fSE
+UPmBxlvWa1WJCQkqJhq48aNeOyxx/Doo4/iiiuuwNKlS1FZWale1/Ncei4k
JASlpaUqLrvhhhvw+OOP49e//jU+/vhj/Pa3v8V7772Hp59+Gvfccw8uvPBC
DB8+HImJiQgKCoKnp+eAXwNBEATh9IFjZmFhYbDZbKirq0NnZyc2bNiAn/3s
Z/jggw/wxhtv4KabbsLq1atRU1MDs9ncfS6dFB8fj/LycsyePVvFZG+99Zbi
l7/8JV577TU8//zzeOqpp1Tc9s477yhX7ty5EzNmzEBhYaEahxvoayAIgiCc
PrDWIy0tDc3NzZg7dy4uu+wy3HfffcpB33zzDT788EPccccdKn6rr69HQEBA
97kch6ObJk+erFz1yiuv4J///Cd+85vf4JlnnlHt3H777bjtttuU17766iv8
7ne/UzHgnj17VNwWHBw84NdAEARBOH3gWNqQIUOwdetW3HzzzXjiiSeU0/7w
hz/gX//613G9xrrHESNGYNeuXcphjNE++ugjFbedffbZ6OrqwsSJE1XNCMfp
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
L1t7PGfSJOU8jquFh4bKftmCSyNeEwTXheNmdBrX6KfHuPfMgilT1Dr9jL9W
zJql9qJZpbls7cKFKk6jx5h7tHtt05IlGNfWppzIeW3cd3ugP5cg/BDEa4Lg
unAMjHWL+RkZGNXaemjcbNEibNbcxfwi/dXTYfbfyealS1U95KLOThXTsa6f
jpQaSMHVEa8JgutCD3EdxyF1dZgxbhzWzJ+vakF6Oq03r/F5xnDTx4xROUrW
/gcFBBwaV5NaEcHFEa8JguvCusXKwkI1l3pxV5fKKfacj3YsPb1mrxPheBzz
j7KHqHC6IF4TBNeF9fuMtZqrq1W8xvX4++I1Yt9rjWNr+ZmZat1IjtdJbb/g
6ojXBMF14T4y8dHRKMnJwcThw5Wr+uo1jsFxnePF06apmpMIq1Wtc8z5AgP9
uQThhyBeEwTXxRrqg7rqKMyYmoUtq1tw7a4p2LdnlgPX7pyLizcsUrWQ9rE3
/lRumz9f1fjn2mxqXzbZI1twdcRrguC6ZGf5YfOGeBx4KB8vPlOFX77ahHfe
aHXgiQdG4KqLu1Q8x7VFerpt45Ilah+24c3NKMnNVetnDfTnEoQfgnhNEFyX
6moj7rwjCfhv8XF5760aXHvpKCyZPv1QzeThOWx2t62cPVvN2eb+NMxrcozN
rY/zsu1rnRgMBvj6+sJkMin8/f27HxuNRnh5ean1Jjnnu2fbfMxjfN7Pz++4
sH0fLZ7ka/mex7Zj7wPfr2cf+DvP43os/flsJwr7mjDsN/ti7w/7e+znOPba
HvuZ+FjW7Tw+4jVBcF366rVXXizGmhXFav+ZKSNHqv1oWDu5lXMCNLex3uQc
7RjXJCnKzkZoSIgau3NW88/7brAW3yUkJKCsrAwTtLhvqRYPnq21uWrVKvVz
ifY+szVvNjY2Ii0tDVarVd3TeT7v6bzXx8TEoKGhAVOnTsW0adMwXfPvjBkz
HJisuXf48OGo1/ybmJgIb29v1Qfe53nPLykpwcSJEzFfc/dy7bOdc845qj8L
tDh19OjRyMnJQVBQkHr/U1Ufo9aE0d7PYrGoa7BIu9YLFy7ECO1aV1RUIDY2
Vl2D3s4N0b6Hcu07Gzt2rLqGK7S/Qfj5eB157aTGp3fEa4LguvTVa089kYXJ
E6MRqTmlqboa86dMUTnJzYfjtq091vNv1J7nnqIh2v1f56SGhPdWOq2qqgqz
Zs3Cj370Izz33HM4ePAg3njjDbzyyit4+umn8Ytf/AJr1qxBc3Mz0tPTERAQ
oGIU3s/po6KiIuXBW2+9FXfccQfuuusu3H333Q7s27cPO3fuxMqVK7XPXq3i
Mbs3wsLC0NXVhRtuuAGPPvooXnzxRdUH9ufAgQO44oorMFJzenx8PAIDA09Z
fQxjRL5fSkqKugZPPvkkHnvsMezevRtztL8l6GJeg97OTUpKUj675ppr1DV8
6aWX1OfjdewtZhUO/3cpXhMEl6WvXnvsQDpGdASrmpBCLR4b196OhZ2dDvWT
S7WYqF2LKVj3z/pI/XesPcL7KfOCjL2amppU/EFv8J798ccf47e//S1+85vf
KN5//328/fbbuOWWW7Bu3TqMGjUKqampKtbi/T48PByDBw/Gnj178Oqrryon
vvzyywrex4n9d/rp5ptvxgUXXKDO4fl0ZFZWFoYOHaqcR4/9+te/Pgr245FH
HsG5556rYp/c3NxuJ55sLzCPyLgrIyMDF198MT744APVn/3792P16tWoqamB
2Wzu9VybzaZiznvuuQevvfYa/vjHP+KBBx5QsR6vH+NU8Vov/32K1wTBZemr
1w48mobhwwKVp5JiY1GlxQi97Ze9XIu5uB6Xs31F6TTGPcw9rl27Fj//+c9V
bEaHfPTRR8pFvP8yLvnVr36F3/3ud3jzzTfxzDPPKP+1au9BJzLW4/2e+UXG
aL///e+VB/laOo5tEt7TX3/9dTz11FO47bbbsGPHDgwZMkTlQOlI5h0ZxzA2
/OSTT5RXn332Wdx///3Kh/z9vffeU8678847Va6T/fc+BfMajvUa+8LP+JOf
/ATr169HXV3dd3qN59B9jNV4Tb744gs8+OCD4jVn1zxWh5DxJsRq7rI9HIeC
z2wo1pxGCr/MUMfidlkR2uUP71RZN04Q/pfos9ceSUN7e4AaL7NaLEhPTlZr
QjIf2dNrXCN5vBbL1Wi+SoiOVnvd9Pa+HKMqLCxUsQ9zg5999hn+9re/Kacw
9/ezn/0Ml19+uXIN/cLjf/7zn/Gvf/1LuY35N/ooX/Mnx5g45vTEE0/g3//+
t/IiXcTX0WOEj+mkhx56CDfeeCPOO+885TXmHpkDZZ6OcRD7wfd555138NOf
/hSXXXaZchvd+vnnn+Ovf/2rcsOFF16ocp/0Iusw6Ht6wl7TYa9T4WPGdXbs
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
Rufk4Phw1hTZa7vt0pF77521rcQl+XBqTtSR8PnENptbHzII2jOha0HQceFz
8b1o21w9eqQfLrhg2qDik9mPRu5NDJKu0bhj998//aSieasNHpwW6tMnzyGY
qhVztIOgvRG6FgQdHzE8GtVlhhnS4MUXz3O41ZaMO9/N2iMbrblmWsq+ohUd
bE1tZBC0N0LXgqDjIyaZ90ubZpq0cMVn+/FKK6UdNt00a1u1rvm39bjKHmw+
X+u2B8H4EroWBJMOairEI3+0yCJpnVVXTfvsuON3dM0+NjtW9M4+AAvNN1/O
sdW6zUEwvoSuBcGkA5+t+yyz5PyZ+W72GK3WNfMArFsiFsmv6xS6FtQhoWtB
MOlA19Q6WlvEfqO7b731d3RNnaTaEfPd7LFdyznaQTChhK4FwaSDudYzdumS
1xVZ5kc/SrttueV3dE2NpNjkdhttlNcfmaFTp5q3OQjGl9C1IJh0aEnX+GvW
JVE7MqB///DXgrokdC0IJh1a0jVrJu+57bZp83XWyfu6dQpdC+qQ0LUgqF+6
dp0i9e8/XRoypHOzLLro9GnmmafM+bVZZ545r5W10jLL5LX8q3XtsJ/8JM9t
22D11fPeNVEPGdQjoWtBUL/QtEMOniPdeP38zXLcsT3TEkt0yuuPzDPnnGmJ
AQPS+hXtsvZ/ta7Zk23bjTZKqy+/fJq/on3TxTrBQR0SuhYE9QtfjG6lsUs2
y/339U0brD9TXg/YvLRVBw9O22y4Yd4zu1rX/NueNfYEmLdnzzRtzMsO6pDQ
tSCoX1qraw8/uHDaaos5U/eZZ87raPHJ+GrqRKp1TS0kX23BWB8yqGNC14Kg
fmmtrv3hkUXTTtv3znvWrLvKKulnu+yS9xqt3q8G5mmrJ5GDUzMS6/kH9Ujo
WhDUL63Vtaf+tEQ6eP9BaciSS+a9aKr9tOMPOijPWztkzz3TVhtskH640EJZ
0+wD0Jo9z4KgvRG6FgT1S2t17aXnhqTzfrle3hf74N13z/vTFF3js4k/ik1a
W0tdiXUkw1cL6pVp5p0qzbpllzRvRbv639MrDfp3/7RkRdOw+IiF82u9zpw9
zbZj1zTdQrFnRRC0J1qra8NfWT1dd9l3ax/tu2ZfUXvVWOt4jSFD0qL9+uV1
tmp9X0EwMfRadLq0zTFzpJPunz+d/nL/dNbIAemcLxfLnD1qYH7t5IcXSLv8
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
njrvt1+a85ab04Lvv5cWTl9n+n76Sepx/XWp8777pmlWXSVN3rNnzdsbfD+E
rgVBQ0LX6pMp5porTb/B+mnGnx+Z5rrrzsqzev8bXev32ajU847bK8/02DT9
xhunKfv0qXl7g++H0LUgaEjoWn0y5bzzpE6bb5ZmOvGENPf996WFPhzxra59
/ll+bZZfnZ5m2H67NNVCC9a8vcH3Q+haEDQkdK0+CV0LELoWBA0JXatPQtcC
hK4FQUNC1+qT0LUAoWtB0JDQtfokdC1A6FoQNCR0rT4JXQsQuhYEDQldq09C
1wKErgVBQ0LX6pPQtQCha0HQkNC1+uR707XY96au6NmjS1p3zQXTgXsvl049
dv009Kwd0lUX7Ja5/Nyd82uH7jckbbp+/9SnV+haMGkQulaffG+6Fvve1BUD
B3RJJ/5igfTog0unPz++YnrhL2ukl55dK/PiM2vm1x57aJl09hn90uDlutW8
vUHwvyB0rT5pc12LfW/qkiFDOqcbr58/pbFLNsv99/ZN660XuhZMGoSu1Sdt
rWux7019EroWBA0JXatP2lrXYt+b+iR0LQgaErpWn7S5rsW+N3VJ6FoQNCR0
rT5pa12LfW/qk9C1IGjINPNOlWbdskuat6Jd/e/plQb9u39asqJpWHzEwvm1
XmfOnmbbsWuabqGoF2gvtLWuxXy4+iR0LQga0mvR6dI2x8yRTrp//nT6y/3T
WSMHpHO+XCxz9qiB+bWTH14g7fLLOVO/ZTrVvL3BfwhdCxC6FgQNWWrZGdJF
V/ROwz9YLL3x6aD0z9GLpzfH/JevFs+vDR+xWBp20/xptTWjDq69ELoWIHQt
CBoSv4v6JHQtwKAfdUm/Om2B9MxTS6UXnxuSXn1p1TT8ldUzr728Wn7tr08v
nS6+sF9acUj8foNJg9C1+iR0LcA8c3VJm264YDrmsOXSuaetm37z623SdZft
lLlm6Pb5tV8csXzadov+acH5Yx2tYNIgdK0+CV0LEOseB0FDQtfqk9C1AKFr
QdCQ0LX6JHQtQOhaEDQkdK0+CV0LELoWBA0JXatPQtcChK4FQUOWG9w5XTVs
vvTRqEHpoy8WTyO/WiKNHPMtXvPerbcvmNZae8aatzf4D6FrAULXgqAhsd5I
fRK6FiB0LQga0qn3VGme7WZMi545e1r6gT5pxbcXTqt8tmhm5Q9/mF8bcEGP
1Hv3bqlL/2lq3t7gP4SuBQhdC4KGxHr+9UnoWoDQtSBoSOhafRK6FiB0LQga
Ms2806Rum8+cepw4V1rwrn5psbeWSEuMWiYtWWHxEUunhe7un+b6VUXbtp81
TbvQdDVvb/AfQtcCzNytWxq0yCJpvdVWSz/Zfvt0fEXPTj/qqMwphx+efrrD
DmnjH/84Lb3YYmn2WWeteXuD4PtkyimnTNNMM03quUjPNGT/FdJWw7ZJ+z99
QDrhwxPT6aPPSGeNPied+enZ6bBnjki73rx7+vHRa6U+y/TJxzh2sskmq/k9
TMqErk3alN/v/PPNl7bYZJN0bEXDhp5/frrthhvSA7ffnh688850f+XvlRdf
nE49/vi0S0XzFqn4bPH7DToyvt8zzDBDWmSZRdKuJ++azn707HTza7ekpz57
Kr009uX0+tjX02ujX08P/POBdNVfrkqHXHRIWmaNZVLnzp3zsfG7qC2ha5M2
5fc76Ec/SoccdFC6/ppr0uOPPpqGv/pqevftt9MH772X3n/33fTXP/853V3R
t1NOPDGtuMIK8fsNOixTTDFF6tmzZxo4cGDafPvN0xm/OSPd88o96fn3nk/v
jX4vfVb5/1f+P/arNPzD4emJfz6RLr39irTDfnukgcsPTj0HLJqmn69PtoVN
MU2vuVPvRbunpZadMc/9borlBnfJn+vUZ65mz9fW1Hv7Vtps/rTGMeulH191
UFruz79PAz557/vTtS8+T/M+9oc02yUXpxl/9rM03Uor1X3/1XP7pundK809
cEAaOHhw2nqnndLFl1ySnvzTn9Lw115Ln3z8cRr95Zdp7JgxaUyFt//97/Ti
Cy+kayu6t8vOO6cBAwakHj16pKmnnrrmdigI2hLjtSFDhqS99947nXfReemh
Jx5K//zon+mDzz9In439j6aN9f+vx6aPv/g4vfPJO+nxl59J5990ffrpGb9K
Qw46MM2+3bbZDjbFrNtsnLY5dvl00ZUL5/VMmuKqYQvlz8274wbNnq+tqff2
/e72RdPNj6+Yrntx87Tvu1elwV/++/vTtS+/SH2efy71/P3vU/fzzksz7r9f
3fdfPbdvpq23Sqseckja98wz0oXXX5ceq/hk777zTvq4StO+/vrrNHbs2DRq
1Kg0YsSI9PRTT6ULLrgg7bXXXmnppZdOXbp0qbkdCoK2pFOnTmnLLbdMQ4cO
TY899lj6d2VM19L/3v7kk/Tg66+ni59+Km1d+S3NX/lNsYFN0etXx6STHto2
DR+xQrPrc300atn8uQHnHdHs+dqajtK+kWNXTud+fVFa7et/fVfXHrg/zXLW
manzDjtUdG2hFr8TU847b5phiy3SzKecnI+t1rX+X41O8w9/PfWq+AQ9b70l
db/owg7Tf/XYvp6/PC3tfNPv0uV/+XP64z/fyL/NFn+/b7+dHnzwwXTRRRel
DTfcMM0yyyw1t0NB0JaIsRu33XPPPWn48OF5nNfS/0ZWxoEvVcZ99/7rzfSz
Z/+afvTIw3lc3xQLP3xbOv3Vw9Ibo1Zv/nf75ZD8uWUeu77Z87U1HaV9jeqa
uOHjf0yzXX5Z6rrP3mnqRX7Y4ndiqvnnS1122SVrlmP7jvzoW10bOybr3AIV
G9rnby/k9ztK/9Vj+/o99GA6vOI/P/DWv9Lwjz5KH3/xRcu/35Ej04svvpju
vvvutNNOO6XZZ5+95nYoCNqSrl27psMOOyy98MIL6fPPP09fffVVi7+LL8aO
TR+MHp1eqvyGTvj0k7TCRx9mW9cUS3z4Rjr7s7PSm1+t07xdHrNS/tzKH/2t
2fO1NR2mfY3p2pdfpN7P/CX1uOH6NNNhh6ZpFlusxe/E1BWfbsZ990lzDLs6
H9v3k4+/1bWvx2afjV72HfVp1rwO03912L7FK5z+6afplcpv8fOv5MHHtvz7
rXz2gw8+yL/5/fffP+fXa22HgqAtoWtHHXVUeu2111r8PZT/Ub5PK/yzYud+
WWGV/9q8plj665HZ3r45dr3xtsv/Czpy+7KuPfdsmvOWm9NMP/95mmbQoBa/
E1P365e6HfCzrIWO7VsZu0yq/dfe27d0hXMrvFmh1b/fiv59WtHC119/PR18
8MFprrnmqrkdCoK2JHStY7fvG137/a1p5qOPStMuvniL34msawcekHr87sbQ
tXbevtC1IGgIXTvyyCPTyy+/nL/vY1sRxxj99ddp5Jgx6bXK50/58su00uef
5fqEpljy83fTOaPPS2+OWbfFOIvPrfL5q82er63pMO1rTtduvSXNfNTE+2s5
Djl2zH9ikaO/zPHIDtN/ddi+JSucVfkNvv7fGOTYr1vWt9GjR+cc29///vd0
4IEHhq4FHY6oG+k47WuqbqTXE39Ks1/1f7kmf+pFF23xOzHVAvOnrrvvnmYb
ekk+tu/HI7/VtagbaVftm9C6kZdeeinXjey8885pjjnmqLkdCoK2RJ3/1ltv
na644or0xBNPpHfeeafF38U7n36aHn3jjXT5M39J2918U1rwgvPz/Kim6HPe
yenkP+yYhn+4YvO/28+Wy58beMlxzZ6vreko7Wuqzn+eyrije+UZddlt1zRV
/34tfiem7N07dd522zTLmWfkYxf66MNvda3ip9G03k8/lea68440++WXdZj+
q8f2zX3O2Wm3236frqqML5+ojDP9Nlv8/VZ+44888ki69NJL0yabbJJmjbUi
gw7GtNNOm1ZZZZUcZ7/sssvSk08+md5///30ySefpC8rfpl1CsQm4bV33303
Pfn882lo5bd04MW/TqscfVTqsftuec5vU8y2y1Zp19NXScNuHpDuv7dvk9x6
+8L5c3322rzZ87U19d6+Bx4dmB56dki667WN08EjrkzLjx5nXvaDD6RZzz4r
dd5xxzRV31bOX9tyizTzqafkY78zL3v0l9lPo2mz/frXqdshh9R9/9Vz+2bZ
eaf04+OOTYdecnG6/Pbb8m+zxd9v5Td+ySWXpAMOOCAtv/zyORdRazsUBG2J
dU979eqV1x0wl8X8bH7bq6++mj788MNvav/F5L326KOPpksuvzztss8+aek1
10y9llk6zbDwwnkdi6aYrt8Cqd+yPdNqP54lrbdetyZZa+2Z8ue6LDxfs+dr
a+q9fRvusmDa7NR10ubX7ZdWfvaWNPDTcdbRMi+74nvNsMP2rZ6X3WmLzdNM
J5/UYF52mQ/HT6Np01e+A/Xef/Xcvun69Ut9ll0mLVN5Djv99Cdp6H/jLs3+
fiuatssuu+Tf/Nxzz53XHKq1HQqCtsb3Wp5t0KBB6aCDDkrDhg1LDz/8cI7B
v/nmm3mMJ3bx0EMPpcsrmmacV9bfiXVTa0+sezxpE7/fIGjIN/vU9OyZ14q0
rtbuu++ev/+HHnporpc84ogj0m677Zbj8WIXZZwX+1zUntC1SZv4/QZBQ3yv
4Xsu1t69e/e8zrf6X9//eeaZJ6NuSo7ZZ8o4L34TtSd0bdImfr9BEHQ0QteC
IAiCjkToWhAEQdCRCF0LgiAIOhKha0EQBEFHInQtCIIg6EiErgVBEAQdidC1
IAiCoCMRuhYEQRB0JELXgiAIgo5E6FoQBEHQkQhdC4IgCDoSoWtBEARBRyJ0
LQiCIOhIhK4FQRAEHYnQtSAIgqAj0dY6NMXcc6XpN9wgdTv6qDTX3XelhUZ8
8O35PhuV5rrzjjTT8b9I02+2aZpyvvlqfv9BEARBx6LNda1HjzTtGmukLj/b
P/W89Za00PvvfXO+vqM+TXPeeEN+b5rVV09TzDVXze8/CIIg6Fi0ta5N3r17
mnr55VOnnXdOc1x9dZr/9ddT308/ySz47jtp9ssuTdNvv32acqml0uSzzVbz
+w+CIAg6Fm2ta5N16ZKmWGCBrG1d99kndb/wwjTHNdekHtdfV9G536Sue+2V
pqZpc8+dJpthhprffxAEQdCxaPM6j6mnTj/o1i1NVtGtqYcMSdNvvXWaYY89
UueKxnX+6U/TNBW9y37aNNOkH0wxRc3vPwiCIOhYtLmu0appp00/6No1TT7f
fGnKJZZIU1X0bepVVknTrLxymkKtyHTT1fy+gyAIgo5Jm+vaZJP9R9sqfttk
FW2brHv3NHmPHmnynj0zXgs/LQiCIPi+iPlmQRAEQUcidC0IgiDoSISuBUEQ
BB2J0LUgCIKgIxG6FgRBEHQkQteCIAiCjkToWhAEQdCRCF0LgiAIOhJTzD5b
mnalFVOXXXZJ3Sv6NfctN6deFS3DPHfekV+zpuN0a6ye96CpdXuDIAiCoDkm
m366NMWcc6ap+vVL0y27bJrhxz9Onddb7z+ss3Z+beqFF86aFusUB0EQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBK1l8sknT927d08LLrhgGjBgQFpyySXTUkst
leaZZ5403XTTZbw/99xzp9lmmy1169YtderUKU055ZQ1b3sQBEEQjMs000yT
Bg8enH7yk5+k448/Pp1//vnpoosuSptssknq0aNHxvsbbbRRGjJkSFp00UWz
5nXu3LnmbQ+CIAiCceF7bbnllumSSy5JDz30UPr73/+ehg8fno444oi0wAIL
pIUWWihtu+226eijj0477bRT+vGPf5wGDhyYZplllpq3PQiCIAjGpVrXHnnk
kfTaa6+lN998Mx111FFZ05ZYYol0zDHHpJtvvjmdfvrpae+9905rrbVW9tlq
3fYgCIIgGJeia0OHDk2PPvpo9tX+/e9/Z/+sb9++acUVV0yXXXZZevXVV7O2
/fKXv0zbb7991rxatz0IgiBoP6jXUHuhDoNGqNdQt9GvX79cozHDDDN85/PT
TjttrtuYb7750g9/+MPsR/Xv3z/NPPPM+TwzzTRTmmuuufK5Fl988ZwLKyy/
/PJpueWWy9eYf/7506yzzprPP9VUUzXQtTfeeCO99957Oce28cYbp7322ivd
c889aeTIkenpp59ON910U87Drbnmmvl6M844Y76+fFvv3r3TYostlutO5OSq
27Dsssvm67s/15966qnTFFNMke9NO7p06fJN/Yp7017txtJLL53vadCgQfk9
uM+ePXvm+5YjnGyyyfI9OYd2iJWWc5Q+0AbH6sPqPmjt89Jm+Ub9ri3ON+49
en3hhRdOs88++zftKsfrqwl5Ro4V99Vu/ef8/rrX6vY39TnfG233jPr06ZN+
9KMf5Typ90utULm299yfdjp/+W6O25eer3sQq9Ynnp/nWfpJ2+edd978ffD8
yveh+tjyDLt27frNdyEIgvrFb5+msCtiexdccEHWiwMPPDDrCftT/Xm2ie8k
x/Xzn/88nXvuuenggw/OdpoNYcc32GCDtO+++6azzz47XX/99emGG25IN954
Y7r22mvTVVddlS688MK02267ZfvL9rNFjenaRx99lGOSl156abruuuvSyy+/
nL788sv07rvvZr/tzjvvzHHK9ddfP9vGYi+32WabdPLJJ6df//rX6be//W2+
NrTliiuuyNd3f2wkPVJryQ5qB/vI5v30pz/N96a9zuH62nbmmWemM844I513
3nn5/X322Sett9562Q7TANrqnpxbO0488cT0m9/8Jp9DP/h75ZVX5uN32WWX
7/RBS89KG2mUNq+xxhq537XHPZV7hPNr42GHHZZWXnnlPOZgr2kb/VlkkUVy
n43vM3Jt2rDzzjvn/nN+f/UXTSjtbOxzBx10UNYTmkrvdthhh3Taaael4447
Lh1++OHpF7/4Rf7uuba/Ys2O2XDDDfNxvptqia6++ur8LLRXW6+55prcB3vu
uWce4xiPeJ6+1/pJ232vfB88v2HDhn3nWPfv3Ouuu26OC0w//fQ1/00GQTDh
sHP8LzZp1VVXzXG+f/zjH1lL2Di6ZdxffQybRNPY9Lvuuiu9+OKL2U6wP3wD
Nv7II4/M9uNvf/tb+uKLL9Jnn32WRo0alT7++OP0wQcfpNdffz1rDtu2zDLL
pDnmmCNr4lZbbfUdXfv000/zZ//85z/nc40YMSJ9/fXXacyYMemrr77KOnf5
5Zen/fffP9vvOeecM+sJm/jEE0/kY13z888/zzjfO++8k3N32rzddttlHeRb
sIPav8IKK2S9+b//+7/00ksv5Ws6xyeffJL++c9/pueffz6jn1555ZX8ObZ7
nXXWyTaUXWTT3Zt2PPbYY+nDDz/M59AH/E26rC6Gdoil6gPXbul50STPqlev
XllPxWOfe+659Pbbb+c+Lvfp/H/961/Tbbfdlnbffffsd+lf9p4+sf/qccb3
GRl7GOvQAtpyyy23ZE3ceuut83intFMfNPY5Ou8++Ui/+tWv0lNPPZVrhO64
4478nTNW0d/61fOjPb5Lnge90+fGOp6Ftnqe8Dx8d30P+GC00xjHd5XmnnLK
KelPf/pT+te//pWfRTnWeV544YV87jIG8F0oY4Ba/z6DIJgw+Be0jT1gZ9ly
NvHJJ5/M/15ppZXyZ8pvXdyIj3T33Xdn2+Pzt956a44T0gR2SIzw8ccfzzaD
/Wbbf//736f77rsv6+Bbb72VtYtdPfTQQ3O8kD2hM3yzoms0QDvYRraPHo0e
PTrbNrk3NpE/xK5uvvnm2ZYa47sWu8zeaaPz3X///fn6zz77bK5HYefOOeec
7JOwfWJYNNzxfKo//vGPuQ2uqQ0PPPBA+stf/pJtr/aLkdITNpt/W/SJv0BL
3Ee5nraw4eKoDz/8cNZjNtZ/8+WKv8vPaS4Oxu/Sxk033TT7LuKx+lNb7733
3twff/jDH/K16JX75xfSJv4d3wts+O9+97vxfkauT5suvvjibz7ruey4447f
0WX653mIIVd/znhIPzuXdvnuuJa20jL9bezgfrSPb1Z83fI8tJUG0mzjHf3o
GWk/HfQdEj8X9+Qvesa+qzSx3Kd/6zvPUhuc2xiBLnqGjcXfgyCoH2iV+Jbc
hfE1O+f3zl6wLeIzdK/kV9gkcSI2gn1mF9gstYrsFv+FDWEX2dUSR+T7nXXW
Wdnuvv/++1kTXINfyNdj79hH4+6ia8bWbBC/hx9HI/gjjtNOPpdYGv9jjz32
yPrCDnuP30HT2ET2VVwO9M212U86wN9zXXHMtddeO4/dnZ9u8u1ck73kn9I2
92Wsz8cx3nc+/aYd+oq2uw4/ymf1pXPwV8TdaIJ26QPXcJ/Oz89lS/mNTfkK
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
rq7xEfWHa5b+b0zX5DppiZhn0TV5QtqijqTUM/KxfA+0r8yFKGsKVK8PY2xT
anzE0Y0bPE99TT/FGtSZ6HPoB22gdfpRbNa11MjU+jcZBMHEQ9vEI+XQ6Jca
sgKbwP7Af7NncllyR2oyxJHYP/aDltAoY+fq8/N92D85JHanxLjEgugITWpN
HLJa18o6IyXHwlbRY3kh9pctVmthDE+P2E/jePrlvtg4tqxoqtf5Uvy1ajtK
18zf4hOoBef7jKtrfFZtoxvitPpBHlBtPd9Sv9JeOTI1L+7BmMF9yxWaa0E3
aWljz4eu0ht5JvfrPGpC1AeC/6wv+Uj6lU/Nbrs//mWZszWhz0ifiOWW/BqN
0N/uq1rX6C9tcW80zXXHR9fEk9Xm6GPt9TzUA/GfvV/8Z3kycx98/8TJ+ZNi
pWKv7q3UUnpG+ppeiVFqr++ONnoO5XtnbKEekq6Ou85OEAT1S3XO3/iVRvB9
5JzYFzaOLeMHlPUjjJPF4dgRPhC7SWPUtpX1F2lmWQPCHC+2hPbQEfFHcbKy
PkVLumYc73j2SfyRvZc/YkO9D/aQnVLPKPemnXxROSzaI7dF3+iaPA67xyeh
Se6X/1jya3RGrJNNpis0Shsa0zX1JPqAr2bOFr2Sk+NnqXWkw3wBNRI0Thv5
vWKL2kgTmpqbzS+hCeKgahbdmxpK7eS3it/pR3k2mq19+thz8W9aNjHPiAbw
o+iVe9N/tI2m0hd95Fz62Wv6wjX5Tfy21ugaXVWnJOZNP33f+Nfi1PpNjtNY
g7a5pteMG5yvzFfkZ/r+lvodrxmDydup7XV/BfcpL0fDjRPU24itt2b9lyAI
6gM2Q72ecat8UaltKOsOsRXstzExrTFmLmuQ0Av2ky00942doHl8EOfl27Eb
xtR0odS4O5YtEy+jXc3pGm2lRfI92lhsndgp+yjmpJaC7TbGV4chVupzai7o
j3tyfjFC5xJboy1sNhvsPmmd9rOFYlw0xfH8IzbU+avrIdnSsr4hH4muaQ8f
h3ao25Obo4vmSrie/BN9cH061dLau7RRfI9f5j74TvrM+fkXbDa95J/yt8s6
mu6XzedjTcwzUl/K59H3nhFNojtqc/Sz58TPo7V0wnXksFzftYwHGtM15y+6
Vr22pOfhHNXPw3fTOMH4y1iAJqnR1B5jMN9Z34WSX/OM9LExkzwgn5hmaadn
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
ErE19XdqU9SL00x2tbqttITNZjddg23l65b6kAntg+q+kJcs2kIv2X5+r3sb
16duy2dUNNY56JP70990tC3ubdz7VKvp3J4XPXaPNFEfN7e/dfWe8PRVX7lX
f8Uqy7rWtf69BEHQ/mFT2Tcaw3awQWxt8U0mZlxc/Lcyn7j6Pedlx1yH7rk+
mzaunXUce+Y9dpxd5quok5CLUdOhNkGeTPyLjyZ2JfenzqGsMSgOxxfkF7hu
dVtcgwa7Bv3RFm0q9SFt4RsUP7b4PWXfAG1pSVcm9hkVv4i2ub+2vrdqnNO5
tde13GNZe6Sl+yw+pnY6zr36SyuLH1vr30sQBEFbUdbHMnYXT1SfWGoS1EOU
dQPLupjqFKDegL7J+/DVyjqStb6fIAiCYNKmOq4pJ6X+Um2cGjo1meYKlBp2
c8XUaIpTql9QOy92Rxdb4zcEQRAEwf+CEk+Tf1EzUdaDV4evVr/MOVCTTtPU
0albUI9QajlD04IgCIL2htyNGg81feYaqA1X8y6vZn0mPppcm/p8NSARewyC
IAjaM/wuNR7qL9QtmuelxtA6Ivw4MUd14WrO+Wn8vPDTgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgqD9ob5P/bq1lNS9+2v9IesQ1UvtX5mPZo0k91Da
PyH1iz7vXGW9Yeez/hLUTpY+cq2yflRb9FNZ56tcB64zofcRBEEwqWJdQfuu
mZts/w5ztawvZd1fdrXW7WuJsla8OdPWI7ZHivWLreFozfaypnxrz1f2THW8
vWHsSWNfFOuS2OfF3mb6yDr91pi0RiI9mtD1EcseQdasdE570biOPWfsC2P9
/om9RhAEwaRCWTednbYP5EMPPZT3GjMv2foa1sStdRtbgg7RNPPOzKu2HpY9
ycrene6hNXvCFHzePG3H29PMGiRlTS1rbJX9l83Xtt6/fQT4VhM6X7vs6Wpd
fXsKWH/Zdez1bE1mY4yJvUYQBMGkApvKF7B/aFmz/umnn8623Pob1oqvdRtb
wpr09paxHjEdsD4xfeZ78jnNuRbLa6kfylr/juG72pvm1ltvzXtM2z+88OKL
L+Y1trx35JFHZp/OHij0dUJinmKm/E0aaZ9P+07bx3r06NHpqaeeynuq2ovG
/jLj7lcWBEEQfJdqXbO/GE3gK9x999153zGaUOs2Ntd2cTk6ZJ/me+65J2vO
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
R/Z3vvnmm9N1112X7aS9Mdk++6U99NBDea/Rf/zjH3n/5+aw56a9sh955JG8
h/bWW2+d91njF9T6XluCRtE0mqwP7BtnL7m11147r+Pc2DF80759+6ZVV101
7zduP2x7Y9s7HPYLHzZsWN4LbYkllvgm/zW+bSt7AW2yySZ577bf//73ed9t
fW4P0TfeeCNjv/KyR7fre572Y6Or9kTnU9pjwN7f9kS1P57zaKP95LxfT/51
EAQBqvd25mNcdtllee9mNth/21PUHmp8Ntpkn+vPPvssffTRR+ndd9/NttPn
7cvsLy0ruuc9+zTbF/u2227Le0rzV9j+9rYHWNkHVE7RvjHul7/F1tvH+pZb
bkm//e1v01ZbbZW1oPrYUqvBF+WX6jMa8uKLL+Y9sovGP/vss+nJJ5/Me4ry
sWibuN/47E9DO/lbnglfzJ7mzz//fO7rt99+Oz8f/37uuefy9e1zbn/yd955
J/3lL3/Je5pqn2etvb179857yPLLPW+6+Ic//CHtv//+eZ/UOeecM/KrQRDU
FcbjbJv9wMQY6dlbb72V7d+uu+6afQ9+XNE1NnrEiBFZwx577LF0ww035D2g
zz777HTeeeelCy+8MA0dOjRdccUVWcvY1g8++CDb9T/96U/p3HPPzbEwtrK9
1CbQWPkluUS23D7Te+21V97nm79FIx5//PF8P/yaan+zulbDfmqnnHJKevjh
h7O20DS6op/0K5+J/vBh9ZtYIb+I/9cajfcZMU7xTG3jO9Mh56RZDzzwQPq/
//u/PH5wbn3tOTz66KNZ27THvficmCVtsxccnRR3PPHEE/P79Nd5+Of2PHVv
tX5GQRAErYW+yHvJrZx++uk5DvXee+9lDTOOZ+tB19hLusYvYKv5L3wGez+L
MbL5cjM0QfxO7M7Yn659/PHH2c/jX4if8Y1a2nv7fwV95TfRNDk09pw20zIa
/uGHH2Zdvu+++/L92d+7HEsT+Xj2w7YPttjj559/nvuQ5tBy/XTRRRfleKy+
0x+0iGbuvffeOdfWUm298Qe/jnZecsklOc74/vvvp08//TSfi24aU8jnyblt
sMEGabvttkv77bdfuuqqq9IzzzyTfWef/+STT9K1116b86f2L3fv/EDPjCbz
vT3fm266KZ/D/baH5xQEQdASJQa58cYbZw2Sp3n66afzeF29h/2t1dKpJ6nW
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
xn7epu7JfwH+R/5Wml0sTV6Q/RT23vFdymk9zNluRVEU+4Sce8lvJhaE0+Qm
yBHnn2z9pAsXOTeBLku+iNx+eZ/iqeJ0S/HToiiKfQZuk8shp0B+Q/Id1p3j
XJz/4Belyfib5anak2H/Iv1Gw9Oa2+z9K4qi2CdkD5O8Pznu8vPVBuGn2nXb
is55URTFtkgOgVx2ufhywPkgN51ZWZy/6JwXRXEhIzVI2Dr72vio/Ctnctdt
KzrnRVEURVEURVEURVEURVEURVEURVEURVEURVEURbGK5MHJfVMf0rkmakSq
07sJ9jqpiay+lnoU+1TD9yhI3V/70u1RVp9YTf5ATXz9VStfzUd1pcZ6WHIJ
nWvjfDJ72J3D5hrjJG/e2LqnPWHOhLNnbLWGh/xDcyG/3jkKnuda9wDnJ6ir
b67UCDlKLS7tdH9nLJg77cr94ZJLLpnODPB8n9PG1TqWxsp+becW6at2ujZj
5R7ufdFFF02fy3mp/s3Zpf7uOatQ7ybws/7ac2D/gWd515bOWPcOep45NE/G
zpgZL2dOGNtxf/l4HqzPpQ/6nv3oq32XK6rWp7k1x8av5/cUxf6AzfI9ZeOc
Bfbkk09OZ4W++OKLBy+99NJaPPvss9N5JnfeeedUl8L3ep9qHh5lLNjOK6+8
ctqX7Jw1516r/Zyz1x555JGDe+655+Dyyy+fbCduY6vZSvu/2E9nrDojTV3N
p59+ehonZyQYW/d0Ro21A9uJm8Y2sLu4Ai+o8WJ83cPZaTlvWx1ic8XGs7nb
1gHBVe7vTFdz98QTT0z31k7/OiPvwQcfPLj55psnW4/r1bccn4M/cLRzeJxl
pJ2uz3ipMeneznHDT/g+Z8TifWfj3HXXXdN5EeB5gZ8feuihg4cffvjggQce
mPqrFrPza43rpZdeOvVhrsYmLtIu5487JzdjdtNNN82eL6Rf5uv222+fPufz
+qDv2o3zxrqYnmfN46xC9eXMsdosziJqnbmi2A/4jlvHWjs7B9OZ0M5RDn7/
/feD33777Qyc8+x3zmhW79+Zz6+99tpkg63N59a3+w72mp3Gy2o+4y22zVmg
P/zwwwRnXDvr2rktzuF05gFuoNvYatfnnDZneuL9L7/88uDbb7+dzuX87rvv
prF1TzbfWZ80r9r+ns9egrmw/scXTz311HQGnvOs3eP777+fziV15utjjz02
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
7jq8R/9Zr+A4P3tf2H58Yu3jc0u85neu4xfkA/fueT7t6BpjZGy3ea+T/2mO
5LjgVn5ibTQ31ijj+0cj0s2eR+f5DnjfvKvWOd4BffLu40ltjF/zuGO+RVEc
HUv1RtQTAboie1X9O4Ld8d1ni6192RG2b6znMIJ+wiXyBPlv8KN7HBap/UEj
sD+bcgjoBrZS7ElcRPyLFgBaiD4TTxrrWbFP9t+GP2gpfjacIz4jLsZGs/9s
nPW6dozPxYW4znNxt+vYVGNoPFOzBR/RAOKHxo9u8Fn3HnP3cl88oJ36xS57
vnnAj3hJPGkdr60CF/ML0mjxj2qne/7xxx/TmHsfzBN+oPXoZBpIW3Gez+Jh
OaFyIu2XMLbag8uTN+9z1kf06yqvpV/Ggs/R+2TtgBP5hunedXsY5uD+1jSe
R+PjJ/Nm/WXPoP54lj7gNvOL8+j15BHhd33gS6BnaTkcT3PjddeZY/Ox6+9x
URT/YM4PKR7u+86+iuGwzbSKHEk5CuB36iX6zuMYa2B+KvZpqf6xuAgesgcK
3/AnimdtC7pErsVSDkFqUukTG8u/l1opNANkH4M24KDE63CctTk7lpqBbH70
iXW9n+UAujb1KMbn00TugzPZUH7b7OlyrdgcG8tmug/+ktMopsOmG3dchafG
2i1zvIYr8QXbTcPRnIede7afDlIvyp4N/eWnM7/aIjeCHqNLzLPYGh3KJ2ht
gBf4K70r/HWpSaNd7L81z99//z1x5BKvJQfTu+OenmusjQ3/Kq7Ep3N71dbB
XLpO7JK/21rIWGUtwmfuWXzCxlouiP7zT5o7/bXG0HfvvvHVN5zmPaDx3IuP
csk/URTFbjDHa9lbJX7G9osB8TGy49a54HfsqPU7XcNHROfM1aJdfR495/Ns
Nh/gtqBh2PelHILU8cMrfE3W3db/tBafGNAC7KwYUOJS2o/TaA56g612rc/L
jTE2bLl4IJ0j3kPXrerF7KFir/lJcaZxsp9XnJAWc098gAu0gQ+MfWUv8Rr/
L5u+idfwI78dX5m8j21yzd0vZwe4Jx+s3FTza82CC/AWjSy/Qh6G8aFh9cc4
aGt80eJRxhisjej9U6dOreU1Y44XaFbvH97wTM8Wy9JPY7ht3mtikfjS2sKz
tQHf8mMbM/qUJvU3feHbztkU1k/WH9pCy+F6axrfDfNGa9N+2uf7s+vvcVEU
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
59c8rncc31szyG+Rk2n8Ej8dz2TL562/jKV93TSbcZEv4hpjSuPS4a0xUhT7
Cbwm1sQ/SD+xvWw5vxN7yObHFl1oiJ8ytaFwDr8bDbJt7RNxSH5bMUM8OJ7z
HPjZNTgp57uw32MexVy8aaz1Qmu4B77iWxOvwofJSVmtc5L26SPNxu9Hk/Hl
ivG5f/TL2E6cR6/hNLwk3oQ7xbzE3/hl2XfcpT3jPVyfOjR40mez732sMWLs
8S1tmfqMxm+uhsvZQNxP7kj0buK5q30b3ws5P2JnfKrGKuen0qZ8xb4Xu35/
i6KYB9uSc2PYRPFwdlFMxnc3NnPX7TwXSF0SvlF+Jf5EMTF+zm1rn9jTTHfK
nUx9ETqEpmL/6UH55HQOnxx/Hb8dv9yYR2EecqYNHyYfoWvpCvbVPeTvmSdc
an7EtZIjkzon8vnEjdI+faRb7H3AbTlXB7dqJ3+wdvqX7vQMf+cjZffllSTH
UpyP1pZDSgP5LG5KP8Xm+FxdT+fhKGujUdtk7O0XS21oY2L85mq4nA2yx1C/
5dF4Fr+uGNnYt/Ga1NK0zjBWfBfWB9pI+xn3Xb+/RVEsI3ty2cfsT7PGTc72
he5rYcP0l6Zg/45S+yQ1JXNeAc4RM6MRxLv8a+3Pj8q/5Tl08uqaIXuj8Q99
xYbiD74/+SvuQXuxxfzHoy92rs7JWJsF5O7FF4yf+DD5ULWRTzQ8hov0A7/Q
Mu477lfwDO+JPHdayLrA9ThAfgmO59v2fPywlP8xjr0+G7+5Gi5n+36nzo0x
8yz98qyxb+M1Gc+s+cZ1wdy8FUVRXMigD3CeWJT8QHbfv+qZsI/ilZtq+LKz
7Klr1Aihweg4P/v9cZyLkjiSHEVtxJd0mDgY272p1nDO8MYVdI17aKvcTHqm
+5WLoiguDIz75th8usC/+IxmoJk25br4Ox3hGtem3gst4/fHkbMw1prSRsCZ
0Z+bcnKiaUatqq2p2XE2+6mLoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiK
oiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiK
oiiKoiiKoiiKoiiKoiiKoiiKoiiKo+F/m6HMng==
    "], {{0, 606}, {438, 0}}, {0, 
    255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{131.4140625000004, Automatic},
  ImageSizeRaw->{438, 606},
  PlotRange->{{0, 438}, {0, 606}}]], "Input"],

Cell[TextData[{
 "The above screenshot came from the online app at ",
 StyleBox["https://falstad.com/circuit/",
  FontSize->14,
  FontSlant->"Italic"],
 ". The current it shows agrees with the old formula for current, I=E/R, and \
was captured after the resistance had plenty of time to decay. And that\
\[CloseCurlyQuote]s all it is, except that there is a time constant to apply. \
The time constant becomes ever smaller as the operation time increases. Since \
the problem description talks in terms of a constant state, it seems the time \
constant would become vanishingly small, leaving merely I=E/R=4.8 amps."
}], "Text",
 CellChangeTimes->{{3.768248962028112*^9, 3.76824902798542*^9}, {
  3.76825201303487*^9, 3.768252046496257*^9}, {3.76825221944355*^9, 
  3.768252345534012*^9}, {3.76831586955326*^9, 3.768315892356907*^9}, {
  3.768321170315639*^9, 3.7683211712539682`*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"rangex", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"0.4", ",", "3.3", ",", "0.1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rangey", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"0.5", ",", "2", ",", "0.1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Graphics", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"LightGreen", ",", 
      RowBox[{"Rectangle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "4.15"}], "}"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.7", ",", "0.7", ",", "0.7"}], "]"}], ",", 
      RowBox[{"Thickness", "[", "0.001", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.4", ",", "j"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"3.3", ",", "j"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "0.5", ",", "2", ",", "0.1"}], "}"}]}], "]"}], 
       "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.7", ",", "0.7", ",", "0.7"}], "]"}], ",", 
      RowBox[{"Thickness", "[", "0.001", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"j", ",", "0.5"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "2"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "0.4", ",", "3.3", ",", "0.1"}], "}"}]}], "]"}], 
       "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1.3", ",", "3.1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.3", ",", "2.7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.65", ",", "2.7"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Circle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1.76", ",", "2.7"}], "}"}], ",", "0.1", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.85"}], ",", "\[Pi]"}], "}"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Circle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1.89", ",", "2.7"}], "}"}], ",", "0.1", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.85"}], ",", 
          RowBox[{"\[Pi]", "+", "0.85"}]}], "}"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Circle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2.02", ",", "2.7"}], "}"}], ",", "0.1", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.85"}], ",", 
          RowBox[{"\[Pi]", "+", "0.85"}]}], "}"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Circle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2.15", ",", "2.7"}], "}"}], ",", "0.1", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Pi]", "+", "0.85"}]}], "}"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2.25", ",", "2.7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.7", ",", "2.7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.7", ",", "3.85"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.22", ",", "3.85"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.18", ",", "3.75"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.11", ",", "3.92"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.06", ",", "3.75"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "3.91"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.95", ",", "3.75"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.9", ",", "3.91"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.87", ",", "3.85"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.3", ",", "3.85"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.3", ",", "3.42"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Disk", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.3", ",", "3.42"}], "}"}], ",", "0.04"}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"White", ",", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1.3", ",", "3.42"}], "}"}], ",", "0.03"}], "]"}]}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"Disk", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.3", ",", "3.1"}], "}"}], ",", "0.04"}], "]"}], "}"}], ",", 
    
    RowBox[{"{", 
     RowBox[{"White", ",", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1.3", ",", "3.1"}], "}"}], ",", "0.03"}], "]"}]}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<E(t)\>\"", ",", "Medium"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.2", ",", "3.26"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<R\>\"", ",", "Medium"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.05", ",", "3.99"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<L\>\"", ",", "Medium"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.99", ",", "2.54"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<RL-circuit\>\"", ",", "17"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2.35"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.4", ",", "2.2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.4", ",", "0.5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3.4", ",", "0.5"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.4", ",", "0.8"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.5", ",", "0.8"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.4", ",", "1.1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.5", ",", "1.1"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.4", ",", "1.4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.5", ",", "1.4"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.4", ",", "1.7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.5", ",", "1.7"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.4", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.5", ",", "2"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.9", ",", "0.5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.9", ",", "0.6"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1.4", ",", "0.5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.4", ",", "0.6"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1.9", ",", "0.5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.9", ",", "0.6"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2.4", ",", "0.5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.4", ",", "0.6"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2.9", ",", "0.5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.9", ",", "0.6"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<0.02\>\"", ",", "Medium"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.9", ",", "0.4"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<0.04\>\"", ",", "Medium"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.4", ",", "0.4"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<0.06\>\"", ",", "Medium"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.9", ",", "0.4"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<0.08\>\"", ",", "Medium"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.4", ",", "0.4"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<0.1\>\"", ",", "Medium"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.9", ",", "0.4"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<0\>\"", ",", "Medium"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.4", ",", "0.4"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.2", ",", "0.6", ",", "0.85"}], "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.4", ",", "1.24"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.9", ",", "1.24"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.2", ",", "0.6", ",", "0.85"}], "]"}], ",", 
      RowBox[{"BezierCurve", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.4", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.55", ",", "1.1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.4", ",", "1.26"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.9", ",", "1.24"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.2", ",", "0.6", ",", "0.85"}], "]"}], ",", 
      RowBox[{"BezierCurve", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.4", ",", "0.5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.55", ",", "1.3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.4", ",", "1.22"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.9", ",", "1.24"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.2", ",", "0.6", ",", "0.85"}], "]"}], ",", 
      RowBox[{"BezierCurve", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.4", ",", "0.8"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.55", ",", "1.23"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.4", ",", "1.24"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.9", ",", "1.24"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Currents in problem 3\>\"", ",", "17"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.9", ",", "0.2"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<5\>\"", ",", "Medium"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.3", ",", "2"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<4\>\"", ",", "Medium"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.3", ",", "1.7"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<3\>\"", ",", "Medium"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.3", ",", "1.4"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<2\>\"", ",", "Medium"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.3", ",", "1.1"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<1\>\"", ",", "Medium"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.3", ",", "0.8"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<t\>\"", ",", "Medium"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.4", ",", "0.38"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Current I(t)\>\"", ",", "Medium"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.8", ",", "2.2"}], "}"}]}], "]"}], "}"}]}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.768083479020103*^9, 3.76808403492486*^9}, {
   3.768084094180152*^9, 3.768084334369253*^9}, {3.768084386385055*^9, 
   3.768084624606366*^9}, {3.768084660406908*^9, 3.768084827278695*^9}, {
   3.768084866710799*^9, 3.768084925002849*^9}, {3.768084961281863*^9, 
   3.7680850051120653`*^9}, {3.7680850522479897`*^9, 3.768085083156805*^9}, {
   3.768085130947517*^9, 3.76808537448223*^9}, {3.76808540800149*^9, 
   3.7680857789882803`*^9}, {3.768085812059127*^9, 3.768085850786024*^9}, {
   3.768085890536262*^9, 3.768085977061173*^9}, {3.768086012091916*^9, 
   3.768086033116487*^9}, {3.768086138816682*^9, 3.768086348896195*^9}, {
   3.768086380936808*^9, 3.7680864434528017`*^9}, {3.76808659366529*^9, 
   3.768086959954921*^9}, {3.768087008251094*^9, 3.768087071095158*^9}, {
   3.768087168651729*^9, 3.768087306830812*^9}, {3.7680873390241833`*^9, 
   3.768087387636153*^9}, {3.768087467251029*^9, 3.768087624083638*^9}, {
   3.768127012143403*^9, 3.76812708454204*^9}, {3.768127388300222*^9, 
   3.768127643519952*^9}, {3.7681279459094954`*^9, 3.768128109416383*^9}, {
   3.768128145518455*^9, 3.768128146061687*^9}, {3.768128202835864*^9, 
   3.7681282349836273`*^9}, {3.768128299221058*^9, 3.768128342464333*^9}, {
   3.768128396102624*^9, 3.7681284300184593`*^9}, {3.768128464368579*^9, 
   3.768128464887949*^9}, {3.768128521700658*^9, 3.768128707967067*^9}, {
   3.76812874627136*^9, 3.768128758787575*^9}, {3.7681288651422586`*^9, 
   3.768128959781855*^9}, {3.768128996997664*^9, 3.768129012074299*^9}, {
   3.768129049833249*^9, 3.768129051391824*^9}, {3.768129476004407*^9, 
   3.768129495297166*^9}, {3.76812957563787*^9, 3.768129583187105*^9}, {
   3.768134438534479*^9, 3.768134440318084*^9}, {3.768134510475156*^9, 
   3.768134527171337*^9}, {3.7681345663675327`*^9, 3.768134746881722*^9}, {
   3.768134777288312*^9, 3.768134821028945*^9}, {3.768135330098836*^9, 
   3.768135484136548*^9}, {3.7681355553719673`*^9, 3.76813556397082*^9}, {
   3.76813561012949*^9, 3.768135618640463*^9}, {3.768135695316687*^9, 
   3.7681357577816668`*^9}, {3.7681358018438883`*^9, 
   3.7681358162655287`*^9}, {3.7681358669441013`*^9, 3.768135937345335*^9}, {
   3.768135977288488*^9, 3.768136085447207*^9}, {3.7681361298148727`*^9, 
   3.7681361929598207`*^9}, {3.768136306413776*^9, 3.7681363203108873`*^9}, {
   3.768136632834638*^9, 3.76813663416934*^9}, {3.7681366829902477`*^9, 
   3.768136683334229*^9}, {3.7681367171889277`*^9, 3.768136783120379*^9}, {
   3.768136821550785*^9, 3.768136824244686*^9}, {3.7681368748181562`*^9, 
   3.768137084602956*^9}, {3.7681371857978897`*^9, 3.768137306020006*^9}, {
   3.768137352747044*^9, 3.768137355160679*^9}, {3.768137431612178*^9, 
   3.768137454914013*^9}, {3.768137621118573*^9, 3.7681376998093157`*^9}, {
   3.7681378114588223`*^9, 3.768138081264462*^9}, {3.768138118158698*^9, 
   3.768138307464293*^9}, {3.7681383379663258`*^9, 3.768138407665595*^9}, {
   3.768138439233837*^9, 3.768138447582841*^9}, {3.768138481900525*^9, 
   3.768138537784725*^9}, {3.768138577389846*^9, 3.768138739530651*^9}, {
   3.768138770905349*^9, 3.7681387879683867`*^9}, {3.768138855051762*^9, 
   3.768138864226232*^9}, {3.7681389405663223`*^9, 3.768138983195364*^9}, {
   3.7681393047895527`*^9, 3.768139312732459*^9}, {3.7681393474820004`*^9, 
   3.7681394685937233`*^9}, {3.768139530156802*^9, 3.7681395311884737`*^9}, {
   3.768139582833515*^9, 3.768139624648608*^9}, {3.768139662869515*^9, 
   3.7681397413502407`*^9}, {3.7681397916116247`*^9, 3.768139802066996*^9}, 
   3.7681398436504087`*^9, {3.768139880317812*^9, 3.768139981669797*^9}, 
   3.76814002812422*^9, {3.76814132001058*^9, 3.768141488925385*^9}, {
   3.768141533883486*^9, 3.768141627159483*^9}, {3.768141675228788*^9, 
   3.7681417048035793`*^9}, {3.768141742628516*^9, 3.76814174455402*^9}, {
   3.768149199544088*^9, 3.7681492427144547`*^9}, {3.7681542035328083`*^9, 
   3.7681542210727453`*^9}, {3.7681543104078007`*^9, 3.768154326259905*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.88, 1, 0.88], RectangleBox[{0, 0}, {4, 4.15}]}, 
   {RGBColor[0.7, 0.7, 0.7], Thickness[0.001], LineBox[CompressedData["
1:eJxTTMoPSmVmYGAQAGImKJ41EwRu2jOAwQP7NDDgcoDxYfLGYPAYLg/jw+Qh
4s/g8jA+TB5Cv4TLw/gw+bNnQOANXB7GR3XfBzT3fUAz/yOa+R/h8iZg936G
y8P4qPZ/QbP/C5r/vqH57xua+36gue8Hmvt+ornvJ5r7fqO57zea+/6gue8P
XD4dLP4PLg/jo7qPwQHVfQwOAL8Y44E=
     "]]}, 
   {RGBColor[0.7, 0.7, 0.7], Thickness[0.001], 
    LineBox[{{{0.4, 0.5}, {0.4, 2}}, {{0.5, 0.5}, {0.5, 2}}, {{
       0.6000000000000001, 0.5}, {0.6000000000000001, 2}}, {{
       0.7000000000000001, 0.5}, {0.7000000000000001, 2}}, {{0.8, 0.5}, {
       0.8, 2}}, {{0.9, 0.5}, {0.9, 2}}, {{1., 0.5}, {1., 2}}, {{1.1, 0.5}, {
       1.1, 2}}, {{1.2000000000000002`, 0.5}, {1.2000000000000002`, 2}}, {{
       1.3, 0.5}, {1.3, 2}}, {{1.4, 0.5}, {1.4, 2}}, {{1.5, 0.5}, {
       1.5, 2}}, {{1.6, 0.5}, {1.6, 2}}, {{1.7000000000000002`, 0.5}, {
       1.7000000000000002`, 2}}, {{1.8000000000000003`, 0.5}, {
       1.8000000000000003`, 2}}, {{1.9, 0.5}, {1.9, 2}}, {{2., 0.5}, {
       2., 2}}, {{2.1, 0.5}, {2.1, 2}}, {{2.2, 0.5}, {2.2, 2}}, {{
       2.3000000000000003`, 0.5}, {2.3000000000000003`, 2}}, {{2.4, 0.5}, {
       2.4, 2}}, {{2.5, 0.5}, {2.5, 2}}, {{2.6, 0.5}, {2.6, 2}}, {{2.7, 
       0.5}, {2.7, 2}}, {{2.8000000000000003`, 0.5}, {
       2.8000000000000003`, 2}}, {{2.9, 0.5}, {2.9, 2}}, {{3., 0.5}, {
       3., 2}}, {{3.1, 0.5}, {3.1, 2}}, {{3.2, 0.5}, {3.2, 2}}, {{
       3.3000000000000003`, 0.5}, {3.3000000000000003`, 2}}}]}, 
   {Thickness[0.004], LineBox[{{1.3, 3.1}, {1.3, 2.7}, {1.65, 2.7}}]}, 
   {Thickness[0.004], 
    CircleBox[{1.76, 2.7}, 0.1, 
     NCache[{-0.85, Pi}, {-0.85, 3.141592653589793}]]}, 
   {Thickness[0.004], 
    CircleBox[{1.89, 2.7}, 0.1, {-0.85, 3.991592653589793}]}, 
   {Thickness[0.004], 
    CircleBox[{2.02, 2.7}, 0.1, {-0.85, 3.991592653589793}]}, 
   {Thickness[0.004], CircleBox[{2.15, 2.7}, 0.1, {0, 3.991592653589793}]}, 
   {Thickness[0.004], 
    LineBox[{{2.25, 2.7}, {2.7, 2.7}, {2.7, 3.85}, {2.22, 3.85}, {2.18, 
      3.75}, {2.11, 3.92}, {2.06, 3.75}, {2, 3.91}, {1.95, 3.75}, {1.9, 
      3.91}, {1.87, 3.85}, {1.3, 3.85}, {1.3, 3.42}}]}, 
   DiskBox[{1.3, 3.42}, 0.04], 
   {GrayLevel[1], DiskBox[{1.3, 3.42}, 0.03]}, DiskBox[{1.3, 3.1}, 0.04], 
   {GrayLevel[1], DiskBox[{1.3, 3.1}, 0.03]}, InsetBox[
    StyleBox["\<\"E(t)\"\>",
     StripOnInput->False,
     FontSize->Medium], {1.2, 3.26}], InsetBox[
    StyleBox["\<\"R\"\>",
     StripOnInput->False,
     FontSize->Medium], {2.05, 3.99}], InsetBox[
    StyleBox["\<\"L\"\>",
     StripOnInput->False,
     FontSize->Medium], {1.99, 2.54}], InsetBox[
    StyleBox["\<\"RL-circuit\"\>",
     StripOnInput->False,
     FontSize->17], {2, 2.35}], 
   {Thickness[0.004], LineBox[{{0.4, 2.2}, {0.4, 0.5}, {3.4, 0.5}}]}, 
   {Thickness[0.004], LineBox[{{0.4, 0.8}, {0.5, 0.8}}]}, 
   {Thickness[0.004], LineBox[{{0.4, 1.1}, {0.5, 1.1}}]}, 
   {Thickness[0.004], LineBox[{{0.4, 1.4}, {0.5, 1.4}}]}, 
   {Thickness[0.004], LineBox[{{0.4, 1.7}, {0.5, 1.7}}]}, 
   {Thickness[0.004], LineBox[{{0.4, 2}, {0.5, 2}}]}, 
   {Thickness[0.004], LineBox[{{0.9, 0.5}, {0.9, 0.6}}]}, 
   {Thickness[0.004], LineBox[{{1.4, 0.5}, {1.4, 0.6}}]}, 
   {Thickness[0.004], LineBox[{{1.9, 0.5}, {1.9, 0.6}}]}, 
   {Thickness[0.004], LineBox[{{2.4, 0.5}, {2.4, 0.6}}]}, 
   {Thickness[0.004], LineBox[{{2.9, 0.5}, {2.9, 0.6}}]}, InsetBox[
    StyleBox["\<\"0.02\"\>",
     StripOnInput->False,
     FontSize->Medium], {0.9, 0.4}], InsetBox[
    StyleBox["\<\"0.04\"\>",
     StripOnInput->False,
     FontSize->Medium], {1.4, 0.4}], InsetBox[
    StyleBox["\<\"0.06\"\>",
     StripOnInput->False,
     FontSize->Medium], {1.9, 0.4}], InsetBox[
    StyleBox["\<\"0.08\"\>",
     StripOnInput->False,
     FontSize->Medium], {2.4, 0.4}], InsetBox[
    StyleBox["\<\"0.1\"\>",
     StripOnInput->False,
     FontSize->Medium], {2.9, 0.4}], InsetBox[
    StyleBox["\<\"0\"\>",
     StripOnInput->False,
     FontSize->Medium], {0.4, 0.4}], 
   {RGBColor[0.2, 0.6, 0.85], LineBox[{{0.4, 1.24}, {2.9, 1.24}}]}, 
   {RGBColor[0.2, 0.6, 0.85], 
    BezierCurveBox[{{0.4, 2}, {0.55, 1.1}, {2.4, 1.26}, {2.9, 1.24}}]}, 
   {RGBColor[0.2, 0.6, 0.85], 
    BezierCurveBox[{{0.4, 0.5}, {0.55, 1.3}, {2.4, 1.22}, {2.9, 1.24}}]}, 
   {RGBColor[0.2, 0.6, 0.85], 
    BezierCurveBox[{{0.4, 0.8}, {0.55, 1.23}, {2.4, 1.24}, {2.9, 1.24}}]}, 
   InsetBox[
    StyleBox["\<\"Currents in problem 3\"\>",
     StripOnInput->False,
     FontSize->17], {1.9, 0.2}], InsetBox[
    StyleBox["\<\"5\"\>",
     StripOnInput->False,
     FontSize->Medium], {0.3, 2}], InsetBox[
    StyleBox["\<\"4\"\>",
     StripOnInput->False,
     FontSize->Medium], {0.3, 1.7}], InsetBox[
    StyleBox["\<\"3\"\>",
     StripOnInput->False,
     FontSize->Medium], {0.3, 1.4}], InsetBox[
    StyleBox["\<\"2\"\>",
     StripOnInput->False,
     FontSize->Medium], {0.3, 1.1}], InsetBox[
    StyleBox["\<\"1\"\>",
     StripOnInput->False,
     FontSize->Medium], {0.3, 0.8}], InsetBox[
    StyleBox["\<\"t\"\>",
     StripOnInput->False,
     FontSize->Medium], {3.4, 0.38}], InsetBox[
    StyleBox["\<\"Current I(t)\"\>",
     StripOnInput->False,
     FontSize->Medium], {0.8, 2.2}]}]], "Output",
 CellChangeTimes->{
  3.768140042552833*^9, 3.768141398112483*^9, 3.768141428921632*^9, 
   3.768141458949519*^9, {3.768141592117073*^9, 3.768141628421311*^9}, 
   3.768141675901671*^9, 3.768141705964525*^9, 3.768141746109954*^9, {
   3.768149217173153*^9, 3.768149244297991*^9}, {3.768154206880086*^9, 
   3.768154222070627*^9}, 3.768154328096848*^9}]
}, {2}]],

Cell[TextData[{
 "When there are a lot of variables to watch, the Manipulate command is the \
only way I know to get an overview. The box below is based on the material at \
",
 StyleBox["https://www.electronics-tutorials.ws/inductor/lr-circuits.html",
  FontSize->14,
  FontSlant->"Italic"],
 " and may not agree with the text in detail."
}], "Text",
 CellChangeTimes->{{3.768312010489023*^9, 3.768312107041129*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eye", "[", 
   RowBox[{"vee_", ",", "are_", ",", "ell_", ",", "tee_"}], "]"}], "=", 
  RowBox[{
   FractionBox["vee", "are"], 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"are", " ", "tee"}], "ell"]}]]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.768260172204135*^9, 3.768260214145866*^9}, {
  3.768260299998865*^9, 3.7682603397736263`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "-", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"are", " ", "tee"}], "ell"]}]]}], ")"}], " ", "vee"}], 
  "are"]], "Output",
 CellChangeTimes->{
  3.768308745180148*^9, 3.7683090432209263`*^9, 3.768309096132156*^9, {
   3.768310083003488*^9, 3.7683101048060827`*^9}, 3.768314594535337*^9, 
   3.768314633389971*^9, 3.7683212205408583`*^9}]
}, Open  ]],

Cell["\<\
It takes some time for the current to reach its max value. From t=0.4 on in \
the green grid below, the circuit current is nominal.\
\>", "Text",
 CellChangeTimes->{{3.768314868432506*^9, 3.7683149209240637`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tee", ",", 
       RowBox[{"eye", "[", 
        RowBox[{"48", ",", "10", ",", "0.25", ",", "tee"}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"tee", ",", "0", ",", "0.6", ",", "0.1"}], "}"}]}], "]"}], ",", 
   
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7683145965761967`*^9, 3.7683147484635067`*^9}, {
  3.76831478457336*^9, 3.768314821042901*^9}, {3.76831494831645*^9, 
  3.7683149646105223`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"0.`", "0.`"},
    {"0.1`", "4.712084933334076`"},
    {"0.2`", "4.798389779386068`"},
    {"0.30000000000000004`", "4.799970507780705`"},
    {"0.4`", "4.799999459831161`"},
    {"0.5`", "4.799999990106463`"},
    {"0.6000000000000001`", "4.799999999818794`"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.7683147854885483`*^9, 3.768314822277747*^9}, {
  3.768314956306218*^9, 3.768314965708529*^9}},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"veel", "[", 
   RowBox[{"vee_", ",", "are_", ",", "ell_", ",", "tee_"}], "]"}], "=", 
  RowBox[{"vee", 
   RowBox[{"(", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"are", " ", "tee"}], "ell"]}]], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.768260368595525*^9, 3.768260415508218*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"are", " ", "tee"}], "ell"]}]], " ", "vee"}]], "Output",
 CellChangeTimes->{
  3.768309033274946*^9, {3.768310085522481*^9, 3.768310107559963*^9}, 
   3.768321225149577*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{"eye", "[", 
         RowBox[{"vee", ",", "are", ",", "ell", ",", "tee"}], "]"}], "]"}], 
       ",", 
       RowBox[{"Abs", "[", 
        RowBox[{"veel", "[", 
         RowBox[{"vee", ",", "are", ",", "ell", ",", "tee"}], "]"}], "]"}], 
       ",", 
       RowBox[{"Abs", "[", 
        RowBox[{"eye", "[", 
         RowBox[{"48", ",", "10", ",", "0.25", ",", "tee"}], "]"}], "]"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"tee", ",", "0", ",", "5"}], "}"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<I=\!\(\*FractionBox[\(V\), \(R\)]\)(1-\!\(\*SuperscriptBox[\(\
\[ExponentialE]\), \(-\*FractionBox[\(R\\\ t\), \(L\)]\)]\))\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(V\), \(L\)]\)=V(\!\(\*SuperscriptBox[\(\
\[ExponentialE]\), \(-\*FractionBox[\(R\\\ t\), \(L\)]\)]\))\>\"", ",", 
        "\"\<L=0.25H,R=10\[CapitalOmega],E=48V\>\""}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0.1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "10"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<time\>\"", ",", "\"\<current I\>\""}], "}"}]}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "0.5"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"are", ",", "1", ",", "200"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"ell", ",", "0.01", ",", "10"}], "}"}], " ", ",", 
   RowBox[{"{", 
    RowBox[{"vee", ",", "1", ",", "50"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.768308937667624*^9, 3.768308979810814*^9}, {
   3.7683091148434753`*^9, 3.768309115113492*^9}, {3.768309152647565*^9, 
   3.768309184189086*^9}, {3.768309219763927*^9, 3.76830925732828*^9}, {
   3.768309385633567*^9, 3.768309454931188*^9}, {3.76830959176962*^9, 
   3.768309729184969*^9}, {3.7683103165167923`*^9, 3.768310345529613*^9}, {
   3.768310755809552*^9, 3.7683108023569183`*^9}, 3.7683109127200327`*^9, 
   3.76831096569592*^9, {3.768311059318521*^9, 3.768311113921091*^9}, {
   3.768311218924816*^9, 3.768311228058106*^9}, {3.7683114592917147`*^9, 
   3.768311638160284*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`are$$ = 1, $CellContext`ell$$ = 
    0.01, $CellContext`vee$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`are$$], 1, 200}, {
      Hold[$CellContext`ell$$], 0.01, 10}, {
      Hold[$CellContext`vee$$], 1, 50}}, Typeset`size$$ = {
    850., {137., 147.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`are$797$$ = 
    0, $CellContext`ell$798$$ = 0, $CellContext`vee$799$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`are$$ = 1, $CellContext`ell$$ = 
        0.01, $CellContext`vee$$ = 1}, "ControllerVariables" :> {
        Hold[$CellContext`are$$, $CellContext`are$797$$, 0], 
        Hold[$CellContext`ell$$, $CellContext`ell$798$$, 0], 
        Hold[$CellContext`vee$$, $CellContext`vee$799$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{
         Abs[
          $CellContext`eye[$CellContext`vee$$, $CellContext`are$$, \
$CellContext`ell$$, $CellContext`tee]], 
         Abs[
          $CellContext`veel[$CellContext`vee$$, $CellContext`are$$, \
$CellContext`ell$$, $CellContext`tee]], 
         Abs[
          $CellContext`eye[
          48, 10, 0.25, $CellContext`tee]]}, {$CellContext`tee, 0, 5}, 
        PlotLegends -> {
         "I=\!\(\*FractionBox[\(V\), \(R\)]\)(1-\!\(\*SuperscriptBox[\(\
\[ExponentialE]\), \(-\*FractionBox[\(R\\ t\), \(L\)]\)]\))", 
          "\!\(\*SubscriptBox[\(V\), \(L\)]\)=V(\!\(\*SuperscriptBox[\(\
\[ExponentialE]\), \(-\*FractionBox[\(R\\ t\), \(L\)]\)]\))", 
          "L=0.25H,R=10\[CapitalOmega],E=48V"}, 
        PlotRange -> {{0, 0.1}, {0, 10}}, AxesLabel -> {"time", "current I"}, 
        AspectRatio -> 0.5], 
      "Specifications" :> {{$CellContext`are$$, 1, 200}, {$CellContext`ell$$, 
         0.01, 10}, {$CellContext`vee$$, 1, 50}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{918., {229., 238.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.768312440372881*^9, 3.768321229083045*^9}]
}, Open  ]],

Cell["\<\
5.  LC-Circuit. This is an RLC-circuit with negligibly small R (analog of an \
undamped mass-spring system). Find the current when L=0.5 H, C = 0.005 F, and \
E = Sin[t V], assuming zero initial current and charge.\
\>", "Text",
 CellChangeTimes->{{3.768141873642478*^9, 3.768141955774252*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"LightGreen", ",", 
      RowBox[{"Rectangle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "2.4"}], "}"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1.3", ",", "1.1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.3", ",", "0.7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.65", ",", "0.7"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Circle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1.76", ",", "0.7"}], "}"}], ",", "0.1", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.85"}], ",", "\[Pi]"}], "}"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Circle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1.89", ",", "0.7"}], "}"}], ",", "0.1", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.85"}], ",", 
          RowBox[{"\[Pi]", "+", "0.85"}]}], "}"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Circle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2.02", ",", "0.7"}], "}"}], ",", "0.1", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.85"}], ",", 
          RowBox[{"\[Pi]", "+", "0.85"}]}], "}"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Circle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2.15", ",", "0.7"}], "}"}], ",", "0.1", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Pi]", "+", "0.85"}]}], "}"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2.25", ",", "0.7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.7", ",", "0.7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.7", ",", "1.85"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.05", ",", "1.85"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "1.85"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.3", ",", "1.85"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.3", ",", "1.42"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2.05", ",", "1.77"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.05", ",", "1.92"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Circle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1.8", ",", "1.85"}], "}"}], ",", "0.2", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.4"}], ",", "0.39"}], "}"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Disk", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.3", ",", "1.42"}], "}"}], ",", "0.04"}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"White", ",", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1.3", ",", "1.42"}], "}"}], ",", "0.03"}], "]"}]}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"Disk", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.3", ",", "1.1"}], "}"}], ",", "0.04"}], "]"}], "}"}], ",", 
    
    RowBox[{"{", 
     RowBox[{"White", ",", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1.3", ",", "1.1"}], "}"}], ",", "0.03"}], "]"}]}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<E(t)\>\"", ",", "Medium"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.2", ",", "1.26"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<C\>\"", ",", "Medium"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.025", ",", "2.01"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<L\>\"", ",", "Medium"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.0", ",", "0.51"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<LC-circuit\>\"", ",", "17"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "0.25"}], "}"}]}], "]"}], "}"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQA2IQfahGWU5T+I2jedJBeRCt0zRPFUQ3sHipgeiCvTZa
IFpg6zIHEC24U9AVRKdqBbmD6DcR+8NBdIyiUySI9pp1NhZEHzqSkwmidzwR
LQXRu24rV4NoI+Vl9SCae0vadBCtfe/wch0Q/ap1BYj+5sSxFkTrfLsMpkVY
Pm4E0efu/dwFok8rfjoIok+YsJ0E0WcK9p4D0f6TllwC0QkdMtdB9Lz1bG9B
9J2G2j8gOuV0OYMukF7iacAKom+VMIqBaKeHWtIg2nFOngKINrh+Uw1Ea01k
NAfRC0+1OYBoK/d5/iC65tDJYBDdONUhAUSfYm9PA9GlEfV1IPpclfp0sHrW
cDANAPb8kbg=
  "]],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.88, 1, 0.88], RectangleBox[{0, 0}, {4, 2.4}]}, 
   {Thickness[0.004], LineBox[{{1.3, 1.1}, {1.3, 0.7}, {1.65, 0.7}}]}, 
   {Thickness[0.004], 
    CircleBox[{1.76, 0.7}, 0.1, 
     NCache[{-0.85, Pi}, {-0.85, 3.141592653589793}]]}, 
   {Thickness[0.004], 
    CircleBox[{1.89, 0.7}, 0.1, {-0.85, 3.991592653589793}]}, 
   {Thickness[0.004], 
    CircleBox[{2.02, 0.7}, 0.1, {-0.85, 3.991592653589793}]}, 
   {Thickness[0.004], CircleBox[{2.15, 0.7}, 0.1, {0, 3.991592653589793}]}, 
   {Thickness[0.004], 
    LineBox[{{2.25, 0.7}, {2.7, 0.7}, {2.7, 1.85}, {2.05, 1.85}}]}, 
   {Thickness[0.004], LineBox[{{2, 1.85}, {1.3, 1.85}, {1.3, 1.42}}]}, 
   {Thickness[0.004], LineBox[{{2.05, 1.77}, {2.05, 1.92}}]}, 
   {Thickness[0.004], CircleBox[{1.8, 1.85}, 0.2, {-0.4, 0.39}]}, 
   DiskBox[{1.3, 1.42}, 0.04], 
   {GrayLevel[1], DiskBox[{1.3, 1.42}, 0.03]}, DiskBox[{1.3, 1.1}, 0.04], 
   {GrayLevel[1], DiskBox[{1.3, 1.1}, 0.03]}, InsetBox[
    StyleBox["\<\"E(t)\"\>",
     StripOnInput->False,
     FontSize->Medium], {1.2, 1.26}], InsetBox[
    StyleBox["\<\"C\"\>",
     StripOnInput->False,
     FontSize->Medium], {2.025, 2.01}], InsetBox[
    StyleBox["\<\"L\"\>",
     StripOnInput->False,
     FontSize->Medium], {2., 0.51}], InsetBox[
    StyleBox["\<\"LC-circuit\"\>",
     StripOnInput->False,
     FontSize->17], {2, 0.25}]}]], "Output",
 CellChangeTimes->{{3.768142872744076*^9, 3.768142901305848*^9}, {
   3.768142935728182*^9, 3.7681429615593863`*^9}, {3.7681430151007843`*^9, 
   3.768143036136594*^9}, 3.7681493176075172`*^9, 3.768149359906777*^9, 
   3.7681494154631557`*^9, {3.768149447778319*^9, 3.768149465000167*^9}, {
   3.768149562506061*^9, 3.7681495773587427`*^9}, {3.768149624498129*^9, 
   3.7681496548694572`*^9}, {3.768149767029018*^9, 3.768149865026018*^9}, {
   3.76815012176659*^9, 3.7681501938234253`*^9}, {3.768150240228252*^9, 
   3.768150276430612*^9}, {3.768150327489636*^9, 3.7681504579348173`*^9}, {
   3.768150546972999*^9, 3.768150559392468*^9}, {3.768150623702086*^9, 
   3.768150653754081*^9}, {3.7681507205122004`*^9, 3.7681507869185543`*^9}, {
   3.7681508415605593`*^9, 3.768150871110889*^9}, {3.7681509158019333`*^9, 
   3.768151028757114*^9}, 3.768151228547265*^9}]
}, {2}]],

Cell[TextData[{
 "I found the site ",
 StyleBox["https://en.wikiversity.org/wiki/RLC_circuit",
  FontSize->14,
  FontSlant->"Italic"],
 ", which has a formula which is shared by the text, i.e.\n",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"L", " ", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"q", "[", "t", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "2"}], "}"}]}], "]"}]}], "+", 
    RowBox[{"R", " ", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"q", "[", "t", "]"}], ",", "t"}], "]"}]}], "-", 
    RowBox[{
     FractionBox["1", "C"], 
     RowBox[{"q", "[", "t", "]"}]}]}], "=", 
   RowBox[{"v", "[", "t", "]"}]}]]]
}], "Text",
 CellChangeTimes->{{3.768324138855035*^9, 3.768324155356841*^9}, {
  3.7683242652467737`*^9, 3.7683242986912203`*^9}}],

Cell["\<\
R being negligibly small will make the first derivative term disappear, \
leaving\
\>", "Text",
 CellChangeTimes->{{3.768324161600006*^9, 3.76832426286413*^9}, {
  3.7683243745521393`*^9, 3.768324398996388*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqn", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"0.5", 
     RowBox[{
      RowBox[{"q", "''"}], "[", "t", "]"}]}], "-", 
    RowBox[{
     FractionBox["1", "0.005"], 
     RowBox[{"q", "[", "t", "]"}]}]}], "\[Equal]", 
   RowBox[{"Sin", "[", 
    RowBox[{"t", " ", "V"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7683220156644983`*^9, 3.7683220248390837`*^9}, {
  3.768322949983857*^9, 3.768322953126151*^9}, {3.768324333323103*^9, 
  3.768324335633027*^9}, {3.768326785782552*^9, 3.768326786117758*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"-", "200.`"}], " ", 
    RowBox[{"q", "[", "t", "]"}]}], "+", 
   RowBox[{"0.5`", " ", 
    RowBox[{
     SuperscriptBox["q", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}]}], "\[Equal]", 
  RowBox[{"Sin", "[", 
   RowBox[{"t", " ", "V"}], "]"}]}]], "Output",
 CellChangeTimes->{3.768322139208112*^9, 3.768322954546793*^9, 
  3.768323156062525*^9, 3.768324337617124*^9, 3.768326787479927*^9}]
}, Open  ]],

Cell["\<\
I will see what DSolve can do with this problem as it stands.\
\>", "Text",
 CellChangeTimes->{{3.768324761403685*^9, 3.7683247715471573`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{"{", "eqn", "}"}], ",", "q", ",", "t"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.768321566567697*^9, 3.7683217527989817`*^9}, {
  3.768321846706655*^9, 3.768321847464754*^9}, {3.768321893614222*^9, 
  3.7683218956056004`*^9}, {3.768321986128768*^9, 3.768322008742497*^9}, {
  3.7683220400454493`*^9, 3.768322040684905*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"q", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"20.`", " ", "t"}]], " ", 
        RowBox[{"C", "[", "1", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "20.`"}], " ", "t"}]], " ", 
        RowBox[{"C", "[", "2", "]"}]}], "-", 
       FractionBox[
        RowBox[{"2.`", " ", 
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "+", 
           RowBox[{"1.`", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"t", " ", "V"}], "]"}]}]}], ")"}]}], 
        RowBox[{"400.`", "\[VeryThinSpace]", "+", 
         RowBox[{"1.`", " ", 
          SuperscriptBox["V", "2"]}]}]]}]}], "]"}]}], "}"}], "}"}]], "Output",\

 CellChangeTimes->{3.768322009354073*^9, 3.768322041643161*^9, 
  3.768322104119632*^9, 3.76832214443958*^9, 3.768322957554613*^9, 
  3.768323158668042*^9, 3.768324344192256*^9, 3.7683267911270237`*^9}]
}, Open  ]],

Cell["DSolve pulls out a fully real solution which checks.", "Text",
 CellChangeTimes->{{3.768324780250475*^9, 3.768324808344637*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eqn", "/.", "sol"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.768322048222534*^9, 3.768322061505311*^9}, {
  3.768322154812932*^9, 3.768322155411591*^9}}],

Cell[BoxData[
 RowBox[{"{", "True", "}"}]], "Output",
 CellChangeTimes->{{3.768322054502726*^9, 3.7683220623535624`*^9}, 
   3.768322109604046*^9, {3.768322151182146*^9, 3.76832216225106*^9}, 
   3.768322960936572*^9, 3.768323161342786*^9, 3.768324351402115*^9, 
   3.7683268053764973`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExpToTrig", "[", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"20.`", " ", "t"}]], " ", "+", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "20.`"}], " ", "t"}]]}], "]"}]], "Input",
 CellChangeTimes->{{3.768326839664529*^9, 3.768326864618788*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", 
  RowBox[{"Cosh", "[", 
   RowBox[{"20.`", " ", "t"}], "]"}]}]], "Output",
 CellChangeTimes->{3.768326865550775*^9}]
}, Open  ]],

Cell["So to clean it up,", "Text",
 CellChangeTimes->{{3.768327049284852*^9, 3.768327055811558*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", 
   RowBox[{"Cosh", "[", 
    RowBox[{"20", " ", "t"}], "]"}]}], "-", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"t", " ", "V"}], "]"}]}], 
   RowBox[{"400", "+", " ", 
    SuperscriptBox["V", "2"]}]]}]], "Input",
 CellChangeTimes->{{3.768327067796756*^9, 3.7683271221133623`*^9}}],

Cell["\<\
Which doesn\[CloseCurlyQuote]t look too hairy, though not the same as the \
text answer.\
\>", "Text",
 CellChangeTimes->{{3.768327155143984*^9, 3.768327175599258*^9}}],

Cell[TextData[{
 "Example 1 on p. 96 of the text could repay close study on this problem. \
Roots of the characteristic equation, along with reactance, can yield the \
coefficients of the particular equation after some work. One thing that \
bothers me is the vagueness of the voltage function. Maybe something cancels \
out to make the answer come out so neat. The text answer, by the way, is ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"I", "=", 
     RowBox[{"2", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", "t", "]"}], " ", "-", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"20", " ", "t"}], "]"}]}], ")"}]}]}], "399"], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.768324438162862*^9, 3.7683246396683617`*^9}, {
  3.768324686866289*^9, 3.768324726750367*^9}}],

Cell["\<\
Freezing some parameter values in order to take a look at the thing.\
\>", "Text",
 CellChangeTimes->{{3.768325964099736*^9, 3.7683259788352613`*^9}}],

Cell["The plot does not look like figure 63 on p. 97.", "Text",
 CellChangeTimes->{{3.768325895807482*^9, 3.7683259253012857`*^9}, {
  3.768327439589505*^9, 3.7683274467012463`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"2", " ", 
     RowBox[{"Cosh", "[", 
      RowBox[{"20", " ", "t"}], "]"}]}], "-", 
    FractionBox[
     RowBox[{"2", " ", 
      RowBox[{"Sin", "[", "t", "]"}]}], "401"]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "100"}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", ".3"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.01"}], ",", "0.3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "5"}], ",", "50"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.768325370231092*^9, 3.768325490174862*^9}, {
  3.768325525174*^9, 3.768325525308172*^9}, {3.7683255635080338`*^9, 
  3.7683256264967937`*^9}, {3.76832566235163*^9, 3.768325703349957*^9}, {
  3.7683272799356203`*^9, 3.768327408239025*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[{{2.040816326530612*^-6, 1.9999999914873376`}, {
     0.030671790804136092`, 2.388099924329216}, {0.061341540791945655`, 
     3.7033188177233516`}, {0.09201129077975521, 6.456283582888032}, {
     0.12268104076756478`, 11.715753394584961`}, {0.15335079075537433`, 
     21.523511521763016`}, {0.1840205407431839, 39.686984724630705`}, {
     0.19344248811482923`, 50.}}]}},
  AspectRatio->0.3,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->300,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-0.01, 0.3}, {-5, 50}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.768325391984006*^9, {3.7683254363786182`*^9, 3.768325543314706*^9}, {
   3.768325578675569*^9, 3.768325584798283*^9}, 3.768325627807744*^9, {
   3.768325663791523*^9, 3.768325704012239*^9}, {3.76832728208706*^9, 
   3.7683274091085997`*^9}}]
}, Open  ]],

Cell["7 - 18 General RLC-circuits", "Text",
 CellChangeTimes->{{3.768151269332554*^9, 3.768151281322462*^9}, {
  3.768151772958211*^9, 3.7681517745967417`*^9}}],

Cell["\<\
7.  Tuning. In tuning a sterio system to a radio station, we adjust the \
tuning control (turn a knob) that changes C (or perhaps L) in an RLC-circuit \
so that the amplitude of the steady-state current, numbered line (5), p. 95 \
becomes maximum. For what C will this happen?\
\>", "Text",
 CellChangeTimes->{{3.768151285819131*^9, 3.7681513026971893`*^9}, {
  3.768151336607153*^9, 3.768151390076223*^9}, {3.768326104006592*^9, 
  3.7683261143742657`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[TextData[{
 "It is where the particular solution of the homogeneous equation is \
maximized. Numbered line (5) looks like\n\n",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SubscriptBox["I", "p"], 
    RowBox[{"(", "t", ")"}]}], "=", 
   RowBox[{
    SubscriptBox["I", "0"], 
    RowBox[{"Sin", "[", 
     RowBox[{
      RowBox[{"\[Omega]", " ", "t"}], "-", "\[Theta]"}], "]"}]}]}]]]
}], "Text",
 CellChangeTimes->{{3.768326379909595*^9, 3.768326395307941*^9}, {
  3.768326468122666*^9, 3.768326478560816*^9}, {3.768326522304351*^9, 
  3.768326523500265*^9}}],

Cell[TextData[{
 "The quantity \[Theta] is known as the phase lag, and, I suppose, the signal \
is best, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "p"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " maximized, when \[Theta] equals zero."
}], "Text",
 CellChangeTimes->{{3.768326481702919*^9, 3.768326593100607*^9}}],

Cell["\<\
8 - 14 Find the steady-state current in the RLC-circuit in the figure below \
for the given data. \
\>", "Text",
 CellChangeTimes->{{3.768151601888234*^9, 3.76815164901221*^9}}],

Cell["9.  R = 4 \[CapitalOmega], L = 0.1 H, C = 0.05 F, E = 110 V", "Text",
 CellChangeTimes->{{3.768151656859727*^9, 3.76815169684134*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[TextData[Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"L", " ", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"q", "[", "t", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "2"}], "}"}]}], "]"}]}], "+", 
   RowBox[{"R", " ", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"q", "[", "t", "]"}], ",", "t"}], "]"}]}], "-", 
   RowBox[{
    FractionBox["1", "C"], 
    RowBox[{"q", "[", "t", "]"}]}]}], "=", 
  RowBox[{"v", "[", "t", "]"}]}]]]], "Text",
 CellChangeTimes->{3.768326719756868*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqn", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"0.1", 
     RowBox[{
      RowBox[{"q", "''"}], "[", "t", "]"}]}], "+", 
    RowBox[{"4", 
     RowBox[{
      RowBox[{"q", "'"}], "[", "t", "]"}]}], "-", 
    RowBox[{
     FractionBox["1", "0.05"], 
     RowBox[{"q", "[", "t", "]"}]}]}], "\[Equal]", "110"}]}]], "Input",
 CellChangeTimes->{{3.768326732905363*^9, 3.76832675728706*^9}, {
  3.7683283896380253`*^9, 3.768328425098062*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"-", "20.`"}], " ", 
    RowBox[{"q", "[", "t", "]"}]}], "+", 
   RowBox[{"4", " ", 
    RowBox[{
     SuperscriptBox["q", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], "+", 
   RowBox[{"0.1`", " ", 
    RowBox[{
     SuperscriptBox["q", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}]}], "\[Equal]", 
  "110"}]], "Output",
 CellChangeTimes->{3.768328432756465*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{"eqn", ",", "q", ",", "t"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.768328439340254*^9, 3.768328451576886*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"q", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", 
      RowBox[{
       RowBox[{"-", "5.5`"}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "44.49489742783178`"}], " ", "t"}]], " ", 
        RowBox[{"C", "[", "1", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"4.494897427831781`", " ", "t"}]], " ", 
        RowBox[{"C", "[", "2", "]"}]}]}]}], "]"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.7683284522269983`*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["\<\
If C[1]=C[2]=0, then the green cell above matches the text answer.\
\>", "Text",
 CellChangeTimes->{{3.768328583533099*^9, 3.76832860641121*^9}}],

Cell[TextData[{
 "11.  R = 12 \[CapitalOmega], L = 0.4 H, C = ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", "80"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "F, E = 220 Sin[10 t] V"
}], "Text",
 CellChangeTimes->{{3.76815178493222*^9, 3.7681518325217323`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqn", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"0.4", 
     RowBox[{
      RowBox[{"q", "''"}], "[", "t", "]"}]}], "+", 
    RowBox[{"12", 
     RowBox[{
      RowBox[{"q", "'"}], "[", "t", "]"}]}], "-", 
    RowBox[{"80", 
     RowBox[{"q", "[", "t", "]"}]}]}], "\[Equal]", 
   RowBox[{"220", 
    RowBox[{"Sin", "[", 
     RowBox[{"10", " ", "t"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.768328678386306*^9, 3.768328717071253*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"-", "80"}], " ", 
    RowBox[{"q", "[", "t", "]"}]}], "+", 
   RowBox[{"12", " ", 
    RowBox[{
     SuperscriptBox["q", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], "+", 
   RowBox[{"0.4`", " ", 
    RowBox[{
     SuperscriptBox["q", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}]}], "\[Equal]", 
  RowBox[{"220", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"10", " ", "t"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.768328722417795*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{"eqn", ",", "q", ",", "t"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.768328724955077*^9, 3.7683287394623213`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"q", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "35.6155281280883`"}], " ", "t"}]], " ", 
        RowBox[{"C", "[", "1", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"5.615528128088303`", " ", "t"}]], " ", 
        RowBox[{"C", "[", "2", "]"}]}], "+", 
       RowBox[{"0.09747747404159644`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "8.881784197001252`*^-16"}], " ", "t"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "10.403882032022072`"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"10.`", " ", "t"}], "]"}]}], "+", 
          RowBox[{"1.`", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"8.881784197001252`*^-16", " ", "t"}]], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"10.`", " ", "t"}], "]"}]}], "-", 
          RowBox[{"5.842329219213245`", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"10.`", " ", "t"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"3.56155281280883`", "\[VeryThinSpace]", "+", 
             RowBox[{"1.186954912693127`*^-16", " ", "\[ImaginaryI]"}]}], 
            ")"}], " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"8.881784197001252`*^-16", " ", "t"}]], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"10.`", " ", "t"}], "]"}]}]}], ")"}]}]}]}], "]"}]}], 
   "}"}], "}"}]], "Output",
 CellChangeTimes->{3.768328740715662*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "35.6155281280883`"}], " ", "t"}]], " ", 
     RowBox[{"C", "[", "1", "]"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"5.615528128088303`", " ", "t"}]], " ", 
     RowBox[{"C", "[", "2", "]"}]}], "+", 
    RowBox[{"0.09747747404159644`", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "8.881784197001252`*^-16"}], " ", "t"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "10.403882032022072`"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"10.`", " ", "t"}], "]"}]}], "+", 
       RowBox[{"1.`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"8.881784197001252`*^-16", " ", "t"}]], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"10.`", " ", "t"}], "]"}]}], "-", 
       RowBox[{"5.842329219213245`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"10.`", " ", "t"}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"3.56155281280883`", "\[VeryThinSpace]", "+", 
          RowBox[{"1.186954912693127`*^-16", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"8.881784197001252`*^-16", " ", "t"}]], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"10.`", " ", "t"}], "]"}]}]}], ")"}]}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"C", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"C", "[", "2", "]"}], "\[Rule]", "0"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.76832877373771*^9, 3.7683288476429996`*^9}, {
  3.768328950577203*^9, 3.768328953463057*^9}, {3.768329209541841*^9, 
  3.768329222084961*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "8.881784197001252`*^-16"}], " ", "t"}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.0141441407082632`"}], "+", 
       RowBox[{"0.09747747404159644`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"8.881784197001252`*^-16", " ", "t"}]]}]}], ")"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"10.`", " ", "t"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "0.5694954948083195`"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"0.3471711718583475`", "\[VeryThinSpace]", "+", 
          RowBox[{"1.1570136669058967`*^-17", " ", "\[ImaginaryI]"}]}], ")"}],
         " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"8.881784197001252`*^-16", " ", "t"}]]}]}], ")"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"10.`", " ", "t"}], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.7683288493330517`*^9, 3.768328954557804*^9, 
  3.768329223258539*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "8.881784197001252`*^-16"}], " ", "t"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1.0141441407082632`"}], "+", 
        RowBox[{"0.09747747404159644`", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"8.881784197001252`*^-16", " ", "t"}]]}]}], ")"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"10.`", " ", "t"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "0.5694954948083195`"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.3471711718583475`", "\[VeryThinSpace]", "+", 
           RowBox[{"1.1570136669058967`*^-17", " ", "\[ImaginaryI]"}]}], 
          ")"}], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"8.881784197001252`*^-16", " ", "t"}]]}]}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"10.`", " ", "t"}], "]"}]}]}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.768329278710659*^9, 3.768329291195503*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "8.881784197001252`*^-16"}], " ", "t"}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.0141441407082632`"}], "+", 
       RowBox[{"0.09747747404159644`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"8.881784197001252`*^-16", " ", "t"}]]}]}], ")"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"10.`", " ", "t"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "0.5694954948083195`"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"0.3471711718583475`", "\[VeryThinSpace]", "+", 
          RowBox[{"1.1570136669058967`*^-17", " ", "\[ImaginaryI]"}]}], ")"}],
         " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"8.881784197001252`*^-16", " ", "t"}]]}]}], ")"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"10.`", " ", "t"}], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.768329291767948*^9}]
}, Open  ]],

Cell["Dump the imaginary.", "Text",
 CellChangeTimes->{{3.768329332018594*^9, 3.768329335296139*^9}, 
   3.768329555696031*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "8.881784197001252`*^-16"}], " ", "t"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1.0141441407082632`"}], "+", 
        RowBox[{"0.09747747404159644`", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"8.881784197001252`*^-16", " ", "t"}]]}]}], ")"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"10.`", " ", "t"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"-", "0.5694954948083195`"}], ")"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"8.881784197001252`*^-16", " ", "t"}]]}]}], ")"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"10.`", " ", "t"}], "]"}]}], ")"}]], "Input",
 CellChangeTimes->{3.768329368128829*^9},
 Background->RGBColor[1, 1, 0.85]],

Cell["Try to plot it.", "Text",
 CellChangeTimes->{{3.768329549192236*^9, 3.7683295518722267`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "8.881784197001252`*^-16"}], " ", "t"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.0141441407082632`"}], "+", 
         RowBox[{"0.09747747404159644`", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"8.881784197001252`*^-16", " ", "t"}]]}]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"10.`", " ", "t"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"-", "0.5694954948083195`"}], ")"}], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"8.881784197001252`*^-16", " ", "t"}]]}]}], ")"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"10.`", " ", "t"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "100"}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", ".5"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.01"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.768329399985051*^9, 3.768329533649576*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwUV3c8198Xzkj2XmVk7733PWlZlSQpKqSyEr6VUamEyAgZ2SPZe6+6dkiy
N9nj8/m0UFHo5/fX+3Ve995zn+fc9xmPoN1ts+vk+/btE6Pft+//X6EXO69T
+Jv0mPGNhoSP/96ddM+mueWQiupPBZPLLUzgs7MyLyQcipFTE6WSnckK/kfZ
YsIQXo02Q+6xHXlNwhbx385SOWDESTNjzutFwMOc4fn/0lrQxgnn4d5T85jc
VkRuO+w9OqD3Zn2YfRDL5teVbPp8QJ/sGYbP8BZhy5+myj9vfkIlVSfZJ4Or
UHPq+rhXXh/K97Q6KPqxDo206vH+ThtAv3f7rVZMEhBpNfjy3bghtN59Im1z
twyTMw2lrIeNIKoSkxuaIQ2YW0Vgxt1/DJVxtt34FZGM5S46C373mUDcd6ab
71G9R8d8q+xc3afQmHaSXWTlFLr4miyTdPMzMmiX+Mrz3zJSt8/yUC2eQas1
MoPnLEmo+Zfxyzt5s+hnXXVnki4RnQr+UV7+Zg7J02rmRqXMo1GeuMG1tHkU
SFhQ/sfRja4V6fxUTFpA/oXymhqJH/FXmONwj1tEjbzZTW+X5rHXwDO1kqgl
5IPXOiqsiJjihuyFb2HLiPvL2PKKAQmHb/Z7ygWvoIXwS4IfYBlzh3i9uuW/
igIMWym7lafwaz7+2oJHBHQtJV/5llA7litpGSP6EBHnzBeW2v40VKvv+Efq
HglF+M8tb75pQMeGGHmc3L8ggdkF35RbZejTzQrtXJevSFu1TzBSIhlf+nPR
euXmN3TPaLb8Pls99mh/9O6l4nfkueY95bBZiWte9J9WLv6O8kLOrPT4laAd
S9HP/TI/kPX2VJdk9CDSF/K67ZH3AzmFNv7lfD6Pgohd/1gk1tAFiSM3YhMI
6GMFX0TpmzXU+pvV6EMiCbH6ugmcFV5Hgd4cIee5VpDlyZaS72nraH/XlW4X
lQmUwsx5JIJ/AzmYCYzMHwzG82MOffJJG+gim91QeeQklnhdb/vp4E8kZl/6
8sDjFezqwrjmGvcT7bPn8HPPJeEKVVs/Ro5faNeLfGXCnIC3dstZi6J+obMP
Ujw8WOaxXgfV61PMv5GW7sCj6NgB7B95UflL2G9UMNa7fP5IPu66VNASSreJ
OlU4y5XZqxGTyL9zMsGb6Hhyw997fnXI/MvZhQ9UW0jf/WF4q1scSqjKvOPs
v4WMR+2WgkPL8edHvynpyP+gLeKYTJ1TAxYxNIrJe/QHTRN6Gkcc4rETa7Ko
0c4fJCJhSoOI71HxxLfKVZ+/6Hd746MAtWm0kal/InjzL5qgWYj0yVxGWq4x
wxL3tpFsBZ1R0A0SeqS+cqNjfRvVvz57xJWfiFr3af++6b6D7KvvjPWen0e0
XWHPDnzbQQfhGceZyC505uUMV7bLLqK8V2nIxPcJR1sr55wg7CJlKWb/V7IL
eFw0UGPp5j/EVlcf7OhFxDsi/p85v/9D0Y2zKjE7RMzMeqRFWGcfuCyu86g0
LeJ0lkZOncf7wGyjTs7vxwhWYkFO5q374FG/koP/bCVuZX731oWaDJKXjvx3
oqISnWfWZQkwIQOh3Uh/r1N1aImpwT45ggx+xVXHE8aDkBeTdk3lIBn4mB1/
/t+BakzLVEfXw00O8TpXIoz6a3Eio+bVJWty6A6ump+Teo1kGGvKdtPI4cEI
y6BY2QB6x6BOxbVIDv+UXgXbjM8jU4aqi/KSFJAuSlH1XIKIZulVC0/eogBe
XoYEfy0S8qCv2GdTSgH1WYWC7fGLiJJe2dzrJwWs7QMnQ50+FEtXlh2hSQlt
QyeevyZ9wOJ0in9zHlLC+/OfPKTuLuAa2pLTTU2UMPSAaBIwR8RGtPIZY/v3
g0lPx8S/FCKepCn6+cNwP7io8dZOjizgWzSyhrTh+2F7Vp4JTQzhXeqCJKH+
/fAhRLzry5ViHEEt/V2LkwrWjh34lvu9GglR5x09d4kKqJPFe/6O1aDyA5Jx
zilUYKA5q3RDRAkdO5BDeDpHBeJrYc7j7TV4mEpcL0nsACgOMYhkU9dgB6qs
yAqnA8DmERr/6FMR2tovuthddABUGe0jvJqH0PP9mRqLawfg5ptP9a3dC4h3
v3Dojho1dETEJ4kkEFERZcZnjvvUIErr2fN9iYgQpaCyHKaGIZq/j1/5LaBe
irTAExQ0ME3/TGJCvRvZURwev3KSBkS9yUVMuPrwBnmKrGcIDZBsbz4VD1vE
AeR8T158ooFrF31kDqmTMCd50mA2Gy3kMhy5oiVHxDlkPBKNF2iB/1xI+eji
PNYiS7g/mkgLdpEc9kldA/jDvoOfvn+mhUoV54io0tfYet8rIRoROnD+z5XC
Dteir/847wk60MF6bR9TH181evQvplOzgA7UnQwMJeqeYeZ/7Hxm3+kgkKjX
NalbhzN2X7o5qdCDrdjZvOt9lVh5l7XVz4se/v5QIs+OqUStO5FciQ30EPk0
9FjA6Aiy2GF2Lt/HACHv6VWfVy2i5e0X7z4c27Onhddit4jIa5uRdSGIAcyy
DJ2GHhIR7XbY9e1uBhhV1np/69I8SvxLX8vOwgieaq8+cH9uQzJ/Q+hlzzPC
8fbpuXrJQfzuD63N8XhGoPOJ4LB5uYRN/wSXX55iBNtV3hjheyQ8u0V94J4g
E+iums5SFhCwx9azS+HXmWD0hC/FedIcptyiKsrKZYI8Af7fXU19OHYzgAx/
YQIf91i2jWeRmP2BXx6RmxnC3K+yjAjWo8m/RwZ/azFD46l5Y9PDlejNfbJd
isvMsFPbkf5nLg77bbwP7XnADKdn31j3lNRhm1vhPPFJzNAgkIBHHlVhvSXz
vGsNzBAps7+7OKMY8V7l0ZSbZIbk/iDd6shB9Gdk9v3mX2aYOruboJc5j0ZM
cyxaeFjgbLKp0JMaAqrodF0M02aBtd3bce9fkFCUvuodSysWMLciPP5csYzc
6v+SC99nge8xTqyTGWPolEpz5JcEFvD9uTC2cy4bSxUGCdTUsQCb1Ez665Jp
TC12pthvnAU0Y096mimt4qUUDr1Tf1jgwHCUOmUVCbdyTXZzHWIFi3zV4fyc
VZwRkWE1p8kKwkqu9Q+nZvEjGkdCwUVWcJJ4eHCE1Iut/eS9Pb1Z4cbmXal8
x1is9ffnAf14VnD5Ft2qtla7N0c0xNLXssKMyVEHLfoa9IvkJzoyygop+1qA
/7stGrxuWJG+yQr+qc9+S9lX49JppqMu3Gxw6JjjsMWDOhx+YbhPTYMNHl3E
kUlaYcilN8mGzJINBJ8t+i8p9CIjw2vfPniygZOXBMXbh7NIvFnSNzaODfgV
rMyinVYRpfZ3ettqNniTQDzpVUlCc+VVidIjbGBTMKzc6bWKGmUeSv36xQZ5
jkPPR0o+o5Q3R2sbOdmhh2dA8NidEvSAn9YgRI0dOKvK3StfjOKLcb3D5y3Y
gX/G7FfalWWsxhx3XeAeO+AL5Y63HpEwe/DlDUIMOxS03vpDWCXgNTKRp5WV
7NBc0b8l8G8e9/oQWB4PsYNJtGFpk/kQPnGF8lSeOQeMWVBKMh5NQiIjXRN3
7nBA74RmG54qw2SmkU4omgMOVtY/vu7fgKc7LmzRVHDAugJB4XJDAm44wh80
OMABb+iKP7+m60AJdQucqesckEVPn/Lq6TTyUs5/48jGCZLLcp+HR5aRRYG7
iooyJ1Ddjwya8CYhZVGNll0zThjYalC8OkVAzCm7Zzs9OIHJn0RpkD6HvnK2
zbyM4gS/33lrDyTaUfeLkNtXyjihQ9exuJOhH+dRm+1K9HPCfsdiwW3FRRz0
hDts/QcnfHcQv9+2QMTX/0zzvGPhgtbLBS9GJohY/783eUGKXKCtvzKqvLOI
BUjOmufOcgFNtlSn99gY3rVX6uBz54K8bvXqFLZGPDG1abESwQXDVoLS318U
oRoLvFhWwgXcH4cDfAobUOyngDsPe7kgHTURGP7LQ3cMTCgMvnOB2bqD9URr
HjZrYo1iZeYGMr1zEn5lDVhBa0xgSp4bGt4dZ9SRLMIM5anF2We44YDEh5AL
JxvRPc6tV/2u3NCWWmN3Ln4MTXub+e2EccPKyVP9KbWL6ORUvrNEITf0yc0c
ny4kohLYf/5cNzcce5/0hJefhLgzr+j5ErnBg6PJnJ91CT05UCOeS3sQmOqX
/xwQGkIEJxaWQcmDcK+kRt+H9S0263H6s2twEOyK8LG5pRlcr9g6L+lwED5L
3FaoX1nFIjF8H82fHYTt5nWmQ6UkHLp5r+pR1kHgoFJ5KK67in9a9abmtR2E
X2cvT1TenMVXsGTw0MJBcDrOMuNi04vbhZ567KM8BBPF0S0SFtFYPnDSSlr4
ECBuOaftvlr0alX1uIX+IajmGrIIe1CD9p16IffE9hBEnqfCVsq+yLFkhavg
8SEIO995uUW9Cvez6ZONpB4C2xa2JYY79VjLM5FAhg+B4dD6vGLkf/j1+MaA
zPQh6D+pqVM2/wHR651+e2HnELz26de6IzCD7qRnZ/nx8sDVuJ+JK5YraIqS
LKJQmwfKfKYq9Pfq2wmHS96jl3gAVnkr4ksJqOhDuR2FDw+8l+3kT/aZQ1zy
DCZy8TwQvPqfbqBfO3ocdUP1Yg0PeHpembI534dXfmJ+/xEemBO+fijt3QI+
e/EgdfEvHhC5YfhPNpeI6xo8foxx8IKWNBeZJB8JCwl0j1Oq8sIbj25W2p4l
HPJUtFXenBfunL5x0FhtEm8s+RZe+o8XXkWHVArmtWJro9HYgChesFWPyymK
eo3aChUfl5TyAtdi5fGahgYkxxLiONHLCxQMSqfc1ktR7J0FM6rvvNB8bVvw
YUUK/jeiq6PIxAcjsV0coqL12EE7TtRajg8oE1s7tP9W4t6U74zPTvGBkjdd
2lnWEqRJbrRZ6sIHP27Lx9EZDaKM669nJ0P29pc9K+Ky2JtfO7e7DuTzQRot
xwWG/wjoPxmLCqUuPshpJYtjyCKhyRfFyZdX+cB9Yb+oivsKOrZO/SyImh+E
FxiPRURMokILO7dycX7g4qU7+pssAnHW1V+cPsEPRtmLhtz949iXj+MozQ1+
uGcs94CKsIyXH7vKqATwg4Rt+rnNSBI2XXjPcTWTH1L3XfXU7STgmpOC/4Jb
+OF1jIyU39d5LJjvs1Ixxw/5fuHC8GIIP2cc7PtMdhja6/7Um4+X4zV32Xpa
wcMg/HiC28KlAlkNBWaqwmHIMJ4Y2o/rUavGTJjN1cOgcC5Ft+BrBpJJ0vQM
8T0MjszjtE6uJTjmX5RNVfJhQHH9NgeHG/CuHclwtuEwTDjpeWhfycE32o8r
008ehqc1niLnPZvRJ8lUXvW/h2En6j63OHEcJZ3YJldkEICPfzMt9E4uIfqr
vgnc/AIw+MZoukechB547lPaJy8ANBee92UAEZFe+HUuIwHgkrYY/j0wh6xz
KG0/mQrAzZsXrZb9WlB3Y+Bmla0AqKsqBbCxDWGdMeqIFA8BIH+b/ujjxyVc
8OO5eOBTAXAKrX/l6UvCvLQM+Fa0AJCsblU/TiHgUKEXFuffCAC9zGok+eIc
3tZi+apTJQALFeplP4b6sMu5lwEi7wUgv9Zu7v2Hl3jSmYOPflQAxkA6I5xY
h0z84yrWVwTgXvg7Pbb0StSQdNBkYksAdN8NcjtLR2OZysT5ZlpByG14+V/5
vzqc9JHvfh6PIKhSiLEpOVRg+qVU1igZQQignWorr6hBD3YF87x1BeEz82DX
o5pRROLMPGJ7WhBu8SfNf9+/hKzlxcYMrgqCZevzvywsJNR9MsdNwU0QXGfK
LmfYE5GOjRQ19xNBoBXZ95lSbh4VeBWk/osUBMm7ci8DbdoQb6Sc+nKGIOhe
wl2MioM4NLekp6dcEES4LOgC/ZfwdpPSjapWQZDgFhG/dJuEXcYrdpKHBEH8
zaRsQTsBT66pxQQsCQLH+P5FH7l5bEJXK3PrtyC8jae5tODSjxuEtVvNqYWg
RSGDno0xAcvovLXSOSgE+ZQBMfPBdSjZHK0LSwmBQ/260Lp6FWK81fScTlsI
qMRm19/mRWDfgKNC68ZC4JuWM52UU4e/JrfVjlsLAQsbc0GZVCW+UnXybPMt
ITiFGp7a9Fehnp7OlVxfIdDfoDhPxjuK9JaNH0e+EILjp0d121sWUdG/j1ze
aUKwj8zUq3qTiPi5TYttSoXgi8GBtN5AIgpX6D9h0CwERLaKrKrAebRrYD4t
PyAEWQoTOvE675Gr7fBdrgUhYM+KOxxzagBPe1sy/NsQguRwHkKB5hI+HTWe
ubRfGEgdOfaOV0j4XZ61Tg+nMADX22SnLwQs1zI9UCkuDEtdHfrXPOdxyoSN
c7KGMFwsO8aVRjmAGTfmyAMMheHhY7bieY007Et/PcHlkjD82Beaw3O4Dn0V
WVY0dxaGrGOi+v91VqEruo6d2g+EIZXZkyXU5DnuOU+0EQ4Thv6ApwKVRnVY
z/XWJm2KMOQkOFX1zFfiosBvL9aKhCEvrerc2d8ViD/VXXwcC8OHlbwLHY9G
UHj1+rumXmHYHLiS0PZ4Ee1+umuROysMNImW11umich15feXiDVh6BCXeyOT
TUTT+3wCvChEgHtx1PLA9Dw6fXCb14ZdBOrZwra2OTvRO0XfipOiIhDluFhf
5dCP5Yz2mciricCGr3zJiS+LOMXOb57zpAjclvrXlGlMwq9+PyucshCBAzfJ
q+evEvHL0DDPzBsiMBr64MmN3ws4XPDlEed7IsBpVFMGKSM4qOoVnVKgCPzN
Wuwd9K7FfsYpQ5sxIuDjFhbniMrQw5nXqfiNCDB+8KqsQA3I626uY2ClCMzg
FypSTFnIg7ZY+VSbCNztGW/KTC7CLqkVO2xDe/6ZObKeDjbgmyp178cXRMD0
3yepZzu52K4TR6ZviMAj4Vu6vziakfWVNisHSlGo2r0peJI0jizWu0Tl2UXB
Lte0jd9mCZ0N6v32U1gUvggpzxzcISITvuHaBmVROGt8zbm6nYhOlE08fXpU
FCSyfqzf+7aA4OTsKaNzokB5SKKH71kf0p5c4mK5JgpLLTVqyZ/asZo7aXbE
QxQe/wpMZiyYwwpUa/kpfqLgH3ox4OUoAUsl/r57PUoUPAIv2nbs1TdRhR0k
kyEKf7Te95VuLWOBNnLa9VJR6Ej5h/LIP+NDl6gHa5tE4W0p3y1TxU7M/o0h
5XGfKMxnCsT4CEUjJn82h5OzotD24pNO/ZEGRHvwoBLjD1EImQpZDz5QgSiL
+LcH94lB07+XxCL7GLyrL9KeyCwG7BeEp20s6/DWiGSEnYAY5Hafk549Vo03
XOQvSSqIQRuvk+67mjz0lUxV5DsSgyFZiXej0QNoJVbra9UZMfDU9xVT5JlH
89JQ8/CqGMw+kovotiGg6cbjfsdui8Fxa4nt23v9dfS8sQndIzF47PRIuMV6
BfUTTDn7w8XAfYyML3x7An18ZDHzKkUMSsV+B3BPauIOduu8q0ViwPXkx3DH
gUncnGt7R+ydGGwP9Lrw2KzgBr2bel8+ioGM8c1PQ1kkXD3gQl0xJQYW6SH7
n14h4DIHj36fL2Lwk7B60pBrHhfseCYd2RGD1wdvhVaFDuCsqIc3qBnEIeC3
sSPT8zycLv5U4ROvOGjWba65napGSQ1Bf2JkxMFgVtpf91wdij0b3mqts2fT
GosKq8agiKWX4cIm4rDJsa/YjrkCh9yPtyRYicOR5aOqVKgBBzKnCpU6i8Ol
rX18O+Mv8eM3mSTP++JQng5up6ET+WjlVemFiIP9VNvBn7Sf0d1PxY/3J4rD
NB/xTPv2nl61rzTqzhOHnPvz5v6PSMhpq479ZZ04yM5GZlwaJiD78Mbpi13i
4DvsnqqYPYeuCrfnCIyLg7cX233DqnZ0qeaDx/LqHh6/pz43X/Zh81N9OkVb
e/6jv7wYWF/Ap+eGqe7SSMD959/zDTuI2MBzslf7oAT4mbVotf/d0x/0cwnk
khLw/aUJU7H1EtZNX7bv1JCAghyWf4T5cbyR1Hx2zlACfOtU1ItG3+G8V8l6
fy9JgOm0c0o7dxmyifaSZneRgKq81OeZFfWIM+Ict+xDCeAd8tJK1UxE3SFy
+0+ES8BFjcO9OkkV2O8ZzdqVVAlIJu5LY7CqxxpPF6Y9SyQgWrhXty4iFH31
xR8imiSAcfbPRvhevmX6JNTk9kvAudCks7bjc+jSvbtvmuclwMJR3m5fzp4+
8zCNmtiQAH59KfI7d0no/S3pRxv7JUF5LiD9ZsAS8nWkcmHgkgQfumAxjukB
pHJ91lJMQhJeOJRduNjcjgk2DceRpiQsht/bNYycx2nWcUqWRpLgOGdUIBpH
xBaWHofdrSRhPnmojmuOiOnNT9E/d5EEpQGei3W3F3HzGYmtjIeSICIkvx3K
N4K9jCmW6sMlYX2FTdBEoBzLnZzuH0yVhDwhUkj6YBVa0K/FX0okQYi/+xRn
TC1K0IsuoGqWhCWDuFA+q3vorNbt+MMDksCebOzQzl+DqdWMAjUWJOFBXbmW
YVUNfqco+t/Zn5JAu/v92xB/Proju8/GiUoKwi2XHPlVhpCU5ITJUy4pWOxy
48qOXUAzIlWaSRJScOKxd/GLvX4aKxApVqkpBSPTa1eFN/bqH68LW4+RFHxZ
zy66kLqAyLlP7lu2koJED5/mwphuVMMm9OWfixTM/HWdv0vbh12Zdsa4faVA
59aPKInoRSxCN9qu+EIK3giNejPpkPAEVXm5UZoUvLtdRdYiQMRR5OFp10ql
oMWL/ohD4zw22HUIe9C855/atf+n/QDe3TrqEzMgBd3FtO/Z6dNxxU/+m0UL
UrDkcMY1X6YOOf3YOvf+5966UvdlxydVSODLIMxQSUMPbencBZ0IPLxSLLvF
JQ39qLXgNq7DoQvPD7FKSgNBtbd9uqQC689cPyCtJQ2CJ3cYj9TWoM0J2Dhq
LA3G+WGTHD9HUdEIz6y1tTSw1ld+JqovoesDvz7evSUNtil8wotSJMT7qa8u
3FcaaMkKn+rKElF/V0F29gtpYHhD+5Dfbw4FtT+LbkyThpJ3+hL+Ak1Ir9nu
yVipNDTqC8ks+w/jjbe6rmvN0jBqH6b64vIyzqvltqIblIbTBRNcVxNJ2KZy
/aTIojRQpC8rXhEnYM7SHhXdX9IQrcNS4bo1i7sLcgUtDsgARzTVu4WwT9gv
x5/xNrcMPCu+Q3PbxRlpZF79+0xSBrjkrshkSDSgb6laK2laMvDPpoj8eEoZ
ykrkGKo1lgEDXpPgp00Z2Drue1O/tQycKj0bHmHVgFlffigi3pIBM713YBla
hDvCsxIpH8nAz/VtD2rvZtT6r6vy4wsZuGPGQx59eRI1un37FJsmA9PyuTyR
rsuoYZaNcLVUBsyrPM54eJNQtZkGpWSzDCxRuIWmvCSgshZr/rV+GXCq0xq+
fHkWFak80aiflwGJ4IlPFgM1KO/NGzP/DRn4S/uSj09iFGdxdrmc2i8L80d3
6dUql3HGs6+BnJyycHjYVCkunYSTN1nTP4vJwmAER9UjEQJ+5ahen6MuC0ts
dAFPhOZw9LjVkLuBLOT+kDem8OjFEcaPv2ldlIXj9szMMyr3cWhDJg2lkyxc
WgncfyasHgXJdgp/9JGF5Qeqhu1xFehpyhfd2BBZOHk8/72zajz2ZWK1vJok
Cy1mSgR+m3rs81jNQ6JQFnIyjo+Lp5Xjez8uhf54Kwteij+uHxOqQx52j7Lq
emQhnqFeSo5mDLkOvG58+lkWOlxaem5xLyHHYx3jJt9lwWHtxIYqKwnZV5I2
OMjkICFcaIzDmYhsxFiYPrPIgQz38+Yj5+aRdZyqZI6QHDxQr+ipj21HltSX
jrorywFTR8bd7zcHsLm372WtY3KgwzYQ1aKwhM8QMjwpzsvBVZfzcdSWJGxk
9T6y+7oclKZcb7ClIOIT3cT8mHtycIbiS1pI2TzW12Vuv/JMDsyAL2gocwDr
FanMiL+SA33Ri/Y8zplY6/DFP99z5GDo7/SzeOdapBbxkL2uds/+ODhYXleN
lMgy5J52yYHsCksXY4QXlvVoNzCZkIPBxAb3b3a1WGKeYMdBkoO2LtaV2ifV
WMSc6eH0thx06Gtp3RcsQQJtynHZDPLAaSddo1E3hHjVLEvd+OVBTrizPzpn
AXFnP/igKS8PDzyxmdl9ImLjTl8kB3loDjIaW6cnIcbgtn8fTOXh+KUHRrMC
i4j2z+rBGNu98wlnzr037EVUzowqVzzk4c9OTMDadjcmn1Q6Lf5UHoLU/Cez
fRfwrskFh+8v5eHNDXvBmFEi3np73682Ux6s6wjSBtVEvCGXluRXKQ9tTll1
zgqL+Htqa5Vxuzx0vBT7nkAcxiTm1V72EXlYfoxOi2eX45UnDMSpZXm4W5c4
v19rr96vKe7P3pSHAveaSF6lOvRdMZ+phlIBQq9w+lHKPkeuTm+TeBkUoOnN
8qJ/XhUmZnySfMKhAI2GjhzypnXYYWK2apFPAczEugfUWZPQEtvGUSMxBWB2
7XAt9u5H9iZUfUVyCsCietU1VngezflzX2FTV4CnzZ2bvtUEZPNWiuiJ9uwv
2z+nvEho+qeO1+RJBWhOLUrqbt7Tq3Jn9h8x3bvvkFKCt+gQGr9hG/XGUgEe
K34ZkSM14+TLlTXeNgpw+Ao7W//gLLYxp/l8ykEBjGK/Llg4ELCw8eX9Qm4K
sPAhJr04hYSXjpRK//JUgDBC1odLr1dwrsZ+s65HChCxfYLf/uEMdpG/6JXy
TAHunfM9e5HjI5YXK0zxeKEA/kyRJ9jkVfAaL1nbiTgF0Jq3Qnkq9aiS7Tzx
UKoCrBXmOwa/rEJetLks37IU4MjpzrHIq55Ym2xHvaVIAU4M8yhbmtXg3d+m
V+KqFKDL3TsxfqUWN33N9Hd+pwDK9/+IaR+IRv6Lm3moXQGcbzH2u7r2IoNJ
kz62HgUQYi+hGPOeRXQDab+XhxTAjvrXUozpKurp3OBrmFIAe+W7vBzlJBTV
aHAsYlEBkhNlT8m2r6Lz1UlO9l8UgNGNJ58nbgZxF32P0PipADnHBS/cvVuL
JjKPVdPvKEDfA3P/FweHcUriq6kZSkWQ+pYTedxtCdtGkSgq6RUhavT3zYO6
JCwSDFLB7IoQ7VrT2uZLxMuPok0v8yoCU+F9HluDRZx3b+WeoogizDC47Px3
fxTfuqWTvF9GEb7Enz9FymnACvYRLWPKiqCay1PfFVyC1i8trBZqK0LL0ZUY
w5gGVHVWg9nvqCJcj3o483QqF3kbhKpZGCvCcH55dUZSHtZBM9ZS5xRBJZS+
PPZ1A/6nqvJ095IieLKNx1lzleBmmaDcfjtF0HL1jsqIfosChCc/ZTkpgmmN
4dPd1lFkcEjhl4+HIvjs61s66rCI6Fj8ec/4KALd7bvyL8KIqOfAqL6wnyKY
GP/6QKO8F89dacffwYqQRT38H++pJXT+56MXHyIV4V7D1fzbJUOImzRQmRqv
CAZTUvcitOrx5Jz45H/pirASVaQq3TaDU8fukxvkKkL3zhyrx/Qqtuv9JMFb
qgjbErLSF0r39NZ74TPfaxTh9mwkRbXGKl5563m3tVERnicuiR22mMX5FR8S
X3Uogvn5nedjEr3YNf9ws0vvHr4vqVcqBCOxYsZ/KzCqCGvOr1c3+OrQxqv3
jBwziuDaqMn4grMGVb/gUV1dVoRJKmu+iWo35BN42+rtN0XwDhl3Xh+uwroP
W55E/laEXr59gjfo6vG+O1w51/8pAoXx2gj/cQfU4uTco3lACXyCI0Ubkz+i
QFu8wcCkBFQL+vqR6TPI0JKNZ45TCRRdepf6GlYQ/ZmbR6r4lWDZPbEXZ5DQ
p+P1N5+LKcEmk3m7kxkBRekwhV+RUwJm+48c13Jm0XnlaxVKakqge5k2UZyu
GXFLVY9T6SlB8ODGVnjiAJ4UoCObOK4EN6mKQ13jFnEq11Xx4lNKMChkJOHy
h4gbm/iuylgoAc/posWbgUQ84zwZm3tFCYRuHD2enLWAyTgTe8RuKgH7gdPu
/90fwkKNF6kybyuBGIOPoW1AIT7qxK0n6KUEZPd0OeSUapA9+8jdlMdKkEkI
q6wrrkEB72IKeYKVYFb7jIVG2TGc5WC++CpSCRYkt0NfTtTg96xsfJwJSjDg
PfyEYbsarzT0mb/MUALOyXwxng9FiOZmRChzvhKsWln0r5bvzb8sZ1rDypXA
5d0NCbrGBWRcz7BN26AE64/Wj3RGEpHL9W7loFYl+H4u9WDTdyIKYwpx3v9R
CZJuS2Zr7PWbolrD135De/xj0rrUVT+iT9eoJ/5NKYGRdbhzfEAv/s7wnvXh
khLw8n+OpDNfxCw1AUZ/vipB6TmjbXFRElayO+bn+VsJWhfIz9qeIuJz9BR1
G/+UgIWL8YqAzAK+U9X0w51aGbI6EybO3h7E0TaPJb8xKwMRNRyvjMzGlbTI
1uWgMjztFW+TFq5FwxU7r1YFleFcjq1H4UA1+nWlofeGlDKYkLWR52rfx1w0
96kXlJRh2HHVWji9FmuUa4KttjI0rMTZka9W4YuXNz2njypDqBnHj6/3y5DP
gepiKxNlsN9xTJ5tGkaJpXeXR82VwVvSxWpBfRE1WKkctrisDDublG7KbUQ0
tX/dYuC6Mih5/jpkjolot7g03NRVGRg9DIrPcyygw5fc2j/eU4aXlzWIzuRd
CCjld40eKcOd0S1GH65+bFv0RbXjmTJsdmXe4ZhaxH6WBbeORyhDbeRRSisj
En5N7vym+ZUy6IrqbfQzEXFrgeQUSleG088PyKYVz+NFixX2t7nKoHr738j+
6wOYiizbRKtMGRRfxQY+70nH4vnX/avrlKF48zdS2axFBudFGlRalOEufm3y
fbEKOf6bWy/9oAyiXz0GpJaD8fPcdGn5wb34GFd81jlXh/PO2VwrmFQGft3w
C4W1lfjDDn+i5KIyHD8tU6GSW4lI2VP9WV+UwbPm3DRd3wiiN0uiFfmlDM3j
FOr2hYtIdvuSfvquMvjPXhadWSei01kHffgPqED2VZOntkFEdNt0tDSRSQW4
6G/SS/vOo4g/savc3Crwtp3H/mtnOyrNPC8YK6AC7GtnRG6+GcD9p9kvskmq
QNi6CPVj2yW8vtkfEaGoAtc/KIhTOZEw++vIDgYtFVA8wD4//JGAVU+Z7gvR
V4GdkRWRY4rz2OI3owa1sQrwup23GrHux57pH28HnFMB8lUtwb/er/Ar49Bs
cuu98x5LWr6ldaj2p9HnR/YqUBPEyGe1XInGU2m4dlz28E3c07/I9BIDNe3K
6h0V0Auy5NsvWoez3Ghrhx+oQGed1oz53jxHP0b7vMVfBdK+cX8qI+QijyN0
ViWhKtB1nuzXSuAAGs2lk0mOVoGVQ2FXWQ/PIz1W+p3gJBXQoTCn03Yk7Ol7
+p57mSrwoOaaSetrEqKbp0+9VqAC5k2/TBj0VpCHMYObaYUKKDQZtlp5TqDR
coYjug0qwFf3dvOTURDW42VklWrd8z+NeO90TOJMf8Z5zm4VeOg8cHYgfQXT
fmGsoBhUAf9NsgjvIhJ2O88U8H1CBUyT+inUhQl4+C2TxdS8CtzXOEdGmzuH
dcSYxbuIKmDPx1lj/7IfZ4Qzb1atq4ABw4KRZHAmpv7N3Pn6rwq4H4vqfeBe
g1yvsiREUKjC98dNzHMPatHgexbnh3SqoFKRdzBv5jnSUmDVcWJTBXn1Hh2n
55U47RUrwwUeVVAqS8kLeF2/9z+zTR8VVoX39/lILbN38S1HtmIFaVU4rhbg
qGfdjQb72B7zKavCNdu3qgKOM0hLi/0srbYqfDt7W+FV7gpKy2AX+q2vCsGp
pQtf9/oBFR3H+ryRKqz080r/hwjI5T+O1l4zVRD/F+qlf2UW9U9wxLy9pAqc
2gsPUpow0jjGeSPPThU+MJuxFP8axCkFnOpxTqrg5C1mrSi9hCk5uKj9PVRh
c15K1FuRhJ0eco25+ahC4fydr7+eEnHvIlfeZT9VeLFMiu7VXMRqp7nvGz1X
Bab8Ro8//KM4qYrbRD1KFX4/UDiS/74Okx8+yCeSoAo94VE3tNtLkcOzg1+Z
M1RhtOrUe0GzBvTp20G8k6sKCmK9WxKeWUjN8lAEoXRv3UnjXMzdIpzUeMh2
pFYVFG/c0m8abMDkkjxKrU2qILTGZvUqLhc7RPJQlHaqggOFtUeUSzPq2eIZ
TO5TBeXa/YfT1SaQih3vm+djqsBvKnG2+9kSSujivec5qwopnaq0sUwktE+Z
76T9qipcP0wWIZ9PRDcS+bjP/lAFu8fHM2NfLaBuCv5V3S1VSP552SLSoxcp
ufDXSZGpAZcy2Y9So04cP8gfwkWjBilny/h/7uXjPt3D1pQsaqD+MU6H/BAR
33hzWPYHtxrIsDl8Tb9Gwt0MArtTAmpwy9VAfDloGSvdE/jUJaEGHJShL1Sa
pvCraYG0agU1OHpDzdPtQzvePSHonqmhBjs5Ma+tqNKQfbGgfiSoAf26jP9k
ZgPq4hJi8zVQAx1bRQPNI2VI4bHQgpOpGlBohDQcJEvFsStClRcs1WCkk+3S
gHk93jYVDjxmowZa1g4tOVKV+Fqt8AVFBzWIeeZbE7K/HLlMduj9uq0G40Pl
rU1aQ+jOv1ti9Z5qQMY1+mq6cR49FGJjfPxIDWKtA6gsCggo8HjNz2PP1ID/
tNzdggQSeuFweYrmhRoE8sHHLpEV9CqEvK0nVg14hlV1xN5MoPSi7IKXKXvx
azW41B6rifL6TKIts9SAQUWJaSd+Apdv/LjPV6QGPk7P7twQXMENXHHX5irV
wPqFW6BoAgm3aekYZ79VA+E3mTb3igi45/KskkubGnx9s/Uwt3UejzwOPKT4
UQ3uO4ZJLeoP4ZnX0uS/BtUgqjaLcouvHK+2967WTaqBGEiml+RVoLXVu32P
FtTAn2fB5EBJPfpLz1N7jLTHp8+z5UF5BqJUaEyj2VCDwYhAmeeeJZjh3PWg
nr9q4Pk2VE9zuAFz3qN1e0mhDoTfdVrM2Tn4cHzxBUs6dSA9QxI1us1IosEc
8bGpw4ugNwIf68aRwuctsblD6jDv3V/rLLuENMlTGbOF1OHKo5yST5NEpC96
7JezlDqsnSEYVP0iIiOD1SkFJXXImclMLUlZROecw9t+aqrD6/P706MWB5B1
uHJh3RF1uD3hxyLyrxFfLx2NfmSoDhu1U0fHrGex6+DDB8fOqkPE2viUqiAB
e/4Wsqe5qA5BDlQN7/JJ+PGhDuMeG3WoW6b+94tuFQfr3lJ+6aAOeZZ/1vtE
Z3GUDSuPpZs6PLxdIP1k4hNOfFpNzuelDpmis2eEeSNwZpY1YfaROjyXHnkZ
xFmHCjvJ+rOeqUOC5ODWuE4NqiJl1Tq/UIfOYx4vB495oXdMJukKcXvxSA7z
s3aowu+VfgT9TFEHdjPO0j6betx7PtatLksdws9ey2UVdcOjXtqWj4rU4TvL
qW8lPz+g2cQZdKxKHZ5lnRy/wT+DCO8CxGne7fFJvx7pYraC1melmHra1OG6
++lTo6EktE3Z+yvqozooKTlvwzsC2i9xd/rCkDqkT52WwslziNH4UDvvlDq0
lAifXLN7j7hcceHsgjrIPLjGHTTQiwUi7WOySOowGeJM4xW0gCUraB46b6hD
RjKPZkAkESuNFNkrbKsD91ffyZvyJKz955zJTwoNON6g8cTqwDI+xrelXEen
AeLP7naJDE7iU5DC84hNA+4ltG6lDrRhi2tHKY7xaACqsK52eJuGrgauEKiF
NWB0M2RAIbEBOeSG9X+U0gD9o4UnZhfKkHu3Ul2UkgZ0u58/YV0Rj32+jaRf
0NIAH1M+zS9pdfgp68NgXn0NaMhbvbDAWo1DVYXcZw01gOQ8m5gom4eiLd9b
Zp3VAOl9ruoeqgMo+b4LOF/UgNtB7jofuuYQpdkDzTFbDfDqG0tUDSUgJ4lQ
pZNOGvDH7Jt4RwAJ9e0mSld6aMDA2QM3Ev8sIY2hfBHh+xoQIPHh8HrZEErN
r+eLfKoBtsr9P4MomjGV3wfOfyEaMKIcX9ngN4ddLCeYbkVrQEhBtXgWDxEP
yBGpJ5L2+N+8CoZ6JKy1/y+Z4RsNiLSu/1MQuYTTJmj/VhVqwI3z4S0F3OP4
QNmhDZEqDdCMmPTyUXuLXYOkvkS904D7o3zEQscyNHRFa2nfew1woWG4HlVf
j3RUjT67ftKAxMuyoxaKySiD7tLo5IgGqGoMtCb/KMc0c459RjMaYJbLkFX0
oR671Xh31axoQKHzkrhyjD0aDg9uEfuxF++dVuvbvL1I93p8Q/SWBphHLL//
QjaHMrVzK8nJNSGActLah4uA6Fhri9xoNeHk5FHX/r3+7LHSkT3NqgmO458I
hpXLaPTdaJoJjyYkOcZ2VFKPIhSzEl8nrAknOug7H67U4iznzSgJGU14WB7p
lRA4i+n1qUNjVTQhx/KI368CAv6PmzuAUlcTHJJq/sS5kvD4V3Ffj+OacPar
6C0mrWV8pE3dc+aUJpgnvhJxwhM4J/Gk22mLPY3gFlXlatyEGT0uODZc0YR3
yc4ZrfPF6K7BTTupm5ogVUBKfHe2AU3ye1q9uq0J2q7CpBXp10j/Z6A5lZcm
cMlTRoQeLsO5H2JP3XmsCWoRneHK1xowc0bWibkgTXB2PBd2SDQYe3pVIdNI
TaDruXFJVuQjmj7drvEuXhMKZ6fGJlRn0THRYUWZDE0oO/R9hyF+FeX/XZRK
yNuLBytf3bsyEmLt/ylMvadpzngeleWwX0FeOfv57tVrQvWCIdO3s+Posy8H
50LLHr6FL9svvYrxifOiTGbdmnA5Sa3q9pMZXCitSt04qAlHfe5bGyoSMDv5
cTK5KU04xaaDSqNI2GfU/E/ioiaE7uoWqk0s49ki+3War3v+qVW3X1+fwgYB
d0iev/be40udWCdrKy6y8l9c3NUE4aQSjVsueYhDKXr63AEtwLSOHiUlDegB
deZIE5MWpA3ndpukZqP56fJeeW4tcDc0bAqUK8FGlS2dyQJaQH+rUyK7vgGX
hAw000lqgX+4mP2+qgTMZTdf762oBWUfy5pKD3chX431imVNLVhrEyqUujmD
Fhgpis7ra0F8x8ySHcsqMl5kzW4x0gL12g9xeZUkVFYvlKZ4Tgsm9Eu0KqlW
0cEopfhUKy1w/D3teCdsEj120I9isNcC4aicUp3DsXhJzyzkvosWHP/2bs57
eRqf4rDzX72jBa4XVaLaclbxZm455/sHWqD3ytjepIKEM/X252b6a0Hs7wv/
6VxZxaYDFtp+oVpw/pUjx4Ons3j7Zs7Hq9Fa4J0Sy/nZuRfnbG9d1U3Sghq7
qdjQAy+xeaTx2qFMLWi/LfHrOV0d2ieW7L+ZrwWFKW4+AgdrUEHdV87h8j38
IYWd9wi3kOUZyC2v1wKO72/KCNtVmHIhUjuyRQvsqVjOP12swyVe8x9dP+zd
FyAQpCnrjawZVG1MBvb4jlCXSjn1IOqMwDXJCS34Vlm66z03gyrURv0PzGuB
oKSudPyPFWTzQZJrkaAFKjM7rlt5JERvcz+3eU0LUv1tInvZCahmo1s77Y8W
XBwwP64lMIvsg/l7HpJrw6V0UzUqtXeImd/NxopWG+ydujba+IdwQ1nTmgbr
nv3ymPeO2BJ2OMkWwHlIG0wCi/oYpPf026Q914agNhBLpF7pRhNxo1tVbp+k
NlQR3RL5bi1il/3UOsWKe/uXnoZl1o5i7oSLPaGa2vA3mvCiXvwtbpXLt3E6
og0aiUkx7rdLkFvL9tpJQ22QZAj9IxLdgHgtTweIntWGjumTqlLRuaiDlMpF
cVEbAm49vPXkcD6+8+RH7oyNNlS3S2UeKmnAApxHdd45aMM8VeHXa7tFuDsv
uifRTRuMXz4xkGbDyAst2Xh7acNp3bkmJrMxJDKovm7xWBs+BopMBRYtol6H
4ACVIG0o1dC2vltKRA92xrlYI7RhlePCbWN2EpKIksn7FqcN8m934PzkIhoU
89X5mKoNXXQuTDRHB9Hj+k89ednaMDytpp7wtRHLmAraBhVrw8VzuD/n4Swe
XfBYv16tDbrxySF/jxKwv3drwFGsDcJj12kYMklYgZGTW/C9Npg29MtUvl3B
kxk383Z7tCE85q/Q27gZHKReqzM5rA3cloup705/xCrdtJ9qp7WBmjKCNnf7
KJ6xsbaNW9IGI03t63Y69Sj0Z+H6na/acC2srtjBvQppPP8XYPZLG571NvyX
1fAAL/Cf5VbY1QYWy6gFy5c1OKI8I4+BSgfiGvTcLeJrsY7Bhg6RQQesR0b6
Hh6MRyuTxz91cOiApWvBoZTtXhTtHmebxacDUVRkyiIfZxFQra4/FdWBxPcF
Q/fCVxEpQSvQVlYHBPOO7K7v5fMr+VBupKoDSyte+y7cWUXHWqfyeHV1wLZb
aRRmP6PvlvK6f47pQADXBYehmDKU9OXxpxETHXAK78i3+jiCDfz6bSvNdaCY
p+ntCM0y3uAU2Yiy1gFPeWP87iYJp+XfDXSz14H7tEiVV46IjeE992kXHVjI
RdfWXy1g86CnDYN3dICstzJv/cQQvtKLbKwe6gADlWBn4Wg+duDeppgL0IFU
4fV2t9Aa5GFTk+0QrgOSnvG9+qY16EHOHeNvsTogpxX4gV7iNg78rvDtbqoO
PDhBXW9mUYsjNL5EbWfv8b+RsRAE1Tjhca7a0xIdeOqpeuJFRynK7Lg+TlOr
AzrMgxIJicOoiFnIN6JJBw57nKv5qrCIaiynBbm6dCAskMLIvp2ImtIS2pL7
dWDmrRkuryWirhULR5EJHSDVzgaQNufRoAIbQ/68Drx6MKfwWbATTXt9KlEk
6YBst31w5Jt+vNIYYl6zsfd+BZxHW7iW8Bq1wabejg583VCjirQi7eklyqS2
/bqwyKD6+b8VAqaKb0QmjLoQ0lnd+sNyHjPNPpjv59SFLaebTCbx/ZhbUvPZ
xcO6ELvKL/iLIwELuf+UmhHXBT5iXoRvVh2SqS3tuaGgC4opCSct5iqRGpmr
xxcNXbj+K9NVpuglBkMpzjtHdOHZh4D3B+jrsVHkUu0fQ11Y5bm9fZa5ApuP
ZVx+YqYLF/k73Af25u0rglfJqK10wYf4vsfgwhhycOR5E35NFzRXdL43X1pC
HqUjBhwuukBIxK13VEjowdZLUuIdXTBOjbv07DARBRwxjRB6qAu9t3nf6jnO
ofBgepXcAF1gC9ZLiutsRK/6Okbkw3VBjqcq8Ur8MM44GHC/KlYX6miM25ou
L+MC2yOHdVN1IeE/kWv+e/qsKnenuSVbF+73f7SWlyfgxh+1N4xKdKHCTeO0
GcMc7tK8R9tXowuv/WR4hX59woNPlIouNOmCiKJY6HuKU2i68+vZ6U5d8Oa6
ekqftgGtsOT/tO/XBa408d+ZtOVo7eLNeOK4LiRlnRjoCE/Hf9OFdT3mdSHv
YG/fjmoDpiR8ntkk6sKHhtrKJuESzKiU5P9oQxfIN39zbHg1IW4fSwmqHV24
PRs0zM05iYSa2btD9+sBz5V9ziEey0iGtu82G6Me9JEry+c8ISE1szC2BE49
2PI45sJjS0CQYFgtcFgPGgRpFm7iGWQ4t98qW1wPfHUnn4+UliAzqeZdWQU9
YFZ5Ox/qMo6tPXwzKjT0QPE3wcbo6Qq+Uad1QvuIHlx/8foPfyUJu5H/Xm0y
1AOVPLKi+Uur2MeoPMzAbG+d/RQNrpnB/lG3FT9d0oMHBb0b2bNdOHxceuj8
NT04rdqpvCQZj14JrXhNOuvt5U/wjPzbBpThlMl77Y4eFPswjqDSYlRQZtO4
+kAP4oTk2f7+zMFVf3jt3QL0QOLamZyyjgaM9ccO/A7TA4XxqKt0v7Owy3Gt
5vOxetAfZGx771Eb4jZIfFCRogdGqdNdGuzTqM1oW40tWw9iHNn+2DGuII9T
l3+4F+vBzmzYq5B4EuI3fZffW60HVZUKoRR8BPTB7PAN+UY9yHrqUGJ9ewZ5
nX8sEN6hB2/CneIbx4qRiOXsOKlXD6IlXkhvso/j3kv6McZjejDCHHzh/tEV
/PDy6zN5s3t45XQupxaTsJQNJS0NQQ8OWNpkn+5YxcN211tvrunBWqF2zI2o
Wex3vd23/Y8ejCp65E519WB5B3FNUQoE3fJ3WlO7HNGkU9D6UzoEJdaFND92
6lHQrdXCOTYEL5UJoBlbjlTcjByO8CLY1gs5snokBc965AuliSA4eP+HUmJj
PQ6/Sz+1K4OgfsTI+lhoGdbyuhV3WRVBv2Kz9OX/GtCyT8/ZBl0ExZc2/v6o
GkPRD+XpeU4g6H2xRFO9l4/wOKLd+zQCe88VFgtxEvri9+PxqAWC3G3SrPop
IkoIMNNWv4pggFbPiod5Hp0IKv8ZcxPBrcsX02it2tD6c/aSjdsI0B+Fw08I
Azgt7K7TOS8EQYVEA9PzS9gkYlik7DECqYoUS5WrJLwVpf6ZORhBVQyhmvSb
gLNiXsXfjtzD/+9z+GTGPDZ7tXWuJx7B30W5NhQ5gHcTLjHKZiA4wz5tQ2GU
ifOT6ztC8hAwX/A7Z3a9Flmm8T4llCH4yra9zf+xGlG+fqhrWL9HS8vq3XPz
u7j0zfTv7Ja9+3p7/0mjWnwlB5VRdSMgfq8PXW+sxrT5aS7XBxE0/g0Knwso
QtWFZOKtkwiibkqatl8dQvYldrNCiwg6D1eJ2XsvIObylsQnXxDo6etEedoR
0dtKEYuZnwhCJhT/uAuSkFNNADPaReAtf2/Q12URhV7+b/E0BcDz0OSORI0+
NDf9Wt/3AMD01yOsDl+7sIbNYGohHcB52452Re4FHD5LuTPJBCBHVRcsUUbE
C3aql+jZAWQ3v/76MUXEWgt70wg3wHDsqb83oxdxxPVYdmdegGyhbN3izyN4
eandPUEA4MB9xqRf5VVYz+F3T6cIgJ61Q+yxrQoUvSousyUBUNRybp1xsg4R
nCyDJWQBBudd2SiHXiIgBS1dUATQZza0MfStxLG3ao8+UwWwcnz9TpevHpO+
rqZVaQJIHrb3l1sNRfpuh3YXdQF25bnr/wn1ofgfRlYc+gDu1gdWSu7Moe8e
92uOnQD4NBG0Q3eWgE5s5HPcMQJotjxeufiKhJLuTnq8Pg1QaUC//uHBMlr7
Rd/bbwbQGJTZnOI/gpwvTG/VWgA8PtH69sZ6GV6oLhZOvwSgGpYgONz2GV/m
fnIq6ApAkjb1r82re/nnZeZ52w6AOsy0T6iKhM+MCadb3AB4wja3tlm1ijs0
f3bpOgGcNDcVKOSbw5DQviHiCnD9otbiMO7DtX/i+Ok9AGR82cvXPNOxkpWj
wfpdgMNrY4ua5TUor17LY9wbgPJjxHLZg1okzEuf1PRwz///KDjzeKjeL44j
aVMhCkmWVLYWKdHyHDNj9jGTVBItEiUiFCXfREUSEm2yL5Uk+84j2bPv+77P
pKIUSb/5/Xlf99znnvP+fM7cc/4ZhdaTp7b6o1e3ekrf3OHn16iZdvd3Opbq
SfoacA+A5eYXoCmYj/0Peci4PACItBojt1gF4GXhR4inH/H57FfYYldciTwW
lewMHgNYypZu8FfoQ3OnfzzVCAGQ9tBJV54eQ464tGjdCwCXLe2PTVx5iLv5
2eT8K4BxN+tHJr8nkaXHRcnBSIAbXZ2qTmuHUE+/7uHKWIDGpLIxlauV6Lj+
qovJb/j1uRgdMhqtw3VR3Y+fJfL5/wjvVSMOY6pQUt5/yQBj+8Kaf93k4o8W
t0cupPPzqf9921+Ph/U+cdaysgFG9LVCbDaP4TRlJV3tfH49rN399+a7scbd
GYuNRQBir5qyVL6W4rjhEj+hEr4/YwKJTu2RSN7gaeZEOQBnxXjkv8h89DTO
ur/+M4DowtuyroRUtFZEd2V2HUBCzynixZOh2MdqpXZEE4AST+OBdHsuFijv
Mr/fBvCenrJ+OCgT39j23tuuC8B5bN9opOF7NO39X4pxH4CtYJCNemsTujzO
7jowBKBtuuV5v9IQGqYqLlUeA3DbyDW7cmISmb+d3rGSC0DarvP6AH//al1R
YvJ9CkA8vPn18aBxxLYJ8WyfBjjjZZ4g9LMbVVRZJeJZgKaowOG060+Rvvr+
1vh5ABFtecEaz06c+3CFgP8igGwEbXJHyxjew+tUvSakD0a/5bOm/Hk4kZl4
1ExEH2JuF/ygNUxilffu7sSV+iCd8D4Y5oZw+Gr2a7U1+iDi9j7zV1gL3nBF
oUFcQh/0pmK3LfuShgNrv8//ltIH4cF8zlH7dLRi56ct/TL6wA0x/Wibm4c8
A4INyzfpQ25NRUxtdjT68/WCa5KiPsStL54/HpiMnTk60SEq+rDJeN9BuZZ8
zEteXn1LVR9W9VJeqea+xhfEO3+e19QH34A+Of/GYtR79d1mxm59UJoU2bdM
rQsdb7xF09qrD44rh8RTLUdRnZahk4yuPhwyu7WpepaLqE82hwkc4j8f7jB0
po0/D898KxsDfViICAlh7x9BesbF32pJ+nADSYSfjWhEaelPZDOp+tBq1OnP
/fYJa0hdIIUx9UH83gz9w78BbFzHnW3n6EMIueeC6sQkvvXA8a3kMX1I+WJ9
f+IoD8cS505xTupDpzFROK9uFH/+e3uNn7k+hP0JOVAb2omns0Q+lp/Thyvn
xlu1nhRiWcdHTkus9OE4DyW2TKUggobkVmSjD/Vro0yvt+Qhm9GX7Tev6AON
/eF5qWQ4CopUfJjpqA+TlfYPrvWm4VzTN4emr+uDQmZa39vKPDwoufObpps+
KFr0yX1/Z4tW1mVEX7qtDxZ7vs7fYNQjrQcHj8V56cPwV/PVMVsGkSnx07IB
b30o+3WkMUxrEnn+peXK+elDpgPBcfUrHnqbVW9rEqgPnyU+vQ52HUP1V09s
Dg7Wh9HrC9xA5Tb0W723oe65PtQofHM7b1aIFUYt764K04em55uthYQHMTWS
u48SpQ9vl936IcqdxA6mjhOecfowM3I6QYzP67nkXGjhW32wlleIbqoexUW1
tw3n3+vD0I+TqgHBnXjcR0RwX6o+zKqcH6tzK8RixEdpVzP5frEfbjWcS0H7
/66zep+rD72f5N38G/PQ2ayX0hOF+uBDMVM6yAtD3lcVP2/5pA8/l12t3DGa
hpPU37ifLdcHsp3x7//K8nDryI5drz7z9RUzPu/fdAUtRmQMttXpQ9LrjEKO
UT3aanowZF2zPqy022wis30QGUp+orDb9UGgxznmrfYkul5Lm/ft5vt5tJHz
MpSHwn3qE8v69WHk1PW4S9fGUBnhxBmhEX2wEbYnnJBpQ1MLPeKHJ/Rhr0B6
ZZ1PIV6fZVly44s+/DLLrjdePogPX+Vez/iuD/2Oz7y/8ibxBXVH1e8/9cFc
V390nxEP+4387tKY51//sszjVo7i9Ijb/hcX+eelZMlxHnXi7pMi+rFCBHjs
nBzhYFmIhSUfzfSJEKCDJTpYvCQVadSui9+4igBXf3NDo+vykLHPS5MTawlA
aVj4nvQpDN0iKK56so4A/sNnnUf4/R278LqgdgMBqluj9rE/5eHqzB0OK+UI
gHwV7g+4O6AfDhlKZAUCTHwvWrH9ZD2SUz/YcmcLAZ7uFj0foD6IiCPF3gXb
CbCLNpmVvm8S2UTQ9OY0COCZpqu1lc8r6GQ9T3s3AVy1Dxcd4u8XuetORDjs
JYDOzbfJcmvb0GBNz5FEXQL8F8Ea1MsoxCt9LIXHDxFAlxHiHS86iLUI3Exl
AgHkn6psbpiaxKYLVy+dIRMgdUZFz+wID3tm/t4YSieApSDiLCkfxQkOt2tb
DQlAKFqzXvx+J25UE7kjcZQAykGlAlKsQjw/7LfH8AQBFO6/rdm9JhUpRqwb
fXCKAPeaOwpSq/OQ7f4DF9zPEKCtwSE5NiAaZTZYDDucJ4DIpXil0vFkLHDZ
97ylNQEy+3hiqTX5mC6cOnjiMgGcFGNnlGZicXBYxzmGPQH2Gz5wR7dLUN8+
wYHDTgR4vy80cve5bqRWv/2slgsBFocKFXTmR5HzJU6fihsBHCUdzkzv5aFC
IdfTMrf5+hZ0r8q6xkUrXkX0iHoR4GdFmFGN1DAy3ltuJuBNgD8XTgqNH6pF
4bVTXTO+BFilc7OEUP8Zj1uvPzXmTwCJn05WK2OG8B7Bw52dQXw9r7kUNJG5
+L+XF07WPiWAoO4DhhyHhyv2PGr/+JIAhyo33KxmjGGJmvQTGeEEKA239Wnb
1YPNrbpb30Tz69F2bfk4Worf/Fty/FU8AbrVEx90N0eh6efqLQEJBBBwl1oQ
zcxHB7WOGnslEUC4f/22910pyPvzzabrqQQY3WJcs+xIJG60jDayySSAbb/m
vvqreVhusbLBPJcAlWWkwYDv6djq2XfOkUICuPTl69RZpaGUXTL1pGICeG1l
B9e9a0ELlcDeX8b3z7YHxgGyw4h8/mKtehUBNkZvv/Tp+yQKXAhgba4lwKec
NKdlt3moMySrWqKRADcaNgj/vTiGtuzsY4i0EqDukoijWVs7sq8Q+TzXQQCh
6w0yaN17nHtuB/1LDwGSpY62xm7tw8J/jlX2DxBA7Zis9zLaBDYMdqc2jxCg
ltbtpcCf955rxpWXT/Dfv/OuvXP8BB4sqybnfSHAMXN2g8vYANY8+6M06TsB
coROEPdsbMCucxsNon8SQP/cQoy52wtcHEQsCZkjgEynMMU9JgeJalwmPvhL
AFH6bPthl2x0ojSo+JYgEQ6tjTWLcXVB0adz9R2WEoG+YLZHIj8T834NFJ1f
QQQxb8MWU6E8vO/xCjixmgg5QSJvJHWuoTtquzFdnAhep/wqpM/XoupPJocP
SxHhHxTGJXL70Xpzj4LdMkTQrFD59N+/cXR29vVBlU1EqP57yfn8ex56F1CX
J61IhFnFHSWUuQk0u/2XnqgKEYp1Tvq+7O5HUCyf+287Edr+4lV/V+Uh31Nk
3RkNIhC6PMzq/rTglh922aO7iHCkqXmo3m0UK/iH6HRqE0Fk72KqHpmHbbYV
ZNbsJ8LF/tqFtdZcnF40vPfjQSKcijls5yM0gv+dFM1IByL8aHua2p/Uhukz
e7TfkIgQPHfrx6+gHBzsdyotlEqE1TPnK/QgFfWqeGkFMIlAu698vu1gPtqO
E1I8OUTIXP55RqsvDjmaNO66bkyEEY22gxv7knDB97kPl0yIsHPv2rtv+PNJ
5nBrVooZP1+FV+F+j2JwclsanjtLhOlcbOk+Xo7eVgWW61/gx8e2aH4c7UPR
BXZ1Dy4R4Xhy0aF1vePoVTK9rcGOCH9uhCUMpfNQSMy2PhlHIuiwn30qFJpA
/k+Fx85dJ4KrTsrcffFu5PNgYOrtTSJ02uYu2e4eg+/cKpz9/h8RBNaOMYjS
/fimfeiirhcRbJUE1y7ZMImdLVxFPL2JwCCNKw8E8bDdsWNrqh4SQZos9Tik
YAxbUbXWSwQSIcJUcqSrpBufPbBW3jSYCKmtH5aruhTjkzt4KtHPieDsOyve
8S4JGSlWak6+IsKSfXc3nDqej5iS8Xu1oojQeHXwKtElGhks8zp0M44IuyX0
Xm0vS8WH588YFL8lwrro0FN10vl4/5eDrJVJRHh72LK9WMEE7+6XOWaUSoRe
+e+dTQL1SK1p1uxlJhGswhwqJTcOoi1lTZaDuURwqN3wO+HQJNqUk2yrholw
3kU8PDSEh9YnPnJ2/MTXt2HzhWatMSQWYXMrt5wI22L1Hrd8bUErgih3har5
+SrIUbXdirHQvS1+9HoiKCsh0v7KQbzgIhgc1EwE84+KDGUmF/+06Q3tbCeC
hXh84sJ6Hp4yz4tR6iFCaWnSFtX5ETzOef7OZoAIZ7epPaowaceDxGtpqSNE
8Jvt3X6mIBN37TPKm5/gx0s5Plx1NwM1q+78RJji81hx76vf0VxUKyf62Xea
CLfG3rbfG/ZG5WsnGhtnidAisDH2wL4sXCRU1in7hwhmd1pH5fl+zf0ZPWjx
jwj/Xb2qGvU8DqWN355MWEKCEtU5DxX9ZpTYZTY9vYwEy6Nj6kB9GMXX6s7r
iZKg4ktLZP5xLor4uF7IS4wEWW2T/4Y38NDz9JkVnyVJoJFbc3P32hEU9Lpe
fJ0MCZLPbSH0/qpFD1++lzm1iQRCX9PfOTXU4buPfBVjFEngLbrnxKL2CP7P
w1qVq0KCFyrezSNKPOzqRNq9R40EH8WXZXTxvxdXrRR13XaQYMMymcurVg5j
m5OL8EmLBLKbi3xezTVhS2YXdZUOCX4laf8LEI3F5iibc/QACQZmtNX1qnLQ
ca0Qk1BEAsqq22Wrf2Yijorj2SEiCYJtJIxO7niIadLsi+pUEnAbEsLGbudi
wioNBycmCe4caDscrJGBDy4ud83jkKBXe/EzMywL7f0+cnvJMRIY/RPJrIpq
RzuGi70ZJ0nw5fMDvRrpUbS9LSLgiTkJBIRdTr9U5CHFqlvPus6RYJaRJrKo
x0WyBScjlK1IcJf3MO9D+CCSTN73+rINCazcz3o/Df2IzghY5UZcIUFoJ7vw
UV0LTuCE1DQ5kuDlL/ht9ncU/4gs6V/mQoKaKzdt5O7xMPo+M3PAjQSVP7YZ
/X08iX31lZc53CaBvutfleSuQdz82Eg21osEf95lb8U9DXjz4B3Ndm8SPFhh
rHtcNwTbaKWAqB8/39y+jMqSXJTh2X8UAklA5485O+czkEDTWmvnYBKc4sjs
PfTfY0xXRjffPCfB72+C+yrf5+IQpyuPul+R4GrN7dkn+hm4/1NYpFgUCZ5r
KVjdJ2YiNcmaNFIc/36F54WLDW3omuVCmetbEtA0XSkz//+fvXT1zsT3JPhR
riKwe4iLVi099aU/ha9P9Knkh6+56PgxXwGpTBLIeWR/vDY1hCLjctbRcvm8
soeSdpdWIu7P8a3uhXw/OtF/ynIb8D6ytF5KMT/+6Mes2fQR7PGUwhopI0HZ
mmhrRV0e/jx6/azMZxJMM9dLndPl4vU68U6sOhJ0qqss7ZUZxue8W+7faSJB
vEWkmPWNZpzYJvwyo40ELcfLN10feINnt2m/n+ji66kXOri5JBvpu54v2tTP
f18Wi/zAJBv5VQQ1HRkmwdK+hGpjsbO4Vbp49N44v7410imjg9lY8dL3uRwe
CTZqrfnapZSNbXMUVk994+vX8W/S71MiylrBUVD6SQLbcZ8w7rYWJGR6e8/x
ORKcG3z0Y4PNMGImJJF9/5LAWeR92PKzXPRsvudkoaABLH+ylVO1mYcG6avt
ppcaAGdvjLPxqRGkEXrQY+tKA9jvHW/uMlKPXLiXn5iuMQBnFe8Iv67PuPhA
aLy/hAEU5g0mmbOH8Wq/qpzi9QaQfLau43clF5t0z1XPyhqAiq1/lGYJF0dr
qParbTYASs2CmiVjBH+5ZTJzWtkAZrcfGYxVaMP7a7xFnmzjX39bseiskY49
N2XJlKsbAHvd+30k8UxUYzeq8WenAaxUmzI8ScxF0oVSsFPbAOiCvSfalz5E
59cYHD2/3wCUs4qfKEZl4qTTzlbPDhpAmrv1E+KRXPw7KebGZzCAO2J3VAJP
vULEf41+/0j8+DYJ11afRuTPForcQzMAqatip6Z3DKH2iN1p1iwD8LjmB314
Eil/O1sWesQAtjUcvd/hzENXILCj7pgB1Ow8esv23SjKDsS8JaYG0GXFVemu
b0ZLBqb+6Zw2AJn0I16KuZ+w4W75dbYWBlCv+aOaXDuIn99hbY20MoCsInBL
0eHioYZbus02BlArZE3t3MXDO5QSmcvtDaBu9pBZo90odnXsOnPQyQAedewf
a6ntwJ+KVzo5uBjAK+2e2Msu+XjXdKeRmZsBRHwLfDaQlIzCFd9pUW8bwJWN
3mLm/vlo1RE3CW0vA7C2ycuyvfoWuXowpjd7G8CXSr2ask3v8OiHjY2rHhpA
xsmc44Xv8/HRPm7KL38DCOhOjh04+QEXrcl/PBRkAKbWLeeMHhSiHYf9rtY9
NYBwk0mX+zIdKNTO7EjeSwOwF6t1Pxs4gpaHaex+HW4A9z4sfneK4qLr1Qti
T6INQMtve/BOZR4a+lP97b94A1idourvuW4UcdTD6m0SDMBtGovBXDMqNLVL
Pp5kANMTBzsCPQqxuu+hQEKqASyLWyYpu3kAP89Z7bAj0wA2HDt1s2XtJBaZ
6GHL5hrAadthMaVEHnaSTtopUmgAsb4XzA0EJnA/5b+10x/5euZGFiQu9mND
F8OvPaV8f1jU3RX7Vovz4uXrKisNoKl2DeeyuBfe3jqVlFFjAB3fNW+rvMlF
T5di/6gGA4g0fClpcS4LLdkbcOVRC9/fvbtCv51nYAfLM4Y3OgzAKf4LJTk6
C/c+2bnjQo8BxC3/1C/qkosZn/6tPjJgAKlFodcnun1Q9nTdl4MjBiD3pDRk
zr0ObVWKrNk+YQB9h86JvFQeQE+OOLyX/GIA54f0xJxkJpDAHXgk8N0AgrbF
1X5O4vsvWcyO94PP310LMn9NoO6+fmb7bwM4NF8RTP3Wj2hrUzRKFvg8WwWv
hX3IR5mH74gmC5DhcOKLct6FFrzlyhFeqDAZLtGHzu7fP4ofhylWey8nAz3R
g6Syg4cXq7+/cxIlwyujb5G5QVxsu/Dx4RkxMjxUubWlyX4Ed6gHXWZIkiFq
he733pp2TD5lwdCRJkPdQwVNx5ACnO6rpa4sR4YzW/p/3tqSjBRzhVatVSCD
K7IFh8h85D/RODmvTIZfuqfO6JkmoAXpmKrRbWR4cWKjQ9y+BHyJ6pTQqE4G
lUl6b3NYPm51IfoW7iTDW+NPPRO6yZj0ep1Nwh5+/ENf+SuXClBq6xDtqQ4Z
+pgvmOpF7WizSLqq5wEy/Amd3Tt+aQT57b274goiw+qx4cGlgVw0b2k8cZJI
hnXXTo5K7eIh6+AtlQYUMmgoPd7ScngUNX/68WY3gwxdoeHWT260IMJMic8m
NhmU9r5TOHoqH39QCrm44igZonVunisd68dyRheoP4+TYXwhew9zZgL73tm7
fcCUDEc8/igc/MDDv5KXLq85TYYPRXkKfzZNYMv+lrFsCzJM6+XcoqoN4Ma1
8eWxVmQIKAh7kf+sDiN0/XWgDRk+JnMzLLkPcOIVsvetK2Roktd4+MUuF8mG
r7e+6EiG2/9cTc8mZaF9217VvblOhs2yW+WF/t3GRsmK+ydu8vVzI/78VZWD
r+i+jlS9TYadm0UDa8Iy8cNijRU2XmT4VxP3DCzT0BtG6tUEbzKM/iAIP5Vu
QyXNOp2TD8mgf62K6HluBPWbFxDUA8nwYOCmX0IbFy2MEt5dDibDSerxWzvf
cpG0Q8W6xOdkOJ+615LdOIS051i3eK/IILPmRM1j1wrE8Wwa1ogiw9KJloV/
g43YbtVJll0cGYLc9utcUhnFvsG9Ge/fkkHibOH13eY8HL/JUn7qPRkEuj7T
bMYncXH8xP0dqWSYDL/0wezMEO7daf/1SiYZLAc37lNPb8Tz2T9OfMglwwX6
kJ9xWSheT7hZ9LWQz7vP5rOnZy7S+vxv+65PZBCVreasUslEbON7jx3KycBK
6Tz1re4xtu1ZOZ/8mQz3VKcioS0X+1gFWnyvI4PCYcLy2PB0HPtV6vPuZjLI
H5NKbg/IRkWuoXsc2/n+0LBxqP/cjroFFV+ldpNB0CrSWGbjKJrzjRee6SfD
G8fgLqVN/P1AUsNuzwj/fsoD6R46F2mFpbQ4TZCBGilbq901iAy36hxO/0KG
uHNv31XSPiGbD/nxP76TIcTx5OMS0xZ8fz9h7d5ZMnwxRZObZ0ZxzMdyl2vz
ZJAWN6jY4cPDRXRWf8YiGfTEupuvu07i7qZG6qwQBYacdJ2vBA3i32YmKfuW
UeB88RChQqwBS472yLisokCXYIG2mMo9vMv+vGfWWgqwTr31a3fPQ6zf45O/
1lGgOdJlYo9jOrK5c+XofmkKHOdIkVM8QvH9lT/yXOUo8LCBvlsuKQ9HP7mx
JUeBAkeIyeYvj6fiQrl/fnNbKPBNzKCudroAdcbd/amrSoExvh3iPTrRrx0r
T9/UpEBP/pbFyZpRJJkdUJa7mwJJwznXlxznoV36Ujv/7KXAigH5h669k4hZ
9fLZAT0KXDTRLsMdA+jiUQWBW4cp8EpN89dRhXx0tzvuYj6BAhL249XPy9pw
5AX1hgUyBeK9mEMu6WM4fypZ9xCDAgqp0fZr4ni4w2VftDubAqZCTXElfyfw
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
Vw==
     "]]}},
  AspectRatio->0.5,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->300,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-0.01, 1}, {-1, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.768329445399029*^9, 3.768329534497837*^9}}]
}, Open  ]],

Cell["\<\
By the way, the trig elements in the text answer are present in the yellow. \
The text answer is I=5.5Cos[10 t]+16.5 Sin[10 t] amperes.\
\>", "Text",
 CellChangeTimes->{{3.768329585142889*^9, 3.7683296231256866`*^9}, {
  3.768329664901458*^9, 3.768329701530649*^9}}],

Cell[TextData[{
 "13.  R = 12, L = 1.2 H, C = ",
 Cell[BoxData[
  FormBox[
   FractionBox["20", "3"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "*1",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["0", 
    RowBox[{"-", "3"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " F, E = 12,000 Sin[25 t] V"
}], "Text",
 CellChangeTimes->{{3.768151839459062*^9, 3.768151931708474*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[TextData[{
 "C=",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["20", "3"], "*", 
     FractionBox["1", "1000"]}], "=", 
    RowBox[{
     FractionBox["20", "3000"], "=", 
     FractionBox["2", "300"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.768330240879806*^9, 3.768330298024662*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqn", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"1.2", 
     RowBox[{
      RowBox[{"q", "''"}], "[", "t", "]"}]}], "+", 
    RowBox[{"12", " ", 
     RowBox[{
      RowBox[{"q", "'"}], "[", "t", "]"}]}], "-", 
    RowBox[{
     FractionBox["300", "2"], 
     RowBox[{"q", "[", "t", "]"}]}]}], "\[Equal]", 
   RowBox[{"12000", 
    RowBox[{"Sin", "[", 
     RowBox[{"25", " ", "t"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.768329860356373*^9, 3.768329926882724*^9}, {
  3.768330312565811*^9, 3.768330316907922*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"-", "150"}], " ", 
    RowBox[{"q", "[", "t", "]"}]}], "+", 
   RowBox[{"12", " ", 
    RowBox[{
     SuperscriptBox["q", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], "+", 
   RowBox[{"1.2`", " ", 
    RowBox[{
     SuperscriptBox["q", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}]}], "\[Equal]", 
  RowBox[{"12000", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"25", " ", "t"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.76832992859918*^9, 3.768330318607074*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{"eqn", ",", "q", ",", "t"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.768329956055458*^9, 3.768329965689021*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"q", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "17.24744871391589`"}], " ", "t"}]], " ", 
        RowBox[{"C", "[", "1", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"7.24744871391589`", " ", "t"}]], " ", 
        RowBox[{"C", "[", "2", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"4.`", "\[VeryThinSpace]", "-", 
          RowBox[{"7.081978934950617`*^-16", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1.`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"25.`", " ", "t"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"3.`", "\[VeryThinSpace]", "+", 
             RowBox[{"5.311484201212963`*^-16", " ", "\[ImaginaryI]"}]}], 
            ")"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"25.`", " ", "t"}], "]"}]}]}], ")"}]}]}]}], "]"}]}], 
   "}"}], "}"}]], "Output",
 CellChangeTimes->{3.768329966972805*^9, 3.76833032260174*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "17.24744871391589`"}], " ", "t"}]], " ", "+", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"7.24744871391589`", " ", "t"}]], " ", "-", 
    RowBox[{
     RowBox[{"(", "4.", ")"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"25.`", " ", "t"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", "3.", ")"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"25.`", " ", "t"}], "]"}]}]}], ")"}], "/.", 
  RowBox[{"t", "\[Rule]", "0.5"}]}]], "Input",
 CellChangeTimes->{{3.7683319697913713`*^9, 3.768332037755458*^9}}],

Cell[BoxData["33.2869065065951`"], "Output",
 CellChangeTimes->{3.768332038841016*^9}]
}, Open  ]],

Cell["\<\
The next few cells try out the Assini method of undetermined coefficients.\
\>", "Text",
 CellChangeTimes->{{3.768331859211278*^9, 3.7683319059602957`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"hAndp", "[", 
    RowBox[{"odeH_", ",", "rhs_", ",", "y_", ",", "x_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "wronskian", ",", "u1", ",", "u2", ",", "solH", ",", "y1", ",", "y2", 
       ",", "leadingC"}], "}"}], ",", 
     RowBox[{
      RowBox[{"leadingC", "=", 
       RowBox[{"Cases", "[", 
        RowBox[{"odeH", ",", 
         RowBox[{
          RowBox[{"c_", " ", 
           RowBox[{
            RowBox[{"y", "''"}], "[", "x", "]"}]}], "\[RuleDelayed]", "c"}]}],
         "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"leadingC", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"leadingC", "===", 
          RowBox[{"{", "}"}]}], ",", "1", ",", 
         RowBox[{"First", "@", "leadingC"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"solH", "=", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"y", "[", "x", "]"}], "/.", 
         RowBox[{"First", "@", 
          RowBox[{"DSolve", "[", 
           RowBox[{
            RowBox[{"odeH", "\[Equal]", "0"}], ",", 
            RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]}]}], ")"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"y1", ",", "y2"}], "}"}], "=", 
       RowBox[{"solH", "/.", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"C", "[", "1", "]"}], " ", "y1_"}], "+", 
          RowBox[{
           RowBox[{"C", "[", "2", "]"}], " ", "y2_"}]}], "\[RuleDelayed]", 
         RowBox[{"{", 
          RowBox[{"y1", ",", "y2"}], "}"}]}]}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"basis", " ", "solutions"}], "*)"}], 
      RowBox[{"wronskian", "=", 
       RowBox[{"Det", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"y1", ",", "y2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"D", "[", 
             RowBox[{"y1", ",", "x"}], "]"}], ",", 
            RowBox[{"D", "[", 
             RowBox[{"y2", ",", "x"}], "]"}]}], "}"}]}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"u1", "=", 
       RowBox[{"-", 
        RowBox[{"Integrate", "[", 
         RowBox[{
          RowBox[{"y2", " ", 
           RowBox[{"rhs", "/", 
            RowBox[{"(", 
             RowBox[{"leadingC", "*", "wronskian"}], ")"}]}]}], ",", "x"}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"u2", "=", 
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{"y1", " ", 
          RowBox[{"rhs", "/", 
           RowBox[{"(", 
            RowBox[{"leadingC", "*", "wronskian"}], ")"}]}]}], ",", "x"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"solH", ",", 
        RowBox[{"Simplify", "[", 
         RowBox[{
          RowBox[{"y1", " ", "u1"}], "+", 
          RowBox[{"y2", " ", "u2"}]}], "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"odeH", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "150"}], " ", 
     RowBox[{"q", "[", "t", "]"}]}], "+", 
    RowBox[{"12", " ", 
     RowBox[{
      SuperscriptBox["q", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "+", 
    RowBox[{"1.2`", " ", 
     RowBox[{
      SuperscriptBox["q", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rhs", "=", 
   RowBox[{"12000", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"25", " ", "t"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.7683307620013027`*^9, {3.768331201835836*^9, 3.768331217007872*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"yh", ",", "yp"}], "}"}], "=", 
  RowBox[{"hAndp", "[", 
   RowBox[{"odeH", ",", "rhs", ",", "q", ",", "t"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.768331291290189*^9, 3.768331292095604*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "17.24744871391589`"}], " ", "t"}]], " ", 
     RowBox[{"C", "[", "1", "]"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"7.24744871391589`", " ", "t"}]], " ", 
     RowBox[{"C", "[", "2", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "4.`"}], "-", 
       RowBox[{"7.081978934950617`*^-16", " ", "\[ImaginaryI]"}]}], ")"}], 
     " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"25.`", " ", "t"}], "]"}]}], "-", 
    RowBox[{"12.`", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"25.`", " ", "t"}], "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.768331250171924*^9, {3.768331293556233*^9, 3.768331304351318*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fullSolution", "=", 
  RowBox[{"yh", "+", "yp"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "17.24744871391589`"}], " ", "t"}]], " ", 
   RowBox[{"C", "[", "1", "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"7.24744871391589`", " ", "t"}]], " ", 
   RowBox[{"C", "[", "2", "]"}]}], "-", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"4.`", "\[VeryThinSpace]", "+", 
     RowBox[{"7.081978934950617`*^-16", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
   
   RowBox[{"Cos", "[", 
    RowBox[{"25.`", " ", "t"}], "]"}]}], "-", 
  RowBox[{"12.`", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"25.`", " ", "t"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.7683315868839808`*^9}]
}, Open  ]],

Cell["Trying to clean and standardize a little.", "Text",
 CellChangeTimes->{{3.768331606228868*^9, 3.7683316161470003`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mfs", "=", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "17.24744871391589`"}], " ", "t"}]], " ", "+", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"7.24744871391589`", " ", "t"}]], "-", 
   RowBox[{
    RowBox[{"(", "4.", ")"}], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"25.`", " ", "t"}], "]"}]}], "-", 
   RowBox[{"12.`", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"25.`", " ", "t"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7683316291165524`*^9, 3.768331665857284*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "17.24744871391589`"}], " ", "t"}]], "+", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"7.24744871391589`", " ", "t"}]], "-", 
  RowBox[{"4.`", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"25.`", " ", "t"}], "]"}]}], "-", 
  RowBox[{"12.`", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"25.`", " ", "t"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.768331666856015*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mfs1", "=", 
  RowBox[{"mfs", "/.", 
   RowBox[{"t", "\[Rule]", "0.5"}]}]}]], "Input",
 CellChangeTimes->{{3.768331675541052*^9, 3.768331685288547*^9}}],

Cell[BoxData["34.28173496686311`"], "Output",
 CellChangeTimes->{3.768331686462699*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "5"}], "t"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"10", " ", "t"}], "]"}], "+", 
       RowBox[{"Sin", "[", 
        RowBox[{"10", "t"}], "]"}]}], ")"}]}], "-", 
    RowBox[{"400", 
     RowBox[{"Cos", "[", 
      RowBox[{"25", " ", "t"}], "]"}]}], "+", 
    RowBox[{"200", 
     RowBox[{"Sin", "[", 
      RowBox[{"25", " ", "t"}], "]"}]}]}], ")"}], "/.", 
  RowBox[{"t", "\[Rule]", "0.5"}]}]], "Input",
 CellChangeTimes->{{3.768331700417951*^9, 3.768331773133369*^9}},
 Background->RGBColor[1, 0.925, 0.925]],

Cell[BoxData[
 RowBox[{"-", "412.4391200293352`"}]], "Output",
 CellChangeTimes->{3.768331775132552*^9}]
}, Open  ]],

Cell["\<\
As can be seen above, the text answer (pink) is not achieved.\
\>", "Text",
 CellChangeTimes->{{3.768331795620441*^9, 3.7683318301791267`*^9}}],

Cell[TextData[{
 "15. Cases of damping. What are the conditions for an RLC-circuit to be (I) \
overdamped, (II) critically damped, (III) underdamped? What is the critical \
resistance ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["R", "crit"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " (the analog of the critical damping constant 2 ",
 Cell[BoxData[
  FormBox[
   SqrtBox[
    RowBox[{"m", " ", "k"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " ?"
}], "Text",
 CellChangeTimes->{{3.7681520023937893`*^9, 3.768152025719071*^9}, {
  3.76815230758398*^9, 3.768152386483959*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell["\<\
16 - 18 Solve the initial value problem for the RLC-circuit shown below, with \
the given data, assuming zero initial current and charge. Graph or sketch the \
solution. \
\>", "Text",
 CellChangeTimes->{{3.768152392611143*^9, 3.7681524454965687`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"LightGreen", ",", 
       RowBox[{"Rectangle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"4", ",", "2.5"}], "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1.3", ",", "1.1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.3", ",", "0.7"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.65", ",", "0.7"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1.76", ",", "0.7"}], "}"}], ",", "0.1", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.85"}], ",", "\[Pi]"}], "}"}]}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1.89", ",", "0.7"}], "}"}], ",", "0.1", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.85"}], ",", 
           RowBox[{"\[Pi]", "+", "0.85"}]}], "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2.02", ",", "0.7"}], "}"}], ",", "0.1", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.85"}], ",", 
           RowBox[{"\[Pi]", "+", "0.85"}]}], "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2.15", ",", "0.7"}], "}"}], ",", "0.1", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"\[Pi]", "+", "0.85"}]}], "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2.25", ",", "0.7"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.7", ",", "0.7"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.7", ",", "1.25"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2.63", ",", "1.25"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.77", ",", "1.25"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2.7", ",", "1.5"}], "}"}], ",", "0.15", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[Pi]", "2"]}], "-", "0.5"}], ",", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[Pi]", "2"]}], "+", "0.5"}]}], "}"}]}], "]"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2.7", ",", "1.35"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.7", ",", "1.85"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.22", ",", "1.85"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.18", ",", "1.75"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.11", ",", "1.92"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.06", ",", "1.75"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "1.91"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.95", ",", "1.75"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.9", ",", "1.91"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.87", ",", "1.85"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.3", ",", "1.85"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.3", ",", "1.42"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1.3", ",", "1.42"}], "}"}], ",", "0.04"}], "]"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"White", ",", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1.3", ",", "1.42"}], "}"}], ",", "0.03"}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1.3", ",", "1.1"}], "}"}], ",", "0.04"}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"White", ",", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1.3", ",", "1.1"}], "}"}], ",", "0.03"}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<E(t)=\!\(\*SubscriptBox[\(E\), \(0\)]\) Sin[\[Omega] t]\>\"", 
          ",", "Medium"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.2", ",", "1.26"}], "}"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<R\>\"", ",", "Medium"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"2.05", ",", "1.99"}], "}"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<L\>\"", ",", "Medium"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.99", ",", "0.54"}], "}"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<RLC-circuit\>\"", ",", "17"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "0.32"}], "}"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<C\>\"", ",", "Medium"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"2.85", ",", "1.3"}], "}"}]}], "]"}], "}"}]}], "}"}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7681527824568787`*^9, 3.768152840957938*^9}, {
  3.768152873828526*^9, 3.768152879675891*^9}, {3.768152918162138*^9, 
  3.768152926431629*^9}, {3.768152979237577*^9, 3.768153067503956*^9}, {
  3.768153139004834*^9, 3.76815318070615*^9}, {3.768153261079266*^9, 
  3.768153317819664*^9}, {3.7681533607946033`*^9, 3.768153363201147*^9}, {
  3.7681533977041063`*^9, 3.768153436982575*^9}, {3.768153478634873*^9, 
  3.768153683725451*^9}, {3.7681537149887447`*^9, 3.7681538523722754`*^9}, {
  3.768153897625534*^9, 3.768153963272566*^9}, {3.7681540104934053`*^9, 
  3.768154077647191*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.88, 1, 0.88], RectangleBox[{0, 0}, {4, 2.5}]}, 
   {Thickness[0.004], LineBox[{{1.3, 1.1}, {1.3, 0.7}, {1.65, 0.7}}]}, 
   {Thickness[0.004], 
    CircleBox[{1.76, 0.7}, 0.1, 
     NCache[{-0.85, Pi}, {-0.85, 3.141592653589793}]]}, 
   {Thickness[0.004], 
    CircleBox[{1.89, 0.7}, 0.1, {-0.85, 3.991592653589793}]}, 
   {Thickness[0.004], 
    CircleBox[{2.02, 0.7}, 0.1, {-0.85, 3.991592653589793}]}, 
   {Thickness[0.004], CircleBox[{2.15, 0.7}, 0.1, {0, 3.991592653589793}]}, 
   {Thickness[0.004], LineBox[{{2.25, 0.7}, {2.7, 0.7}, {2.7, 1.25}}]}, 
   {Thickness[0.004], LineBox[{{2.63, 1.25}, {2.77, 1.25}}]}, 
   {Thickness[0.004], 
    CircleBox[{2.7, 1.5}, 
     0.15, {-2.0707963267948966`, -1.0707963267948966`}]}, 
   {Thickness[0.004], 
    LineBox[{{2.7, 1.35}, {2.7, 1.85}, {2.22, 1.85}, {2.18, 1.75}, {2.11, 
      1.92}, {2.06, 1.75}, {2, 1.91}, {1.95, 1.75}, {1.9, 1.91}, {1.87, 
      1.85}, {1.3, 1.85}, {1.3, 1.42}}]}, DiskBox[{1.3, 1.42}, 0.04], 
   {GrayLevel[1], DiskBox[{1.3, 1.42}, 0.03]}, DiskBox[{1.3, 1.1}, 0.04], 
   {GrayLevel[1], DiskBox[{1.3, 1.1}, 0.03]}, InsetBox[
    StyleBox["\<\"E(t)=\\!\\(\\*SubscriptBox[\\(E\\), \\(0\\)]\\) \
Sin[\[Omega] t]\"\>",
     StripOnInput->False,
     FontSize->Medium], {1.2, 1.26}], InsetBox[
    StyleBox["\<\"R\"\>",
     StripOnInput->False,
     FontSize->Medium], {2.05, 1.99}], InsetBox[
    StyleBox["\<\"L\"\>",
     StripOnInput->False,
     FontSize->Medium], {1.99, 0.54}], InsetBox[
    StyleBox["\<\"RLC-circuit\"\>",
     StripOnInput->False,
     FontSize->17], {2, 0.32}], InsetBox[
    StyleBox["\<\"C\"\>",
     StripOnInput->False,
     FontSize->Medium], {2.85, 1.3}]},
  Axes->False]], "Output",
 CellChangeTimes->{
  3.7681527863293552`*^9, {3.768152818583467*^9, 3.7681528419194803`*^9}, 
   3.768152882255052*^9, 3.768152933725786*^9, 3.7681530822966747`*^9, {
   3.7681531587067223`*^9, 3.768153181794784*^9}, 3.768153321530756*^9, 
   3.768153363856422*^9, {3.768153399663884*^9, 3.768153438432684*^9}, {
   3.768153569945567*^9, 3.7681536104698477`*^9}, {3.7681536752936907`*^9, 
   3.768153684278908*^9}, {3.768153761232697*^9, 3.768153799571113*^9}, 
   3.768153853262857*^9, {3.76815390351575*^9, 3.768153929991829*^9}, 
   3.768153987326529*^9, {3.7681540206453323`*^9, 3.768154078387814*^9}}]
}, {2}]],

Cell["\<\
17.  R = 6 \[CapitalOmega], L = 1 H, C = 0.04 F, E = 600(Cos[t] + 4 Sin[t])V\
\>", "Text",
 CellChangeTimes->{{3.768152474783886*^9, 3.768152543067107*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[TextData[Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"L", " ", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"q", "[", "t", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "2"}], "}"}]}], "]"}]}], "+", 
   RowBox[{"R", " ", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"q", "[", "t", "]"}], ",", "t"}], "]"}]}], "-", 
   RowBox[{
    FractionBox["1", "C"], 
    RowBox[{"q", "[", "t", "]"}]}]}], "=", 
  RowBox[{"v", "[", "t", "]"}]}]]]], "Text",
 CellChangeTimes->{3.7683321858767138`*^9}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqn", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"1", 
     RowBox[{
      RowBox[{"q", "''"}], "[", "t", "]"}]}], "+", 
    RowBox[{"6", 
     RowBox[{
      RowBox[{"q", "'"}], "[", "t", "]"}]}], "-", 
    RowBox[{"25", 
     RowBox[{"q", "[", "t", "]"}]}]}], "\[Equal]", 
   RowBox[{"600", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cos", "[", "t", "]"}], "+", 
      RowBox[{"4", 
       RowBox[{"Sin", "[", "t", "]"}]}]}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.768332195782958*^9, 3.768332308785383*^9}, {
   3.768332465668044*^9, 3.7683324667477503`*^9}, 3.7683354652139673`*^9, {
   3.76833557725729*^9, 3.7683355783198223`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"-", "25"}], " ", 
    RowBox[{"q", "[", "t", "]"}]}], "+", 
   RowBox[{"6", " ", 
    RowBox[{
     SuperscriptBox["q", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["q", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", 
  RowBox[{"600", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Cos", "[", "t", "]"}], "+", 
     RowBox[{"4", " ", 
      RowBox[{"Sin", "[", "t", "]"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.768332521892413*^9, 3.7683325290712748`*^9}, 
   3.768332752012025*^9, 3.7683328108189497`*^9, 3.768333242787981*^9, {
   3.768333416026195*^9, 3.768333443427764*^9}, 3.768335472936739*^9, {
   3.768335580770007*^9, 3.7683356077234592`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{"eqn", ",", "q", ",", "t"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.768332319120904*^9, 3.768332328368572*^9}, {
  3.7683331988817377`*^9, 3.7683332373770647`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"q", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "-", 
            SqrtBox["34"]}], ")"}], " ", "t"}]], " ", 
        RowBox[{"C", "[", "1", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", 
            SqrtBox["34"]}], ")"}], " ", "t"}]], " ", 
        RowBox[{"C", "[", "2", "]"}]}], "+", 
       FractionBox[
        RowBox[{"300", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"25", " ", 
            RowBox[{"Cos", "[", "t", "]"}]}], "+", 
           RowBox[{"49", " ", 
            RowBox[{"Sin", "[", "t", "]"}]}]}], ")"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "22"}], "+", 
           RowBox[{"3", " ", 
            SqrtBox["34"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"22", "+", 
           RowBox[{"3", " ", 
            SqrtBox["34"]}]}], ")"}]}]]}]}], "]"}]}], "}"}], "}"}]], "Output",\

 CellChangeTimes->{
  3.768332330024373*^9, 3.768332414231296*^9, 3.768332478786681*^9, 
   3.768332533324916*^9, 3.768332766239326*^9, 3.768332813790822*^9, {
   3.7683332235084248`*^9, 3.768333245953068*^9}, {3.7683334201643753`*^9, 
   3.768333446608183*^9}, 3.768335476194757*^9, {3.7683355889557037`*^9, 
   3.768335610404872*^9}}]
}, Open  ]],

Cell["The solution found by Mathematica checks.", "Text",
 CellChangeTimes->{{3.76833694608607*^9, 3.768336953596689*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eqn", "/.", "sol"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.768335479326429*^9, 3.768335494314581*^9}}],

Cell[BoxData[
 RowBox[{"{", "True", "}"}]], "Output",
 CellChangeTimes->{{3.768335484886161*^9, 3.768335495719499*^9}, {
  3.768335591665496*^9, 3.768335613601989*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"300", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"25", " ", 
       RowBox[{"Cos", "[", "t", "]"}]}], "+", 
      RowBox[{"49", " ", 
       RowBox[{"Sin", "[", "t", "]"}]}]}], ")"}]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "22"}], "+", 
      RowBox[{"3", " ", 
       SqrtBox["34"]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"22", "+", 
      RowBox[{"3", " ", 
       SqrtBox["34"]}]}], ")"}]}]], "/.", 
  RowBox[{"t", "\[Rule]", "0.5"}]}]], "Input",
 CellChangeTimes->{{3.7683357400667877`*^9, 3.768335746761011*^9}}],

Cell[BoxData[
 RowBox[{"-", "76.56980130145836`"}]], "Output",
 CellChangeTimes->{3.768335747737372*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "3"}], "t"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "100"}], 
        RowBox[{"Cos", "[", 
         RowBox[{"4", "t"}], "]"}]}], "+", 
       RowBox[{"75", 
        RowBox[{"Sin", "[", 
         RowBox[{"4", "t"}], "]"}]}]}], ")"}]}], "+", 
    RowBox[{"100", 
     RowBox[{"Cos", "[", "t", "]"}]}]}], ")"}], "/.", 
  RowBox[{"t", "\[Rule]", "0.5"}]}]], "Input",
 CellChangeTimes->{{3.768335755922526*^9, 3.768335820990427*^9}},
 Background->RGBColor[1, 0.925, 0.925]],

Cell[BoxData["112.26062325270262`"], "Output",
 CellChangeTimes->{3.768335822692747*^9}]
}, Open  ]],

Cell["The text answer (pink) was not found.", "Text",
 CellChangeTimes->{{3.768335833549581*^9, 3.768335846237255*^9}, {
  3.768336999396453*^9, 3.768337003634865*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"300", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"25", " ", 
        RowBox[{"Cos", "[", "t", "]"}]}], "+", 
       RowBox[{"49", " ", 
        RowBox[{"Sin", "[", "t", "]"}]}]}], ")"}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "22"}], "+", 
       RowBox[{"3", " ", 
        SqrtBox["34"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"22", "+", 
       RowBox[{"3", " ", 
        SqrtBox["34"]}]}], ")"}]}]], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "4"}], ",", "15"}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", ".5"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "15"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "100"}], ",", "100"}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.768335884962043*^9, 3.768335984768629*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->0.5,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->300,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-4, 15}, {-100, 100}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.768335903456193*^9, 3.7683359861987658`*^9}}]
}, Open  ]]
},
WindowSize->{1366, 843},
WindowMargins->{{4, Automatic}, {Automatic, 4}},
Magnification:>1.5 Inherited,
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 10, \
2015)",
StyleDefinitions->"Charter1.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 70, 1, 45, "Input"],
Cell[473, 16, 117, 1, 51, "Text"],
Cell[593, 19, 224, 5, 75, "Text"],
Cell[820, 26, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[918, 31, 6837, 203, 8707, "Input"],
Cell[7758, 236, 2028, 44, 561, "Output"]
}, {2}]],
Cell[9798, 283, 70, 1, 45, "Input"],
Cell[9871, 286, 360, 6, 86, "Text"],
Cell[10234, 294, 448, 15, 76, "Input"],
Cell[CellGroupData[{
Cell[10707, 313, 596, 20, 45, "Input"],
Cell[11306, 335, 3929, 93, 147, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15272, 433, 4684, 105, 147, "Input"],
Cell[19959, 540, 2130, 70, 292, "Output"]
}, Open  ]],
Cell[22104, 613, 1100, 37, 75, "Input"],
Cell[23207, 652, 323, 6, 110, "Text"],
Cell[23533, 660, 75943, 1250, 295, "Input"],
Cell[99479, 1912, 885, 15, 189, "Text"],
Cell[100367, 1929, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[100465, 1934, 19437, 515, 23073, "Input"],
Cell[119905, 2451, 5605, 120, 581, "Output"]
}, {2}]],
Cell[125522, 2574, 417, 9, 120, "Text"],
Cell[CellGroupData[{
Cell[125964, 2587, 469, 13, 72, "Input"],
Cell[126436, 2602, 466, 13, 97, "Output"]
}, Open  ]],
Cell[126917, 2618, 223, 4, 86, "Text"],
Cell[CellGroupData[{
Cell[127165, 2626, 577, 16, 45, "Input"],
Cell[127745, 2644, 640, 16, 270, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128422, 2665, 366, 10, 66, "Input"],
Cell[128791, 2677, 281, 8, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[129109, 2690, 2417, 56, 298, "Input"],
Cell[131529, 2748, 2844, 57, 491, "Output"]
}, Open  ]],
Cell[134388, 2808, 340, 6, 110, "Text"],
Cell[134731, 2816, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[134829, 2821, 5841, 176, 7218, "Input"],
Cell[140673, 2999, 2257, 43, 354, "Output"]
}, {2}]],
Cell[142942, 3045, 797, 25, 120, "Text"],
Cell[143742, 3072, 221, 5, 51, "Text"],
Cell[CellGroupData[{
Cell[143988, 3081, 530, 14, 76, "Input"],
Cell[144521, 3097, 475, 13, 45, "Output"]
}, Open  ]],
Cell[145011, 3113, 153, 3, 51, "Text"],
Cell[CellGroupData[{
Cell[145189, 3120, 410, 8, 45, "Input"],
Cell[145602, 3130, 1104, 30, 78, "Output"]
}, Open  ]],
Cell[146721, 3163, 134, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[146880, 3168, 204, 4, 45, "Input"],
Cell[147087, 3174, 290, 5, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[147414, 3184, 311, 8, 55, "Input"],
Cell[147728, 3194, 150, 4, 45, "Output"]
}, Open  ]],
Cell[147893, 3201, 100, 1, 51, "Text"],
Cell[147996, 3204, 358, 11, 78, "Input"],
Cell[148357, 3217, 178, 4, 51, "Text"],
Cell[148538, 3223, 855, 21, 162, "Text"],
Cell[149396, 3246, 160, 3, 51, "Text"],
Cell[149559, 3251, 182, 2, 51, "Text"],
Cell[CellGroupData[{
Cell[149766, 3257, 962, 26, 126, "Input"],
Cell[150731, 3285, 1421, 32, 169, "Output"]
}, Open  ]],
Cell[152167, 3320, 160, 2, 51, "Text"],
Cell[152330, 3324, 504, 9, 144, "Text"],
Cell[152837, 3335, 561, 16, 148, "Text"],
Cell[153401, 3353, 333, 9, 56, "Text"],
Cell[153737, 3364, 187, 4, 51, "Text"],
Cell[153927, 3370, 176, 2, 75, "Text"],
Cell[154106, 3374, 518, 17, 55, "Text"],
Cell[CellGroupData[{
Cell[154649, 3395, 460, 14, 76, "Input"],
Cell[155112, 3411, 463, 15, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[155612, 3431, 186, 4, 45, "Input"],
Cell[155801, 3437, 670, 19, 78, "Output"]
}, Open  ]],
Cell[156486, 3459, 155, 3, 51, "Text"],
Cell[156644, 3464, 311, 9, 82, "Text"],
Cell[CellGroupData[{
Cell[156980, 3477, 463, 15, 45, "Input"],
Cell[157446, 3494, 539, 17, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[158022, 3516, 188, 4, 45, "Input"],
Cell[158213, 3522, 1759, 45, 162, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160009, 3572, 1842, 49, 227, "Input"],
Cell[161854, 3623, 1095, 30, 113, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162986, 3658, 1136, 30, 200, "Input"],
Cell[164125, 3690, 1046, 29, 113, "Output"]
}, Open  ]],
Cell[165186, 3722, 127, 2, 51, "Text"],
Cell[165316, 3726, 889, 25, 151, "Input"],
Cell[166208, 3753, 99, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[166332, 3758, 1358, 38, 167, "Input"],
Cell[167693, 3798, 65661, 1087, 244, "Output"]
}, Open  ]],
Cell[233369, 4888, 276, 5, 86, "Text"],
Cell[233648, 4895, 433, 15, 82, "Text"],
Cell[234084, 4912, 362, 13, 58, "Text"],
Cell[CellGroupData[{
Cell[234471, 4929, 544, 17, 75, "Input"],
Cell[235018, 4948, 563, 17, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[235618, 4970, 186, 4, 45, "Input"],
Cell[235807, 4976, 1385, 38, 91, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[237229, 5019, 643, 18, 55, "Input"],
Cell[237875, 5039, 86, 1, 45, "Output"]
}, Open  ]],
Cell[237976, 5043, 166, 3, 51, "Text"],
Cell[238145, 5048, 2986, 87, 278, "Input"],
Cell[241134, 5137, 696, 22, 75, "Input"],
Cell[CellGroupData[{
Cell[241855, 5163, 245, 6, 45, "Input"],
Cell[242103, 5171, 841, 26, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[242981, 5202, 85, 2, 45, "Input"],
Cell[243069, 5206, 702, 21, 54, "Output"]
}, Open  ]],
Cell[243786, 5230, 125, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[243936, 5235, 548, 15, 50, "Input"],
Cell[244487, 5252, 458, 13, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[244982, 5270, 176, 4, 45, "Input"],
Cell[245161, 5276, 87, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[245285, 5282, 694, 22, 78, "Input"],
Cell[245982, 5306, 104, 2, 45, "Output"]
}, Open  ]],
Cell[246101, 5311, 153, 3, 51, "Text"],
Cell[246257, 5316, 639, 18, 113, "Text"],
Cell[246899, 5336, 262, 5, 86, "Text"],
Cell[CellGroupData[{
Cell[247186, 5345, 7377, 210, 10660, "Input"],
Cell[254566, 5557, 2340, 48, 367, "Output"]
}, {2}]],
Cell[256918, 5608, 202, 4, 75, "Text"],
Cell[257123, 5614, 520, 17, 55, "Text"],
Cell[257646, 5633, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[257744, 5638, 670, 20, 45, "Input"],
Cell[258417, 5660, 815, 22, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[259269, 5687, 239, 5, 45, "Input"],
Cell[259511, 5694, 1623, 48, 97, "Output"]
}, Open  ]],
Cell[261149, 5745, 122, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[261296, 5750, 151, 3, 45, "Input"],
Cell[261450, 5755, 168, 3, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[261655, 5763, 613, 21, 97, "Input"],
Cell[262271, 5786, 104, 2, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[262412, 5793, 643, 21, 78, "Input"],
Cell[263058, 5816, 88, 1, 45, "Output"]
}, Open  ]],
Cell[263161, 5820, 168, 2, 51, "Text"],
Cell[CellGroupData[{
Cell[263354, 5826, 1075, 36, 150, "Input"],
Cell[264432, 5864, 19662, 332, 260, "Output"]
}, Open  ]]
}
]
*)


(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    252150,       5796]
NotebookOptionsPosition[    241426,       5455]
NotebookOutlinePosition[    241814,       5472]
CellTagsIndexPosition[    241771,       5469]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
Note: In this problem set, expressions in green cells match corresponding \
expressions in the text answers.\
\>", "Text",
 Evaluatable->False,
 CellChangeTimes->{{3.769296429943082*^9, 3.7692964388384247`*^9}}],

Cell[BoxData[""], "Input",
 Evaluatable->False,
 CellChangeTimes->{3.7692964280990067`*^9}],

Cell["\<\
Note: I should make a statement explaining that my viewpoint differs from the \
text on the matter of iteration techniques like the ones in this section. I \
do not desire to run through all the steps of the Newton or Secant methods in \
detail. If Mathematica can do what is needed inside a black box, that is fine \
with me. All I want to know is which black box it is, and the conditions \
under which it is expected to work correctly.\
\>", "Text",
 CellChangeTimes->{{3.763483371576397*^9, 3.763483526410899*^9}, {
  3.7634873409841433`*^9, 3.763487380947764*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell["\<\
1 - 13 Fixed-point iteration
Solve by fixed-point iteration and answer related questions where indicated.\
\>", "Text",
 CellChangeTimes->{{3.76341265959616*^9, 3.763412726344027*^9}},
 Background->RGBColor[
  0.9600061036087587, 0.9600061036087587, 0.9600061036087587]],

Cell[TextData[{
 "3.  f = x - 0.5 Cos[x] = 0, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "0"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = 1. Sketch."
}], "Text",
 CellChangeTimes->{{3.7634127485202837`*^9, 3.763412794237821*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"x", "-", 
    RowBox[{"0.5", " ", 
     RowBox[{"Cos", "[", "x", "]"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "4"}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Thickness", "[", "0.006", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7634190218664503`*^9, 3.763419060757846*^9}, {
   3.763419172092341*^9, 3.763419194643853*^9}, 3.763483249533836*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.006], Opacity[1.], 
    LineBox[CompressedData["
1:eJwVkWs0lHkcgMdgMLd33orxlrMKaWO7HJdK4f/TThmJzWDphkzUbEpt6aTs
SppKKDW2NkuHnQYhdLeZvBMWWVKYqJ1mjIPKPWsoq5ltPzznOc/nZ1F0vCCG
SqFQAr7wvzfFvHuheJ/gnTMbXmwwaMi35d9Ha4gQ1LskK6NvSENaMZQX7hK7
UZqhkd/QpSGXe8yT5RFH0EvtOr+TFRpy7XPXysvEaXTWLvSHZxEaUvFbnXsm
kY3iL4ev6JCrydSU9GPniRvoj0xB/89H35C7j4wRacQ9hNUOMnb1vCbNs/0K
xj/Uo1ut2gfXCCX58LmLr+9Xbcisv1cyYnhGhqeqXteld6KqlUlb46R1ZPzt
w8t+nXyF+CdDwtdeLSUnsl42GRlp0NfJ7kRzkgw1PWkg2zx7kQtlg1zFqUOi
RD/W1uE+xOPP2xX043P0xMLFULb/LXLbM9QlYXehQmm9fv7iQZTcwZ2qEKoR
WD3+Pbh8GI3+uXe/f2UvWtaoqmpwGkPygZA15DcDqBOCR2+OjqO9h8TbqkwG
URx9X7ty5QTak6x3rC0aQX91hz1mX/gHZXtFOh1rH0fBG8O1fX2T6E6U+emy
lgm0Kj89LN9hCvm8vjLsXDyJevSSzr3J04jlFd6UVD6F+v3apFZ1H5Hdvke7
ZJKPqPKaJvHFohlUYPFmfVHBDJKdM05bevxfNJ8YoS2XzSKdcNtgbPUsOs9n
Hfc8rUcM3hnBba4eWTPUulU8CiRx+pnaHQZ0coFkgZOrETBrnCldARR4qLNe
zVxABa+j332um6FAi69RdPxcY8i9kSG1zzUCnuR8aPO0MUSEurVa+FNhVPdI
TR8ygfvKGEnNFBV6TgSmcpWm4NFSSR24Ygxy6rxWRQkNFm6I1Ul4JiB9sjnP
KNMM3N3cL90bMIHyX6rt67eZg2Yi86lUbArxYalVhK0FDLsGiQkXGhxYUpKj
GrEAx6Flg0YdNKh96rO9tJgO9Q4J7QdTzEAlDBKFxjHgYqdSKHAwB/uG+2uP
2zBhLFhxiVpvDi01ZcWjtUy4E2r5rcchC/g7zwpLOMgCaWtqXu8cOpSmNixs
Y7BhunHHiTm1dPgcavmQeosNPZdIHecAA8523xPZ8zCYerGOOMVmgsN1T5qm
GYOD2XaKRDkTUgojo52dOcBtteP0RbDAUB7D2iDiQLCybNZGz4LJucL2w1IO
TEQWxKlK2JCYSxTd13CAjKoQszdjkE5bc3GPJQ6P2uL81YEYZPlJTQVWODzw
dsLLgzAYj3oc6MnFocxGlhsQhkH+Qs+tHAKHnO6cuxnRGJwq4gY9sMEhYcsZ
LT0RA/fl068+2ePgDDu9zAoxcNwyWxPpgoNjxXzjrmIMovnymzxXHOy+6m4q
LMVAsMpRtNQNB+tZQcjG2xhE1K2JnXDHgVbF3yeWYyD+yXb7KQ8ctCvcrhl3
YGBavc47B3BQXf8Q0aHEgHvY+0SSDw7drAoHaTcGiqbxzIj1ODwbWlq5Xo2B
dXyhmx0PB3mRbWPKewzCqhenFfniUGX1JiNoGAN9YELCOT4Od8U5gkVjGEz6
f1ot8sOhRGipVkxiYLlJi5z8cZC1t0uzpjHgyWPF9M045PtkiaJmMGhMFBYM
funcyoAVKz9/+eT7TtIcgMNVW4bOYMDA/4PpzpJAHP4DkDkvqg==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 4}, {-0.49999991836734525`, 4.326821759689049}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7634190461992064`*^9, 3.763419061653655*^9}, {
   3.763419179327342*^9, 3.7634192040709667`*^9}, 3.763483250565131*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"x", "-", 
   RowBox[{"0.5", " ", 
    RowBox[{"Cos", "[", "x", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7634193599939823`*^9, 3.763419374757819*^9}}],

Cell[BoxData[
 RowBox[{"x", "-", 
  RowBox[{"0.5`", " ", 
   RowBox[{"Cos", "[", "x", "]"}]}]}]], "Output",
 CellChangeTimes->{3.76341937559142*^9}]
}, Open  ]],

Cell[TextData[{
 "According the explanation in the document center for ",
 StyleBox["FindRoot", "Input"],
 ", entering one guess value turns on Newton\[CloseCurlyQuote]s method. \
(Inserting two guess values invokes a variant of the secant method.) When I \
saw a precision attribute mentioned in the text answer I thought about \
putting in a precision goal, but ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "\[CloseCurlyQuote]s default precision is good enough, probably, for all \
these problems. As for the guess ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "0"], TraditionalForm]]],
 ", in this case it was not chosen with consideration."
}], "Text",
 CellChangeTimes->{{3.763419319656805*^9, 3.7634193361576233`*^9}, {
  3.763421001979755*^9, 3.763421133990549*^9}, {3.763421215534587*^9, 
  3.763421248770871*^9}, {3.763459963766349*^9, 3.7634600091153803`*^9}, {
  3.7634672382827168`*^9, 3.763467280664344*^9}, {3.763491215599415*^9, 
  3.763491222964514*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{"x", "-", 
    RowBox[{"0.5`", " ", 
     RowBox[{"Cos", "[", "x", "]"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.763418950762354*^9, 3.763418968985128*^9}, 
   3.7634191991570883`*^9, {3.7634672206340857`*^9, 3.763467222603591*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", "\[Rule]", "0.4501836112948736`"}], "}"}]], "Output",
 CellChangeTimes->{3.7634189702407417`*^9, 3.763419002858966*^9, 
  3.763419200646625*^9, 3.763467225098024*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[TextData[{
 "Let me try to find g[x]. According to material at ",
 StyleBox["https://mat.iitm.ac.in/home/sryedida/public_html/caimna/\
transcendental/iteration%20methods/fixed-point/iteration.html",
  FontSize->14,
  FontSlant->"Italic"],
 " it is basically just a process of getting x on one side of the equals sign \
and everything else on the other side. (Wikipedia has a more complicated \
calculation, dealing with derivatives, such that g[x] might be equal to x ",
 Cell[BoxData[
  FormBox["-", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox[
      FractionBox[
       RowBox[{"f", "[", "x", "]"}], 
       RowBox[{
        RowBox[{"f", "'"}], "[", "x", "]"}]],
      FontSize->21], ")"}], "."}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " "
}], "Text",
 CellChangeTimes->{{3.763419942516046*^9, 3.763419948210598*^9}, {
  3.763420660830171*^9, 3.7634207532342863`*^9}, {3.763420823041758*^9, 
  3.763420882155258*^9}, {3.763420926556726*^9, 3.763420975260619*^9}}],

Cell["\<\
Using the first method gives me g[x] = 0.5 Cos[x], which agrees with the text \
answer.\
\>", "Text",
 CellChangeTimes->{3.7634209785097523`*^9},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[TextData[{
 "5.  Sketch f[x] = ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "3"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " - 5.00 ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " + 1.01 x + 1.88, showing roots near \[PlusMinus]1 and 5. Write x = g[x] = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"5.00", " ", 
        SuperscriptBox["x", "2"]}], "-", 
       RowBox[{"1.01", " ", "x"}], " ", "+", " ", "1.88"}], ")"}], 
     SuperscriptBox["x", "2"]], ".", " "}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "Find a root by starting from ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "0"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = 5, 4, 1, -1. Explain the (perhaps unexpected) results."
}], "Text",
 CellChangeTimes->{{3.76341279946137*^9, 3.763412801205638*^9}, {
  3.763412832244841*^9, 3.763412937518613*^9}, {3.763412982135347*^9, 
  3.763413068821694*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[TextData[{
 "First of all, there appears to be a typo in the problem description. The \
suggested form of g[x] has an incorrect sign for the last constant. Shouldn\
\[CloseCurlyQuote]t that be ",
 Cell[BoxData[
  FormBox["\"\<-\>", TraditionalForm]],
  FormatType->"TraditionalForm"],
 "1.88\[CloseCurlyDoubleQuote]?"
}], "Text",
 CellChangeTimes->{{3.7634600686972847`*^9, 3.763460134385622*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "3"], "-", 
    RowBox[{"5.00", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"1.01", " ", "x"}], "+", "1.88"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "6"}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Thickness", "[", "0.006", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7634212972108707`*^9, 3.7634213225926943`*^9}, {
   3.7634603536967688`*^9, 3.763460354383559*^9}, {3.7634605632404413`*^9, 
   3.7634605636835327`*^9}, 3.763483241758581*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.006], Opacity[1.], 
    LineBox[CompressedData["
1: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
+aBcoOjDhAcn4f8AG0R38g==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-2, 6}, {-28.139994610612536`, 23.45160622231487}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.76342132539958*^9, 3.7634603554624653`*^9, 
  3.763460564475387*^9, 3.763483242598688*^9}]
}, Open  ]],

Cell["\<\
It looks like the root is at approximately 0.8 on the x-axis.\
\>", "Text",
 CellChangeTimes->{{3.763421454997384*^9, 3.7634214750358257`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "3"], "-", 
    RowBox[{"5.00", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"1.01", " ", "x"}], "+", "1.88"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0.7"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.763421511205906*^9, 3.763421518034836*^9}, {
   3.763421558409998*^9, 3.763421558705234*^9}, 3.763467294303657*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", "\[Rule]", "0.8`"}], "}"}]], "Output",
 CellChangeTimes->{3.7634215200174637`*^9, 3.763421559927596*^9, 
  3.7634672962684507`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["x", "3"], "-", 
   RowBox[{"5.00", " ", 
    SuperscriptBox["x", "2"]}], "+", 
   RowBox[{"1.01", " ", "x"}], "+", "1.88"}], "/.", 
  RowBox[{"x", "\[Rule]", "0.8`"}]}]], "Input",
 CellChangeTimes->{{3.763421542762909*^9, 3.763421548265565*^9}, 
   3.763461560084548*^9}],

Cell[BoxData[
 RowBox[{"-", "8.881784197001252`*^-16"}]], "Output",
 CellChangeTimes->{
  3.763421549231967*^9, {3.76346156228871*^9, 3.763461566236402*^9}, 
   3.76346730378503*^9}]
}, Open  ]],

Cell[TextData[{
 "The quantity shown above is very small, less than 1",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["0", 
    RowBox[{"-", "10"}]], TraditionalForm]]],
 ". The default ",
 StyleBox["Chop", "Input"],
 " chop would chop it. But I have not covered all the problem instructions. I \
need to try out the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "0"], TraditionalForm]]],
 " values provided. I seem to remember that a 3rd degree polynomial is \
expected to have three roots. Apparently, the first two test values are \
shifted to the right far enough to catch the largest root."
}], "Text",
 CellChangeTimes->{{3.7634215828321047`*^9, 3.7634216117518063`*^9}, {
  3.763421703382291*^9, 3.763421716484371*^9}, {3.7634602020085382`*^9, 
  3.763460277396122*^9}, {3.763460649207885*^9, 3.763460660878002*^9}, {
  3.763460713394969*^9, 3.763460764007997*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "3"], "-", 
    RowBox[{"5.00", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"1.01", " ", "x"}], "+", "1.88"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7634217533327923`*^9, 3.763421938454574*^9}, {
   3.763421993133822*^9, 3.7634219983799467`*^9}, 3.763467310694504*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", "\[Rule]", "4.7`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.763421848531846*^9, {3.763421911469653*^9, 3.7634219392485437`*^9}, {
   3.763421972124466*^9, 3.763421999401178*^9}, 3.763467312782236*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "3"], "-", 
    RowBox[{"5.00", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"1.01", " ", "x"}], "+", "1.88"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.763422016020578*^9, 3.763422016283022*^9}, 
   3.763467318382032*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", "\[Rule]", "4.699999999999999`"}], "}"}]], "Output",
 CellChangeTimes->{3.763422016993801*^9, 3.7634673199853497`*^9}]
}, Open  ]],

Cell["\<\
The next suggested root is close enough to the middle root to retrieve that \
one.\
\>", "Text",
 CellChangeTimes->{{3.763460285275375*^9, 3.76346031555379*^9}, {
  3.763460784622422*^9, 3.763460834747686*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "3"], "-", 
    RowBox[{"5.00", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"1.01", " ", "x"}], "+", "1.88"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7634220229565887`*^9, 3.763422023146955*^9}, 
   3.7634673258058863`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", "\[Rule]", "0.8`"}], "}"}]], "Output",
 CellChangeTimes->{3.76342202368148*^9, 3.7634673267079268`*^9}]
}, Open  ]],

Cell[TextData[{
 "And for the last root, ",
 StyleBox["FindRoot", "Input"],
 " again finds the closest root to the guess value."
}], "Text",
 CellChangeTimes->{{3.763460323769288*^9, 3.763460341848288*^9}, {
  3.763460382519273*^9, 3.76346038927767*^9}, {3.763460846467072*^9, 
  3.7634608640112953`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "3"], "-", 
    RowBox[{"5.00", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"1.01", " ", "x"}], "+", "1.88"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.763422029836186*^9, 3.76342203042701*^9}, 
   3.7634673324056253`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", "\[Rule]", 
   RowBox[{"-", "0.5000000000000011`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.763422031529141*^9, 3.763467333280603*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["x", "3"], "-", 
   RowBox[{"5.00", " ", 
    SuperscriptBox["x", "2"]}], "+", 
   RowBox[{"1.01", " ", "x"}], "+", "1.88"}], "/.", 
  RowBox[{"x", "\[Rule]", 
   RowBox[{"-", "0.5000000000000011`"}]}]}]], "Input",
 CellChangeTimes->{{3.7634604054139633`*^9, 3.763460411756146*^9}, 
   3.7634688404476633`*^9}],

Cell[BoxData[
 RowBox[{"-", "7.771561172376096`*^-15"}]], "Output",
 CellChangeTimes->{3.76346041329878*^9, 3.7634688427363157`*^9}]
}, Open  ]],

Cell[TextData[{
 "Yes. The guess value of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "0"], TraditionalForm]]],
 " was close enough to the left root to trigger a successful search there."
}], "Text",
 CellChangeTimes->{{3.763460422963317*^9, 3.763460496359309*^9}, 
   3.763460869329795*^9, {3.763460980246126*^9, 3.763460985771174*^9}, {
   3.763461533468749*^9, 3.763461535491231*^9}, {3.7692960743420897`*^9, 
   3.7692960771068974`*^9}}],

Cell[TextData[{
 "7.  Find the smallest positive solution of Sin[x] = ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", "x"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " ."
}], "Text",
 CellChangeTimes->{{3.7634130721185637`*^9, 3.763413102764512*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell["\<\
The periodic nature of the sine function takes over in the positive domain. \
It looks like the smallest positive root falls at about 0.7.\
\>", "Text",
 CellChangeTimes->{{3.76346127745793*^9, 3.763461352357767*^9}, {
  3.763461779648573*^9, 3.7634617802616787`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], "-", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "x"}]]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "17"}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Thickness", "[", "0.006", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7634611520512238`*^9, 3.763461189223509*^9}, {
   3.763461250405857*^9, 3.7634612529077387`*^9}, 3.763483232927022*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.006], Opacity[1.], 
    LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-2, 17}, {-3.544193875429467, 0.9999992488199764}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.76346117430999*^9, 3.763461189927203*^9}, 
   3.763461253618626*^9, 3.763483233795394*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], "-", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "x"}]]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0.7"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.763461376303617*^9, 3.763461383708158*^9}, {
   3.763461786725984*^9, 3.7634617879575777`*^9}, 3.76346734505261*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", "\[Rule]", "0.5885327439818611`"}], "}"}]], "Output",
 CellChangeTimes->{3.7634613861812773`*^9, 3.763461789573863*^9, 
  3.7634673473919764`*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["\<\
The location of the root on the plot was a little misleading, I think, at \
least at the plot size I requested.\
\>", "Text",
 CellChangeTimes->{{3.7634618004046173`*^9, 3.763461847154158*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], "-", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", "x"}]]}], "/.", 
  RowBox[{"x", "->", "0.5885327439818611`"}]}]], "Input",
 CellChangeTimes->{{3.76346142612332*^9, 3.763461439291771*^9}}],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{3.763461441171351*^9}]
}, Open  ]],

Cell[TextData[{
 "9.  Find the negative solution of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "4"], TraditionalForm]]],
 " - x - 0.12 = 0."
}], "Text",
 CellChangeTimes->{{3.7634131087001753`*^9, 3.763413137435239*^9}, {
  3.763413456313569*^9, 3.7634134629294367`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "4"], "-", "x", "-", "0.12"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "9"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "10"}], ",", "9"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", "10"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Thickness", "[", "0.006", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.763461891729453*^9, 3.7634619466929007`*^9}, {
   3.763462007073826*^9, 3.7634620712065687`*^9}, 3.763483226287486*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.006], Opacity[1.], 
    LineBox[CompressedData["
1:eJw1l3kw1Q3Uxy2FLFmyZsnVigipFD3nVyihLGVJSlGSkFRSQvZIlqiktFhK
PaSkheQUIks9Qtm592e717Vc18W19nrfmffMnDnznTlz/vzM51Bcz9me4uPh
4Wld7P+dzYeVmx4Qs8jzf7WGMLle5xIJs6joStm/an41ITrCM/L9+gzGL1tC
2UZRI74FVrmMecxgvvVyrj2dQgQvi/+lYDODS1JX8gq9phCsNYrvPCkzqE49
nqywi0I0HdlyTbRsGk+nhRzsOqNKpFefEbbmn0b12fbdSi+VCXsHnWsBTC7+
u8O3P3GfMiHRNzn8pJGLL898kREaVCLCeCJ+jWVyUUZmu+uklhLhvu1RarIJ
F62i7qxJ/7qS0M5uWNccOYX3TdxZXrLyRJyb3NP5s1P4dGav9eFSOWKQ4qy4
xnYKlQsfatqeliOeP+oTP68yhXK6tQrHS2QJ1VQuV/jDJHZahFfl+skQK26q
1P5Dn8D1sYUnJZevIPz2uZme+jmBo88EaO++SRH1gjl4s3ACT4y3yhgHSxFx
EbqFLdcnMD38raQ4W5IQCDZJ91OYQDMHyVLdXgmC6+t57pk5BxV8Ze0e0MQI
+035jDodDsINrUA+LzHi3fC427gsBxvSg3O4U6KEn2eQI9Ezjtvc9HXDpEUJ
plvirrbAcbxW0l7+wEWY6LJ/v2J5HhtX25ROR+8QJIxkZm/pJ7NxvCCeX6xD
gEhrBKEjV9jYMsGs7AkWIBysq+eem7LR6XZR6+XvS4n6fR19u7rG0Mu0lNHk
uYQoN+L7eEl8DF8KJ5rtY/ASdzdraR2cYqEBX6LjpkxewlPDMUOnm4Xlfx2X
ihzjJaTkX8UxX7Hw6tZau9Q/PMTx8cMnThxgoYR9vEpI9l/gHnSTSVs5immJ
YrL9jFl4vKvo76HBEUwMdgpjXJmFPZvEB8WLR5A7ZvQmQmQWUoQ/lUYeHkHR
ww03fDbPgO5XKY/zqcO48CRZJ/oOFzy1y4rNZIfwY3iQx6NHEyCpJJ/N38/E
ly5To+2mE/BxmU9C6TsmpuSqRp8a4YBAn8JJfTsmlq29J2hhzIHMB+fFVFMG
sc4uYbpnlg0dQpTjU5IMLD3EOR6XxYLwSX/zAhodbbXJFeHHWKDRW6fv/YaO
nn/yB0IVWHAFA5b1WNNxv7+IqMTaUZD1ry/4mTCAaz8HFSeqDoNVT8jSZ2L9
mNFT3xHjwwD7Aef7B7v68EVcyEMhPgY4M7dr8eb3oUbW3lvi9+jgOT5+yNm6
D5Nof54/+DYAUfweWVLJvfiu0cxranM/lK62Ng6R70F13b9Pdln3wLf1Ws0b
GSSa0G2TzKdJqNMUPttWROK9p3+qAzJJaNtccXvLERLf6Tpbac/SYNLYgGSm
03DU2v7CiQ9U0D6pGuq4mopZfCK/PUs6wLN+Rl2U3o1bX73fJKLdAQEthTan
Y7qxY03NjOXTdkihb3iqXNeFlWaBUfFxbVAnJEnE2nRi7wq97fyXWsBoHy3I
zbkNYx16nbsjm0CxJnRaxq8JpfzjjKw6a6A0Rd/4jEgTttm2rpuYqAZXl4G4
kqxGdOdvp6pIVEMOx1LVrbkBZS1SHn8xqwL9VfJ7Xxv9wt0Ll3Mzqsshle6s
fmd5Hd6I9ZimzBUB+4oXzp0vxetOn4wiH1pijL726WO9hUDf91yit64ac8L+
Jj11ew//5apzl8fV4Pf6+pJe8gM0N7lHrrKoRSHvC1JnacXwdptgJfm9Dits
O7oMz32BGMoLtaCy/9DkJiXWzKsS4oYdvtc0NeAhvdhVg5pVwOUOKZ3Xa8ST
rezCm8wqCCqpXtqd0IgR6yu6f3pWQ4R6cTafeRNWlLtvsTtTB4Uiyjwzxb9R
bcGOpbP5F1zZnmby42YLvrQR/sSb/Asu/nM1ZKSnBfWySyMb2L+A9eUx85Zh
K+62XK94saABxFv+duswWtE1jWv6QbcJ+srmnNx2tmPG1gcPduo0w5+xnK/c
8k7UiLVyX57YDNViYU+VJLuwoJNft3u0GUI7dDUdjnZhWYRX5fX8FmgXBEM2
uwvJhp1j5dptMCug3DIuREXPdexPKfFt0C03HXNRk4rsK8+iTo20ge9FCaET
+6nIRxFXEnzVDm58EOWVQEXKOeoec61OcNX+KtIkQkNpnoejanc6QWaNd3yO
Jg0FkhxSZ+c6IThwQCzbnIZDBT8ZuXVdwPGvklqIpGG3ceztSP1ucNFknT2Q
QcOGJlPDYw+7AVy9z7z6TEPnwGOVglupkPufpnTEGA3/GJes5JyhAg80jgwt
I9FKdOU5ajoVnDIefLegkLg7/bdc0VIabFv+cLTeksSSU5u9srfTYPhyZznj
OIlbtJO+JHnTQDDVNrvzAokb0PKM528aOMtoFu24S2JG9MvP9stI0JnbUXcn
m0RFayEp450kPMhtzst/S2KKvLv7pvMkCHs4rQz9QuJyWnmxYjYJ003WRXx1
JN54QREXaiVhZOGastYfEnn9Qtw4oj0QYv+7gttF4tUdnR+oRA9YvomQP9ZP
IofPUPTHxR5Yaj7oZTdEok9t6vGinB5w/3Kft5lF4kDyZGF2Rw9sVTjC2z5O
4nHnQ8tuS/TCgVKNsMMTJLatKTgabNILCcHbI80X88Fh8QLPgF4YvDU0mb24
X/fOW8AhtxecIztfuS3e2xNc62RM7QWWa9u5QCaJuEc9f5N0H5TG9A309pJo
IB7Nr2TWB4yvW17f6yCxoLnXQehaH2QZbN1/s4FEzSe7czn5faB9PUr7QyWJ
WR5PeGg9fdCQMPNKapE7KroLh37I9QOjPE36zotFDk0feVFk0Q9tnZmJW1JJ
lCgrms8O6Qe5JdHAjCAxNlbO9vbbflArY2zIO0fikoOXngUP9EOU0DPwcyQx
SLFxxlNxAKgba07oAomTPTpWDlYD0MJIdaStJtE3Nz7TOHwAVrnEtAQIkDh4
cWhq04cBCJDcGzrST0O3neaWSswBeDf4ptPgGw3tfy6d4NjSwbpA+tLaQBrW
33XbR4uiQ7x3w9FCWxruc/ma/qOYDt6M73Zj62loxLq255kaAxykNw7ur6Xi
+49tabftGZD3kTf+8H0qbgo1GA2OZYCeEGnFPElFNSnOPQc2A9p/v8hnLXL0
YZvNkPG6QXi2bWD+s283ymTmEzpOg3Df3VPUdLwLhfTPMoTKBqHSZnzNRnon
DtuRO4qTmLDnYaOpYEI7CggV9b2tYELU1e2azsNtqFqckJg3xYTiiu7YCdM2
PKSys//J0SHoMjkp87SvBX3qVySlJQ6BxGj/rRsbWzA6bNAwpXwISobZii7e
zVjcfy8pWn0YNG6PeYZ1/MamVB+jUOdhUM3zM8kU/o3D5qYDVxOGgSWQdvKI
XhOq5rONfCaGoUxthsfApwGjLu+nH/o6Apanr3RZafzAJ+prkg9wRoB6BTKl
FGuxuH1mp9n6UZDHz0Z357/jMOQkG94aBUfC1271vQrUiAhdlbSRBQY38mQN
tN/jts4hjtgeFtBXdfIcpbxBk62ONbEuLPA1V+flH3yOR+nalyJus+C63cm+
2vILmGjZUXOZywKu9wbNoC/vID177xOO5Bh4fDAosm76BC8XCi6d1xwDr/f6
he5Lv0L56xjVs8fG4OJj+sJr3yqYlN7mf6xiDPRS1derJDYAv0+GRXvnGMga
+p80OdoEElViFMepMagUPPWFvvkPaFzprbXRYIO/m2e6/EIrHO1MopgmsqHq
uqHvzSU08Nw6P/n1BRtMzVyv3ZMiwT/Bo+6fcjbobnBx+LW2BxJ3wWWDSTZo
Njw3E3Tug4rsoTpN53FI39Q2LbZsEDR89gZIbeBAzcWAMI3tbCiLr7NtAQ6M
vGb3NFHZcDjfRuuRAwfknYO11t0chxusI6R6NAc8FPgu/xngQL+fr+Wufg40
9Gf5qpRNQebl+6q+WROQknXIlf53HnakqsxuKZkAbvS47kLTAjR8zPw92zgB
tuIRemp5f4FvJi82mn8S9Jz31jm8XfS1a2WcR66TwFZWyfkZwkcohTK//1Cd
AufClXfcTgsQhU99M5MNpuBl82DvNFOAsCibCDpsPQU/JY7eP+AnSFzl59nc
FzIF+91Vw3dFCBGtkdLpc11T8Dr28dmCz8LE3did5zXTuSCbV7pyIkac0P63
zGKskAvhhjdCVshKEN9q9677UMeFFa7jyuoeEgRH1LZ99xwXphj8CzbikoRt
grup05FpOO0SL1B/RooQT0lQiFGYAdWgAGldGxmCL+Iu03rRE48kVwdafpIh
OBfSP8vvn4H4AJ7l79fJEi0H/z2Rc30GNAz1eIN55YiMFVUvqgZmAKQLG9Sr
5An95IXtAu9nwfoAOfzPHSViXfhS0Z//zYJgivupyzLKhPwF0a47i96qe8H6
1IZ7ysS87cqwtcpzoNS8cWThkQpRKbW1xiRiDsz6dj45dVyVcLzt7RRuOw9u
dutEXjxXI8zDLm608JoHzcmELTocNcLIL3BBKmoepnv9ZWN3rSYotjEZGUXz
sJ+4WfGpazWBqq2d+hXz8P//1/8AkIgS2w==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-10, 9}, {-2, 10}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.763461910724803*^9, 3.763461947374359*^9}, {
   3.763462043647813*^9, 3.76346207192096*^9}, 3.76348322704609*^9}]
}, Open  ]],

Cell["\<\
By choosing a particular plot range this function comes into focus.\
\>", "Text",
 CellChangeTimes->{{3.763461977114452*^9, 3.763461990626285*^9}, {
  3.7634621062598963`*^9, 3.7634621325145817`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "4"], "-", "x", "-", "0.12"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "0.1"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.763462160340667*^9, 3.7634621751367083`*^9}, 
   3.7634673580694313`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", "\[Rule]", 
   RowBox[{"-", "0.11979405979852116`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.76346217843926*^9, 3.763467359375525*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["x", "4"], "-", "x", "-", "0.12"}], "/.", 
  RowBox[{"x", "->", 
   RowBox[{"-", "0.11979405979852116`"}]}]}]], "Input",
 CellChangeTimes->{{3.763462193193211*^9, 3.76346220293817*^9}}],

Cell[BoxData[
 RowBox[{"-", "3.903127820947816`*^-18"}]], "Output",
 CellChangeTimes->{3.7634622058922586`*^9, 3.763467363786146*^9}]
}, Open  ]],

Cell[TextData[{
 "11.  Drumhead. Bessel functions. A partial sum of the Maclaurin series of \
",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["J", "0"], "[", "x", "]"}], TraditionalForm]]],
 " (section 5.5) is f[x] = 1 -",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", "4"], 
    SuperscriptBox["x", "2"]}], TraditionalForm]]],
 " + ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", "64"], 
    SuperscriptBox["x", "4"]}], TraditionalForm]]],
 " - ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", "2304"], TraditionalForm]]],
 " ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "6"], TraditionalForm]]],
 ". Conclude from a sketch that f[x] = 0 near x = 2. Write f[x] = 0 as x = \
g[x] (by dividing f[x] by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", "4"], "x"}], TraditionalForm]]],
 " and taking the resulting x-term to the other side). Find the zero. (See \
section 12.10 for the importance of these zeros.)"
}], "Text",
 CellChangeTimes->{{3.763413519681842*^9, 3.7634137141381617`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"1", "-", 
    FormBox[
     RowBox[{
      FractionBox["1", "4"], 
      SuperscriptBox["x", "2"]}],
     TraditionalForm], "+", 
    FormBox[
     RowBox[{
      FractionBox["1", "64"], 
      SuperscriptBox["x", "4"]}],
     TraditionalForm], "-", 
    RowBox[{
     FormBox[
      FractionBox["1", "2304"],
      TraditionalForm], " ", 
     FormBox[
      SuperscriptBox["x", "6"],
      TraditionalForm]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "9"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "8"}], ",", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "3"}], ",", "4"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Thickness", "[", "0.006", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7634624816095467`*^9, 3.763462522799879*^9}, 
   3.7634832184560633`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.006], Opacity[1.], 
    LineBox[CompressedData["
1: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
/3/2P/xDFSI=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-8, 7}, {-3, 4}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.763462485684699*^9, 3.763462523757167*^9, 
  3.7634832197454557`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], "=", 
  RowBox[{"1", "-", 
   RowBox[{
    FractionBox["1", "4"], 
    SuperscriptBox["x", "2"]}], "+", 
   RowBox[{
    FractionBox["1", "64"], 
    SuperscriptBox["x", "4"]}], "-", 
   RowBox[{
    FractionBox["1", "2304"], 
    SuperscriptBox["x", "6"]}]}]}]], "Input",
 CellChangeTimes->{{3.76346260368397*^9, 3.7634626495373697`*^9}}],

Cell[BoxData[
 RowBox[{"1", "-", 
  FractionBox[
   SuperscriptBox["x", "2"], "4"], "+", 
  FractionBox[
   SuperscriptBox["x", "4"], "64"], "-", 
  FractionBox[
   SuperscriptBox["x", "6"], "2304"]}]], "Output",
 CellChangeTimes->{3.763462654300129*^9}]
}, Open  ]],

Cell["I will build the g[x] function just to humor the text.", "Text",
 CellChangeTimes->{{3.763467470589758*^9, 3.7634674846360483`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "[", "x_", "]"}], "=", 
  RowBox[{"Simplify", "[", 
   FractionBox[
    RowBox[{"f", "[", "x", "]"}], 
    RowBox[{
     RowBox[{"1", "/", "4"}], "x"}]], "]"}]}]], "Input",
 CellChangeTimes->{{3.7634626584379663`*^9, 3.763462713934249*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["4", "x"], "-", "x", "+", 
  FractionBox[
   SuperscriptBox["x", "3"], "16"], "-", 
  FractionBox[
   SuperscriptBox["x", "5"], "576"]}]], "Output",
 CellChangeTimes->{3.763462681157029*^9, 3.763462714761366*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["And check the root of it.", "Text",
 CellChangeTimes->{{3.763467502906911*^9, 3.763467509034646*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{
    FractionBox["4", "x"], "-", "x", "+", 
    FractionBox[
     SuperscriptBox["x", "3"], "16"], "-", 
    FractionBox[
     SuperscriptBox["x", "5"], "576"]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7634627265243607`*^9, 3.763462768427042*^9}, {
   3.763462881111882*^9, 3.763462881838924*^9}, 3.7634673745229683`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", "\[Rule]", "2.391646690891294`"}], "}"}]], "Output",
 CellChangeTimes->{3.7634627703352127`*^9, 3.763462883963241*^9, 
  3.763467377227325*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["4", "x"], "-", "x", "+", 
   FractionBox[
    SuperscriptBox["x", "3"], "16"], "-", 
   FractionBox[
    SuperscriptBox["x", "5"], "576"]}], "/.", 
  RowBox[{"x", "->", "2.391646690891294`"}]}]], "Input",
 CellChangeTimes->{{3.763462784724077*^9, 3.76346279370874*^9}, 
   3.763462894480061*^9}],

Cell[BoxData["1.1102230246251565`*^-16"], "Output",
 CellChangeTimes->{3.7634627959054737`*^9, 3.763462896267651*^9},
 Background->RGBColor[1, 1, 0.85]]
}, Open  ]],

Cell["\<\
But I think that Mathematica is completely capable of skipping the g[x] \
function in this case.\
\>", "Text",
 CellChangeTimes->{{3.763467515874156*^9, 3.763467544224989*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{"1", "-", 
    RowBox[{
     FractionBox["1", "4"], 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{
     FractionBox["1", "64"], 
     SuperscriptBox["x", "4"]}], "-", 
    RowBox[{
     FractionBox["1", "2304"], 
     SuperscriptBox["x", "6"]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.763462826211656*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", "\[Rule]", "2.391646690891294`"}], "}"}]], "Output",
 CellChangeTimes->{3.763462828642222*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["\<\
The text lists a Newton construct, 2.405 4S-exact, as it calls it, but since \
this is off the green root point by a considerable amount, I don\
\[CloseCurlyQuote]t understand its value.\
\>", "Text",
 CellChangeTimes->{{3.763467622213756*^9, 3.76346771136734*^9}, {
  3.7634876161630096`*^9, 3.7634876217282476`*^9}}],

Cell["\<\
13.  Existence of fixed point. Prove that if g is continuous in a closed \
interval I and its range lies in I, then the equation x = g[x] has at least \
one solution in I. Illustrate that it may have more than one solution in I.\
\>", "Text",
 CellChangeTimes->{{3.763413785683681*^9, 3.763413840942148*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell["14 - 23 Newton\[CloseCurlyQuote]s method.", "Text",
 CellChangeTimes->{{3.7634138736619873`*^9, 3.763413887124214*^9}},
 Background->RGBColor[
  0.9600061036087587, 0.9600061036087587, 0.9600061036087587]],

Cell[TextData[{
 "Note: Since as I mentioned ",
 StyleBox["FindRoot", "Input"],
 " incorporates Newton\[CloseCurlyQuote]s method, I take the position that I \
am using it now."
}], "Text",
 CellChangeTimes->{{3.7634703994898148`*^9, 3.7634704325841227`*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[TextData[{
 "15. f = 2 x - Cos[x], ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", 
    RowBox[{"0", " "}]], TraditionalForm]]],
 "=1. Compare with problem 3."
}], "Text",
 CellChangeTimes->{{3.7634138910079317`*^9, 3.763413918635696*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell["\<\
The plot shows the current problem (teal) as well as the function of problem \
3 (gold).\
\>", "Text",
 CellChangeTimes->{{3.763487690056655*^9, 3.763487717787774*^9}, {
  3.7634877921951437`*^9, 3.763487792536474*^9}, {3.7634878245364733`*^9, 
  3.76348783479046*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"2", " ", "x"}], "-", 
      RowBox[{"Cos", "[", "x", "]"}]}], ",", 
     RowBox[{"x", "-", 
      RowBox[{"0.5", 
       RowBox[{"Cos", "[", "x", "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "3"}], ",", "4"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Thickness", "[", "0.006", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.763467848740952*^9, 3.763467913883605*^9}, {
   3.763468413096361*^9, 3.763468437244997*^9}, 3.763483208272434*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.006], Opacity[1.], 
    LineBox[CompressedData["
1:eJwBcQGO/iFib1JlAgAAABYAAAACAAAAO/elxSHh9r8AAAAAAAAIwFpzTz02
Nva/Qc+4/wWqB8CTv+hQv7bzvz/G0SMuXwbAPwLYVi4B8b+mV7nSZ+UEwGrY
wnCl8+y/PF76O0JrA8A8mYEYunjnv4yJ5XG1rQHAaN3x21kX4r8VJp5hBJr/
v0/gLK3IJNq/whGFIl/B+782v5vX6oTOv1jBkiNaLfe/OfBdY95jtL882MyA
f3/yvyuD7wrAdbM/9PRb3ecK67+vx+6pf1jPP0XJ19isvt6/vUnKODrC2T84
muo0XXm9v+uqomlOWOI/RsbC7pac0z+drS6b9LXnP22q/I+wz+c/vGGGFTC3
7D+GZCMZnrzyP3oUmdVPEvE/7Aoc0yhr+j/M0NRE0przP5St8Aw85QBAccs3
Jo8W9j8nfB8OMpMEQKTPRBVmyPg/hSnJX5ybCECMrLeoB0z7Py1BWcI1YAxA
/Hx7XtW7/T8AAAAAAAAQQPLBt5g=
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], Thickness[0.006], Opacity[1.], 
    LineBox[CompressedData["
1:eJwB4QIe/SFib1JlAgAAAC0AAAACAAAAf/woeFXGC8AAAAAAAAAIwCrfSAkP
3QrAD86uDu70BsCkE6P02YIJwEZ1cyT/gwXAw1vKjb8/CMBZ11pa/UUEwByf
HCCY4QbAkBnFu+EJA8BLQ1t504kFwBmEfVB07wHAH/tmgClJBMCIIU8nbf8A
wC2unYBy7QLAxu0e4FgSAMDgdKEu1qgBwFjAfkAjkP6/aZyRo5xqAMAKHDQf
NiH9v1h+WSOsIv6/FVuPsbWs+78o6ylbVJ77v1LITRtvYfq/a05QheLj+L+h
h9ie7gL5v1pzTz02Nva/Qc+4/wWq97+Tv+hQv7bzvz/G0SMuX/a/PwLYVi4B
8b+mV7nSZ+X0v2rYwnCl8+y/PF76O0Jr8788mYEYunjnv4yJ5XG1rfG/aN3x
21kX4r8VJp5hBJrvv0/gLK3IJNq/whGFIl/B6782v5vX6oTOv1jBkiNaLee/
OfBdY95jtL882MyAf3/ivyuD7wrAdbM/9PRb3ecK27+vx+6pf1jPP0XJ19is
vs6/vUnKODrC2T84muo0XXmtv+uqomlOWOI/RsbC7pacwz+drS6b9LXnP22q
/I+wz9c/vGGGFTC37D+GZCMZnrziP3oUmdVPEvE/7Aoc0yhr6j/M0NRE0prz
P5St8Aw85fA/ccs3Jo8W9j8nfB8OMpP0P6TPRBVmyPg/hSnJX5yb+D+MrLeo
B0z7Py1BWcI1YPw/AZPUScMF/j8a4qBd+jYAQBepq8ekSABA8+xByYcTAkDW
p4AjBYgBQK2w+TWE2wNAW6sqhnLiAkDeILabr7kFQDybBzvFJQRAfInauU1l
B0Djj7n2JIQFQKDtmlhHHQlAtCN/6yHcBkCCI7E/FbMKQOCjdzIEHQhAKbzo
27YUDEDSKEWA83gJQDSv6ysHeA1AH5pFIMi9CkA2tBibJqkOQJaqWfk5/AtA
p4HtfdG7D0AYL/Eu4FIMQAAAAAAAABBAxcdlCQ==
     "]]}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-4, 4}, {-3, 4}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7634678508971777`*^9, 3.763467914896783*^9}, 
   3.7634684398487167`*^9, 3.7634832089619513`*^9}]
}, Open  ]],

Cell["\<\
Though the root point is not that close to the 1 suggested in the problem, I \
will use it.\
\>", "Text",
 CellChangeTimes->{{3.7634679472746277`*^9, 3.763467974703845*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"2", " ", "x"}], "-", 
    RowBox[{"Cos", "[", "x", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.763468000817442*^9, 3.7634680075260553`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", "\[Rule]", "0.4501836112948736`"}], "}"}]], "Output",
 CellChangeTimes->{3.763468008259075*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"2", " ", "x"}], "-", 
   RowBox[{"Cos", "[", "x", "]"}]}], "/.", 
  RowBox[{"x", "->", "0.4501836112948736`"}]}]], "Input",
 CellChangeTimes->{{3.763468157830556*^9, 3.763468174870717*^9}}],

Cell[BoxData["1.1102230246251565`*^-16"], "Output",
 CellChangeTimes->{3.7634681775076027`*^9}]
}, Open  ]],

Cell["\<\
The problem asks that I contemplate the common root betwen problem 3 and \
problem 15.\
\>", "Text",
 CellChangeTimes->{{3.763468486074627*^9, 3.7634684980647917`*^9}, 
   3.763487685516933*^9, {3.763487740426888*^9, 3.7634877736254787`*^9}}],

Cell[TextData[{
 "17.  Dependence on ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "0"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". Solve problem 5 by Newton\[CloseCurlyQuote]s method with ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "0"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = 5, 4, 1, -3. Explain the result."
}], "Text",
 CellChangeTimes->{{3.763413921453485*^9, 3.763413982681635*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell["Just to review the plot,", "Text",
 CellChangeTimes->{{3.76346890150651*^9, 3.76346890836053*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "3"], "-", 
    RowBox[{"5.00", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"1.01", " ", "x"}], "+", "1.88"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "6"}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Thickness", "[", "0.006", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{3.763483200593001*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.006], Opacity[1.], 
    LineBox[CompressedData["
1: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
+aBcoOjDhAcn4f8AG0R38g==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-2, 6}, {-28.139994610612536`, 23.45160622231487}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7634688950823812`*^9, 3.76348320129676*^9}]
}, Open  ]],

Cell[TextData[{
 "Since ",
 StyleBox["FindRoot", "Input"],
 " with a single guess point uses Newton\[CloseCurlyQuote]s method, the \
problem has already been worked in problem 5 for all values except for the \
final ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "0"], TraditionalForm]]],
 " mentioned, -3."
}], "Text",
 CellChangeTimes->{{3.763468657560622*^9, 3.763468707492565*^9}, {
  3.763469046640812*^9, 3.7634690499284477`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "3"], "-", 
    RowBox[{"5.00", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"1.01", " ", "x"}], "+", "1.88"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7634687528472023`*^9, 3.7634687532980843`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", "\[Rule]", 
   RowBox[{"-", "0.5000000000000012`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.763468754536963*^9}]
}, Open  ]],

Cell["\<\
The suggested guess point brings me back to the negative-valued root\
\>", "Text",
 CellChangeTimes->{{3.763468941334689*^9, 3.763468963709537*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["x", "3"], "-", 
   RowBox[{"5.00", " ", 
    SuperscriptBox["x", "2"]}], "+", 
   RowBox[{"1.01", " ", "x"}], "+", "1.88"}], "/.", 
  RowBox[{"x", "->", 
   RowBox[{"-", "0.5000000000000012`"}]}]}]], "Input",
 CellChangeTimes->{{3.763468776729978*^9, 3.763468787114808*^9}}],

Cell[BoxData[
 RowBox[{"-", "8.43769498715119`*^-15"}]], "Output",
 CellChangeTimes->{3.76346879166761*^9}]
}, Open  ]],

Cell["\<\
I notice that Mathematica has changed the 16th place digit from that used \
before in problem 5, though naturally without any appreciable change in the \
result.\
\>", "Text",
 CellChangeTimes->{{3.763469060967821*^9, 3.763469099373467*^9}}],

Cell[TextData[{
 "19.  Associated Legendre functions. Find the smallest positive zero of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    SubscriptBox["P", "4"], "2"], TraditionalForm]]],
 " = (1 - ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], ")"}], 
     RowBox[{
      SubscriptBox["P", "4"], "''"}]}], " ", "=", " ", 
    FractionBox["15", "2"]}], TraditionalForm]]],
 "(-7 ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "4"], TraditionalForm]]],
 " + 8 ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "2"], TraditionalForm]]],
 " - 1) (section 5.3) (a) by Newton\[CloseCurlyQuote]s method, (b) exactly, \
by solving a quadratic equation."
}], "Text",
 CellChangeTimes->{{3.7634139884171333`*^9, 3.7634141499164867`*^9}, {
  3.763469242707082*^9, 3.76346924403408*^9}, {3.7634694774803677`*^9, 
  3.763469483837943*^9}, {3.7634701718511543`*^9, 3.763470172694083*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell["\<\
I reviewed section 5.3 briefly, and am now assuming that the P designates a \
polynomial as described in problem 14 within problem set 5.3. That may be \
interesting in the realm of hypergeometrics and indicial equations, but at \
the moment I will try to use only the last part, the expanded polynomial \
expression.\
\>", "Text",
 CellChangeTimes->{{3.763469288044591*^9, 3.763469352520042*^9}, {
   3.7634699758987417`*^9, 3.763469995758996*^9}, {3.76347018736483*^9, 
   3.763470202252253*^9}, {3.7634702362347317`*^9, 3.763470286080077*^9}, 
   3.7634716575318203`*^9, {3.763471688799667*^9, 3.763471708166737*^9}, {
   3.763484971169948*^9, 3.763484979599794*^9}, {3.763487930164927*^9, 
   3.763487930618458*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    FractionBox["15", "2"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "7"}], 
       FormBox[
        SuperscriptBox["x", "4"],
        TraditionalForm]}], "+", 
      RowBox[{"8", 
       FormBox[
        SuperscriptBox["x", "2"],
        TraditionalForm]}], "-", "1"}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "6"}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Thickness", "[", "0.006", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.763470328483488*^9, 3.763470343860938*^9}, 
   3.763483190969639*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.006], Opacity[1.], 
    LineBox[CompressedData["
1:eJwVl3c81d8fx2WGCOFaV9xrpVJZ8SXnkNFAdkYJDSLKCJVkhVBGUkaySURW
lJyDioiG1bK5rnntPX5+/3w+j/fjdT6Pcx7vx/m8H8+nuMN1k8v0dHR0xtuP
/7/P+R9o39raQn4SH0K21oJwXrsh19zCFro2lHylqTcIL8i661PGt9CI40Jz
SX0QftRV/vFr1xY6L6XY9jcyCKPDoDyxaAuFli6VRhGDMGnQOEHhwhbSHLzW
ZqkbiKl6PpaONZtIspNxWMb6HlZMTYy3LttEWP/xSrvMPRw4//67Qf4m8h/c
b/h2yR8LpdOdVEzYRHEn28RFE/zx6dUHqjvcNtGQMZftjY67+HVBilAycRMJ
5Ei9Yrb1w17cdf9a/TZQq4kjaeXJLZyECotH3TdQh3Vr+UPHWxi7JoYwOm6g
icN5WedUb2GOphsH/jPeQMMZ/7rzun1xTtBev2zJDfTLmFC3IOOLu+b8hP1a
11Gb369c1SZv/F/nUet9YuuIl/yC+7CyF7YLIctp862jXvHGukpOLxwqv5v+
Ats6cno9qeI94ol/PqK8jJ9fQwsirZ8eJXpiF70nK1uNa+icymLaETpPnFI5
+6zTfQ09LdzxUKDLHW8lFXYF16+izBffXALMruO6NyyBZ6tWUXDXo6V7/Ndx
aKO97P6iVWQdnnX85y83vGuR7+7PpFX0uzWb083WDQsZ+5PEPVYRbnTguePq
ihVZzrjWiK2i6xOmKsVJLviq5zT9yt0VRBsZDXx7yAkfiDhV8NVzBYXrFIs9
WnPE02lZ5mlXV5B1oQcoanDE3q2WeXrmK8h9OWXtm50jDtlXa5BwYAUFRdC7
hCRcwam9sc8U/i4j6Q92toG7L+O20wpybirLKMbRIJ1H2QGnfvo46SW3jNop
37yesjtgJ2BReEdiGdHuqlud67fH6/K3DjzgWkb74+64ZT+0xxJCSDaLuoSA
lXWw3Kgd9qKekv7zbAl962vraD97AfPedxDTXVlEvH2hThvV1rhnc65Xn7aI
9tkO5xzyscZ5vvdfmA4vohJntfW2I9ZY/VqeqP2PRVQlNazsnmeFL5lOifi9
XESVZ44yziZZ4jLx24IlVosI6UnZvI63wGY1sTyi7xZQonHic6lfJng5euKq
ftECOphr6MWabIJT7PVqb2ctoMdbp/442JrgQcaN612PFpDvwxFtH4ox9jjt
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
mNMqObDEN43/B5U9yoU=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-2, 6}, {-65887.49271183703, 9.642850128381369}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7634703463563747`*^9, 3.7634831917128067`*^9}]
}, Open  ]],

Cell["\<\
After trying a series of one-sies, I think a table is called for\
\>", "Text",
 CellChangeTimes->{{3.763471003370768*^9, 3.763471026368517*^9}, {
  3.763483309225814*^9, 3.763483330406163*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"FindRoot", "[", 
    RowBox[{
     RowBox[{
      FractionBox["15", "2"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "7"}], 
         FormBox[
          SuperscriptBox["x", "4"],
          TraditionalForm]}], "+", 
        RowBox[{"8", 
         FormBox[
          SuperscriptBox["x", "2"],
          TraditionalForm]}], "-", "1"}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "n"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "1", ",", "0.01"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.763470635860879*^9, 3.763470675243368*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "jsing"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered a singular Jacobian at the point \[NoBreak]\\!\
\\(\\*RowBox[{\\\"{\\\", \\\"x\\\", \\\"}\\\"}]\\)\[NoBreak] = \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"0.`\\\", \\\"}\\\"}]\\)\[NoBreak]. \
Try perturbing the initial point(s). \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindRoot/jsing\\\", \
ButtonNote -> \\\"FindRoot::jsing\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.763470676448653*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.37796447300922725`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.37796447300922725`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.3779644730092274`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.37796447300922725`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.37796447300922725`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.3779644730092272`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.3779644730092272`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.37796447300922725`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.37796447300922725`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.37796447300922725`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.37796447300922725`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.3779644730092275`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.3779644730092272`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.37796447300922725`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.3779644730092272`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.3779644730092275`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.3779644730092279`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.37796447300922725`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.3779644730092272`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.3779644730092304`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.3779644730092286`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.37796447300922764`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.37796447300922736`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.37796447300922725`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.3779644730092272`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.3779644730092272`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.3779644730092272`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.3779644730092272`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.37796447300922725`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.37796447300922725`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.37796447300922725`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.3779644730092272`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.3779644730092272`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.37796447300922725`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.3779644730092273`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.37796447300922725`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.37796447300922725`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.37796447300922725`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.3779644730092273`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.3779644730092278`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.3779644730092296`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.37796447300922725`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.37796447300922725`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.3779644730092296`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.3779644730092273`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.3779644730092275`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.3779644730092272`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.3779644730092272`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.3779644730092272`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.37796447300922725`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.37796447300922725`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.3779644730092272`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.37796447300922725`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.37796447300922725`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.3779644730092275`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.3779644730092296`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.37796447300922725`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.3779644730092272`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.37796447300922725`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.37796447300922725`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.37796447300922725`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.37796447300922725`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.37796447300922725`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.37796447300922753`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.37796447300922725`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.3779644730092272`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.3779644730092272`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.37796447300922725`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "0.3779644730092305`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "0.37796447300922786`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "0.37796447300922725`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "1.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.3779644730092272`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.0000000000000002`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.0000000000000009`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.0000000000000016`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.0000000000000002`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.0000000000000009`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.0000000000000009`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.763470676493908*^9}]
}, Open  ]],

Cell["\<\
It looks like 0.377964 meets the necessary description for (a).\
\>", "Text",
 CellChangeTimes->{{3.7634711069491568`*^9, 3.763471177728272*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["15", "2"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "7"}], 
        FormBox[
         SuperscriptBox["x", "4"],
         TraditionalForm]}], "+", 
       RowBox[{"8", 
        FormBox[
         SuperscriptBox["x", "2"],
         TraditionalForm]}], "-", "1"}], ")"}]}], "\[Equal]", "0"}], ",", 
   RowBox[{"{", "x", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.76347120373656*^9, 3.763471216639633*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "1"}]}], "||", 
  RowBox[{"x", "\[Equal]", "1"}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", 
    FractionBox["1", 
     SqrtBox["7"]]}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   FractionBox["1", 
    SqrtBox["7"]]}]}]], "Output",
 CellChangeTimes->{3.763471217818602*^9}]
}, Open  ]],

Cell[TextData[{
 "It looks like ",
 Cell[BoxData[
  RowBox[{"x", "\[Equal]", 
   StyleBox[
    FractionBox["1", 
     SqrtBox["7"]],
    FontSize->21]}]],
  CellChangeTimes->{3.763471217818602*^9}],
 " meets the necessary description for (b). "
}], "Text",
 CellChangeTimes->{{3.763471275140216*^9, 3.76347130251362*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[TextData[{
 "I don\[CloseCurlyQuote]t know that ",
 StyleBox["Reduce", "Input"],
 " uses the quadratic equation, but in the document center is the statement, \
\[OpenCurlyDoubleQuote]When ",
 Cell[BoxData[
  StyleBox["expr", "TI"]], "InlineFormula"],
 " involves only polynomial equations and inequalities over real or complex \
domains, then ",
 StyleBox["Reduce", "Input"],
 " can always in principle solve directly for all the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "i"], TraditionalForm]], "InlineMath"],
 ".\[CloseCurlyDoubleQuote] "
}], "Text",
 CellChangeTimes->{{3.763471478602347*^9, 3.76347156379068*^9}, {
  3.763471767862565*^9, 3.763471768419511*^9}}],

Cell[TextData[{
 "21.  f = ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "3"], TraditionalForm]]],
 " - 5 x + 3 = 0, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "0"], TraditionalForm]]],
 " = 2, 0, -2"
}], "Text",
 CellChangeTimes->{{3.763414179900674*^9, 3.763414183243309*^9}, {
  3.763414314207583*^9, 3.7634143512223587`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "3"], "-", 
    RowBox[{"5", " ", "x"}], "+", "3"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "4"}], ",", "5"}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Thickness", "[", "0.006", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.76347195147114*^9, 3.7634719586348963`*^9}, {
   3.763471989114224*^9, 3.76347200620872*^9}, 3.763483179234294*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.006], Opacity[1.], 
    LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-4, 5}, {-40.999992102041226`, 48.825721326379636`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.763471964688424*^9, 3.7634720069716263`*^9}, 
   3.763483179971912*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NumberForm", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"FindRoot", "[", 
      RowBox[{
       RowBox[{
        SuperscriptBox["x", "3"], "-", 
        RowBox[{"5", " ", "x"}], "+", "3"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "n"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2"}], ",", "0", ",", "2"}], "}"}]}], "}"}]}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "6"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.763472060553178*^9, 3.763472076733488*^9}, {
  3.763472181106515*^9, 3.763472209799137*^9}, {3.763472344866563*^9, 
  3.763472407781827*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", "\[Rule]", 
      InterpretationBox["\<\"-2.490864\"\>",
       -2.4908636153610333`,
       AutoDelete->True]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", "\[Rule]", 
      InterpretationBox["\<\"0.656620\"\>",
       0.6566204310471103,
       AutoDelete->True]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", "\[Rule]", 
      InterpretationBox["\<\"1.834243\"\>",
       1.834243184313922,
       AutoDelete->True]}], "}"}]}], "}"}],
  NumberForm[#, {10, 6}]& ]], "Output",
 CellChangeTimes->{
  3.763472079389556*^9, {3.763472199002816*^9, 3.76347221078997*^9}, {
   3.76347234800651*^9, 3.763472409369286*^9}},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[TextData[{
 "The values in the above cell agree with the text answer. Originally I had \
the ",
 StyleBox["NumberForm", "Input"],
 " parameters set at {6,6}, and the last value did not come out correctly {x\
\[Rule]1.834240}. When I raised the precision parameter to 10, I got the text \
answer value."
}], "Text",
 CellChangeTimes->{{3.763472453834738*^9, 3.763472582108548*^9}}],

Cell[TextData[{
 "23. Vibrating beam. Find the solution of Cos[x] Cosh[x] = 1 near x = ",
 Cell[BoxData[
  FormBox[
   FractionBox["3", "2"], TraditionalForm]]],
 "\[Pi]. (This determines a frequency of a vibrating beam; see problem set \
12.3)"
}], "Text",
 CellChangeTimes->{{3.763414357173841*^9, 3.763414438003703*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell["\<\
I\[CloseCurlyQuote]m including two plots, the left one relating to the \
problem request, the right one to a trivial experiment.\
\>", "Text",
 CellChangeTimes->{{3.7634886733450336`*^9, 3.763488677727498*^9}, {
  3.7634887193416567`*^9, 3.763488755908036*^9}, {3.7634905812293663`*^9, 
  3.763490584875908*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p1", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "x", "]"}], " ", 
       RowBox[{"Cosh", "[", "x", "]"}]}], "-", "1"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "4"}], ",", "5"}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Thickness", "[", "0.006", "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.763472943960116*^9, 3.763472989649457*^9}, {
   3.7634730255919333`*^9, 3.763473025767767*^9}, 3.763483171858429*^9, {
   3.7634883240806293`*^9, 3.7634883248483133`*^9}, 3.7634886339458714`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p2", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "x", "]"}], " ", 
       RowBox[{"Cosh", "[", "x", "]"}]}], "-", "1"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "0.05"}], ",", "0.05"}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Thickness", "[", "0.006", "]"}]}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.04"}], ",", "0.04"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2*^-8"}], ",", "0.2*^-7"}], "}"}]}], "}"}]}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.763488330548826*^9, 3.763488371646165*^9}, {
  3.763488403660801*^9, 3.763488626610548*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{"p1", ",", "p2"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.763488654909546*^9, 3.76348866137776*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6], 
        Thickness[0.006]], 
       LineBox[CompressedData["
1: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
AO9jUO4=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 200, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{-4, 5}, {-18.95122387135406, 20.05053924505943}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],
   GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6], 
        Thickness[0.006]], 
       LineBox[CompressedData["
1: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
fG1dS87p/f0/7n9c5YpJ
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 1, Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 200, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
     NCache[{{-0.04, 0.04}, {
         Rational[-1, 50000000], 2.*^-8}}, {{-0.04, 0.04}, {-2.*^-8, 
       2.*^-8}}], PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}]},
  
  "RowDefault"]], "Output",
 CellChangeTimes->{3.763488662338778*^9}]
}, Open  ]],

Cell["Solving the problem request is not difficult.", "Text",
 CellChangeTimes->{{3.7634887762588177`*^9, 3.763488790074266*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NumberForm", "[", 
  RowBox[{
   RowBox[{"FindRoot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "x", "]"}], " ", 
       RowBox[{"Cosh", "[", "x", "]"}]}], "-", "1"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "4.5", ",", "5."}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.763486513385079*^9, 3.763486559437353*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    InterpretationBox["\<\"4.73004\"\>",
     4.730040744862704,
     AutoDelete->True]}], "}"}],
  NumberForm[#, {10, 5}]& ]], "Output",
 CellChangeTimes->{3.763486560865404*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["\<\
Apparently I got off easy by being asked for the largest root. As for the \
thorny one around the origin, I need more Mathematica skills in order to have \
a chance of getting something useful out of it. If I try\
\>", "Text",
 CellChangeTimes->{{3.763488066133206*^9, 3.763488131568882*^9}, {
  3.763488803713552*^9, 3.763488808945361*^9}, {3.763490640003654*^9, 
  3.763490653392312*^9}, {3.763490725229065*^9, 3.763490753651552*^9}, {
  3.763554137022625*^9, 3.763554141108988*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"FindRoot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "x", "]"}], " ", 
       RowBox[{"Cosh", "[", "x", "]"}]}], "-", "1."}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "n"}], "}"}], ",", 
     RowBox[{"AccuracyGoal", "\[Rule]", "20"}], ",", 
     RowBox[{"PrecisionGoal", "\[Rule]", "16"}], ",", 
     RowBox[{"MaxIterations", "\[Rule]", "1000"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", 
     RowBox[{"-", "0.005"}], ",", "0.005", ",", "0.0002"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.763488176881937*^9, 3.7634881903265467`*^9}, {
   3.763488922086402*^9, 3.7634889509793653`*^9}, {3.76348904712059*^9, 
   3.7634890478155603`*^9}, {3.763489132404264*^9, 3.763489156441482*^9}, 
   3.763490402566927*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the merit function. You may need more than \
\[NoBreak]\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\)\[NoBreak] digits of \
working precision to meet these tolerances. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindRoot/lstol\\\", ButtonNote -> \
\\\"FindRoot::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.763488193108397*^9, 3.7634889521091337`*^9, 3.7634890504063387`*^9, {
   3.763489140966654*^9, 3.763489157244843*^9}, 3.763490403968014*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the merit function. You may need more than \
\[NoBreak]\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\)\[NoBreak] digits of \
working precision to meet these tolerances. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindRoot/lstol\\\", ButtonNote -> \
\\\"FindRoot::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.763488193108397*^9, 3.7634889521091337`*^9, 3.7634890504063387`*^9, {
   3.763489140966654*^9, 3.763489157244843*^9}, 3.763490404005485*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the merit function. You may need more than \
\[NoBreak]\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\)\[NoBreak] digits of \
working precision to meet these tolerances. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindRoot/lstol\\\", ButtonNote -> \
\\\"FindRoot::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.763488193108397*^9, 3.7634889521091337`*^9, 3.7634890504063387`*^9, {
   3.763489140966654*^9, 3.763489157244843*^9}, 3.7634904040372887`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"FindRoot\\\", \\\"::\\\", \\\"lstol\\\
\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.763488193108397*^9, 3.7634889521091337`*^9, 3.7634890504063387`*^9, {
   3.763489140966654*^9, 3.763489157244843*^9}, 3.7634904040442543`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "0.0001312700061526484`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "0.000159621913974836`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "0.000027377275244608524`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "0.00014481948715857904`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "0.0001233638643362203`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "0.00022173791486074218`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "0.00015574190053296508`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "0.00017931143324896145`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "0.00019498411042899477`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "0.00017236362123715794`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "0.0001450846225986451`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "0.00008201175620039253`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "0.00010327703614332779`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "0.00010405543962306012`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "0.00022056808938184758`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "0.00009209617960281767`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "0.00017321737831485357`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "0.00009665120144841945`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "0.00018501047758517263`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "0.00017179221721036665`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "0.00015908121186320725`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "0.0000479927466945895`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "0.00014295134885029606`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "0.00009851197220028166`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "0.00011643803126188554`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.0001164380312618864`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.00009851197220028166`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.00014295134885029606`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.000047992746694590366`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.00015908121186320725`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.00017179221721036708`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.00018501047758517306`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.00009665120144841945`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.000173217378314854`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.00009209617960281767`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.000220568089381848`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.00010405543962306055`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.00010327703614332779`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.00008201175620039296`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.0001450846225986451`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.0001723636212371588`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.00019498411042899563`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.00017931143324896145`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.0001557419005329655`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.00022173791486074305`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.0001233638643362203`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.00014481948715857904`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.00002737727524460939`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.00015962191397483514`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.0001312700061526484`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.763488193229505*^9, 3.763488952237603*^9, 3.7634890505314703`*^9, {
   3.763489141088605*^9, 3.7634891573517733`*^9}, 3.7634904040523157`*^9}]
}, Open  ]],

Cell["the results are ambiguous. Whereas", "Text",
 CellChangeTimes->{{3.7635541480361834`*^9, 3.763554160171838*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", "x", "]"}], " ", 
      RowBox[{"Cosh", "[", "x", "]"}]}], "-", "1"}], "<", 
    SuperscriptBox["10", 
     RowBox[{"-", "10"}]]}], ",", 
   RowBox[{"{", "x", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7635482695813017`*^9, 3.763548295599352*^9}, {
  3.7635487402812967`*^9, 3.763548748293885*^9}, {3.7635489670678263`*^9, 
  3.763548968873974*^9}, {3.7635490063841963`*^9, 3.763549007399818*^9}, {
  3.763549039704554*^9, 3.763549064116653*^9}, {3.763549100076231*^9, 
  3.763549106258381*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "nsmet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"This system cannot be solved with the methods available to \
Solve. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/Solve\\\", ButtonNote -> \
\\\"Solve::nsmet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7635495706488457`*^9}],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{
      RowBox[{"Cos", "[", "x", "]"}], " ", 
      RowBox[{"Cosh", "[", "x", "]"}]}]}], "<", 
    FractionBox["1", "10000000000"]}], ",", 
   RowBox[{"{", "x", "}"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.7635487365080233`*^9, 3.763548962117333*^9, 3.763549003512233*^9, {
   3.7635490366629*^9, 3.763549058942665*^9}, 3.76354909634484*^9, 
   3.763549570752057*^9}]
}, Open  ]],

Cell["\<\
requires a lot of computing time and still fails.  Maybe an ultra zoomed plot\
\
\>", "Text",
 CellChangeTimes->{{3.763554197461033*^9, 3.763554221609029*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p3", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", "x", "]"}], " ", 
      RowBox[{"Cosh", "[", "x", "]"}]}], "-", "1"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "0.05"}], ",", "0.05"}], "}"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"Thickness", "[", "0.004", "]"}]}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "0.4"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.00015"}], ",", "0.00018"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2*^-16"}], ",", "0.1*^-15"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"WorkingPrecision", "\[Rule]", "20"}], ",", 
    RowBox[{"Epilog", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Green", ",", 
         RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
         RowBox[{"Opacity", "[", "0.3", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.000114"}], ",", "0"}], "}"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Red", ",", 
         RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
         RowBox[{"Opacity", "[", "0.3", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.000025"}], ",", "0"}], "}"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Red", ",", 
         RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
         RowBox[{"Opacity", "[", "0.3", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{"0.0000398", ",", "0"}], "}"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Green", ",", 
         RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
         RowBox[{"Opacity", "[", "0.3", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{"0.0001597", ",", "0"}], "}"}], "]"}]}], "}"}]}], 
      "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.763554253193428*^9, 3.7635542821983843`*^9}, {
   3.763554398529297*^9, 3.7635544271274776`*^9}, {3.763554488428784*^9, 
   3.7635545037398233`*^9}, {3.763554542802224*^9, 3.763554546473598*^9}, {
   3.763554582017126*^9, 3.76355458602376*^9}, {3.763555454261475*^9, 
   3.763555460045*^9}, {3.763555627740959*^9, 3.7635556593070917`*^9}, {
   3.763555721744021*^9, 3.7635559934667053`*^9}, {3.763556031227908*^9, 
   3.76355606889476*^9}, {3.763556099949915*^9, 3.76355617696139*^9}, {
   3.763556224801862*^9, 3.76355638190344*^9}, 3.763557709234702*^9, {
   3.763557810341907*^9, 3.763557919736869*^9}, {3.763557973479068*^9, 
   3.763557982854453*^9}, {3.763558045414987*^9, 3.763558056667984*^9}, {
   3.7635586767684526`*^9, 3.763558693342269*^9}, {3.7635587973392477`*^9, 
   3.7635588484089117`*^9}, {3.76355889284945*^9, 3.763558901327321*^9}, {
   3.763558954264324*^9, 3.763558954509544*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.004], Opacity[1.], 
    LineBox[{{-0.0001844419122828848, -2.*^-16}, {-0.00017472472051468705`, \
-1.5533387179844837`*^-16}, {-0.0001443215270689353, \
-7.230581266224608*^-17}, {-0.00011391833362318358`, \
-2.806876108038151*^-17}, {-0.00008351514017743185, -8.107922843507207*^-18}, \
{-0.0000227087532859284, -4.432226211636266*^-20}, {
     7.694440159823328*^-6, -5.841936815363088*^-22}, {
     0.000038097633605575055`, -3.511080224004175*^-19}, {
     0.00009890402049707851, -1.594793785197103*^-17}, {
     0.00012930721394283025`, -4.659504844054689*^-17}, {
     0.00015971040738858196`, -1.0843803010172464`*^-16}, {
     0.00018518337192291147`, -2.*^-16}}]}},
  AspectRatio->0.4,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{{
     RGBColor[0, 1, 0], 
     PointSize[0.02], 
     Opacity[0.3], 
     PointBox[{-0.000114, 0}]}, {
     RGBColor[1, 0, 0], 
     PointSize[0.02], 
     Opacity[0.3], 
     PointBox[{-0.000025, 0}]}, {
     RGBColor[1, 0, 0], 
     PointSize[0.02], 
     Opacity[0.3], 
     PointBox[{0.0000398, 0}]}, {
     RGBColor[0, 1, 0], 
     PointSize[0.02], 
     Opacity[0.3], 
     PointBox[{0.0001597, 0}]}},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->400,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->NCache[{{-0.00015, 0.00018}, {
      Rational[-1, 5000000000000000], 1.*^-16}}, {{-0.00015, 
    0.00018}, {-2.*^-16, 1.*^-16}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.763554253789569*^9, 3.7635542829655848`*^9}, {
   3.763554403946685*^9, 3.763554428281207*^9}, {3.763554491836471*^9, 
   3.763554505002343*^9}, 3.763554547878439*^9, 3.763554587321422*^9, 
   3.763555460867173*^9, {3.763555637828329*^9, 3.7635556601093073`*^9}, {
   3.763555770382062*^9, 3.763555816922883*^9}, {3.7635558487325907`*^9, 
   3.763555864679586*^9}, {3.7635558989826813`*^9, 3.7635559323713427`*^9}, {
   3.763555963432004*^9, 3.763555994432486*^9}, {3.7635560352288427`*^9, 
   3.763556069749288*^9}, {3.763556101173718*^9, 3.763556177796023*^9}, {
   3.763556239138255*^9, 3.763556382735515*^9}, 3.763557710494362*^9, {
   3.763557812243313*^9, 3.7635579211081953`*^9}, {3.763557975247744*^9, 
   3.763557983564968*^9}, {3.763558047409577*^9, 3.7635580575740747`*^9}, 
   3.763558696116517*^9, {3.763558800189748*^9, 3.763558849445045*^9}, 
   3.763558902604074*^9, 3.763558955515704*^9}]
}, Open  ]],

Cell["\<\
would shed some light. Yes, this helps. It tells me that any x in the \
interval delimited by the two center points shown in the plot has a function \
value which effectively equals zero. It makes me more disposed to go with a \
graphic solution to this kind of problem, especially considering that the \
result comes back almost instantly. (Note: Before I specified a working \
precision, the green points figured into the zero zone.)\
\>", "Text",
 CellChangeTimes->{{3.763554362826006*^9, 3.763554374337604*^9}, {
  3.763554653596094*^9, 3.7635548553383417`*^9}, {3.763554896680283*^9, 
  3.763554897072277*^9}, {3.763554979325708*^9, 3.7635550228580437`*^9}, {
  3.7635553304535313`*^9, 3.763555359385713*^9}, {3.763555548127921*^9, 
  3.7635555488081627`*^9}, {3.76355560622123*^9, 3.763555607397448*^9}, {
  3.7635564087897577`*^9, 3.7635564263405933`*^9}, {3.763557565485167*^9, 
  3.763557572180355*^9}, {3.763558978299918*^9, 3.763558981627842*^9}, {
  3.763559045633617*^9, 3.763559079168764*^9}}],

Cell[TextData[{
 "25.  TEAM PROJECT. Bisection method. This simple but slowly convergent \
method for finding a solution of f[x] = 0 with continuous f is based on the \
intermediate value theorem, which states that if a continuous function f has \
opposite signs at some x = a and x = b (>a), that is either f[a] < 0, f[b] > \
0, or f[a] > 0, f[b] < 0, then f must be somewhere on [a,b]. The solution is \
found by repeated bisection of the interval and in each iteration picking \
that half which also satisfies that sign condition.\n(a) Algorithm. Write an \
algorithm for the method.\n(b) Comparison. Solve x = Cos[x] by Newton\
\[CloseCurlyQuote]s method and by bisection. Compare.\n(c) Solve ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", "x"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = Log[x] and ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", "x"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " + ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "4"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " + x = 2 by bisection."
}], "Text",
 CellChangeTimes->{{3.7634144908191223`*^9, 3.76341479239329*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[TextData[{
 "The (a) part of the problem is addressed below, and was obtained in \
MMAStackExchange question 69771 in the answer of J.M. is away. It is a \
bisection function to which I am expected to feed ",
 StyleBox["1.",
  FontWeight->"Bold"],
 " a function name, ",
 StyleBox["2.",
  FontWeight->"Bold"],
 " a search interval, ",
 StyleBox["3.",
  FontWeight->"Bold"],
 " a tolerance allowance, and ",
 StyleBox["4.",
  FontWeight->"Bold"],
 " a number for max iterations."
}], "Text",
 CellChangeTimes->{{3.7634757069777317`*^9, 3.7634757480551023`*^9}, {
  3.763475801062731*^9, 3.7634758164530783`*^9}, {3.763485224603211*^9, 
  3.763485373539616*^9}, {3.7634854345307913`*^9, 3.763485466582673*^9}},
 Background->RGBColor[0.9, 1, 1]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Bisection", "[", 
   RowBox[{"f_", ",", "int_", ",", "tol_", ",", "niter_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"m", "=", 
       RowBox[{"tol", "+", "1"}]}], ",", "prev", ",", "ym", ",", 
      RowBox[{"yl", "=", 
       RowBox[{"f", "[", 
        RowBox[{"Last", "@", "int"}], "]"}]}]}], "}"}], ",", 
    RowBox[{"NestWhile", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"prev", "=", "m"}], ";", "\[IndentingNewLine]", 
         RowBox[{"m", "=", 
          RowBox[{
           RowBox[{"Total", "@", "#"}], "/", "2"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"ym", "=", 
          RowBox[{"f", "[", "m", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"ym", "*", "yl"}], ">", "0"}], ",", 
           RowBox[{
            RowBox[{"yl", "=", "ym"}], ";", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"First", "@", "#"}], ",", "m"}], "}"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"m", ",", 
             RowBox[{"Last", "@", "#"}]}], "}"}]}], "]"}]}], ")"}], "&"}], 
      ",", "int", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"ym", "\[NotEqual]", "0"}], "&&", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"m", "-", "prev"}], "]"}], ">", "tol"}]}], "&"}], ",", "2", 
      ",", "niter"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.763473771394352*^9, 3.763473771404873*^9}}],

Cell["\<\
That is all of the bisection code. Now for a short test with the function \
that was included on-line\
\>", "Text",
 CellChangeTimes->{{3.763485506109641*^9, 3.763485553033886*^9}, {
  3.7634910585660267`*^9, 3.7634910598202543`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"func", "[", 
     RowBox[{"t_", "?", "NumericQ"}], "]"}], ":=", 
    RowBox[{"1", "+", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"x", "^", "2"}], "]"}], "-", "x"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "t"}], "}"}]}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{"Bisection", "[", 
  RowBox[{"func", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2.`20"}], "}"}], ",", 
   RowBox[{"10", "^", 
    RowBox[{"-", "14"}]}], ",", "1000"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7634738180780287`*^9, 3.7634738180949078`*^9}, {
  3.763473951589881*^9, 3.763473961161977*^9}, {3.7634851412255774`*^9, 
  3.76348516187059*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.92528091807391632528378977440297603607177734375`20.017190504915984", ",",
    "1.925280918073923430711147375404834747314453125`20.017190504915984"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.76347382303974*^9, {3.763485138254884*^9, 3.763485166075296*^9}}]
}, Open  ]],

Cell["\<\
Having kicked the tires on the bisection code, I can try it out on my own \
function, after first making the plot.\
\>", "Text",
 CellChangeTimes->{{3.763485177877627*^9, 3.763485210395945*^9}, {
  3.763485638824189*^9, 3.7634856493408327`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"x", "-", 
    RowBox[{"Cos", "[", "x", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "4"}], ",", "5"}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Thickness", "[", "0.006", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.763473976250495*^9, 3.763473982114195*^9}, 
   3.763483163402432*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.006], Opacity[1.], 
    LineBox[CompressedData["
1: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
7JBrGeNzcwy0LtMj7Rb2/wAxLSlC
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-4, 5}, {-3.34635605645839, 4.716337806992257}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.763473983583645*^9, 3.763483164353113*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"funct", "[", 
   RowBox[{"x_", "?", "NumericQ"}], "]"}], ":=", 
  RowBox[{"x", "-", 
   RowBox[{"Cos", "[", "x", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.763473881050528*^9, 3.76347390641378*^9}, {
  3.763475530766541*^9, 3.763475536084755*^9}, {3.763475626814137*^9, 
  3.7634756271337023`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Bisection", "[", 
  RowBox[{"funct", ",", 
   RowBox[{"{", 
    RowBox[{"0.5", ",", "1."}], "}"}], ",", 
   SuperscriptBox["10", 
    RowBox[{"-", "14"}]], ",", "1000"}], "]"}]], "Input",
 CellChangeTimes->{{3.763473913479808*^9, 3.763473930643264*^9}, {
  3.7634740097127333`*^9, 3.763474043541643*^9}, {3.7634741426810102`*^9, 
  3.7634741636959047`*^9}, {3.763475564499001*^9, 3.763475565001383*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.7390851332151556`", ",", "0.7390851332151627`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.763474045911269*^9, {3.763474144456647*^9, 3.763474165548444*^9}, 
   3.763475571881751*^9, 3.763475631677981*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["\<\
I want to try out the bisection code on problem 5, in which were found three \
separate roots.\
\>", "Text",
 CellChangeTimes->{{3.7634859109192877`*^9, 3.763485938069762*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"funct", "[", 
   RowBox[{"x_", "?", "NumericQ"}], "]"}], ":=", 
  RowBox[{
   SuperscriptBox["x", "3"], "-", 
   RowBox[{"5.00", " ", 
    SuperscriptBox["x", "2"]}], "+", 
   RowBox[{"1.01", " ", "x"}], "+", "1.88"}]}]], "Input",
 CellChangeTimes->{3.763485856301237*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Bisection", "[", 
  RowBox[{"funct", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1."}], ",", "5."}], "}"}], ",", 
   SuperscriptBox["10", 
    RowBox[{"-", "14"}]], ",", "1000"}], "]"}]], "Input",
 CellChangeTimes->{{3.76348586555534*^9, 3.7634858721213207`*^9}, {
  3.763486844534198*^9, 3.763486851629717*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4.699999999999996`", ",", "4.700000000000001`"}], "}"}]], "Output",\

 CellChangeTimes->{
  3.763485874467237*^9, {3.763486846377733*^9, 3.7634868637638597`*^9}}]
}, Open  ]],

Cell["\<\
Evidently, the bisection function only finds the last root in the interval. \
That being the case, I don\[CloseCurlyQuote]t understand why it needs to \
repeat the root.\
\>", "Text",
 CellChangeTimes->{{3.763485969867978*^9, 3.763485991538808*^9}, {
  3.763486022594676*^9, 3.7634860376166143`*^9}}],

Cell["For part (b) of the problem", "Text",
 CellChangeTimes->{{3.763475858057187*^9, 3.7634758702592573`*^9}},
 Background->RGBColor[0.9, 1, 1]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NumberForm", "[", 
  RowBox[{
   RowBox[{"FindRoot", "[", 
    RowBox[{
     RowBox[{"x", "-", 
      RowBox[{"Cos", "[", "x", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0.5"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "6"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7634759244275846`*^9, 3.763475946897229*^9}, {
  3.763475980098056*^9, 3.763475998559774*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    InterpretationBox["\<\"0.739085\"\>",
     0.7390851332151607,
     AutoDelete->True]}], "}"}],
  NumberForm[#, {10, 6}]& ]], "Output",
 CellChangeTimes->{
  3.763475951830563*^9, {3.76347598815702*^9, 3.76347599967319*^9}}]
}, Open  ]],

Cell[TextData[{
 "As seen above, the ",
 StyleBox["FindRoot", "Input"],
 " answer (Newton\[CloseCurlyQuote]s method), matches the bisection method \
answer."
}], "Text",
 CellChangeTimes->{{3.763476016046734*^9, 3.763476041222105*^9}, {
  3.763486180563642*^9, 3.76348618514471*^9}, {3.763486884667674*^9, 
  3.763486887627605*^9}}],

Cell["For part (c) of the problem, two cases are presented", "Text",
 CellChangeTimes->{{3.7634760586136417`*^9, 3.76347606477345*^9}, {
  3.763476535968471*^9, 3.763476547230772*^9}},
 Background->RGBColor[0.9, 1, 1]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "x"}]], "-", 
    RowBox[{"Log", "[", "x", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "4"}], ",", "5"}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Thickness", "[", "0.006", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.763476133397046*^9, 3.763476147268537*^9}, 
   3.7634831544256973`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.006], Opacity[1.], 
    LineBox[CompressedData["
1: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
/vycTBL/A4GpUBM=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-4, 5}, {-1.6026999274627383`, 3.3525939608161024`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7634761517385283`*^9, 3.763483155504651*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"funct", "[", 
   RowBox[{"x_", "?", "NumericQ"}], "]"}], ":=", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", "x"}]], "-", 
   RowBox[{"Log", "[", "x", "]"}]}]}]], "Input",
 CellChangeTimes->{3.763476187541194*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NumberForm", "[", 
  RowBox[{
   RowBox[{"Bisection", "[", 
    RowBox[{"funct", ",", 
     RowBox[{"{", 
      RowBox[{"1.", ",", "1.5"}], "}"}], ",", 
     SuperscriptBox["10", 
      RowBox[{"-", "14"}]], ",", "1000"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.763476207914893*^9, 3.7634762505359297`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    InterpretationBox["\<\"1.30980\"\>",
     1.30979958580415,
     AutoDelete->True], ",", 
    InterpretationBox["\<\"1.30980\"\>",
     1.3097995858041571`,
     AutoDelete->True]}], "}"}],
  NumberForm[#, {10, 5}]& ]], "Output",
 CellChangeTimes->{{3.763476216750943*^9, 3.7634762513874407`*^9}},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["\[ExponentialE]", "x"], "+", 
    SuperscriptBox["x", "4"], "+", "x", "-", "2"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "4"}], ",", "5"}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Thickness", "[", "0.006", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.763476278240501*^9, 3.7634763036705933`*^9}, 
   3.763483146097254*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.006], Opacity[1.], 
    LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-4, 5}, {-1.964511605454635, 495.5175635081142}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.763476305767644*^9, 3.7634831475017967`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"funct", "[", 
   RowBox[{"x_", "?", "NumericQ"}], "]"}], ":=", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", "x"], "+", 
   SuperscriptBox["x", "4"], "+", "x", "-", "2"}]}]], "Input",
 CellChangeTimes->{3.763476353255972*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NumberForm", "[", 
  RowBox[{
   RowBox[{"Bisection", "[", 
    RowBox[{"funct", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1."}], ",", "1."}], "}"}], ",", 
     SuperscriptBox["10", 
      RowBox[{"-", "14"}]], ",", "1000"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "6"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7634763827735147`*^9, 3.7634763966115227`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    InterpretationBox["\<\"0.429494\"\>",
     0.4294935655475527,
     AutoDelete->True], ",", 
    InterpretationBox["\<\"0.429494\"\>",
     0.4294935655475598,
     AutoDelete->True]}], "}"}],
  NumberForm[#, {10, 6}]& ]], "Output",
 CellChangeTimes->{{3.763476388714079*^9, 3.763476397791403*^9}},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[TextData[{
 "26 - 29 Secant method\nSolve, using ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "0"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "1"], TraditionalForm]]],
 " as indicated:"
}], "Text",
 CellChangeTimes->{{3.763414732508877*^9, 3.7634147343466682`*^9}, {
  3.763414803925705*^9, 3.763414928820765*^9}, {3.76341511812202*^9, 
  3.763415121568049*^9}},
 Background->RGBColor[
  0.9600061036087587, 0.9600061036087587, 0.9600061036087587]],

Cell[TextData[{
 "As mentioned above, (a variation of) the secant method is incorporated into \
",
 StyleBox["FindRoot", "Input"],
 " when two guesses are included."
}], "Text",
 CellChangeTimes->{{3.763476577679158*^9, 3.7634766284925013`*^9}, {
  3.763482753726083*^9, 3.763482753919737*^9}}],

Cell[TextData[{
 "27.  Problem 21, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "0"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = 1.0, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = 2.0"
}], "Text",
 CellChangeTimes->{3.763415125423962*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell["First repeating the plot", "Text",
 CellChangeTimes->{{3.763476738786314*^9, 3.763476742281015*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "3"], "-", 
    RowBox[{"5", " ", "x"}], "+", "3"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "4"}], ",", "5"}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Thickness", "[", "0.006", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{3.7634831348910217`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.006], Opacity[1.], 
    LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-4, 5}, {-40.999992102041226`, 48.825721326379636`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.763476733691125*^9, 3.763483136400846*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NumberForm", "[", 
  RowBox[{
   RowBox[{"FindRoot", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "3"], "-", 
      RowBox[{"5", " ", "x"}], "+", "3"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "1.", ",", "2."}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7634767601236267`*^9, 3.7634767705605164`*^9}, {
  3.76347680339299*^9, 3.763476803566874*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    InterpretationBox["\<\"1.83424\"\>",
     1.834243184313922,
     AutoDelete->True]}], "}"}],
  NumberForm[#, {10, 5}]& ]], "Output",
 CellChangeTimes->{3.7634767723259573`*^9, 3.763476804331421*^9, 
  3.763476913675655*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "3"], "-", 
    RowBox[{"5", " ", "x"}], "+", "3"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1.", ",", "2."}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.76347692873276*^9, {3.763486748356491*^9, 3.76348677030613*^9}, {
   3.7634870021847677`*^9, 3.763487002293853*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", "\[Rule]", "1.834243184313922`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.763476930840128*^9, {3.763486751944169*^9, 3.763486772251854*^9}, 
   3.7634870039291773`*^9},
 Background->RGBColor[1, 1, 0.85]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["x", "3"], "-", 
   RowBox[{"5", " ", "x"}], "+", "3"}], "/.", 
  RowBox[{"x", "->", "1.834243184313922`"}]}]], "Input",
 CellChangeTimes->{{3.7634768856062*^9, 3.763476896655295*^9}, 
   3.763476939302627*^9},
 Background->RGBColor[1, 0.925, 0.925]],

Cell[BoxData["8.881784197001252`*^-16"], "Output",
 CellChangeTimes->{3.763476905614567*^9, 3.7634769411613483`*^9}]
}, Open  ]],

Cell[TextData[{
 "The above answer matches the text, and shows that the secant (or Brent\
\[CloseCurlyQuote]s method) works. The pink x substitute was not copied from \
the result of the ",
 StyleBox["NumberForm", "Input"],
 " line, rather from the yellow line below that one. It is both interesting \
and necessary to understand that ",
 StyleBox["NumberForm", "Input"],
 ", while delivering my desired output format, nevertheless drops, \
internally, all digits beyond what I ask for."
}], "Text",
 CellChangeTimes->{{3.763476852006649*^9, 3.7634768720049763`*^9}, {
  3.763477004298464*^9, 3.763477112317959*^9}, {3.763477144575368*^9, 
  3.763477150084746*^9}, {3.76348627410818*^9, 3.763486280235724*^9}, {
  3.763486967433921*^9, 3.7634869821984577`*^9}, {3.763487047868826*^9, 
  3.76348705242712*^9}, {3.7634871163948183`*^9, 3.763487117696061*^9}, {
  3.763487189135439*^9, 3.7634871916366777`*^9}, {3.7634872226055927`*^9, 
  3.763487242770362*^9}}],

Cell[TextData[{
 "29. Sin[x] = Cot[x], ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "0"], TraditionalForm]]],
 " = 1, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "1"], TraditionalForm]]],
 " = 0.5"
}], "Text",
 CellChangeTimes->{{3.7634148688301*^9, 3.763414873534337*^9}, {
  3.763414937028079*^9, 3.7634149660197077`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], "-", 
    RowBox[{"Cot", "[", "x", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Thickness", "[", "0.006", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7634828534312696`*^9, 3.763482878944233*^9}, {
  3.763483096004807*^9, 3.763483115466427*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.006], Opacity[1.], 
    LineBox[CompressedData["
1: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
jU2JyA==
     "]], LineBox[CompressedData["
1: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
rQRCRw==
     "]], 
    LineBox[{{-0.0006019727698998242, 
     5.007766643508612}, {-0.0005991549168700521, -5.071475409343697}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-2, 2}, {-5.071475409343697, 5.007766643508612}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7634828596639853`*^9, 3.7634828796714077`*^9}, 
   3.7634831167646837`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NumberForm", "[", 
  RowBox[{
   RowBox[{"FindRoot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", "x", "]"}], "-", 
      RowBox[{"Cot", "[", "x", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "1.", ",", "0.5"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "6"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.763482922799674*^9, 3.763482936532906*^9}, {
  3.763482998362771*^9, 3.763482998601315*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    InterpretationBox["\<\"0.904557\"\>",
     0.9045568943023813,
     AutoDelete->True]}], "}"}],
  NumberForm[#, {10, 6}]& ]], "Output",
 CellChangeTimes->{3.763482939847519*^9, 3.7634829994824*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], "-", 
    RowBox[{"Cot", "[", "x", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1.", ",", "0.5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.763483030768293*^9, 3.7634830321434383`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", "\[Rule]", "0.9045568943023813`"}], "}"}]], "Output",
 CellChangeTimes->{3.763483042965107*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], "-", 
   RowBox[{"Cot", "[", "x", "]"}]}], "/.", 
  RowBox[{"x", "->", "0.9045568943023813`"}]}]], "Input",
 CellChangeTimes->{{3.763483054078807*^9, 3.7634830658869877`*^9}}],

Cell[BoxData[
 RowBox[{"-", "1.1102230246251565`*^-16"}]], "Output",
 CellChangeTimes->{3.763483067432622*^9}]
}, Open  ]]
},
WindowSize->{1366, 843},
WindowMargins->{{4, Automatic}, {Automatic, 4}},
Magnification:>1.5 Inherited,
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 10, \
2015)",
StyleDefinitions->"Charter1.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 221, 5, 51, "Text",
 Evaluatable->False],
Cell[624, 20, 91, 2, 45, "Input",
 Evaluatable->False],
Cell[718, 24, 579, 9, 155, "Text"],
Cell[1300, 35, 73, 1, 45, "Input"],
Cell[1376, 38, 280, 6, 110, "Text"],
Cell[1659, 46, 287, 9, 77, "Text"],
Cell[1949, 57, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[2047, 62, 503, 12, 45, "Input"],
Cell[2553, 76, 2784, 57, 205, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5374, 138, 210, 5, 45, "Input"],
Cell[5587, 145, 148, 4, 45, "Output"]
}, Open  ]],
Cell[5750, 152, 982, 20, 157, "Text"],
Cell[CellGroupData[{
Cell[6757, 176, 360, 9, 45, "Input"],
Cell[7120, 187, 248, 5, 69, "Output"]
}, Open  ]],
Cell[7383, 195, 1066, 28, 180, "Text"],
Cell[8452, 225, 193, 5, 75, "Text"],
Cell[8648, 232, 1084, 33, 146, "Text"],
Cell[9735, 267, 73, 1, 45, "Input"],
Cell[9811, 270, 402, 9, 87, "Text"],
Cell[CellGroupData[{
Cell[10238, 283, 654, 16, 54, "Input"],
Cell[10895, 301, 10229, 180, 211, "Output"]
}, Open  ]],
Cell[21139, 484, 153, 3, 51, "Text"],
Cell[CellGroupData[{
Cell[21317, 491, 429, 11, 54, "Input"],
Cell[21749, 504, 175, 4, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21961, 513, 325, 9, 49, "Input"],
Cell[22289, 524, 182, 4, 49, "Output"]
}, Open  ]],
Cell[22486, 531, 874, 20, 158, "Text"],
Cell[CellGroupData[{
Cell[23385, 555, 431, 11, 54, "Input"],
Cell[23819, 568, 247, 5, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24103, 578, 381, 11, 54, "Input"],
Cell[24487, 591, 162, 3, 45, "Output"]
}, Open  ]],
Cell[24664, 597, 220, 5, 51, "Text"],
Cell[CellGroupData[{
Cell[24909, 606, 385, 11, 54, "Input"],
Cell[25297, 619, 147, 3, 45, "Output"]
}, Open  ]],
Cell[25459, 625, 305, 7, 51, "Text"],
Cell[CellGroupData[{
Cell[25789, 636, 403, 12, 54, "Input"],
Cell[26195, 650, 180, 4, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26412, 659, 363, 10, 49, "Input"],
Cell[26778, 671, 132, 2, 49, "Output"]
}, Open  ]],
Cell[26925, 676, 447, 10, 53, "Text"],
Cell[27375, 688, 336, 10, 76, "Text"],
Cell[27714, 700, 73, 1, 45, "Input"],
Cell[27790, 703, 278, 5, 86, "Text"],
Cell[CellGroupData[{
Cell[28093, 712, 560, 14, 54, "Input"],
Cell[28656, 728, 18058, 308, 208, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46751, 1041, 391, 10, 54, "Input"],
Cell[47145, 1053, 228, 5, 69, "Output"]
}, Open  ]],
Cell[47388, 1061, 203, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[47616, 1069, 270, 7, 47, "Input"],
Cell[47889, 1078, 72, 1, 45, "Output"]
}, Open  ]],
Cell[47976, 1082, 316, 9, 76, "Text"],
Cell[48295, 1093, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[48393, 1098, 765, 21, 90, "Input"],
Cell[49161, 1121, 5590, 101, 216, "Output"]
}, Open  ]],
Cell[54766, 1225, 210, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[55001, 1233, 315, 9, 54, "Input"],
Cell[55319, 1244, 218, 5, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55574, 1254, 238, 6, 49, "Input"],
Cell[55815, 1262, 133, 2, 49, "Output"]
}, Open  ]],
Cell[55963, 1267, 1083, 37, 200, "Text"],
Cell[57049, 1306, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[57147, 1311, 1076, 37, 126, "Input"],
Cell[58226, 1350, 7471, 133, 219, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65734, 1488, 396, 13, 76, "Input"],
Cell[66133, 1503, 254, 8, 80, "Output"]
}, Open  ]],
Cell[66402, 1514, 138, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[66565, 1519, 279, 8, 77, "Input"],
Cell[66847, 1529, 288, 8, 104, "Output"]
}, Open  ]],
Cell[67150, 1540, 107, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[67282, 1545, 445, 12, 80, "Input"],
Cell[67730, 1559, 187, 4, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67954, 1568, 346, 10, 80, "Input"],
Cell[68303, 1580, 152, 2, 73, "Output"]
}, Open  ]],
Cell[68470, 1585, 186, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[68681, 1593, 436, 15, 76, "Input"],
Cell[69120, 1610, 176, 4, 69, "Output"]
}, Open  ]],
Cell[69311, 1617, 328, 6, 86, "Text"],
Cell[69642, 1625, 354, 6, 110, "Text"],
Cell[69999, 1633, 211, 3, 75, "Text"],
Cell[70213, 1638, 293, 7, 75, "Text"],
Cell[70509, 1647, 282, 9, 77, "Text"],
Cell[70794, 1658, 73, 1, 45, "Input"],
Cell[70870, 1661, 279, 6, 51, "Text"],
Cell[CellGroupData[{
Cell[71174, 1671, 974, 28, 75, "Input"],
Cell[72151, 1701, 2552, 53, 290, "Output"]
}, Open  ]],
Cell[74718, 1757, 183, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[74926, 1765, 282, 8, 45, "Input"],
Cell[75211, 1775, 177, 4, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75425, 1784, 236, 6, 45, "Input"],
Cell[75664, 1792, 95, 1, 49, "Output"]
}, Open  ]],
Cell[75774, 1796, 252, 5, 51, "Text"],
Cell[76029, 1803, 468, 14, 77, "Text"],
Cell[76500, 1819, 73, 1, 45, "Input"],
Cell[76576, 1822, 104, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[76705, 1827, 498, 14, 54, "Input"],
Cell[77206, 1843, 10182, 179, 211, "Output"]
}, Open  ]],
Cell[87403, 2025, 439, 12, 88, "Text"],
Cell[CellGroupData[{
Cell[87867, 2041, 380, 11, 54, "Input"],
Cell[88250, 2054, 158, 4, 45, "Output"]
}, Open  ]],
Cell[88423, 2061, 158, 3, 51, "Text"],
Cell[CellGroupData[{
Cell[88606, 2068, 328, 9, 49, "Input"],
Cell[88937, 2079, 107, 2, 49, "Output"]
}, Open  ]],
Cell[89059, 2084, 251, 5, 86, "Text"],
Cell[89313, 2091, 974, 30, 116, "Text"],
Cell[90290, 2123, 73, 1, 45, "Input"],
Cell[90366, 2126, 730, 12, 120, "Text"],
Cell[CellGroupData[{
Cell[91121, 2142, 707, 23, 75, "Input"],
Cell[91831, 2167, 13534, 234, 207, "Output"]
}, Open  ]],
Cell[105380, 2404, 203, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[105608, 2412, 674, 22, 75, "Input"],
Cell[106285, 2436, 626, 12, 34, "Message"],
Cell[106914, 2450, 8231, 209, 539, "Output"]
}, Open  ]],
Cell[115160, 2662, 193, 4, 75, "Text"],
Cell[CellGroupData[{
Cell[115378, 2670, 530, 18, 75, "Input"],
Cell[115911, 2690, 347, 12, 86, "Output"]
}, Open  ]],
Cell[116273, 2705, 359, 12, 93, "Text"],
Cell[116635, 2719, 680, 17, 122, "Text"],
Cell[117318, 2738, 378, 13, 77, "Text"],
Cell[117699, 2753, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[117797, 2758, 523, 13, 54, "Input"],
Cell[118323, 2773, 9997, 176, 207, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128357, 2954, 726, 22, 54, "Input"],
Cell[129086, 2978, 752, 23, 69, "Output"]
}, Open  ]],
Cell[129853, 3004, 385, 8, 120, "Text"],
Cell[130241, 3014, 359, 9, 116, "Text"],
Cell[130603, 3025, 73, 1, 45, "Input"],
Cell[130679, 3028, 322, 6, 51, "Text"],
Cell[131004, 3036, 699, 17, 45, "Input"],
Cell[131706, 3055, 950, 27, 75, "Input"],
Cell[CellGroupData[{
Cell[132681, 3086, 170, 4, 45, "Input"],
Cell[132854, 3092, 25586, 434, 312, "Output"]
}, Open  ]],
Cell[158455, 3529, 129, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[158609, 3534, 453, 13, 45, "Input"],
Cell[159065, 3549, 284, 9, 69, "Output"]
}, Open  ]],
Cell[159364, 3561, 495, 8, 86, "Text"],
Cell[CellGroupData[{
Cell[159884, 3573, 835, 21, 75, "Input"],
Cell[160722, 3596, 832, 15, 84, "Message"],
Cell[161557, 3613, 832, 15, 84, "Message"],
Cell[162392, 3630, 834, 15, 84, "Message"],
Cell[163229, 3647, 689, 14, 34, "Message"],
Cell[163921, 3663, 5151, 133, 394, "Output"]
}, Open  ]],
Cell[169087, 3799, 118, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[169230, 3804, 614, 15, 54, "Input"],
Cell[169847, 3821, 432, 10, 34, "Message"],
Cell[170282, 3833, 490, 14, 76, "Output"]
}, Open  ]],
Cell[170787, 3850, 169, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[170981, 3858, 3079, 71, 220, "Input"],
Cell[174063, 3931, 2870, 64, 272, "Output"]
}, Open  ]],
Cell[176948, 3998, 1017, 15, 155, "Text"],
Cell[177968, 4015, 1239, 28, 318, "Text"],
Cell[179210, 4045, 73, 1, 45, "Input"],
Cell[179286, 4048, 747, 20, 144, "Text"],
Cell[180036, 4070, 1592, 45, 191, "Input"],
Cell[181631, 4117, 244, 5, 51, "Text"],
Cell[CellGroupData[{
Cell[181900, 4126, 793, 23, 104, "Input"],
Cell[182696, 4151, 305, 7, 45, "Output"]
}, Open  ]],
Cell[183016, 4161, 255, 5, 51, "Text"],
Cell[CellGroupData[{
Cell[183296, 4170, 448, 12, 45, "Input"],
Cell[183747, 4184, 13598, 235, 207, "Output"]
}, Open  ]],
Cell[197360, 4422, 333, 8, 47, "Input"],
Cell[CellGroupData[{
Cell[197718, 4434, 427, 9, 54, "Input"],
Cell[198148, 4445, 289, 7, 69, "Output"]
}, Open  ]],
Cell[198452, 4455, 186, 4, 51, "Text"],
Cell[198641, 4461, 307, 9, 50, "Input"],
Cell[CellGroupData[{
Cell[198973, 4474, 347, 9, 54, "Input"],
Cell[199323, 4485, 202, 5, 45, "Output"]
}, Open  ]],
Cell[199540, 4493, 310, 6, 86, "Text"],
Cell[199853, 4501, 145, 2, 75, "Text"],
Cell[CellGroupData[{
Cell[200023, 4507, 429, 12, 45, "Input"],
Cell[200455, 4521, 295, 9, 45, "Output"]
}, Open  ]],
Cell[200765, 4533, 332, 8, 51, "Text"],
Cell[201100, 4543, 218, 3, 75, "Text"],
Cell[CellGroupData[{
Cell[201343, 4550, 511, 14, 54, "Input"],
Cell[201857, 4566, 3345, 67, 207, "Output"]
}, Open  ]],
Cell[205217, 4636, 269, 8, 48, "Input"],
Cell[CellGroupData[{
Cell[205511, 4648, 400, 11, 54, "Input"],
Cell[205914, 4661, 390, 12, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[206341, 4678, 504, 13, 54, "Input"],
Cell[206848, 4693, 10327, 181, 218, "Output"]
}, Open  ]],
Cell[217190, 4877, 263, 7, 50, "Input"],
Cell[CellGroupData[{
Cell[217478, 4888, 424, 12, 54, "Input"],
Cell[217905, 4902, 391, 12, 69, "Output"]
}, Open  ]],
Cell[218311, 4917, 493, 15, 112, "Text"],
Cell[218807, 4934, 294, 7, 86, "Text"],
Cell[219104, 4943, 362, 14, 77, "Text"],
Cell[219469, 4959, 73, 1, 45, "Input"],
Cell[219545, 4962, 106, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[219676, 4967, 429, 12, 54, "Input"],
Cell[220108, 4981, 9967, 175, 207, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[230112, 5161, 471, 13, 54, "Input"],
Cell[230586, 5176, 333, 10, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[230956, 5191, 371, 10, 54, "Input"],
Cell[231330, 5203, 250, 6, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[231617, 5214, 303, 8, 73, "Input"],
Cell[231923, 5224, 116, 1, 49, "Output"]
}, Open  ]],
Cell[232054, 5228, 959, 17, 155, "Text"],
Cell[233016, 5247, 371, 13, 77, "Text"],
Cell[233390, 5262, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[233488, 5267, 505, 13, 45, "Input"],
Cell[233996, 5282, 5720, 108, 207, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[239753, 5395, 472, 13, 45, "Input"],
Cell[240228, 5410, 306, 9, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[240571, 5424, 302, 8, 45, "Input"],
Cell[240876, 5434, 139, 3, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[241052, 5442, 245, 6, 45, "Input"],
Cell[241300, 5450, 110, 2, 49, "Output"]
}, Open  ]]
}
]
*)


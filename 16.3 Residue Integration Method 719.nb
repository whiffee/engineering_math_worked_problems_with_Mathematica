(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    197744,       4539]
NotebookOptionsPosition[    188141,       4233]
NotebookOutlinePosition[    188529,       4250]
CellTagsIndexPosition[    188486,       4247]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[""], "Input",
 Evaluatable->False,
 CellChangeTimes->{3.7692757155535927`*^9}],

Cell["\<\
Note: In this problem set, expressions in green cells match corresponding \
expressions in the text answers.\
\>", "Text",
 Evaluatable->False,
 CellChangeTimes->{{3.769275716903041*^9, 3.769275736535976*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell["\<\
3 - 12 Residues
Find all the singularities in the finite plane and the corresponding residues.\
\>", "Text",
 CellChangeTimes->{{3.760100629836857*^9, 3.7601006539061213`*^9}},
 Background->RGBColor[
  0.9600061036087587, 0.9600061036087587, 0.9600061036087587]],

Cell[BoxData[
 RowBox[{"3.", "  ", 
  FractionBox[
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", "z"}], "]"}], 
   SuperscriptBox["z", "6"]]}]], "Text",
 CellChangeTimes->{{3.760100658234234*^9, 3.7601006738409033`*^9}, 
   3.76010077375578*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f1", "[", "z_", "]"}], "=", 
  FractionBox[
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", "z"}], "]"}], 
   SuperscriptBox["z", "6"]]}]], "Input",
 CellChangeTimes->{{3.760210963860332*^9, 3.7602109820923347`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"Sin", "[", 
   RowBox[{"2", " ", "z"}], "]"}], 
  SuperscriptBox["z", "6"]]], "Output",
 CellChangeTimes->{3.760211013955748*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Residue", "[", 
   RowBox[{
    RowBox[{"f1", "[", "z", "]"}], ",", "0"}], "]"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"singularity", " ", "at", " ", "0"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.760210950957478*^9, 3.7602109582781487`*^9}, {
  3.760210995626305*^9, 3.760211004616582*^9}, {3.760211074894313*^9, 
  3.76021108748608*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Residue", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "z"}], "]"}], 
    SuperscriptBox["z", "6"]], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.760211055774581*^9, 3.7602110594311523`*^9}}],

Cell[BoxData[
 FractionBox["4", "15"]], "Output",
 CellChangeTimes->{3.7602110610492573`*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"5.", "  ", 
  FractionBox["8", 
   RowBox[{"1", "+", 
    SuperscriptBox["z", "2"]}]]}]], "Text",
 CellChangeTimes->{{3.760100680945037*^9, 3.760100690215802*^9}, 
   3.760100785323181*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f2", "[", "z_", "]"}], "=", 
  FractionBox["8", 
   RowBox[{"1", "+", 
    SuperscriptBox["z", "2"]}]]}]], "Input",
 CellChangeTimes->{{3.760211132258479*^9, 3.760211149862817*^9}}],

Cell[BoxData[
 FractionBox["8", 
  RowBox[{"1", "+", 
   SuperscriptBox["z", "2"]}]]], "Output",
 CellChangeTimes->{3.760211151015911*^9}]
}, Open  ]],

Cell["The singularity is at \[PlusMinus]\[ImaginaryI].", "Text",
 CellChangeTimes->{{3.760211422234839*^9, 3.7602114281868134`*^9}, {
  3.7602114960832*^9, 3.760211503840199*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell["\<\
I tried a few ways to get Mathematica to calculate both signs in a single \
step, but was unable to.\
\>", "Text",
 CellChangeTimes->{{3.7602113673967857`*^9, 3.760211399539762*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Residue", "[", 
  RowBox[{
   RowBox[{"f2", "[", "z", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "\[ImaginaryI]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7602111532503643`*^9, 3.760211230465465*^9}, {
  3.760211288855997*^9, 3.7602112985509377`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "4"}], " ", "\[ImaginaryI]"}]], "Output",
 CellChangeTimes->{{3.760211215544303*^9, 3.760211231059207*^9}, {
  3.7602112934432783`*^9, 3.7602112997867203`*^9}},
 Background->RGBColor[0.88, 1, 0.88]]
}, {2}]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Residue", "[", 
  RowBox[{
   RowBox[{"f2", "[", "z", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "\[ImaginaryI]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.7602112551460342`*^9}],

Cell[BoxData[
 RowBox[{"4", " ", "\[ImaginaryI]"}]], "Output",
 CellChangeTimes->{3.760211256738401*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, {1, 2}]],

Cell["7.  Cot[\[Pi] z]", "Text",
 CellChangeTimes->{{3.760100694816228*^9, 3.760100706718936*^9}, 
   3.760100794746705*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f3", "[", "z_", "]"}], " ", "=", 
  RowBox[{"Cot", "[", 
   RowBox[{"\[Pi]", " ", "z"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.760211609808547*^9, 3.760211629368767*^9}}],

Cell[BoxData[
 RowBox[{"Cot", "[", 
  RowBox[{"\[Pi]", " ", "z"}], "]"}]], "Output",
 CellChangeTimes->{3.760211630455802*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"exec", "[", "N_", "]"}], "=", 
  RowBox[{"TableForm", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", 
       RowBox[{"f3", "[", "n", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", 
       RowBox[{"-", "N"}], ",", "N"}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.760211935604097*^9, 3.760212057094681*^9}, {
  3.760213719642*^9, 3.760213842981833*^9}, {3.760213881668645*^9, 
  3.760213893466157*^9}, {3.7602153923143253`*^9, 3.7602153925060263`*^9}, {
  3.760215473895728*^9, 3.7602154762553673`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Table", "::", "iterb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Iterator \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"n\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"N\\\"}], \\\",\\\", \
\\\"N\\\"}], \\\"}\\\"}]\\)\[NoBreak] does not have appropriate bounds. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/iterb\\\", \
ButtonNote -> \\\"Table::iterb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7602138945564013`*^9, 3.760215393663063*^9, 
  3.7602154776002283`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n", ",", 
      RowBox[{"f3", "[", "n", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", 
      RowBox[{"-", "N"}], ",", "N"}], "}"}]}], "]"}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.760213790219534*^9, {3.760213821860136*^9, 3.760213843463099*^9}, 
   3.760213894562767*^9, 3.760215393673256*^9, 3.760215477610511*^9}]
}, Open  ]],

Cell["The problem function has singularities at multiples of z=1", "Text",
 CellChangeTimes->{{3.760214551406176*^9, 3.760214593491734*^9}, {
  3.760215382889863*^9, 3.760215385081752*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exec", "[", "5", "]"}]], "Input",
 CellChangeTimes->{{3.760213905033188*^9, 3.760213907962161*^9}, {
  3.760215485328443*^9, 3.760215486790649*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"-", "5"}], "ComplexInfinity"},
    {
     RowBox[{"-", "4"}], "ComplexInfinity"},
    {
     RowBox[{"-", "3"}], "ComplexInfinity"},
    {
     RowBox[{"-", "2"}], "ComplexInfinity"},
    {
     RowBox[{"-", "1"}], "ComplexInfinity"},
    {"0", "ComplexInfinity"},
    {"1", "ComplexInfinity"},
    {"2", "ComplexInfinity"},
    {"3", "ComplexInfinity"},
    {"4", "ComplexInfinity"},
    {"5", "ComplexInfinity"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.760215404043128*^9, 3.760215487717423*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Residue", "[", 
  RowBox[{
   RowBox[{"f3", "[", "z", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7602152860408*^9, 3.760215301180819*^9}, {
  3.760215438234107*^9, 3.760215438504466*^9}}],

Cell[BoxData[
 FractionBox["1", "\[Pi]"]], "Output",
 CellChangeTimes->{3.760215302230398*^9, 3.760215439477726*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"9.", "  ", 
  FractionBox["1", 
   RowBox[{"1", "-", 
    SuperscriptBox["\[ExponentialE]", "z"]}]]}]], "Text",
 CellChangeTimes->{{3.7601007106237917`*^9, 3.760100727397579*^9}, 
   3.760100806905735*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f4", "[", "z_", "]"}], "=", 
  FractionBox["1", 
   RowBox[{"1", "-", 
    SuperscriptBox["\[ExponentialE]", "z"]}]]}]], "Input",
 CellChangeTimes->{{3.760216502152845*^9, 3.7602165134642143`*^9}}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"1", "-", 
   SuperscriptBox["\[ExponentialE]", "z"]}]]], "Output",
 CellChangeTimes->{3.76021689014004*^9}]
}, Open  ]],

Cell["The problem function has a singularity as described below.", "Text",
 CellChangeTimes->{{3.760216757856007*^9, 3.76021676671701*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"1", "-", 
     SuperscriptBox["\[ExponentialE]", "z"]}], "\[Equal]", "0"}], ",", "z"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7602166581084747`*^9, 3.7602166772162447`*^9}, {
  3.7602167149210443`*^9, 3.7602167152383833`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"z", "\[Rule]", 
    RowBox[{"ConditionalExpression", "[", 
     RowBox[{
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
       RowBox[{"C", "[", "1", "]"}]}], ",", 
      RowBox[{
       RowBox[{"C", "[", "1", "]"}], "\[Element]", "Integers"}]}], "]"}]}], 
   "}"}], "}"}]], "Output",
 CellChangeTimes->{3.760216678756207*^9, 3.7602167162121696`*^9, 
  3.7602168953184757`*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Residue", "[", 
  RowBox[{
   RowBox[{"f4", "[", "z", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"2", " ", "\[Pi]", " ", "\[ImaginaryI]"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.760216576550436*^9, 3.76021658826013*^9}, {
  3.760216875306122*^9, 3.760216879225399*^9}}],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{
  3.760216589317206*^9, {3.760216880339531*^9, 3.7602168998223543`*^9}},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"11.", " ", 
  FractionBox[
   SuperscriptBox["\[ExponentialE]", "z"], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"z", "-", 
      RowBox[{"\[Pi]", " ", "\[ImaginaryI]"}]}], ")"}], "3"]]}]], "Text",
 CellChangeTimes->{{3.7601007329504642`*^9, 3.760100764267166*^9}, 
   3.760100816649246*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f5", "[", "z_", "]"}], "=", 
  FractionBox[
   SuperscriptBox["\[ExponentialE]", "z"], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"z", "-", 
      RowBox[{"\[Pi]", " ", "\[ImaginaryI]"}]}], ")"}], "3"]]}]], "Input",
 CellChangeTimes->{{3.760216942731821*^9, 3.760216953859522*^9}}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", "z"], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Pi]"}], "+", "z"}], ")"}], 
   "3"]]], "Output",
 CellChangeTimes->{3.760216955418193*^9}]
}, Open  ]],

Cell["\<\
The problem function has a singularity at the multiple root shown below,\
\>", "Text",
 CellChangeTimes->{{3.7602171548977413`*^9, 3.760217171575938*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Pi]"}], "+", "z"}], ")"}], 
     "3"], "\[Equal]", "0"}], ",", "z"}], "]"}]], "Input",
 CellChangeTimes->{{3.7602169669473124`*^9, 3.760216981326174*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", 
     RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", 
     RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", 
     RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.760216982550128*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Residue", "[", 
  RowBox[{
   FractionBox[
    SuperscriptBox["\[ExponentialE]", "z"], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"z", "-", 
       RowBox[{"\[Pi]", " ", "\[ImaginaryI]"}]}], ")"}], "3"]], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"\[Pi]", " ", "\[ImaginaryI]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.760217001812694*^9, 3.76021703226052*^9}, 
   3.7602171133091183`*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["1", "2"]}]], "Output",
 CellChangeTimes->{3.760217033456237*^9, 3.760217117287565*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["\<\
14 - 25 Residue integration
Evaluate (counterclockwise).\
\>", "Text",
 CellChangeTimes->{{3.760100881428996*^9, 3.760100902098731*^9}},
 Background->RGBColor[
  0.9600061036087587, 0.9600061036087587, 0.9600061036087587]],

Cell[BoxData[
 RowBox[{
  RowBox[{"15.", "  ", 
   RowBox[{
    SubscriptBox["\[ContourIntegral]", "C"], " ", 
    RowBox[{
     RowBox[{"Tan", "[", 
      RowBox[{"2", " ", "\[Pi]", " ", "z"}], "]"}], 
     RowBox[{"\[DifferentialD]", "z"}]}]}]}], " ", ",", " ", 
  RowBox[{
   RowBox[{"C", ":", " ", 
    RowBox[{"|", 
     RowBox[{"z", "-", "0.2"}], "|"}]}], "=", "0.2"}]}]], "Text",
 CellChangeTimes->{{3.7601009053320513`*^9, 3.760101016452259*^9}, 
   3.760101248159931*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell["First I will investigate the singularities.", "Text",
 CellChangeTimes->{{3.760220801255185*^9, 3.7602208159456463`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "\[Pi]", " ", "z"}], "]"}], "\[Equal]", "0"}], ",", 
   "z"}], "]"}]], "Input",
 CellChangeTimes->{{3.760220836085622*^9, 3.760220860488398*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", 
     RowBox[{"ConditionalExpression", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"-", 
          FractionBox["\[Pi]", "2"]}], "+", 
         RowBox[{"2", " ", "\[Pi]", " ", 
          RowBox[{"C", "[", "1", "]"}]}]}], 
        RowBox[{"2", " ", "\[Pi]"}]], ",", 
       RowBox[{
        RowBox[{"C", "[", "1", "]"}], "\[Element]", "Integers"}]}], "]"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", 
     RowBox[{"ConditionalExpression", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         FractionBox["\[Pi]", "2"], "+", 
         RowBox[{"2", " ", "\[Pi]", " ", 
          RowBox[{"C", "[", "1", "]"}]}]}], 
        RowBox[{"2", " ", "\[Pi]"}]], ",", 
       RowBox[{
        RowBox[{"C", "[", "1", "]"}], "\[Element]", "Integers"}]}], "]"}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7602208609555883`*^9}]
}, Open  ]],

Cell["I can put together a plot of the path of the integral.", "Text",
 CellChangeTimes->{{3.760220515596615*^9, 3.7602205502667713`*^9}, {
  3.760222715481689*^9, 3.760222719760157*^9}, {3.7602228438972197`*^9, 
  3.7602228508720293`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p4", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"0.2", " ", 
         RowBox[{"Cos", "[", "t", "]"}]}], "+", "0.2"}], ",", 
       RowBox[{"0.2", " ", 
        RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
     RowBox[{"Epilog", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "0.013", "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.2", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Re\>\"", ",", "\"\<Im\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.760221707638668*^9, 3.760221720790354*^9}, {
   3.760221786204471*^9, 3.760221803802328*^9}, 3.760222751222725*^9, {
   3.7602229988177137`*^9, 3.7602230250782022`*^9}, {3.76022310106673*^9, 
   3.760223101225719*^9}}],

Cell["And generate a plot of the singularities.", "Text",
 CellChangeTimes->{{3.7602239484224577`*^9, 3.7602239698118353`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p1p", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Re", "[", 
          FractionBox[
           RowBox[{
            FractionBox["\[Pi]", "2"], "+", 
            RowBox[{"2", " ", "\[Pi]", " ", "n"}]}], 
           RowBox[{"2", " ", "\[Pi]"}]], "]"}], ",", 
         RowBox[{"Im", "[", 
          FractionBox[
           RowBox[{
            FractionBox["\[Pi]", "2"], "+", 
            RowBox[{"2", " ", "\[Pi]", " ", "n"}]}], 
           RowBox[{"2", " ", "\[Pi]"}]], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Red", "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.760221127822549*^9, 3.760221141424674*^9}, {
   3.76022117759155*^9, 3.7602211839418697`*^9}, {3.760221234605928*^9, 
   3.760221234788288*^9}, {3.760221318837222*^9, 3.7602213419783497`*^9}, {
   3.7602215936587257`*^9, 3.7602215960407267`*^9}, {3.760222226622052*^9, 
   3.760222258150098*^9}, 3.760222746326887*^9, {3.760224344350918*^9, 
   3.7602243540686483`*^9}}],

Cell["\<\
Since in this case the singularities have only real components, the two list \
plots have the same output, and it is not necessary to deal with them both.\
\>", "Text",
 CellChangeTimes->{{3.760222620966975*^9, 3.760222637973181*^9}, {
  3.760222878838572*^9, 3.760222887006266*^9}, {3.760223998611639*^9, 
  3.760224018816968*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p2p", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Re", "[", 
         FractionBox[
          RowBox[{
           FractionBox["\[Pi]", "2"], "+", 
           RowBox[{"2", " ", "\[Pi]", " ", "n"}]}], 
          RowBox[{"2", " ", "\[Pi]"}]], "]"}], ",", 
        RowBox[{"Im", "[", 
         FractionBox[
          RowBox[{
           RowBox[{"-", 
            FractionBox["\[Pi]", "2"]}], "+", 
           RowBox[{"2", " ", "\[Pi]", " ", "n"}]}], 
          RowBox[{"2", " ", "\[Pi]"}]], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.760221460102253*^9, 3.760221480739915*^9}, {
   3.7602216017450123`*^9, 3.760221606248445*^9}, {3.760222489467598*^9, 
   3.760222497990115*^9}, 3.7602227396638937`*^9}],

Cell["\<\
There is only one singularity inside the integral\[CloseCurlyQuote]s path, \
the one at z=1/4+0\[ImaginaryI]. I can show both plots together.\
\>", "Text",
 CellChangeTimes->{{3.7602227867247267`*^9, 3.760222824849677*^9}, {
  3.760229306792528*^9, 3.760229314288134*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"p4", ",", "p1p"}], "]"}]], "Input",
 CellChangeTimes->{{3.760221491864414*^9, 3.760221505123547*^9}, {
  3.760221736246048*^9, 3.760221736828031*^9}, {3.7602225225103483`*^9, 
  3.760222523212537*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
lP4HKAHGXw==
      "]]}}, {{}, {{}, 
     {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6], PointBox[{{-4.75, 0.}, {-3.75, 0.}, {-2.75, 0.}, {-1.75, 
       0.}, {-0.75, 0.}, {0.25, 0.}, {1.25, 0.}, {2.25, 0.}, {3.25, 0.}, {
       4.25, 0.}, {5.25, 0.}}]}, {}}, {}}},
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Re\"", TraditionalForm], 
    FormBox["\"Im\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    PointSize[0.013], 
    PointBox[{{0.2, 0}, {1, 3}}]},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-1, 1}, {-1, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.760221505650193*^9, 3.76022161278942*^9, 3.7602217376867332`*^9, 
   3.760221814340466*^9, 3.760222524358212*^9, 3.760222579917082*^9, 
   3.760222755229871*^9, {3.760223015059473*^9, 3.760223034194973*^9}, 
   3.760223072287409*^9, 3.760223106418194*^9, 3.760224362869137*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Residue", "[", 
  RowBox[{
   RowBox[{"Tan", "[", 
    RowBox[{"2", " ", "\[Pi]", " ", "z"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"1", "/", "4"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.760223224722475*^9, 3.760223251775916*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["1", 
   RowBox[{"2", " ", "\[Pi]"}]]}]], "Output",
 CellChangeTimes->{3.760223252836049*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["According to numbered line (6) on p. 723,", "Text",
 CellChangeTimes->{{3.760223316709299*^9, 3.760223328050942*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[ContourIntegral]", "C"], " ", 
   RowBox[{
    RowBox[{"f", "[", "z", "]"}], 
    RowBox[{"\[DifferentialD]", "z"}]}]}], "=", 
  RowBox[{"2", " ", "\[Pi]", " ", "\[ImaginaryI]", " ", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"j", "=", "1"}], "k"], 
    RowBox[{
     RowBox[{
      UnderscriptBox["Residue", 
       RowBox[{"z", "=", 
        SubscriptBox["z", "j"]}]], "[", 
      RowBox[{"f", "[", "z", "]"}], "]"}], " ", 
     StyleBox["where",
      FontFamily->"Charter",
      FontSize->12], 
     StyleBox[" ",
      FontFamily->"Charter",
      FontSize->12], 
     StyleBox["j",
      FontFamily->"Charter",
      FontSize->12], 
     StyleBox[" ",
      FontFamily->"Charter",
      FontSize->12], 
     StyleBox["to",
      FontFamily->"Charter",
      FontSize->12], 
     StyleBox[" ",
      FontFamily->"Charter",
      FontSize->12], 
     StyleBox["k",
      FontFamily->"Charter",
      FontSize->12], 
     StyleBox[" ",
      FontFamily->"Charter",
      FontSize->12], 
     StyleBox["covers",
      FontFamily->"Charter",
      FontSize->12], 
     StyleBox[" ",
      FontFamily->"Charter",
      FontSize->12], 
     StyleBox["the",
      FontFamily->"Charter",
      FontSize->12], 
     StyleBox[" ",
      FontFamily->"Charter",
      FontSize->12], 
     StyleBox["number",
      FontFamily->"Charter",
      FontSize->12], 
     StyleBox[" ",
      FontFamily->"Charter",
      FontSize->12], 
     StyleBox["of",
      FontFamily->"Charter",
      FontSize->12], 
     StyleBox[" ",
      FontFamily->"Charter",
      FontSize->12], 
     StyleBox["relevant",
      FontFamily->"Charter",
      FontSize->12], 
     StyleBox[" ",
      FontFamily->"Charter",
      FontSize->12], 
     StyleBox["singularities",
      FontFamily->"Charter",
      FontSize->12]}]}]}]}]], "Text",
 CellChangeTimes->{{3.760223353987444*^9, 3.760223500820539*^9}, {
  3.760223670391705*^9, 3.7602236942210693`*^9}}],

Cell["So in this case it is just a matter of", "Text",
 CellChangeTimes->{{3.760223752057362*^9, 3.760223758608884*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", "\[Pi]", " ", "\[ImaginaryI]", 
  RowBox[{"(", 
   RowBox[{"-", 
    FractionBox["1", 
     RowBox[{"2", " ", "\[Pi]"}]]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.760223763797771*^9, 3.7602237902950087`*^9}}],

Cell[BoxData[
 RowBox[{"-", "\[ImaginaryI]"}]], "Output",
 CellChangeTimes->{3.760223791545656*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"17.", "  ", 
   RowBox[{
    SubscriptBox["\[ContourIntegral]", "C"], " ", 
    RowBox[{
     FractionBox[
      SuperscriptBox["\[ExponentialE]", "z"], 
      RowBox[{"Cos", "[", "z", "]"}]], 
     RowBox[{"\[DifferentialD]", "z"}]}]}]}], " ", ",", " ", 
  RowBox[{
   RowBox[{"C", ":", " ", 
    RowBox[{"|", 
     RowBox[{"z", "-", 
      FractionBox[
       RowBox[{"\[Pi]", " ", "\[ImaginaryI]"}], "2"]}], "|"}]}], "=", 
   "4.5"}]}]], "Text",
 CellChangeTimes->{{3.7601010508286657`*^9, 3.760101107094976*^9}, 
   3.7601012597590227`*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell["First I will investigate the singularities.", "Text",
 CellChangeTimes->{{3.760224487857809*^9, 3.760224493638793*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Cos", "[", "z", "]"}], "\[Equal]", "0"}], ",", "z"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.760224514550556*^9, 3.760224527097452*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", 
     RowBox[{"ConditionalExpression", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         FractionBox["\[Pi]", "2"]}], "+", 
        RowBox[{"2", " ", "\[Pi]", " ", 
         RowBox[{"C", "[", "1", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"C", "[", "1", "]"}], "\[Element]", "Integers"}]}], "]"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", 
     RowBox[{"ConditionalExpression", "[", 
      RowBox[{
       RowBox[{
        FractionBox["\[Pi]", "2"], "+", 
        RowBox[{"2", " ", "\[Pi]", " ", 
         RowBox[{"C", "[", "1", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"C", "[", "1", "]"}], "\[Element]", "Integers"}]}], "]"}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.760224527959964*^9}]
}, Open  ]],

Cell["I can put together a plot of the path of the integral.", "Text",
 CellChangeTimes->{{3.760224552845023*^9, 3.760224560882526*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p5", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"4.5", " ", 
        RowBox[{"Cos", "[", "t", "]"}]}], ",", 
       RowBox[{
        RowBox[{"4.5", " ", 
         RowBox[{"Sin", "[", "t", "]"}]}], "+", 
        FractionBox["\[Pi]", "2"]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
     RowBox[{"Epilog", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "0.013", "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            FractionBox["\[Pi]", "2"]}], "}"}], "}"}], "]"}]}], "}"}]}], ",", 
     
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Re\>\"", ",", "\"\<Im\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "10"}], ",", "10"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thickness", "[", "0.004", "]"}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7602245850478992`*^9, 3.760224652074381*^9}, {
   3.7602246837291517`*^9, 3.760224744524838*^9}, {3.7602251324557667`*^9, 
   3.760225161556302*^9}, {3.7602252808555*^9, 3.760225281117434*^9}, {
   3.760225327891177*^9, 3.760225328530724*^9}, 3.760225845566553*^9}],

Cell["And generate a plot of the singularities.", "Text",
 CellChangeTimes->{3.760224869312808*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p1p", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Re", "[", 
          RowBox[{
           FractionBox["\[Pi]", "2"], "+", 
           RowBox[{"2", " ", "n", " ", "\[Pi]"}]}], "]"}], ",", 
         RowBox[{"Im", "[", 
          RowBox[{
           FractionBox["\[Pi]", "2"], "+", 
           RowBox[{"2", " ", "n", " ", "\[Pi]"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Red", "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.760224924509184*^9, 3.760224942705126*^9}, {
  3.760225652145681*^9, 3.7602256526719847`*^9}, {3.76022568512601*^9, 
  3.760225685357883*^9}}],

Cell["\<\
This time, since the plotted points differ, it is necessary to look at both \
plots.\
\>", "Text",
 CellChangeTimes->{{3.7602257425542517`*^9, 3.7602257742644978`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p2p", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Re", "[", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["\[Pi]", "2"]}], "+", 
           RowBox[{"2", " ", "n", " ", "\[Pi]"}]}], "]"}], ",", 
         RowBox[{"Im", "[", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["\[Pi]", "2"]}], "+", 
           RowBox[{"2", " ", "n", " ", "\[Pi]"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Blue", "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.760225014718087*^9, 3.7602250234044027`*^9}, {
  3.7602256566396837`*^9, 3.760225657007551*^9}, {3.760225689085874*^9, 
  3.760225689301663*^9}, {3.7602257800503607`*^9, 3.760225796775638*^9}}],

Cell["And show both plots together.", "Text",
 CellChangeTimes->{{3.760229275474106*^9, 3.7602292812899103`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"p5", ",", " ", "p1p", ",", "p2p"}], "]"}]], "Input",
 CellChangeTimes->{{3.760224961164177*^9, 3.760224969871257*^9}, {
  3.760225092777491*^9, 3.7602250950814333`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.004], Opacity[1.], 
     FaceForm[Opacity[0.3]], LineBox[CompressedData["
1:eJw123k4Vd8bKHDjOWZnm9OkSZKEUAlrmWUsQyFRhpIpJPqaUggNKhVRZCiJ
MmZI2ItMIfM8z4TMwzHf/Xvuveef83yevfc5e631vu969x/7gNVtA1s6Ghoa
d3oamv99/98PF+I7oWq0cWANrHZo1m/tYKj+d4SzxzYVGEwfUlglHKcb9nK+
iwpcm8PPTxMOjqkvd8yjgtgzb5d6CGtF73BPvKICrP204m/C1vt+BVq7UMGI
l4dwJuHBjWKhfh0qEKI1+/aasPJ65JzZMSrIuPy36Q7hoJaFzTZGKrDxFYvU
I9wo665nOLQK5h6IrR8m/F8h+ldfvAr+Bi1urGxjaPufz7DOu1VQUvD0fRnh
AkXdM9Weq6DciqHnGeE5lrYlDaNVsKfxZoEB4cQ3Pw9USKwCv3gxo/otDOXe
PDH76+8KmN/6xhlMeD2RNl6lYgX48V6xlyOsE1g6+ithBegfCtx6tYkhzbi3
WhVXVsCRaBFZOcKVWUvemmdWgOSf8xw9Gxiq46qxquFZAS1CljFchGnC3e40
/1kGTzUCjT6vYyhNODTNJGUZfJMNST1NOG/2Y0nfo2UgIxl9VnsNQxpt7uH/
wDLQf3KwU2EVQ/vDhBv4spZAl7tbePoKhtJxgaLEsCWgbvZ2eg/hCy93V0o6
LAE0uRwwuYShqvVmo4uHl8Avl4MqFxcwJMT/SPNDxCJg51Ujx81jSPHiXU7Z
O4ugYeee0+QcsV7g9pk6/UUw718h5DaLIQap9SY65kXQFUUR0Z3GEOVx1G4/
7wVgfquO9r8p4veq2EeETBZA/5899+MmMfRdxdWwXHoBeB0DtkMTGLoz6XKe
e2YehF2NG5UcxZDceZGAsmvzoOKf/+ROD4b8Xb9mBajPgXs2DJJ13Ri6fV1k
l57QHOC80nMlsgtDh9ZUhGWXZkFL34ylYAeGDKIDuv67Mgvwz9nHh5swJFs5
0q4sOgMeb0kc9a/E0Cu2dvmZqing/6Srf7McQ7YFxt/7faZAzjG+APcyDL3g
yUxvlyCOLzI+MSrB0CZpLaT77SSg/XTrW3sBhmavKQnL3PoLBDe5kya/Yojq
XMWkwjoOTo0kAb5UDH0ddJpKwsfAuUTfGvkvGDpluPSVy30MFFXyFnp9wpDw
K8FDdL2jwMBzN6UgBkOuNiFnVNJHgOLNMFqNZxi6VLsxes14COgqH1GPtcNQ
rYy7s9LFbvDlq52Q4Q0MSUf9PipV0QUeDvUl0tsQ6+dUriZzrgsIVGUlX7bE
0ESPvtydI51A+rNFQY0xhg4bk+sb19uAx6OHgSNKxPn39wyd/tIEZm7oHezl
w5BJVASj5PEy8PDVK2MmHmI8p/WlJQV/gV6Bl+onMWI9a679smAuBb+9ntm4
sGIIcesfedSAgwu7Mz/iOxQkVNlXeftCHrAa0OwKH6cgGorkiGNIFGD1Pe2J
facgKJF51/fkT1wxRqeoIoOCJDKD7ibLFeGLkoD+3jfi+lpnzFENx197/31Z
l0Qcp5V63fu1BE+4X9KgHUVBdu3a4TnF5TgHVeBJsC8F+S+lvTPo+IPfdeft
ZFahoMM8lY8r59rwR15BuRBQkEtj44qgSzte+Zsp/c45CjJREfx6YbYdL+Of
XfpzioL2zLjfs/rXgS/eWv1neJiCChlNVPdMdOEjS5O2SQzE/dwaFapr78NX
TBa0OgI50WspZcGv+sO4qv8gQ6Q3J2JQ+DAXET6Mswmm9eq4cSIXRn8e59Zh
vIX/6kqMJSdyP22/NmA2gl/TZuNoO8uJeizsjrXbjOKjGynicdMcSCizCy25
j+NT0NsjXZsD8QRzLrkFTeGHhbL1LytxoLfoqvWv8in8+c6tuBVZDrR54GDD
FuM0fteQ7fvugxwouTXGVOLRNH6jKm1lZ5UdiUhkST0O+ofP7Y8NOpXAjsSC
nqnS+s/i4+sHRczn2JByltVZlDmPS3yviP45yoaS+6Tj7evm8d6lQ0vc3WzI
TyHXh2VqHt9HH2SbXs6GJgqS3UQPL+Ddrm+fvoxmQ44p7BGTbxbwpIsOgFGF
DYnR+Mbbei7ip7EtsaIwVsSQK/KUT2oZZ7ZwTlEMYEUpoS5b13WXcY6Fb7Y/
PFkRV+ozUoLdMh77eiou+horivgbUL4Tu4z3zZO82KRYkY9XwjlJ1hW868Sl
sxnNLGizjiR/Y3AFT2x5d4mNiwVx3dHDJwOpuMji1cEsBhZUnfBafjSOip8q
uzt5cZUZuTNHWDQWUnE+sV3B//UwI/O7b1z8lqi4YXz1pdtJzCgufHNK1HoN
P/6p8Cf1DDNqm+84X6GwjkdXUOxjTZhQbT5Dbf34Bk4jrm1trsWEpHXTI2Zp
N/FH9/8z45ZnQvlDD9lo9mzieuckDB33M6FwlTfdC/qbuKDy1GD1KBmljczJ
7M/bxBP+6gkqupKRtKyPxdOHW/ipl71PBANIyGjPQEAQ+w7+RHHvqro7CbWI
+XWfO7KD/xcxcMjJloQKbhU9HZLfwS/13mtK0iAh0nbLII3jDs72aXu1npWE
LogYffD/vYO7TLqzbIUzIrG5FItfkAYJmJ9o63/PgNRDBMLQAg2qGzv6SucZ
A9Ki/7D/3RYNMnbForJ9GZDbVcb/nJhoUUEE20sXCwbEcMfec20vLTqL/Zea
tJ8BdXcO66Vp0iLeJ5tXyfH0iMnqeVPIe1p02bo5+ccHOiR1OHxlWoEOneJg
H33+gg6dPybjyqVBh55RriRef0CHtA4Z3ZW4QIee3h77vmpFh/RbpbFLxHeQ
WXv4zBE6lJIkbqbxiA6lloR6sKTSItv7tjqolg65WN1c5cmiQa3iC9ObhvRo
bTso2SqBBnmOnHY/aU6Pmvq1DL+G0yC8flrJzIYeKZlsfTx1hwbJRxcnv3Wn
R6dSvidySdOguMOHnPJf06OWaL46UfsdPMvskNDDZnoUPBi08tJuC6+gbWaV
1GZAzW3P+++rbeEic78lGQwZkN+lNHfbg1v4prXC5h8zBnRqcW8Nf88m3vYS
v6tmTxxn3IaCxDorX6kr+hXCgMpVWAQ/nNrAlaUq8Y1fDKj6pJ7S7AoVfy0+
yqh9ihFdPv9caqyJirMIXv04c5YR3ZJp4W5Lo+JNRh8+hUBGVPfrbn3cDSo+
LUv3+4MuI7JJ69Eabl3F1Z9ctjS7yYgS1CsvHclewVvW5k/tvGVEEhV7tcbs
lvD8W/DKxhIjsS/Q8D9UX8JDtsNmWdcZkd2dsR6Bw0u4XaTcIvcOI3o30n33
dP8iHuv/TYWFmYRUVhNrzhov4h9no8ae7yEhzUkYaAYXcDldTZFtJRLqwpuG
v+xdwN3CrhwIUiehb6e9y5fW53HVpFYPem0Sse/6SvrmzOPTEU+kxgxJaFP6
YYyp6Dx+WN6wToWI2xK9vwaa3HN4dQj9F4tHJKQsM1z0eWAW3xYOGDd7TELv
1QNmcqNncbaSSFe9MBJKbWjsK+KYxaWaImx2R5AQOPt98PbKP1yojDFV5xMJ
OQ5RPt8pm8Jbmh//ZS0lobH3wInHbwofSQpw8SknIa0sY6u001P4hV120iNV
JDQwwbq/LmUSl7V/czuqnoTeHfpdU/ziL55vceN9dA8JCSeyK7lfGccfcx/f
t7pEQlmPut7y8I3jgoOh0bWrJGSRZuyS3jCGX0o5+yFqnYQ+SPkOtKiN4UNl
Q4qCNGQkGD36euDkKG6vIFqew0JGioO3f1yaHMFrpxtdNdjJ6D0n31DlxxG8
TPVrfAMnGR0SZnj4btcIrij2IuQ3DxlN762uZaYfxi/0JFsZ7yOjn3xhQ6ZF
Q/hSqoNAohAZZb47+uCT5xDOplSmM3GQjDxXdN6dnB7Ehyo4TpoeJaN1/1we
rHUA19lnXdNykow277QbntTpxecC/ZekABnpBLdIXEA9OMXo8GUqJKN9TNOn
7KV78IWALxI5ymQ0HFIm+XhPN77EkqXOq05Gb1cmM32nO/Da6sRFZx0y+gPv
2zpc68B97onRzemSkbwOi5ZhSzve5nU/0E6fjJSsw45zFbbhXJ/3DwMDMmIv
MV/Vf9KCv+6kbgdfJv7fPLWTa6cZpxz1SCgzIepewhFqgxthgWN5VFMyWvPW
uw3MmvAxDbZTGuZkFOvawTL3pxEvbkyPun6VjF6Vq9q9V2rE5d7cdrljQUYl
CY9mJkQacJ4G6OR7jYweaN7/znW2Hh8baQ2/e52MpH6r7NYRqsOvOYcdtbUi
IxPeGwlfZmrw4mfBMaI2ZKRGE6VZ11qN2/Ca+9HYktHekKrQ6cLfuM6y958/
hLkHOib4nlTiZ/h7cvRukhETA7ilZFaBs33pPIHZEetdYPfR9lg57rb/Xthv
wj0K3bMB1F+4W0lAu+ctMmK9uzf+fWUp3pNSw7THnozoO/LYMyJKcK3aAwdz
CbubSj8ptkW49JTZIXUHMjJLYdj3nlyI01xr79FwJCNv/x7/D59+4I9vNb3+
QdhyZTDznUoevt6+X/qAExkFTkibvxz8jhdEJRT4ES4nr4o+uJ+FG7lBkSbC
cinavx32ZuAu64M+u53JSF0mvSzRIxXv+uCWb0Y4o/6Bsl1WEh72aaDrOWEp
h6tWwjPxeMGhvSMFhHkkDy8XG0bjiLynpZuwbeJQ6bGaFzjkaUlZIBxb52gP
WHxxrkFFux3CO9IW+dckrIBetwkb3W0yaituq9aLCQaaagci14njgR091uDy
G/BWNprpL+Fa6wLbxv5YQHlfde0P4a3Zk5YnpD+C0tPfP3wm3Fv75pojNRlQ
426WexIeCcKvfSz8BuRU5xoVCBeOpzPYw0wgb21RvkaMt7WLl843IRtM8JR/
SCUs7+vk+5ghFxioyV03JPzw3OualzfyQVpOG/M8MZ+XFG8phVcVgAubOVGB
hL9H/Tn1RLQIfAxcoXAQPur7cdX7KQ72PP9x+xmxPuOZf+ckVxGQlTyUS0dY
4mD8oQMipcDG2GzEiVjPrAEnRVbTX4DpZ8h6HbH+sl8rpmZDy8CNlS7qEcLq
vw+11RWUg2gX/343Il54zrSweu2pAi3/XtyYuUFGDCFCX9V0f4OySTvyXsKM
l6xPsfhVAyjo/FKJiMfaz81xPv21QOLo2nVHa2J8A4z12w0NIJ/Vf1PTkow+
pxqHqdxqBP79u2eEifwQTlVzCKBtArkJQjXrRD6x9Ek0L0o2g+pX+ZqBZmSU
L5GRHh7eCiTymc33GZNRl4d7RqpoGyhrQlmphmR0McL4v+LSNuD3qnFVnMjn
sn81+Q0L7YCDK02Pn8h3UqmfaqJBFxByzj53W5OMfBL2KZkPdAG7/nvh1UT9
sO/X/sbh3A0e2YiK7FUjo/CkwfOWoT3gksEqlqxERtt2FjWpeB/Yw3hmykiO
+L+Tpd5iuv2g2FZPzf4MGVkcIQV/6uoH+340D3rIkhGZl3hY9hoA78/xjtyV
IqONWo2OW28GQYP6xd2somRkF+SWz9wzCDSHvkV0EfXwyP2Fc58ODoGsmUCT
+CNkdMucOl6XPgSuvWvI5DlARsUagfOTv4cB28Wo6nB+Yv0nPv+Q3RoFbRJl
u/7REfHtJFcYojIGnCPfKUsS9X3dp0SvNXQMbKrE/HTcIiGzXzT9V/nGQRJq
jftN7A/U3o4a0ZMTIEMpTHv3NAktdZ/t+Gg5CVbuJZftayYhicU3vAk/Z4De
neaq1GgSwnh889dJsyAiNpMSSuxvHqNLd7QMZsF02rSSeTgJ0W4f6aubmAVp
ahq2I6Ek9LUq6OX3x3OAL7eh0fseCYWZ1Z23y50Hfd0lV6uI/Va/f/ZiVfc8
kG9/1MigT+xPozxyh2gXwHq+uMppLRLqywy9/1t7Abh7fDviB0loV7RhdtvA
Avh+J5vjtRgJTTDttp1kXgKa66nfB+mI/VnR2n5RfAmEn9DK8ttiROcjhz6u
GC6BfV4S5RiVEX0uZ30+FbMENp9zSQr+Y0QNK8ycYZLLgEnqnu73NkZ0f87R
++vlFWAn5c7AmcyIjBNHLjJ+oAJp7g5zexXi/NVNmshSKqDEZ2pNyzOizoWN
tgNjVCB/lLffRpYRge9XGw6eWAMvqnPo5I4xIqXHk6MNBWtgqfy5nTsHI/q1
ZMnW2rIOvKq/XjjezoCGgITUWfotwOBx/lj6dQb09RHq6DmyBZI0GqOYiX4t
YuPJ7XuaW0DZIHHWzIAB7dF+phH5bAtIXEg2HFJmQAuB5W/c+LfBkKXB2cBD
DOjdf5OXIo/tgMcmKjZ8w/Ro3Z0vMTWRBj4YVmMIvEKPFlNtFy5m08DeIu/V
S0Q/al2vrLBUSgMNdv1UPKhN9Jcl73PFhmjgj0CFxng5elR4CK9zFKKFlC8s
imq76JGoj6e+8HtaKML0dn1fKx0anjONsXlBByXxOl8xol/ev2MgEvCBDgqv
4hPsinTIt//OmZg0Ohjn7Dw5Lk2HLogndf6qpYPstk0FQQfp0D8b04IuJnrY
wVT+x26LFvkZLNce96eHt22is+oyaZHoioeksgMDlNkIfHSMlxZpfmBZZPBm
gKpJoZ80WWiRwPDCRMljBhjcV25tuUOD1m8tWIqmMMBJLqXqO39pkOUhq+3v
EwzQKFs74kwRDeKtFBL6ZsMIuZ9mT0pb06CQMIZbLCYk6Njgu73XYAe/U4Ck
WW+SYILoXvMLcjt4VdubL4weJFig3VjhdnAHX7v21nf8FQkKLd7vC17Yxl3O
lppY1JNgneTx1sWX23ikdOFJXjUyzA9jGej4s4U3aXRcf3ycCfoU9V5iktvE
0wO4YyvOMMHtb7MGtAc3cVrbhMFNNSbY1Gp84h/zJu6vnON6+RoTvBQ18Dqm
cwO/Zt5pVvaaCWbJzrdev7eBb/Xr3PfaZIKlCs+tfLPX8Yp7rxuVKpnhxG10
7bjQGq5XXlye38wMfZ65jz4hreGb2v+uHBtghm0+kWwD01ScVY7HapXKDEPu
+V6x/kHFlaQ5/NVFWWDPg6JvbRepuEMni3naExZ4Br0ouuu/ivsfo2Q/P88K
7WhWFkpblnF9ddv5E5dYocTr+ADLvGW8iotdvcyKFRp5/wyciVrGZfaUHer0
ZoWbxUbrwxbL+H9G5tqJ31ihzunMhBMTS7iYrvjRXE42+L7wlqsKdRG3nal1
KPrDBh9LtO/K5VjADxkah1/uZIMVTgVBmbPzuP6p/ZZ/R9iguKSwV1zDPK4d
xtO3uMEGY4+/EjINn8cjX5ryfDzGDpPIt6/J8s7jDN8n/Z0D2KFR8dmYZIE5
nJb3bMNrCQ7oQvf4jcmJadz13xHHaTkO2HI58kTgvymcpab+7Tk1DjiR6r8U
9W0Kr/TufotMOSCPj/KlwBNTuPeB3mGbhxwQJhpaXBKbxK0uJ57gaeKAr83a
5XaOTOByXs566/accI9XlOgw8wiuVns1RtGdE/Jkisd6Vg7jB1xij3j5ckKh
ieRH1MBhXFW3qr3tOScUcAmhQTtD+L4TZ7yFv3NCn+zKuJtLg/gLRsfHezY4
YcidoTbD7/34rzM/jI8pUaBIb+ba5sl23NvhR92KKgUe3nBPLU9vww+IXTFC
mhRo7hXi6nKyDZ+MbHugcYECM57q5TmKt+JaGcd0hC0p8MyBr6/ojzfjjrL6
rYd9KPCF4+XFJwp1eMzo34/7sylw7t+Nzonyn3iofOamYy4FUgZyHJjzfuAm
f5+q5f6gwAbdoV2ln/PwecGLn+URBV54yF29FZyNB+8svBb4Q4FxnrvpTIOT
cLYJNge2MQpEub0ZcRZvgLGcRnUfDwYvkPwtqux/gScdPj9H+DGY4f6iZiqs
DHjtiq0ZFcRgSP+vYuXscsBWJ6vWKYRBf6Wff0M3K4HVEb5HQWIYZBJpOeH+
shYc/1YTtKCMwfyg+Oenh5rAlxdDtClqGJwOq+xovNsMelxbnptrYtC8TEA9
gLkFmO+X7cvSxeA12tcjopKt4MbXgpOHTTBYpTASHvKgHVx9kUuzy5HwA5Ru
ItwDDB6dUHrgjEE2ngj7iz97wD2u9uARFwy6x/N+tLjQC27fZD7y/i4GC+N6
J3K8+sDEmvjTej8MUsudQo7ZDQCtkvM+6i8wOPcRKL3EhwBnzN5PLukYVEiI
Y1l2HwcWb3quCWZi8MFOUNGTn+Pg9/m4HDwLgzWeb1iO0U0AtsRXIls5GEww
mBDzfD4BwIdVEZVC4vdq1j9ZpvwFU20FChuVGCy5mEBrMDgFYvnJVyx+Y5Bc
K8WvJTIN6k30WIuqMdj0i/JN4/Y0kJx0PeT0B4PlMqzchlvTgPlqpcjbJgwe
+crcmbxrBrR9EFTa1YPBpZM/7eKOzYG3/97elOnFoNzVxAuqunPgnd3BPbp9
GBSp5HGYdJkDQ++UxG8PYDDThJ9HIX8OGIyZzvqOYHCCRlBxQ30eaNQ3+XmM
YlA6qK4k3X4ekATOR9uPEb/XTJK8ETYPLv075642gcGIjx5pHa3z4HFB97fy
KeK4vI1Ys80CQIsdEdHTGHz3Rps7ImQB1H5hY3H4h0HPrPBYs68LYFD8fNj2
DAa1eZP8JhYXwEG5DKa5eQw++vragS9gEeRLLSrEL2DwlZyEz2jSItipmd7Q
XcTgXct/f3OqF8E6uykWvYTBoVDhH2ZcS+CjTnLM5goGWfatiWXHL4HeFEaT
4FUM0v2Xv9hetgSS/1lXsFMxGDueUL41vgQywhKL2dcw2KBlektHfBm8ydHQ
DCasUGskevfiMrAxcAvaJLzp19US674MBv9M7epax+DXvYNlSwXLICWN0VV5
A4Px7c/XhPqWQTyzvHcSYarV4RVd2hWg8PBD8vVNDA46mRxJ0VgBij0favIJ
Mygc1ui0XwEnjlnHs24R8+8vzskctgLcbEdsPhK2UjJ2sW9ZAey1vgaThMfr
31Pfra4AcZ6XC8e3Mbizdo+xTnAVMD7lULtFWGjZL4xGcRXIho6fTyDM3qny
5NT1VdBjx0HbTrg33nzxRuAqePLcw568Q9yfpEVx9OdVYHCL59EpwoeMeofr
qlfBr1u9hlcIexc5X6GfWQVzrFXNfoTvc37ecwajAqemGsZYwpQuwf1O0lRg
qjH4N5+we4yFWcJlKri8SetfT9i8llTR7kUFEY9FqgYJj/35bMoeSwV14RdK
ZwnH77SyqZRQgWqRh/Ma4Rd5R9rvjVBB9Y+3tduExdWPZ6SR1wAOcnp2CLtR
vZ6PiK4BTo7a2E3C9bu+OArqrQHpqV6uZcJg5Ty44LoGZD9Nn/n7P/fMbwe9
XgPJ2Aalk3DbPpnEn3lr4Bs7+7sywlH8yYfmu9bAnO/R9lTCX0X6PYW318Bn
vQvlYYR/FztHXjmwDsLvhNk6EVYynPrvheo6oI7/zdMgvOP0l6/85jpITHMo
3Ev4+ect27XH62Ckce+dWWK+96YWWpxIWweh1qw9hYS9z/ykXmtcB/0+cDWI
sLBw2PHXS+tAsTFXlZVwxhqD3JrcBpC34fWsJNZ7nrOZ4bjFBmgUX7lyn7D2
1G918wcb4J5joMIQET8LqcEcRZUbYMLtstwzwm6V/wVMT26AuPbVv6cI3xGY
0t3NsQlyT61edyfisfG/xBIPo02guRYgykE4gsRvlui5CQJ+nE1KJOI5q9xK
uD56EzzgC84rIeK9qK/3zOHBTdCjl61aTeTPQeEp019OW8BY7XG/DOHDbt+Y
R15tATWuQYf3RL7pp4v8R1+wBU5YFpqaLRP3+9PCUZG0DWhK5J9HEfnrcPm2
Z2LsNhBx2f2zh8hvS6YYan7ZNjhisNEpSFhaPW+4dnIboOvR88GzGFSVba6d
ld0B3qKfw44Q9cOmK71YqH4HXFptM4FEfZnoVLMWWd4B5/VG+C9NYvCqFhtH
JDsNjC+Ju+tG1KNhjub6qFM00EZdIs+ZqGdHhW4Pht+ngcUif17d7SbmT6rx
uR4/LYxtbf8DujBIMn/yEIrSwkv7Q2kZOzG4tT55TFKBFl64qnLZvw2Dqwc1
H3BY00J3T6EKuUZivxjRLcpPo4WI5TYJL8cg4nMtrVCjg0U0AeSzZRgUvPPZ
P96EDn7+6sKUVorB6tibsV4OdHBBOZI1FCfqV6Du8NGXdHBmOfwQ/Q9ivLnK
2049dFB/bZqOKRWDFZKk9kQ3eki5kFt68QuRH+FBkQcC6WFJqqp45GcMnhaf
SYx5Qw8rna1ZeD8S46Veev4inx6ecPo91POeiKex+DPXt+mhwO7sezHPMMgl
dIM/JZQBXqlaPZbwBIOaGYffsLxjgN7nNMMSQjG4KHdb8NZXBiiwh94tIgiD
fsLxokL1DNDDoitbyxeDYUetJu/yMEIhkv7rUQcM3uvWkyiMZYSlN22zP93C
oEE67bGNdEZ4RLjn2fWbGPQZsBg9XcIIU8IPe9ZaYZDbTeptyjAjDE2cE71t
isGAXTwu7iIkqNh0NWqC2O+ZvuiejcgkQRV62/b03UT8HBZtXSohQ48t159f
BTBopN9rpt9Chr/XzbI/8hL9xy+bhKQxMjQVgUNBnBgcWG28rs3KBMuyhYzZ
6TG4nRDI4WTEBGk7jppJ/iX6mwynILYxJuiVH/iwJZMCZ5YW9CJJLHA7Xj1N
Jo0CleZWxu4LsEA49IQtPIUCa16XRtkQffTrn0028okU6O7Kd+6gHgv0vr0T
f/k1BXrx5vU4vWGBWwcq4Je7FHhNq2O/8iFW+OuB6ziSJvox50b6n+fYoPO2
A4yVoMDoi4q9NTpsUFsA7PYUo8AxsxmTjqtsMOM+25XdhynwuKPY4ZH7bPCC
fvshcW4KTPm9FFTxiw2+fZVRvjHACUkv7EyztNihUMiRszH6nND5Cd9bRmMO
GGNmy6SgzgmH7J9/fmDLARNW+461yHNC0GBWRr3LAVP6Fp0mjnHCwfRE7o4I
DsjFZqr6hZ4T+tfYhJp1cMDxthf3w3I4ICXjTqe9GSdc+OVgss7FAfO7Eqp1
TlCgy7gFrsBMXIfdIKcT43p+ZW30vx12aN4/3schT4G+pNfePVPsMK2K6XKl
FgXmjTawaJexw0l6VrnddhTI5hffVH+H6N9HLwPdBGJe4uaPhxLPBzTvPzHV
EX2kW903ub+lbFBxJ1lmgFh389LOy8r5bDDcPrp89iCx71JrKvsT2KCKmweZ
LInBz4cDKyo92aC7h/8wL9EHyjOyh+gJsUFSl8XD7EBin+K9lH/ekRUyxDt9
GSLqyn8tbSYdlqxwQNL5ykmirp1uTj1lacgK1UXxn/douGDWsftJxnKscE81
231aTi54/YXfyCiZFWoJfGqbPM4Ff2l9HouIZ4HunBY7grZcsL5M/51RPTPc
53CTb7iFC7pP7jydL2GGG3vnE0q6uWDVyRDx4O/McNdJz5j3Q1ywKcjyxfso
Znj0ckaLxhwX3DpoIOdizQzPiEfy3mHlhnsbtYKLl5kgi2mk1G4lbqKvFXTh
4mWCz+2Hoz9+4YYdxmX7EJkJYn/VpOPSuSHbH9fum+tkiLmW+7zN4YZJLmxP
P/WT4SqNNO/9Em44k8JxtOsLGRotfJY73MkN1Z18Tx5XIMPCHTvsD5kHwqP0
JwMtSdCvVmQszIoHLsx83O91kUQ8X+RE7LXjgXVu+Y/tVUiwybWgKtmJBzLr
CPXJHSVBF47M1O/3eGBzekZ31AwjvNYppJEQxgN3XxdTNfJhhD4T1z41/+CB
9HK0ic2vGOCmD8gPYueFlj17xm4FMUAtlTi1EC5e2ON2QnPDgwFOPG/XC+bn
hb9MJjw4zRiggyhLg9cBXriScqB/az8DfG/q6nhahhcOLGsMLqfQw23DaDLJ
nBdKX3+8x6GIDookeFTMJfHCqxfF1x3S6ODeyZaX/qm8MDG19IbdBzpIJad+
Z8vghUksjBuGD+jgtYeOm7t+8ELP48LuK6p0UPm2jAdTDS/U05n741BDC99y
qB+RnuGFFeZVvpKtNHD8SZcULskHFXoEmkzKaGBk2OKqhCwfZOaqcvfOpoGX
XjzUiJXjgw/vCednvaSBbjjHAwcVPighePPnX10ayCTkfa7BiA+a6cblbzze
AcZb74tLPPjg6tEaAWS1BfR7D1TJ5/HB/641tC6BLfDi2Ndne3/ywVb9aKsD
e7dAB/TIXyvmg0wkPy6r9k3A/PLe2Y8VfPDqIGfvQ+1N0KGjVlPSygd7C9gy
taQ2wHT+T+V9i3wwJ7bF+sw6FTgOmjsYi/LDy/+Stfs7qCA+Kc/f7gQ/VCs2
PeKfRwX6SgL3PCX44aVTXXXp7lTwtHCOOVSWH06o3eqrJPq+JXfLT17K/PDP
azbeocEVwLsneFekKT9UKo0xpP5aAtsobV9GID+88EDY6B/RZ1szx/EpBvPD
U/3eur33l0DZl6yuylB+WDpTop12bgkIv/lVVhfGD3PN71ryZi8Cw6WHnClv
+eGiqNiJnbgF0Bqlu/4mlR+KH2ec8v5vDjgq9kiCOn4ocUP1/KrhHFi+Xjbr
0sAPT2beWncSnwMj5RbJMU38kDatnuZdxSwQ2zpBnmjjh0I6rC+/Rs2A6EdC
9rCfHxa+PeQioTgNxn9YK+3M8MOpe8yJ7xamwI/NTquBOWJ+BqZbtpOmwN7/
8u8WLvBDmVmdp984p4CrVJiT7Qo/3H/VKDlt4C94dZUj0muLH3I8Tntl8GAc
PLqadT2TRQD2FFUMasiMA877s+ZKbAKQO9HksezfMfDraZFSLbsA9NHkVKa5
OAZ6H5yvaKIIwEc6Z9I0hEaBFvu+9AQ+ATjT6S/F0jIC7r1tnWQWEIDyh4vx
iuAR4CZczOa4SwBmT97VEZ8dBgVcYbQH9gjAataG8B9FQ2D3faePugcE4Mfj
yaV6rkOAT26c9PSgANS1u5rSd3gIcD99rlN+SACGC89TZ54MgtynJH8RYQF4
UYqd2mw6ANpOCvpligrArCUFs6C/3SCVxPzij5QAZFn54qNq1g1OlBT4pZwS
gF6ng6s3q7sAV8jC4kNpAdhQ/N3T9Gsn8D+011VYVgA+vMxFV+ncDgwDf2ac
PisAvydI2Rv2twHrXwt/5gjvlhLb06XfBpjm97l8khOAfp83ptskWoHT7wRl
WnkBOJb05ET4QhO4tJy+O0BRAIa+mqpfsmoCM2Z9VwQAMV+cE10GzY0gTCx/
/xfCR1+dLKD93gAsovoki6AAnKw822ZwuAHoqI7dh0oCsDW5qAUcqwf1XpwX
ccL7IYn36mQtiNrS9ElXJsZz6lXhQHUNyL2wt01IRQC+e+9252pqNTik8C7r
GWF+TVNxFccq4K4qsmiqKgCrejZLvupUAhkLhss/CHPYHQ+knKgAnJyHFXjU
BODofbfsyn+/AApteV5I+Py2VMbuulKgpX1uk1ldADKfqlu3TysBJq9eThoQ
djy2uzsnDIGs4+VmkYQn2Uck13qLwcWtMp12wssLl6l+sYXgJuUB4tIQIPpa
9agtiwJg+3Qy5zxh6yO2H+/uzwfUvEUxH8LKco5fxvtzAM/ac+L5UgBqIp4z
RnHZYKEl+0Mz4UXtXQM/r2UCnjmjd1TCBy45WCkqpwEdDnuBXZoCMPmBrsdW
6ReQwzXFJ0N4+pfR7lyVT6B4pyFCh3D09W2XW2Vx4Ogq71tLwqmjL09IPn4L
GOVyBJ0Jxzk1ZHDxPwclIqn77hHu4Kd75HHKCwiqLCf6EjY/vrvEN8waPyIS
nuJHOCKXboo68AjXjXgg5U04ySDysvDt1/glh7Jzdwjzr1nvr3GKwc0+mlfc
ICwdv6guLZuIV17VbTImLOCDSfnlfMZtmqMtIeH0j88kS6W/4uevaTkLE/Zo
Ww7fMc3Ah/2stsmEH7h3rEZFZeEzVZOco8T4o69k5Z3s/I57rU4lFBH+Y12l
jATy8L6h23kvCS9lXmPWNvmBlzx8oHudcEx3qXd95E8cmxGzFSO852VQ+HVW
hG/uC96VQ6yX03OvBvcjJfjLKyEc7oSFjg7NBYBSvP88Y5Y4YZ0RherXd8rw
8J4chkgiPg7sqd9486wcL5xg/65K+KAUO2345wp8v4co1wwRX32G7Z7/dVfh
qlqM3acIZ19jsbJZ/o3TqsypNRDx6eh8BjvPWYP3C61Z2hG2ejGcvq38Bz9j
/Dv+CRHfES6SZcytDTj7AUvLWCI/xF1FooeuN+ILD08QdyMAA2kw1byZRtzm
/HbPMyKfwp4+fGrI1Iw7zortdiTyL0A5R8HoXCseQ5/Qu3ROAH5t36FhqmrF
7dIsNXUIqwrNheYateH/eavbfCDyOd0uy5beuR0XfiibcYbId5Old69M4jrx
mzoOMaeJ+jCQ+bepT6wLp7bJRDjKEPXhzeBvix9duIhzuFIMUU+MbP5d1m7q
xnU6fmfME/WHJPxetZm+D1+lH1m5cZK4vuryy0Mv+vA5ocnQ/8QF4ONHB0Mc
9/TjbdonGoNPCECL9XcrdwQH8Iejhr6Rx4nxRwXdQVKDeGHET4OAo0R95J6x
/31vELcwlQ+7Q9S/gukqibriQfylyPh9yyMC8PiHmJFqrSF8c7PskShRL03N
3fmeWw3j1KcHRJ/tE4BBZ5YWT70cxWXUiklBPALwxzObmc6eUTwyQbOUm1sA
isRoFv4nMoYntL/3jMEE4K1hGt8kfAy3ptFujOcg4u3AF/msf+N47dnPOs5M
AvCLfQaHv+Yk/t1Hp5Jvgx/Gz3xU+vFqEqcp2mVkvMYPpc+cW5zsm8QvrC4P
hq3yw9o2C9/Td6fwi4J9dIuL/NAl1bPbLX4aJ+nV37w/zQ9fRi/LXKPO4J9T
RmW+9PBDs6Tv1vwqs3inTz/X2y5+aMVhVVT+bBbneR6x9qCDH7rJ8DcEYHO4
3vGoMfUWfuh8q2UyLGkOP5lWqf+mhh+K0VXXovp5nN5i96TqD35Y7vZr7vy+
JXyI/+LQ4gt+uGTcw/0SLuExnqMid4j9HLsXe67Zagmnnyk4OfOEH7rr23tq
fl7CLX9/9G9/xA+T0+99Xz65jGNXKEqePvyQhWI+ZQhX8GqVV7VTN/hh8YuK
qhFzKu4ec7zy2xl+6Jgupe7jR8XPNDhfTZLhh8qZIkXscVQ8l7fmd7QUP9S6
+NVj3zAVd5qtO+opxg9XQs9Jrtit4bKlChzb+/lh2rfycM8763jgyQFJNRI/
nPd1rQ0J2MTtuOvciuv5YNsncx32z5t46El9MF7DB29o3QgKrd7EDaoS1Vmr
+GBkZduaHbaFZ9sqsqghPnh2Gf9TGruFT3JUBt7P4INVtKaynXnbeBgDjyb2
gg8ql+0T/ORKgxxsYy5laPPBiCMTvJ0PaVDWeZoSZQ0+OGqfpsP0mgaxZQc/
bVDmg6j28mWTXBp0IVJEp+8sH8wf8bhUvE6DHtVsviw9Spzfq50a85AWcbRH
W6TT8cFTucIewWF0yOSBvMehHF6ozvSBtTaWDuWq/ls6R/S3rxbbXFnT6RCF
K/TYBaL/7Q1wjvWqp0Ol3Ns/HOKJ812n13ZR6JH8rUext5/xQoc891qTF/Ro
Ik8uPdWGFx65u4LynjKgQnv9lW1OXqgRrVSp+54BSTwdm3vBwgtf1jpT+lIZ
0Ih/aP0+Rl6o77Hb7F81AxorYgDi6zxQMqP2YgUTI0q2eIbtGeGBCiQTikUA
I4psDO6TzuOBUt9ZOcnuJCTkICt0w4wHjh4tUul7QEJVz5TxXiMeKPHQmiHj
OQm1ac6vXNTngQ8jj+9RSSUhPrNIGQlVHrh9WV7z6BAJSWd28pad4IEjruap
I3pklB0d+EqLhgfWMOZ/3XOYCWH/bM70JHDD7l7LLUVJJlR4hzni73tuqNfj
6XpFkQntCx3KX4zghr8rVfMemjAhv5U1w+3H3LA34se1x0+ZUHGiBdM/N254
hXPH3nuRCT3seJEpqcwNz7o0JNcVMqPVvTfsrfq4oDpvtZRcNTM6FWB28WE7
F0z0YraJbWdGF2PufYxt4IINV3d9u7DAjGxesUXWlnLBO3xSt82PsqDV+oqR
rSQuyCXVc5P9BQsiazj15zlzwf1lgvDnFVa0QLviGLmBwQrvaU9pO1aUAGZ+
aC5h8FIO3+And1akFlqdvTKNQQet82ddn7GigmfBuZp9GAxTdI/9UsyKMJAl
VY4w+PhT8onY/WyIq7Cp90AQBm90dNv4dbMhevHW2XusGGSL+WEkPcaGCn9r
YRoMGCzcl8c/PMeG6vwDQri2KLBojyfbcRI7yqi7cT9+hgIXbp2+aSPBjuw+
yZR8aKRAuUM0UV4B7Oir4b5j+yMp0MhviXToMAfiPrdXV1aIApmcD5nNnOBA
6Q7NKVkCFFhwiftk1mkOpOhX/VYMo8Dv8kFGh7Q5UHTpktguOgqcmFPRSnXl
QH+fXmlNqeSEVfFjNfpFHCih+klpni4nfBj0fqBLjxNZOeewmV/igPUbNO5B
lzmR3EeFcg4NDhiX2/hU5Bonmp/rVCk6zQFV9b3VTVw5EV/TTDz7Lg6YF5oS
d/UVJ5oYOKDp080Om5zPiG23cqKUujT315bscK7e2blMlIK+XDZWqrZhg+ff
yhyIE6egFRbrkU0jNmhgfW/VU4qCmK5YlB1XY4NB/ZUse+QoKD/4tJbfETZ4
X3p3tsx5CkqeNW1fGWWFXPvpldNuUNCuQJfzZ2+wwu0lGbW0WAr6yOqutc+G
Bdpc968wTqCg3ICcYD8DFqipkP2O+omCnLdax7sgCzxWWqQg8Y2COLwfHQ7Z
ywJjeIRUb/6koMPOiYI5bcxQLFvBZ7GNgngfnjK+qskMq9aC53xZMHQKveJh
OcYE/V9OsIexY6jNR/8KlY8JPu3ivh5FwdCctJvtMAMTnIPXPsXzYahWTbEj
fYAMA7ilw+4dxJDoqkXFwbdkaB9rKALOYohdm+/cXRIZ1p/aohW1xhBD5RXb
uQFGGP6pw/yuLYZGvlWnFdYzwgHZAI/Cmxiq+GCV86iYEbIbsI0oOGLorf8I
C897Rji9FPGW/S6GtovFdXkuM8KMaMW5/iAM3bZ6MZBWywBNf3utjgVjKMGq
c8XkJwPMfbYr528ohtK0RthpUxjgB8OQi0PPMJTYcFpfO5gBdm5/po17g6Hi
sPw3VUoM8AKtTpvORwztlUWTt3Lp4bN/6yycSRiab5dgXflID40Mvs7UfsbQ
lup/Lv6v6OEbC+uSc6kYkvNOEnzhQg8noj1DRjMxNOC6x/adKD38NmGqcqsY
Q3kHdr20jaWDgfJWp8dwDL18Z0DT8ZQOCgvvbrEowRDv4TGqpjcd1LlykqRS
Rsy/6PlIYRM6uCiOqbT/xlDDfkPaRowOGjbntoi3YIiLS0pvLJAWipfv8D9u
xdASc8AxWVdamDrTOdXfhqGbY3YhgVdpoVhXgop3J4a6e5cn9sjSQk7/x8ku
fRii6IBe+XEayMtgbBvXj6HrORa+D5pp4LvimPTqAQzJGh9qLMNp4FYPmOIY
xhCT5NdUjbc0cGZKYdl4/H/rodSqeJ4GemXZ8phNYOjWItvP/2RoYOc/q2KT
vxg6pvQ5MPsADfxGTc5Um8LQ0fnKXI2lHfCIUZ+9b4aYn/D4+3PGO8D5Lp13
7iyG+mQqO43Fd0ADq65r6ByGvh9hNv9B2gGjIskr+xYw1OUlxuydtw2ah9qu
Mi1jiKVQwGRSYBusv3vLnEO40E9VTXl+CxjX7pU3X8GQ5a6TP9/+3gLa9snS
0asYGj75zlXJawu8ntVZl6Bi6PlfrepXBlsgZPeiWilh9VnenhHRLfBw4bVz
yxox/4UWVwK6N4Enp4K28TqGhPvYBxuyNwF7HvjWQNhoXe7C3qebYGkcp8nb
wJBTxN3d2fLEcbA6f2CTOF8g7/kmzyZwLNy8GUzY5EXfXrV/G+DWEeqg0haG
VgK18ptjNsDOuZzRCMKK0uU9uzw2QHddndMYYYUz4dqWehugL07MS2KbsPwf
ykfhDfBTKJ/lLmHB/eFnJrbXwYad+f7vhPNnN+uOt68DRkjK/0dY7e+xAef0
dXBY4GPLgR0Mhd2WuZcZvA4ecwrfvUBYk1U+cdFyHZjO+Ub9R9jqhpmTzJl1
kCjxQSmGsJHmtyEPyjpwWfBz+kn4ZvhFzvyJNfCLnmdvC+GD8jY7VLQGovou
XRgnbK9Ph5+NWgP/kpXIy4THRjTNvFzXwE/pBqX/vQ/nKGTcW3B+Dfz/9+UE
/9/7cv8HaKuBxg==
      "]]}}, {{}, {{}, 
     {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/U1ss1/WQr8DDFAQPFHriVatN5y/gXtR5esIDzif
p02Sf42JK5yfyTBxSY6AE5zf+1WgJOqGLZzv/ur/vNv95nA+4/13J2PcDeH8
0uW7X+7+qwrnX1I0rq+5KQTnS+i6hPxW/GkP48dZhGpWZck7wPi7N53ZZ+Wm
A+cvSSk3mZNtAue/yu/glN5iBefP2Ovz3qfOAc63dr4a2bPIGc6/dyL2yOlj
bnB+o98zPe7XnnC+ypW8mV78vnD+kzW/GY9KBsD5AEN/UEM=
       
       "]]}, {}}, {}}, {{}, {{}, 
     {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/WTNb8ajkgEHGKBA5UreTC9+Xzi/0e+ZHvdrTzj/
3onYI6ePucH51s5XI3sWOcP5M/b6vPepc4DzX+V3cEpvsYLzl6SUm8zJNoHz
d286s8/KTQfOj7MI1azKkofzJXRdQn4r/twP419SNK6vuSnkAOOXLt/9cvdf
VTif8f67kzHuhnC++6v/8273m8P5vV8FSqJu2ML5mQwTl+QIOMH5PG2S/GtM
XOH8DdyLKl9HeMD5wRO1nmjVesP538Q2+2Ut9IPzAUA9UMM=
       "]]}, {}}, {}}},
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Re\"", TraditionalForm], 
    FormBox["\"Im\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    PointSize[0.013], 
    PointBox[
     NCache[{{0, Rational[1, 2] Pi}}, {{0, 1.5707963267948966`}}]]},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-10, 10}, {-10, 10}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.76022497053338*^9, 3.760225028522409*^9, 3.760225096458336*^9, 
   3.760225171411129*^9, 3.760225288834647*^9, 3.7602253352692957`*^9, 
   3.760225668993821*^9, 3.7602256995370483`*^9, {3.760225787613783*^9, 
   3.760225800325914*^9}}]
}, Open  ]],

Cell[TextData[{
 "The relevant singularities occur when n = 0, thus at -",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["\[Pi]", "2"], "+", 
    RowBox[{"0", "\[ImaginaryI]"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   FractionBox["\[Pi]", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "+0\[ImaginaryI]"
}], "Text",
 CellChangeTimes->{{3.760225905856801*^9, 3.760225966281563*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Residue", "[", 
  RowBox[{
   FractionBox[
    SuperscriptBox["\[ExponentialE]", "z"], 
    RowBox[{"Cos", "[", "z", "]"}]], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", 
      FractionBox["\[Pi]", "2"]}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.760225987657197*^9, 3.7602260197223997`*^9}}],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  RowBox[{
   RowBox[{"-", "\[Pi]"}], "/", "2"}]]], "Output",
 CellChangeTimes->{3.760226021517355*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Residue", "[", 
  RowBox[{
   FractionBox[
    SuperscriptBox["\[ExponentialE]", "z"], 
    RowBox[{"Cos", "[", "z", "]"}]], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     FractionBox["\[Pi]", "2"]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.760226025775669*^9, 3.760226041018917*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"\[Pi]", "/", "2"}]]}]], "Output",
 CellChangeTimes->{3.7602260416455927`*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["So this time the assemblage will be equal to", "Text",
 CellChangeTimes->{{3.7602260796560793`*^9, 3.7602260899901743`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", " ", "\[Pi]", " ", "\[ImaginaryI]", 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "\[Pi]"}], "/", "2"}]], "+", 
    RowBox[{"-", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[Pi]", "/", "2"}]]}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.7602261029452543`*^9, 3.760226128773425*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", "\[ImaginaryI]", " ", 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "\[Pi]"}], "/", "2"}]], "-", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[Pi]", "/", "2"}]]}], ")"}], " ", "\[Pi]"}]], "Output",
 CellChangeTimes->{3.7602261311535063`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.7602262539382668`*^9, 3.760226265860157*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "4"}], " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
  RowBox[{"Sinh", "[", 
   FractionBox["\[Pi]", "2"], "]"}]}]], "Output",
 CellChangeTimes->{{3.760226258070116*^9, 3.7602262670605288`*^9}},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"19.", "  ", 
   RowBox[{
    SubscriptBox["\[ContourIntegral]", "C"], " ", 
    RowBox[{
     FractionBox[
      RowBox[{"Sinh", "[", "z", "]"}], 
      RowBox[{
       RowBox[{"2", " ", "z"}], "-", "\[ImaginaryI]"}]], 
     RowBox[{"\[DifferentialD]", "z"}]}]}]}], " ", " ", ",", " ", 
  RowBox[{
   RowBox[{"C", ":", " ", 
    RowBox[{"|", 
     RowBox[{"z", "-", 
      RowBox[{"2", " ", "\[ImaginaryI]"}]}], "|"}]}], "=", "2"}]}]], "Text",
 CellChangeTimes->{{3.76010111174485*^9, 3.7601011709631987`*^9}, 
   3.760101268422201*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell["First I will investigate the singularities.", "Text",
 CellChangeTimes->{3.760226536542804*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"2", " ", "z"}], "-", "\[ImaginaryI]"}], "\[Equal]", "0"}], ",", 
   "z"}], "]"}]], "Input",
 CellChangeTimes->{{3.760226582627092*^9, 3.7602265949687643`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"z", "\[Rule]", 
    FractionBox["\[ImaginaryI]", "2"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.7602265961797667`*^9}]
}, Open  ]],

Cell["I can put together a plot of the path of the integral.", "Text",
 CellChangeTimes->{{3.7602266182409353`*^9, 3.760226623554175*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p7", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", "t", "]"}]}], ",", 
       RowBox[{
        RowBox[{"2", " ", 
         RowBox[{"Sin", "[", "t", "]"}]}], "+", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{
        RowBox[{"-", "2"}], "\[Pi]"}], ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
     RowBox[{"Epilog", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "0.013", "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"0", ",", "2"}], "}"}], "}"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Re\>\"", ",", "\"\<Im\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], "\[Pi]"}], ",", 
        RowBox[{"2", "\[Pi]"}]}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thickness", "[", "0.004", "]"}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7602266441199903`*^9, 3.760226758969193*^9}, {
   3.760226798780854*^9, 3.760226800989338*^9}, {3.760226928007823*^9, 
   3.760226929645709*^9}, 3.760227732218424*^9}],

Cell["And generate a plot of the singularities.", "Text",
 CellChangeTimes->{3.76022683750108*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p1p", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Re", "[", 
          FractionBox["\[ImaginaryI]", "2"], "]"}], ",", 
         RowBox[{"Im", "[", 
          FractionBox["\[ImaginaryI]", "2"], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Red", "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7602268847529087`*^9, 3.76022688989071*^9}}],

Cell["And show both plots together.", "Text",
 CellChangeTimes->{{3.7602292532286263`*^9, 3.760229258547061*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"p7", ",", " ", "p1p"}], "]"}]], "Input",
 CellChangeTimes->{{3.760226939670433*^9, 3.76022694350838*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.004], Opacity[1.], 
     FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
fJTt3Dq6nFqE0U7zW12zZH5YzdLkmkrwcZaQVNFpMl5rTDSlR0rx+LqzasH/
yHhb8lQgln7jHy7rzChkfPafFf1jtrEcpw9IP48l43l7VCkxuLcCZ17R8msj
431fYVurFlRiQVZ1ZQaZD4pL4Jl6tRp/xaoPBQaoKP8Xa2+KQw0OqarYuNJL
RUvFHs4lh2txdd/R243dVNSQlRN781wdFkvvljjXTkVsf9bLZzk04PY151kc
aqnor2HQ45CVBvxUh+d8JZm/25Pi842fNmLXkGIrsQoqOurN+SkqsAmvr5ka
tyHz/22kYvvy1xZ87sCaDyd+UtHe++5hAiqtOKL2liU1k4r4/KmWHLmt2N12
j2DpNyq6zeAtjixvw83WcuwMsh55tXg53RzswBYbgniCyHoVGL2UJWHZic34
e1g7w6io0vGJWdLfThyUmvlBjKxvJ968fm8904Unnoz1nvWnorpfLDWmzB48
qlDZQ39E5mtIZrw76sWpFoaPc1yoiBK1vjH/SS+efbBj9NY9KsI35Gt42Pvw
18B+mRBrKvp4xM4ik6sfS5QR0xLGpH4PrNbZa/Zj/kuWN04bkPV9k7rLGu9+
HGocXnn3DBWNRvWu3co7gAMV+T39TpD16ITTjBrfIP74fEqNpkBFT5Q7cmR5
hnHVBuWhlxxUlBvZ++qx5jAeWrLdmUkIIuqXhLCfz4fx/qbEX1XLgkj/P50D
/RwjuE3Lbap8UhBZLoYvMiijuNNQXpPZKIgK5Tt9t86MYb8s/0G9aEGk0l4s
UrZvHOtoYke7MEEkXDHmfMZmHD+7k17yOEgQOWscqeMeHceiEh21dp6CiGt7
m4ZQ518cdOSVmf9NQXTzoVHDf3mT+G32lEflbkHku7nBmDY/iWNlDi3d3SaI
zi6JD3juncJf3z3JpW4URPMn5iQNI6bwE9HkCxsFBJFRQpllsPM/vPBG4k3Q
lABaVn5w/dNrGpbjjSha/iqAIo8mffdOpWGBzB24PE4AyXUVtF+qoOGk1XOe
/pECqOR1u3YTZRqb/3LznXopgM5k+A0zbk3ji172dsLWAuibXV7YZvUZLL78
9s/YdgFU5RBtM28wg8MCLqv+3SiAREv8nv60m8FPepTnekQFUAd3Mx9/7Ay+
zbHLLZZFAG04rDTcwj2LH2gcrAju5EfWwnrH5mtn8deaB4pbAvjR79Su9Mhz
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
b/9b
      "]]}}, {{}, {{}, 
     {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQjQoe2I/yKeMDAEsCGU4=
       "]]}, {}}, {}}},
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Re\"", TraditionalForm], 
    FormBox["\"Im\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    PointSize[0.013], 
    PointBox[{{0, 2}}]},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{"ScalingFunctions" -> None},
  PlotRange->
   NCache[{{(-2) Pi, 2 Pi}, {(-2) Pi, 2 Pi}}, {{-6.283185307179586, 
    6.283185307179586}, {-6.283185307179586, 6.283185307179586}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.760226944666842*^9}]
}, Open  ]],

Cell["The sole singularity is relevant.", "Text",
 CellChangeTimes->{{3.760226990874937*^9, 3.760226998121192*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Residue", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"Sinh", "[", "z", "]"}], 
    RowBox[{
     RowBox[{"2", " ", "z"}], "-", "\[ImaginaryI]"}]], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     FractionBox["\[ImaginaryI]", "2"]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.760227016742729*^9, 3.7602270472328672`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
  RowBox[{"Sin", "[", 
   FractionBox["1", "2"], "]"}]}]], "Output",
 CellChangeTimes->{3.7602270486508512`*^9},
 Background->RGBColor[1, 1, 0.85]]
}, Open  ]],

Cell[TextData[{
 "Oddly, the residue calculated by Mathematica does not agree with the text \
answer. The text answer looks the same, except Sin[",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], "]"}], " "}], TraditionalForm]]],
 " is shown as Sinh[",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", "2"], "]"}], TraditionalForm]]],
 ". Comparing the two for a possible typo,"
}], "Text",
 CellChangeTimes->{{3.760227273978559*^9, 3.760227348621099*^9}, {
  3.769275619592349*^9, 3.769275631685264*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Sin", "[", 
   RowBox[{"1", "/", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.760227384391347*^9, 3.7602273916029873`*^9}}],

Cell[BoxData["0.479425538604203`"], "Output",
 CellChangeTimes->{3.7602273924935913`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Sinh", "[", 
   RowBox[{"1", "/", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.760227394559209*^9, 3.7602274026342573`*^9}}],

Cell[BoxData["0.5210953054937474`"], "Output",
 CellChangeTimes->{3.760227404181168*^9}]
}, Open  ]],

Cell["Hmm. Anyway, this time the developed answer will be equal to", "Text",
 CellChangeTimes->{{3.760227073402054*^9, 3.760227104875043*^9}, {
  3.760227419506833*^9, 3.760227428912928*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", "\[Pi]", " ", "\[ImaginaryI]", 
  RowBox[{"(", 
   RowBox[{
    FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
    RowBox[{"Sin", "[", 
     FractionBox["1", "2"], "]"}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.760227109009892*^9, 3.760227124346816*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "\[Pi]"}], " ", 
  RowBox[{"Sin", "[", 
   FractionBox["1", "2"], "]"}]}]], "Output",
 CellChangeTimes->{3.760227125694706*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["\<\
And in this answer, agreement is found with that of the text.\
\>", "Text",
 CellChangeTimes->{{3.760227437320335*^9, 3.7602274825445147`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"21.", "  ", 
   RowBox[{
    SubscriptBox["\[ContourIntegral]", "C"], " ", 
    RowBox[{
     FractionBox[
      RowBox[{"Cos", "[", 
       RowBox[{"\[Pi]", " ", "z"}], "]"}], 
      SuperscriptBox["z", "5"]], 
     RowBox[{"\[DifferentialD]", "z"}]}]}]}], " ", " ", ",", " ", 
  RowBox[{
   RowBox[{"C", ":", " ", 
    RowBox[{"|", "z", "|"}]}], "=", 
   FractionBox["1", "2"], " "}]}]], "Text",
 CellChangeTimes->{{3.76010117667673*^9, 3.760101233823372*^9}, 
   3.760101277725945*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell["First I will investigate the singularities.", "Text",
 CellChangeTimes->{3.760227667869795*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["z", "5"], "\[Equal]", "0"}], ",", "z"}], "]"}]], "Input",
 CellChangeTimes->{{3.760227680264035*^9, 3.7602276895465107`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.760227690383605*^9}]
}, Open  ]],

Cell["I can put together a plot of the path of the integral.", "Text",
 CellChangeTimes->{{3.760227712198738*^9, 3.760227716252191*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p8", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"Cos", "[", "t", "]"}]}], ",", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
     RowBox[{"Epilog", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "0.013", "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], "}"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Re\>\"", ",", "\"\<Im\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thickness", "[", "0.004", "]"}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.760227756928742*^9, 3.760227836660491*^9}, {
  3.7602278899196444`*^9, 3.7602279507003517`*^9}}],

Cell["And generate a plot of the singularities.", "Text",
 CellChangeTimes->{3.760227967173506*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p1p", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Re", "[", "0", "]"}], ",", 
         RowBox[{"Im", "[", "0", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Red", "}"}]}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Times]\>\"", ",", "12"}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7602279946832037`*^9, 3.760228009424842*^9}, {
  3.760228155530562*^9, 3.7602282014623404`*^9}, {3.760228272596772*^9, 
  3.760228353893712*^9}, {3.760228386877673*^9, 3.7602284025797377`*^9}, {
  3.760228434899184*^9, 3.760228435257434*^9}}],

Cell["And show both plots together.", "Text",
 CellChangeTimes->{{3.760229227022251*^9, 3.760229233260523*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"p8", ",", " ", "p1p"}], "]"}]], "Input",
 CellChangeTimes->{{3.760228031176918*^9, 3.760228031807262*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.004], Opacity[1.], 
     FaceForm[Opacity[0.3]], LineBox[CompressedData["
1:eJxdm3c81f/7/416ExmlUmkQGRWh0tRVKBkZEQ3JSEk2kTJCklL2yo5s2TNc
9t4cnOOc86o0KJSMFOr7+tx+//3843a/vY7XeZ3n87qu5+N+ux0iZnYXLNhY
WFic2VlY/vf7//28Qw6jDQfE00KqzPbtE1r+R+BXjnaVsFBtFE4tsP5Bchdx
1iYo9DqyQtgcnWSPNyGNn3Nv4UoFpbCOZJV1inwPQ+3wWJlXegLJFredKE/e
OiFnTUy/E8mS/01QOnNd8eMxmYOnSa4S3CXAnfQAHbzUOv8jebFSKUop1Avd
6n+/bPxL4NnLRxSO1nvjx53aSfdJnu653a351hffRl+lS5L8OV495mqxH+4Q
OKDds0KgducPIYtcf1S68m3RhmQix2nUMi0ArXbEUVeRrLH4zehm4jNcNtQ+
JbRMIPttiUrNkCBkS3/a/HKJwDmO9Tpbm4JRQVz20XqSDfJVZJ7WhWDzyVNp
X38T2L76WalRZRiKU39yaZDcadHwqaY0HHNeJ6anLBLok+DGta0oAsVyAgMU
fxG4alPpyebsKLzDI9bjuUCuz4jVwPqMaLT5bn6+fJ5Ajug/ty6nxuB9w6Q5
gTkCC2sEYwfiYlH/VceszQ/y/hjjePd5IqoXXV7l8J3AS7TS9CaVJJyuUtW2
niaw1Sw4qbM+CR0tlSM0JgkUOv1RobsmGV1bhSdyvhAYbOUfG1eagn841ww6
fCbwvhfh8+hgKrY0ey/JfCKwfvSm163CVDz2yYQ19AOBfP33FHe8eY1ViR9n
/tAJ/NS321njdTpa+Vxo9x4lMHOddTanaAY+1/3znoVG4MPxKbbapAysUrPv
/TJEoPQDlehtcZm4opNdfKmXwA3mM+xPQ7NR5emxheY6Ap97Cu0S8szDnxyR
TulIrvcrFFhiy8e/lvJ0z2qynj6ys308m4+RGRkO6yvI93MIHUjvzsfMs/ew
M49AJv+JvfOMAkxaCvJ8EUugnSlfScRSEbberv7HiCaQ6wU/VRaK0XhE2VUs
ksAWl8fyzT7FGHTVXTMymMBbN72OEGtK0HD3ujQeP3J/tbucWgVLsTrla5+G
NYG1D8aab8qXY6fRgBD3bQKF7+goxN0tx/MT9bfrLAhcca1Kay8vxzoe940C
1wnsnShVXA8VOH7mfIu6Lvn5krP2qGtUooLZM+e1BwkMeClxXNOsCgVXFbu/
+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
AK8=
      "]]}}, {{}, {
     {RGBColor[1, 0, 0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
      GeometricTransformationBox[InsetBox[
        StyleBox["\<\"\[Times]\"\>",
         StripOnInput->False,
         FontSize->12], {0., 0.}], {{{0., 0.}}, {{0., 0.}}, {{0., 0.}}, {{0., 
       0.}}, {{0., 0.}}}]}, {}}, {}}},
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Re\"", TraditionalForm], 
    FormBox["\"Im\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    PointSize[0.013], 
    PointBox[{{0, 0}}]},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-1, 1}, {-1, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7602280329767647`*^9, {3.7602283332693157`*^9, 3.7602283574886417`*^9}, {
   3.7602284105663347`*^9, 3.760228438970759*^9}}]
}, Open  ]],

Cell["The sole singularity is relevant.", "Text",
 CellChangeTimes->{3.760228470905499*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Residue", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"Cos", "[", 
     RowBox[{"\[Pi]", " ", "z"}], "]"}], 
    SuperscriptBox["z", "5"]], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7602285103840218`*^9, 3.760228523148061*^9}}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[Pi]", "4"], "24"]], "Output",
 CellChangeTimes->{3.760228524573978*^9},
 Background->RGBColor[1, 1, 0.85]]
}, Open  ]],

Cell["\<\
Another case where the residue as calculated by Mathematica does not match \
exactly with the text answer. In this case the text answer shows a z factor \
in the denominator. Ignoring this snag, the final assemblage will be equal to\
\
\>", "Text",
 CellChangeTimes->{{3.760228556699481*^9, 3.7602285618769217`*^9}, {
  3.760228738393588*^9, 3.760228811420108*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", "\[Pi]", " ", "\[ImaginaryI]", 
  RowBox[{"(", 
   FractionBox[
    SuperscriptBox["\[Pi]", "4"], "24"], ")"}]}]], "Input",
 CellChangeTimes->{{3.7602285661748867`*^9, 3.760228584113995*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[ImaginaryI]", " ", 
   SuperscriptBox["\[Pi]", "5"]}], "12"]], "Output",
 CellChangeTimes->{3.760228586535241*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["The above answer matches that of the text.", "Text",
 CellChangeTimes->{{3.760228839578424*^9, 3.760228847258031*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"23.", "  ", 
   RowBox[{
    SubscriptBox["\[ContourIntegral]", "C"], " ", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"30", " ", 
        SuperscriptBox["z", "2"]}], "-", 
       RowBox[{"23", " ", "z"}], "+", "5"}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "z"}], "-", "1"}], ")"}], "2"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", "z"}], "-", "1"}], ")"}]}]], 
     RowBox[{"\[DifferentialD]", "z"}]}]}]}], " ", " ", ",", " ", 
  RowBox[{"C", ":", " ", 
   RowBox[{"the", " ", "unit", " ", "circle"}]}]}]], "Text",
 CellChangeTimes->{{3.760101318821355*^9, 3.760101407156994*^9}, 
   3.760101489674946*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell["First I will investigate the singularities.", "Text",
 CellChangeTimes->{3.7602779498649178`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "z"}], "-", "1"}], ")"}], "2"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"3", " ", "z"}], "-", "1"}], ")"}]}], "\[Equal]", "0"}], ",", 
   "z"}], "]"}]], "Input",
 CellChangeTimes->{{3.7602779729415407`*^9, 3.760277980364053*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", 
     FractionBox["1", "2"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.760277981890196*^9}]
}, Open  ]],

Cell["I can put together a plot of the path of the integral.", "Text",
 CellChangeTimes->{3.7602780080451527`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p9", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", " ", 
        RowBox[{"Cos", "[", "t", "]"}]}], ",", 
       RowBox[{"1", " ", 
        RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
     RowBox[{"Epilog", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "0.013", "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], "}"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Re\>\"", ",", "\"\<Im\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thickness", "[", "0.004", "]"}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.760278026067748*^9, 3.760278106774026*^9}}],

Cell["And generate a plot of the singularities.", "Text",
 CellChangeTimes->{3.760278129102955*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p1p", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Re", "[", 
          FractionBox["1", "3"], "]"}], ",", 
         RowBox[{"Im", "[", 
          FractionBox["1", "3"], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Red", "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.760278187554885*^9, 3.7602782019926243`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p2p", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Re", "[", 
          FractionBox["1", "2"], "]"}], ",", 
         RowBox[{"Im", "[", 
          FractionBox["1", "2"], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Blue", "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7602782277928667`*^9, 3.760278234902852*^9}, {
  3.76027828823003*^9, 3.760278290244389*^9}}],

Cell["And show three plots together.", "Text",
 CellChangeTimes->{{3.760278259703999*^9, 3.760278265333231*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"p9", ",", "p1p", ",", "p2p"}], "]"}]], "Input",
 CellChangeTimes->{{3.760278270952838*^9, 3.7602782813885*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.004], Opacity[1.], 
     FaceForm[Opacity[0.3]], LineBox[CompressedData["
1:eJxdm3c81f/7/42KyCiVSoPIqCgqWroKJSMjRcNbRkqyFSlSGkrKXmVGtsys
cNl7772OdTjnvJKRQn1fn9vvv59/3O631/E6r/N8Xs/retxvt0PI2PqyKQsT
E9MDViam//3+fz8/kE1/8xHR2KgC44MHBVb+ETjNVqvk53sLBWPSLX6Q3DB0
wdLL1xqZwW++n2SXrz7lEymOuJrXkVFCstJGeZ5nvq54Msc1Lpxk03v2HW++
v0D2opBWe5LF11E76lPcceyk1NFzJBfw7+XjjHyHtq4q9etIXspXCFLw9UKn
0t8fy/8SeOH6cdkTpT44tkcz8jHJjKZ7jerf/fB78M1+cZInwlRDbmYF4G6+
I5pNqwRq1v8QME0JQoUbM0uWJA8l2/eZxYag+e7QnjUkqy3N6N+J+IQreppn
BVYIZL0nlq/uE4EscR6VH5cJnGfbpLWjIhJlRQ+/3ESybpqSlEdJFFaeORs7
/ZvA2rXvsvXzo1G05yeHGsn1pmXjRdkxmPwlIi56iUC3cCeOnZlfUCTZ8638
LwLXbM0+U5kUh/e5RJqeLpLr023etik+Hi0Jk0u5CwSyBf+5ez0mAR/rRc7z
zROYUcT/qS00Ca98rpuz/EHeH0PsHr5PRdXM62tsCQKv9WbHVSilIaNAWdOC
QWC1sXdkfWka2pkpBqjRCBQ4NybbWJSOjtWC1ORJAr3N3T+FZmfiH/b17bYT
BD52HXJ7eTQLqyqfL0uNE1jad8f1bkYWnhw3ZPYdJZCn9ZH87q/fsCBibPZP
P4HjLfseqH3JQXO3y7XP+whM2GiRxC6ci++1/4ww9RL4bIrOUhyZiwUqNs2T
nQRKPlEK3hmah6taSVnXmgncbDLL6uH7HZU8Ti5WlhD4/qnAXoGniD/ZAu3j
kFzvz8i3zFKMf81k+p8WkvU0xsoydqEYA+PjbTflke9n69sW11iMCRceYX0q
gYO8pw8sDJRg5LLX0w+fCLQ24vkWsFyG1fcK/w0EE8jxgbfnMJSjQbeio0gg
gVUOr2Uq3crR66azeqA3gXfvuB4fWl+Bevs2xnK9IvdXs8G+mr8SC6OnW9Qs
CCx+Qqm8I1ON9fptApz3CBS8ryUb+rAaL1FL75WYErjqWBBbm1uNJVzOW/hu
EdhMzZbfBDU4df5Slao2+fmiEverqtWirPG7BxuOEvj2o9gpdeN65F+T5Tz8
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
uidvLw==
      "]]}}, {{}, {{}, 
     {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQHQoGV+0ZoGCUTxkfAMohQj0=
       
       "]]}, {}}, {}}, {{}, {{}, 
     {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQEP7BlQwCifXD4AB2kZTg==
       "]]}, {}}, {}}},
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Re\"", TraditionalForm], 
    FormBox["\"Im\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    PointSize[0.013], 
    PointBox[{{0, 0}}]},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-1.5, 1.5}, {-1.5, 1.5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.760278282384088*^9, 3.7602782940175467`*^9}}]
}, Open  ]],

Cell["Evidently two singularities are relevant.", "Text",
 CellChangeTimes->{{3.760278422023081*^9, 3.760278431212343*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Residue", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"30", " ", 
      SuperscriptBox["z", "2"]}], "-", 
     RowBox[{"23", " ", "z"}], "+", "5"}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "z"}], "-", "1"}], ")"}], "2"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"3", " ", "z"}], "-", "1"}], ")"}]}]], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     FractionBox["1", "3"]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.760278440169097*^9, 3.7602784694906473`*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.7602784709255238`*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Residue", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"30", " ", 
      SuperscriptBox["z", "2"]}], "-", 
     RowBox[{"23", " ", "z"}], "+", "5"}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "z"}], "-", "1"}], ")"}], "2"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"3", " ", "z"}], "-", "1"}], ")"}]}]], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     FractionBox["1", "2"]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7602784745365543`*^9, 3.7602784888095818`*^9}}],

Cell[BoxData[
 FractionBox["1", "2"]], "Output",
 CellChangeTimes->{3.760278490391965*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["The consolidated answer is", "Text",
 CellChangeTimes->{{3.760278504976626*^9, 3.760278511120337*^9}, {
  3.7602786715944157`*^9, 3.7602786720238256`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", "\[Pi]", " ", "\[ImaginaryI]", 
  RowBox[{"(", 
   RowBox[{"2", "+", 
    FractionBox["1", "2"]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.760278516589795*^9, 3.760278551966422*^9}}],

Cell[BoxData[
 RowBox[{"5", " ", "\[ImaginaryI]", " ", "\[Pi]"}]], "Output",
 CellChangeTimes->{{3.760278536020121*^9, 3.760278553871537*^9}},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["Green cells match text answers.", "Text",
 CellChangeTimes->{{3.760278596355731*^9, 3.760278601555586*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"25.", "  ", 
   RowBox[{
    SubscriptBox["\[ContourIntegral]", "C"], " ", 
    RowBox[{
     FractionBox[
      RowBox[{"z", " ", 
       RowBox[{"Cosh", "[", 
        RowBox[{"\[Pi]", " ", "z"}], "]"}]}], 
      RowBox[{
       SuperscriptBox["z", "4"], "+", 
       RowBox[{"13", " ", 
        SuperscriptBox["z", "2"]}], "+", "36"}]], 
     RowBox[{"\[DifferentialD]", "z"}]}]}]}], " ", " ", ",", " ", 
  RowBox[{
   RowBox[{"C", ":", " ", 
    RowBox[{"|", "z", "|"}]}], "=", "\[Pi]"}]}]], "Text",
 CellChangeTimes->{{3.760101411014825*^9, 3.760101460202201*^9}, 
   3.7601014993382063`*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell["First I will investigate the singularities.", "Text",
 CellChangeTimes->{3.7602787148880463`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["z", "4"], "+", 
     RowBox[{"13", " ", 
      SuperscriptBox["z", "2"]}], "+", "36"}], "\[Equal]", "0"}], ",", "z"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.760278728225205*^9, 3.760278746507922*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", 
     RowBox[{"2", " ", "\[ImaginaryI]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "3"}], " ", "\[ImaginaryI]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", 
     RowBox[{"3", " ", "\[ImaginaryI]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.760278747912384*^9}]
}, Open  ]],

Cell["I can put together a plot of the path of the integral.", "Text",
 CellChangeTimes->{3.7602787735090313`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p10", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Pi]", " ", 
        RowBox[{"Cos", "[", "t", "]"}]}], ",", 
       RowBox[{"\[Pi]", " ", 
        RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
     RowBox[{"Epilog", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "0.013", "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], "}"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Re\>\"", ",", "\"\<Im\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "5"}], ",", "5"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thickness", "[", "0.004", "]"}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.760278792195581*^9, 3.760278867870306*^9}}],

Cell["And generate plots of the singularities.", "Text",
 CellChangeTimes->{{3.760278886975038*^9, 3.760278893980131*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p1p", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Re", "[", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "]"}], ",", 
         RowBox[{"Im", "[", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Red", "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.760278937421319*^9, 3.7602789437406178`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p2p", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Re", "[", 
          RowBox[{"2", " ", "\[ImaginaryI]"}], "]"}], ",", 
         RowBox[{"Im", "[", 
          RowBox[{"2", " ", "\[ImaginaryI]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Blue", "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.760278960578603*^9, 3.7602789788573847`*^9}, {
  3.760279009631956*^9, 3.760279011750306*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p3p", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Re", "[", 
          RowBox[{
           RowBox[{"-", "3"}], " ", "\[ImaginaryI]"}], "]"}], ",", 
         RowBox[{"Im", "[", 
          RowBox[{
           RowBox[{"-", "3"}], " ", "\[ImaginaryI]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Green", "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.760278963858222*^9, 3.76027901798195*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p4p", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Re", "[", 
          RowBox[{"3", " ", "\[ImaginaryI]"}], "]"}], ",", 
         RowBox[{"Im", "[", 
          RowBox[{"3", " ", "\[ImaginaryI]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Purple", "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.760278969281907*^9, 3.760279027525367*^9}}],

Cell["And show five plots together.", "Text",
 CellChangeTimes->{{3.760279062516424*^9, 3.7602790695388937`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"p10", ",", "p1p", ",", "p2p", ",", "p3p", ",", "p4p"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.76027907248703*^9, 3.76027908781804*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.004], Opacity[1.], 
     FaceForm[Opacity[0.3]], LineBox[CompressedData["
1:eJxdm3c4le8fx48zn2MkUiQjEg2aQin3baaBloaRpERFW0NllBJRGclIVkay
Z6j7Niore8se2XvP3/P99/eX63Wd5/Cc+/mM9+u6DomLN05cplIolLs0CuW/
n0JyGqfmJdj4+T+an+C3zCz59UaaMySHjtzZxln8AK1MDxMaJtmeh2MLq9gZ
aexYX9JCMp/bqC+HrweyVa24XEjyRJqi0HzRB3RdArfEknyg0N9taCkQNTuO
KLuRbLQ8rjz4IQSFeV97dJnk5t13v5xP/Iz8mMr+iiRbh+4pLyyKRJ+XLQNp
JEtnrB/e0RWN4mQYzwvWs/E6I3H1t0ux6HOI8NFXJM87r2BOcCWgW3wZU2ok
nwl8luf/IRHNvZt4NiXOxvFB5gsqG5ORCPo7Hkqys9EOnaaEFHRynvV4QIyN
bVVN09hF6agg/r7XS5LLzmJenzMZ6I3J0BsRkvn2TC2JdmaiqycNdsiLsnHp
x25xwcUfKHujc3WqCHn/BSe08zQwauHadn43yQqbJLlmObORlYuZsPA68vyA
+LC+Tw6Seq+o+1yYjfPaa+KeGOei9QHc5j1r2bj+FH9G0IY89KbuhFqgEBsH
/JTvq437iUJEqxLwajaOFNC9w8jPR9s/buacE2DjDSlq+6juBegyqD8oR/K1
GZGCmZOF6Gom710HfjaW21nypKKlCG27+sW7dQUbOza+Wdo1XYKGbvqI9fKw
Mfe3VXgmqxTJVb937+dmY+ak+CVD1TL0iPVTqpmT/Hz7OG14WOVovcnCjkdM
No64eU4ceFSghb1vZo8z2HiFr9JDymQFqgw7Er2BzsaHr7IVvp+pROZDFkXJ
HGwsKGv2YJNoFXoSHMh0XyBwyUdru9yIavT6vUiCyCiBT/klvZ/KrEPiPq3l
t4YJ/Km0cDpKuh59eFdYhgYJ3Bi2X+b0u3r0mot2TauPwFedpO9/MG9APy8J
iy+1E/iok5ZT9sq/aPi8/KJgJYH/TkckuZi1IJ6ARZX5MgIbddQnZP1pQb9u
hV6pLSFwzY+QorF1rWj22+yNR4UEFru2tZTnRSuyWn/X+lo2gTs+9n7mNGhD
Td9MU2djCHyk5voxfo4OZPyxNulaNIHXTt+0btzTgRhWPSE1keT92JbwfLra
gZy3lp/1CSXvd0bJa3VVB0LuA0p5HwjskRyw9kd4J2pvO/6o2IHA7hc/NAwf
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
      
      "]]}}, {{}, {{}, 
     {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQjQYOjPIp4wMAUawRgw==
       "]]}, {}}, {}}, {{}, {{}, 
     {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQjQYcRvmU8QG2wwcD
       "]]}, {}}, {}}, {{}, {{}, 
     {RGBColor[0, 1, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQjQo4DozyKeMDALv8Eis=
       "]]}, {}}, {}}, {{}, {{}, 
     {RGBColor[0.5, 0, 0.5], PointSize[0.012833333333333334`], 
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQjQo4HEb5lPEBISIHqw==
       "]]}, {}}, {}}},
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Re\"", TraditionalForm], 
    FormBox["\"Im\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    PointSize[0.013], 
    PointBox[{{0, 0}}]},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-5, 5}, {-5, 5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.760279088415978*^9}]
}, Open  ]],

Cell["The combined plot shows four relevant singularities.", "Text",
 CellChangeTimes->{{3.760279141072276*^9, 3.760279149934681*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Residue", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"z", " ", 
     RowBox[{"Cosh", "[", 
      RowBox[{"\[Pi]", " ", "z"}], "]"}]}], 
    RowBox[{
     SuperscriptBox["z", "4"], "+", 
     RowBox[{"13", " ", 
      SuperscriptBox["z", "2"]}], "+", "36"}]], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{
      RowBox[{"-", "2"}], "\[ImaginaryI]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.760279158250928*^9, 3.76027919252464*^9}}],

Cell[BoxData[
 FractionBox["1", "10"]], "Output",
 CellChangeTimes->{3.760279195158819*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Residue", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"z", " ", 
     RowBox[{"Cosh", "[", 
      RowBox[{"\[Pi]", " ", "z"}], "]"}]}], 
    RowBox[{
     SuperscriptBox["z", "4"], "+", 
     RowBox[{"13", " ", 
      SuperscriptBox["z", "2"]}], "+", "36"}]], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"2", "\[ImaginaryI]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.760279206165559*^9}],

Cell[BoxData[
 FractionBox["1", "10"]], "Output",
 CellChangeTimes->{3.760279207142097*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Residue", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"z", " ", 
     RowBox[{"Cosh", "[", 
      RowBox[{"\[Pi]", " ", "z"}], "]"}]}], 
    RowBox[{
     SuperscriptBox["z", "4"], "+", 
     RowBox[{"13", " ", 
      SuperscriptBox["z", "2"]}], "+", "36"}]], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{
      RowBox[{"-", "3"}], "\[ImaginaryI]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.760279217004671*^9, 3.760279217939125*^9}}],

Cell[BoxData[
 FractionBox["1", "10"]], "Output",
 CellChangeTimes->{3.760279218958359*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Residue", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"z", " ", 
     RowBox[{"Cosh", "[", 
      RowBox[{"\[Pi]", " ", "z"}], "]"}]}], 
    RowBox[{
     SuperscriptBox["z", "4"], "+", 
     RowBox[{"13", " ", 
      SuperscriptBox["z", "2"]}], "+", "36"}]], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"3", "\[ImaginaryI]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.760279226572324*^9, 3.760279227618688*^9}}],

Cell[BoxData[
 FractionBox["1", "10"]], "Output",
 CellChangeTimes->{3.7602792287870283`*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["So the consolidated answer will be", "Text",
 CellChangeTimes->{{3.760279249977425*^9, 3.7602792661924133`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", "\[Pi]", " ", "\[ImaginaryI]", 
  RowBox[{"(", 
   FractionBox["4", "10"], ")"}]}]], "Input",
 CellChangeTimes->{{3.760279270385391*^9, 3.760279282735742*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"4", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "5"]], "Output",
 CellChangeTimes->{3.760279284308436*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]]
},
WindowSize->{1366, 843},
WindowMargins->{{4, Automatic}, {Automatic, 4}},
Magnification:>1.5 Inherited,
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 10, \
2015)",
StyleDefinitions->"Charter1.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 91, 2, 45, "Input",
 Evaluatable->False],
Cell[494, 17, 219, 5, 51, "Text",
 Evaluatable->False],
Cell[716, 24, 73, 1, 45, "Input"],
Cell[792, 27, 272, 6, 110, "Text"],
Cell[1067, 35, 281, 8, 97, "Text"],
Cell[1351, 45, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[1449, 50, 249, 7, 77, "Input"],
Cell[1701, 59, 168, 5, 77, "Output"]
}, Open  ]],
Cell[1884, 67, 422, 10, 69, "Input"],
Cell[CellGroupData[{
Cell[2331, 81, 306, 9, 77, "Input"],
Cell[2640, 92, 131, 3, 100, "Output"]
}, Open  ]],
Cell[2786, 98, 249, 7, 97, "Text"],
Cell[3038, 107, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[3136, 112, 216, 6, 77, "Input"],
Cell[3355, 120, 138, 4, 77, "Output"]
}, Open  ]],
Cell[3508, 127, 217, 3, 75, "Text"],
Cell[3728, 132, 192, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[3945, 140, 293, 7, 225, "Input"],
Cell[4241, 149, 237, 5, 69, "Output"]
}, {2}]],
Cell[CellGroupData[{
Cell[4512, 159, 239, 7, 45, "Input"],
Cell[4754, 168, 142, 3, 69, "Output"]
}, {1, 2}]],
Cell[4911, 174, 160, 3, 75, "Text"],
Cell[5074, 179, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[5172, 184, 208, 5, 47, "Input"],
Cell[5383, 191, 126, 3, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5546, 199, 610, 15, 47, "Input"],
Cell[6159, 216, 625, 12, 34, "Message"],
Cell[6787, 230, 473, 14, 45, "Output"]
}, Open  ]],
Cell[7275, 247, 227, 3, 75, "Text"],
Cell[CellGroupData[{
Cell[7527, 254, 172, 3, 45, "Input"],
Cell[7702, 259, 1001, 31, 334, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8740, 295, 275, 7, 45, "Input"],
Cell[9018, 304, 154, 3, 100, "Output"]
}, Open  ]],
Cell[9187, 310, 265, 7, 94, "Text"],
Cell[9455, 319, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[9553, 324, 232, 6, 76, "Input"],
Cell[9788, 332, 151, 4, 76, "Output"]
}, Open  ]],
Cell[9954, 339, 139, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[10118, 344, 304, 8, 54, "Input"],
Cell[10425, 354, 486, 13, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10948, 372, 331, 9, 45, "Input"],
Cell[11282, 383, 176, 4, 69, "Output"]
}, Open  ]],
Cell[11473, 390, 359, 10, 103, "Text"],
Cell[11835, 402, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[11933, 407, 324, 9, 84, "Input"],
Cell[12260, 418, 269, 9, 84, "Output"]
}, Open  ]],
Cell[12544, 430, 164, 3, 51, "Text"],
Cell[CellGroupData[{
Cell[12733, 437, 333, 10, 54, "Input"],
Cell[13069, 449, 454, 13, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13560, 467, 452, 13, 84, "Input"],
Cell[14015, 482, 168, 4, 99, "Output"]
}, Open  ]],
Cell[14198, 489, 232, 6, 110, "Text"],
Cell[14433, 497, 516, 15, 102, "Text"],
Cell[14952, 514, 73, 1, 45, "Input"],
Cell[15028, 517, 127, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[15180, 522, 254, 7, 45, "Input"],
Cell[15437, 531, 975, 30, 160, "Output"]
}, Open  ]],
Cell[16427, 564, 240, 3, 51, "Text"],
Cell[16670, 569, 1365, 37, 104, "Input"],
Cell[18038, 608, 127, 1, 51, "Text"],
Cell[18168, 611, 1233, 31, 85, "Input"],
Cell[19404, 644, 342, 6, 86, "Text"],
Cell[19749, 652, 950, 27, 85, "Input"],
Cell[20702, 681, 282, 5, 51, "Text"],
Cell[CellGroupData[{
Cell[21009, 690, 249, 5, 45, "Input"],
Cell[21261, 697, 19476, 331, 297, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40774, 1033, 294, 8, 45, "Input"],
Cell[41071, 1043, 174, 5, 100, "Output"]
}, Open  ]],
Cell[41260, 1051, 123, 1, 51, "Text"],
Cell[41386, 1054, 1996, 75, 100, "Text"],
Cell[43385, 1131, 120, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[43530, 1136, 238, 6, 76, "Input"],
Cell[43771, 1144, 137, 3, 69, "Output"]
}, Open  ]],
Cell[43923, 1150, 615, 19, 102, "Text"],
Cell[44541, 1171, 73, 1, 45, "Input"],
Cell[44617, 1174, 125, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[44767, 1179, 213, 6, 45, "Input"],
Cell[44983, 1187, 846, 26, 127, "Output"]
}, Open  ]],
Cell[45844, 1216, 136, 1, 51, "Text"],
Cell[45983, 1219, 1509, 41, 177, "Input"],
Cell[47495, 1262, 99, 1, 51, "Text"],
Cell[47597, 1265, 871, 24, 70, "Input"],
Cell[48471, 1291, 178, 4, 51, "Text"],
Cell[48652, 1297, 979, 26, 70, "Input"],
Cell[49634, 1325, 113, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[49772, 1330, 217, 4, 45, "Input"],
Cell[49992, 1336, 20349, 349, 298, "Output"]
}, Open  ]],
Cell[70356, 1688, 456, 15, 57, "Text"],
Cell[CellGroupData[{
Cell[70837, 1707, 344, 10, 81, "Input"],
Cell[71184, 1719, 191, 5, 73, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71412, 1729, 320, 9, 81, "Input"],
Cell[71735, 1740, 193, 5, 73, "Output"]
}, Open  ]],
Cell[71943, 1748, 130, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[72098, 1753, 379, 10, 54, "Input"],
Cell[72480, 1765, 339, 9, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72856, 1779, 133, 2, 45, "Input"],
Cell[72992, 1783, 267, 6, 94, "Output"]
}, Open  ]],
Cell[73274, 1792, 607, 18, 102, "Text"],
Cell[73884, 1812, 73, 1, 45, "Input"],
Cell[73960, 1815, 101, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[74086, 1820, 247, 7, 45, "Input"],
Cell[74336, 1829, 182, 5, 75, "Output"]
}, Open  ]],
Cell[74533, 1837, 138, 1, 51, "Text"],
Cell[74674, 1840, 1437, 41, 104, "Input"],
Cell[76114, 1883, 98, 1, 51, "Text"],
Cell[76215, 1886, 633, 18, 75, "Input"],
Cell[76851, 1906, 113, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[76989, 1911, 153, 3, 45, "Input"],
Cell[77145, 1916, 27277, 461, 293, "Output"]
}, Open  ]],
Cell[104437, 2380, 115, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[104577, 2385, 354, 10, 75, "Input"],
Cell[104934, 2397, 224, 6, 99, "Output"]
}, Open  ]],
Cell[105173, 2406, 546, 16, 92, "Text"],
Cell[CellGroupData[{
Cell[105744, 2426, 176, 4, 45, "Input"],
Cell[105923, 2432, 89, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106049, 2438, 177, 4, 45, "Input"],
Cell[106229, 2444, 88, 1, 45, "Output"]
}, Open  ]],
Cell[106332, 2448, 191, 2, 51, "Text"],
Cell[CellGroupData[{
Cell[106548, 2454, 289, 7, 75, "Input"],
Cell[106840, 2463, 204, 6, 99, "Output"]
}, Open  ]],
Cell[107059, 2472, 153, 3, 51, "Text"],
Cell[107215, 2477, 559, 17, 102, "Text"],
Cell[107777, 2496, 73, 1, 45, "Input"],
Cell[107853, 2499, 101, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[107979, 2504, 206, 5, 54, "Input"],
Cell[108188, 2511, 420, 13, 45, "Output"]
}, Open  ]],
Cell[108623, 2527, 136, 1, 51, "Text"],
Cell[108762, 2530, 1286, 37, 154, "Input"],
Cell[110051, 2569, 99, 1, 51, "Text"],
Cell[110153, 2572, 873, 23, 45, "Input"],
Cell[111029, 2597, 111, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[111165, 2602, 154, 3, 45, "Input"],
Cell[111322, 2607, 19389, 332, 297, "Output"]
}, Open  ]],
Cell[130726, 2942, 91, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[130842, 2947, 310, 9, 76, "Input"],
Cell[131155, 2958, 154, 4, 103, "Output"]
}, Open  ]],
Cell[131324, 2965, 375, 7, 86, "Text"],
Cell[CellGroupData[{
Cell[131724, 2976, 219, 5, 86, "Input"],
Cell[131946, 2983, 193, 5, 103, "Output"]
}, Open  ]],
Cell[132154, 2991, 124, 1, 51, "Text"],
Cell[132281, 2994, 787, 24, 106, "Text"],
Cell[133071, 3020, 73, 1, 45, "Input"],
Cell[133147, 3023, 103, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[133275, 3028, 396, 13, 54, "Input"],
Cell[133674, 3043, 362, 12, 76, "Output"]
}, Open  ]],
Cell[134051, 3058, 114, 1, 51, "Text"],
Cell[134168, 3061, 1183, 34, 104, "Input"],
Cell[135354, 3097, 99, 1, 51, "Text"],
Cell[135456, 3100, 610, 18, 76, "Input"],
Cell[136069, 3120, 659, 19, 75, "Input"],
Cell[136731, 3141, 112, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[136868, 3146, 159, 3, 45, "Input"],
Cell[137030, 3151, 19416, 333, 297, "Output"]
}, Open  ]],
Cell[156461, 3487, 123, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[156609, 3492, 575, 19, 86, "Input"],
Cell[157187, 3513, 110, 2, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[157334, 3520, 577, 19, 86, "Input"],
Cell[157914, 3541, 128, 3, 99, "Output"]
}, Open  ]],
Cell[158057, 3547, 161, 2, 51, "Text"],
Cell[CellGroupData[{
Cell[158243, 3553, 211, 5, 75, "Input"],
Cell[158457, 3560, 180, 3, 69, "Output"]
}, Open  ]],
Cell[158652, 3566, 113, 1, 51, "Text"],
Cell[158768, 3569, 667, 20, 102, "Text"],
Cell[159438, 3591, 73, 1, 45, "Input"],
Cell[159514, 3594, 103, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[159642, 3599, 299, 9, 54, "Input"],
Cell[159944, 3610, 551, 17, 45, "Output"]
}, Open  ]],
Cell[160510, 3630, 114, 1, 51, "Text"],
Cell[160627, 3633, 1188, 34, 104, "Input"],
Cell[161818, 3669, 122, 1, 51, "Text"],
Cell[161943, 3672, 692, 20, 45, "Input"],
Cell[162638, 3694, 688, 19, 45, "Input"],
Cell[163329, 3715, 691, 20, 45, "Input"],
Cell[164023, 3737, 639, 18, 45, "Input"],
Cell[164665, 3757, 113, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[164803, 3762, 187, 4, 45, "Input"],
Cell[164993, 3768, 19929, 343, 290, "Output"]
}, Open  ]],
Cell[184937, 4114, 134, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[185096, 4119, 482, 15, 78, "Input"],
Cell[185581, 4136, 129, 3, 100, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[185747, 4144, 437, 14, 78, "Input"],
Cell[186187, 4160, 129, 3, 100, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[186353, 4168, 483, 15, 78, "Input"],
Cell[186839, 4185, 129, 3, 100, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[187005, 4193, 461, 14, 78, "Input"],
Cell[187469, 4209, 131, 3, 100, "Output"]
}, Open  ]],
Cell[187615, 4215, 118, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[187758, 4220, 187, 4, 76, "Input"],
Cell[187948, 4226, 177, 4, 100, "Output"]
}, Open  ]]
}
]
*)


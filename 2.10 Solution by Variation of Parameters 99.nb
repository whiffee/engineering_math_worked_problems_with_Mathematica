(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    141526,       3319]
NotebookOptionsPosition[    135250,       3114]
NotebookOutlinePosition[    135638,       3131]
CellTagsIndexPosition[    135595,       3128]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["Example 1, p 100", "Text",
 CellChangeTimes->{{3.6733934719692698`*^9, 3.673393482527574*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.673393518852916*^9, 3.673393520615732*^9}, 
   3.7683371920077057`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqn", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"y", "''"}], "[", "x", "]"}], "+", 
    RowBox[{"y", "[", "x", "]"}]}], "\[Equal]", 
   RowBox[{"Sec", "[", "x", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.67339352781612*^9, 3.673393577468112*^9}, {
  3.768338189752522*^9, 3.768338224743167*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"y", "[", "x", "]"}], "+", 
   RowBox[{
    SuperscriptBox["y", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "x", "]"}]}], "\[Equal]", 
  RowBox[{"Sec", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{
  3.6733935782688837`*^9, 3.673395345970913*^9, 3.673395381480083*^9, {
   3.7683381954298763`*^9, 3.768338227655787*^9}, 3.768338275043992*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{"eqn", ",", "y", ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.768338235694524*^9, 3.768338237934511*^9}, {
  3.768338283581562*^9, 3.768338284419794*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "x", "}"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"C", "[", "1", "]"}], " ", 
        RowBox[{"Cos", "[", "x", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "x", "]"}], " ", 
        RowBox[{"Log", "[", 
         RowBox[{"Cos", "[", "x", "]"}], "]"}]}], "+", 
       RowBox[{"x", " ", 
        RowBox[{"Sin", "[", "x", "]"}]}], "+", 
       RowBox[{
        RowBox[{"C", "[", "2", "]"}], " ", 
        RowBox[{"Sin", "[", "x", "]"}]}]}]}], "]"}]}], "}"}], "}"}]], "Output",\

 CellChangeTimes->{
  3.6733935782688837`*^9, 3.673395345970913*^9, 3.673395381480083*^9, {
   3.7683381954298763`*^9, 3.768338207783679*^9}, 3.768338239218367*^9, {
   3.768338278509317*^9, 3.76833828537217*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eqn", "/.", "sol"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.768338254037674*^9, 3.768338299066985*^9}}],

Cell[BoxData[
 RowBox[{"{", "True", "}"}]], "Output",
 CellChangeTimes->{{3.768338259221444*^9, 3.768338299866601*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"frx", "=", 
  RowBox[{"Collect", "[", 
   RowBox[{"sol", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cos", "[", "x", "]"}], ",", 
      RowBox[{"Sin", "[", "x", "]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.673393746288548*^9, 3.673393797516962*^9}, {
  3.768338336387229*^9, 3.768338337763365*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "x", "}"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"C", "[", "1", "]"}], " ", 
        RowBox[{"Cos", "[", "x", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "x", "]"}], " ", 
        RowBox[{"Log", "[", 
         RowBox[{"Cos", "[", "x", "]"}], "]"}]}], "+", 
       RowBox[{"x", " ", 
        RowBox[{"Sin", "[", "x", "]"}]}], "+", 
       RowBox[{
        RowBox[{"C", "[", "2", "]"}], " ", 
        RowBox[{"Sin", "[", "x", "]"}]}]}]}], "]"}]}], "}"}], "}"}]], "Output",\

 CellChangeTimes->{3.673393766729878*^9, 3.67339379830552*^9, 
  3.67339538601403*^9, 3.768338339102984*^9},
 Background->RGBColor[0.87, 0.94, 1]]
}, Open  ]],

Cell["\<\
Above: The answer is correct, except for the Cos[x] which is the argument of \
Log. This argument should be an absolute value. Putting in the Abs[] makes \
for a nice-looking solution, but I have no clue how to diagnose its \
desirability.\
\>", "Text",
 CellChangeTimes->{{3.673393831554644*^9, 3.673393901152807*^9}, {
  3.76834168727913*^9, 3.768341737339987*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"grx", "=", 
  RowBox[{"frx", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"C", "[", "1", "]"}], "\[Rule]", "1"}], ",", 
     RowBox[{
      RowBox[{"C", "[", "2", "]"}], "\[Rule]", "1"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.673394593500066*^9, 3.6733946173914022`*^9}, {
  3.67339489718337*^9, 3.6733948975017357`*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "x", "}"}], ",", 
      RowBox[{
       RowBox[{"1", " ", 
        RowBox[{"Cos", "[", "x", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "x", "]"}], " ", 
        RowBox[{"Log", "[", 
         RowBox[{"Cos", "[", "x", "]"}], "]"}]}], "+", 
       RowBox[{"x", " ", 
        RowBox[{"Sin", "[", "x", "]"}]}], "+", 
       RowBox[{"1", " ", 
        RowBox[{"Sin", "[", "x", "]"}]}]}]}], "]"}]}], "}"}], "}"}]], "Output",\

 CellChangeTimes->{3.6733946186667*^9, 3.673394898675213*^9, 
  3.673395389165337*^9, 3.768338379070854*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"xrx", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Cos", "[", "x", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"Log", "[", 
       RowBox[{"Abs", "[", 
        RowBox[{"Cos", "[", "x", "]"}], "]"}], "]"}]}], ")"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"x", "+", "1"}], ")"}], " ", 
    RowBox[{"Sin", "[", "x", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.6733950564936123`*^9, 3.6733950894566097`*^9}, {
  3.673395312247672*^9, 3.67339531895886*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Cos", "[", "x", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"Log", "[", 
      RowBox[{"Abs", "[", 
       RowBox[{"Cos", "[", "x", "]"}], "]"}], "]"}]}], ")"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "+", "x"}], ")"}], " ", 
   RowBox[{"Sin", "[", "x", "]"}]}]}]], "Output",
 CellChangeTimes->{3.673395091855568*^9, 3.673395392506586*^9, 
  3.7683384722045727`*^9}]
}, Open  ]],

Cell["\<\
Here I get a couple of initial values for use for NDSolve. The accuracy of \
location of the first can be seen on the colored plot below.\
\>", "Text",
 CellChangeTimes->{{3.768339193484344*^9, 3.768339204171821*^9}, {
  3.768339893261763*^9, 3.768339921195372*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Cos", "[", "x", "]"}], "+", 
    RowBox[{
     RowBox[{"Cos", "[", "x", "]"}], " ", 
     RowBox[{"Log", "[", 
      RowBox[{"Cos", "[", "x", "]"}], "]"}]}], "+", 
    RowBox[{"x", " ", 
     RowBox[{"Sin", "[", "x", "]"}]}], "+", 
    RowBox[{"1", " ", 
     RowBox[{"Sin", "[", "x", "]"}]}]}], ")"}], "/.", 
  RowBox[{"x", "\[Rule]", "0"}]}]], "Input",
 CellChangeTimes->{{3.768339170830661*^9, 3.768339180652958*^9}, {
  3.7683397496955843`*^9, 3.76833977236242*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.7683397733942003`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Cos", "[", "x", "]"}], "+", 
     RowBox[{
      RowBox[{"Cos", "[", "x", "]"}], " ", 
      RowBox[{"Log", "[", 
       RowBox[{"Cos", "[", "x", "]"}], "]"}]}], "+", 
     RowBox[{"x", " ", 
      RowBox[{"Sin", "[", "x", "]"}]}], "+", 
     RowBox[{"1", " ", 
      RowBox[{"Sin", "[", "x", "]"}]}]}], ")"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.7683392275569773`*^9, 3.768339238858859*^9}, {
  3.768339786292858*^9, 3.768339788177617*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cos", "[", "x", "]"}], "+", 
  RowBox[{"x", " ", 
   RowBox[{"Cos", "[", "x", "]"}]}], "-", 
  RowBox[{"Sin", "[", "x", "]"}], "-", 
  RowBox[{
   RowBox[{"Log", "[", 
    RowBox[{"Cos", "[", "x", "]"}], "]"}], " ", 
   RowBox[{"Sin", "[", "x", "]"}]}]}]], "Output",
 CellChangeTimes->{3.768339241165205*^9, 3.768339789851966*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Cos", "[", "x", "]"}], "+", 
    RowBox[{"x", " ", 
     RowBox[{"Cos", "[", "x", "]"}]}], "-", 
    RowBox[{"Sin", "[", "x", "]"}], "-", 
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{"Cos", "[", "x", "]"}], "]"}], " ", 
     RowBox[{"Sin", "[", "x", "]"}]}]}], ")"}], "/.", 
  RowBox[{"x", "\[Rule]", "0"}]}]], "Input",
 CellChangeTimes->{{3.768339264475568*^9, 3.768339275129697*^9}, 
   3.768339802097571*^9}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.76833927636032*^9, 3.768339805735325*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"s2", "=", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"eqn", ",", 
      RowBox[{
       RowBox[{"y", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}], ",", 
    "y", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{
       RowBox[{"-", "6"}], "-", "6"}]}], "}"}], ",", 
    RowBox[{"Method", "->", "\"\<ImplicitRungeKutta\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.768339316089754*^9, 3.768339346047327*^9}, {
  3.768339383519451*^9, 3.768339393765679*^9}, {3.768339456749721*^9, 
  3.768339463333005*^9}, {3.768339531218721*^9, 3.7683395327929792`*^9}, {
  3.7683401001157093`*^9, 3.768340124646089*^9}, {3.768341308373659*^9, 
  3.768341325418908*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndsz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"At \[NoBreak]\\!\\(\\*RowBox[{\\\"x\\\"}]\\)\[NoBreak] == \
\[NoBreak]\\!\\(\\*RowBox[{\\\"-\\\", \\\"1.570796326599037`\\\"}]\\)\
\[NoBreak], step size is effectively zero; singularity or stiff system \
suspected. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndsz\\\", \
ButtonNote -> \\\"NDSolve::ndsz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.7683393957301292`*^9, 3.768339466215914*^9, 3.768339533701572*^9, {
   3.7683401039240637`*^9, 3.768340125455468*^9}, {3.768341312616691*^9, 
   3.768341326727786*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    TagBox[
     TemplateBox[{RowBox[{
         StyleBox[
          TagBox["InterpolatingFunction", "SummaryHead"], 
          "NonInterpretableSummary"], 
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{Typeset`open$$ = False}, 
          PanelBox[
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAACcRTfsh+b9RTIGt9UPiP7NyQbIY
ufi/OSj/xn+D3j8azF6QY0f4v7GuzKTZedo/KArJcTfd97+hJnZzrJLXP+GP
tX0gdfe/kagcddE/1T9OI48CNwT3v+5Q32R/KdM/YZu1itaa9r/nN/oLnYnR
PykhyYujKPa/Ek6RJWYR0D+c7l63hbj1v0x9UteOwM0/taBB5vBP9b9dRmB/
UOvLP4JgEY6J3vS/f9DnMjNPyj/2BC45q3T0v/rULqM6IMk/FfHMDuIM9L8w
CfSB6jzIP+jqWF1GnPO/PBCFDuKNxz9hyTGvMzPzv0f8OYukKMc/j7X3eU7B
8r8h0gN6o/nGP2jpP29+UfK/4CRcsaMGxz/nAdVnN+nxv+RRXQksRMc/GihX
2R148b8yc0GtiLnHP/QyJk6NDvG/takco+RTyD+CS+I7Kpzwv9cwD9M9Kck/
u6sgVNwr8L+R77XhzibKPzbhV98uhu+/lX9u3K84yz9ehkgIAKPuv+Jcmt9B
iMw/0/TSN+PO7b/ELTaoEOTNP57yYbzw/uy/jzQW1dJXzz/SC8syWR3sv98A
q1r6hdA/Uu7Nr9NK67+p9RGVKWDRPzvsqh6pZuq/QKuSyt9b0j96eYziqIbp
v1G1gVOsYdM/BtAHrbq16L/zB2p7V2LUP/pBXWkn0+e/bPrWJKaF1T87fUws
pv/mv953P/QrodY/0kdARE8w5r9ASTimc8HXP9EtDk5TT+W/fyd/OEgF2T8d
3XVeaX3kv2sV+s0/Pdo/0qe3YNqZ47/eWtQGmZnbP9M7k2ldxeK/53YgwOrn
3D8qX3PHCvXhvwNovs+zN94/6p0tFxMT4b/vE5XRaKzfP/elgW0tQOC/5fUS
PuKH4D/Ykl9rRbfev9XL8U9FTOE/bvjEpYT23L/kFo1cuBDiP53wXe3nU9u/
0b2pRwPL4j+dH6sYAY7Zv/sjbDoYmOM/N+ErUT7m17+02JZ8P1rkP33BtTPQ
Rta/sUk+fOoa5T+U2PP5F4TUvwWCV29a7uU/RIJlzYPf0r/cZq0pt7XmP8Zi
i4SlF9G/I6Q4aNiP5z/ow3TLN7DOvwOhnhzYZ+g/duc5qGxty7+jG88WxTLp
P6d4Z0wN5Me/dGhB+EMQ6j8KL/wK9pbEv0AiSRkq4Oo/EFP5kEoDwb+rVDip
fMLrP9xoEdaQALu/7T2TqZKh7D/+df6+HHO0vzKr2hJScu0/ybx4bQCxqr+G
YushIlXuP8NEIo3P2Zq/nKBS2zcp7z+qjg/7QZZcvgLftPH//+8/YtkJ/w==

                    "]]}}}, {
                  DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0.1}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                   PlotRange -> {{-1.570796326599037, 0.}, {
                    0.17949336488494885`, 0.9999999733763334}}, 
                   PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.570796326599037`"}], ",", "0.`"}], "}"}], 
                    "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAACcRTfsh+b9RTIGt9UPiP7NyQbIY
ufi/OSj/xn+D3j8azF6QY0f4v7GuzKTZedo/KArJcTfd97+hJnZzrJLXP+GP
tX0gdfe/kagcddE/1T9OI48CNwT3v+5Q32R/KdM/YZu1itaa9r/nN/oLnYnR
PykhyYujKPa/Ek6RJWYR0D+c7l63hbj1v0x9UteOwM0/taBB5vBP9b9dRmB/
UOvLP4JgEY6J3vS/f9DnMjNPyj/2BC45q3T0v/rULqM6IMk/FfHMDuIM9L8w
CfSB6jzIP+jqWF1GnPO/PBCFDuKNxz9hyTGvMzPzv0f8OYukKMc/j7X3eU7B
8r8h0gN6o/nGP2jpP29+UfK/4CRcsaMGxz/nAdVnN+nxv+RRXQksRMc/GihX
2R148b8yc0GtiLnHP/QyJk6NDvG/takco+RTyD+CS+I7Kpzwv9cwD9M9Kck/
u6sgVNwr8L+R77XhzibKPzbhV98uhu+/lX9u3K84yz9ehkgIAKPuv+Jcmt9B
iMw/0/TSN+PO7b/ELTaoEOTNP57yYbzw/uy/jzQW1dJXzz/SC8syWR3sv98A
q1r6hdA/Uu7Nr9NK67+p9RGVKWDRPzvsqh6pZuq/QKuSyt9b0j96eYziqIbp
v1G1gVOsYdM/BtAHrbq16L/zB2p7V2LUP/pBXWkn0+e/bPrWJKaF1T87fUws
pv/mv953P/QrodY/0kdARE8w5r9ASTimc8HXP9EtDk5TT+W/fyd/OEgF2T8d
3XVeaX3kv2sV+s0/Pdo/0qe3YNqZ47/eWtQGmZnbP9M7k2ldxeK/53YgwOrn
3D8qX3PHCvXhvwNovs+zN94/6p0tFxMT4b/vE5XRaKzfP/elgW0tQOC/5fUS
PuKH4D/Ykl9rRbfev9XL8U9FTOE/bvjEpYT23L/kFo1cuBDiP53wXe3nU9u/
0b2pRwPL4j+dH6sYAY7Zv/sjbDoYmOM/N+ErUT7m17+02JZ8P1rkP33BtTPQ
Rta/sUk+fOoa5T+U2PP5F4TUvwWCV29a7uU/RIJlzYPf0r/cZq0pt7XmP8Zi
i4SlF9G/I6Q4aNiP5z/ow3TLN7DOvwOhnhzYZ+g/duc5qGxty7+jG88WxTLp
P6d4Z0wN5Me/dGhB+EMQ6j8KL/wK9pbEv0AiSRkq4Oo/EFP5kEoDwb+rVDip
fMLrP9xoEdaQALu/7T2TqZKh7D/+df6+HHO0vzKr2hJScu0/ybx4bQCxqr+G
YushIlXuP8NEIo3P2Zq/nKBS2zcp7z+qjg/7QZZcvgLftPH//+8/YtkJ/w==

                    "]]}}}, {
                  DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0.1}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                   PlotRange -> {{-1.570796326599037, 0.}, {
                    0.17949336488494885`, 0.9999999733763334}}, 
                   PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.570796326599037`"}], ",", "0.`"}], "}"}], 
                    "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic], 
           BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->(
       "InterpolatingFunction[{{-1.5708, 0.}}, <>]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7683393957718697`*^9, 3.7683394662553587`*^9, 3.768339533715646*^9, {
   3.768340103959362*^9, 3.768340125470828*^9}, {3.768341312656824*^9, 
   3.768341326763996*^9}}]
}, Open  ]],

Cell["\<\
Using NDSolve does me no good at all. I was hoping it would fix the problem \
with the gaps in the plot, but it looks meaningless.\
\>", "Text",
 CellChangeTimes->{{3.76834094468146*^9, 3.768340994238883*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"y", "[", "x", "]"}], "/.", "s2"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "6"}], ",", "6"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "250"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.768339559529339*^9, 3.7683395660237494`*^9}, {
  3.7683396243999777`*^9, 3.768339636917597*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input value \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\
\\\"-\\\", \\\"5.999754857142857`\\\"}], \\\"}\\\"}]\\)\[NoBreak] lies \
outside the range of data in the interpolating function. Extrapolation will \
be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\
\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{
  3.7683395725997953`*^9, 3.7683396378143578`*^9, {3.7683401134634132`*^9, 
   3.7683401280847607`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwtm3c4l9//x+29Zyk+RglJsit1bqtQCUkohEpZpcheESGSioTKSDLKyB73
uW/C+34je2fv7L19+13X769zva7Ha1zndV2vc57njyNi/dDwLhUFBcUCNQXF
/602P6Lm9/f54V3P3lMUlrJk+EpQ/OwOPzym1M/18Yos+fCjjFtPN/jhmMOZ
Ml1VWXKHbDVpZoEfDnfqqDYdlCVr562ndA/xw40bFou8mSfJMgUWJvlV/LB2
hMvC6ZMMeaNUGrsXwg8fRRmyGiVKk43iS9aTAvkhq3LhT0FfaXKu1wWZP378
kK0q5SOVpTTZTvV2/DV3fqgqk74kKCJN/lPxxhV5wA/7ZP6kv087TsbhlqTA
JX54obeiNbJQivyypi66gY0fXr+pN0k9LUHuOaaWXMTED0U++t4pI0uQJUJL
cpPo+OENzodmUdkS5F+XMppc9/ig9ysX82hnCfJeUzib0BwfVPgYZ7uydYzs
3KsX5tTAB9U/9U4Lch8jGy+0BbC/5INFCXFVT0yOklMNrrzeDOGDdq9UQ3LP
HSUv5f36PBLIB6sp3hxjEjtKfuVaiBZ58cHrdnbZzHNHyHVbsbuW9nzQ6Kxj
3JXnR8hnaW965OjywYEmY+eyYjGysMDQIwNGPui/fVe8QE6U/G3Yusmflg8y
M4W1Fh4WJctljp7MoeSDDVE+pAY6UbKW6uQc2xYvXBegMDzbK0K2s5h3qJ/m
hY/4DMW5n4uQfybv3r9YzwsFzZO80vuEydrHBazOveKF8txFPymU/iM3L8dD
h3BeePhBtdsh9v/IZuWCwgkhvNBWIIrZfFKI7HhFZGDLjxdGy/53yiheiBz9
UMK8+NE/e95Zh51aiNyXr2Qqb/jPn0Ig9FP3YfIj1WsGkry8sJbszmidLEA+
TEh223P+yz+Wd4PsL0Cuu0Fh9Z2VFwq4vX5tbClA/u9J9iN5Ol64hdlZtRwW
IDd+o486t84Du+myU2/FHSRL85c3GnTzQPrFGe8v7w+QJxePXPZM5IFlUVcV
TH/wkd/6bbeWx/HAidYiwd+v+cgIa8vN/Xc8cFCwrs3GhY8cK+FnHxTJA29R
ul2aOs1HvmDZHRbpxwMv+UyXWtXwklPrI0jJVjwQ51Uilkd5yLe/rl0gH+WB
Swjw2FDmJu8VFH8tF+GB+7uChtOHuMnx1Z4M3wV5YESO+MbOPhe5Y2iPFMXL
A413Y1WC6rjIlw/TXzGm5YE6El33+W9ykZVf818bGuWGNys6spSDOclsXiqW
6yncMFEjqlxlgp2cFbqFTn7ihm5DNZnDhexknfflwj3x3PC5Lq1GbTA7OagA
GS5/ww0fDMy9AcfYyVvz2nefBXLD1rXRuXE7NvLYHVN7VhtuOBa06zS8w0Iu
1/N0ExPlhrGHH5iJ6jKR31ZrSZgJccNTihebfcSYyI5nOLujBLhh0V+khm6X
kSwknn5mj4sbftqpCv2cw0j2223f7aLmhl/1h/jmDzKS1bNOBUWOccG8rsJ3
7Sv05DrGqajNdC647HjXuIigJX/2+6km+4ULGps8c3r6jZbsseq3dC+JC4a9
vnbc4gUtWWqIz6gtjgs+eri6m3aBlhxerMn/I4wLzlnd2zj4i4asZ/s58Y4D
FwzO5OK7S6Imt1bfyPh9kgtuJM8ovpmjJH8sY1MoOM4Fk3pfnIO/Kcn3835V
fDjGBRdsDxTx51KSdz7JN9/9jwtKFsbra7lQko94sW9ss3HBsidxN2J2KMgu
p2q1JOY44eSRZ3+neCjIPB+VhvyzOGHQZ80N85odov/trN29dE4YMPd5/Xv0
DpEenrpyKZUTan7yuK5ruUOoenAx8CdwQp0L5n8tNreJO0ZzMtnhnPC6fHXV
muw28ZMpzbvbjhNyLU9RJWRvEtfdeA/ISXJC1VR2g089a4S6vAghdZQT5hOb
LQ45a4TMvLS3mAgnXHG5A92D1wgGW81BnoOc8LtLSJ2u/BpRavwkfZ2BEx6K
bqdperVKCCk1q1RMcsCooaFwMaMVYnzlpal2OgeM9j4hdZhhiWjJec+slsoB
F+IN3iuMLRKoQ2rF6c8cMIi8IhGILxLvR8tEjr/ngOsf0gown0VCt216ivUF
B7wTuZRcsbZA/MjX9my15YARXn3nVkfnCffHNPEWxzjgzoyiaJXQDPH53cHE
BDEOmGb/ou3O1F+itljmU89/HPCmKW/2jZ9/Cb59kxTjAxzQ7rq9xclLf4mf
4dmZeowcEN4zyEnwnib6vuPZL2k5oHd1k3+FzjRB3dL5g6D8599KjpPmnyZS
ZWnuR6ywQwc07OxK3hQxqJPt7tPBDn19qx/8NzdJnIzq9N5sZIdJPYLvmV7G
6Pp2UAa41rLDnhlua5+ISeKwjXGoYzE7ZDXUnaaXmSTsv/lHTOWwQ5eXtn9Y
+t/pls5nvL77jR2+UhDWKP89QZh478eZf2CHUc8/5MY+niC+4pIfu6PZ4WZM
GPmiwjvdNQaj5Ovh/+LV6P1i+SYIrau+ac2B7NA6tFJ/ZfCt7tt36RlXvNnh
OY6tjeKycWKkt+U7yYUdPr1WGvc18q2unOhunpYjO6Qa13betBon/O8fK8Lu
skOOnUi3IMVx4vd3g7JzFuywrit35BDvW12hVS+0xJgdaqIij5z+jBEOZ9Oq
FK+yw7mC0JL63DGiLKCpNvciO6w82FLdnPhGl6lui3wCYYdVxUbqZjfHCFO2
o03fVNjhrunXqZCrb3TTja62HT3FDkt4jp3doR0jLgyl9AmK/utP0jxTTu4o
8e5Y42CcADtUuHSefbggWnfUcWOUl5sd4hrkw08sRolnW5dnWWnYIVs05aA6
yyhRyb22uzvGBkULzC/v2Y0QrGbCVJ79bPAFTeFplsjXurc+69KtdbDBoGrS
5OihEWJL+hPbXC0b/KDIJ9jYMEwoXdD+r/8bG2S9ymH1UWGY+O7+Aal0ZIOL
w6vVi6xDxCCMX4u9ywaRhN0XJyYGCS7GxCxnczaIH5Kd+QEHCU2Dj9aXrrPB
Q0sjEe4fBgm3uE8Hjl5hg1y5x013dyN0M4Y+N+5pskGvsBHmXr1Bok8yOahL
lQ22vn8n4SI5SLA9TjmTp8AGm7Xe0RjSDBJIaepCuDQbbPs5HDBZOUA8pkpL
u3uEDfZbC+/9dB0gvuh+vQUOs0G+ThutGw9e6nZFp3Md5GGDbot17COj/QRT
77e6JWY22MGvJKOR2E+oimX61lOzwZUsaWsJ437CyT5LIW2bFUbdHFx8zd5P
fM7PnvZbZoXpLHJH/Eh/iNbt759N/7LCQZWSkPmxMF06zRxj+RFWKOXw5tXQ
+T+EystcFtZeVhh/qdr0+lYfYdeWh4+3sML+2bZJncI+IuHwT3dIsMKIAuqQ
ysd9ROOdApkPOCtktDjjl3eyj6DMLhx9UsoKXa6uBCo/CdVVWC36cCWPFerw
VmTxZvYS986V6B/LYIVmvnJegQ96iffPS+kok1mhUC9lh6NEL0E0lJX3xLFC
9rH7zG0TPcQOb8Xjn69Z4Vadnl3B1x7ipEWlRGToP75ZVZzC8ULXOg3ttw1g
hRXSASPjEj3E2zn4Vs2DFao6TX5UnO4mapRw3UPOrFDDnrpmJ7Ob2PCtoli9
zwrVWqkzzzp1E1K11YWNt1mh/Qj+eVG2m7jFXuOQbsIK23mxLcGVLiLyRq3o
M31WGNZ0lBUWdRHYp7qum9qs8GHzRVl2/WDdlQlSpCLCCs+doPxhjXQR4rJk
TXYVVggt6KataLsIE/f6rcmT//r9LlKhjegkwmBDDn6MFX7l2x8rjuokyhl+
30v4jxXGHrc2Zr/RSczrNx1+ys8Kpzo2Jvk5n+uKxjW3XGVnhV1Pb3eyjXUQ
RkMtLyTpWaF42IX4wqwOIliy7Tz1Pgsc0/kZ1ODSQRQ7t6/0rbFAEZvJOcNz
HcR0SUdG4RwLHEipVrxA10EIUnXdjhpngR1uri2hg4G6+rrdfHb9LPDKG6n6
J3HtxLPonnqNDhYYlJHakWXTTvzs6X0m2MgCPxz4Km8g006Mi/5RWf/FApOi
z6vf3mwjDtj3zzVVsMAjjAetu6vbiEv5A6kZBSxwMnrYc7zima7v9qBZUDYL
RBcf36A3byNyNIY5LL6wwI13zvOlkm3EcPhIjXIiC1TdzBHsWGsleNpGvTnf
scA8Nwotk+pW4sLhcbm/L1ngsQDt7CtSVYTHnYnJ6iAWGNi5OpyyiRNZWZMf
P3qzwDcZqUfMSTjRvzJl5O7CAoV82nvc43BC/fkMPH6HBeq0VOu0n8GJ6XgK
/qhbLHDUs0ngBDtOROfxOK4YsUDP41NFXSMYMTKgerBCiwUmDmk9kYzEiKAz
Ec56x1igFYVSa8o4JH7NnxB1nmaG94S9vkteQQknOnX39mFmuL8j4TuyX0nw
CRo3nu5lhtS2n5WU8iuJe7q+nlT1zJDZ26A9+VAlQfelseVNNjOcWmgW9V8u
J7TNHgYWPmKGFUOzX15UlhILjwK7BR4ww+0HoSb3PUuJ9yGxJ/2smOH5mhHx
VqVSYuon2nvRkBlWKXZgF3JLiDB2DoVueWaYYebXEJlVTJCrc0a315iggtyZ
6b9lhYTeySUtNR8m6H1xPv6aSj5xtunHDNmVCdYXxley0+YTEs6Ob4ydmOAp
VpLf6ZY8gjp/ctDekgle3ywRbHXMI4qVBrxi1Jjg142aXOaMXELkfH3uX1om
qGsGFrYVcwi2gVCTp3uM0Ps+NZUaYw6x43dxn2KdEcq/7WRrKflBdGD4Zb5J
RuhnElBUyfSDCNMqmUAIRnjFniY3rSCbWLmcJhgTyQirmatI72UyiaFZm2rh
EEa4E2evOj2YQTRGithn+jHCcNnd77NvMohvTQnF8BEjdKQYIWh3vhEWRm+u
/TVkhMEXFzJN29KJupv+oQg/I1wbfrsflppGxNuZrU5/YoA3Cti2T5UlEw6s
81daYxngV82KgkzvZEI1JzCt7BUD1KA501l/PpnoX8268dKPARr81mSh+JVE
CAfsl5ywZIB/ikWbabs/E6mxqb6PhBignXau/LDqR8LlzOlOEz4GeClr4kxk
ayKh9afhpBobA6QbqYi+bZ/4b17WBzn36CHj9fIIp48JhMR3HY38P/TwzKXs
wRnOeCK7eo5+LYEeUpyv9LCVfk/42gbe7n9LD1UOyuyYt8USekwHSmpe0sO2
Gv+S6z6xxMJVNbtYb3roaNLBhbTEEHK9b+pVbtHDm02pylUh74jCRZXXXofo
4W1Rq9Av/70hgt82TNlw00MacvCv7I5o4oaytfplZnrYpNFi+y4ymtjwDl8+
vE0Hv+dPdG5RRBNnGPqvV/bQQSUdpeHx+SgCFQoUoPxAB7m/3mQXm4og6KKk
uF2i6WD7xn+nNT0iiMuULcwTYXTwBYviwQKmCKJrRHi33osOMqVFS3qeekks
pVcOvDeng2W0phiIDCPE5bdSZUXooGi46abKsxDCITUpMeUgHSw1zd/dPhpC
5PPqxPBx0UGcSc1hiAgmkI3YkB0qOij9PqGe4UAwYVqhaFc3SgsvnH1y3w8N
Il5edD55O50WfpC+f6EOeUa0FB+QaP1MC1eeS+a6rwYQB6Wg8IU4Wsi3wOQn
mhlApLGwc0mH0UJHuh/RJgcDCNictbJuTwuNVuo/M1P6E8s3J0tenaSFP45a
GNGuexFnGl7lUUnQwsa2P4HmPl6E/3nlTFdhWni8xCDUgtaLYBEJTrjJSQsT
0KpMHQFPQnxczO/YMg0shU+5Lt9wJ8weWWqihTTw21LdVRMBVyJo5M/cq+80
sIJl7Id0rgvx3fhW3O00GjhlnkadpuNCUJ4znaOMoYEhpIiKJ35PiHTGa+81
XWngeGmu9PKuM9Hi3azO60gDt5Tl391LciZ25q/Ojt2hgY+nFq1MLjgTVzsu
q4cY0cCj6WUfUt8+ItaSL8yQ5Gng/lxLJBrkRAjz/Yr5cJwGvlnqjXk57Ejo
hmqo2YvRQAuT+CNsGo5E4kMkhoWbBkbP2R5gYXEgNFXPIFeXqKH6sy+2NBUP
iOj2E2/bcqjhB8JDPvPNXaJcO+v8l3RqOMDCJ9Z+4C4xXiY15fqZGoad4KE9
9fkOcTr52Hn+KGpY2JTudLvAhhh0Epk0fUgNf36Auo0bVgTT8KdoKVtqaBaY
XF0UaUUoXBc6t21BDT+9MX/1XtyKCDl7KDpBjxo+mD3AfOTWbUKGgVd14AQ1
JL2zH9AoMydMvN6M/zhKDVX3ueIZac2JZ3Ocr/0FqWGLVbSkgeEtor2NbVyE
lRqWO3+sO7VuRngnMUTdmaGC19jyLNrumxDkMzsjUxlU8NaZhqChwWvEGZUj
A4PJVDBsVpswtLxGpCte7un8QAVrdYWZ7AcNiWDZhKZfYVRQLCYo4960AaEu
rlqRZEcFzw3zt9of1idyxe4Uv7emgoVxNw/8Nb9KCIu8zH9lRgXpakBXRoge
sXuo75uPLhV8vnbbeXjyMlHM6R1jKkUFlxyOzogN6hDH2FNf64tSwS6laaUw
CR0ihqX+5UUBKng0CglmcNUmntAfDlRkooK71yfG6AQuEjK7ZQ85pynh9bXE
z5LRmkTi1ogdwzAlnBHX++S4qUGwbDDf2++mhLuCsWLqdzSIqaWbt2ZJlLDr
rMe3W5rqROrktjbpGyW8pB+RmySNENzjYpowiRIiIicP3DUHxLORS6AojhLe
OBF+Mdf2PGHZH6/4JZQSMpvs1BtFqhICbWdFAx5QQicD45jvwqeJ0GYbQXcr
Suh68XUu/TUVYqMx/MBDU0p4c7pvOzNMmegg9bKZ61DCExIFwo6MSsRr1Gtb
RZISTgYRPbTq8gRFRcraSRFKGDHwSmY6Xo5wKiUvih+khEcrI4L0t04RlwsO
TfIwUkJrjepFzWpZgiGzrG1hkgKePXmRNobnBOGWPvJ7YpACekzrvnvKLE2M
f2Em93dRwJEZscolxuNE1eebWH3dP/97ErG8gpKEb8x2dno6BbzXHlwaEXuU
sLZW0pFKooDF2BiR1XaEuCjjPJoZRwF3s3x2jPiPEBw14wI/wihgzOSB6Nos
UWL1tUihbCAFpPjA6Wq8L0L0mN8yyPOigNeMI1zXjUWIlNXmkAIHCignGxm6
yyNMvMBYxJTvUsB4gTDu62tChEPExcpicwqY4R24t0QWJJSOVqyU6VFAzkV7
d7HoQ0SdUboVLvsvH2cBf0oQP5EtPLKjIUkB60gXMqzf8RHRM4Lvf4lQQKbu
CKaGbF7iZtCbxjouCjhRmFE5usJNIPqND3SZKeBy0y8tRTFu4shhRtp6agoY
5TCw+9SEi+i13X36cWofBTkX8MOdHETq/uPspJ59tM5pnUVKmINwip0cSSXv
o8WDxjRr/WwERW2rfmb2PiorM7oehLAQ4uIZUsXO+6hM0M0I7pf0xELFf1Zl
1vuo6zP1H8kedETJ9Xexldf2UZysqq/tTEtcfu5P80txH1V1dN0o9qEmeAXX
ztSJ76NvBw/pbbymIvp/2juT+ffRv7uiJUo/KAnnUeP+5s09NF7x+ehXagri
jHc9T/v0HiqmmtCc57JHouFRv9TVu4fC6c/07Es7pBiNE8X9FXtoeSJFP0lg
i1SeTB39N2APFbT9qPGEf5X0/IxH3dzjPTRozJyqeH2ZpNcyt7dos4f2St5e
th5dIg1R9thvaO2hJe9Ue/WGFkgZcVeTt5X2UGVszDlyaJ7kcupX196xPfQO
1zluSb45Ep1VjhYt0x6aIlcWZVcxTWraOOrNsL2LPgjujkiRmSLFRcXnMc/s
oiJIzfuMvAmSNAz+j6txF33x9iPhujBKWr2xc50X3UVRVuZfs+kjpMp555cH
cnZR5suqZvHOwySD/8w3haJ3UV7ruIfHTw2Shkv93/wJ2EWDT2bY7In0kx4b
p55IcN5Fb5mN6EhQ9ZGolmprzax2Uc95X4eHlD2k6Ii/VgcNdtGf13lpPIS6
SKKS7DudyC666/ef/8qNDlJetVxMjOwuertiwDI+q43Usu1BcHPsolOm85nP
kptJ1rGJd1r2d1DNJ0O0tmpNpCU5bC9qfgc9dl8tyXu2gfSscfT91YEdNLqR
Rnj0GZnEZccgz/Z7B717TKFnCiGRkmmlG+ord9CJWE2h50drSXJJV23Dv++g
czvEZKXML5JhV0w8Q+QOauLI++7FV4w0/KRUsdZnB/1qS8Hvzw1Jj9n7fz93
3EF1J1ODSacrSFSZlHaa5jvoQB1bs3hQKSn6wlEa6is7aCiVzq1FqmKS6LD2
R0x1B+0y4okQyS8g5fk4qPhL76DGs2Fqja/zSS0/8x12mXfQ0tjpaoFPP0jW
+p105dvbaEWyfDs0zCIt/d367Pl3GzVXFpu21PtGehYidPZ07zaa5xYhpRmR
RuISU29fJ7bRAcvPN+eZUknJlXcfFpZuo21aUun8VUkkObNQRteMbZQ2D/6+
bPOJhK9mpch/2EZZNHUbHL/EkwxfN51bCt1Gq2k+3pDSek8all7pzPHYRm/d
//PM4+w70uM6/scPH2yjUW+Or38PiCZR3TnLImO6jfLcPOPnzhlFit63SJvR
3kaXnn8/UUQKJ4nGP0MyVbZRoZ2FpbszIaQ8pbSeBxLb6IeeN1Ym/kEk9RaS
i8SBbdT+vMuFMK8AUovjLNsE/Ta6rCoYJv7Nh2TNyPnty/oW+uPtqSkNWg/S
UqqCxp2JLVSyRXlrdsuF9Awx+SPauYXuzR9+AD2dSVx9Xm5DNVvowNGS+cYZ
B1Ky2yfOz4VbaDObnbM0ZkuS467KtEjbQjV8C6M2TW1I+PdxLcGYLbTkTJnw
FmJJMtRlGux9voXezCqySto3IQ2PnfD84PqvfuIXnXjSNdLjAAMe07tb6HL0
L97RdT0SlaDrd/7rW2jiR6dD2OxFUnTxe+0OzX/1r13KMz6rThI1Kh9+q7CF
Po+ZnhszPUvKmx/wvnZkC2Uwc20ukFAgqYdT83PxbKG0bhtdCyInSC3ix3Kb
qLfQgiwzfe+3R0jWuO6lV8ubKPHLxxIaHSYtmTuNXRnZRE9YX3Rt/MtFerb5
2o+ldRNlz7ayfHSHgcT1ruAgGd9E0dRxNOjIXl2ybHd+aN4mqv+abvBY7mKd
XP3OFe3kTTS2V6102XukDrcVnqSL3kRrWFBfnfrWumvUms9+BWyiN28pu5ry
4nWNZyNuxT3eRJ8o/aJ7Gfa9TtelQ8nRZhOlPbvWwxr6rq4m6z9ONaNNtFzw
dCpgcqtTH7v/l0drE63a65LreqtXVymY92tScROt4MqvtOljqTtjvP2pXHwT
RVQ0PzT33astjNT0jOLfRDv+3ND1qh0CcrURRncYNtGUppPKgsgQ+L7fIaOy
uYEOGgq/mSYPAikVYUaW6Q00T6XkyFmbQSDyLa8in7yB/sqskftlMAAShrZj
Q8o3UOa3ikcD0/vBAQGtxzezN9ArDhVM6gz9gCO8U5z61Qb6fSiv4kJ/H3hZ
JUzZ6beBVkHSkynDPsCw86A349EGmn2vgUmsoRfsO+y8MjTcQOUOse17N/UA
zy9aduIaG6jaEcNHvSY9YO1PpOaW/Aba/Pm4rdZYN5jTE9lM4t1Aj6ZaPVRm
7AZ2IXatrnQbqCMr7xH9z11gHM3P1llfR8Niv596c6YL/JG9YL3YtY6army0
rbh1gnouezKSsI4yB9xXdeXqANqXfn7hiVhHrRtOfmJF20F14K7fpM86Km9j
U9Lt2A7KVl4pRFmuo3+5gr+WNbeBjI6fiQOi66jfx233wpxWIM6+55bPvY6a
Ocm3LDi0guSLFw1DaNZR2yfvpnqkWkFccTfdyfE1VGOb1BWR2QJefNh76Ptt
DXWs7Qk+jzYDmtaLuoYf1lAaAVeAhTQDf+bXR8TD11AtudDSJINm4OYt1t3g
sIZKyFlP3pxqAvcstNUFZdfQqnp7msljTWA45vXhReE19G30l0zO1d/A4nfP
WjXnGvqO55vmp4Tf4DrimOmwvIpS77sMPlpqBJqi0Tzlhatof6NqW01RAwi2
CDW8lLaKJv28nn3yfgMgffCP6nm3im4EPFH9K9AA9Lgfsmy6rKKpj3rDT4bU
g6ir93Rf3FlFDYUkiRSkHrSGm7/gN1pFC8RlvqvtkIEJzWUaJflVVHh3Urrd
gww+IBrqv0T/5f/itFB8lgz+eJ/xN+JaRS33A5KS9wlgvSqx83hxBR0ZDVW0
jSCA/Tjtyo8fK+h//qfy+1ES+C66ewp8WkH16jxCDr4mgQWLlYeNkStoF+mJ
1H93SMClc/jvjOMKWu126KwzOwkUcvdIepuvoH6NzDq5E3Vg82qzLfOVFVTL
6ZhNClYHfOvQEUnpFfQS3TAe7FkHIE2RSMmhFfTCLdtZB9M6QK323VKbeQX1
fJ06OXe6DrwoSei9N72MJkqlf8zdrwXE6puDa93L6NNgJ/3J0VrAKhd+4zlp
Gb0XPF2ZRq4F0RkerSnpy2hv/G2W9MRa0Db+iFP+/TIafHakYehFLeAXu38V
D1lG673lOF671gIzS8sIA7dldGN4/HmuTS1IiDcmD95bRvft/DbPX6sF/Z1X
GB8ZL6MK33/rKWrWAhEerYv7WsvouKi/b5RSLbijr/o8UnEZXXiV9f6yVC1I
eylfJXh0GT2fro/f/a8WTNZJUWbzLKNHJTbku3hrwXFaUaBKs4zGdIWqfmat
BU5qB33Iy0vorqfE2VK6WpDjw1FmNrKEjg4NJItS1oKlEvrNqZYlNPfh1Fb7
Tg1QXNtT8sCX0K98el1NmzXAXW7NhSFvCaWl6h5i36gBpU6zebFJS2jxd/Xm
V+s1YCdjdEH89RKqfFPc8co/DiZ6ZQr9l1BzrufhWls14JlYq4PWoyWU8SrO
7bpbA6otiYw2yyVUgDpls+tffboEbNLm6hJKKWN73om+Fuh0FYsvn19C8y06
l06x1YKXPDl3nsksodpKNfIifLWgUf9rMqfQEnrsJr/U6X/754j4OPiZdQk9
c+o9i5tkLbhGeicku7uIPgt6ItilUAtiaCNuoTOLaMqvwG+marWgSy3og17f
Iqr4bYlpU68WCPh6df0hL6KXRs3S8s1rwa3Sx3yOZYvogtORqWDHWjAkZxUd
/mER7brcf8MxqhZ8D8x0tg1bRI9JxhsLp9QCz7ZVfQ3PRfSbcKZNV2Et4H4a
xr5tuohuq9UX6Q3VgsGatrkOnUX0apfgB4aNWpDF/19j3ulFlOpWP1rJXge0
SvJf2h1cRNdvY3f51esAF9Oe/QXGRZTka4sW3KoD/Wbal0Q3F1A9wSU2bfc6
4LbTx9jTtYA6LsW9QfLqwDdAF6LzfgH9sHo7X/cUCTyN0r939MUCamf6k8Pw
GgmoD33QonRfQH/e8OM4/5QEep+dpCm5sYAKSzb+Kq8kAdYakwAJ/gVU6hdz
pZgZAYbfG6+zSc+jw/nhZKESMvA687eghnke5Sgh5pInyYCnz8/F9+8cGmJP
c2LxQD248N+3xdmMOVS0/uLSmFc9yPiy/bdecg59niVuTH+pATzO+zwYdmwW
7X6atTbN8hswGyl+Uqef/aeHC0tttH+D1FWS+db4DKqk9lc4Kug36FBZ7nmQ
NoNWjq182dv7Dc6gWu3aR2dQDap5T3rfJkBdP02iE/uLFodQ/V0OawYuXwmG
KZq/aL8bI/olsxmMPsu4SB6fRnX2AjUT65vBr9N2v15lTKNcew9CbrK3gJCv
U/CA3DRKt6l7kOF9C2AOnCySUptCm876S1cUtALuM+Nf9Cwn0JBhv/3Y/zpA
EG/NqKzaBHrD+OmwuHYHWFn4IsYtNoFm5XsMzz7qAO1f7yZ1jo+jvR592aJV
HSCWdyzhttM4+m4mOPewXSc4tDjy5rHPGCpu8HlrF+sCYulDATHxI6hIxX+V
EzG9QDhc8MW85wg65PTrQSGpFwg5mUZqm42gK9cuWZXs9AIBheYPWwdGUF2W
x55mNn2AC8J8i5hhtOeqm+Gu3B9A2fVpTPz1EPrKzIPTtrcfoOzl0U6sA6gX
XY/uqvgQUPn9UyRnpAM98muvfLx5FIwwVMkUpXWgyxRJV87PjYJI9eazlQ86
0AHfoPYkpjEwUjB7vX6+HQ3wzVR5qTEGIhPEwya329AUzVTD6YJ//MH7JWGe
VvTqkxjDrIRxIMi4ESwW2oiuvpS8pO88CR578ySdYm9E72s9/DkUOQnq5mXL
wLsGtLOzOMcz6x/veDB/M6ke3VDf6sUn/vGU3htvSwjUOO7+9XSLKeByHpWg
na5Blds9xjKuTIO3EyzvGt5VosUHczoyT86AQT63/vy0CvRP7zq3yZUZcPzC
0LEPReXoyeBfZfT2MwBPLSi9112KntQ42v4obQYsWlkM7h8uQtnd95ltBWdB
YrHljTvaP1AlGfcSgnkOKPArTMvaZaMpsO3MZ8k5UO/K4LMbnomOxZ+zdrs4
B7bkcpNjfn9Fj8l/V5QKnAMm2VRzdcafUUOHvOWPW3Ogn/875fHFBHRj3TTD
98A8YG03PlatEIfynNo5Yak0D+yupj9eK3uN7gcScqKP58Gpg8my/+2Ho8wp
Zp40UfMg8s2yl0FwEKpcECMykT0PhEXMdLsM76EVp6yksqfmQVa7n4inmh4o
5KHjq6NeANu0EdlEyWPgg3zBlzkXwGcGV+b8dn8QnKtt2sq9ADQixaC/3guQ
6Ot/r65wHoxzt7jo1b4Cp/fr2r9szYLqy5CH7fMbQGrftFFxmAIxr/jnXW7F
AgtCgb9QdQDYtjiReg/EA9l57gOf0SJUhbcmRb39I1Dh7JxJf7+I0maxoW3a
ScD6z0H92V5a6HTljDTDsZR/eaS/aG3xwI65u3Fnab8AygqDpW/jIhBEvaZ7
OJIGLIfumKu4ScP0UxVPkrF00Ocl63XipSLkaJ0cbP+UAbxDKwceOgHo4cKj
x+ibBfwzXR+xqF2Aw7xImeqt76AySvqcI6oHv/Qq8qgI5oDb3rGaQQ1G0CyL
TBiw5ILmzfs3D3+5Cdl8rALst3NBsaxp21Mea4hfWVd+Pp0HJgCkDDOwhU+F
IuY+dueDQzkxk0N5jlBqXvRLcd1PMM4ffXs27zEcQItvthQVgJFXAxpH9Nzg
2yg9rpm0QqCn99ncuMYbaluN1tHGFAFa0X66+IQAuHPK0++/58Ug787kwQCb
5zCHikPptEsJuGegGKJPCoV3Wr/MGNqUApRKOOLPYCQ8mHo2xcGwDPB/NfNW
tIyGjS7NpsFq5eCoTTrRW/YOPtOy5fgsWwHe9B9upI2Og/Xdh19SK1SC2Zs+
RQ7XPkJepxZ6W2UUGJSWwNKhJHiSslrtriAEyvXhDGJbqdCI/HGf7xMEv/9q
1SV6p0P3dx4VdcIYKD+RoOH5JAsmWhp5eSZjAK4HlHe45EBc8uRp6SM4aGSc
irFfzYPjy4zrf77gYPqjtE8KVgCZKkd/vjpWBcj0NJkUg8Xw5Av0sdq3KsCe
V2VgfaMcGhl+kF2WqgYnxJReBfJD6H7YdS41qxqcHukbuKiMw4Txq1nGMr9A
2fWDhRSvqiGWI2XHkPML0Dw7pDAqWgvHPWklSk/VAB4S/QXzdRJk0hocs8+v
AY0ue6MsnA1Qhr0sRVCxFvincGbfPdMEr3W/s/r97549F9QC27hboHvKo/8C
VOoA5cthOg/+NpjgeOmPXGkdKPeev8Or3QExZfH40bMk4LtUNBeW3gXHKSlN
YypI4K/Uq5Dus73wZExh2yYkQOMNsy+/Aweh0e3X0ZnqZBBiELdtJjYM3aUc
9M2ryUDrEPfu0vAITFy5wMZ+oR7cRzDzB9VjEK8UqYe19SBneUkwiTQBx1/s
hD7WaQCUy2y9kStTkPla58Uj5AZw0f668OmLM9Bo4mVVSGMjyPTh8zlcuADd
c20DTuv/BgWXv3J4iyzBRC918Lf5N7iEfyKLfVmGQ8mRvo2STSCihvnCefVV
uEzvbf7VrgnIsLJs8G2tQTrHB6r+mU1gkr2HZbZhAx5oMT5kOtME+NmTZDjR
LaiacKqbyakZrBKV10v39qAe5X/FI9+bQedZjY9M6RSY1T2W2PL5ZuBksyqi
OEyJBctOGDk5t4AHUa4a3JE02Pt3bfIX81rAe/TqkDklHZaxhXEJL7eA508X
i66F0mO/qxOaml1aAadu0avvPUzYsGTYj4x/96i+s4549xcWbCXSLTJwrRU8
PTCofSaUDTtganhZ0b0NZG1/l1LW48SkKsFxtpI2QErl3Dhky4WdEzvBNLHZ
BnoOPm/iiuTGrGfp6957tYP7sDtcn4EPczFcTXMubwdxQlOxWbf4seCi4ee6
u+0giTuGVws7gGUGVGjs+HYAAYGsLM+KQ1jleIZoO9oBzr9ipNY2FsSaLr2n
/E7RCdjbBE3zKP/DVnifoJbPOkGQ5LPYxzoimAk9kThS2Qk2Dni435EWxco2
hL1ttzuB+K4QHnFADHvW26jy0KULFP/mi0xlPYqN1R/lX87pAgltYYlH+MUx
7Urv1aezXcBjnE+Z8vgxjD1JKs/3XjeY9TvETftEEnscHRBFldINHl10fkl8
lcI6Arucgge6AUNIJY3k5HEs4V7w8ch/7+KwC8Gzuy9lMCnp4dRE3V5gExP6
QFVFDosUPB0oEtILjLuWvApp5bFFtiirL1W9YDBMTMeiRx4rXjwnlK3aB/4z
YO1ei1PEDo283ZH16ANtfSUvdZ4rYb5tf3t+FvQB7PzXwQh3ZUyrKC62XOYP
OL+c71PsdhpLT19wRez/gEMlas70QWcwlg8Xjaq//gGPc/3MD8adxVq8Vznq
hfuBQQn92u3+c9htdYOwXq4BUGnSrNjhqIZVy6fft7w6AIbefJIVFFDHjh3d
vzASPgCoEzU4s8jq2HpgR4Ar1SDg2WC5JQg0scp7Qed9vAbBI+sVTbLdRezR
wI8TaNwgWHXvvEvW1MZETHoPUxYPAjX5lgf8R3WwIB257aCVQRC6nq0ptKmL
XZIeLHrpOAQ8HlSeb17Sw3ZSmb82hg8BX7O4oHBKfey7oHIMR8YQOPXTj+Fe
hD7GxR7p8nZ8CAQdBwmvcgywrsWzpxIshwHjcq3riLgRFmZnK9zvMwxO+mfS
LjQaYaoj0ezCCcNg39/dxdjrOvapbWo2pWsYsJ6Ukg4ZMsbuFcVmZBqMAMUh
WemRMVMsTMK25enjEVDOwF4eU22GfY9T2lJ7MwJYKY8fVf12E1v3atfpahsB
EkbsW+1B5tgLhHuKxmQU2CYNyN+ovo1l5Q5zNLmPAuRbz63jV6ywZtE8lfi4
UdAS2CHl1m2FCdAavDjVOwpEfqtvFe9YY5mkyGMWFmMg7dQkf93Du1jTGYur
kn5joCEvM+0M3z1sJfOE28qnMeCgojidA+9hqpH1NWFDY0Ag2ydvSeQ+1mjI
dK/ozjhgsQ9L6ee3x5aquiOePR8HK1dOf/cftMf4FL8VXEkbB+79tX4w2wGz
5NemHZ0YB6fOGDTaGTthC73PUznsJ4CoW/cZk8VHGM+V6/W94RNgeO9HhfoD
Z0yl8shKWtYESKRNC2waccYCPldpnJubAH2WDDpUQ48xrruUIw/+6cbK67Fv
dnZcMKWOJibF6EkwzZgvfz7cFTO7+FmOIv+fTtQvEfU7/BRLkQTPYlYmwd0p
pisntd0whTlvkSq3KWDv6BWY/MsDM7G8rBP5fgrcbEtxUHb0xLybDjmblkwB
lTHevJMHvLBfeaVwfmsKGIsHk33dvTFjtw3Lw77TwNnz/F/WO36YB4XLR9eg
v6A5w2cobPMZFqadGPg19S8Y3230efkgEPsQVXO/u/ov8JVmTEjoDcRKhQ/K
n6OdAcQJBj3amiBsC6mspQmeARMrQXU1P4MxptCJLKV/OjTxcAdgUgrBBJo5
ou/XzIDeUZqW2JIQ7KyVza16ulnA3tVrmlP7AvMOYFh8EzILtNr1r/6kCMde
kk51/Po6C64yRHsffReOJXDeLFuvnQWwOz5fWPolVp6U/fwmwxyooHV70WEV
ge1ihgJioXNgI1rsl/TsK8yXKlEjL2wevFbNqXzzKxqL1K2RGM2YB0M0vwZE
xd9gn6LnWfnI8yDhTkTVuRdvsNucIjPltAtghLGYLGnwFvNPelIofGEBaKuu
1litvcNeaDF8O228APIGDFPabWKwqKmEeMN7C+CyRdHJnZYY7POpGv+g4AVA
jb4LdS2MxSB24NJkzQJIvoPVpEfHYXV3s89Rdi78m3cPGzW2D1gTo7qswMQC
yI/y4CsM/4ANGtjzXqZfBE+t3sjpvIzHKIcrBn5cXATKNdzfvqcmYupUNi5u
dYvgYXzf3+xDSZgFY4u4V+ciYKf8FG15Jwnz4lDr9h1fBHZuOYH035Own0L/
nQ+mWQJDtAv0mprJ2NGzvfTvkCUQLhrV/tM7BWNwuRafV7wEqvvS2bL/S8OO
eOFXCmuXwF//rN8L7mmY2rNTFKUdS0D/+SxxrTUN84xiv4utLAG7ikfIs/Cv
2N8sskyT7DKIVp4gNzB+wxrHNPDZ9GUwl2Q+GI1kYdMzeS6LRcsgVMilgD87
C6NfETm2WrMMjnQyU00JZGMIFcXLndFl4G82MuO9lY3lCpVfZxZZAfc/prlW
kn5gb28oTEnErYBndqzW2e25WI5FSrx0+gowTohiYebPw+rvcunJFq0A9YDU
1mOmeRity0KecvsKSOe2VPsykIc9jcryvsC5CpKiA8f+rOZjpqQjHHdCVwHv
LecgqF2Ifa8fs8iKWwVCZbneXomFGE1TWvbKt1Uw+CfVUXm5EMvpkLj0nFgF
t14pm5QlFWF0o9LBacxr4Gtwz7g8cwn2c09hZzJiDXSGldFtcJZjTFRruqc+
rgGxC0WXe93KMUvaojiP72sATDrHjfX/4yynlZl+r4GJk2YXPHIqMKuD5x4f
51gHT3pV8kasUIxNQWvSMXodnDq29ojaH8PuKNMpFyavAxK9/X5NOYaVnql9
vpe3DmJPjwzLbWHYXTUdsVet66D62pIgoxuOletdscjh2QB6QoGUHe5V2IMH
19uWYjbAln7RZ+mPv7Dqj3ehW/wm4Oji/sjsSWAytJS/MzI2wW8+3ZTtOgJ7
b5/w50/JJjh6k9vv6wEy5qDSuqXRtQneuVWsKpeSMZ4WRJGDdwv8Xv/Tfpuu
AbOhPZyRHrkFVrPoFPerfmP19kXFvYlb4HNx0IM09iZMqcWwli17Cyyt6awW
nGvCmD6FjrqQt8D2kgI3V3wTlqeyLqTGsA2YGI5eaDFrxqgcWt50B2yDp1/1
BXnmWzCHFsdkltfbwMzBvjZBrBXrUGHMBZ+3wdbVzPo4k1YsgxZp/FK5DSoZ
p2aWq1oxw0/ZDI+3t8HL9yLN5z63YUktL3yYXHeAg16LXvvDDgw5DWzP3t8F
iT9MJ9Mf9WDC4SFtIm674JdpAj6R34NR/PmtxhC8C3S3oeSP9R4M+t8+3J6y
C8hEwZ8e/14M1AU0Ow3sAomIp1XlcX3Y+RvVZ5ON94C0AePTO+P9mNA3lm8v
7u6BsOtvlF7JDWB7W0Z8D132AEvGwcGrfgNY5cexhbPReyDol/ypS6yD2Llx
urT2hj2gLUpCJLIGMVVXHQ5GrX3wR+eK86eNIexw7Wuf+Wv74FhsMPm92DC2
c6Bnut16Hzx7aqIwqjeMlZfb/Ur23wcdp23on6QNY2dpXnqqlu8DivvtyT6m
I1iiju1S0UEKhDmhT2v29yiW0PXt1t8oCoSdTjBMmmISS99/OkQRR4Gsi5x7
unJmEisQ17zHl0SBeI98uX7y6STW6NL/UC2XAolZYI2imJvEKDm5A2ObKRDl
psuBYiNT2D0d728aXJTIYS8dKqrRv9jJUr21+DeUiGNpw1Vv0QVMdeiQV248
JSIkLlJXfHEB02aY2q9JoUQum+oMnnZcwKyNAxmX8imRG3el7JlLFrC3S0WH
tdsokfhr5TfXri1iG1IiGis8VEiV4MIlJHYJw+OXX12OoUKcVU/k3DRexUxX
sl06E6mQtodLt0gBq9jC5fum1l+oEN1itxSf7FVMcK9P1P0nFWLf1Hi9jHYN
c79dU5DSQoVkrFyofVuyhskcjevdYqNGTseK+LOc3MDivp8/9i2EGom2Sx55
dm0bk6XfZFZ4RY1MRxkkPXyxjdVY5i9Uxvyzt6iR7xXb2AqHRGnbF2rE85pM
gqjkDqb3hPMKRTU1AhVwtSXqXYxGZfTxDQoaxFMYqw4g7WGPsNBKWg8aRMj/
r2/YJUr8yAHHRbkAGoTEvqJ90okS73TSP3I7lAZZe9nqz/yaEj9/mD+sNI4G
6VJf0LDvpMSZ3VKvPyylQebLJO//vkeFp0mjM13bNMjfJ00370ZR432xKwJZ
vrTIqhbVmywOOjxqrvNKd/C/Ielmbq46Q4draJX5072iRbxG1eQO3aXDM5YC
xm9/okVqfU4EhpfS4W5X2PN4IS1S8IPeyfM+Pc5FLaXjR0mHWIr5x7Y0MeDa
TpZuhkF0SGCUwKWAdmY8eO0k02o4HbJZIxbYTMOCV/lSJMa+oUM+dD/YsVJg
wc+/SsL7kumQC790ijXfsuAKOSOsthgdIid1I/jADVZceMk21WuPDrlllP5O
fooN33B91JzqTo8Mq3nhL4Q5caU95M5Ff3qEkhS94qrKiT8J5lyfCqFH7vL7
vQgx4cTnYvIOn4ylR1KfLdgceM2Jjxat2JYU0CODertNK9RceNOm+17DEj3y
toqFrXiBC//mE3B83YEB2WrxOPVgggdP9kp3fOLCgGhFlzgE0fPiHzx+/5j3
YkA8aqjYa4/x4mGuggqTYQyI9qnsg1X3eXEHxxLV7nQG5HCTkMaHGV5c1nzx
StkoAzLt5cU6ts2HF6taPfK7xYhEaywYLp0+iOeceZG3bcOIOBQNXFW3PIh/
U/mx4mbPiIQ98L1XGXQQ/6Cw6/7IkxG5v8Dhc7bpIO4tHRdg9Z4R+SEQ+uHK
AwEcOdwcrdHGiPhGJJ9ZSTmE120jBfSXmRCaPL/VO6pC+J/1KC1xIyakauf4
ioy9EL60PNiueYsJoThg1SD3QQg/POO/FuDAhAzpDYxNbgjhzn1QeeclEzLw
pewNT8l/uEAFUrrQwISEB6uUXk4Wxh18EbT7KjPSJ6JhOqcpigd4Rl3duMGM
0PiEnxC/LYrHPB0c4LvNjJw9PnTf10sUh07+FEaPmJHskFsvovJEcV5LqNYY
xYxQv56NPS8qhlcCpBpvZkbWKwcTeumP4JyUCCnzGgty0uXA1NTMUTxHxqcE
3GRBUgfFha4wieP6t0q/tVqzIGbmuQ2/j4njkUUKYdvOLAgp2IhSwUYcZ3GS
vHQpigWxcPUN8OwVx+l6uRqm61mQv/FKF/lajuFbP8eaJC+wIl0b9lXnuyTx
uGFRrOIKK9K9E69WtSmJq3DczjW4zorofRHwsTskhbvZ97z2uMOKpLtvxYpY
SuErIr8NSc9YkcQbHEaKk1L4XGRx232UFYnpmycxUUrjw/fDu76qsCHxDwLy
T+rJ4B/fLvL1I2yI2bbexcduMrgZvHGdR+cft3BGhz7L4C38R1r8TdmQyscS
8xdXZHC8ppxs6smGUFiPGigmnsSTjsxVMpezIXJPDuj0eMnitwf1vzwE7Ii6
fImm+OQp/DBL0ciXi+wIO/sBxtL9U3iXsqBo31V2RIH6bcI9fjlc/9XUR+3b
7IhWoaQf00U5HDn/7L1IADvS6Ltp4vdVDv8vIT+8FWdHRhLt82Qc5fH548wl
h8Q4EH0jhPInsyKe4T31Q+wYB+KDrvxrvyJ+r6E27fhxDmSlj2XJE1HE+5yC
3p6V50DOV9i+ynRVxInc3Yc3NTiQR+dndS4PKeJpygvi8TYcSMCDDuXECiXc
QqP9rUAqByLEHtvIFK6C15t9enTwKCcydE75R6qPKn5Z04W/T4ITMTOzz19I
UMUbTuhUfpTmRMgz/nIm5ap4I8Uy8xEFTsQXyZzy2FbFm9IufJXR4EQEbBRU
mLzO4W1Ls380rDgR6ek5Aye/83hfmOolp0ROpGJSZXdYD8FnS7uPVvFyIZPU
6T0OH9Rxb7Gq5Y6DXAhV4P0qpx/qONPLf5pUkAthzDiTHFitjkuY+5lzif/j
k3ddx+fU8Tv7R95ZKXEhLJWmPa81NfAejUc0FDe4kLxEYjVsWQOvq6cbUX3P
hVjIBptb39bCU/rlPxcKcCNfMi0S3rtr42sD3ELPhbgRz6S5+9SvtXHdoeX4
a6LcSJG66o+Ab9r40kh+7IIkN9JIldZZ3KONq0/Jv5I6zY2UpTT0c53XwYeX
5X0/3uBGRkEAmz+DLi7MqHAr+C03osHvKBmddQlPlFc4YMzGg3QerHQ7r3AV
b3yIOnJy8SD1yNKovsFVnCJLt6qelwepNTu36e50Fbc+YuWkIciD3NJ3vcj0
7SouwRtZLSvNg7Sd37wXx66P/1ybeMSsy4OsaLDzt4bo40RJPAk+50H+vnuI
FPob4GuA2uv4Lg/yQNTuSsK7a7jSdvK6MiUv8rGWSywk/Rr+tFDdRZOWF/FS
UXrrX3YNX5V+5mjOyovg5dDu09A1fOUg5e1XgryIR5ZVR4SM0b/zaU9z+Rwv
coPGXUiRbITPft1iK/PlRa6zhLZOsRvjo+xLyboUfMiFM9yV3XUm+JTNi9+c
NHyIFRP6SaLfBJ8rEtrpoudDFJTyxIOXTfB1y0vXbdn5EL3Vj+qOQqY4U04q
fZAQH8Lr4Ro842KKy+rfcKhQ5UN69gvHCo6Y4T5R5YqyHnzIw7eP6769uonz
cYbU8S7xIZU3tebq31rgr5TFnK+s/YsvPNu8mGOBM1igB59v8SEMRxfvH2+w
wLcz1u1WqPiRomjt0T5aS3xQ8z5rKzc/cmnR8tIZd0v8m7uOYZQiP5IqbuLm
InsbVx1k7mPy4EeK21sC5EWs8AK69CB1H35EdynELUHWCpc5oXnCM4AfyU6+
/YwDscJFPL19p0L5kd+dNvMHLa1wOp5Z4boP/MjLp16NeYlWeNPFxrvPy/mR
HfTKOKWgNa7jZMdWAfkRqU/V+0InrHH8LV3RSjU/ckJ4NfLiOWu8YOg8w50G
fiT/2Ip4mbk1/sHrR4Z6Pz8CSrcnpT9Z49zJl655DvMj1DPYzbQf1vjLuont
3HF+JNbzlutxaI378gpfEZnnR57f/VVgMmSNr58tXzVZ5kfaX69MUixZ44+s
TT5GrfMjaWUlvT+pbPDpFysX6rb5EUpM960Ltw3+///dkV8/Bg4gR2zw/wGp
PqMZ
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->250,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.768339572684065*^9, 3.768339637896571*^9, {3.76834011354257*^9, 
   3.768340128158884*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"plot1", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"y", "[", "x", "]"}], "/.", "grx"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "8"}], ",", "8"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Yellow", ",", 
        RowBox[{"Thickness", "[", "0.004", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plot2", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{"xrx", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "8"}], ",", "8"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Thickness", "[", "0.015", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.673394422580143*^9, 3.6733945631698923`*^9}, {
   3.673394625791685*^9, 3.673394638279325*^9}, {3.673394688198708*^9, 
   3.67339471873244*^9}, {3.673394796010439*^9, 3.673394803273264*^9}, 
   3.6733948430516367`*^9, 3.673394884914446*^9, {3.6733949594054203`*^9, 
   3.673394993466855*^9}, {3.673395103592832*^9, 3.67339516818116*^9}, {
   3.673395208922968*^9, 3.673395247313017*^9}, {3.673395324039357*^9, 
   3.673395325511491*^9}, {3.6733954633512278`*^9, 3.67339564404381*^9}, {
   3.673395684989966*^9, 3.673395727024987*^9}, {3.6733957668575487`*^9, 
   3.673395767023407*^9}}],

Cell["\<\
Looking at the plot of the RHS of the original problem might have given a \
clue to trouble ahead. \
\>", "Text",
 CellChangeTimes->{{3.768341003861725*^9, 3.768341030078492*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Sec", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7683406117238407`*^9, 3.768340630794714*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
GMtYGN0la8kn+bfao1OTi1j41rE5hk4yr2b2vD8aLLS2aVClkKzrFVveM5eF
VTOGZ9FIdhrvtf+owkJJ/qYINskHM217GhRYyM8XrJxFcvrKkshqHgvt94w6
6pJc1izPK2OR9pETr+xIbtkfkZ9HZ+FJqY6b+0kWML+aXJIwMU9qeecFkmfc
sWg9PcnEYwpdEXUk663LD4gZZWIN0zx0nOQt3UxxCEHaDz1t1iPjFXY8KHP3
IBN1z79NCyc5c3abjucAE38dEBRXk1xeaVTr2MPEofrq5Rzyfj64XnO37GSi
vfKbmX4kjwokv/U7mPi9qM73KclGS1/PntPERMsLXhonyfvf+nrZfV4DE7X8
07JHSI7ck2FDq2eiQ3Dz8UAyf6pyvcN/VjGRv9UwajeZb5/MkN31kIk2fi5Z
v0n++2XhzZZSJp6bEa4aTeanycw/TZX5TPxUbnaoWIaA6pS4RUnpTKwNsHP2
YhPQqdVfE5XKxHnjUQMzyfoQ1du5BiUxUWGzRNBBsrl4RrxrNBMfHNY+eJBL
AIbe/qIRyMRrR54v/0XWZzefHaK0k/TXxLzxVZ4AakmwDHs7E92DTc+1ziBg
7XdjA4ELE2ljBrRWsr7rvd+cAQsmLuoa3DmP1IeWfAVigwkTW39IdXrNJuDf
3z5bmg2YKNU7wc2ZQ8BE7JBSlza5H/esInNSX3TzFXMnFZj47uAJra+kPq35
vY2WwGPiI/9fL9w0CbAzKtjFYpH2P56rP2kRsKthtbaKWAafHnl9T6hN6s+v
7Q8Mf8igpVzP/DRS7woNCxVr/ieDRm8+vFmvR0BFjCDCuksGbfZ07JExIPcn
d8LUpU0GTQzZKbdIvZQ2vPv8ULUMXpqfL1hlQcCh4yPtRekyOCFVHvYfqd8x
L9es1k8l/zeLj9DcQkAqP+nak5Ok/5rWx4GuBNy5qeL3+qgMSkJtVZieBHx9
YfZzYJcMVuvFf7y3g6x3XvLU/NUyOG55OO9kJNnf3Fu33dWXQdfmdUdtjhLg
nzsbV+jKYJb3/FH54wRE65WcsFggg90rtEcwgYD7W9u427gyKK1Q+eXUWQJU
c1TVL/cw0NrjiAgKCCi5Es9d3cnAmn2aHArZH80zByY/tzPwRpt3n20pAb4p
ZR/nNDIwrVFn9ijZX2+FWafmPGJg2JOgmKo6AhbbHhi7k8rASXfml+FvZP9a
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
     "]], 
    LineBox[CompressedData["
1:eJw12Hc4Vu//APDnwWOvbCWryIc+iD5W6X0qpCItEqIdyRbZSqQISSozpaQy
IkXiJkIyskf2JuM80wj9zveP31/nel33Oec+1/0e93UfhfNuxy+xkUgkLzKJ
9L+rq5bTwGw4C5Hu5+nlP5fCjkZpiP93k4WCYi1arvtIYWN3hC4G+7DQriI9
OU1xKYzvZjN5wzkWajbwU42xlcRsvCwMdXRY6JOD6E87bgksqjv1nN52wvsV
qK3l4tgXw9lwA0UW4n+TPvOfrzgmy323aY8gC7FHT1/0nRPDhlO+OhyYYKKX
4bGbBedFMRG2DbcP9jERb4OwJk+BKLbvisPrw61M9NhmQNDDVxTL3LGKW5Qz
0ezePfUnOUUxx5r/blknMhHX5fEbqtoi2FO1269sopkowXQw25gsgtXHtdbb
3WKiMX6liz4/N2Dbbd1Ez7ky0XzUQ2umxwZsYeF1ppMJE7kWpp27UyGM+UjL
1PqzGGgtss6+g08Iywq++jtwloH4NrjsbqkSxLpHi4VCRhhI03txdUuQIGaQ
a2kd1sRAUYFSfNl0AWxtX+x01CsGWjo3XgAL/Jj6636BmBQGEixbdl/P58fs
BbZrxcUzEMvwY3eLFz9W0VXnnxDMQA2z20qSVvmw29fY+FOtGOh4BhdlXZoP
K2o5qpluxkDuH0tjskd5sQmd9JMZ+xioVFgmRjeXFzMl7059qc5AU6+Hbo8b
82L8idfVczkZSDz3R+pqMA/2EE0dRR/pyHeFP0BNjBtLCyQJTL+loxSLbV27
J7iw1/pS30Uy6Eju7hSVs4QLKy88sPdyFB1FylFSP5zlwqayXu0QOEtHaNOY
MVcxJ7Yn7qKILQ8ddeQZjXqEUbCD5oFNt9dpiKfz6MQJBwp2kjfhXi6dhqwV
5DYU76JgTrer2NgGaIg/MNxylcmBJdxQpL8uoKHXxX+QujsHNn12qI1lS4yz
F5RgfuwYY/NSrPwxGiIXHtylZseOrfcKmR0yoaEjYWsj3sCOiVlCdaomDRlE
PSiU5WLH9hxM+2BEoaGwq5oiaUlsWMIOu0fxuVTEIyEiv/yTjKXPex378oKK
smeeqG8sIWNv3kYJTDyhIrkE2sytDDKGlErD9cOo6P1x9rfKXmRsRnqjz9Ap
KhJPFHZ5LE3GgK3bSp1MRRXyb/m1PUnYxDb7KeFFHLk/opWlOZCwGPMxP/os
juacBT4ZmJOwgSd4SnE3jsimPypJ/5CwYA2e0X35OOrfVuB56dtf+GJn4HbK
AUd150c9TL+sw8VbFSQDSxxpiMew4lLWgf+1SbzMYRx5D+r8VA5aBzv68aJh
HRxRbBpcdWAd/tx1/uMsiCNRO62m7zVr4O2qL0QOWEA+Vlvf00ZWobrEWKvm
8gJKcdVTS69dBTHKccuo4wvoz9PW+HvvVqEw+WqyuOoCqjLsEt3kuwq0uuRt
qj3zyMqpiiYgtApuW9bhhO482vtSqyL14B+42v3V/SV9FvUmyv/DNb4MLm3n
qkr6Z9E/xz7bxDQtg3sTSaKpdha5/c70NC1eBt/qPaWs5FkUeNRo8Xj0MtzO
/0wxNZpFHFfzjN/rLENaZEHSTMJvNC3+5Zd0whJkhB2bWw/+jZ79dZG5H7oE
mcE4iDr9RocL4IeqyxK89VYf32X4G20M4E0eNVmC4rNvNO6PzyDKvdSAPauL
0Kb3vFpDZwapwMg1A9dF6NTeK2kkP4Oka9jz5c8sQq/6kJM17wzqOdhQpmq2
CENbZYVuDkyjK9dPVb9WXYR54aTTrRHT6NNK48N90yzgnn4w7901hTrq2knP
r7Fg99ObUp9vTCLsg88v/C4TzG1iH++8MIk4KOeiFgKZYL8pVSLPfBIl7GiK
53JnQkhqsVim4iSK91epvmXFhK8ZC8IxDROok1Kakr6VCQfenOE5Lz+B0qxs
Ko2+McDa2Tmyj3cC8Yp4pKESBjhu9+M6xRxHhfHnHhzNZcC93ASKWf04Km6D
9cLHDGgo+EHW8R5HH5qjlgOcGXC8VH+Fp24MWc7zXJmRYMCFwAN+twvG0Kwb
jL/nZ4C3oeXSesoY8pqkN0SzMeARcmfRPcaQv/kGCJynQ3dVFq1/0xiiFKF4
w1o6nGkQ//3ebRTt9wsLVw2kg2M/9ddpyRG0eGSpqoZGg0K3PooJ+wga+TmQ
su83DdbJtRpaC8PI+lxq549RGiQop4Tx1g4juwQ1Cc4OGlS4maiV+gyjTGq9
t2QxDaTYkv1lOoeQpfu3geRQGsSZR2qV/zOI1nOKL2RtpIGy55mIRPIgCncd
PJ8tRoMviVq9rj0DKEnmicdHQRpMDfbdlLs7gOgGj0OobDTAPHe0hE71owVB
38Lp31TAE3vd9mf1IXP/f7M6EBUshrbn1G3tRUiv9PFuNyqYXdx2FpZ70Ian
NQy5q1Q4NKUg+rGxB+UUp9oIXqKCES7h98KnB/1lS+Xit6WCHolsHFzXja4s
q5y9e4AKivIdfdrXulBA4RnLUEUqyGU2x77BupBPjdqQgCwVZFTq9ymId6HB
HraMl9JUkNRErwXLOxF/n9wjujAV+LFs72mhTqQ3OUriJlGB6RDEn17Yjg7b
3lDkGcKBNuqLxCPbkYKsXtnOPhzwK56e0XbtaO+M9YBTNw4zble6/SjtqFlT
ORr/icNAyLHMk6fa0JFy8zuuX3GoS1fazfunBfVaNo5vzcLh2xb5hdDmFrTj
w+6QsRc4fM3a+HzxRQvKt0UCOc9wKMsT4h43a0FVXe7T1kk4FKDlNpT2E01/
tC3bGIODDkrumrndhMLai/UxXxw28nNMp2k3oX6uSr0SbxzWrK+tHB9pRNOC
Gen6njhU03ZvLoVGtKrmHnvUBYcTygPno1Z+oI4ngxc7L+Dgfl9+Xs39O4rb
9Dra8DgOJ3sj/w7KfkcspJWtehQH3W1U4YTGOiR3JGpQ9ggO6xWV2quqdcg0
xzVS5hAO0Yzzfg3jNcgjl2x1bR8O2bYvOVxsq1H9zbBrNjuJ8dcCEgq81Yih
47TvkxYxH/P6to7iKiR77Cpj4w4c9GJNDhlKVCF7J5dB1r841HydjBVoqUS1
szd9SSo4vBE6mlEZUolulI62PVTG4b5dccF19UqUEIrR/1UivpcV2dEfVYE+
Iw83H0Xi+RMndezulyOtZ1HC1puJ++e2nq6eKUOpnrq6CjLE/XeYAdtNyxBv
3Tk+6kYcRj8nVq6yfUG2lrcKMqVwICn2mKXeKEETgbqltmI41JZmu1E6i1F5
UTG/jSgOMZb+8S7axYj1tXrZXgQHmbubug3nP6KDXFFpgcI46ONnLgxc+ID0
TTQGOAVwuPY5c9q3uhBd+ZPYaMiPQ9rt324blApRzscu7gA+HNil/QKNJt4j
p9m/dty8RHxHEduAyXtEtxDzsubBwTGH865vVj7aE2zbnMuNw9MwFTXLllyU
oHPR0pWLiIfkR93I+BzUFVcU2MWJw/l3+41KT7xD+YdOj5sQ3t5hf0ahMxtN
Pdvjo0fB4YHTrNPJx6/RTwPPlM8cOLDW/HzuWGehdKW+v/sIVyg/ip3rzURs
GmX+l9lxUCpVTJFPeYGU++7EkQnfs8h/feLMc3R2QWPoORsOC6OGRRGyGSgi
es3xEOEsPDHMC6UjSZaR6hKZiLd0QUrP3lS04d7lLe8IG+xrLILqJLRS3nTi
MmEO56mmlyZP0BYF1mdlwk0P2af4vj9CqkfPWc+RcHjyRZbsefghyl99pvaZ
8Plx/Y3djXHo8MSxnfcJn5J5cznwWTTK7ZHxvEx4xmXoienLO0g47+OYMeFg
JPFD7M0tVGM6FKVGWFExaaXyTACSiL98RZLwwW+cDjZXPJBZsKIvD+GKjEaB
H1Vn0DLX8mcyYdMXfyteqRmBv+YvLRLh288vTxYvOkLe328DHIQ35ZoIGXn6
wO+wr+VChP0pLh2WO0NBsXW8VZ7wRKHOi7sa4XCA89gmPcInzpM8ylTvAX3/
jieW/5tPuH4PVSkW1D+hg36EEwcPRsQLx8OdR3s1XxBu+Kjusj0mAU7LcZu1
EWaLET1Zw/cYDmS4p/IQ66V3acng7N2nsHZ9bKsJYbfd/QornCmwmbtnJJLw
K9Gv3Am30+Bae3NXC2HX622LEjefwa5rVhwKRLwyzYoH8tefg/bncM5WwlCs
2hpkmAl2IhH92kS8e7ekfjsU+BLsQ7/NJxMW/nPz3dhyFrw7qVMVTOTL28uM
9Pd62WAfJB+5TNik9fLDYN83MGZaes+fyLeg7MP+Usx34OyyYhZL5KOUeLnL
uHYukLeXCG4h8vdDqOa5As88SDx/RqSMMPMt71blpXx4u7RhjJ3If7WwBd6K
64XwyoHU0UfUi90uUe4cxQ9w2S9lsJCop2i6DiWp+QPkPTI+GU/U2/yF4L9e
/3yE1JnGsEtCRP80EmBs6y+Gwb9zupeI+h1d1aSK3SuBwID8Jl+ivsWKTs6T
dT/DrjsXhh+I43BdKWXqV1wpVK723u6TJNaXU60/1qgc2jkKhBqI/uFUfqQ3
kFoOYkfkWzbK4pDk49nllIbgiEbzVg85It/ofVMKgRVgfdcldifRjwYvbB39
01EJz68oN0oQ/ey5UWFX3t1qcFzZy272Hw6f5Y2tlIeqYUJlKlxcF4e21c72
FJ1v4IoZdEzoEfVRtNJyd/Qb8DlI/X62G4dLSvsaLhjWgmFnhLuXEQ4qnC0V
ktTv0FK0izfREgds5DzEHKgHWvSh8IFTOJwuZ5RxpNXDaubKRg0bon59pEqp
h36AEfuDd1P2OMxOOBT9yGwAv8kYnnJHHPJq57NDrJvhqnHtCiuI2M/sBYI0
spsBsVt8fRiKgyBL7ejgcjN49aTO64YR/Sp+Z0C6+U9QFsGiEyNxSKjwUPg7
/xM23rYNznmIw7HNsy7lO1rhhjDvgwNvcZhyDDglYdMKh3havc7k4hD6gXev
661WWHB7KBvwHof8w/+Iyba1wp7Q65ONn4j5/C9/DvJuA6zGgq+1Gof6ziFO
w0/tsN0qhcOW2J/PK7rjCYPtcP+e43d8FIdll789s1wdwFQKaIyZJNaHIpuT
Yt0B4vuNPozO43BH2/bE6nIHUCgqk9Q1HIziOtJLd3fBuVmJiKzNVCg7WK9n
8LUH7PdrT5dcoML8fzur6HM9MLvZyrDJkQqyimnmOdK98F8Ne96cCxWCVzzO
y3v0wuGgNKUjN6iAvZWO5pT/Bd3hXuyP71Ohmt9psDWoD1YrP6pbfaYCY6nV
KTq7D4p6rRK2VFBBaXw3w7ijD55ROSXWvlEhokyYp2R7P9R0pRW2t1DhgGux
VvqvfvgVM2UmNUOF+mauCGf9QbBvFTQnb6bBSqmHsNKlQfDd1yD6dAsNVF//
ShqIG4QkxzjlPao0iArNyzs2NQjU+OawfF0avHrydjb58BC0+nZ46Z2ggePB
ExK3VobgRs3VnKloGvx+89zpiPUI6IckRnjz0YHV68j2zWUEojgqHpeK0oHE
p5G8K2wEBM3e+ovI0EHCubRBJXcEyrmPbcO302GfWrsGO8coZPsPm7pa0OHJ
WwrrU94o/J2gasU9psOLXz9i1L+Nwnhq39mRZ3TI5Yvf9rJ3FNSVgo6YvKFD
lbPs6XjKGPynCdT9ZXSYV9P9cs12DN6x0ZQ2jtHB6J3jLQWucWhiLugc/48B
Fn3qm57IjENfvaFeCzDAhp9ZKKg1DkVNPGYXDzHA7drN8T9245Az1mpR68CA
pO1Jpp0F41DFd/xSeBQD8Hc/BKPsJ2BZpMeZe5IBqTnqyYyiSchyCrEJymOC
K7/U3eXvk/DdbicvrZQJe5zJvuv9k7C09CwlqI4JAyrtx7k5p6BIOEKzd5gJ
8pl+vDJWU7BPQi4rV5wFmUnVfvtZU2ARc+gm/SYLvJdzrpjyToO9Uv3qfCwL
jK0fW5rLTsPoHN9XjjQWTIhf3XHKZBqy7UxlQj+zQOWB0PTVxGlw2BLV94XB
gnd3bKzjdWaApMPz6g5xvgqc2G/y+NAM3BTt6jAOXgRz4393ptjPQF5/up9i
DHGeYiMJv4qYgTaKwwG93EXQDH5ZW9I5A9dLSmwHFhbhgzeuM+zzG9SvvJ+w
8VuCL+cixDU/zYIuOeTpnaxl6BHubxtvmIVRub+Z7mXLwELa8ckjsxBlUa0a
1bYMmrLDglyCcyCxOrRkRVqBF727uAcuzsENSxNPG7sVuHeCuhIlMg88h8NX
0mX/QBabaclelXmYVD5T/1v3D1S/T/NdNJyHMZvOR17H/sC6kBnjvNM8nF1W
2WYQ/gc8Gl7N6VfMQ5jEVaWShT9gbWw3NOmyAJvvZ/AZtKzCdUZBWmrYAmxg
6Pdnza9C/AueMyeeLsD6q8veDvxr0ED+1FNevQANqgaLeaZrID8YOV1P7BO7
t1b60KvX4GHy6EjGRRy8fw29XG9YB3+xpx0WIlRwK38cujGehDmzWw16yFAh
hHtti+FLEmZHE5l+qEwFQcHeqfhiEgY/o1e7DKhQ0mkx3jtIwjiiQ7ecJfpG
VVntHE2TjMWwO3q4f6DCwxm1l+wDZCyEtjUgvpx4//cvY18YZMx9ePj2hzri
+T0yNz/xsWEnkO2TpT4qeHMe2HDdgA2TCrBAoRQavPRSeqOZzIa9oOkIPLCi
wUTBk9PFV9mxhGG6ROFZGoT7JweKRbBjET/z5Tuu0uBX+B2Rmgx2zDFXdad0
CA3GfWLyNXrZMfWrsrYZWTS4yNIKPmjBgRUPU7LfL9GgMaVIW96MgmX//FrQ
xkYHpyZqd7oLBUtCIV+Y/HQwWHuvHx9LwYJSl5v1FejQfzrJsLudgu07Pceq
PEiHKP1j6tsvcWINP9uNWpPosEmaR9UonQv7aGejV5lJBzz3pM6ROi4sY2pQ
LT+XDgEv3stRqVyYD+m3SMxXOqzW6nwTPMCNyWuShw/O0OGRXGsI3zI3xvsl
ol2PQYecBd9Vw208GPMAf922dToUR7r4KVvxYPUOknkUEQZkfqT9q/qRB7se
+29QpT4Dfn0PWrsRwoud3VTonr+fAcZiHCpdhbzYoSy9i+nmDDiB4Q7C07yY
PNp/OOgcA544czv/Y8WH1c+flta/ywAss143cRc/Jnskoii/mwHnla7L8ekL
Yty9fNnpIwxwdwMf7mBBjH7pQUrMLAOqdmbHWVQLYnVBKWHXSEyQ5vquO3RS
CPPKKTimosKE/FxKz4P9wpi9vp6xpBYTZPxc8r46C2Om38r0OHczYbFWO/pr
gjAm218nN2bBBO7TCw9Mp4WxOv7BuXRfJvSG/zj2b+oGrODJxeGYm0zAD0uZ
JzRswFK3zrQHRTHByrNFkWNtA+a5m1lqm86En6p3ghTOiWAy1/juSdYy4Xk7
b5yDrijGuRQXxNnChJwLka8k3UUxapiEB7OXCXS0Y4vqG1GsJlnBum2eCVV6
5kVximKYxw9d5VgJFjw8q0GeVhLHbv2l37RSYAGj+v3cjLs4Fq+d3795OwsW
eg2uiJSLYx+SVR6928sC7qj8SC0HCexb8xjuZcYCJocUr0OhBNbJnmG26xQL
nh3rYZPmlcSWnKU56q+xYH/8G5M8JInxPOtweODLgmbRs9aNslLYxvYHpda3
WMBxsqdsNVQKe4UP1wyEs+D//4//H31Ax7A=
     "]], LineBox[CompressedData["
1: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
     "]], 
    LineBox[{{1.5687909088249685`, 6.158875356402177}, {
     1.5687971320519527`, -6.170151311931903}}], 
    LineBox[{{-1.569792843647015, -6.170151311931903}, {-1.5697741253534834`, 
     6.158875356402177}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-4, 4}, {-6.170151311931903, 6.158875356402177}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7683406318081427`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"plot2", ",", "plot1"}], "]"}]], "Input",
 CellChangeTimes->{{3.6733947268801603`*^9, 3.67339477189004*^9}, {
  3.673394926181122*^9, 3.6733949283168917`*^9}, {3.6733956591784782`*^9, 
  3.6733956626265783`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[1, 0, 0], Thickness[0.015], Opacity[1.], LineBox[CompressedData["
1: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
os1LxR2to6BJ+wKDw2EVy1HeuLTr4ShoVX9Ws0d1FTvMSBa8wjUK2pUP045K
rmKZJbp6e7ER0LW738mSexUzrNodv+kxAnp2+lW4zq9gh4KMFr0lRkD/Ngni
3d4V7OvnvEPqdcNgiPHBPr5+BStLU7Msch4GI6LWpXkvVzALl8NLSpzDYEog
+UxLMJN1F9mDFP+AGR6NwmGPFcyeu6Pr8sshME/o2Fw9u4JtD7D53SQ/BJZZ
bhkTdVawj+d0LlXGDIK1daFMmT0rGOst8i+WX8x5vlS6qCaygvX5RhPVOgYA
65ypviHbCtZ9Wv6oP20A4KdmU+z+LmNvJOzynW73A86xmCnPn8tYSyjnC6Hu
PsAzpHQ4pGoZ2xVwuFi/rxfw9319+KRgGcusrv1ps9gDhH7wadT6LWOX2V63
njTpBsLfCsO6nJaxB3ctnlTE/gL0z8d7p0yXseu2w0puPV1AuiokgCa3jN1f
wB+wiegE2yvk2hVIyxjX93jX9ekOIPe2Tg6uL2Evljct71p1gD3P8c2O35aw
UYknOI0jP8HBpLvC772WsFRenz9JJj+A0dmoxP3nl7Ca/oVnnENtwEbsCbXY
aAnLkrpUdPt2G/B7UkbJlF7CqHnarDnFrSDapvahBN8Sht/VEU881QrSGG2k
pKVFbHz1NX/LXAuoTv8nENm0iJX93DHbd7QFtDhsRHG+XcQmW3gY/2a+g0EZ
HmJA+iKmVbyl1Jf+HbBny/J53VzE1gVe6G9xfQd6+ee4HCQXMc2fOqeqZr4C
SxeXB93ci5h67F5e6o2vwHHXbQ6LhQWM8+ShkNH1ZhBaFIc3bFzAdL8EhEaI
NINk92eBtaULmGzlkPmOoi+gQKmE7fDTBYxm2K7+RfcLaHr5mUXVcwEz3jKN
6gpoAj3XO/1LbBawb/mxEWS5JjC1f2RLXn8B6/jmGb729TMgvmXdZEgsYPOz
xnnB8p+BpJeATzLnApY9cYmdracRKGlIrFPm5jEgsbeyP7YRmJRrrHLVz2P5
DgZa/3E2gvN39G4HvpzH+l+/VaTVNwDPQ2bLm4/nsQ8Vfe9aQhtAPOaxOHd1
Hou+H5zkJtIAsv19b1yxnsc64gPLlf7UgzeHw+dHdeex02MWnL9e1YOOjzmz
PWLzWLfKb/aXZ+rBaODrq5aEeewHUFavVaoHKzofp1um57DRg2dio7nrATfH
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
ASUbGzg=
      "]]}}, {{}, {}, 
    {RGBColor[1, 1, 0], Thickness[0.004], Opacity[1.], LineBox[CompressedData["
1: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

      "]], LineBox[CompressedData["
1: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
tg==
      "]], LineBox[CompressedData["
1:eJwVlXk81XkXx8n6WJL7+93703Xv/bliQpIJRab6PFSyDhJF2VpEWmemjCfL
SE2ayC6MyFLayJNkSb5IkzZkGRdPlKW6LdOgIo967vPHeZ3X+49zXuf9Oq/z
OuLgfZ475sjJyeXI4v/5xyP5/HgJB7wVT6ceSHjERaGgXfU/HLgbE5PEtzzi
d9nk+MHnHMTXCffVKDCEz35pj3nBQdKN+EIOlyF9qR26iW84aO1244YZMCRH
uWRnzt8cWEhN7vxzKUN8IyMqLnzkIHD/SNTwKln9O+f/Vs5w4DyjPhPtxBBJ
EOvQJEdhabhJqdVGhmxyvDswoEZBvvXNPY9dDNGpz14o1aJQWukTJNnPkD/N
9xz8RFNosclzb45gSGYx6hX5FBQTLFvmxzLEW4dW5bAUnC/0eI4eZwjv1AtP
1oCChuYhl8WJDOn+WptnakyBX3ZLaSqVIek/JL20MaNwf8+AgvMZhni9CLJw
sKDAc7ymvyiPIbSfVbSXNYWds5EVv59jSOdj1daglRRc+2ITikoYkmo3QO2z
o6BTpa5nf5EhnlXl/kccKBQHTKZHX2EIx+ToxQQXCnJZ0bc3lTOkI897MtOD
gv5ukUVXBUOStU1WF3tTGC3L8pi4zhD3Y7MJFX4UqvofOlTfYMi86fau24EU
UtuidQxvMqQtvJh9uINClr55gW01Q5KGDodJwihYd2/InpWxm5fzjbF9FDTv
j+WH1zBk7j2R3OSPFFQNEy1PyviR7biTfCQFaZNDg4+MT5W3ZMyNoTBg/CSl
R1bvsiB7SDeegtWGqlcqMtbICl9knEDhoKt4/E0VQx6o4dCyJAp3Hv/Sclw2
38loqtE+jUK149TeHtn8TuNj6h5nKHT0nn09IPNT21nr7Z9HAV5li3Jl/q2S
xHO7Cyns0j5Gca4y5IRr0JuICxT8RGlH7C4xZH2j5fLjVyh0rliybPEFhqha
qcalVVBo2uSj3FnEkD9K+x8WVFH4+o+AS5YFDFmXHBdcRyjYDZbbmsn2p6zo
ffVeC4WppDNRf6QxpOWw8VT3fQpqlbkr2dMMWRPQnvi+i4LnQpdcjWMMUews
6p2VUAi+27mlKIYhzesOL1AfpPDu+cDI558ZYmcmqjF8RaFscZLvuz0MmVP4
t4LFOwondiev+y2EIY3cFjdMUMgROn2UBjIEs7tHfGcpWJ5r/WHSkyFyB1Yv
2TWHxs812fr5zgxpGOFE/qRCIy0u02fuGoaselijlaxNw91G94OtJUO+y1Wx
bTGkIf3Gpeuptmx/2z7WrFpEY7JhTGdchSHPTEatq81pZC2S8JpneeR4bdOy
y7Y0lmXlTOa/5JEOSdTSFA8azcvXlbvX8UjxufAKNR8a9XFyjlvLeeRQqJ95
/BYapSKPNpMiHhFMW5sdDqGxMLSIUTvJIzt1Jo23RtFIKGw6MuzFI9ZDz0t7
4mj8+uV9uLwDj6iXdix0P0GjcmP/vGFrHrm2vNzQPo3G+gZdMq7LIzPeYWLj
izScbuXluAxySXLGkM6HLhq9zacPmPlxSfDWtqy9fTTu5wfVXXHkEivD27yX
gzRSJCUnJ5ZzSV9lLt0vpaH80ai3n+ISwy7veY1yXBTXzrwVtdKklvNIJdGU
i0D7Z52XjWkyfLrmo0E8FwqDIrb2DocsPX9KGp/ARde7rrWrrnJI3K2ApyNJ
XBzYWzI/I4ND9F4p3S3O5sKjwayxbgeH+Nt5ZhiUc3Gs4FT/hAKH9E5KLQz6
uDh6dqRgrbU2ebhZcGCBOQ+cuq8p6xW1SOWCmNfiAR6ubZCf8PVQITeUcn80
fMaDNWsvUaZVSNWLqlmjMR42ZB/Ij+lRJjcvv9Myf8+DuZFRlMRXmdRa+Fuu
UmRwZNI7aEWQEmmwXxnla8og7nRC8LwdCuT+tpm5aUcY3Jz+vlL/zJeGoaLD
SxWFOthvYSLX3CBteGK0NnYiYj5y6lMX5D+fXs3mrNW7V8/H/pJvzm9sn4tA
6cUXjU18tChUGFCUFgpXzC2v+4OPkLJ+1bKNWvimv2dleQcf9bWORyP7tGAm
2OWXOcoH/+b1t98emIfvzp7M3K6pixXdUqW0n7ThW9imIb9VF3b/sv7pw14K
v49bdH0O0gXnROzCjkQKT+3O5E7u1MXUc/1XGbK7DR4ONHm5XxdhGn4TEtnd
hBqMO7TF6yJ+x/qzDttoRJynj+Zd0cX3WkXDGR5cZF7aPG3zX110fghI+ovP
4LWbZDJfXoC0m9W509YMMLHpvZKKAPFVrmrD3gyktptedGgLsCeuLGBDKoNV
j7y7QxfK2JHrWaKig9G/NlRkewpQujhiUvpaB5ZWbqHTpQIYuYV7fc7mI0Hy
aHtAmQC3Rw+NlVzn42mUa2DLdQFsPrf7mz7i48RdF5+U2wL4XVuU2fqVjwEf
57XGXQLceHfN2W6bzCNyvXjzVwG66ziuOgsE6Gywk1RvFIJr41/w5zEh+pao
hzX5CvF8qFbfK1uIofzOzw8ChLi72iSt7IoQb2K2CwZDhbJ/+9fy2SdCKON4
gFK0EK+3jqbKi0SwIa2jHueFsE4xjL94VQSYpx7yuyzE5/H0T0oNIqwr8FXZ
cU2IxD0epWgXwTP2tVFErRByqnum3cdFCIdm+NnHQpiltBgMWrLIJ+7j0o9C
VOaoB9y5zuK8+fyjkzNCqL81lWo2s7hS8Iz6IidCTvq5b5c/YVEde9BKW12E
auWKJOP3LJ4gPWI5K4KW/UWOI1cPSo1/fjnqIMKarkuP2lz0sLvRX114RoSD
1zff86vQQ3C+JPNWngiakV9CpDf14Bvlpb+lSAQ1o/SR3bf1sN7GySa3TOY1
/O9fHB/owaDCKmR+iwh3X81cihnRw0CBRjNX5uGkYDo/nitGZ/Svbjc+yfr1
fv2UqSvG/S1z+rxmRXDw0Qu+LBajWmfqfZoqC/nX8qKhxWKkJw+LOCyL9PDP
vjXrxPhtr/+lCgMWKy6cFem4ihHnIrHyMGEhvlL/MGmDGPtV21ySrVis0bTl
SgLFCBlz7F1iy6KwaJlGbYgY/nfubGsDi7iwwH2P94rhElsbOdeFxZuNB6Ob
o8Sw97dSLvNgETrwMvzeMTFWfHctxdWHRXz66u3fJ4nxLX+R8O0WFkatF0YT
ssQwmiopPRXMwl5l8FT3OTHYHj1L010swhLS71qUiSE1O6YUHsbiB0NB9qdK
Mf4HOakysw==
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-7.999999673469388, 7.999999673469388}, {-5.9311912737987385`, 
   9.043864337389074}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.673394558286668*^9, 3.6733945643576508`*^9}, {
   3.673394630614959*^9, 3.6733946401646633`*^9}, {3.673394733897176*^9, 
   3.673394772735517*^9}, {3.673394919237494*^9, 3.673394929427751*^9}, 
   3.673394966489151*^9, {3.6733955577348957`*^9, 3.6733955698279343`*^9}, {
   3.673395627689783*^9, 3.673395663893818*^9}, {3.673395706700356*^9, 
   3.673395731836564*^9}, 3.673395772461123*^9, 3.768338432708891*^9, {
   3.768338475562998*^9, 3.768338481478858*^9}}]
}, Open  ]],

Cell["\<\
The Mathematica function is in yellow, and the text version, with Abs, is in \
red. The question is, how is it to be detected that the solution by \
Mathematica is flawed and how is it to be understood what correction needs to \
be made? \
\>", "Text",
 CellChangeTimes->{{3.67339578315819*^9, 3.6733958117737513`*^9}, {
   3.673395865451747*^9, 3.673395882891308*^9}, {3.673396159898562*^9, 
   3.673396184160101*^9}, 3.7683378334309*^9, {3.768341782354518*^9, 
   3.768341849184477*^9}}],

Cell["\<\
1 - 13 General solution
Solve the given nonhomogeneous linear ODE by variation of parameters or \
undetermined coefficients.\
\>", "Text",
 CellChangeTimes->{{3.768337292001305*^9, 3.768337321839038*^9}}],

Cell["1.  y'' + 9 y = Sec[3 x]", "Text",
 CellChangeTimes->{{3.768337337905809*^9, 3.768337357637505*^9}, 
   3.7683374510130653`*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.673430828389099*^9, 3.673430830808104*^9}, 
   3.768337203384982*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"has", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"y", "''"}], "[", "x", "]"}], "+", 
    RowBox[{"9", " ", 
     RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", 
   RowBox[{"Sec", "[", 
    RowBox[{"3", " ", "x"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"bas", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{"has", ",", 
    RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6734308479114227`*^9, 3.673430906224702*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"9", " ", 
    RowBox[{"y", "[", "x", "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["y", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "x", "]"}]}], "\[Equal]", 
  RowBox[{"Sec", "[", 
   RowBox[{"3", " ", "x"}], "]"}]}]], "Output",
 CellChangeTimes->{3.673430917315349*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"C", "[", "1", "]"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"3", " ", "x"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"C", "[", "2", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"3", " ", "x"}], "]"}]}], "+", 
     RowBox[{
      FractionBox["1", "9"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"3", " ", "x"}], "]"}], " ", 
         RowBox[{"Log", "[", 
          RowBox[{"Cos", "[", 
           RowBox[{"3", " ", "x"}], "]"}], "]"}]}], "+", 
        RowBox[{"3", " ", "x", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"3", " ", "x"}], "]"}]}]}], ")"}]}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.673430917435989*^9}]
}, Open  ]],

Cell["\<\
1. Above: This is one case where Mathematica comes up with the text answer \
without significant simplification.\
\>", "Text",
 CellChangeTimes->{{3.6734310028588676`*^9, 3.673431032655489*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nas", "=", 
  RowBox[{"bas", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"C", "[", "1", "]"}], "\[Rule]", "A"}], ",", 
     RowBox[{
      RowBox[{"C", "[", "2", "]"}], "\[Rule]", "B"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.6734310401291647`*^9, 3.673431103098879*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"A", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"3", " ", "x"}], "]"}]}], "+", 
     RowBox[{"B", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"3", " ", "x"}], "]"}]}], "+", 
     RowBox[{
      FractionBox["1", "9"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"3", " ", "x"}], "]"}], " ", 
         RowBox[{"Log", "[", 
          RowBox[{"Cos", "[", 
           RowBox[{"3", " ", "x"}], "]"}], "]"}]}], "+", 
        RowBox[{"3", " ", "x", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"3", " ", "x"}], "]"}]}]}], ")"}]}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.673431105435858*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["2. Above: The slightly altered form matches the text answer.", "Text",
 CellChangeTimes->{{3.673431134289494*^9, 3.673431154399075*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"3.", "  ", 
    SuperscriptBox["x", "2"], 
    RowBox[{"y", "''"}]}], "-", 
   RowBox[{"2", "x", " ", 
    RowBox[{"y", "'"}]}], "+", 
   RowBox[{"2", "y"}]}], "=", 
  RowBox[{
   SuperscriptBox["x", "3"], 
   RowBox[{"Sin", "[", "x", "]"}]}]}]], "Text",
 CellChangeTimes->{{3.768337396704255*^9, 3.7683374439496737`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.673431173698185*^9, 3.673431245440731*^9}, {
   3.673431322087222*^9, 3.673431344963326*^9}, 3.76833721266472*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"din", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "2"], " ", 
     RowBox[{
      RowBox[{"y", "''"}], "[", "x", "]"}]}], "-", 
    RowBox[{"2", " ", "x", " ", 
     RowBox[{
      RowBox[{"y", "'"}], "[", "x", "]"}]}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", 
   RowBox[{
    SuperscriptBox["x", "3"], " ", 
    RowBox[{"Sin", "[", "x", "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"fin", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{"din", ",", 
    RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"2", " ", 
    RowBox[{"y", "[", "x", "]"}]}], "-", 
   RowBox[{"2", " ", "x", " ", 
    RowBox[{
     SuperscriptBox["y", "\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["x", "2"], " ", 
    RowBox[{
     SuperscriptBox["y", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}]}], "\[Equal]", 
  RowBox[{
   SuperscriptBox["x", "3"], " ", 
   RowBox[{"Sin", "[", "x", "]"}]}]}]], "Output",
 CellChangeTimes->{3.673431334099731*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"x", " ", 
      RowBox[{"C", "[", "1", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["x", "2"], " ", 
      RowBox[{"C", "[", "2", "]"}]}], "-", 
     RowBox[{"x", " ", 
      RowBox[{"Sin", "[", "x", "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.673431334201923*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["\<\
1. Above: Mathematica produces the text answer on the first try.\
\>", "Text",
 CellChangeTimes->{{3.673431382720189*^9, 3.6734313965660048`*^9}}],

Cell["5.  y'' + y = Cos[x] - Sin[x]", "Text",
 CellChangeTimes->{{3.768337464349214*^9, 3.768337486457657*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6734314184489*^9, 3.673431420349751*^9}, 
   3.7683372199364777`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"sar", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"y", "''"}], "[", "x", "]"}], "+", 
    RowBox[{"y", "[", "x", "]"}]}], "\[Equal]", 
   RowBox[{
    RowBox[{"Cos", "[", "x", "]"}], "-", 
    RowBox[{"Sin", "[", "x", "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"zar", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{"sar", ",", 
    RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.673431433655817*^9, 3.673431485735845*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"y", "[", "x", "]"}], "+", 
   RowBox[{
    SuperscriptBox["y", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "x", "]"}]}], "\[Equal]", 
  RowBox[{
   RowBox[{"Cos", "[", "x", "]"}], "-", 
   RowBox[{"Sin", "[", "x", "]"}]}]}]], "Output",
 CellChangeTimes->{3.6734314866006927`*^9, 3.673432714407401*^9, 
  3.673433212689094*^9, 3.6734405357358093`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"C", "[", "1", "]"}], " ", 
      RowBox[{"Cos", "[", "x", "]"}]}], "+", 
     RowBox[{
      RowBox[{"C", "[", "2", "]"}], " ", 
      RowBox[{"Sin", "[", "x", "]"}]}], "+", 
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "x", " ", 
         RowBox[{"Cos", "[", "x", "]"}]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "x", "]"}], "3"]}], "+", 
        RowBox[{"2", " ", "x", " ", 
         RowBox[{"Sin", "[", "x", "]"}]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "x", "]"}], "2"], " ", 
         RowBox[{"Sin", "[", "x", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Cos", "[", "x", "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "x"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", "x", "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "x"}], "]"}]}]}], ")"}]}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6734314866006927`*^9, 3.673432714407401*^9, 
  3.673433212689094*^9, 3.673440535791787*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mar", "=", 
  RowBox[{"Expand", "[", "zar", "]"}]}]], "Input",
 CellChangeTimes->{{3.673431549758623*^9, 3.673431559882481*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", "x", " ", 
      RowBox[{"Cos", "[", "x", "]"}]}], "+", 
     RowBox[{
      RowBox[{"C", "[", "1", "]"}], " ", 
      RowBox[{"Cos", "[", "x", "]"}]}], "+", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"Cos", "[", "x", "]"}], "3"], "2"], "+", 
     RowBox[{
      FractionBox["1", "2"], " ", "x", " ", 
      RowBox[{"Sin", "[", "x", "]"}]}], "+", 
     RowBox[{
      RowBox[{"C", "[", "2", "]"}], " ", 
      RowBox[{"Sin", "[", "x", "]"}]}], "+", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "x", "]"}], "2"], " ", 
      RowBox[{"Sin", "[", "x", "]"}]}], "-", 
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"Cos", "[", "x", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "x"}], "]"}]}], "+", 
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"Sin", "[", "x", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "x"}], "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.6734315608748827`*^9, 3.6734327176351633`*^9, 
  3.673433216250717*^9, 3.673440539586246*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"yar", "=", 
  RowBox[{"TrigReduce", "[", "mar", "]"}]}]], "Input",
 CellChangeTimes->{{3.6734316143556633`*^9, 3.673431625141931*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", "x", "]"}], "+", 
       RowBox[{"x", " ", 
        RowBox[{"Cos", "[", "x", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"C", "[", "1", "]"}], " ", 
        RowBox[{"Cos", "[", "x", "]"}]}], "+", 
       RowBox[{"x", " ", 
        RowBox[{"Sin", "[", "x", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"C", "[", "2", "]"}], " ", 
        RowBox[{"Sin", "[", "x", "]"}]}]}], ")"}]}]}], "}"}], "}"}]], "Output",\

 CellChangeTimes->{3.673431627547101*^9, 3.6734327211248426`*^9, 
  3.673433219377426*^9, 3.673440542342614*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{"yar", ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.673431686570459*^9, 3.6734316927455673`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", "x", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", "x", "]"}], "+", 
        RowBox[{"Sin", "[", "x", "]"}]}], ")"}]}], "+", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", "x", "]"}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"C", "[", "1", "]"}], " ", 
         RowBox[{"Cos", "[", "x", "]"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"C", "[", "2", "]"}], " ", 
         RowBox[{"Sin", "[", "x", "]"}]}]}], ")"}]}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6734316936697083`*^9, 3.673432724455536*^9, 
  3.673433222332185*^9, 3.6734405452411537`*^9}]
}, Open  ]],

Cell["\<\
1. Above: The expression \[OpenCurlyQuote]yar\[CloseCurlyQuote] looks pretty \
good. However, getting Mathematica to refine it further is a challenge.\
\>", "Text",
 CellChangeTimes->{{3.673441085576762*^9, 3.6734411282451773`*^9}, {
  3.673441358192274*^9, 3.673441358671846*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"yar1", "=", 
  RowBox[{
   FractionBox["1", "2"], " ", "x", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Cos", "[", "x", "]"}], "+", 
     RowBox[{"Sin", "[", "x", "]"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.6734328760850563`*^9, 3.673432919478423*^9}, {
   3.673432949990156*^9, 3.673432950868629*^9}, {3.6734330149287786`*^9, 
   3.67343301841783*^9}, 3.6734406164935293`*^9, {3.67344075070782*^9, 
   3.6734407620848017`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", "x", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Cos", "[", "x", "]"}], "+", 
    RowBox[{"Sin", "[", "x", "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.6734407653879232`*^9},
 Background->RGBColor[1, 1, 0.85]]
}, Open  ]],

Cell["\<\
2. Above: I resorted to splitting the expression into two pieces. \
\[OpenCurlyQuote]yar1\[CloseCurlyQuote] is the first piece.\
\>", "Text",
 CellChangeTimes->{{3.67344114305228*^9, 3.673441156755405*^9}, {
  3.673441198712978*^9, 3.673441205720735*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"yar2", "=", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Cos", "[", "x", "]"}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"C", "[", "1", "]"}], " ", 
      RowBox[{"Cos", "[", "x", "]"}]}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"C", "[", "2", "]"}], " ", 
      RowBox[{"Sin", "[", "x", "]"}]}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.6734407684151297`*^9, 3.6734407806196127`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Cos", "[", "x", "]"}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"C", "[", "1", "]"}], " ", 
     RowBox[{"Cos", "[", "x", "]"}]}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"C", "[", "2", "]"}], " ", 
     RowBox[{"Sin", "[", "x", "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.673440782134658*^9},
 Background->RGBColor[1, 1, 0.85]]
}, Open  ]],

Cell["3. Above: \[OpenCurlyQuote]yar2\[CloseCurlyQuote] is the second \
piece.", "Text",
 CellChangeTimes->{{3.673441179002186*^9, 3.673441195537372*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ear2", "=", 
  RowBox[{"Simplify", "[", "yar2", "]"}]}]], "Input",
 CellChangeTimes->{{3.673440785558235*^9, 3.6734408681082363`*^9}, {
  3.673441003070242*^9, 3.673441004596323*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     FractionBox["1", "2"], "+", 
     RowBox[{"C", "[", "1", "]"}]}], ")"}], " ", 
   RowBox[{"Cos", "[", "x", "]"}]}], "+", 
  RowBox[{
   RowBox[{"C", "[", "2", "]"}], " ", 
   RowBox[{"Sin", "[", "x", "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.673440790946089*^9, {3.673440849752606*^9, 3.6734408697873096`*^9}, 
   3.673441005385213*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"war2", "=", 
  RowBox[{"ear2", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", "2"], "+", 
        RowBox[{"C", "[", "1", "]"}]}], ")"}], "\[Rule]", "A"}], ",", 
     RowBox[{
      RowBox[{"C", "[", "2", "]"}], "\[Rule]", "B"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.673440934813946*^9, 3.673441018715643*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"A", " ", 
   RowBox[{"Cos", "[", "x", "]"}]}], "+", 
  RowBox[{"B", " ", 
   RowBox[{"Sin", "[", "x", "]"}]}]}]], "Output",
 CellChangeTimes->{3.673440984797968*^9, 3.673441021221694*^9}]
}, Open  ]],

Cell["4. Above: I was finally able to replace constant names.", "Text",
 CellChangeTimes->{{3.6734412410627003`*^9, 3.67344125970954*^9}, {
  3.673441305948482*^9, 3.67344130633119*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"out", "=", 
  RowBox[{"yar1", "+", "war2"}]}]], "Input",
 CellChangeTimes->{{3.6734410490786858`*^9, 3.6734410626329327`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"A", " ", 
   RowBox[{"Cos", "[", "x", "]"}]}], "+", 
  RowBox[{"B", " ", 
   RowBox[{"Sin", "[", "x", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", "x", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Cos", "[", "x", "]"}], "+", 
     RowBox[{"Sin", "[", "x", "]"}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.673441064224263*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["5. The above form matches the text answer.", "Text",
 CellChangeTimes->{{3.6734413110026217`*^9, 3.673441329905797*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"7.", "  ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["D", "2"], "-", 
     RowBox[{"4", " ", "D"}], "+", 
     RowBox[{"4", " ", "I"}]}], ")"}], "y"}], "=", 
  RowBox[{"6", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"2", 
     RowBox[{"x", "/", 
      SuperscriptBox["x", "4"]}]}]]}]}]], "Text",
 CellChangeTimes->{{3.768337520794907*^9, 3.768337569439514*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.673441416311057*^9, 3.673441418214156*^9}, 
   3.7683372331039877`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"sop", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"y", "''"}], "[", "x", "]"}], "-", 
    RowBox[{"4", " ", 
     RowBox[{
      RowBox[{"y", "'"}], "[", "x", "]"}]}], "+", 
    RowBox[{"4", " ", 
     RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", 
   FractionBox[
    RowBox[{"6", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "x"}]]}], 
    SuperscriptBox["x", "4"]]}]}], "\[IndentingNewLine]", 
 RowBox[{"drop", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{"sop", ",", 
    RowBox[{"y", "[", "x", "]"}], ",", "x"}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.673441532891026*^9, 3.673441612953702*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"4", " ", 
    RowBox[{"y", "[", "x", "]"}]}], "-", 
   RowBox[{"4", " ", 
    RowBox[{
     SuperscriptBox["y", "\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["y", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "x", "]"}]}], "\[Equal]", 
  FractionBox[
   RowBox[{"6", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"2", " ", "x"}]]}], 
   SuperscriptBox["x", "4"]]}]], "Output",
 CellChangeTimes->{3.673441614320219*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     FractionBox[
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "x"}]], 
      SuperscriptBox["x", "2"]], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "x"}]], " ", 
      RowBox[{"C", "[", "1", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "x"}]], " ", "x", " ", 
      RowBox[{"C", "[", "2", "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.673441614374029*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["\<\
1. Above: Except for minor difference in form, the answer matches the text\
\[CloseCurlyQuote]s.\
\>", "Text",
 CellChangeTimes->{{3.6734416876931343`*^9, 3.6734417186276283`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"9.", "  ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["D", "2"], "-", 
     RowBox[{"2", "D"}], "+", "I"}], ")"}], "y"}], "=", 
  RowBox[{"35", 
   SuperscriptBox["x", 
    RowBox[{"3", "/", "2"}]], 
   SuperscriptBox["\[ExponentialE]", "x"]}]}]], "Text",
 CellChangeTimes->{{3.768337590272241*^9, 3.768337631236765*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.673441732733314*^9, 3.673441738411854*^9}, 
   3.768337241807518*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"gat", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"y", "''"}], "[", "x", "]"}], "-", 
    RowBox[{"2", " ", 
     RowBox[{
      RowBox[{"y", "'"}], "[", "x", "]"}]}], "+", 
    RowBox[{"y", "[", "x", "]"}]}], "\[Equal]", 
   RowBox[{"35", " ", 
    SuperscriptBox["x", 
     RowBox[{"3", "/", "2"}]], " ", 
    SuperscriptBox["\[ExponentialE]", "x"]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"fat", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{"gat", ",", 
    RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.673441742310413*^9, 3.673441806534687*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"y", "[", "x", "]"}], "-", 
   RowBox[{"2", " ", 
    RowBox[{
     SuperscriptBox["y", "\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["y", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "x", "]"}]}], "\[Equal]", 
  RowBox[{"35", " ", 
   SuperscriptBox["\[ExponentialE]", "x"], " ", 
   SuperscriptBox["x", 
    RowBox[{"3", "/", "2"}]]}]}]], "Output",
 CellChangeTimes->{3.673441807816527*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"4", " ", 
      SuperscriptBox["\[ExponentialE]", "x"], " ", 
      SuperscriptBox["x", 
       RowBox[{"7", "/", "2"}]]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", "x"], " ", 
      RowBox[{"C", "[", "1", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", "x"], " ", "x", " ", 
      RowBox[{"C", "[", "2", "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.673441807871345*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["\<\
1. Above: Except for minor difference in form, the answer matches the text\
\[CloseCurlyQuote]s.\
\>", "Text",
 CellChangeTimes->{3.673441856566456*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"11.", "  ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], 
      SuperscriptBox["D", "2"]}], "-", 
     RowBox[{"4", "x", " ", "D"}], "+", 
     RowBox[{"6", "I"}]}], ")"}], "y"}], "=", 
  RowBox[{"21", 
   SuperscriptBox["x", 
    RowBox[{"-", "4"}]]}]}]], "Text",
 CellChangeTimes->{{3.768337653968005*^9, 3.768337699666484*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.673441912731566*^9, 3.673441914281814*^9}, 
   3.768337249391349*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"stek", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "2"], " ", 
     RowBox[{
      RowBox[{"y", "''"}], "[", "x", "]"}]}], "-", 
    RowBox[{"4", " ", "x", " ", 
     RowBox[{
      RowBox[{"y", "'"}], "[", "x", "]"}]}], "+", 
    RowBox[{"6", " ", 
     RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", 
   RowBox[{"21", " ", 
    SuperscriptBox["x", 
     RowBox[{"-", "4"}]]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"peck", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{"stek", ",", 
    RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.673441923675578*^9, 3.673441993371735*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"6", " ", 
    RowBox[{"y", "[", "x", "]"}]}], "-", 
   RowBox[{"4", " ", "x", " ", 
    RowBox[{
     SuperscriptBox["y", "\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["x", "2"], " ", 
    RowBox[{
     SuperscriptBox["y", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}]}], "\[Equal]", 
  FractionBox["21", 
   SuperscriptBox["x", "4"]]}]], "Output",
 CellChangeTimes->{3.673441994188284*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", " ", 
       SuperscriptBox["x", "4"]}]], "+", 
     RowBox[{
      SuperscriptBox["x", "2"], " ", 
      RowBox[{"C", "[", "1", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["x", "3"], " ", 
      RowBox[{"C", "[", "2", "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.673441994256411*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["1. Above: The answer matches the text\[CloseCurlyQuote]s.", "Text",
 CellChangeTimes->{{3.673442025627269*^9, 3.673442037433091*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"13.", "  ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], 
      SuperscriptBox["D", "2"]}], "+", 
     RowBox[{"x", " ", "D"}], "-", 
     RowBox[{"9", "I"}]}], ")"}], "y"}], "=", 
  RowBox[{"48", " ", 
   SuperscriptBox["x", "5"]}]}]], "Text",
 CellChangeTimes->{{3.768337722357211*^9, 3.768337761240099*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.673442092696142*^9, 3.673442094319243*^9}, 
   3.76833725805481*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"naru", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "2"], " ", 
     RowBox[{
      RowBox[{"y", "''"}], "[", "x", "]"}]}], "+", 
    RowBox[{"x", " ", 
     RowBox[{
      RowBox[{"y", "'"}], "[", "x", "]"}]}], "-", 
    RowBox[{"9", " ", 
     RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", 
   RowBox[{"48", " ", 
    SuperscriptBox["x", "5"]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"garu", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{"naru", ",", 
    RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.673442101041477*^9, 3.673442138891344*^9}, {
  3.6734423914687233`*^9, 3.673442403627845*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"-", "9"}], " ", 
    RowBox[{"y", "[", "x", "]"}]}], "+", 
   RowBox[{"x", " ", 
    RowBox[{
     SuperscriptBox["y", "\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["x", "2"], " ", 
    RowBox[{
     SuperscriptBox["y", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}]}], "\[Equal]", 
  RowBox[{"48", " ", 
   SuperscriptBox["x", "5"]}]}]], "Output",
 CellChangeTimes->{3.67344240509732*^9, 3.673443198775434*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"4", " ", 
      SuperscriptBox["x", "2"], " ", 
      RowBox[{"Cosh", "[", 
       RowBox[{"3", " ", 
        RowBox[{"Log", "[", "x", "]"}]}], "]"}]}], "-", 
     RowBox[{
      SuperscriptBox["x", "8"], " ", 
      RowBox[{"Cosh", "[", 
       RowBox[{"3", " ", 
        RowBox[{"Log", "[", "x", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"C", "[", "1", "]"}], " ", 
      RowBox[{"Cosh", "[", 
       RowBox[{"3", " ", 
        RowBox[{"Log", "[", "x", "]"}]}], "]"}]}], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["x", "2"], " ", 
      RowBox[{"Sinh", "[", 
       RowBox[{"3", " ", 
        RowBox[{"Log", "[", "x", "]"}]}], "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["x", "8"], " ", 
      RowBox[{"Sinh", "[", 
       RowBox[{"3", " ", 
        RowBox[{"Log", "[", "x", "]"}]}], "]"}]}], "+", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"C", "[", "2", "]"}], " ", 
      RowBox[{"Sinh", "[", 
       RowBox[{"3", " ", 
        RowBox[{"Log", "[", "x", "]"}]}], "]"}]}]}]}], "}"}], "}"}]], "Output",\

 CellChangeTimes->{3.67344240509732*^9, 3.673443198878552*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"haru", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"TrigReduce", "[", "garu", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6734424218627033`*^9, 3.673442457106292*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"6", " ", 
       SuperscriptBox["x", "8"]}], "+", 
      RowBox[{"C", "[", "1", "]"}], "+", 
      RowBox[{
       SuperscriptBox["x", "6"], " ", 
       RowBox[{"C", "[", "1", "]"}]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["x", "6"]}], ")"}], " ", 
       RowBox[{"C", "[", "2", "]"}]}]}], 
     RowBox[{"2", " ", 
      SuperscriptBox["x", "3"]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.673442434996361*^9, 3.673442457669454*^9}, 
   3.6734432025695744`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"baru", "=", 
  RowBox[{"haru", "/.", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox["x", "6"]}], ")"}], "\[Rule]", "0"}]}]}]], "Input",
 CellChangeTimes->{{3.673442540855606*^9, 3.6734425622106657`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"6", " ", 
       SuperscriptBox["x", "8"]}], "+", 
      RowBox[{"C", "[", "1", "]"}], "+", 
      RowBox[{
       SuperscriptBox["x", "6"], " ", 
       RowBox[{"C", "[", "1", "]"}]}]}], 
     RowBox[{"2", " ", 
      SuperscriptBox["x", "3"]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.673442563997265*^9, 3.6734432053463287`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"paru", "=", 
  RowBox[{"Apart", "[", "baru", "]"}]}]], "Input",
 CellChangeTimes->{{3.6734425758770103`*^9, 3.67344261796742*^9}, {
  3.6734426909489202`*^9, 3.673442702810257*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"3", " ", 
      SuperscriptBox["x", "5"]}], "+", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["x", "6"]}], ")"}], " ", 
       RowBox[{"C", "[", "1", "]"}]}], 
      RowBox[{"2", " ", 
       SuperscriptBox["x", "3"]}]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.673442586218911*^9, 3.6734426190040627`*^9}, 
   3.673442695612953*^9, 3.6734432082838717`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"maru", "=", 
  RowBox[{"ExpandNumerator", "[", "paru", "]"}]}]], "Input",
 CellChangeTimes->{{3.67344283021554*^9, 3.673442840330309*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"3", " ", 
      SuperscriptBox["x", "5"]}], "+", 
     FractionBox[
      RowBox[{
       RowBox[{"C", "[", "1", "]"}], "+", 
       RowBox[{
        SuperscriptBox["x", "6"], " ", 
        RowBox[{"C", "[", "1", "]"}]}]}], 
      RowBox[{"2", " ", 
       SuperscriptBox["x", "3"]}]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.673442843328537*^9, 3.673443211273953*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"yaru", "=", 
  RowBox[{"maru", "/.", 
   RowBox[{
    RowBox[{"(", 
     FractionBox[
      RowBox[{
       RowBox[{"C", "[", "1", "]"}], "+", 
       RowBox[{
        SuperscriptBox["x", "6"], " ", 
        RowBox[{"C", "[", "1", "]"}]}]}], 
      RowBox[{"2", " ", 
       SuperscriptBox["x", "3"]}]], ")"}], "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"C", "[", "1", "]"}], 
       RowBox[{"2", " ", 
        SuperscriptBox["x", "3"]}]], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["x", "6"], " ", 
        RowBox[{"C", "[", "1", "]"}]}], 
       RowBox[{"2", " ", 
        SuperscriptBox["x", "3"]}]]}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.673442912985875*^9, 3.673442979226327*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"3", " ", 
      SuperscriptBox["x", "5"]}], "+", 
     FractionBox[
      RowBox[{"C", "[", "1", "]"}], 
      RowBox[{"2", " ", 
       SuperscriptBox["x", "3"]}]], "+", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      SuperscriptBox["x", "3"], " ", 
      RowBox[{"C", "[", "1", "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.673442987822872*^9, 3.6734432166232643`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"saru", "=", 
  RowBox[{"yaru", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"C", "[", "1", "]"}], 
       RowBox[{"2", " ", 
        SuperscriptBox["x", "3"]}]], "\[Rule]", 
      FractionBox[
       RowBox[{"C", "[", "3", "]"}], 
       SuperscriptBox["x", "3"]]}], ",", 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], " ", 
       SuperscriptBox["x", "3"], " ", 
       RowBox[{"C", "[", "1", "]"}]}], "\[Rule]", 
      RowBox[{
       RowBox[{"C", "[", "3", "]"}], " ", 
       SuperscriptBox["x", "3"]}]}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.6734430322669373`*^9, 3.673443106794376*^9}, {
  3.673443143539188*^9, 3.673443164351256*^9}, {3.673443723576681*^9, 
  3.673443724405752*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"3", " ", 
      SuperscriptBox["x", "5"]}], "+", 
     FractionBox[
      RowBox[{"C", "[", "3", "]"}], 
      SuperscriptBox["x", "3"]], "+", 
     RowBox[{
      SuperscriptBox["x", "3"], " ", 
      RowBox[{"C", "[", "3", "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.673443166485931*^9, 3.673443220298422*^9, 
  3.673443746856431*^9},
 FontColor->GrayLevel[0],
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["\<\
1. Above: The expression matches (approximately) the form of the text answer. \
I was a little surprised I did not have to split up the whole expression \
somewhere in the simplification process. There is the matter of having only \
one distinct constant. I don\[CloseCurlyQuote]t know if that detracts in some \
way.\
\>", "Text",
 CellChangeTimes->{{3.6734432283244057`*^9, 3.673443318437788*^9}, {
  3.673443751483693*^9, 3.673443803664219*^9}, {3.673444353020465*^9, 
  3.673444357122868*^9}}]
},
WindowSize->{1366, 843},
WindowMargins->{{4, Automatic}, {Automatic, 4}},
Magnification:>1.5 Inherited,
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 10, \
2015)",
StyleDefinitions->"Charter1.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 100, 1, 51, "Text"],
Cell[503, 16, 167, 3, 45, "Input"],
Cell[CellGroupData[{
Cell[695, 23, 332, 9, 45, "Input"],
Cell[1030, 34, 404, 10, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1471, 49, 235, 5, 45, "Input"],
Cell[1709, 56, 853, 24, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2599, 85, 151, 3, 45, "Input"],
Cell[2753, 90, 119, 2, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2909, 97, 345, 9, 45, "Input"],
Cell[3257, 108, 786, 23, 69, "Output"]
}, Open  ]],
Cell[4058, 134, 377, 7, 120, "Text"],
Cell[CellGroupData[{
Cell[4460, 145, 410, 11, 69, "Input"],
Cell[4873, 158, 680, 20, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5590, 183, 549, 16, 69, "Input"],
Cell[6142, 201, 449, 14, 45, "Output"]
}, Open  ]],
Cell[6606, 218, 276, 5, 86, "Text"],
Cell[CellGroupData[{
Cell[6907, 227, 535, 15, 45, "Input"],
Cell[7445, 244, 72, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7554, 250, 545, 15, 45, "Input"],
Cell[8102, 267, 365, 10, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8504, 282, 485, 14, 45, "Input"],
Cell[8992, 298, 91, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9120, 304, 827, 22, 45, "Input"],
Cell[9950, 328, 743, 14, 34, "Message"],
Cell[10696, 344, 11765, 231, 93, "Output"]
}, Open  ]],
Cell[22476, 578, 219, 4, 86, "Text"],
Cell[CellGroupData[{
Cell[22720, 586, 473, 12, 45, "Input"],
Cell[23196, 600, 729, 15, 34, "Message"],
Cell[23928, 617, 22499, 383, 254, "Output"]
}, Open  ]],
Cell[46442, 1003, 1534, 37, 104, "Input"],
Cell[47979, 1042, 189, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[48193, 1050, 259, 7, 45, "Input"],
Cell[48455, 1059, 21416, 365, 357, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69908, 1429, 259, 5, 45, "Input"],
Cell[70170, 1436, 30364, 512, 357, "Output"]
}, Open  ]],
Cell[100549, 1951, 499, 9, 120, "Text"],
Cell[101051, 1962, 214, 5, 86, "Text"],
Cell[101268, 1969, 170, 3, 75, "Text"],
Cell[101441, 1974, 165, 3, 45, "Input"],
Cell[CellGroupData[{
Cell[101631, 1981, 490, 14, 75, "Input"],
Cell[102124, 1997, 330, 10, 45, "Output"],
Cell[102457, 2009, 870, 28, 76, "Output"]
}, Open  ]],
Cell[103342, 2040, 204, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[103571, 2048, 322, 9, 45, "Input"],
Cell[103896, 2059, 844, 27, 100, "Output"]
}, Open  ]],
Cell[104755, 2089, 142, 1, 51, "Text"],
Cell[104900, 2092, 405, 13, 73, "Text"],
Cell[105308, 2107, 210, 3, 45, "Input"],
Cell[CellGroupData[{
Cell[105543, 2114, 600, 19, 79, "Input"],
Cell[106146, 2135, 547, 17, 49, "Output"],
Cell[106696, 2154, 452, 14, 117, "Output"]
}, Open  ]],
Cell[107163, 2171, 156, 3, 76, "Text"],
Cell[107322, 2176, 147, 2, 112, "Text"],
Cell[107472, 2180, 165, 3, 67, "Input"],
Cell[CellGroupData[{
Cell[107662, 2187, 494, 14, 112, "Input"],
Cell[108159, 2203, 409, 11, 67, "Output"],
Cell[108571, 2216, 1277, 37, 189, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109885, 2258, 152, 3, 67, "Input"],
Cell[110040, 2263, 1266, 37, 214, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111343, 2305, 158, 3, 67, "Input"],
Cell[111504, 2310, 759, 22, 112, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112300, 2337, 153, 3, 67, "Input"],
Cell[112456, 2342, 838, 25, 112, "Output"]
}, Open  ]],
Cell[113309, 2370, 291, 5, 76, "Text"],
Cell[CellGroupData[{
Cell[113625, 2379, 466, 11, 112, "Input"],
Cell[114094, 2392, 271, 8, 148, "Output"]
}, Open  ]],
Cell[114380, 2403, 265, 5, 76, "Text"],
Cell[CellGroupData[{
Cell[114670, 2412, 463, 13, 112, "Input"],
Cell[115136, 2427, 435, 13, 148, "Output"]
}, Open  ]],
Cell[115586, 2443, 154, 2, 76, "Text"],
Cell[CellGroupData[{
Cell[115765, 2449, 207, 4, 67, "Input"],
Cell[115975, 2455, 410, 13, 112, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116422, 2473, 406, 12, 112, "Input"],
Cell[116831, 2487, 222, 6, 67, "Output"]
}, Open  ]],
Cell[117068, 2496, 186, 2, 76, "Text"],
Cell[CellGroupData[{
Cell[117279, 2502, 150, 3, 67, "Input"],
Cell[117432, 2507, 418, 13, 148, "Output"]
}, Open  ]],
Cell[117865, 2523, 126, 1, 76, "Text"],
Cell[117994, 2526, 449, 14, 124, "Text"],
Cell[118446, 2542, 167, 3, 67, "Input"],
Cell[CellGroupData[{
Cell[118638, 2549, 689, 21, 214, "Input"],
Cell[119330, 2572, 541, 17, 121, "Output"],
Cell[119874, 2591, 636, 19, 157, "Output"]
}, Open  ]],
Cell[120525, 2613, 190, 4, 76, "Text"],
Cell[120718, 2619, 400, 12, 117, "Text"],
Cell[121121, 2633, 165, 3, 67, "Input"],
Cell[CellGroupData[{
Cell[121311, 2640, 621, 18, 118, "Input"],
Cell[121935, 2660, 503, 15, 73, "Output"],
Cell[122441, 2677, 592, 17, 117, "Output"]
}, Open  ]],
Cell[123048, 2697, 162, 4, 76, "Text"],
Cell[123213, 2703, 435, 14, 117, "Text"],
Cell[123651, 2719, 165, 3, 67, "Input"],
Cell[CellGroupData[{
Cell[123841, 2726, 659, 20, 118, "Input"],
Cell[124503, 2748, 515, 16, 115, "Output"],
Cell[125021, 2766, 500, 16, 151, "Output"]
}, Open  ]],
Cell[125536, 2785, 139, 1, 76, "Text"],
Cell[125678, 2788, 413, 13, 117, "Text"],
Cell[126094, 2803, 164, 3, 67, "Input"],
Cell[CellGroupData[{
Cell[126283, 2810, 679, 20, 118, "Input"],
Cell[126965, 2832, 548, 17, 73, "Output"],
Cell[127516, 2851, 1231, 37, 136, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128784, 2893, 200, 4, 67, "Input"],
Cell[128987, 2899, 722, 22, 129, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[129746, 2926, 278, 8, 81, "Input"],
Cell[130027, 2936, 489, 15, 121, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[130553, 2956, 205, 4, 67, "Input"],
Cell[130761, 2962, 558, 17, 129, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131356, 2984, 162, 3, 67, "Input"],
Cell[131521, 2989, 508, 16, 121, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132066, 3010, 774, 25, 129, "Input"],
Cell[132843, 3037, 521, 16, 115, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[133401, 3058, 775, 23, 115, "Input"],
Cell[134179, 3083, 545, 17, 151, "Output"]
}, Open  ]],
Cell[134739, 3103, 507, 9, 180, "Text"]
}
]
*)


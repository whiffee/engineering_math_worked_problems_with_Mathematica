(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    120953,       2582]
NotebookOptionsPosition[    116145,       2420]
NotebookOutlinePosition[    116533,       2437]
CellTagsIndexPosition[    116490,       2434]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[""], "Input",
 Evaluatable->False,
 CellChangeTimes->{3.769091400633762*^9}],

Cell["The s.m. has problems 3, 13.", "Text",
 CellChangeTimes->{{3.707404835681073*^9, 3.707404850415264*^9}, {
  3.707409435978572*^9, 3.707409443663384*^9}, {3.769089505984685*^9, 
  3.769089510183303*^9}}],

Cell[TextData[{
 StyleBox["1 - 10 Direct integration of surface integrals",
  FontWeight->"Bold"],
 "\nEvaluate the surface integral ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["\[Integral]", "S"], 
   RowBox[{"\[Integral]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"curl", " ", "F"}], ")"}], ".", "n"}], 
     RowBox[{"\[DifferentialD]", "A"}]}]}]}]]],
 " directly for the given F and S."
}], "Text",
 CellChangeTimes->{{3.769089523998581*^9, 3.769089637224659*^9}},
 Background->RGBColor[
  0.9600061036087587, 0.9600061036087587, 0.9600061036087587]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"1.", "  ", "F"}], "=", 
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["z", "2"], ",", 
     RowBox[{"-", 
      SuperscriptBox["x", "2"]}], ",", "0"}], "}"}]}], ",", " ", 
  RowBox[{
  "S", " ", "the", " ", "rectangle", " ", "with", " ", "vertices", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
  RowBox[{"{", 
   RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
  RowBox[{"{", 
   RowBox[{"0", ",", "4", ",", "4"}], "}"}], ",", 
  RowBox[{"{", 
   RowBox[{"1", ",", "4", ",", "4"}], "}"}]}]], "Text",
 CellChangeTimes->{{3.769089651377276*^9, 3.769089657199839*^9}, {
  3.7690897377329397`*^9, 3.7690897859450293`*^9}, {3.769089823216421*^9, 
  3.769089832416027*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.707409579428261*^9, 3.7074095811482058`*^9}, 
   3.76908943841496*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"r1", "=", 
   RowBox[{"ListPlot3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "4", ",", "4"}], "}"}]}], "}"}], ",", " ", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r2", "=", 
   RowBox[{"ListPlot3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "4", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4", ",", "4"}], "}"}]}], "}"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.707409584677772*^9, 3.707409741525716*^9}, {
  3.7074263094830217`*^9, 3.707426338170018*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"r1", ",", "r2", ",", " ", 
   RowBox[{"BoxRatios", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.707409747142788*^9, 3.7074097521423893`*^9}, {
  3.707426405456204*^9, 3.7074264144302397`*^9}, {3.70742657681199*^9, 
  3.707426582520735*^9}}],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJyFlDFqxDAURI0TQggh5Ao5yeoMOUIgdc6TW/gIKlWqUKFChRHGLGZZttgi
xRZJoR/QhJf9YAbGxpp5lvzy9vH6Pg7D8Plz3QzX5rT7//6z63Vqzz+5Xn3z
H12vofkPrtfY/HvXa2r+nes1N//W9VqaP7peZ+vleq3Nv4guTb9E16Zn0X3T
k+gm900Puz6X6bFpFJ3gu3jwA/gR/AR+Br+AP4NfwV/AX8Hfg7+BfwD/CL6N
8rfR76W5NJ/uBxvdPza632x0f/6OE20zul5t9LzY6Pmy0fNoo+fXRs+7jf4f
piv7XDlPwncvvnKehO9ZfOU8Cd+L+MrZ/NH1ar5yNl85m6+czVfO5itnDzw9
8PTA0wNPDzw98PTA0wNPDzw98PTA0wNPDzwDcAvALQC3ANwCcAvALQC3ANwC
cAvALQC3ANyUi6ryicAnAp8IfCLwicAnAp8IfCLwicAnQf8EHBJwSMAhAYcE
HBJwSMAhAYcEHDL0zdA3Q98MfTP0zdA3Q98MfTP0LdCrQK8CvQr0KtCrQK8C
vQr00nNG51BV88+Qf4b8M+SfIX+FnBXyVchZIWeFnBVyLpBngTwL5FkgzwJ5
Vlh3hXVXWHeFdfX/qv/fa/vAdIP3bPCew5/nvwH2Rn65
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[
        GraphicsGroup3DBox[{
          Polygon3DBox[{{33, 2, 18}, {8, 7, 98}, {12, 11, 132}, {11, 10, 
           125}, {9, 8, 108}, {16, 15, 150}, {7, 6, 87}, {15, 14, 147}, {18, 
           17, 153}, {17, 16, 152}, {4, 3, 48}, {5, 4, 62}, {14, 13, 143}, {
           13, 12, 138}, {6, 5, 75}, {10, 9, 117}}], 
          Polygon3DBox[CompressedData["
1:eJwNw4OSWwEAAMC0c7V7tq3Gtm37xXyxbZt/29uZPQdAGfAeAoGk3m68HR2f
zF5fiKR/r6SNxwcsrnt0PKofHnVnJ6fLh3sMtnBwWL+8gMIS+wcF2+5eQLC9
o3l6xOGXp2drzc6ujby1LYBByRTo5hb55ZlAfH7CEwJ7+4mLd5tQHlelRsCp
NCSCRsdh2RwUks7AoJksNIrBxGJY7NVy/YdI4PFJRP4HPI7DpZAFQhpVJKZS
hCI6TSxh0CVSJkMqY7PkCg5boeRylKr7OzSGz1N/FAo0WpFQq5PLTGYWUyYX
i3R6iVhvkEoMRpnUaILDKNTrKzhCqbBYb64RSKPB5TYZ3R6txmY36J0undbu
0OscTrPJ4wWs/s9qFfDJbgsEnQ4wZLX4/Baz15dMFIoOexB0u8IRrycaCwYS
SY87EvX74l983ljc5QyFwWAyFY/lv4ZD6UwITKUj4Uw2Fs3lo5Fs7uoSBk+n
SuXhYPqzVu18r1banUa92ysVG81yqdkqFuqNSrnVVimtwN0tCt1q9ge3N0gU
Ac/lKeRmy6A/mWYzlWouW61NxvPFYr76PR7N5v3eeNLrjsaZdLkyny1Xnfbw
Rz5X+zadLH41G71+KlkstVuD4frs/O9/TM+pcQ==
           "]]}],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
      {GrayLevel[0], 
       Line3DBox[{18, 2, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 
        20, 19, 1, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48,
         3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{18, 153, 151, 148, 144, 139, 133, 126, 118, 109, 99, 88, 76,
         63, 49, 34}], Line3DBox[{48, 4}], Line3DBox[{5, 62, 47}], 
       Line3DBox[{6, 75, 61, 46}], Line3DBox[{7, 87, 74, 60, 45}], 
       Line3DBox[{8, 98, 86, 73, 59, 44}], 
       Line3DBox[{9, 108, 97, 85, 72, 58, 43}], 
       Line3DBox[{10, 117, 107, 96, 84, 71, 57, 42}], 
       Line3DBox[{11, 125, 116, 106, 95, 83, 70, 56, 41}], 
       Line3DBox[{12, 132, 124, 115, 105, 94, 82, 69, 55, 40}], 
       Line3DBox[{13, 138, 131, 123, 114, 104, 93, 81, 68, 54, 39}], 
       Line3DBox[{14, 143, 137, 130, 122, 113, 103, 92, 80, 67, 53, 38}], 
       Line3DBox[{15, 147, 142, 136, 129, 121, 112, 102, 91, 79, 66, 52, 37}],
        Line3DBox[{16, 150, 146, 141, 135, 128, 120, 111, 101, 90, 78, 65, 51,
         36}], Line3DBox[{17, 152, 149, 145, 140, 134, 127, 119, 110, 100, 89,
         77, 64, 50, 35}]}, 
      {GrayLevel[0.2], Line3DBox[{18, 33}], 
       Line3DBox[{19, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 
        4}], Line3DBox[{5, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63,
         20}], Line3DBox[{6, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 
        21}], Line3DBox[{7, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 22}], 
       Line3DBox[{8, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 23}], 
       Line3DBox[{9, 117, 116, 115, 114, 113, 112, 111, 110, 109, 24}], 
       Line3DBox[{10, 125, 124, 123, 122, 121, 120, 119, 118, 25}], 
       Line3DBox[{11, 132, 131, 130, 129, 128, 127, 126, 26}], 
       Line3DBox[{12, 138, 137, 136, 135, 134, 133, 27}], 
       Line3DBox[{13, 143, 142, 141, 140, 139, 28}], 
       Line3DBox[{14, 147, 146, 145, 144, 29}], 
       Line3DBox[{15, 150, 149, 148, 30}], Line3DBox[{16, 152, 151, 31}], 
       Line3DBox[{17, 153, 32}]}, {}, {}}},
    VertexNormals->CompressedData["
1:eJxTTMoPSmViYGCYCcTMDAhw1ro+bd6CZ/uhtP2o+Kj4qPio+Kj4qPio+Kj4
qPio+Kj4qPio+Kg4MeIA/YB2sw==
     "]], GraphicsComplex3DBox[CompressedData["
1:eJx9ljFKBTEURYdRRETELbiSnzW4BMHa9biLv4RfTjnFFFOkCCGEEB5hCgsL
Cy3yhDw5Dnwu3D9k7j2TTPL08vb8Ok/T9P7zu5r0Ok7Tv9ejG1Xvt/65+w9u
1Ev3792oS/fv3Khr92/dqFv3b9yoe/ev3ai++7MbNWhfN2rs/pfR1PXTaO76
YbR0PYxW87+qnMZcqq3ravQM/C/gL+Cv4G/g7+B78AP4EfwEfga/gF/BF/Ab
+AfwP+B9HfB+7TywaueP+na+qW/n5+/6daOqP7tR1bfrRX27vtS361F9u37V
t+tdffo+WH+BcRa4f4U8K4yzwjgb9N1g/A3G32D8HTjv8NwdnrvDc3d4rof3
7iGPhzwe8njI4yFPgPkZIGeAnAFyBsgZIGeAnPq9ov3C5o+QP0L+CPkj5I+Q
P0J+/a7SvmZ7JeiVoFeCXgl6JeiVoFeCXrov0L5s+2bom6Fvhr4Z+mbom6Fv
hr4Z+up+QucNy6EAhwIcCnAowKEAhwIcCnAowKEAB93f6Xxl+VTgU4FPBT4V
+FTgU4FPBT4V+FTgU4GPmPdsz5mWmwA3AW4C3AS4CXAT4CbATYCbADcBbgLc
9BxI53DLswHPBjwb8GzAswHPBjwb8GzAswHPBjwb8Gx/eH4DCqNEqQ==
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[
        GraphicsGroup3DBox[{
          Polygon3DBox[{{18, 1, 34}, {8, 9, 59}, {9, 10, 64}, {4, 5, 49}, {5, 
           6, 50}, {19, 2, 4}, {7, 8, 55}, {10, 11, 70}, {14, 15, 104}, {17, 
           18, 140}, {15, 16, 115}, {11, 12, 77}, {13, 14, 94}, {12, 13, 
           85}, {6, 7, 52}, {16, 17, 127}}], Polygon3DBox[CompressedData["
1:eJwNw4NyXAEAAMCbNrXSxs41ds62bfudbdu2/zbZmQUDQSnwAQQCpd5vvMd9
I1PgX1Bo5O4ODPIJCoN+hiOwe7tIBByNgWxvbSARGCwGTSAyDvZJsJ1tCGl/
D4v6isOjUXgCFkMkwaAIJB5HoYpFag2RQKNTKWwOiUhnkL8zWfzDA8Zq+fxC
o3K4DDqPLz865DN/CIQsplDEZonEHLZYQiGz2AQ8lcblSKR8nkwuFChVUolW
J/ipUErEGq1IqFLLpDq9XKY3qFUWwHB8JHeeHBsUv4wmpcJkVinNFh5XKtOo
AatWY7XptDa7Qe9wRk5PnMbfLrfJ6PaYTR6vxez1ARaf3wr4AzZrIGi3BUMO
eyjsdIQjhbPTiOtPNOZ2xeIedzzh9SSSPm8y5fel0gF/OhMMZLKhYDYXDuXy
kXC+0D0/K0Q3i6VYtFSOx8qVRLxSTSaqtVSyVtfr7I50qt7IZpqtfK7dKRX7
g1y21S7+7fUL+U63XBoMK+XhqNmYzdutxbJaGY1r1fGkXptMG/XpbA0+77aa
80WnvVxl0o1m79//i9eP4HW/d3E5HFxdD/qXV6Ph9Q2dxuWNRze3y8XTc7ez
Wk8nd/ez6f3DfPbwuJg/Pk3Gt3fr1cvrGz+5q7E=
           "]]}],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
      {GrayLevel[0], 
       Line3DBox[{34, 1, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4,
         2, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 3, 48,
         47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34}]}, 
      {GrayLevel[0.2], Line3DBox[{34, 18}], 
       Line3DBox[{4, 49, 51, 54, 58, 63, 69, 76, 84, 93, 103, 114, 126, 139, 
        153, 48}], 
       Line3DBox[{5, 50, 53, 57, 62, 68, 75, 83, 92, 102, 113, 125, 138, 152, 
        47}], Line3DBox[{6, 52, 56, 61, 67, 74, 82, 91, 101, 112, 124, 137, 
        151, 46}], 
       Line3DBox[{7, 55, 60, 66, 73, 81, 90, 100, 111, 123, 136, 150, 45}], 
       Line3DBox[{8, 59, 65, 72, 80, 89, 99, 110, 122, 135, 149, 44}], 
       Line3DBox[{9, 64, 71, 79, 88, 98, 109, 121, 134, 148, 43}], 
       Line3DBox[{10, 70, 78, 87, 97, 108, 120, 133, 147, 42}], 
       Line3DBox[{11, 77, 86, 96, 107, 119, 132, 146, 41}], 
       Line3DBox[{12, 85, 95, 106, 118, 131, 145, 40}], 
       Line3DBox[{13, 94, 105, 117, 130, 144, 39}], 
       Line3DBox[{14, 104, 116, 129, 143, 38}], 
       Line3DBox[{15, 115, 128, 142, 37}], Line3DBox[{16, 127, 141, 36}], 
       Line3DBox[{17, 140, 35}]}, 
      {GrayLevel[0.2], Line3DBox[{19, 4}], 
       Line3DBox[{33, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 
        142, 141, 140, 18}], Line3DBox[{5, 49, 20}], 
       Line3DBox[{6, 50, 51, 21}], Line3DBox[{7, 52, 53, 54, 22}], 
       Line3DBox[{8, 55, 56, 57, 58, 23}], 
       Line3DBox[{9, 59, 60, 61, 62, 63, 24}], 
       Line3DBox[{10, 64, 65, 66, 67, 68, 69, 25}], 
       Line3DBox[{11, 70, 71, 72, 73, 74, 75, 76, 26}], 
       Line3DBox[{12, 77, 78, 79, 80, 81, 82, 83, 84, 27}], 
       Line3DBox[{13, 85, 86, 87, 88, 89, 90, 91, 92, 93, 28}], 
       Line3DBox[{14, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 29}], 
       Line3DBox[{15, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 
        30}], Line3DBox[{16, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
         125, 126, 31}], 
       Line3DBox[{17, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 
        138, 139, 32}]}, {}, {}}},
    VertexNormals->CompressedData["
1:eJxTTMoPSmViYGCYCcTMDAhw1ro+bd6CZ/uhtP2o+Kj4qPio+Kj4qPio+Kj4
qPio+Kj4qPio+Kg4MeIA/YB2sw==
     "]]},
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->Automatic,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{387.07978312637846`, 362.77555334395447`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0., 1.}, {0., 4.}, {0., 4.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-1.8479700585084284`, -2.522587608500974, 1.29288762864129},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.7074097531689997`*^9, 3.707409838506822*^9, 
  3.7074263429995728`*^9, 3.7074264159516983`*^9, 3.707426583979988*^9}]
}, Open  ]],

Cell["\<\
For some reason I can\[CloseCurlyQuote]t get the plots in Mathematica to come \
out right unless I do them separately, as above.\
\>", "Text",
 CellChangeTimes->{{3.707410031133115*^9, 3.7074100624905853`*^9}}],

Cell["{0,4,4} +u{1,0,0}+v{1,4,4} implies x=u+v, y=4+4v, z=4+4v", "Text",
 CellChangeTimes->{
  3.707418638399055*^9, {3.707418686730836*^9, 3.707418759830741*^9}, {
   3.707418930242659*^9, 3.707418955728469*^9}, {3.7074189953989153`*^9, 
   3.707419050853178*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"u", "+", "v"}], ",", 
     RowBox[{"4", "+", 
      RowBox[{"4", " ", "v"}]}], ",", 
     RowBox[{"4", "+", 
      RowBox[{"4", " ", "v"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"u", ",", "0", ",", ".25"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"v", ",", "0", ",", ".25"}], "}"}], ",", " ", 
   RowBox[{"BoxRatios", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.707417464955784*^9, 3.707417504017145*^9}, {
  3.70741843761178*^9, 3.707418479584386*^9}, {3.7074188109822483`*^9, 
  3.707418848095409*^9}, {3.707418961912772*^9, 3.707418966648365*^9}, {
  3.707419063365156*^9, 3.707419076084794*^9}, {3.707426035740003*^9, 
  3.707426039450794*^9}, {3.70742615010328*^9, 3.707426196013956*^9}, {
  3.70742661443349*^9, 3.707426622607872*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyVnXmwF9WVxxtEo0aTt5iA4kyiaTUaQTZxi6FRRFrNOGEcR2UziiBqIyLg
UkZNTOIGqE1QECMCT8ZlMAa1kQfiFiPI/kBEW00cwYBirDiRxKj8puGdz5uq
76lbk+SfU/Wxq9/pQ9++537v9/5y0AWXD7yofRRFR+weRbtVcdY5jy645cgL
v9f14OUdoqguIW5euMeKQ9O8j/JRXb83/ZB0tuPv1K5esSB71PF5W16vxel8
f58fXLX/6LJw/JDm/XouyBY5Pqb+3EOj6DnHV7102BNx+oLjR167vU+a/8bx
27q+tCIrf+v4lv+ecm4eL3O8/z0XvFdkyx1vOr37lWWx0vFo1//WOE49m/86
/O44rUuIl1g9lVNP5f9l9VR+sdVTeWz1VE49lVNP5dRTOfVUTj2VU0/l1FN5
O6un8qPOG9k/j9c6zvt5yuodh6V5XUKknsqpp3LqqZx6KqeeyqmncuqpnHoq
p57Kqady6qmceirvZvVUPvTJVRPjtCVYz7UPTluYlXUJkXoqp57Kqady6qmc
eiqnnsqpp3LqqZx6KqeeyqmncuqpfJjVU/mkr/ReV2TrHOf7OeS6HqfncX1C
pJ7Kqady6qmceiqnnsqpp3LqqZx6KqeeyqmncuqpnHoqn2z1VL744l/un+br
HWc+2jpwxZtFVp8Qqady6qmceiqnnsqpp3LqqZx6KqeeyqmncuqpnHoqp57K
n7F6Kv/ghQ7nl8WrjjO/jzt8RFXu+oRIPZVTT+XUUzn1VE49lVNP5dRTOfVU
Tj2VU0/l1FM59VS+zeqp/IB/umxuVm4I1rO1H2lIiNRTOfVUTj2VU0/l1FM5
9VROPZVTT+XUUzn1VE49lVNP5Z2tnsrTq9Ztq9VeC9Zz4obpd8VpQ0Kknsqp
p3LqqZx6KqeeyqmncuqpnHoqp57Kqady6qmceio/zeqp/Oq1x/fM49eD9ew0
r+e30rwhIVJP5dRTOfVUTj2VU0/l1FM59VROPZVTT+XUUzn1VE49lV9j9VT+
n9+ZfU2cvhGs55ybVj6ZlQ0JkXoqp57Kqady6qmceiqnnsqpp3LqqZx6Kqee
yqmncuqp/CGrp/INP9vruSIrg/VsXcc0JkTqqZx6KqeeyqmncuqpnHoqp57K
qady6qmceiqnnsqpp/LXrJ7Kd//9mD3S/M1gPRd1a7exyBoTIvVUTj2VU0/l
1FM59VROPZVTT+XUUzn1VE49lVNP5dRT+R5WT+W9jt94Rlm8FaznqV+aMaos
GhMi9VROPZVTT+XUUzn1VE49lVNP5dRTOfVUTj2VU0/l1FP50VZP5Rf+os+U
rHzb8cjq2fJWr89qtcaEiB6inPW7ctabylkfKaefV07/qZx+STnzu3LmI+V8
P5Uz3pXzfiqnnsrv+uPc12u13zmOXjdu32nfz+O6hPjGmnu6H57+xPG2dYHw
1nnV87Y+7eOR87OyMSG27Fr3r3Kc/JVf2/fKosh8/uSpOiT3V06eeh/ur3+X
+6/dGRrqEiLvZ4gfdfGqDcWH1ftqkfsrf2nHws+7pGPdfVrXkatd/q19os9/
j077DiiL8P1D9wn9Xb0P99e/e8L6DQOnxLOcPvnlay/fp130gPu7N53+SJ8p
8cPu+n/700mfRtFD7voR73zv7jR/3F3/L72+fGUUPe6u3/uXD01M8yfd9R9/
NG5UFD3prn/snIab0vxpd/3dj749LIqedtcP3O+6a9J8sbv++JEDzo6ixe76
ywN6/md/+HhBnHpdemVAl+770aSDosjr/zPnDH4sTr1e3bjyhQOjyO8LXPHj
ux6OU69jb37kLx2jyO8XnDzst01xutRdv+CWIxujaKm7/msnfjYzTl9x1986
4odfiaJX3PV/OKDbjDhd4a4f1O/uvaJohbt+4a7/vspd32XXf/fjvf8HKwbk
sdfV5z9Y//ND0kec3vujyWMX5vGvHT/otDd/lcdPOf7S7v3n5vFCx0c9/6v7
8vgZx3++ZGKa5l4/P+e+5/uludfPjwjo51/8x3dOSHOvn68++vzeab7U8VmN
U7un+SuOX/mnZUem+QrHW+Mqx/luKB93Sq874tTr6lNPmPtmWfza6b3H/eWr
68riKcffmn/NsrJY6PiPR7/7bFk843jD1EPLrPT6+aaxgzZkpdfPi3+9c21W
ev38loB+Pmifv72clUsd7/J+1xez8hXHay9fuCQrVzi+1uYj5S3Pj3ijyLyu
3ryr3/S6etPMGa8WmdfVf9B08vY49Tr5J8PmbYvTZsend+74bpwucfz+S5+7
LI+f97p6+snIPH7R8ZMOO+LCPH7J8f12HzY0j192/L2Afr7wuaVn5bHXz2+/
/4sz89jr561xtePM78qjA1d9M829rv7+bRf/c5p7Xb3l0/YHprnX1ffd952v
ji6bnd7766Wn7TG6XOL4ESedt6PInnf882/c8WmRveh19S9e/HORveT4A+Vf
Pyqylx0fu7DLB0Xm9fN+Af284/h73ikyr58z7ysfOi26rCy8rt5/V5/udfVu
E44eWRZeV++0efXwsvC6evuzLrmgLLyuvmz89YcvyJ51em/R6c93lMXzjt+y
/du3l8WLjp+3fsjPy+Ilr6vPz39cFi87vuOOl68rC6+fr8k+v6osvH4+O6Cf
j98VV3u9fZcu4nX11n7T6+oTftj+8az0uvrQNffNy0qvqw/oc8yjWel19W6P
rX0oK72ufpL1Far37mf9g/L3rE9Q/rT1A8pvs3lf+WCb35V3tXlcOX218vdH
3/tFreZ5a3/qdfXFZ6z+a63mdfWmRaO212peV598RIc/12peV58w/f4/1Wpe
Vz9/z+M+qtW8rv6A9Wmq9461fkx5P+u7lH/d+iunq1sfpbzZ+iWnt1tfpJz1
tfJOy9r1y2Ovn7c/9r6+eez18/fn9u6Tx14/X/+1td/NY6+fL/7ppcfnsdfP
5/7P7sfmsdfPJ1/wwNF5vNHxHdYXqd67xvoi5bOtL1I+zvoip6tbX6Scvkj5
eOuLlA8N6OcDvjXqtjj1+nm3fLdb4tTr5we0u/9ncer18/Zjjr0pTr1+vu3t
lhvj1Ovn67+fXR+nGx1fsvhL18Wp19UHW1+kem9X64uUR0tb+yLlrNMdt75I
+SLri5wOb32R8kkB/XzCj9asKTKvn5+/7ZJVReb18wGDdl9RZF4/7/HKzGVF
5vXzA447/uUi2+h4h4fW/6bIvK6+7euXv1BkXldvtr5I9d6J1hcpH2p9kXL6
IqerW1+knL5I+Trri5QvDujnc187pmOae/18cv+W/dLc6+dXP3VZQ5p7/fz8
+Et1ab7R6+1TZu2b5l5X79H+u19Oc6+rH3jFhj3T3OvqnawvUr33feuLlNMX
KT/V+iKnq1tfpHx/64uU0xcp/yCgn6/vPnNIWXj9fMkDxw0qC6+fz/3q+nPK
YqPjd14/+uyy8Lr61R/ueVZZeF39gsFzflAWXlc/bfmJZ5aF19UnWF+kei99
kfJJ1hcppy9yurr1Rcrpi5R3t75I+QEB/bzDxD2astLr59v+9sCsrNzo+IZR
J8zMSq+rL9n46n1Z6XX1h04dc29Wel39zmLvaVnpdfVrD3lwalZ6XX2r9UWq
19EXKV9kfZFy+iKnq1tfpJy+SPkw64uUDwjo5z3ey96v1TZ6Hf7f99xSq3ld
vcNvZm+u1byuvq3Hie/Wal5X3zDrtd/Xal5XX1I39u1azevq+5ieueWZ7h2i
pC4hxveU80eXc/t0vGnHFWXvuoR44pOnnvtmMa/PKQOW/67oUpcQHzGfm+rk
x5geMrtl+KKsc11CfNH0JdVpzzQdsjZ4x93xXnUJcbnphwtN5yI2WD+v+Z9j
6yPN/35bb2r+m/AXSf5H2Lyv+Y+xPkrz/6npwON+sXxqfGt1H4vourPPnbZb
dGN1H4tvnNS3/4LsiT5r//miK8oJ1X0sjjA/W+3d7r8rsqoOFj823aPrwzvO
yIfXJcTrTUcaPHp5czaoLiH+zHS523tO+3Y6sC4hHh7Q38ZY3675F7YO0vw/
t3Wl5n+SrdM1/1tsftf8V1m/pPnfZv2n5n+96ZnRpRcdlrbUJUR08q7dekyN
l1X3t4juPeSTHe2j5+oS4sHmZ7u9efmYsqjub/Ex0z2ab5j2djGvLiH+0nSk
Lf0uOiNvqt43i++aLtdx7x7N2YzqfbN4c0B/W2V9u+a/n62DNP/zbF052PIm
PmDrdM3/PZvfNf+vW7+k+S+0/lPzP97G7+19a09nnesT4m9t/Dbv3GZrqE+I
7CNsWT7tF/Fe9QmR/YKOd+08vlCfEJ8y3eOUs3uMKbdX76HFz0xHGte59lbx
YfUeWuxrutzs3y8/Pd9UvYcWNwf0tyNt/Gr+Y238av5P27pS899R2/m/1S7/
2Ta/a/6nWL+k+W+x/lPz327jumOn6aflw6v7W/yJjev+b130dDaoPiHebON6
3Oweh6YD6xMi+yxzRtamxGl9QmTfZO2RK9pFSX1CPNe+k9HH0y4ve9cnxJn2
ney64KK3ii71CfFkG9db8Lnig7VxrfmvsXGt+d9u41rz72rr9NmWN3Gtze+a
/zjrlzT/jtZ/av7zbVzP+WOPahqr6mNxpo3rtU/U0rypur/FzTauo2tWLMhm
VPe3+B3Op+w8rpBX97fIPtSQ3UZMiW+t3kOL7CvdvrRHu+jG6vktfmHfz+ZJ
tdHlhOo9tDgroL9tsXGt+Xe0ca35o7dr/kNsna75R6Z7aP5zrF/S/Ptb/6n5
L7BxfdTOz9/2+oT4hY3rIbdNL4sPq/tbPNnG9cQzR6T5pvqEeCvnU3Z+psvq
/hbZD9q6s+1oqU+I7NN1nLmi+hxUdbHIvlv/4dOrz1CVt8WajWvVtebYuO5q
eRPRhzX/rTauNf+Jtk7X/I8y3WOL5U1sMR1J8x9v/afmj57ZPGNErdanWldb
RB/een7PrOzdkBDR2zseGpVFl4aEiJ+tVT9DR/s/3WPc49OLrHND0hbt+zln
/Ig4bajqZRFdrmWnTWSvhoQY0t/o2zX/8TauNX/0ds1/ka3TNf+hpnto/u1M
R9L8m0yXW2t5E9Ez+4+N7opvre5vEX14/DErd9RuqPK2iN4+5/Ppl5UTqvtb
xM/WqgOhBzW06R7RzT0H5MOr99AiOtJRZ0RFNqiqo0V0uSH1K7+VDmxIiCH9
rZ2Na82fddA4y5t4qo1rzf99fESS/yTTPTT/bqYjdbW8ietMl9P80TNbBtx7
cNpS3d8i+nD0lZF3xsuq+1tEbz9qXc8dtWer+ljEz9aqZzQkRHSPiUNWvl7M
q+poER2p+eB7T82bqvfQIrrc1j+MeCqbUb2HFkP6G3qm5r/OxrXmz7pS89/f
1ulDLG/iYtM9NP9hpiNp/u1Nl9P8GddDv9HryaxzY0JkXE/cFB2cNjQmRMb1
oodX3hHvVa2rLbadT9m1Lm9IiOgenXqNvLTcXtXXIjpS/097vl58WL2HFtHl
xi+JTs03VePIYkh/G2bjWvNHH9b8H7Rx3Wx5E1mna/4fmO6h+U82HUnz7266
3DjLm8i43vrJylPy4Y0JkXHdadG9T2SDGhMi47r/jSMPSgc2JkT8lq26e2NC
XGffz6a9231R69OYENGRWlavvKTsXf09i+hy0dR7NxZdGhNiSH9Dz9T8u9u4
1vzR2zX/q8w3qPmje8yxvInPmI6k+Z9vupzmz7gev2Lka8W86v4WGddNd/U6
JW+q6mORcd1ydrsnshnV/S3iX23Vj9GRG9v2g456597J8a3Ve2jxQft+Dp07
8vPaDdV7aBFdbuKlvS4pJ1T/rhbR3/qbnkV8xsa15o8+rPnvZuNa859rPszI
8iamv7q8ax6XLn90JM3/DtPlNH/Gdbs57UaV26v6WGRcq7+OcT20y4x++abq
/hb5fqovke/nogW9vpm2VP9OFvl+br2u3eR4WfUeWuT72emkVZ/Vnq3+vS2G
9DfGdWR5ExnXmj96u+a/3nytmv/Ve702Lk7fdPl3ntR0eB6/5fLfZD5V1bsW
2PdWOd9b1bvazrlIHdD9lONH1X/Hh27Y581azftsb9792D7tozudDw2fpObD
9crxpynHT6Uc/49y/CrK8Vcoxw+gnP1r5ey3Kmd/UDn7WcrZf1HOfoFyfKSq
s+E7VY6vTzk+NOX4ppTj81GOL0U56w7l9MnK6euU04coZ95UzndeOd8l5awv
lOO/VT0Qv65yfJLK8fUpb/OhCcc3pRyfj3J8KcrxUShn3185+9TK2Vd13PYB
lbNvpZx9FuXosaqboYcrx3eqHJ+kcnx9yvGhKWddrJx1nHLWHcrpk5XT1ymn
D1HOvKmc/k056zXl+L1VH8Mfrhwfr/I236lwfJLK8fUpx4emHN+Ucnw+yvGl
KG/zlwpn3185+9TK2VdVzj6gcvRt1cHYX1COL1o5Pl7l+E6Vo9soR2dQzrpY
Oes45aw7lNMnK6evU876Qjn9sHL6N+WcI1C9a2Xg/DvnFPT6ywPn6PGl6/VH
BM7R46/W628JnK/HJ6zXvxc4d4/fVa/vFziPj29Tr58dOKeP/1Cvj6xv1Ovx
0en16Hh6PX4wvX5o4Lw/via9flLgdwDw5+j1iwO/D4DPRK//IPC7Afgl9PoD
Ar8nwL6/Xj8g8DsDbedZROfk/ItyzkEox7evHJ+5cnzRTl+1/lM5vlPl+CSV
4+tTjg9NOb4p5fh8lONLUY6PQjn7L6pnsv+lnH0E5ZyDUI5vXzk+c+Vtvmjh
9KXK0RmUsy5Wjq9PObqNcnxTyvH5KEefUc75KdUtOW+lnHM6yjlXopxzEMrp
S5XjM1eOL1o5Pl7l+E6V45NU3ubrE44PTTm+KeX4fJSzn6X6JPuJyjn3pJxz
OsrpS5W3nYMQTl/q9F7rS5Xji1aOTqsc36lydDDl+PqU40NTjt6lnPN6qkNy
vk8558iUt/l7hXNORzl9qXLOQSjHt68cn7lyfNHK23y8wvGdKscnqRxfn3J8
aMo556h6I/uzyulLlbOvrbxNbxTOvmFIp1VOX6oc375ydG/l+KKVt+mKwvGd
KscnqRx9Tzn9m+p+nGdUTj+mnPNiyumvlHMeRznnR5Rz3sHplvjzheMnV47/
WTl+XeX4S5WjfypHl1O9Dh+acnxTytHflKO/Kd8v4G9EZ1OOzqYcnU05Opty
dDbl9DPK0XlUZ8Mnphxfk3J8OMqbA/7DTjY/KkefcXqgzYPuPjYPKkefUY4O
oHoXvizl+IiczmbfPeWL7Tvp9Df2/fV6+x4qbzsHKpx1tOpI+JqUs7+gnH1J
5eyjKWd9p5y+XfWWdQHfF32y03msT1b+YMC/xL6S8uUBneHwgD5wc0AH2BxY
758cWNfPCqzfQ+vu0Po6tI4OrZdD6+LQ+ndCwI8UWv/iK9b1Gj5Y5fg2leMz
VI4vTjm+F+W8J8rxFShnPaWcfVvl7DMqx9+r6yn8qMrxTyrH76ec99mtK63f
Vs4+vltXWr/t1pXWbyvHN6vrF3yeyunflOPTUE5/pZx9cOVt56SE4y/V/h8/
pHJ8C8rZZ3frHdsXVo6vUvth9uVdv237yMrZR9Z+j33k0L6wcs7RKGffWfsf
focktI+snH3D0LkSnU/xhSpnv0Y551B0XuM8hXL8pW6/zHR1t192Z6uurpxz
Ljp/cV5DOecLlONrVY4PUzm+QbcfZPOF8t78DonuB1n/qZzzDsrx5ytHN1NO
n6mcPlM5faZy+kzlL1g/qfM151+Uc17D7S/Y+6YcP7xydBjl9JnK6TOV02cq
p890+yOmtyjnnJTOv5z3Uc75FOWcp1CO/185fnXl7Cspb/OzCWdfSTn9qnL2
lVy/Yet35Q0BXzS+buWcF9N5jXNPytHHlONbVs65M52POD+l/LyArxWfuXL0
DeX4eJVz3k3nKc5tKeeckXLOxSjH964cn7ZyfMXK8cEq51yezo+cL1POeSjl
nN9RznkT5fj2nV7H+Xrh+KKdXmd9o3L6RuWcN9R5n3NzyjnnpZxzSco5R6N8
TsDfyDkF5fjqleMDV45vWTl9pnJ8oco5J6h9COfalHMOSznnhpRzzkX5+ID/
kHMEyvG9Oz3N+ljl+IqdnmY6oXJ8m8pD/sCzzO+kfRr+HOX4SZTjf3A6mO3L
K2df/u/Vu/BBKce3oxyfifPv2XfV6WPW34aeV/tPnlc5z6uc51XO/q/ypwN6
F8+lnOdy/jp7LuWRvQ/KWReEnkv7YZ5LOc+lnH1Y5YMDOhj5u/7c8ldO/srZ
bw3lqf0zeSpnf1M5+SgnH+cTs3yU46ML/V3th9kHdP6ogG7G/V2/bd955ex/
af/ZFNDT8E0p7xv4Pa7GwO9xbQ78HteCwO9x3Rr4Pa5Bgd/j6hL4PS7+vZSH
fndr0T/4u1uT/sHf3QrpbMMCv8fFd1L7W74nTk+zuilnPCpnPCpv/fu+r6Y+
yqmPcurj/CRWB6fXWR2cL8V0yNDzan/O8yrneZXzvM4HYu+Pcp5LOc+lnOdS
znM5Hc/8MKH8tf8nf7e+sPyV8/4rJ0/nl+D/L0A4eTrfhflMQvlo/08+bn1h
75ty/q5y/q7y3cyPEbq/9ue8z8q5j9uXNx+CWy/Ye6L97au2n668b+BcA32d
zuONAd8+3w3l9IE6b9IXuX2ugF+d749yxmPo/joP0ncppz9RviDg6+bvKuc7
oJxxFMpH503yUU6/pJx/x9D8q5w8nf5meSpnvCtnfIXy13mc/EPzu3LeN+W8
J8oHBXzLPJdynks5z+V0OftuOJ+zjevQ8zrdzJ5XOc+rnOdVzvupnH935V3+
Hx+vcuqgnDo4Xc7qoJzvm/Pr2vfq7/1dAvJRzvfH7SsF9LeQf5L8Q/fR+YXv
gPLQufJFAT8h9VFOfUJ/V+cX/q5y3n+3r2T/7n+vH498nK/P+hDlzO+hPHX+
Ik/nf7M8lfM+OB9dQH+bFPC/kb9y8ldOf6KcPiH0XDr/8lzKeS6nm9lzKee9
Ut4U0N9C/jSe1/nc7HmV87zK6YuU08+E6qD6EnVwvjKrg3Lq4PQ0q4Ny3gfl
oXPBwwI+NOrj9Derj3Lqo5z6ON+a9XvK6euUU0/t6/4Xs2Tdag==
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[2], EdgeForm[
      None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
S443Q5G26J7Uu0LfLTnHekZ7NDm/uTI4lnZkTpvgeNtJ75M5/ZPzudHob5Rt
oh8Dd9NehCsF5w5VZW/M75Qcq0bB1yTHp6fgjslxbox8SXJ+Nhq+Ljl3GSc/
lJy7jIQ7JMfI8sHx8FCu/yT69slx8YDg2F1Z+mK/aI+cqByzZDuuKT9R8r0q
z5nCWJ452+Brk2O88oGtis/IBmSLQ3L2O7IZ+Qk5BMUGrXnmdRmgXBauhu5v
5MTM+dgMrl8ps/9Vjqj8cBOyA/mluJ6uu7rQb0NmFXH/s9x+Qzne9NzPOyvY
FhbCs4PXeRE8J9heFsNT4cfh7+C1ug739yTHXwX7X/neb4LryDnF7+peViKT
FSPRfwtPgR+Fp8NfKkbCM+Bvg2vZufDcYPtaAn8XbIPzi+faXryrecF2vRSe
EVzHzIOnB9e1P8A/BO+DH4t3vkb+qeBfi+NdmLM0eL0Ul2fnriW1H7/JnZ9r
X0zLnf/Lnr/Onf/L9ibnrim0Z7+FqxX2+UXuHF57YVbumld2vovsNXO83pG7
fvkSrqo8JnN9dwzSM3Ptspb3/L/cNeausqfMNjwzdw4sm5+Uu5bZAX+ZbCuy
vUnJ9qS4tiB3ra24Nj93XayY+HPuHoXyqEVwfdkmfGVyDqo8YWHu2lxxc1nu
voTi4Fq4WeY4uDp3T0D77qvcdZD23dTcdZDs/7fMObHyjXm5a3zFzVW5a3PF
2TW5c/V/9D65hz04/oPj+cH585Zi/X4uZEOxpqr9V+bO8XRuz+S+QP3ga5yV
uY+xHj4lc623OLdfVRK9IncOpvpxCVw9c89hee59pzw/RedRR6jWjK7HD4fr
Kp+Aq8Ajkcaccxu/24SxV+Y6ohSdp6muidG5nGqNH3P7c/Vb1uXO69SH2ZA7
d23GdQ6SD4Z3Qt87ua+kPtK2IjdQf2lr8YzqI/1a5A+qPefm9pl7o++XXCOp
nsqjr9mS6x+Drl3mftTG3Pmz6p1/cuefVeFTo59Ftc/fufNn9X/+gs/JXHP9
mzsnV531Z+4850j4eeRSjgfwW5cxDslcc+0UnaO+prha7OUR6DYghxSsPFM1
VDnOfYk5e8p+lDvkrqG2Fra1trD/7sl1/rrCB8n/rC98x6pi38tmQuFLNhf/
38i5m7RvM/tLnatr7Ch4VvEb+q3lhS2L5c9VL2zJXXtO48Ij4Nnw18H5sXyj
+mC7Rdc46mPsHV13qB+1Z3R9pD7GftG1j+rTfaLrHfXT9oBbwdcG+4NumWvt
A6LX7jCtreJc5j7DnNxxRHX9wdE1l551dfEeKqE/JLrWqKwcIDoWV5R9Rddl
h6qeiI7Xsr05ybaoWun33L0+1Wh/wC2La25M7mtpj2xP7j+2De5jye9dHdy7
6lzc85bk3pZ+a1NyH6xDcE+rS3Fvm5N7Yp2Ce0iqR7oG9zh7wNcF95G6Fftx
W3Kv88bgnuit6K8J3peqQToG9+RU47QP7smpjuge3PeS7705uC94Z/FO1if3
A49W7pBc994T3A/rX+yR35J7WLcG27tqpfuLvFr9qweCc/CH4eNkp8m5dTXt
qeTc/ZbgPpx6yP2C8+VB8A3B/U7VTX2Dc/AH4WOUZyXnXv3Rd2AcjL5PcI7/
ANwluIenuun64B6naqvOwX041Vanyg5Lzl+byK5KjtlnwxVKjtlNZRslx+xm
soWSc4L6ss+S8+nq8hvJ9UAt+bqS64Ta8p8l59DHp+y/RofyvBryG8n58QdF
LqFa4Dm4D/wK/Ah8M/wUPDw4dx4JDwvOnUfAPYL7haq5GnO98iX35T8MzlM+
R38m+n1LzsvP0P4qOXcfHFyvPMKcQcH1ynD4weD6aRh8uvZsybVBA7hsybXB
K8E1ynjmnIK+TMm1xHj0D+v30TdEXw79UI7vja5PVV+cpf1ecu/speA6SLXY
aej3KrnGeDm4Hnorc6+4SrTNH8WcHcn9pjuDe7F9Crs6N9rHHgu/kWwTsttG
0f1/ndsYHpg5d20RnbfLDs+L7sHKrppEfzvQGl0S3dfS+l4KP5a51ngwOn9T
rTEoOj9UrTo+d99JufQnuXNUPdcN0XWfbOCy6N7Ro9x/R+Y8DY+Fb4FfzdzD
vCY6/5ctXRE95wT4vWSbUB5+ZXTNq3z+89w9ScW7H5Njm2yvdXQNq/5nB3hc
5r5o++i6Vf3VjtE12tvcQ1/O+wiuh/6jZFtUHXSf8sLMNt85+j61d7pE14ay
geuj62L1aTtF1zKqv+6PzoFVQz0QnQOrX/R27r6cvsv0ja4lte/ujK5JtR97
Rteqsu07ou9NNnxLdD2rfn6/6HpT+/Su6DpU34n6RNew+tYj+5Pt9Qzu098L
3x38TaBfZtvuHl0v3xXc1+8r2wveT3p27f27o+vficF2rTrljuBefe9iv9zM
nHeKfdcjuk5X3+y93D1P1a0f5+69q5b8KHe/XX22d3P3G9U3eyd3T1L9tA9z
98nVy/ogd+9d/bcJufvSyl0nJuf02ne3RfcEtNduje4JqLbtH92vbgR/mrxX
Z6peZVyQuUYeyJxp8CT0w3KzvtEcER1TFNsHR8d39VWaRvsi9ZOW5q7Nlbe+
mTt31bePmtHvXP3S66L9g76z1Ip+z/qG0iA6RiimHR/9PhVDzo+uPWX/ecn7
RDXC/tE9NPXT1BxWr1J9krbRfkPfB+sgAzLnqFuTc1Pd50+5e1/q1VwU/S1A
Nr97yXtAv9s8On4p7xic/JvyLX8m71t9Vzor2n+q13RBdH9YPagLo79N6JvR
GdG+VN/aToj2V+qBtIz+ZqFvSWdG+171i86J9vl6DzWi47u+b54YHXPVj2oW
HQv0TbB2tA3rW1VD5NHMvaOrtccy93E3Fc+rOr5N8T7ld7tG+17V+hNz1/ua
vzn3+1Q/UXmd8kl9Izs5OrbK3k8r1ki2tH/JtqL+1U3IpMx9mu+Ka+r6nxb2
oDq6d3TvTjmtbGVZ5j5Yt+iYpdxYdqacTb2jVtExUX22i5GxhY2pH6hzFT/v
iY6h+t3vCztUT69ddJzSPZ9erKny81+T83J9dzslOn/Qt9F60TmG1r1C8f71
rbB+dE7yf4Yx2Bs=
          "]], Polygon3DBox[CompressedData["
1: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
iD1Kx6zVWUPsVTonMpeYU5dnPcRcZ85fUXoMmFvMscty/mEuMicHlh6Tljm+
D8n5i1hCTLmq9DNEu6Ph0fIDgucOc2ho6e/AWmBNXFl6jNDSaOppxNpgLY2m
RiteHpzLyemHl9Yw63JOOKC0xvok54RW4taFtREaac/SOXlj1kRtSmus9Tln
ty6twdCuxHxifd/gWoOaYwq5Nzj2kwMOy/E56txacQfxiYXnOnOemExsfk5/
r+o1LYntpbXjb9rWLq0hXxc/r2tqiRsXvpbX1BQ3En8jXiXeV3xoYa2L5t0v
z9e3xS+IG4h3FFfTfTeIT87zlfn5VvL85nlQy1DT8N5fkmPFHwe/92bavpy8
Jnjvivn7vp7zBfPnC/Fr4pY5f3wuflW8m3hfcQ3df2Pyejkz55uV4kalNdIL
4mfFlcS1xO+IV4gbincSv6j9NTp2CGmVZ6O/5cRkna9Z+F7c8whim7bb6H5f
6lgXne+uY1XEX4hPFJ+e1xfrs1WeH6yv9/P4Md4/i98VHyI+kjFP/ox8tu90
7Cftv6NjB5e+ZwW9/zrxseKTxD/q/NvEHHFbcdL5T8QdxV1yPvwsr2fiQQPx
N+LTxWeLG4m/FXcXnyOuJf6KNSPuKa4k/pyYKT6NMRJ/Kj4ux4ftxOvFJ4l7
iOuIN4lPFZ8lrif+WnyauFfh3PRDzgfkh+3F34l75HzNvP0+52/yObU9NR61
3bX6rm+INwVrkWp5LjAneHZVgmslaqYWpTUZ852aqbl4jzzfmf/N9Ld74Xr6
7OT1wPyndqKGor6m3n5Z3J81Vbqm2aTP8n7penybwrUUNdU/hetxajdquJ1L
a8SXxP3ETUrXTNQm1Cg7lK6ZqEWoSRr/3/zsm+cr85G1yWfms/5aeq4yZ5nr
/5ReS/gBtfJ6XS7urWvqlq4Zl4nPEdfJ651aiJpo+9I13bPic8X1StecrHXW
PFqwel4rfCY+y7elax1qnqD9aoXXCmtmx9IxhrXMmt4pP1/WHmuQtfpv6bXM
miZ2ba3tZ/p7hRyuc/vk+Ek+bJ7Hb1Me831Kr0lyIzlyXGkNtTbHjGZ5fMm1
5NyxpTUauZycPqZ0TF2s63uJq4nriZ8SnyXernTNSK1JzZnE1QvXptSohbgq
81HcU7xN6ZqSWpSadMscT6hFqUmrlK4xyfXkfPQ7epxas0eOP8QT5gZzhM/y
U+n5x/zCYyD9M/eYg/WJFaVrmyb6G1K4xmEtbZ+srVhT5J5Z0bGGmMNarJe8
llmT+E8jxKfk+EgtRA4ld7YL1uvoa2JArbx26yevZdbwDzp3jfiY0v4Vtcau
ydoJDUVt00x/owrXONSOOyW/PzmaWmSX5NqImoTakxoUPjm4FmqeXBtRE1FL
UVPhFZ4TXGs2Ta49qEGIXQ2TYxkxjNjWIDnWEOOIJY2TYwsxhVqSmhIvdFxw
rUnNSS19Q3DtSg1LrXxTcK1JzYl3OTa4VqVmpVa/LbhWo2bDq8KIpRalhqF2
uTm49qUGxvu5kXXEvbi//nYklurY5XqPA/XZ2hSOhY2SYzExEa02U9cdVFiz
oZ1mRGs3NBTa4pFoLbVnnh/UwDy/TsG5sG5yLu6a5wsxmOfXOj9PNBta7fjg
3F0nOZaTw4nttZNzGzGeWrCy/joUrgnxFo5L/n54DHhdxyY/TzwvvOcOyc8P
D5padffk2pOalee3m/5uL1zzomW2TfYe0DTUqi2Ta2FqVryPjsnjhwdC7UAN
8Wxhj5nxOSrZm8BTwItZou9VpbAnQy1Pjb+6cE1PfX988nhRc+IFdEoefzwB
vPD2yd4xHjLvxXs+ktck3t3RyV4GHh7e+jHJXt6C/P3x4N8WTwrOzdslazVy
NLm8anKuJqejJWolawc0Bdpg8+Tcj0ZAS1VI1kdoKrREpeR4iqaYr3t0F1fU
fo3Ctf2WyfmSGp/afovkfEmNj3ZAQ/C862atUTFZS6A58KK3Ss4HeNLk/mrJ
2gMNgLaonqwF0Bh4R3hIxJsWwVqoZrJ2QBOhJWro79TCmuItXTOAmKD9vQt7
51WS/VQ8dLzzrZNrm3Z5/PHA3hHfHewl4SnhjY0PHg88Vby1CTnWjo+OzcRc
/L0biWuFPV2eFc+sIrmrdOy/LfrZkQOI/bdE5zpyALn+5uhcQM4nF94anSvI
id9Fz0dq2S8Lxzs8GLzr3rrPN9q/K9ob/Lywt4jH+LH2Hwj2FqnZ14ofDPYC
8QQ/Et+fc82E6NxCzsE7xEP8QDw1a5eborUIGgavEc9xjfanB3uJeIofiqcF
65nHtP20sKfNesMjwpvvH+xdUT/iLZ0ZPF/RoMTbXYPnA5qQeLVb8Hyhh0G8
aBo8nvREiCc7Bq9vahbyyc7B40uNS3zaKa8PNCzxe5fg+YtHxXpoEhx/8KSY
Tztk7YyGZv3Uz/kDT434ckbOY/sH57tuOR9R85OvumYtjiZn/jYMXh94YMzv
BsH5DU9tcuEeG+sDTc76rRc8/9HY5JeWwePROdk7xNMl3hBjiC14imiNO6Pz
PZqD3gX6Fq/0muBeCj0VvNKrg71a/CN6KxcF91boseCNDg3uldAzwQu9Mjj+
0nN4V3xPcK+Fngve6VXB8RfPkN7MhcG9FHoqeK8jgnst9FzorQwKjmf0DPGi
bw+Oh/SA8MLvCO790WMjPo4K7hXRMyL+jQzuJdFTIj5eF5wv8KTfE98b3Cuk
h0Zv6dLgXhA9IXpPg7OWuj1aa1XJ8RnP9n3x5KyVJ0drZzQzempatFZHcxNb
iDFNWQ+lvYiHo2txPAm0+oPRsQfNTq1wf7T2RIOiv6aLdy1cA1BbPBCt7akx
8DIfiq5NqVHR9lOjtT4aH609JVrro7nR5vdEa200Otr73ujPhwZHq98drd3R
7GjNO6K1KZoT7ToxOvegYfuQW4Pj1dela4n7orU9NQW1zaRo7U+Nw7W8pn7p
e7K+WyTnfzwb4tFJyeNNz2M3vXaSeLD2hxb2eubrWLfCng/e5eJofxAPE7/z
01yv0ZOjFvgrujagJqgZ7eHi3V5Y2I9bp2PTC/cg8Z6eiK5VySd4v0ui/T08
YPycz8QzCvdkD0Z76dh12r+hsH/ycbRfQg8QrYvmRas2D/ZTPo/ujf63hy1e
G+3v0COcT24S3y2+JNj/+SK6t0pP9VFxh+h7nR3sxTwaXcuTf/GCZkdrOTwh
vKtXor0tPCy8rlejvS08L/zgT6L9JnqSeF+vRXtReGD4my9HP3s8aLyrVeKR
hT0svKvXo70uPCy0JJqS+Vw5eOwYQ571UcH+5VvRfh6eOF790/k8nj1e1Jxo
bwtPCu/+mWh/Fw8f7+pxcfvCHha1ADUB37dOsJc4Nz9vPEW8sseivS48M7y5
N6K9Nzw6/MyP8vOm5453/GS094uHjP+4Jtq/o0dO7bc62r+lBsTf/DDaX6en
hT/5gXhC4Z43teD70bUiNSH19K/RtTI1M94VHha159+lva9fdL5hYQ8Mv+ff
6PN4TNTfv0d7XXhG1Ld/RNfHxB96xxuif59ADxl/guYm9TqeFbXq39G1MTUr
fvE7eT7Rg6AWpiZuK94y2P9YH93boseFN/5UtP+PR45f+aV4buHfANA7GZKv
vyXYb18Q7aVQ/7BWDs7z6aRgr/bNaH+Y9U+t+m50rUzNSj9iobhP4R4LXv6i
aO+GepPa+r3oWpsam99nfBXdO6WHin/+drRfTc8FLw1Pjef3TenfY2zU+eWF
f/PxlLhvXt/Dgv2CMtk/IL6ij05Ozj/0YPltATU1tfTa0n7Fz9GM3sNv/DHa
q8GzwTt+Kdqfx0PGK58X7V3jmXNvPsPjpZ8h+fmA5Pw7JcdTPCP01YbS+XKv
5PqU3yhQ/x2RnM8ZL37rwm9e+G3BwOwd4CFUFn9W+rcH/AaBemV4zscHJV/P
bxyoTw9Pzt+zc/7A40GPflU6vx6cnK/5zQb1ZptkfUDPlXq2bbKemJP1B57H
luLPS8cyYtr40muQ/IJHspX2vyitr9sl6wN6tvR+6QGjb27NevKE5HqYHjV6
tUuy/qaHjf48MVmf0/MmthJjp5UeY/TNHsn6kvWLvtk/WX9OzvkRjwp9vam0
XtgnWY/xGxb0zX7J9Te/KUEP7UsOL/wbEvRUq2S9c1/Or3hi6PeNpf2A1sn6
iR4z+mPvZL3Ob1Lwtv7UZ96tsMeFv079fmnhnhL659Bk/cJvgPALDiOHFe5R
o4cOSdYz/IaG+g1PnHqmZrCXnpL9bzx1enHPRfeq6MnR+1oW3cuiB0Z/b0V0
vwn/A28ssKYLe2T4dzHZK8OzJ9eSc/HF0cH09p6N7vXR4+O78J3oFeBJ0Dtb
Ht37o4dGf3FldL+Lnia90aXRvTh6pPQjX4zuxdAD/Q+3+MCy
          "]], 
         Polygon3DBox[CompressedData["
1:eJwt13f8luMaAPD3977vL5qi1KGt4TSdNNA8DQkNDeW0HC2rgYaOljSEEi0h
lYPKMc8xKk0qlZZVmjoHpZBVIqnO9/o8vz+uz31d3+d61zPu+34r9B7ccVA6
lUptE7miYiaVWieawB+zqdQl8qPytLy4sWVOKtVG3yPq8x0rKi6S13PspHhb
XcHYXN91+qY6diErLkrJr3Dse5GVlzC20tdOX3PHd4nubBSbwJqpPxPd2Eg2
np2QF/Dacsb2rAs7V89S8RfWgf2NTdNzEfuTKC1v4NgPIlde0niNvvb68ju+
TNRmHVk3dkpPddGPTWIPisfUpfRdLMrIGzo20VhUVJN3i88Vc9UVRWs2Qn2v
+E6eifNgvFrd1me08z412W1sDpvP/pAXjNcbO7HubIj6N72n1TVFDfG546dY
rrGeurG+Vuqqev/OHmNz2FH2tCgrL8Feit+t/rO+m+XT2BPxe+WFWCVjZ9aD
tdZXjd3CHmdPppLfvyaTnMvvssm52Cb/1firnkvFZfryqS90/DLHbmb9WUu2
R/RkY9gkdlZ+nr5LjV3ZzeyMvAirYuzCerHJ6sJeW0iUkF8e51G+V/SSj41r
pO8hxwqyAqKkvI5jp0VheWXjjfp66ntYfZ6eInF/yOs69rtYor7E2ELf9fqu
VFdy/AZ2P5vMGrOd4kY2nI1lS+I7iWHsBfZ8vF7PftGHTVBP1ddLz8/sv+pz
xTk5yTO0IpN8h6+zyfO0w5gvzi9rqKdRXBNehw1nC9WveL/O7AsxkD3KZrNi
6pWZ5Hk8rP8Cecf4THEnm6Jvpr4O6gPiDvYIm8EqqNeKxvGseG35THKelmeS
c3kom5yzeJ5XifrsSDZ5tkuK1Znk+f4mnm35oriOoms6eYbiWfpN/pZj5Y3N
1Nemkmv2Tia5rgezyfW7TuwTvdl4fVP09YvPdHw0e4W9xfrGZ7Ix7FX2NmvC
LmU3sclsGmvLarBb2RNsHruCVWYd2Dj2EHs979nvz2azWeJ9+S96f5CXE1X0
lVG/m0nmgaP6S8t/keeXlzW203ejvp5xbdm9bBF7lR2TnxOvMbZhndi4vGte
il0fc6c4kDe/VE0ndXjG+13AarAe6j5eOyWbXPe41hdnk+vSX36lfKz8NX1L
9B2Xn8vKGNuyzmyN/Jjer9Ul4/exrjGX6rvLsQVsMevCarFYLOaxheymmDfZ
3exZ9iL7Wf5mrAnGBqwFu13Pcfa9uqwoE+dGfRkfrG++elE8H3HfshFsMXuN
lWPviUaxbsS5lXcS/xMD2NS4RvrWx/uw79RZUYLtjOeanY15SdRnI9Wtvc8s
x9azLew+dg2bydaxzWy1upWYwday98RwfS3YNLZavUHfdvkJfiLuC1GLjY77
V98Tjm3ISdbWUexaNpu9z7ayAfGssUmxbrKVbAS7mj3O3mWb2FD2VzaFrWDr
2DDWnD3KVsU9GmsFa8amspVsfVwj9QP8U/nT/GVRR71dtJEP1DfMsZXyJ9nB
mJNEYbaHvcTSxoqsOqut3hq/j93JhrC98b4sY6wUaxTbJX+RpYwVWFVpA/Un
MR+xIWwUuzzWEHE9G8CGsi/iWWb5jdVYHbZK/hQ7pC4mirB71S39vsccW8M2
srrsQ9GWDYprxuqrPxbt2V1sBKun/ki0Y4NjnWb7Yl5hWWPlWG/ZnXHv+YyJ
MW+xFWxMfF82h21k29n4+Ez2DNvKdrAJ8f5sHtvGdrKJ8T3YfLadfRZ7JNaV
LWa74rlnk9gNbAH7kO2K9S3uffY8+5TtjbUxzid7jn3C9sQpZ+fHPMa6s94x
R7AubBH7LPYQLMuKsZqsJ+sb+7pY29hCtpPtj/WSdWYvsB1sH1sReyAxIZ53
9kZE7D1inZef0hOXf3nMt5Iv454SBVPJ/djGa+c6tiUnuTcHsaZsMlvKVrOB
rAl7MNZmtirWWvlM/nnMhbGGsrfZjFhv1TkiH3uLTY81RH02b2/7Zuxl2F52
On5//A42h33FzhOFoldd3MFajvVi/dgy+ayYd9T5I9i7eev5AXVufK54J9aN
WJfjt4oC+nawk+xMzA+iHvsy5mVWwFid1WVbvd8ZVjCd7PNiv1cwNznP49PJ
viL2F5/G/KjvlLy0qOy1G/L2iX/kza8xz96hPiwe0P+c+mV9veMZEiPZXPY8
uyWee3Efe5o9x9rEORZ92UT2KNsS34EdVxePz4nvHHueWPtykj1m7DVH5v2O
Qulk7xJ7mG5xD4h74lqp5+r7Sn6WFTY2Zi1Z97gWYkhcZ/YM6xPrkxjFnolz
wD6J9ZT9ri4lKrHHs8m6HGtx2WyyZkzPJmtIrBvlssneZkY22evE/qZ8Nvmv
00K+W/SQj/Z+E73fAflpdo7xCtaUzcwm/5Hif1EFeVPHqkYtbya/W98/9H0s
X8hPqi8WFdnBdHLTFTE2YVcrD8lzYj9qbMpasVu97ip2P3udLWW3sQZsHPs3
Wxb7iLz/Gtew29jtIp2b7EWHppO9S+xhPpD/0+t/lheN8+W137D/xJ4h1oO4
RuxIvHfMHcbLWQN2OL4DK2qsza5iNdWbY52KfQYbzL6VvxHzibEua8RqqbeI
VuxWdherrt4U6yjrywayKur3Y41jt8TvYLvl/2I5xktYNdYw1rGYA9lQNprV
UH8Q6wDrxwaxauqNsT6yPmwA2xzPADumviCeG1YiN1njp6eT+Svmsbv1HBEP
x9oXc5q+9+JZCVefiT22WBv3IvuGpeJ5MKxj89i3cR3EhexBdQef8axjH7Hd
8dq8/dDRnOQ/QPwX2OT4s+ynWNvintF3Im//3CWd/I+M/5P3xGeKR2LNje+s
r7J6fSa5F3+K/3HycfE9xFNsub61+hqpd8RczoaxMWyjfAH7MeY+cRHbz/5g
+Yz1WRP2f0+M4QI=
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {{}, {}, {}, 
     {GrayLevel[0.2], 
      Line3DBox[{251, 474, 1113, 252, 488, 280, 1222, 503, 295, 1227, 518, 
       310, 1234, 533, 325, 1243, 548, 340, 1254, 563, 1161, 355, 578, 1175, 
       370, 1269, 593, 385, 1273, 608, 400, 1279, 623, 415, 1287, 638, 430, 
       1297, 653, 445, 1309, 668, 460}], 
      Line3DBox[{253, 475, 1114, 254, 489, 1125, 281, 504, 296, 1228, 519, 
       311, 1235, 534, 326, 1244, 549, 341, 1255, 564, 1162, 356, 579, 1176, 
       371, 594, 1187, 386, 1274, 609, 401, 1280, 624, 416, 1288, 639, 431, 
       1298, 654, 446, 1310, 669, 461}], 
      Line3DBox[{255, 476, 1115, 256, 490, 1126, 282, 505, 1136, 297, 520, 
       312, 1236, 535, 327, 1245, 550, 342, 1256, 565, 1163, 357, 580, 1177, 
       372, 595, 1188, 387, 610, 1197, 402, 1281, 625, 417, 1289, 640, 432, 
       1299, 655, 447, 1311, 670, 462}], 
      Line3DBox[{257, 477, 1116, 258, 491, 1127, 283, 506, 1137, 298, 521, 
       1145, 313, 536, 328, 1246, 551, 343, 1257, 566, 1164, 358, 581, 1178, 
       373, 596, 1189, 388, 611, 1198, 403, 626, 1205, 418, 1290, 641, 433, 
       1300, 656, 448, 1312, 671, 463}], 
      Line3DBox[{259, 478, 1117, 260, 492, 1128, 284, 507, 1138, 299, 522, 
       1146, 314, 537, 1152, 329, 552, 344, 1258, 567, 1165, 359, 582, 1179, 
       374, 597, 1190, 389, 612, 1199, 404, 627, 1206, 419, 642, 1211, 434, 
       1301, 657, 449, 1313, 672, 464}], 
      Line3DBox[{261, 479, 1118, 263, 493, 1129, 285, 508, 1139, 300, 523, 
       1147, 315, 538, 1153, 330, 553, 1157, 345, 568, 1166, 360, 583, 1180, 
       375, 598, 1191, 390, 613, 1200, 405, 628, 1207, 420, 643, 1212, 435, 
       658, 1215, 450, 1314, 673, 465}], 
      Line3DBox[{265, 481, 1119, 266, 1220, 495, 287, 1224, 510, 302, 1230, 
       525, 317, 1238, 540, 332, 1248, 555, 347, 1260, 570, 1167, 362, 585, 
       377, 1271, 600, 392, 1276, 615, 407, 1283, 630, 422, 1292, 645, 437, 
       1303, 660, 452, 1316, 675, 467}], 
      Line3DBox[{267, 482, 1120, 268, 496, 1130, 288, 1225, 511, 303, 1231, 
       526, 318, 1239, 541, 333, 1249, 556, 348, 1261, 571, 1168, 363, 586, 
       1181, 378, 601, 393, 1277, 616, 408, 1284, 631, 423, 1293, 646, 438, 
       1304, 661, 453, 1317, 676, 468}], 
      Line3DBox[{269, 483, 1121, 270, 497, 1131, 289, 512, 1140, 304, 1232, 
       527, 319, 1240, 542, 334, 1250, 557, 349, 1262, 572, 1169, 364, 587, 
       1182, 379, 602, 1192, 394, 617, 409, 1285, 632, 424, 1294, 647, 439, 
       1305, 662, 454, 1318, 677, 469}], 
      Line3DBox[{271, 484, 1122, 272, 498, 1132, 290, 513, 1141, 305, 528, 
       1148, 320, 1241, 543, 335, 1251, 558, 350, 1263, 573, 1170, 365, 588, 
       1183, 380, 603, 1193, 395, 618, 1201, 410, 633, 425, 1295, 648, 440, 
       1306, 663, 455, 1319, 678, 470}], 
      Line3DBox[{273, 485, 1123, 274, 499, 1133, 291, 514, 1142, 306, 529, 
       1149, 321, 544, 1154, 336, 1252, 559, 351, 1264, 574, 1171, 366, 589, 
       1184, 381, 604, 1194, 396, 619, 1202, 411, 634, 1208, 426, 649, 441, 
       1307, 664, 456, 1320, 679, 471}], 
      Line3DBox[{275, 486, 1124, 276, 500, 1134, 292, 515, 1143, 307, 530, 
       1150, 322, 545, 1155, 337, 560, 1158, 352, 1265, 575, 1172, 367, 590, 
       1185, 382, 605, 1195, 397, 620, 1203, 412, 635, 1209, 427, 650, 1213, 
       442, 665, 457, 1321, 680, 472}], 
      Line3DBox[{277, 682, 1322, 683, 278, 501, 1135, 293, 516, 1144, 308, 
       531, 1151, 323, 546, 1156, 338, 561, 1159, 353, 576, 1173, 1174, 368, 
       591, 1186, 383, 606, 1196, 398, 621, 1204, 413, 636, 1210, 428, 651, 
       1214, 443, 666, 1216, 458, 685, 686, 687}], 
      Line3DBox[{459, 667, 684, 1308, 444, 652, 1296, 429, 637, 1286, 414, 
       622, 1278, 399, 607, 1272, 384, 592, 1268, 369, 577, 1266, 354, 1160, 
       562, 1253, 339, 547, 1242, 324, 532, 1233, 309, 517, 1226, 294, 502, 
       1221, 279, 487, 1218, 250, 473, 681, 688}], 
      Line3DBox[{466, 674, 1315, 451, 659, 1302, 436, 644, 1291, 421, 629, 
       1282, 406, 614, 1275, 391, 599, 1270, 376, 584, 1267, 361, 569, 1259, 
       346, 554, 1247, 331, 539, 1237, 316, 524, 1229, 301, 509, 1223, 286, 
       494, 1219, 264, 480, 1217, 262}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{690, 1004, 473, 689, 1113, 912, 691, 1114, 913, 692, 1115, 
       914, 693, 1116, 915, 694, 1117, 916, 695, 1118, 1010, 1217, 696, 1119, 
       917, 697, 1120, 918, 698, 1121, 919, 699, 1122, 920, 700, 1123, 921, 
       701, 1124, 922, 702, 1322, 1005, 923, 1006}], 
      Line3DBox[{704, 1011, 1218, 703, 488, 705, 1125, 924, 706, 1126, 925, 
       707, 1127, 926, 708, 1128, 927, 709, 1129, 1012, 1219, 710, 1013, 1220,
        711, 1130, 928, 712, 1131, 929, 713, 1132, 930, 714, 1133, 931, 715, 
       1134, 932, 716, 1135, 933, 717}], 
      Line3DBox[{719, 1014, 1221, 718, 1015, 1222, 720, 504, 721, 1136, 934, 
       722, 1137, 935, 723, 1138, 936, 724, 1139, 1016, 1223, 725, 1017, 1224,
        726, 1018, 1225, 727, 1140, 937, 728, 1141, 938, 729, 1142, 939, 730, 
       1143, 940, 731, 1144, 941, 732}], 
      Line3DBox[{734, 1019, 1226, 733, 1020, 1227, 735, 1021, 1228, 736, 520, 
       737, 1145, 942, 738, 1146, 943, 739, 1147, 1022, 1229, 740, 1023, 1230,
        741, 1024, 1231, 742, 1025, 1232, 743, 1148, 944, 744, 1149, 945, 745,
        1150, 946, 746, 1151, 947, 747}], 
      Line3DBox[{749, 1026, 1233, 748, 1027, 1234, 750, 1028, 1235, 751, 1029,
        1236, 752, 536, 753, 1152, 948, 754, 1153, 1030, 1237, 755, 1031, 
       1238, 756, 1032, 1239, 757, 1033, 1240, 758, 1034, 1241, 759, 1154, 
       949, 760, 1155, 950, 761, 1156, 951, 762}], 
      Line3DBox[{764, 1035, 1242, 763, 1036, 1243, 765, 1037, 1244, 766, 1038,
        1245, 767, 1039, 1246, 768, 552, 769, 1157, 1040, 1247, 770, 1041, 
       1248, 771, 1042, 1249, 772, 1043, 1250, 773, 1044, 1251, 774, 1045, 
       1252, 775, 1158, 952, 776, 1159, 953, 777}], 
      Line3DBox[{781, 1160, 954, 779, 1161, 955, 783, 1162, 956, 785, 1163, 
       957, 787, 1164, 958, 789, 1165, 959, 791, 1166, 569, 793, 1167, 960, 
       795, 1168, 961, 797, 1169, 962, 799, 1170, 963, 801, 1171, 964, 803, 
       1172, 965, 805, 1174, 967, 807}], 
      Line3DBox[{806, 966, 1173, 804, 1265, 1057, 802, 1264, 1056, 800, 1263, 
       1055, 798, 1262, 1054, 796, 1261, 1053, 794, 1260, 1052, 792, 1259, 
       568, 790, 1258, 1051, 788, 1257, 1050, 786, 1256, 1049, 784, 1255, 
       1048, 782, 1254, 1047, 778, 1253, 1046, 780}], 
      Line3DBox[{809, 1058, 1266, 808, 1175, 968, 810, 1176, 969, 811, 1177, 
       970, 812, 1178, 971, 813, 1179, 972, 814, 1180, 1059, 1267, 815, 585, 
       816, 1181, 973, 817, 1182, 974, 818, 1183, 975, 819, 1184, 976, 820, 
       1185, 977, 821, 1186, 978, 822}], 
      Line3DBox[{824, 1060, 1268, 823, 1061, 1269, 825, 1187, 979, 826, 1188, 
       980, 827, 1189, 981, 828, 1190, 982, 829, 1191, 1062, 1270, 830, 1063, 
       1271, 831, 601, 832, 1192, 983, 833, 1193, 984, 834, 1194, 985, 835, 
       1195, 986, 836, 1196, 987, 837}], 
      Line3DBox[{839, 1064, 1272, 838, 1065, 1273, 840, 1066, 1274, 841, 1197,
        988, 842, 1198, 989, 843, 1199, 990, 844, 1200, 1067, 1275, 845, 1068,
        1276, 846, 1069, 1277, 847, 617, 848, 1201, 991, 849, 1202, 992, 850, 
       1203, 993, 851, 1204, 994, 852}], 
      Line3DBox[{854, 1070, 1278, 853, 1071, 1279, 855, 1072, 1280, 856, 1073,
        1281, 857, 1205, 995, 858, 1206, 996, 859, 1207, 1074, 1282, 860, 
       1075, 1283, 861, 1076, 1284, 862, 1077, 1285, 863, 633, 864, 1208, 997,
        865, 1209, 998, 866, 1210, 999, 867}], 
      Line3DBox[{869, 1078, 1286, 868, 1079, 1287, 870, 1080, 1288, 871, 1081,
        1289, 872, 1082, 1290, 873, 1211, 1000, 874, 1212, 1083, 1291, 875, 
       1084, 1292, 876, 1085, 1293, 877, 1086, 1294, 878, 1087, 1295, 879, 
       649, 880, 1213, 1001, 881, 1214, 1002, 882}], 
      Line3DBox[{884, 1088, 1296, 883, 1089, 1297, 885, 1090, 1298, 886, 1091,
        1299, 887, 1092, 1300, 888, 1093, 1301, 889, 1215, 1094, 1302, 890, 
       1095, 1303, 891, 1096, 1304, 892, 1097, 1305, 893, 1098, 1306, 894, 
       1099, 1307, 895, 665, 896, 1216, 1003, 897}], 
      Line3DBox[{911, 1009, 685, 910, 1321, 1111, 909, 1320, 1110, 908, 1319, 
       1109, 907, 1318, 1108, 906, 1317, 1107, 905, 1316, 1106, 904, 1315, 
       1314, 1105, 903, 1313, 1104, 902, 1312, 1103, 901, 1311, 1102, 900, 
       1310, 1101, 899, 1309, 1100, 898, 1112, 1308, 1007, 1008}]}}},
   VertexNormals->CompressedData["
1:eJztyDEJgEAYgNEfxSCuVnCwgxEOdDWCTcQmFvBqXA6XAycDCO9bPnh92ual
iYihi2jj7R739TjLVT9xzjnnnHPOOeecc8455/zbc/XMOeecc84555xzzjnn
nHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnn
nHPOOf+9P8sDIe0=
    "]],
  Axes->True,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{298.2608728807828, 324.6666666666667},
  Method->{},
  PlotRange->{{0., 0.4999999642857143}, {4.0000000714285715`, 
   4.9999999285714285`}, {4.0000000714285715`, 4.9999999285714285`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{
   1.5710607960024998`, -0.023757843513122517`, -2.9968656192988696`},
  ViewVertical->{1.9748371756608734`, -0.054504056036102255`, 
   0.14843753230725812`}]], "Output",
 CellChangeTimes->{
  3.7074175057597027`*^9, 3.707418481394311*^9, 3.70741885664745*^9, 
   3.7074189679458647`*^9, 3.707419077677128*^9, 3.707426040836967*^9, {
   3.707426155844879*^9, 3.707426196993474*^9}, 3.707426623991808*^9}]
}, Open  ]],

Cell["Two vectors in the plane are {1,-4,-4} and {0,-4,-4}", "Text",
 CellChangeTimes->{{3.7074200195656357`*^9, 3.707420071531032*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"planenormal", " ", "=", " ", 
  RowBox[{"Cross", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"-", "4"}], ",", 
      RowBox[{"-", "4"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"-", "4"}], ",", 
      RowBox[{"-", "4"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.707420079574188*^9, 3.707420099194105*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "4", ",", 
   RowBox[{"-", "4"}]}], "}"}]], "Output",
 CellChangeTimes->{3.707420100529337*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"x", ",", "y", ",", "z"}], "}"}], "-", 
  RowBox[{"{", 
   RowBox[{"1", ",", "0", ",", "0"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.707420240921556*^9, 3.7074202510769873`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "1"}], "+", "x"}], ",", "y", ",", "z"}], "}"}]], "Output",
 CellChangeTimes->{3.7074202542610073`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"planeeq", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "4", ",", 
     RowBox[{"-", "4"}]}], "}"}], ".", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "1"}], "+", "x"}], ",", "y", ",", "z"}], 
    "}"}]}]}]], "Input",
 CellChangeTimes->{{3.70742029396469*^9, 3.7074203022701073`*^9}, {
  3.7074203551221724`*^9, 3.707420357641612*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"4", " ", "y"}], "-", 
  RowBox[{"4", " ", "z"}]}]], "Output",
 CellChangeTimes->{3.707420304659429*^9, 3.7074204469963093`*^9}]
}, Open  ]],

Cell["\<\
So the equation of the plane is 4y -4z = 0. I\[CloseCurlyQuote]m going to \
suppose the following is what I want:\
\>", "Text",
 CellChangeTimes->{{3.707420311477213*^9, 3.707420330178281*^9}, {
  3.707422105031996*^9, 3.7074221160144176`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"surf", "=", 
  RowBox[{"{", 
   RowBox[{"x", ",", 
    RowBox[{"4", "y"}], ",", 
    RowBox[{
     RowBox[{"-", "4"}], "z"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.707422122998567*^9, 3.707422153821229*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", 
   RowBox[{"4", " ", "y"}], ",", 
   RowBox[{
    RowBox[{"-", "4"}], " ", "z"}]}], "}"}]], "Output",
 CellChangeTimes->{3.707422912661106*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"F", " ", "=", 
  RowBox[{"{", 
   RowBox[{
    SuperscriptBox["z", "2"], ",", 
    RowBox[{"-", 
     SuperscriptBox["x", "2"]}], ",", "0"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.707410095875198*^9, 3.7074101413039837`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox["z", "2"], ",", 
   RowBox[{"-", 
    SuperscriptBox["x", "2"]}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.70742291669627*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dogm", "=", 
  RowBox[{"Curl", "[", 
   RowBox[{"F", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.707410190097685*^9, 3.707410193431593*^9}, {
  3.7074102651098557`*^9, 3.707410266404112*^9}, {3.707410302276249*^9, 
  3.707410317307645*^9}, {3.707410481310521*^9, 3.7074104835726433`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"2", " ", "z"}], ",", 
   RowBox[{
    RowBox[{"-", "2"}], " ", "x"}]}], "}"}]], "Output",
 CellChangeTimes->{3.707422920511609*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fir", "=", 
  RowBox[{"D", "[", 
   RowBox[{"surf", ",", 
    RowBox[{"{", "x", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.707417103044408*^9, 3.707417124893984*^9}, {
  3.707417233179552*^9, 3.707417235130376*^9}, {3.70742036284308*^9, 
  3.707420366042859*^9}, {3.707422160966692*^9, 3.707422165044767*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.707417127049203*^9, 3.707417236925918*^9, 
  3.707420367949785*^9, 3.707420457508428*^9, 3.7074221664954777`*^9, 
  3.707422929978492*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sec", "=", 
  RowBox[{"D", "[", 
   RowBox[{"surf", ",", 
    RowBox[{"{", "y", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7074203858659983`*^9, 3.707420392552422*^9}, {
  3.707422172270521*^9, 3.707422174244513*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "4", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.707420393376409*^9, 3.707420460293535*^9, 
  3.7074221754666357`*^9, 3.707422932824925*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"thi", "=", 
  RowBox[{"D", "[", 
   RowBox[{"planeeq", ",", 
    RowBox[{"{", "z", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.707420407065431*^9, 3.7074204143914957`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.707420415469841*^9, 3.707420463225615*^9, 
  3.707422936278566*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"crs", "=", 
  RowBox[{"Cross", "[", 
   RowBox[{"fir", ",", "sec"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.707410416723036*^9, 3.707410428919883*^9}, {
  3.707420569427978*^9, 3.7074205751396723`*^9}, {3.707422185837769*^9, 
  3.707422189333449*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.707410430611354*^9, 3.707420576474304*^9, 
  3.707422190582325*^9, 3.707422261598833*^9, 3.707422943065219*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"arg", "=", 
  RowBox[{"dogm", ".", "crs"}]}]], "Input",
 CellChangeTimes->{{3.707410491080881*^9, 3.707410501805588*^9}, {
   3.707411142391177*^9, 3.707411146502733*^9}, {3.707411564513075*^9, 
   3.7074115821521053`*^9}, 3.707422247460883*^9, {3.707422680452359*^9, 
   3.70742269194063*^9}, {3.7074227391149693`*^9, 3.707422769459643*^9}, {
   3.7074229551875668`*^9, 3.707422968395187*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "8"}], " ", "x"}]], "Output",
 CellChangeTimes->{
  3.707410503765072*^9, {3.707411148185135*^9, 3.7074111742766857`*^9}, 
   3.7074112613062477`*^9, 3.707411584461712*^9, {3.707422249293489*^9, 
   3.7074222671756372`*^9}, {3.70742269352217*^9, 3.707422772012678*^9}, 
   3.707422969731574*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"inte", "=", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", "0", "1"], 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", 
     RowBox[{"4", " ", "x"}]], 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "y"], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "8"}], "x"}], ")"}], 
      RowBox[{"\[DifferentialD]", "z"}], 
      RowBox[{"\[DifferentialD]", "y"}], 
      RowBox[{"\[DifferentialD]", "x"}]}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.7074105166500483`*^9, 3.707410556346449*^9}, {
   3.7074105881694736`*^9, 3.707410643399324*^9}, {3.70741073583617*^9, 
   3.707410749603713*^9}, {3.7074109171341467`*^9, 3.7074109176222963`*^9}, 
   3.707410977476574*^9, 3.707411186176859*^9, 3.707411265995162*^9, {
   3.707411531562372*^9, 3.707411536433728*^9}, {3.707411589664043*^9, 
   3.7074115921760483`*^9}, {3.707422281777285*^9, 3.7074222857928753`*^9}, 
   3.7074224650216427`*^9, {3.707422510297233*^9, 3.7074225105133247`*^9}, 
   3.707422789707361*^9, {3.707422978107065*^9, 3.7074229792889233`*^9}}],

Cell[BoxData[
 RowBox[{"-", "16"}]], "Output",
 CellChangeTimes->{3.70741075336489*^9, 3.707410920501753*^9, 
  3.707410980147152*^9, 3.707411189002193*^9, 3.7074112673880987`*^9, 
  3.7074115938868923`*^9, 3.707422287683277*^9, 3.707422467525535*^9, 
  3.707422512102901*^9, 3.7074227926370564`*^9, 3.707422980125389*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"0", ",", 
    RowBox[{"2", "z"}], ",", 
    RowBox[{
     RowBox[{"-", "2"}], "z"}]}], "}"}], ".", 
  RowBox[{"{", 
   RowBox[{"0", ",", 
    RowBox[{"-", "1"}], ",", "1"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.707423070155352*^9, 3.70742311078052*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "4"}], " ", "z"}]], "Output",
 CellChangeTimes->{{3.707423094444386*^9, 3.7074231120024443`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"inte1", "=", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", "0", "1"], 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", 
     RowBox[{"4", " "}]], 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "y"], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "4"}], " ", "z"}], ")"}], 
      RowBox[{"\[DifferentialD]", "z"}], 
      RowBox[{"\[DifferentialD]", "y"}], 
      RowBox[{"\[DifferentialD]", "x"}]}]}]}]}]}]], "Input",
 CellChangeTimes->{
  3.707423063375731*^9, {3.707423123022135*^9, 3.707423126684195*^9}, 
   3.707423180450575*^9},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["128", "3"]}]], "Output",
 CellChangeTimes->{3.707423130218319*^9, 3.7074231819666243`*^9},
 Background->RGBColor[0.94, 0.91, 0.88]]
}, Open  ]],

Cell["Not surprising that it did not come out right.", "Text",
 CellChangeTimes->{{3.707411384270688*^9, 3.7074113945582247`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"3.", " ", "F"}], "=", 
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "z"}]], ",", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z"}]], 
      RowBox[{"Cos", "[", "y", "]"}]}], ",", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z"}]], 
      RowBox[{"Sin", "[", "y", "]"}]}]}], "}"}]}], ",", " ", 
  RowBox[{
   RowBox[{"S", ":", " ", "z"}], "=", 
   FractionBox[
    SuperscriptBox["y", "2"], "2"]}], ",", " ", 
  RowBox[{
   RowBox[{"-", "1"}], "\[LessEqual]", "x", "\[LessEqual]", "1"}], ",", " ", 
  RowBox[{"0", "\[LessEqual]", "y", "\[LessEqual]", "1"}]}]], "Text",
 CellChangeTimes->{{3.769089921052499*^9, 3.769090058836027*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.707411976463635*^9, 3.707411978268442*^9}, 
   3.769089448765614*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"surf", " ", "=", " ", 
  RowBox[{"Plot3D", "[", 
   RowBox[{
    FractionBox[
     SuperscriptBox["y", "2"], "2"], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.707413334432379*^9, 3.7074133907473583`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
6dboYe+zUObkt88pn0fd733ePin1+MLIWLfz8gdPr3OP97lK5rQtd5XX3+Z9
zvzvgl9/Fx7m6txww2ne2vt8UuZdnWl+WEvy7wm3mtA03Mv7fEDy/yD54fNj
yd9Q8sMn54fPOyV/seSHz+8kfwvJD59DRuYsiIbyXPPXn33j/uPDvM/Orev0
K79vbvB2+z7LTw31Pm+cd8dDO2KL3KmGv/m4f+0hZ3yWDVw1P7LQrb5i9mMP
NxrkfQ6963P3YWiBm3RNuNlNrQd4n01Gp+f2TcfcwHYlx68I53if+cV1m94Z
nefGvln5LxfEn/U+P5e51g00fxss+a+U/PB5t+Q/V/LDJ/KflPzeJ+WHz1cl
/xTJD5/I/6LkRx9ISv4PJT88n+gxuzQUPn2fF2uanFb0d+95WbWOU6OhFW7t
Zz9fO7fDR97zqJmFPbKyvnXLPsqfGB8X9Z6fuPfFi/qml7lFr334m+Wn3vee
2/5Sb0M6VuCeLsmvPHnOSO+55ifTR4Sj+e6hpb2K50f+5j1vu+XmjvMjS114
YlZyVbPh3nMTmWvtpPnbT5J/k+SH5wLJv0bywzPyF0h+eOb88Hy95H9G8sMz
8j8o+eF5q+TvKPnhef6FP72Xjq13S/dcNaNz3mTv+dNnljwbDa13Q++t0TM+
bpL3/NbiEeFwdJ27MVF8fvOBE73n537zUNOsrHXuX1cvXj266wTv+Ytv76ze
N73GPdumVa063cd7z0P77kmkY6vdvnMODdjXYJz3fG+DwS+Fo6vcY6UT9uat
HOM9r5a5VlWav8Ukf57kh+fxkn+I5Idnzg/PnB+ev5T8EckPz5wfnrtI/h6S
H577vfrBjFB4szvnmykvVbvmizN9eOOjb6Zjm9xZl/X/Ih2b7T3femXz3tHQ
Jld72K0lczrM8p6vGnTChaMbXc195zYcvuxz77nB6uQlWVkbXY07i7t07zzD
e/610Xv/ikU2uOr/mPNm683TvOeSnG6bI+nTPs99NV67+1Tv+W2Za9Wg+VuO
5D9L8sPzw5K/ruSHZ84Pz5wfnpG/puSHZ+SvJvnhea/kryL54fmaQy2WRtLb
XfNjHZrFx8W85wv+8O9PQ+HtLjxuwmvp2D+957L3lg9Ox7a5p8KVC0+tm+c9
7y/+8KFoaJt760Tv6y8+/JX3vK5Nz9+Ho1vdtMkF0XbVvvKevx5+df2srK1u
eZcrjzzYaO6Zz9fSJ4/FIlvc/v8Mv2Nguzne8+0y16pJ87cWkv+3kh+ez5f8
2ZIfnjk/PHN+eEb+6ZIfnjk/PE+Q/PskPzwfvm/Vjlhkl+s4PT2m6/HF3vOG
z3IXRNKF7o0u81tNK1rkPS88+fioULjQFZyMrj61Lu49T77r2n7p2E5XbWLf
JzvnLfSeR4z/zz3R0E7XMXxnpUlzvvGe+3+/4upwdId78/srxv48cYH3/Oht
o2plZe1wy8dUahOOfq3mb5Vo/nZI8t8q+eE5Jflfl/zwjPz5kh+eOT88c354
5vzw/IjkXyb54XnDztb/Livb7Vrcdv9bofCZ+Vt2jbF90rHdrvC8sn5PzVp6
xnPLSltjkd1u5P4ZPWfVW+o9t3z4yY7R0G7nFtx/9/GcpPc85bXV8yLpInfs
nbJ2rTfnec8Xzm71P+FokZvwyOdNB7bL855HbB7zQShc5Lq0+GP9+Lglav42
mOZvyP87yQ/Pd1B+75nywzPnh2fkPy754ZnzwzPnh+dro1WGh8J7XWx56tbO
eSu856kL+5wof51fRrXvMqveCu/5opK1j6dje1zbJyY9Urv7t97zyLN/vyEW
2eMGtqnd56lZy73nytePuzka2uMWVM15YdmpZd7zgMcqfxlJF7tTG7a9Ggov
854PvfPUZeFosbth8s0jh40uUPO3/jR/Q/5/Sn54/kzyn5D88Mz54ZnzwzPn
h2fOD8/I317yw/N7HVMNwtF9bnH3PpWnFa31nqs+f/1rofA+N/KqkS0aXbzW
e35xzPjvy8pKXI+Tcx8e3XWN91yarNozHStx1xRsebPeu6u9556lT6+JRUpc
VvTXuW8tW+U9bzxv/Y3RUIlLdW+8q6xspfec7drOjKT3uslXdawzsN3K/3f+
hvxxyQ/PVSg/PCN/d8kPz5wfnpG/kuSHZ+RfL/nhGfknSX54PnJqwsRI+oCb
UHXEY6O7npm/9QrVOCccPeDWHxz8VlFJynvedHdkSCh8wFVaG5ndbGDKe77z
xQ2l5a9/3bzuG3Jqp7znxRPadUvH9rveY+7518Jx673n6777dEUsst99NOSm
RtWuWe89T/2x2vXR0H5X0Pva2zvnrVPzt740f0P+TyU/PD8m+ddJfnjm/PDM
+eGZ88Mz54dn5M+X/PB81xfPtYiGTl8nex9L5tQ+M39bsnXTuEj6kBuzfPHJ
7Ohm77lV5RvrhKOHXLTiPNnsPU+/atJLofAh9857jz7+88RN3vMlf6x5oKzs
oHvtx6s/Xtlsk/f8/pC+f0rHDrrBD/y6duKcjd5z1ekb82ORg+6FhSurDWy3
Uc3fptL8Dfk/lfzwnJD8uZIfnpH/A8kPz5wfnpH/dckPz5wfnjk/PM/o3WFh
LHLE9VzV/bOSBmfmb5e9O6VZNHTEXf5F3cPZ0e1n5kKx2rmRdKnb/cE3LWfV
2+49Vy96vno4Wuom9X9qQL13t3nPg2pt6R8Kl7reD5wfz6m9zXs+et0f9lTs
X2ifX2nzW1u9516PTL43HTvsSi7JuaNdta1q/vYJzd+Qv7vkh+dLKb+fC1F+
eOb88Mz54ZnzwzPnh+fqF56VnY4dcyMK13fq+vyZ+Rv21z0+4YnuRSWF3vPR
p7eFoqFj7kilH79a92Ch94x9iQN6v1Irb+XOM/PkRZ9VCkePuqyCOj3mdNjp
PXfaX+f5UPioe6dp7ryJc3Z4z0vOySksKzvi6g8P1Y6Gdqj52z00f6sm+bd1
2F7zeM6Z+Rvy95b88Iz8pZIfnjm/nydTfnjm/PA5T+Zdo6r3X1RSEvL+Rwn/
C/FzZd51QuZ1WAcell15SeefG+/w9eAFxPE+vivvI7g1J7R+Z6Cu5Nkv8zfs
twQvlZzYz8z12M/MHPuZM9enDJ5UPEv+Meqdsb7i2M9s5Fcc+5mZYz+zwf2c
sL7M2eCTOXwyh0/m8Jm5PmXwpOLwadQ7Y33F4dPIrzh8ModPw5tVr+aB8Mwc
npnDM3N4zlyfMnhScXg26p2xvuLwbORXHJ6Zw7Phzar3c7+TMjeDZ+bwzBye
mcNz5vqUwZOKw7NR74z1FYdnI7/i8Mwcng1vVn2ivszHqsl8DJ6ZwzNzeGYO
z5nrUwZPKg7PRr0z1lccno38isMzc3g2vFn1ifkyByuQORg8M4dn5vDMHJ4z
16cMnlQcno16Z6yvODwb+RWHZ+bwbHiz6hPdZN6VL/Mu8LKKf3a5/1b8O+H9
cz041+N94Xpwrsf7xfXgXI/3kevBM6+fMtZPGfVJoz6p6nE+cD24sb4z1ndG
fqM+pepxXhl+jPWLjfWLVT3OQ+P9VfU4P43zTdXjvDXON2v9RErmnFfJnBPn
J3Och8xxvjHHeZW5PmXwpOI4H4x6Z6yvON5HI7/ieF+Yw7/hzapPTJF55o8y
z4Rn5vDMHJ6Zw3Pm+pTBk4rDs1HvjPUVh2cjv+LwzByeDW9WfWKAzC0flrkl
PDOHZ+bwzByeM9enDJ5UHJ6Nemesrzg8G/kVh2fm8Gx4s+oT2TKfbCnzSXhm
Ds/M4Zk5PGeuTxk8qTg8G/XOWF9xeDbyKw7PzOHZ8GbVJy6WOeRQmUPCM3N4
Zg7PzOE5c33K4EnF4dmod8b6isOzkV9xeGYOz4Y3qz5RKvPGy2XeCM/M4Zk5
PDOH58z1KYMnFYdno94Z6ysOz0Z+xeGZOTwb3qz6xGKZ+9WTuSh8ModP5vCZ
uT5l8KTi8GnUO2N9xeHTyK84fDKHT+bwCZ6UeWne1x0nxyL71VyxepcZb0fS
Z+aW+4R/tOaCouzoDsUv/c+OWbHIBsU7PXDbj9nRfMUby7yaeSL77MvL9y0x
//3F4a7l+z+Yb/n55lvLP0dnHu2+65HyzyOZd14+eED55zrMa7e8+P3y+TjP
dYPj2qP2Ny6t+F2CnWp+GBzvRmOeuUzxy2U+z+vXWLK7bvn+Fa4P/OxW/K9z
ZrYr/zyVedsKb4cUx+8DZOaFal4XrL9J8VoVOVcoPm3s9l+zo0Vqbta76sDz
yz/HZd4ocl7L8s/DmG/fNDdc/rkC85kVPjerfXd9Ks7/lWoOdlfF+7JXzZcC
zwcVXyq/R8H82wq+2s9/qsv85Ni5/ziYHT2g5ioz/3pXlfLPt7j+w4q/o1I1
H+hjzAFmG8/v3xvP6c8Yz+M/Gc/dp4zn62LjufiA8fzbw3jOPWw8z04znlt7
G8+nlxnPofnSx/Dc1Fyem2pKH+PnqTHSx5g3kT7G/E/Sx5h/I/2K+XXSr5hv
lH7F/H3pV8w7Sb9iXkP6FfNG0q/wXPOTPNd8J/2Kn3fuk37FPCb9inll6Uu8
flz6EtcPlL7EvLX0JebHpC8xPyV9iZ8jhklfYn6e9CXwbsKnSF/i+p7Sl7j+
EulLXL9F+hLXz5W+xPfhL0hfYp4tfYl5VelLzJdIX2K+UfoS35eWSl9iPl36
EvP3pS/hvqux3HfJ9VF97jlEPldljvsN5vVkHb4PwX0yc6lX9y3yuirP8Yo+
E1X3G38Pjktdf0sr6iep63vQfxaq6+PswJu63n0feFb86Yp1Zir+WcV5ElPX
teD9Xa14gfwOEl+PguvvQcXvDs4rxYP+P1ddN/cFXF3vegXnreJB396s+I7g
70J/XhP8HenPX4K/O8VnBH+niu+QfRTgVYUH/Sqm6jsF/tV1OehjK9R1OehX
m1R90JcKFW8l+yJ4nZ/kd5z4+t4u6HuKvxz0ScXzgr6qeN2gDyv+W9lPwvzF
4HxWfE1w/qv7kElB/1c86FcbFU8E1xfFGwbXI8W3yL4RdVzSH3j+fG9wHVT8
78F1U/FtwXVW8RuC67Li+cF1XPG2sg8HfOn/+XxhcRz3Ib/Kfcj4oP+o+fkt
wf2D4hcG9xuKvxfcnyheJbifUTwR3P8o/lfpz8xfkf6J+4er5f6hy+Sgf/J9
VB15XuP7jdHSV/l+YKfsmwL/QXhoctBv+freSfot8/Pl+YjX/0L6MK6/j8j1
92fpw+APCW8r+7W4foL0Z76Ovyv9ma/7MenPvM4G2U/F6yyXvs3X67Okb4Nf
I/we6dtc31z2lXH92ZODfs71a6Sfc/2fpJ9z/WTp58wvkH1SvM4u6fN8/xCS
Ps/8Senz4K8Kny19nuuLpc8zXyV9nvkl0ueZn0gEfZ55P+nzzA9In2feUvo8
5/9F+jzfL90ofZ7nV0Olz3N9vvR5rj9X+jzz1tLnmb8tfZ7XHy99nutHSZ9n
fov0eV7na+nzXH+h9HnmG6XPM79f+jnu686ROdVo6efMd0g/57nWTdLPuf47
6edcf4f0c+ZdpG8zbyt9m3l96dvM35G+zbyS9G3OGZe+zfUvSX/m+96B0s/B
84RjnyrP8bBPle+HsU+VOfapMsc+VebYp8q8oTHfw35UNceT/skc+1GZYz8q
c+xHZQ4PfJ8PD3yfDw/M4YE5PDC/zJjv4Xi5HsfLHMfLHMfLHPtdmeN41ZxN
jpc5jpc5jlfN8SQ/c+RnjvzM/T5hIyc/vyAnP48gJ3PkYY48zJGHOV6X7//x
uvycgvX5OQLrW+vwfTLq1XOE9A2ej6E/MPffAyWO84Q5/DOHB+bIzxz9IfN8
b63i/vuexHG+Mcf7yxz+mcOn5Y3vh+FNzQ/FG3N4Yw5vzOGNuf+eJnH4UfNA
8cMcfpjDD3P4YQ4PfH8OD3w/7793SRwemMMDr4/jZY7jVfNGfF+SOI6XOY6X
OY6LnwtwXMz99xzpuQDHxRz5eR3k53r/PUSqR36uR06+z0dO5v57gsSRhzny
MPff1zNel++38brMsT5zrG+tw/exqGeO79fwfRT6aubvC+TGmaO/Mcc6fF1D
n8m8Tz43zhzrM0d/YI7X5esXXpc5/q4z7yfPjfP1F3m4HnmY4++XOXLy9RE5
mSMnc/ydMsf5z9dlHBdff3FcvA6Oi+txXFyPv2vmrY35of99Erq+wwNzeGAO
D8zhgTn+HjPvu86Nq/me+GEOP5nnflsUhx/m8MMcfcC6/1HzQPzeCHF4Yw5v
zOGNObwxR//JPD/MjWfet5yr5orwzPXwzByemcMzc3hmDs/MBxtzxZeNuSKO
i++jcFx8X4F1+PqO95HnilifOdbn6zi88fp4XZ7v4XV5rtjGmCsiD1+XkYc5
8vA6eB/5Oo6cfD31v49B8zrk5Hqc51yP/MyRnzny8/rIzxznIa+D4+LrOI6L
OY6L53I4Lq7H32/m/Ye5ceY4XuY4XuY4XuY4XuatjbkiPPD9CTzwPA0euN7/
XgTVwwNz9LHM+wZz48zhhzn8MIcfzul/F4LnnOKHOfoS85eNuRm88fwN3pjD
G8/l/O8/UD28cT36f+Z9g7lx5vDJHD6Zwydz+GTuf/+B8sMn1w825o3wzJ+/
ox4cv7v4v+VvARM=
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
s76VXwrOQeTD74Fvj95PreBzNB+ZDVQw/l3OcbJs3lb5geA8ZYv8THD+Ui65
PqMa0XD5p2xv7kM2Dc7Rdsm/BeePu+HGwfb++5znSPmU4o5h8N2MYad8Y3BO
tzezmcp95N+Um0/WvGd2WznX/swmK3dT8nJxcB40hlYhs1eyW5egb6e9mb2v
csB/4PbBedzvmT9S/vhb5neUPx7MfKLyx78zX6na3VE8q0tw/JCSbaligCOZ
z1Wd9nBm2xV7/Jv5r6JZPnE93I3x5JLHpjyuAHx5cLyRT96nikPG5e3DlIMU
RN81OFZRfUv59avcpzH6u4PjuiLJNl/1umLwlcE1hBLJ+aNqd6r7KmZbohgg
uU6oGl2Z5JqGaoClkmsjquMdmzxm1foqJNeXVOs7Prkmo1iomnK84JinutZ3
cHxYC74lOG5UPVs51zs8t3KyP1I89kje9UbldKpPK+Z8L7rOrXjy3egYdhI8
Ojr/ux2+Odr33g8Piq6bKgd/ET4zeZ0rvlWdT/XnRdG1bdVzFkbXAlUzfCm6
zq3ayGtwg+T7Kx5WzVt1ideja95L4Tfg5snrVnHmjLxjIMUA8/OOtxTHKp6d
SJ9R0TVy+bhl0bV2xW9Lo2PVyfCY6Hr5MvhNuFnyeyluX5G3rZTNlC+QL5E/
UH5QW9+c/5VNjrtU676UNju4/lY6Oa5QLfHK5PxUdbaqybGc6kV9k22+6vmq
Q2iNXRRdU9E676TYIzn3Ud2pXXIOq5p2++TcVjXzY5JjQtVyOyfn76op9Uv2
NToLKJ8cK6r+0y0531dtsE+yH9H5wq3wguD67ZeMoWFwDrUObhSce6q+IltR
P7r2KTtZHrks7zxcuWSV5PhTdbCzk+Mu1eqbJMdOOh+plBxPqj5WMTlGVY3r
wuT8XecCbWhjgmP7X3KOJ5WPKGdVneoVxVrJcbVqcRcn11hUQ6ufHHvrnKJI
9i51onO+JnDD6DzpbLhR5jdlz1/O2VbKZp4afYZzAdwiOnc8Cz4NvinZd6um
HbL+p6BfnnMerZy3Z7IP1ZlOr2Q/rvMF1bdknxsoppWfCz4TUa3uCrgz+obJ
OZrOaLon+yzV2/+iT7fgWl+d5LhUNcB6ybG3zmLqJseiOnP5IOd8X3n3Xtpa
eCKyRnJ+oTrkNcl+U2ciNeFBwTXG2skxsOqEh7Kx6TyraLYe6jLOwlzfHFxj
LJoc56tmXjI5llZd/cbkeEY1/0bJeajOqs6gjQo+OzsnOZbWOdR1yTm1atHK
F2XfronOR1vATWR/+N+DwfnXLcl1CdVp5X9a6ltF19K0nmdH1yZl5ztG51jP
wFMUsyTnDjoX25NzTqT5fzXvfEO5mOJqxVDNCjjmVJw4H/ljzrmGagiqZcoP
nq8cITmfUq1eeb/W8P2K95JrYqrnqwag8Q+LzoNlt6+Nrv0rzqyCvEPzF1y3
b0sbHVwf6JRsu5Sf9oBfCa7T6nxD8azi5G2Zj1YssSP7JqpvbM++oWoaiucU
Tx6rGB59u+C6wQ/ZmledZHO2R1RjOS85R9P5YIvkHFDng1clf0+dl+msQ7HK
SciN2b7Q/rg6OdbSOVrv5HhV55stk3M9nS02Tc7vdJanMw3FPzWRrZJzTJ3P
tqZNCT7jW5tzvUX1tG/gc4JrR+/kXftTHfWLLKZSzPxxZrdVW1sN1wuuy32a
81mG6mxfZ/ZB9Z9h2X7RGY3qlprz+qyBDsn+RbWFT3KuuamO92HOdTbVvjom
+03VDTZldkO1qVU51/pUK1uZc/ysWpbGp3GejPwfs6TD2w==
          "]], 
         Polygon3DBox[CompressedData["
1:eJwtmnXg3UQaRV9mXilOi7WFQg13Z3GKF9fFoTgUdylOcS3u7u5uxQuLLlrc
3RfbRfYcbv5Ik9O835Nk5vvuvZNBW+669i6l0+n4T5f9VPyzAfu1mk7na47v
qp3OTvBW8Mnw93AfeEJ4LPwAvCe8I3wm/BM8EzwAfhaelm04vAH8I8fTsG0O
rw//wPFcvH43eEU+/xL4Z3hmeCDnn4PvhXeFt4VPhe+H94BHwGfA97V/vx18
Gjwp21rwMPgTjvuxbQb/E/6e455sK8JLw+9yfAd/vwO8BXwivAR8iK/n+1wP
vwCfCI/i/LXwFGz/hNeAv+R4crb14NXhLzgej20FeCn4HY4nZlvD3wd/xPEr
vN8Z8InwzXDDtjT8D/gNjnuwLQ8vCb/NcZdtOXgJ+C2On+fvT4CPgK+Bn4GP
hA+Cr4CfhY+GD4Gvgv8FHwUfDF8JPwcfDx8OX+29ZnsKfhier0enU+Ch8CLw
OH8r2xPwg/A8nF8ffhJ+CJ4XnhJeH14T/sr34v0Phw+AL4UnYlsdXgH+kONJ
2NaEV4I/5vglXn8qfBx8AzwB26rwcvD7HP/B+YXheeBX4PHZVoKHwu9xPDXb
xvA68Dcc/5vXnwYfD98I92HbBF4X/pbjvmybwuvB33E8ltcfAY+EL4P/By8I
zwX/G/4dXgieG34Z/hbuBf+X7Un4L3hJjhfi/GtOILal2C0Mv87xq5w/Ez4J
vgV+GT4dPgG+CX4aHgUfCF8O92ZbF14N/pzj3zg/DzwL/CL8J7wEvCD8KtyL
bR14VfgzjidkWw1eHv6A4xd5/UnwkfB18C2M697wG/AS3L9fOD8XPBP8vPON
8xPCH8I7wvfAE8AfwCPgZdvxtmnJ+P2oZHxOzP4l+JOS8T9pyfW6j/1E8Ef8
/U7wuyXXZzz2L8Bvl1y/HiWf/17JfOhZ8nvvZz8x/DF/vzN8Nzw+/D68A/wo
PCX8Jbw7PAaeHP4c3hW+va1rb8HbON9hfnbnbXjb9npY/8bBW1nPgEngT+Bd
4Dvh8eB34O3g22AuQedNeGv445L5OknJePm0pL5MVjJefyy5P9OyfxP+D9uG
/O1GbD/JJfe7f8n8nps3P9T5Af8FzwIf4HiH/3R8loznISXzox/nd3e+wj/D
v5bU74El8+OPkvE+Q8l4eKVkfP/B5//L8Vkyvv9s6/VrJfPtr7b+flMyf6cq
Gd/fl9TXviX14buS+dynpH69yH4w/Bt/f4DzpaT+TV0yH54sqe/ftv3jq5Lx
OmXJeH6hZLz/wvlnrFfw3PDP8NPWC3iI8w8e6XyHZ4D/Bx9ovYOng3+C94fn
5/rs7XwqqY8LwPtYr0vq4XzwXs6fkvm3CDwSXrukPs7T9puVS+rZgvC+1v+S
+roofKD1p6Qez9v2w1VK6slybf3drGT+f8Z+Ebg3+yPhz9kvCk/O/qj2+i4D
92N/jPOf/crwYPbHt/d3GDyI/XHWQ95/Q3jekv71Pvv54AnYHw6PYz87XNkf
Cn/Afn54QvZHwF+wXwyegv3R8Jvs57CMsT+sff/trb8lemBoWy83LqmvS7f1
fqOS+j2W/TTwD1z/faxv8LTwj/C+7f3vC38H72W/gPvB38N7w4/AU8BfwLtZ
T3j/l+Cn4cfhZzjfH/4PvB/8GDwV/BW8h7+H1z8G3w/PxUTf0jHZ/v3i8Ou8
fla4YX8w5+Zs9cUK8MXw4vDB9oeSerkYfJD9o6T/L9PW601K6vcc8C7WW/gi
eHZ4Z/sXfCE8W6ufloUvgN9gPxtc2B/Szu8d4WXg872/NeN95ib18acSfTFd
iR74paTfDijRL6tao+FbeP2M/L4F4LPgk+FJ4PXgx+EH4Lnhda2R8L3wnPA6
8MPwPfAc8IrWRPhaeCC8pjURvhOeFV7DmgzfAc8CrwU/CN8FzwavAN8MXwMP
gIdZQ+Eb4cHwEHg7eDj8u7+fbX94d7jh/Mzd1DP1nYV6f67HfRyeyu99jHMr
s90F38T5IZxfzZ4F3wrPBK9kjYdvgAfBq9gz4JvhGeC14Yfgu+HZ4eXhm+Cr
4enh5eAb4avg6eAl4CvhC+Gp4YHw1vY/+DeOB7Bt5XiAf+V4erYtnR/wLxz/
wPcfYH1s69eSbFfBF8F9eL/+8Bad9AR7w4+8fqD1ta1/S7FdDV8M9+X1S8PX
wJfA/eCh8LXwpfA08KLwRfDZ8BTwIvCF8Fnw5PCy8A3wlXB/eDC8Lbw5/D/r
G9vZ8CnwpJxfGD7X6w/3gheCz4FHw5PBi8OXwOfCU8GLwRfD58BTwoPgbax/
8H85nrWbfrYHXDg/Qzf1Rf39h9eC338ZPJL7/SA8HL4UPgB+AN4Bvg4+HH4Y
3g2+FT4OfsSxA98GHw8/6r2AL4cPhB+Ch7X6d0v4VniVVt9vDd8OP1HiX77h
+zwFl5r7ORv//ylca+737CV6SzEw3Plaomf/KvE3M5Xo/T9L/MeMJfp35Va/
bwXfBo9Xc/3nKvETTc14mKXEv/SsmS9zl+jrbs34m6NEH/aoub5zlviPn0v8
yfQl/mPNVl+PgO+EN4TP8/rD91qvutEb+/N7u9yPueBj4cPgnvD88OhO9PnE
8LzwyfAx8ITwfPAp8LHwRPCc8DHwofB48IzwCK93E/0yN9txnfiP8Tk/B3xY
J36hB/ySOpftEvutPYvv+4jjq6T+r9P6p53he+C1Wz29E3w3vBF8PrwnfB+8
VusHdoTvcm573+DPrSElelI/+x6f+YRzS51k/7FmeL6t51tz/hRrR8n8/LSJ
/r+nrf/bwKO70Qv+nmEl9euhVn/szPmzu+npelM11Pdtz3bsOwfstfbo+Zto
gnFtj160iSawd49f4hWX7kQr2+P1akM76f328GWbaAZ7e68Sr6sm/bTt6Qs0
6flvtppi7SYa4rdWgyzTRGN83moMswA1pdrjwVYv7cT/ndWNJp+8SY9Xq6vx
ezXRAGp/NXenSU9Xi6u5SxPNrhbXY0zaRAPoPfQYEzfRCHoPxbneT02qNlWD
d5v0fLW5HsAswnt4d9sT/b16xF9ajTW0ZbXXSXz/96z36h7uz4nwu9Z7dZj9
q6b+bV4yftWDjte1SurVwjXzY82SfrVkzXxYH649ooecLxuWjOelaubHBiXz
y3pmf92/pF5uXtMv9yupl5vV9KN9S+r3SjX1dnjJfLR+WY+3KJk/zmfr/+4l
9XmDmv6wW0l9Xr2mH2xXMl+tB9brHUrm8wnwO/YDeBH7e0393r5kPutx/uzE
U+l9VqvpJ9tyPAHnN63pl/uU9Jf1a/rVriX9Y72afme+pB7ZpKb/7A33ho+H
34avcFzDh8Av2L9K9Iie7PdOPKte7aua+XtDiZ6bme32JprkAM5NC1/R5DN2
1JvD15V4ggdLMqZ9m2Q8Zk9mPEc18chmPyd004utwdZiPe2cTTyTXvcO+Az4
AnhVa4/9q0kG1afGU1tDSvt99XyLN/HIesEFOf+ovd0aWnMNzmxyTb02x9oj
4LXhH9oxY222pjiWHFPWysM7GWuOuf2a1HDHop5xhyYaSi/pPTq6yRj13uk5
9Z72tL41ntH/81gvaY9bpYlntfepoa+3F3WirfWM0zfpkXrJ++HL4evhjTk/
Br6tiWYbAf/aJLvQ0+nt9GyzNfEoejk92+xNPIleTs84KzxvJ15SD99PLdeJ
t/+siTayBluL9ehTNvEEevepOP7Se8V2LfwM/FUn3/+8Es0/L//3j068gB5x
xiaeR++oRxnSRKPrXfQU/Zt4TL2GPWK8JhmE9UaNMH5bf55oNeojar1OtOt7
bf0Z1tbPr2v6i2PEsaLnGeQ16sQL6YnMPvXIeiUzjWmbeF6zDj3RNE08tl5J
DzRDE4+nN9JzDW7icca2/VP/c06J3j8Ifg4+s0SvHww/D59Voof1vPZma561
Tw9kdqRG0hvpgcxC1TB6Iz2vWaSaSi+sxzaLHNWJ99Zjmz2aGem9zWjNavVc
U6lF1HBNPPWMNZ7a7FLPrNfWk5uN6Tn16mbAZsH23ClqPPkB7fyw9+qh1JZq
TL2VE3FQez2832YcA9rra/Zh5mT2pecyi3quvf6ztP1GDXlfEw2ittTj7d3E
E+r99Pgj2/mo99fz7dUkE9AL6in3aeIp9Zp6wD2bZAx6w3PhXZtkEkNqNIZa
Q884WY2mUFuoQXrXZG5mx2oeszg9qFmiGkdvqic3+1Tz6dXVmKc10XxqTzXu
6U00ktpXDXVBE42stlIjquXtEfYKNdN5TTS4WkqNdX4Tja72MtMw21STmXWo
qfUK9ih7lZmA2nF0W6/UnHoVe5a9yzUD1w7MWKa118G7NNFMg2oy/hFtPbM+
qaHUUmqQATUeeea2vpgtqknUJmYw09V4iOuaeAS9hZ5Br6hn1EvoCa5v4hn0
CmrGy5p4DLWknkMvbM+2d+vJ+rb1yHqmp+vT1iOzKutdv3Z+Wr+2q/Gfh5T4
Nz/Tzz6sxK/tW5O/n1ziT7ev8fOHlvi7bWv87sElfnGfmvz9pBL/u1ONPz+y
xM/Z8+yFo0p64dY1/vugEv9qTbI2jS7xy0fCr8EXluT5R8GvwxeVrAccDb8B
XwzP3yM91t51Wknv3Q8eC59Skj8cCD8Ln1GSF4y0Z8Cnl+QFe9bkESeU+PMj
4Ffg80vyiePgt+DL4YV7pEeO68QL2DsX6JH6ag+VR3H+Vc5fULI+cSz8JnwZ
vFCPaLY92vlmPdu7Zj3jxJI8Qv84Bj62JO8wY3HtxQzb7MXM02zfzNos1IzS
7N3M2uxSj+Vaj/pa72XGafa/dCfZp5muazdmxGa9ZtqztP1N/W5mqp4f2kmW
Oq7V88t04g/MlF2LMKM1a1b/z9r2T/W+GbtrE+pjs3f1vv3NjPFvvduN99KD
TcJv3aUm/zi6JO/YtSb/OaYkr3GNz7U+M6mJOLdzTb5zVEkeosc2O/Kaee30
QK6F9G77sZn3PG1/1W+MbfV537af6eHM4uxJ9ib7ufpOfTmm1dS7t/VbrW1G
Nl/7e95oNeE97eerFf1OZjVqZr+rv8ksR03tb/U3XdPOX3/r8G705dgm+t85
YxaihnUu+X9j2++nV1ATP9mkR6qV9+Tvp4NnhB/n+5xboy3VIGoRx9C1bb3x
+mzWTb/1PXwv5/ylbX2xFjgnzZbUyM5Va4RZjxre2uGcNytSU1sLnDNmW85p
55Ke4Zy2Xusl9BTntvXaerV5N9/9qSb+xppySVt/rTWbdjNfn2iivw+C5+B4
Af7v5VZje7/MYNXeozi/GLws/GGJJlRbfcr2ZU0GZha2NdwfvqSm99qD1TqX
1WgVNZZa64IabaOmUducX1M7raFqPzM0s7StfE3NNZ+a46+b3IsLa7SZGkmt
dGmNdlMDqYX0JGZfeiC9inPeLNKaai3wN3ovf2/y26+q0aJqVLXqrZz/sBPN
9mmNn1BXqi8/g09m+7oTT+L1Oa/m3Mdsn3O8Pe/Rs8l3vqvEg0zayXv4XpfX
aE81nFruCnjOTjSp2lQPaJZ3cSfe8MqauW8NUCtfVPP91ahqVXuC2ag9x15h
DXdt1xptbT+7xqvr0fXqp9Z4cT26Xv26mmzADMIs4swab64n15ufVePt9ex6
91Nq5q5zWK82usbr6xn1jtfDi3eSOZg9bNJNP3i8SX0/o6Y2WCP08l6jnvC7
Ta7d6TXXTs+v99eT6Y1mLfFqt7ZspmK2ck1NrbAGqvX1UI7VaUq81e2c36iT
zMPs47aa7MOMw6zj2prsxZpj7TmtJmswszC7uKGmNlujzV427qYfPtak39xY
83lmNmY3zhHn0kQlc+cWzq/SSUZjVuOcc+5ZI/TCXhOvjXPSXuicde5as8wq
7Hn2QvMxe6Gf6Wd7Te199ugxTXq8vdue7lq9GsNeb490LV8NYe+057o2YE+0
F+v3XDuxR2/RjSYxO1eTqFX0ENb/R9r6bc+/pdVTaoGNuvlse7Tf76Ya76MH
Mou5uSabMmMyazqnxruZIZkl6UHM5u1JehMzNPWf+lB9r4Zw7UHNo7bQw7j2
YE/T26g5XKuwZ6lF1DjqPf2o2ufiGm2vxtdrXV1zf/SgetENu5krXkOvpZmF
aylmQmYZZrg+y+CaptmuGaxr9a7RmM2aeZidm9mYhbxfoy3VoGpR12Bdm3dN
1bXZ12u0uBpdre6ars8+uCbqWu8bNVmDml3t7jMsPstixjx5TQbt2r9ryGbT
Zj5m8+pvsyAzaZ+1MG80q36rRuur4dXyZtQ+m+Iartm1mbNzyTnlXHuEbb9O
PJpezYzZZ13MmM2efYbCZynMuHvVeH6zgCNKsgAzK7Nk/aRZ1kc1Y+fvMdRN
JmWWbEZmVmXmZnZsxmYWZ8alH9Vf6idcg3SuOmfNS82ozJ71F2ZXZlr6Df2P
/uXDmnvvGFD7m6H7rIp5ptm6mbvP8rimZhbvMyI+K+Ka+aReP7ZHO/GAekGf
MfFZE9fgJ6zJ3PQ7+iv9zKM1WlPNqRd9reacr9EbPVbjDfWAesEnaryhnlJv
aaZkFrVNSdbkM1I+KzWc/5uSc+/VaAs1ht7kyZosS4+p13yzxpvp2fRuD9d4
Sz2V3mrjdjzt1WY3rmG5lrUN/zd9zTNaPqu1BTw1fGeNFlRDqiXfbe+vHkmv
9E6NllHT6O3G1WgPNYhe8gP49k48ll7rz1aP+p7687fZrujEg+pF/14DavJM
1kw1a4SuFZqPz1CzRuValWsig+ExNdmBHlov7RqTa02uqQxUL9R4dT253vz/
2Ai/EA==
          "]], Polygon3DBox[CompressedData["
1:eJwt2HncVdMaAODTOacSlRIZCjdJV6lopPFqRPOcRprRgAahgdusCQ1kqNwG
uSXuTZGhgUpo0mQoco3XWBpVKs/7298f72+t91nvPud8e++19tpfie4DWw1I
p1Kpz0VusTCTSh3NlUoVFVfItxislE2l7tLOZvNYczXXs95sFpspVsjbiNns
A/l2daPUVWX3snlsMWvP2rM5bCvbw8awiqwve5rNZc1YW/Yc28x2sX+yCuxO
9gSbzW5h7djzbAvbzUazZeJcVpZVZt/o/4sdkhcSxdiHrLxj79A+zp5mDdX8
V1zKqrN67JD+yyyftgyrxL7Wr+zYOHlz2CLWTs0NrA97is1hTdk8cVCeX1zK
Nhl/gf0uLyguYx+w/7Ai8bmsJvtZ/xVWWFuRVWc/6r/KLojrwmqwn/TL+d5u
2mnsKdZITRU2kM1lL7K2bJE4Ed8pSrIdxhewI/ILxeVsM7vZsY/Gb2KrWF81
pdmt7EH2CKvArhRXiBLGasX105aQ/01cpV877httKXGz/n2OfdCx1xq/XBSP
WmM145xpi8kvi8/VrxH3l/YacYv+MMc+IF6QlxHt2Xj5OLFUfl5cc3GxfqU4
F9pGYqL+KjVrfe/AuLbikvjdxqobm6m9XNykf5e6vmKG/CI1F4pi+tWMTdf+
XbTQf0TNBJ93o/FS4uoIY/8w9qy2tXhaf5O6bepGGr+WtWSPsomsWlxbUSh+
k7EqcV9ri8T1jfOgX5U9qW0oJui/4dg1jh1g/HxRMP4WY5XjHo7vF4/EPaLu
DXV9jJdlHdgENo3VZi+JXOwqVoZ9pl9f3TjtSvYO66emNhvJlrGVrCerxUbE
nIh5z3qxm9hQtoi9zDqzBmw8e52tZv1ZPTaWrWBvs3tYHTYq7nX2OuvN5ovD
8gtEcfaR8brqxmhfY8vFOvl14nY2Uf64ujqOKxn3XrTG6hh7Rvui/GTMe3G1
up28Bh+mXcxeYV3VLBEZdjW7ju3V/zdLa0uysrFW6t/o2CHahWxB/C1xD4sH
2UvyV9V1c1w1dl/Md/YS68CqswfYi2wZ68IWi1Pxt4pSbJfxpSyrLcXKsX36
tzt2nnY7+5SNU7NFNGf3smGsqryVuqfY+2wrG8HWZpL5eCqbc37Emkwyb09m
kzkbc3ddJjlvf2aT+zru79/EVz7rHJE35oixdzPJ/X465misD2JVJrmPf88m
93Dcy/vFIDbDcc/7LZ3kv4rP5CflhcQP8jcyyX18MJvMiZgbR8UZdeVFFXW7
jR9jZ+UVRFW2hx1hp+M8xXUTI3zGIXZM/5o4Xt02dYfZcXnpOJ5tZQfYD/KL
xZVsbdyzmWQNOZBN5ljMtdWZZJ06kU3WvFj78umXZK0d28mxf+q/mUnm7aFs
sn7EOnKR/vXsDnV91OWNc8PKs66sVzx/Y71hFVg31pvlibWAlWNdWE+WZQVY
adaedWNn9d/JJGvmH9lkXY319bxYe1lbdV3UndbPE79f24y1ZUf1z41rrW3D
OrNT+m9lknXvsLGisa6Kc+I+YS3UtVd3XD9/XH9tO9aVndHPHWuqtilrw47o
52VXapuzduyYfsFYU7Ud2B0s5TtWiorst2yynse6/rs4ENcnrqeyjbHPYI21
/dhgVlG+WTRjA+NZwarIPxJN2QA2lFWWb4z1ifVmA1k5+S7RmY1gY1k9+TbR
mg2Oe4rVkO8RXdkoNp41kG8XbdgQNpLVlH8omrD+bAirJH9fNGR92L2svHyn
6MSGszGsrnyTuI3dwwaxG+Q7REf2MBvNbpZvjbnOBrHhrLr8Y9GWDWWjWC35
wZjDsaeLZ3x8pnO7j/VTNyX2cOpay/eKe9jkeAayVvGdal9gH7PP2Hj2Wqyx
rB5rzE7qv8fqanuwfqxMzrqxX55b5BEbfdYKdoO6VvKO6vLJ18ezgfVk/VlZ
+ReiP5vKZrE28g2iPuvFBrDrYh0RPdlYNpU1kX8p7o9nNnuOdZR/Lu5mk9h0
1jLnno57u7jfdWM6ee7vlnfRHxl7C3X15Z+I7mw0m8xuk38qerAxbAprHOuE
469lt8V5ET9kEyvDOspvj+NjfRNlWSd5d8emHTtT/E+eL4Ktij0R+0ZeQJzH
3mJz2M/ytLiIrWdz2S/yrCjKNrDn2I/yM/Ii4t3YI8R5YKeSqZZazp7X+Yml
xIWa92Kd8vsWaz9l+9kUNbPE1/E7xLnsTeMFWP44h9lkzk7VzojzryYTzwp1
r8cehu2Tn00l7xkr4trENWa54t5gK2P/E/eg/HSsc+K1WAvj+a39hH/JJmeS
d4F4J3g2npPizthvsW/VnC/yG3s7nv3se3kRUZCtZreonax9m61ng9XcyqbE
Gso2sEEx/9hUtjruWzaEtWAz2Qa2mT3MWrJZbCPbwobHfGbz2c5cybvVBDZb
fCcvHNeTvWO8sbpp2jXsfTY01gz2OFvLNrEHYr1hi9ge9gWbFPcoW8h2s33s
sVi/2AK2i+1lE2M9ZNNjfrJ342+WN4/rxNbLP1L3UKyR7Am2jn3AhmWSvXej
dLInjr3xWfnJWJPTyXM2nrc7ssnebHQ62QvFnqiYi/yHujysqry2z/si9h7x
7NLWYvXZt7HPYAW1tVkD9l3sKWIuaeuwhuz7dHJDFNU2ZM2kv+kfV5dbW4XV
Yl/q51J3sbYRa84O6KfZJXHtWQt2MK5/Jtn/H88m7xzx7lE49pSss7oeMUdY
Np6nrAlrzQ7rZ+JdJZ3M8ZjrE3PeIWINOaI9Ko7lnKv8rKaaGrG+sxMsL6sm
r+Pz9uufjT2CtgFryn7RPxP7AW191oT9qv9sJnkvj/fzJfL/x5ohHo75zhYY
656z3v+aK9mrxZ5tk+/9mg2P+R7XSF2PnHvjyXSyn459dWnX7Xv+TDz/5e+p
e1T+lXgovp/NZ3dmknewdunknSzezTK5k33YnznPmHjWbFbzTcxXdfPlSx17
dyb5/0GvdPLuFu9w+XIne+rB6eT/CfF/hcKsA5vLtsk/cexYxy4XJVjdOPfs
hP53bFKsBfF3sPtjLRCPsSVsObsvk1y3y9LJtYhrslfeXbzMlomv1E1V9xdg
t/86
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0jkvRFEYgOFrX8cS0RINUVCKglIUVCIKOqKgIBEFpULodPwCWiL0Ejr7
MvY1ImJr7Gt4TqJ45zmZezLnO5lb0t7b1JMQRdGwXhXWj7rUbGIU5XGBxVxn
JU9Zywc28pttzE6Kopi6rcs5yGqOsp4TbOEUOznPfi7xjtd817aeda9lA+1w
hXGucpdr3AszcZ8bPOAmt3QYfodH3OEx4zzhLk+5xzPu85zT7nHDD13oJdxR
Y2bb4hAX2cc5dnCSzRxnHUdYxQGWsVRd1hls5aczGsJ9WcNjVoR7sYg39l3x
Tbl6CntVaMYcFjDGfGaHPcxijJnMYkY4j+lMZYrSrJOYGv7j8B1/layf8Exf
MkY04+P2/334A8H3Su0=
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{690, 999, 1005, 1341, 689, 1123, 912, 691, 1124, 913, 692, 
       1125, 914, 693, 1126, 915, 694, 1127, 916, 695, 1128, 1006, 1222, 696, 
       1129, 917, 697, 1130, 918, 698, 1131, 919, 699, 1132, 920, 700, 1133, 
       921, 701, 1134, 922, 702, 1342, 1000, 923, 1001}], 
      Line3DBox[{704, 1007, 1223, 703, 488, 705, 1135, 924, 706, 1136, 925, 
       707, 1137, 926, 708, 1138, 927, 709, 1139, 1008, 1224, 710, 1009, 1225,
        711, 1140, 928, 712, 1141, 929, 713, 1142, 930, 714, 1143, 931, 715, 
       1144, 932, 716, 1145, 933, 717}], 
      Line3DBox[{719, 1010, 1226, 718, 1011, 1227, 720, 504, 721, 1146, 934, 
       722, 1147, 935, 723, 1148, 936, 724, 1149, 1012, 1228, 725, 1013, 1229,
        726, 1014, 1230, 727, 512, 728, 1150, 937, 729, 1151, 938, 730, 1152, 
       939, 731, 1153, 940, 732}], 
      Line3DBox[{734, 1015, 1231, 733, 1016, 1232, 735, 1017, 1233, 736, 520, 
       737, 1154, 941, 738, 1155, 942, 739, 1156, 1018, 1234, 740, 1019, 1235,
        741, 1020, 1236, 742, 1021, 1237, 743, 528, 744, 1157, 943, 745, 1158,
        944, 746, 1159, 945, 747}], 
      Line3DBox[{749, 1022, 1238, 748, 1023, 1239, 750, 1024, 1240, 751, 1025,
        1241, 752, 1026, 1242, 753, 1160, 946, 754, 1161, 1027, 1243, 755, 
       1028, 1244, 756, 1029, 1245, 757, 1030, 1246, 758, 1031, 1247, 759, 
       1032, 1248, 760, 1162, 947, 761, 1163, 948, 762}], 
      Line3DBox[{764, 1033, 1249, 763, 1034, 1250, 765, 1035, 1251, 766, 1036,
        1252, 767, 1037, 1253, 768, 1038, 1254, 769, 1164, 1039, 1255, 770, 
       1040, 1256, 771, 1041, 1257, 772, 1042, 1258, 773, 1043, 1259, 774, 
       1044, 1260, 775, 1045, 1261, 776, 1165, 949, 777}], 
      Line3DBox[{781, 1166, 950, 779, 1167, 951, 783, 1168, 952, 785, 1169, 
       953, 787, 1170, 954, 789, 1171, 955, 791, 1172, 1053, 1270, 793, 1173, 
       956, 795, 1174, 957, 797, 1175, 958, 799, 1176, 959, 801, 1177, 960, 
       803, 1178, 961, 805, 1179, 962, 807}], 
      Line3DBox[{806, 1277, 1060, 804, 1276, 1059, 802, 1275, 1058, 800, 1274,
        1057, 798, 1273, 1056, 796, 1272, 1055, 794, 1271, 1054, 792, 1269, 
       1268, 1052, 790, 1267, 1051, 788, 1266, 1050, 786, 1265, 1049, 784, 
       1264, 1048, 782, 1263, 1047, 778, 1262, 1046, 780}], 
      Line3DBox[{809, 1061, 1278, 808, 1180, 963, 810, 1181, 964, 811, 1182, 
       965, 812, 1183, 966, 813, 1184, 967, 814, 1185, 1062, 1279, 815, 1063, 
       1280, 816, 1186, 968, 817, 1187, 969, 818, 1188, 970, 819, 1189, 971, 
       820, 1190, 972, 821, 1191, 973, 822}], 
      Line3DBox[{824, 1064, 1281, 823, 1065, 1282, 825, 1192, 974, 826, 1193, 
       975, 827, 1194, 976, 828, 1195, 977, 829, 1196, 1066, 1283, 830, 1067, 
       1284, 831, 1068, 1285, 832, 1197, 978, 833, 1198, 979, 834, 1199, 980, 
       835, 1200, 981, 836, 1201, 982, 837}], 
      Line3DBox[{839, 1069, 1286, 838, 1070, 1287, 840, 1071, 1288, 841, 1202,
        983, 842, 1203, 984, 843, 1204, 985, 844, 1205, 1072, 1289, 845, 1073,
        1290, 846, 1074, 1291, 847, 1075, 1292, 848, 1206, 986, 849, 1207, 
       987, 850, 1208, 988, 851, 1209, 989, 852}], 
      Line3DBox[{854, 1076, 1293, 853, 1077, 1294, 855, 1078, 1295, 856, 1079,
        1296, 857, 1210, 990, 858, 1211, 991, 859, 1212, 1080, 1297, 860, 
       1081, 1298, 861, 1082, 1299, 862, 1083, 1300, 863, 1084, 1301, 864, 
       1213, 992, 865, 1214, 993, 866, 1215, 994, 867}], 
      Line3DBox[{869, 1085, 1302, 868, 1086, 1303, 870, 1087, 1304, 871, 1088,
        1305, 872, 1089, 1306, 873, 1216, 995, 874, 1217, 1090, 1307, 875, 
       1091, 1308, 876, 1092, 1309, 877, 1093, 1310, 878, 1094, 1311, 879, 
       1095, 1312, 880, 1218, 996, 881, 1219, 997, 882}], 
      Line3DBox[{884, 1096, 1313, 883, 1097, 1314, 885, 1098, 1315, 886, 1099,
        1316, 887, 1100, 1317, 888, 1101, 1318, 889, 1220, 1102, 1319, 890, 
       1103, 1320, 891, 1104, 1321, 892, 1105, 1322, 893, 1106, 1323, 894, 
       1107, 1324, 895, 1108, 1325, 896, 1221, 998, 897}], 
      Line3DBox[{911, 1004, 1340, 1122, 910, 1339, 1120, 909, 1338, 1119, 908,
        1337, 1118, 907, 1336, 1117, 906, 1335, 1116, 905, 1334, 1115, 904, 
       1333, 1332, 1114, 903, 1331, 1113, 902, 1330, 1112, 901, 1329, 1111, 
       900, 1328, 1110, 899, 1327, 1109, 898, 1121, 1326, 1002, 1003}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{251, 474, 1123, 252, 488, 280, 1227, 503, 295, 1232, 518, 
       310, 1239, 533, 325, 1250, 548, 340, 1263, 563, 1167, 355, 578, 1180, 
       370, 1282, 593, 385, 1287, 608, 400, 1294, 623, 415, 1303, 638, 430, 
       1314, 653, 445, 1327, 668, 460}], 
      Line3DBox[{253, 475, 1124, 254, 489, 1135, 281, 504, 296, 1233, 519, 
       311, 1240, 534, 326, 1251, 549, 341, 1264, 564, 1168, 356, 579, 1181, 
       371, 594, 1192, 386, 1288, 609, 401, 1295, 624, 416, 1304, 639, 431, 
       1315, 654, 446, 1328, 669, 461}], 
      Line3DBox[{255, 476, 1125, 256, 490, 1136, 282, 505, 1146, 297, 520, 
       312, 1241, 535, 327, 1252, 550, 342, 1265, 565, 1169, 357, 580, 1182, 
       372, 595, 1193, 387, 610, 1202, 402, 1296, 625, 417, 1305, 640, 432, 
       1316, 655, 447, 1329, 670, 462}], 
      Line3DBox[{257, 477, 1126, 258, 491, 1137, 283, 506, 1147, 298, 521, 
       1154, 313, 1242, 536, 328, 1253, 551, 343, 1266, 566, 1170, 358, 581, 
       1183, 373, 596, 1194, 388, 611, 1203, 403, 626, 1210, 418, 1306, 641, 
       433, 1317, 656, 448, 1330, 671, 463}], 
      Line3DBox[{259, 478, 1127, 260, 492, 1138, 284, 507, 1148, 299, 522, 
       1155, 314, 537, 1160, 329, 1254, 552, 344, 1267, 567, 1171, 359, 582, 
       1184, 374, 597, 1195, 389, 612, 1204, 404, 627, 1211, 419, 642, 1216, 
       434, 1318, 657, 449, 1331, 672, 464}], 
      Line3DBox[{261, 479, 1128, 263, 493, 1139, 285, 508, 1149, 300, 523, 
       1156, 315, 538, 1161, 330, 553, 1164, 345, 1268, 568, 1172, 360, 583, 
       1185, 375, 598, 1196, 390, 613, 1205, 405, 628, 1212, 420, 643, 1217, 
       435, 658, 1220, 450, 1332, 673, 465}], 
      Line3DBox[{265, 481, 1129, 266, 1225, 495, 287, 1229, 510, 302, 1235, 
       525, 317, 1244, 540, 332, 1256, 555, 347, 1271, 570, 1173, 362, 1280, 
       585, 377, 1284, 600, 392, 1290, 615, 407, 1298, 630, 422, 1308, 645, 
       437, 1320, 660, 452, 1334, 675, 467}], 
      Line3DBox[{267, 482, 1130, 268, 496, 1140, 288, 1230, 511, 303, 1236, 
       526, 318, 1245, 541, 333, 1257, 556, 348, 1272, 571, 1174, 363, 586, 
       1186, 378, 1285, 601, 393, 1291, 616, 408, 1299, 631, 423, 1309, 646, 
       438, 1321, 661, 453, 1335, 676, 468}], 
      Line3DBox[{269, 483, 1131, 270, 497, 1141, 289, 512, 304, 1237, 527, 
       319, 1246, 542, 334, 1258, 557, 349, 1273, 572, 1175, 364, 587, 1187, 
       379, 602, 1197, 394, 1292, 617, 409, 1300, 632, 424, 1310, 647, 439, 
       1322, 662, 454, 1336, 677, 469}], 
      Line3DBox[{271, 484, 1132, 272, 498, 1142, 290, 513, 1150, 305, 528, 
       320, 1247, 543, 335, 1259, 558, 350, 1274, 573, 1176, 365, 588, 1188, 
       380, 603, 1198, 395, 618, 1206, 410, 1301, 633, 425, 1311, 648, 440, 
       1323, 663, 455, 1337, 678, 470}], 
      Line3DBox[{273, 485, 1133, 274, 499, 1143, 291, 514, 1151, 306, 529, 
       1157, 321, 1248, 544, 336, 1260, 559, 351, 1275, 574, 1177, 366, 589, 
       1189, 381, 604, 1199, 396, 619, 1207, 411, 634, 1213, 426, 1312, 649, 
       441, 1324, 664, 456, 1338, 679, 471}], 
      Line3DBox[{275, 486, 1134, 276, 500, 1144, 292, 515, 1152, 307, 530, 
       1158, 322, 545, 1162, 337, 1261, 560, 352, 1276, 575, 1178, 367, 590, 
       1190, 382, 605, 1200, 397, 620, 1208, 412, 635, 1214, 427, 650, 1218, 
       442, 1325, 665, 457, 1339, 680, 472}], 
      Line3DBox[{277, 682, 1342, 683, 278, 501, 1145, 293, 516, 1153, 308, 
       531, 1159, 323, 546, 1163, 338, 561, 1165, 353, 1277, 576, 1179, 368, 
       591, 1191, 383, 606, 1201, 398, 621, 1209, 413, 636, 1215, 428, 651, 
       1219, 443, 666, 1221, 458, 1340, 685, 686, 687}], 
      Line3DBox[{459, 667, 684, 1326, 444, 652, 1313, 429, 637, 1302, 414, 
       622, 1293, 399, 607, 1286, 384, 592, 1281, 369, 577, 1278, 354, 1166, 
       562, 1262, 339, 547, 1249, 324, 532, 1238, 309, 517, 1231, 294, 502, 
       1226, 279, 487, 1223, 250, 473, 1341, 681, 688}], 
      Line3DBox[{466, 674, 1333, 451, 659, 1319, 436, 644, 1307, 421, 629, 
       1297, 406, 614, 1289, 391, 599, 1283, 376, 584, 1279, 361, 569, 1270, 
       1269, 346, 554, 1255, 331, 539, 1243, 316, 524, 1234, 301, 509, 1228, 
       286, 494, 1224, 264, 480, 1222, 262}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
rYfE9Y24v3/v6/8HTiWdSQ==
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{231.2765846221811, 194.66666666666666`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-1, 1}, {0, 1}, {0., 0.49999992857143116`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.8571596194486555, -2.4914492072203958`, 2.1231952888576933`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.707413392900618*^9}]
}, Open  ]],

Cell["\<\
The solution manual calls attention to the surface as a parabolic cylinder.\
\>", "Text",
 CellChangeTimes->{{3.707413431155203*^9, 3.7074134511853123`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fF", "=", 
  RowBox[{"{", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "z"}]], ",", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "z"}]], 
     RowBox[{"Cos", "[", "y", "]"}]}], ",", 
    RowBox[{
     SuperscriptBox["e", 
      RowBox[{"-", "z"}]], 
     RowBox[{"Sin", "[", "y", "]"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.707413477715884*^9, 3.70741354987964*^9}, {
  3.707413948488777*^9, 3.707413964200014*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", "z"}]], ",", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "z"}]], " ", 
    RowBox[{"Cos", "[", "y", "]"}]}], ",", 
   RowBox[{
    SuperscriptBox["e", 
     RowBox[{"-", "z"}]], " ", 
    RowBox[{"Sin", "[", "y", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.707413967804278*^9}]
}, Open  ]],

Cell["\<\
Finding the Curl is easy, unless something goes wrong. I had some doubts, as \
this didn\[CloseCurlyQuote]t work smoothly the first time.\
\>", "Text",
 CellChangeTimes->{{3.70741654216943*^9, 3.707416575048441*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"curly", "=", 
  RowBox[{"Curl", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z"}]], ",", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "z"}]], 
       RowBox[{"Cos", "[", "y", "]"}]}], ",", 
      RowBox[{
       SuperscriptBox["e", 
        RowBox[{"-", "z"}]], 
       RowBox[{"Sin", "[", "y", "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.70741401709902*^9, 3.707414036181673*^9}, {
  3.707414272495553*^9, 3.707414275157784*^9}, {3.707414369356213*^9, 
  3.707414442553514*^9}, {3.707414848908214*^9, 3.7074148795370092`*^9}, {
  3.7074149458250513`*^9, 3.707414950455051*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["e", 
      RowBox[{"-", "z"}]], " ", 
     RowBox[{"Cos", "[", "y", "]"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "z"}]], " ", 
     RowBox[{"Cos", "[", "y", "]"}]}]}], ",", 
   RowBox[{"-", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "z"}]]}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7074140379184437`*^9, 3.707414276808655*^9, 3.7074144439629927`*^9, {
   3.70741485230332*^9, 3.707414881749861*^9}, 3.7074149517425013`*^9}]
}, Open  ]],

Cell["Below, eliminating the z expression.", "Text",
 CellChangeTimes->{{3.707416928173627*^9, 3.707416943923903*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"curlyz", "=", 
  RowBox[{"curly", "/.", 
   RowBox[{"z", "\[Rule]", 
    FractionBox[
     SuperscriptBox["y", "2"], "2"]}]}]}]], "Input",
 CellChangeTimes->{{3.707415028231243*^9, 3.707415052091078*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["e", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["y", "2"], "2"]}]], " ", 
     RowBox[{"Cos", "[", "y", "]"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["y", "2"], "2"]}]], " ", 
     RowBox[{"Cos", "[", "y", "]"}]}]}], ",", 
   RowBox[{"-", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      FractionBox[
       SuperscriptBox["y", "2"], "2"]}]]}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.707415207863167*^9}]
}, Open  ]],

Cell[TextData[Cell[BoxData[
 RowBox[{"Below", ",", " ", 
  RowBox[{
  "Mathematica", "  ", "was", " ", "hesitant", " ", "to", " ", "combine", " ",
    "the", " ", "two", " ", "instances", " ", "of", " ", 
   SuperscriptBox["e", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["y", "2"], "2"]}]], " ", 
   RowBox[{
    RowBox[{"Cos", "[", "y", "]"}], "."}]}]}]]]], "Text",
 CellChangeTimes->{{3.7074166541475677`*^9, 3.7074166675069323`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"curlyzz", "=", 
  RowBox[{"curlyz", "/.", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["e", 
       RowBox[{"-", 
        FractionBox[
         SuperscriptBox["y", "2"], "2"]}]], " ", 
      RowBox[{"Cos", "[", "y", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         SuperscriptBox["y", "2"], "2"]}]], " ", 
      RowBox[{"Cos", "[", "y", "]"}]}]}], "\[Rule]", 
    RowBox[{"2", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["y", "2"], "2"]}]], " ", 
     RowBox[{"Cos", "[", "y", "]"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.7074152201303596`*^9, 3.7074152517566023`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"2", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      FractionBox[
       SuperscriptBox["y", "2"], "2"]}]], " ", 
    RowBox[{"Cos", "[", "y", "]"}]}], ",", 
   RowBox[{"-", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      FractionBox[
       SuperscriptBox["y", "2"], "2"]}]]}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.707415254468288*^9}]
}, Open  ]],

Cell["\<\
Below, writing the surface equation as the solution manual recommended.\
\>", "Text",
 CellChangeTimes->{{3.707416701029482*^9, 3.7074167253473454`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"surf", " ", "=", 
  RowBox[{"{", 
   RowBox[{"x", ",", "y", ",", 
    FractionBox[
     SuperscriptBox["y", "2"], "2"]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.707415313319995*^9, 3.707415315003766*^9}, {
  3.707415363458338*^9, 3.707415391583955*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", "y", ",", 
   FractionBox[
    SuperscriptBox["y", "2"], "2"]}], "}"}]], "Output",
 CellChangeTimes->{3.707415395201806*^9}]
}, Open  ]],

Cell["Below, finding the partials in preparation for crossing.", "Text",
 CellChangeTimes->{{3.7074167480034933`*^9, 3.707416769697721*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"surfofx", " ", "=", 
  RowBox[{"D", "[", 
   RowBox[{"surf", ",", 
    RowBox[{"{", "x", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.707415406332676*^9, 3.707415421822752*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.707415424290056*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"surfofy", " ", "=", 
  RowBox[{"D", "[", 
   RowBox[{"surf", ",", 
    RowBox[{"{", "y", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7074154478473997`*^9, 3.707415451509857*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1", ",", "y"}], "}"}]], "Output",
 CellChangeTimes->{3.707415452793932*^9}]
}, Open  ]],

Cell["Below, crossing gives the normal vector needed.", "Text",
 CellChangeTimes->{{3.707416781897196*^9, 3.7074168025047827`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"norm", "=", 
  RowBox[{"Cross", "[", 
   RowBox[{"surfofx", ",", "surfofy"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.707415500849845*^9, 3.707415516795751*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"-", "y"}], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.707415517534243*^9}]
}, Open  ]],

Cell["Below, the dot product will be the core of the integrand.", "Text",
 CellChangeTimes->{{3.707416817432075*^9, 3.707416838071272*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"integr", "=", 
  RowBox[{"curlyzz", ".", "norm"}]}]], "Input",
 CellChangeTimes->{{3.707416167820435*^9, 3.7074161801910973`*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["y", "2"], "2"]}]], " ", "y"}]], "Output",
 CellChangeTimes->{3.707416181521984*^9}]
}, Open  ]],

Cell["Below, the limits are given explicitly.", "Text",
 CellChangeTimes->{{3.7074169591470737`*^9, 3.707416970091105*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "1"], 
  RowBox[{
   SubsuperscriptBox["\[Integral]", 
    RowBox[{"-", "1"}], "1"], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         SuperscriptBox["y", "2"], "2"]}]], " ", "y"}], ")"}], 
    RowBox[{"\[DifferentialD]", "x"}], 
    RowBox[{"\[DifferentialD]", "y"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7074162440324078`*^9, 3.707416326808754*^9}, {
  3.707416423918993*^9, 3.707416424173341*^9}}],

Cell[BoxData[
 RowBox[{"2", "-", 
  FractionBox["2", 
   SqrtBox["\[ExponentialE]"]]}]], "Output",
 CellChangeTimes->{3.707416329237734*^9, 3.707416425534046*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["\<\
The above line matches the text\[CloseCurlyQuote]s answer, except that the \
text has +/- on its answer.\
\>", "Text",
 CellChangeTimes->{{3.7074164565720797`*^9, 3.707416514114102*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"5.", "  ", "F"}], "=", 
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["z", "2"], ",", 
     RowBox[{
      FractionBox["3", "2"], "x"}], ",", "0"}], "}"}]}], ",", " ", 
  RowBox[{"S", ":", " ", 
   RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", "a"}]}], ",", " ", 
  RowBox[{"0", "\[LessEqual]", "y", "\[LessEqual]", "a"}], ",", " ", 
  RowBox[{"z", "=", "1"}]}]], "Text",
 CellChangeTimes->{{3.76909011799417*^9, 3.769090196022616*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.707426830491157*^9, 3.707426832129898*^9}, 
   3.769089459860938*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"7.", "  ", "F"}], "=", 
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", "y"], ",", 
     SuperscriptBox["\[ExponentialE]", "z"], ",", 
     SuperscriptBox["\[ExponentialE]", "x"]}], "}"}]}], ",", " ", 
  RowBox[{
   RowBox[{"S", ":", " ", "z"}], "=", 
   RowBox[{
    SuperscriptBox["x", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", "2"}], ",", " ", 
      RowBox[{"0", "\[LessEqual]", "y", "\[LessEqual]", "1"}]}], 
     ")"}]}]}]}]], "Text",
 CellChangeTimes->{{3.769090212053033*^9, 3.769090309430645*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[TextData[{
 "11. Stoke\[CloseCurlyQuote]s theorem not applicable. Evaluate ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"\[ContourIntegral]", " ", 
    RowBox[{
     RowBox[{"F", ".", 
      RowBox[{"r", "'"}]}], 
     RowBox[{"\[DifferentialD]", "s"}]}]}], ",", " ", 
   RowBox[{"F", "=", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["x", "2"], "+", 
        SuperscriptBox["y", "2"]}], ")"}], 
      RowBox[{"-", "1"}]], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "y"}], ",", "x"}], "}"}]}]}], ",", " ", 
   RowBox[{
    RowBox[{"C", ":", " ", 
     RowBox[{
      SuperscriptBox["x", "2"], "+", 
      SuperscriptBox["y", "2"]}]}], "=", "1"}], ",", " ", 
   RowBox[{"z", "=", "0"}], ","}]]],
 " oriented clockwise. Why can Stoke\[CloseCurlyQuote]s theorem not be \
applied? What (false) result would it give?"
}], "Text",
 CellChangeTimes->{{3.769090331237348*^9, 3.769090342547594*^9}, {
  3.769090567357874*^9, 3.769090599310092*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[TextData[{
 StyleBox["13 - 20 Evaluation of ",
  FontWeight->"Bold"],
 Cell[BoxData[
  RowBox[{
   SubscriptBox["\[ContourIntegral]", "c"], " ", 
   RowBox[{
    RowBox[{"F", ".", 
     RowBox[{"r", "'"}]}], 
    RowBox[{"\[DifferentialD]", "s"}]}]}]],
  FontWeight->"Bold"],
 "\nCalculate this line integral by Stoke\[CloseCurlyQuote]s theorem for the \
given F and C. Assume the Cartesian coordinates to be right-handed and the \
z-component of the surface normal to be nonnegative."
}], "Text",
 CellChangeTimes->{{3.769090649500703*^9, 3.769090701200571*^9}, {
  3.769090741136052*^9, 3.769090779444502*^9}},
 Background->RGBColor[
  0.9600061036087587, 0.9600061036087587, 0.9600061036087587]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"13.", "  ", "F"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "5"}], "y"}], ",", 
     RowBox[{"4", "x"}], ",", "z"}], "}"}]}], ",", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"C", " ", "the", " ", "circle", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    SuperscriptBox["y", "2"]}], "=", "16"}], ",", " ", 
  RowBox[{"z", "=", "4"}]}]], "Text",
 CellChangeTimes->{{3.769090794789345*^9, 3.769090843273568*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"15.", "  ", "F"}], "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SuperscriptBox["y", "2"], ",", 
      SuperscriptBox["x", "2"], ",", 
      RowBox[{"z", "+", "x"}]}], "}"}], " ", "around", " ", "the", " ", 
    "triangle", " ", "with", " ", "vertices", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0"}], "}"}]}]}], ",", 
  RowBox[{"{", 
   RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
  RowBox[{"{", 
   RowBox[{"1", ",", "1", ",", "0"}], "}"}]}]], "Text",
 CellChangeTimes->{{3.769090855585724*^9, 3.7690909959782953`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"17.", "  ", "F"}], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     SuperscriptBox["z", "3"], ",", "0"}], "}"}]}], ",", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
    "C", " ", "the", " ", "boundary", " ", "curve", " ", "of", " ", "the", 
     " ", "cylinder", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    SuperscriptBox["y", "2"]}], "=", "1"}], ",", " ", 
  RowBox[{"x", "\[GreaterEqual]", "0"}], ",", " ", 
  RowBox[{"y", "\[GreaterEqual]", "0"}], ",", " ", 
  RowBox[{"0", "\[LessEqual]", "z", "\[LessEqual]", "1"}]}]], "Text",
 CellChangeTimes->{{3.769091010394346*^9, 3.769091051630097*^9}, {
  3.7690910869595127`*^9, 3.76909113151511*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"19.", " ", "F"}], "=", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     SuperscriptBox["\[ExponentialE]", "z"], ",", "0"}], "}"}]}], ",", " ", 
  RowBox[{
   RowBox[{
   "C", "  ", "the", " ", "boundary", " ", "curve", " ", "of", " ", "the", 
    " ", "portion", " ", "of", " ", "the", " ", "cone", " ", "z"}], "=", 
   SqrtBox[
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     SuperscriptBox["y", "2"]}]]}], ",", " ", 
  RowBox[{"x", "\[GreaterEqual]", "0"}], ",", " ", 
  RowBox[{"y", "\[GreaterEqual]", "0"}], ",", " ", 
  RowBox[{"0", "\[LessEqual]", "z", "\[LessEqual]", "1"}]}]], "Text",
 CellChangeTimes->{{3.769091147860154*^9, 3.769091175591354*^9}, {
   3.769091264028055*^9, 3.7690913196730957`*^9}, 3.769091354871107*^9},
 Background->RGBColor[1, 0.9, 0.8]]
},
WindowSize->{1366, 843},
WindowMargins->{{4, Automatic}, {Automatic, 3}},
Magnification:>1.5 Inherited,
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 10, \
2015)",
StyleDefinitions->"Charter1.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 89, 2, 45, "Input",
 Evaluatable->False],
Cell[492, 17, 208, 3, 51, "Text"],
Cell[703, 22, 576, 17, 117, "Text"],
Cell[1282, 41, 787, 22, 78, "Text"],
Cell[2072, 65, 166, 3, 45, "Input"],
Cell[2241, 70, 1021, 30, 75, "Input"],
Cell[CellGroupData[{
Cell[3287, 104, 310, 6, 45, "Input"],
Cell[3600, 112, 9970, 179, 566, "Output"]
}, Open  ]],
Cell[13585, 294, 220, 4, 51, "Text"],
Cell[13808, 300, 265, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[14098, 308, 878, 20, 45, "Input"],
Cell[14979, 330, 34971, 572, 509, "Output"]
}, Open  ]],
Cell[49965, 905, 136, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[50126, 910, 401, 12, 45, "Input"],
Cell[50530, 924, 144, 4, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50711, 933, 231, 6, 45, "Input"],
Cell[50945, 941, 171, 5, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51153, 951, 388, 12, 45, "Input"],
Cell[51544, 965, 162, 4, 45, "Output"]
}, Open  ]],
Cell[51721, 972, 254, 5, 51, "Text"],
Cell[CellGroupData[{
Cell[52000, 981, 236, 7, 45, "Input"],
Cell[52239, 990, 193, 6, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52469, 1001, 252, 7, 54, "Input"],
Cell[52724, 1010, 194, 6, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52955, 1021, 382, 8, 45, "Input"],
Cell[53340, 1031, 193, 6, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53570, 1042, 340, 7, 45, "Input"],
Cell[53913, 1051, 243, 5, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54193, 1061, 248, 6, 45, "Input"],
Cell[54444, 1069, 196, 4, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54677, 1078, 202, 5, 45, "Input"],
Cell[54882, 1085, 117, 2, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55036, 1092, 277, 6, 45, "Input"],
Cell[55316, 1100, 216, 4, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55569, 1109, 418, 7, 45, "Input"],
Cell[55990, 1118, 334, 7, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56361, 1130, 1072, 23, 79, "Input"],
Cell[57436, 1155, 322, 5, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57795, 1165, 350, 11, 69, "Input"],
Cell[58148, 1178, 177, 4, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58362, 1187, 642, 19, 103, "Input"],
Cell[59007, 1208, 175, 4, 100, "Output"]
}, Open  ]],
Cell[59197, 1215, 130, 1, 51, "Text"],
Cell[59330, 1218, 824, 24, 98, "Text"],
Cell[60157, 1244, 165, 3, 45, "Input"],
Cell[CellGroupData[{
Cell[60347, 1251, 391, 11, 79, "Input"],
Cell[60741, 1264, 40411, 661, 314, "Output"]
}, Open  ]],
Cell[101167, 1928, 167, 3, 51, "Text"],
Cell[CellGroupData[{
Cell[101359, 1935, 500, 15, 54, "Input"],
Cell[101862, 1952, 404, 13, 54, "Output"]
}, Open  ]],
Cell[102281, 1968, 226, 4, 86, "Text"],
Cell[CellGroupData[{
Cell[102532, 1976, 791, 21, 54, "Input"],
Cell[103326, 1999, 581, 17, 54, "Output"]
}, Open  ]],
Cell[103922, 2019, 118, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[104065, 2024, 228, 6, 79, "Input"],
Cell[104296, 2032, 623, 21, 72, "Output"]
}, Open  ]],
Cell[104934, 2056, 451, 11, 60, "Text"],
Cell[CellGroupData[{
Cell[105410, 2071, 743, 23, 62, "Input"],
Cell[106156, 2096, 440, 14, 72, "Output"]
}, Open  ]],
Cell[106611, 2113, 163, 3, 51, "Text"],
Cell[CellGroupData[{
Cell[106799, 2120, 279, 7, 79, "Input"],
Cell[107081, 2129, 173, 5, 79, "Output"]
}, Open  ]],
Cell[107269, 2137, 140, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[107434, 2142, 206, 5, 45, "Input"],
Cell[107643, 2149, 125, 3, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107805, 2157, 208, 5, 45, "Input"],
Cell[108016, 2164, 125, 3, 45, "Output"]
}, Open  ]],
Cell[108156, 2170, 131, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[108312, 2175, 186, 4, 45, "Input"],
Cell[108501, 2181, 144, 4, 45, "Output"]
}, Open  ]],
Cell[108660, 2188, 139, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[108824, 2193, 154, 3, 45, "Input"],
Cell[108981, 2198, 199, 6, 62, "Output"]
}, Open  ]],
Cell[109195, 2207, 123, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[109343, 2212, 552, 16, 79, "Input"],
Cell[109898, 2230, 200, 5, 110, "Output"]
}, Open  ]],
Cell[110113, 2238, 196, 4, 51, "Text"],
Cell[110312, 2244, 527, 14, 94, "Text"],
Cell[110842, 2260, 165, 3, 45, "Input"],
Cell[111010, 2265, 668, 19, 73, "Text"],
Cell[111681, 2286, 1036, 31, 116, "Text"],
Cell[112720, 2319, 703, 18, 151, "Text"],
Cell[113426, 2339, 519, 16, 73, "Text"],
Cell[113948, 2357, 634, 18, 78, "Text"],
Cell[114585, 2377, 734, 19, 78, "Text"],
Cell[115322, 2398, 819, 20, 121, "Text"]
}
]
*)


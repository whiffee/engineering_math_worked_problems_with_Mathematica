(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    483297,       9914]
NotebookOptionsPosition[    467243,       9406]
NotebookOutlinePosition[    467631,       9423]
CellTagsIndexPosition[    467588,       9420]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[""], "Input",
 Evaluatable->False,
 CellChangeTimes->{3.769091400633762*^9}],

Cell[TextData[{
 "I\[CloseCurlyQuote]m not that impressed with the selection of problems in \
this set. As a supplement, I will start with an example from Paul\
\[CloseCurlyQuote]s online notes, ",
 StyleBox["http://tutorial.math.lamar.edu/Classes/CalcIII/StokesTheorem.aspx",
  
  FontSize->14,
  FontSlant->"Italic"],
 ". This is example 1."
}], "Text",
 CellChangeTimes->{{3.771245166017983*^9, 3.771245219296109*^9}, {
  3.771250848386986*^9, 3.7712508531633883`*^9}, {3.771260456012486*^9, 
  3.771260460475222*^9}, {3.7713298990283127`*^9, 3.7713299013886833`*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eF", "[", 
   RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], "=", 
  RowBox[{"{", 
   RowBox[{
    SuperscriptBox["z", "2"], ",", 
    RowBox[{
     RowBox[{"-", "3"}], "x", " ", "y"}], ",", 
    RowBox[{
     SuperscriptBox["x", "3"], 
     SuperscriptBox["y", "3"]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.771250961376598*^9, 3.7712510263163548`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox["z", "2"], ",", 
   RowBox[{
    RowBox[{"-", "3"}], " ", "x", " ", "y"}], ",", 
   RowBox[{
    SuperscriptBox["x", "3"], " ", 
    SuperscriptBox["y", "3"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.771251028840094*^9, 3.771260271809574*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"zee", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{"5", "-", 
   SuperscriptBox["x", "2"], "-", 
   SuperscriptBox["y", "2"]}]}]], "Input",
 CellChangeTimes->{{3.771251127598674*^9, 3.771251186926826*^9}}],

Cell[BoxData[
 RowBox[{"5", "-", 
  SuperscriptBox["x", "2"], "-", 
  SuperscriptBox["y", "2"]}]], "Output",
 CellChangeTimes->{3.7712511907142982`*^9, 3.771260274321288*^9}]
}, Open  ]],

Cell["\<\
zee will be restricted to a domain which produces a range (vector field) \
above the plane z=1.\
\>", "Text",
 CellChangeTimes->{{3.771251197054757*^9, 3.771251236637184*^9}, {
  3.77126157187227*^9, 3.77126157600775*^9}}],

Cell[BoxData[
 RowBox[{"Use", " ", 
  RowBox[{"Stoke", "'"}], "s", " ", "theorem", " ", "to", " ", "evaluate", 
  " ", 
  RowBox[{
   SubscriptBox["\[Integral]", "S"], 
   RowBox[{"\[Integral]", 
    RowBox[{
     RowBox[{"Curl", "[", 
      RowBox[{"eF", ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}], ".", 
     RowBox[{"\[DifferentialD]", "S"}]}]}]}]}]], "Text",
 CellChangeTimes->{{3.771250865578475*^9, 3.771250947638974*^9}, {
   3.7712510469331512`*^9, 3.771251078764277*^9}, 3.7712618066690702`*^9}],

Cell["\<\
I can make a plot of the general surroundings of the example, using a \
flattened cylinder to imitate the cutoff plane of z.\
\>", "Text",
 CellChangeTimes->{{3.7712513554824743`*^9, 3.771251400031671*^9}, {
  3.771251478830812*^9, 3.771251489764786*^9}, {3.7713299697620573`*^9, 
  3.771329973072093*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p1", "=", 
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"5", "-", 
      SuperscriptBox["x", "2"], "-", 
      SuperscriptBox["y", "2"]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"BoxRatios", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "5"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}]}]}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.7712455125787487`*^9, 3.771245550924328*^9}, {
   3.771245611692395*^9, 3.771245644784305*^9}, {3.771245676151288*^9, 
   3.7712457748024693`*^9}, {3.77124583904186*^9, 3.771245958306856*^9}, {
   3.771246061128434*^9, 3.771246210512294*^9}, {3.771246280255061*^9, 
   3.771246280829748*^9}, 3.771246402728751*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p2", "=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Cylinder", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "1.001"}], "}"}]}], "}"}], ",", 
          "2.5"}], "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"C", ",", "Medium"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "2.3", ",", "1.001"}], "}"}]}], "]"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"S", ",", "Large"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "3"}], "}"}]}], "]"}], "}"}]}], "}"}], 
     ",", 
     RowBox[{"Axes", "\[Rule]", "True"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7712462933881607`*^9, 3.771246333266868*^9}, {
   3.771246395355554*^9, 3.771246399785779*^9}, {3.771246467207419*^9, 
   3.771246536738832*^9}, {3.771246635032576*^9, 3.771246733674988*^9}, {
   3.7712467666989813`*^9, 3.771246779609358*^9}, {3.7712474991826887`*^9, 
   3.771247504444811*^9}, {3.771247653418592*^9, 3.771247692326064*^9}, {
   3.771247781236588*^9, 3.771247875423896*^9}, {3.771247948960271*^9, 
   3.771247979829883*^9}, {3.771248037299893*^9, 3.771248038618146*^9}, 
   3.7712493845749807`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"p1", ",", "p2"}], "]"}]], "Input",
 CellChangeTimes->{{3.7712464064171143`*^9, 3.771246411751443*^9}}],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
u56fWtSD9lH1lfZjfyhc85NoJ963I1zbz4P6oj1VeUQ33pdC9eX02j4WtBPv
u2gn7eW2XwXt6WInHnDozvsNyH44vev+h3Z0X+p3Kj31L8XRfr7t6fSvfpSe
+pfipQdMeT0q7opZt13R/QlZTv863Pxg4NqWZ82LkZ/s+WCL0x8Pf3vn7C+r
bqsreN+u272xqXnmhOGN30hNuKf4T+ueaxF++Yb5Tl7c5oK9Tv8ast3/5qcR
t4xu1WKMEwl3VXr8PfJTOtjpjMH23ymOcqMe4Lgf7g8+q3X+5NQEf0+laSUD
Z0ac0/pF+PrJb8R97VV8ZNM6hxNii3q8w46srhm136B8vFXsfBQXvTxHbf0M
Ko9HymNQ+T1l7fIrDl2Gik6kjyH6OP1OdIFOpL+B+1N7GcgP/Ijdrgau4NAL
+oHPaz+idI2oZHNW+sfpf+kE3rD04C/vf3+fUeuZpI4vveRw6AKdwFF/6AGe
ZOuOdlD2UyTr8P5jlb3mmIyKnT+a4XDEPY9OqvTBzgkOj7Db1ZB2Vjx8R98R
OSP2G/4P3t49Y6jD1byI8kG6QPvvlJ0kSb75ib72g7/neAx2tUrqR+m1+A31
rGvX26B8vLvJPnFfjrtg521ED74vp29YZnC1l8r+bPI47vvbGUfAJ9l/p/KZ
81Lh4cHPnTWGzfhlxreZjj9Z17LZ9fbrzxono/pGPXrO4S95vzw2v/MRY9qS
lac7xDj3PSXp4u2/U/qEz398+6rL/t68ukVzWr/g8PESZ/A4+KHk+4R9Hy1e
6hKcULdWhlOetRdrTpsRfdJYdW/u1qlNnfK4xUVufs8tDnHzn25xjpsfdot/
3PyqW9zi5j/d4hY3P+wWz/x/t6NbP3Xrj27999/auVs/deuPbv3XLR5zG3fc
4rF/G3e5jTtu8ZVbHOU2Hv3b+MotLnIbj9ziJbdxCu3KcZTb+OUWX7mNa25x
l9t45xY3uo3jbvGn2/juFn+6jftu8bNbHOIWn7vFP25xvltc5Da/cIu73OYv
bnGd2zjoNm66zafc4km38d0tHnCbx7nFsW7zQbf5o9v81C3edpv/us2X3eJ8
t3m323zfbX3ALX5wG8fd4hC38d1tvcItPvm38aRbXAp74rjLLR77t/GwW1zt
tp7jNh90Wy9ym1eOqTvyWuSLxbXzBB64OqxK3GJ/7fkdOKcf/8aF6QlZhdpz
B3BOn5ydfjYyrkBLHzD6ZPPUJjkaR3pt/VbSM58dsK5GasJVLR9wTl/l/pV/
FBbq+9zAOX2k77q9YyfD/tL/I+25yTzrecBhbd1v84KRk2JTz2m86u+egRFR
2Vo+4Jw+5Ym2FeIW52jp56yNMgsLCzSO9JwP0jNfXn7puoR6ftrzfXBNz3vZ
AzKu+mvpwTk97JD9DOyNOeyKOeyEOeyEOexBnfcw+F796wvPqHYHL+PpOiFk
5BrV7uC7E/r91Ct6n4F2B7/ccEJax43HDLQ7+K5vgg5Ex+010O7g7zz9VZUy
Ub+oduFyol2YQ3/m0Jk5dObxAjozh57qnISO8+p2yD6v9ARf8fK1kpP77Teg
J/iN43uSchdmG9AT/IWJ25Pe7H7LgJ7gxVvXSZ665Z7SEzxg5oi+i97280BP
8PfGxU2bPPee0hM8tUHxsB678w30F/CyRZNar4+9akBncGPshdWnP9hhQGfw
RtWPPPX5pItKZ9YHOjOHzjyOQ2fmsGfwolkjv3p46TmlP/hbIzt1bdUo3YD+
4Ad/bTil/yO3lP7gb9boZVb7wt8D/cG/utHDTM3F+wMHFR95sFxyv/hSHugP
fnvTkK1bfglU+oP//Pbmmudnl/JAf/CeO8dd6rg6wAP9wRMfu7QmLsLfA/3B
h7wUlt/mTJ7SH9zz8sOTslufMqAz6wadOb6CnuCZhaUKY7J3G9ATPPH61u7J
O/OUnuB1H1/2efGrRT3QE3zVnWtzsq+XUnqCn9x9ZU7882WVnuDHX96za8Gk
YKUn+Fd7JuzZWSpE6Qk+dsny8anDg5We4IuWlEmOKFVW6QmeX3bUtF7jSik9
wW+9N6/j0GeKeqAn+AsfL9vz5aRcA/as8nlnUfkLCRuVzqwndOa4F/YM3qLJ
Z/3y9p5R+oM/Ov3Z/DIxF5X+4BfHBoyNifbzQH/wxKQdFya9XFLpD14xb+/A
RnPKKt3AXxhyIzwpKVTpBv5JhdB2xXuEKH3A3y/168LstSWUPuADZmUNnNex
UOmj3ptfufbuqnLnDehg19+ZX0AH8LVBo1Z+k5aqdACf+WTN0utaXlX2Bv71
kPULo0+XUvUFHzGzdaX6JYJVfcHb/HEpb+HEMFVf8FEPx9YOrxyq6gWetWR/
5M/1inhQL/CD3T4K7px9WdWL52WoF3j8gnU3K4efU/UCr0ntC36B2hc8gdpX
nW9A7ave26b2Bf+I2hd8CrUveF9qX7V+QO3L81nUF3wZ+RPw1eRPwGuRPwFf
Qf4EPIX8ieLkT8AXkD8BH03+BPwr8ifgN8mfgOeQPwGPJH+idCB/wnpCZ16X
gL0xh/7g1Wl8BH+JxkfwbTQ+qvfOaXwEn0fjI/gQGh/Bc2h8BF9D46M694XG
R/C1ND6C96HxEbwMjY+sG3Tm9SLozBx6gk+keA98CMV74Oco3gNvTfEeeN5T
vvEeeOEM33gPfATFe+B/ULwHft3fN94D3zPGN94D70DxHusDnZlDZ14nhM7M
Yc/MoT9z6M8c+oOfpPkLeJlWvvMX8Ok0fwFfSfMX8I9p/gL+TqTv/IXLCZ2Z
Q2fm0Jk5dOb336Ezc+jMHDozh87MoTNz6MwcOmvnDIjOzKEzc+jMHHbOHPoz
h/7Mob9WL9GfOfTn/Ye0XqTpz5zWfzT9mdN6jqYbc+jGnNZVNN2Y0/qJphtz
WvfQdPONHx3dVtxdeTUyNEBxpdveU1mR+x0O3UouDsuMjNPXzVb0C7kv7uw/
rINZ9XPuC91KWH/ncOjW5LnQx1NzHQ7d+lRv1zQ1wSkPdJt1Y1Tj1OH6ulPj
xBGvRWzX15F6f7QyJmKakz90G7967pjljZz8odeVyk9VjTurrwv5xt1/W29M
Xh4e19tZL4VuYz47USkuQl8/fKBbauvU4U7+0Gf0wGVvRGwv4u2weczu6Wk/
KX2WtzzeJ2Kav3dWSIRnW53LSp+jIcG9I6Kc+0KfgHOte0aU0tfZli1v9Uls
d30958jYYR/FVnbqBX2uLXx92fW/rfdCn+TwSnMSsu5o87LqG9+NS4h1nl+j
vtXnPnM6MvSO2aDH0w33F3jVOD7uybUnIuPumlOf/Wr2fUlpahxPPXN/SmRo
oZl9e/jSDQvOq3G8ilVvP2/x85V/X552To0j7ee90z+iVBHvxArhqWvKnVDj
SMr6s7VTE+6YE5evnJm78JYaR5q99mzN1Cb3zO7VH4zqXi1TjeOfWeUqNINH
x/auXW2F0q1Jk/veiU29bZ72f/vJvL2ZSrfZx8cPju1+V1uf2Vbr5RUj1t7T
5rPLrH6Xq+kWYPWvPG0dDNfrsu8UeuLaalHRtWtb5jnrYFZ/yTULJc5R4/KW
7x9LbZJvTpuQMtBvQhEV53gtPXLM1yeMqP1zVgkVN1ZtnTY+tnue+f2G+/7z
5SR/FTeOufj0mNjUfPPXN7649HNsnopzjn36w4jY7gXmVjkvCLrZ979pbhQO
3UaboTsK383VdFtV6nLRwCN5mm5VLLu6oq23tK9X7qnUJtfNBoW1MyuFH1F6
LbP2td4wA8VOlJ+37CHTnH9wSPG1LZ35Ea51unzWsf7SEkqf5worJRYWZplh
8TuWzz1QTulTrNY7RwvfzTZf/7p3etp3pZU+PXelHiwsvGZelXO91PrqkNb7
Ct+9Yd689dYTAfULlD7F88dFR0RlmhmrE9ZNnpuj9PG2ee7piKg/49yd3gHT
1mxQ+szOHP/qgtvZmj6X31/aNjUhTbOrxZYOZ8zyTRrWXNXyktKtp2Un5811
F3tVnDo3Vc0rH4it0CA14aL5xawOP5w+l690e9bS4YTZU+wEetn1PW0eWPzg
jo6Dg5Ru4ZYeaeZ9z4S0azTcmUcftvzVGTNyVr1gv2+ClT7tV656KSLqovn+
pT8ubClw5n2Lx7QvGhdxwswXe4Y+0wOHFUTGnTYHH9lZ/MHw02o+cvOrmm++
6jmr6fObNT7+rOmzyeJbzUEpP2+6OOSk0udVq177zBGBW/u263VZ6dDA8kOL
zZkZE+Lj9zjrJ79YceNGs4LYCXRoYqVfZz45Nfru3pHO+smH1v9vMYuvHHLp
3M0QVd+MoX/5s/nm9Jz4gpwazvrJwUnnB8WmbjAn9G8Z9lDUJbVukGvtcz+k
zbNKTf4r/W4jOuDNqWGXT6l6hVr7x5ONthtXLBj9eJaq1wSrXx81rp6NTwr8
ylknKWWl32982z3Ab2o7p164Tv3i0NXWRZ161bDafa+RMaeI36J9Tr1qW3Z1
zIipWvnEojXOesgayz4P/OmHCgtOJFxQ9frhodPfJMRmaPW6adX3nLFE9sOj
Xs2mP/VDQmy60fr+E/GvRZ9R9pxv6XbSuNxlyuIvJxWq+t54dGxgXMQlY9yw
2132dSmm6tvMei/kgjHux0O7IraXVvV919Inw8jMja19uWiIqi+u1zqndGjU
xLHnBVZ+p4zcxe8FfenvrAtttcp1yfjl+KBR35fLUzqUsfz/BeOV9KqjP9my
X9nz4nK9RjY6e1ab911bfTw3MvSGps8sq19c09YxGvcOuhcZmm0MGlSu7RPZ
a5Wf/MHqX1lG+hNna07PyVH6zGq0YmVC1g0jY8qX8cGfFKjxpYml83UD/k3F
w1a/vmGU7BXynwotSit9xljxzDXjqcO31j/eNlD5SVyTxn7brEJSgNJtohUP
ZBnrZF0Cuo2z4qibRpeet4Y/MtLp75cXf5n+wXPXNH0Cd0d+mZB1S9Mn3rKr
fG39wX4fJUedDwkd4l+o+GLE9gJ1bqFaz7H81S1jk7QjxtlrxZ7uGrE9z0iQ
8kOf65a9FRhTZPyFPp9NLV82bnG+UeW7jA7nZ/spfZpadphnNChSqfIzcXfU
OIvrmEObP+8ff1ONI7jGyfoJ7KpZmfTkwndvaesJxZJLTcupna/pFjcspUZc
b2cfEXTbYo1HhZpd9fvq3DMR2539XdCtV9NWdyL3O/lAt0aWHfp5sitnvJy+
N1HNZ0s/+GPhzMX3jFkngxdVuXxRxXvfW/Z511g2LmfXrjr5Kt7rcOhMQNzi
28b3nSKWHi7hrNsEWOPyn/NLWZeDzqu+m7Cu8N1CAxx6Hb2QsjYhyykndPNd
t3Z0q3pqWP1exQo13apNCc6J3F9U0y3b6qcOV+swJ5blR77orzjsMM7qv/o6
THbbEXsKDX19YKMVVzj5Q8+4r8sdKDSd/KGP3a+d9Oo55uvDv0+o53DYod3f
nXxgfyV+Lbsm4Xt9vaVPbvD7sd31+X6T/5z4IHb+38opeuLKeq6Ia7et0NDn
+2OtuNF5zxF6Ppd5cmehWVzTs5qlh77eMqbT94sSvtfn+89NHLU4IcvJH7rZ
8bA+389+K35C7HwnPXRLtv7fKY+at25vMyW2ssOhW7blN/T5fvJ/w7pHlNLn
+8vKPNTy61ed+5JuXraHEuVGhcX1DtD4A6vaLkmo53D0uyv0nh36nbfEyeUJ
3+v7Sa7aOmj5VLPG/Vtmo1sTLs3t6K/Wtz+1dM0118bdC687soRa3x4bNu6R
1Ca3zduVvzsSv8fp11ds/2l+JP4T6Rta8/2b5ub5M663fCdQrasvtea518zr
0d8021eptOIHrP6ebS5rcX+7mOmlVXmKW3HOdbNFxRr9l6Y5/LIVP1wxT03O
OFjuk3Lqvj0tO79pPpbZaUF0ESdOOGiPg2ZZGQeRvoE1f7xsnh7U+LGo687z
keH2+GhGyviIdvzOjn9UvAr7fNSOT8wJEp+A5zxvxWnmdxKnob64ftQgfei4
qcGKv2ONp2fNZW06xmxcGazqa5/DdMHcFlv3hzUtQ1T6RZYf/sPcFLTh/X5l
QhX3t9p3u/mgeeZgnUqhqr5xll1fMrs33DUwuobznGiYHUeZVyiO+sW+mjck
jgIPsuNJ86LEk+hfM6z8zpsbOnzYYNEaZ/7lZ7VjuvnttdApG3eWUXy9FZ/v
M/s/FvGwn185xRta9d5s9tjwwoLAmHIe+I2Dlg5HzFMlGmX1i3eeJw6y42Tz
msTJSH/FittXmsnLkjxTtxRR3H4/dKUBjnz22vMIY4bMI5A+w76vcULui/ZN
t+cXRnmZX6C9+DwBtEtdu12MGtIu4DvsdjSSpR3RXsin619h8p4w1V7g20t0
Mhe86MT5a+35i1FM5i/Qs5utpxEjeoL/YetvvCH6wx82sOz5iNk877EfxtUu
qeK98vZ8wXxd5gtI/4GVzxqzR+O3+4Y/7Dw3PGJzA1zNO6z6zTcwn0L6NvZ9
jWZyX+g8yJ7PGvtkPgud+VwF6Dne7kd/zkfsfgRey74a06TfQWfk00V0Rv6n
7X5nbJF+p9YDJf020R/5LLD7l9FV+hfaJc2eXxvtZH4N/QPtfmF8Q/3iC7sf
Gb9KP4L/ybHXEwz259hXm1u9eU7rMyGO/Qh/cVGdH9JeCnXsR/gF6b/Qx467
so1vxQ+Dx9t+28gUv4375th+2EgVPwxu1+u60VT8NsrT3Pa3xinxtyjPy/Z6
jlFO+hHSv2H7c6Oe+HPoWcpe5zFekXUe3Nc+byHXiJfxC/w/9nhn1JPxDvk3
tccpY4OMUyjP7/b6m9FN1lWQfqI9Dho3ZRxEu4yzr048ILpVs8dxjZeyx30P
t2O2vH/P43uyPb5r8U8pe91ei3+a2ev2WhzC+zDp+YgWV+D8v4emN/6hWkFx
pSfOyfswbv6RtHNBSh/wpz4b3T58p7N/A3zg+LpZC5Kd/ov36PPFbqEP9tt0
859zpM5Ux56RvpPYM/JB+tfk/CjcF+kxTiEfpE8aV3lHgSdM9Tv1Pa5fxsX3
e6Ss8v+2LptbvFu65InAk0VUOcHbVbq2vmWbUGe8Ez73/GNvxy12/Cr4rsF7
lo+LdPZ7YP9JF6kv6gWOc7FQfvBfqPzqnEspP/LBOX7vUXuBP0ntBd5X2gvp
ce5fdbEH2i+t2e0GS78Us3L9VpWSnnX85HSJW8b/NX3c5oxr38p63cnDtX8o
F+vw9+31OgPrdeA7ZfxFeuSPq/V5jbsObynj7/El18MvH3B4WWu997jxyq6c
MY83dvhkGUdee6Tn4klvOPZWy9LZOacOvLMLxxXnvOF3C/ydcNx3whDranL5
K0pcd0LKDx2m2FfzQ1n3U/vE7HVCc8mqdikf1HLu+4p9Vee8gXcQzuUcbtfL
4HotIY5y7rfb3bif2j1B4pxx1O7lZT3zOykn0hfkWe1ixlC7jJI4uSe1SyKd
Fwe+gc6FU/sGZZ285YFOZuwTTnr0U5zrpexKuPUZnHth1L+c89bAt9H5abhv
hL0Ob1SUdXjwvhLnPEnl+efz5A+aTek8H/DGfH4a4n/KB7zPT2nl4s7q6QNo
fgqO80zeDcqomDT7b/1a7MH63Mp1h+Nck5l5HzdaetTxY3w+EnRw49G0DqD6
tfQ7vi/OcRkv5UQ+rAOtJ2hc7qtxt3ET51/FSX194xN93G9K5ztRO2rczd9K
O2q8JMUb9H6Klr/9/KiIt/Og714w62xTXPseqOTz2K2lhwuNIt7Xfk9853L5
w8r/ur1PdNqKG3ebbeU5COIT7f16vA8iz1nAsd4y66WHV/X+aZdZUCQr6IUy
51T+l+3nR8YQeX6EfPj9QfAEed7B+T8+q/F7JWvtMC6tyhhx/5azqt2P0D4K
5JNuP/fRyr/Izl/jQX2t519aecpZz4k2KK76o5wz9FOVvnM8Z06r8oAHj1xS
rknx84rPtNcVNbuV9UmtXTLt5zjm8RGtd2UOyVTrZnh/ZN5D6X1qjXT2/fL7
Dlgfw/78DXtCP5+Wk6Hy5/3k0Blx19MxGz/0Lrlk+q4/bm4B/cER53ST9Mif
95eiPNgPeVLKo9bJaf8e6ov9ZglSX/W+mPVc+2/7MST+Ge3X2pOaq+8/8d33
7ax/XrHmcc77lYgPRx0O+jR2vp+WT+9nxmREhjrve6r2svLJ1vQMse3WPE+6
/Wr3F+Oe9BfoU83K77rR4P64JV+tSXP22Vp+L1d7LhNoxUt3jD8q7apW5pMs
pdsL1jzurnGzT6ttgfWPqPWBG13W/Fr47h2j+hh7/wb8SS/bz3gaVBnfu2/g
bmXnjW1/4nmk+UdFTyccUs8dVtC5WEh/dMmKFqnD9ffO4E9WbOr/6tIjjg7w
A6uEYx7U015vV/mg3V+72S1hxK6/vVcl7f5cRoVtXdc77Q4dcjo+0nnqj/r7
aNOHdDvW/wtnf45abzljxp1qqrd79cgX125sn6v1r0annyixdkOO1u5zHh26
+8Cp05qdnOhxaNHvDc5r7SjlMVzK4wFX874vkteOePZv7+mL/qtLvz5833sO
x3qaf/tiT37Y06mXep6+aN+U8m31fUp+NT9OKzLhglavz+x6ac+5RB+tv4s+
2vMvKY+Hy3PRLo9KT+2u0lO7Kw6/umx0ZvExT+vPcYKmztrYa4WTHnaSa9uJ
pnNo5cp9B7ym2/l7pTMvrIpzOPKf26Vozd07HDtEeao8/H5SRs//3Z7d2svN
bt3s060d3ezQrR3d7NOtHf9te/1be/6/al+3/uVmh2727NYv3PyAm99w649u
fsnNv/1bO3SzZzf7d/O3iC+r2s8TFUdczhxxDHPEMcwRxzBHHMMc8QdzxB/M
EX8wR/zBHPuwmUMHGU81HZhDB+bQgTl0YI56MUe9mKNezFEvl/JrHPXtYMcb
JqXXOOrLHPVljvYFz5T9rohTwUPf88vuWs35rjB4suw/QZwKHijpYSfgxyV/
9f4JlQe6MYduLjpoHLql+HzXxdGNOXRjDt0Ul/gNdgI+YFHfnNt7nfdUwS/J
vi/oCV50de/qu+o431cG3yffGYGe4IU/2OnVe3HC0yV/2Cd4jJQHOoMPlvJD
Z64vdHbRTePQubfsO2WdmUNP8N0P1RuUUT5Dvf8MniHvUUJP8NqyPxZ6gl8t
+sXwRp3LKD3Bt9bv8ETM7iClJ/hlSQ89wSMkf+gJni7lgZ7ga6X80M1FB41D
t+PyvJvtEPwTWZeAbuBe2f8M3cAPif2o97GFV6DvOoF/2jYypU6+8/018DHd
v01quc75XrMqj6SHbuD4jg90A8d3c6Ab+FopP+wQPCjWri/0ZH2gJ3PoeUqe
m7Md2r8Tk1hnpD9Soc/pofF76LyJxKQU+v470gcl3u4wvt89OocoMak3fRce
6W/Le6a+7/MnJnWl78UjfdWcyQ3CBwbTe+mJSfwdeaRvI+e3ox3BT8nzArQj
OM7tRzuCV5H7+q4vJCbx9+WRPkfq5fseZmJSR/ruPNIX/mzr5rsekZj0Kn2P
HulflnbxfS8uMekL+k69S7u7ce8B2efA9gB+UO6L9gUvI+2OdgRH+6K9wKuS
nuDQGbqBQ0/oA35PdIMO4J2knLD/w/Icn+vLHPUFH0l+BnwT+Rnww+RnwO8T
P4D6goeRfwDfS/4B/CfyD+D5g3z9A9cLOrxu+1tNB+bQAXynvF8DHcCP0TgF
fpnGKfBHZByBDuC1aXwBP0fjC/hvcl/oAH5RygkdXOqrcegjz7s1fZhDH+bQ
Bzyxsm9cBD6U4iLwmxQXgZekuAj8MMVF4MVW+8ZF4JkUF4G/QXEReG2Ki7i+
0NlFN41D5+dknZB1Zg6dmUNP8LRNIamh4TtV3A5e/I5v3A5eleJ28N0Ut4NX
pLgdPEfidugJ/uxmuzzQjcsP3Vx00Dh0k+cyHtaNOXRjDvtkrs7rIQ49wf03
9piTuOCS2m8BPr3Pyl/fz9mnnpuCe2Q/OfQEXyXpoSd4eckfenJ5YJ/MoTNz
6Oyim8ah8wO0Pxl6MoeezKEnc+jJHHoyh57MoSdz6MkcejKHnsyhJ3PoyRx6
Msc6Ba9XzLT302u8pP1cQVtXWW6/D6PxLPs9Io03sfd3ajwN8Qdxe3/YRY2v
tN9X1PhV+/mNtg4z1n6vWOMl7Pe0NY51DV7fiLffr9DWW7CPATxtUPbLE7ek
mNHy/Bt8r/Q7mQ+odZj1IR9MDkk6a5aQ/Xmc/wP2e7zaeos8d9E4vtfDvLH9
foK23hIg+4DBe8u4Ey37fcFPyntPs2UfJHhzeT+ul4zf4MXl/WV571pb97Df
vw1wWT85q9YfHn+z46hPcorIeXnX1PrAEnnPRfYNaPP9ufJ+Muazp8W/eeV9
A57nRvs8F3fmXxtpnjVb4vl+NJ96ReYF0TRv6iTzi/40P8I8ZZD4GfCwS4sf
uNwa3yNDOXAt73lN/Ayn70XzoGcl//Y03+ki5elN8xrMB02avxyR+oofpnLh
e8QlNC7vk2jzl1niZ8DTWj13/5SoOKO0+BnwFw+93rl6+G1D3rtTvNaAzma5
oGDPLfEz4FsfjMgqPzbUM0f8DDj2IeM3rvhenrzHq3j5CWsWRmwP9sh70Yqf
/KHIiUlzAz1Z4mfAZ8t79KPFz3B9A8TPMO8t/RPzgsVPPhn5RKPz8p7hXTVP
wfpYrrxfAd5c9vFuFv8DnirnUE0S/wOO7yOreZFcs+X7wsXE/4B/uazr3ZaN
SnrkHAH1d02tjHbhe0javKaR+B/m8n6UNq95Ufq/mi/E2H5D9mErfqh5/ehP
cgI9sm9e8bgSb/Y9/EGQR95zUPOR658vKYhNLaXmFbg+WO74rvhyRT1HxC9x
eXqJX2LeQfwS4ucnxS9tEL8Evlb80kzxSxxvfy5+iePJbfLeBXih9cHRHAP+
itPLe0davCTjmjaOb5P3K5gXmWy/98u8usQNLs9xND5AnuvDD6ekhp/LWVjc
05z4ceE95Xk/p48jflR4wfO2PcBvwx42i27gc8d6cnbWCfJUFjsB/1TspJW8
dwH+ifBj8t4F+GeSTzF5HwB8n9wX+/x4fS9L3gdjLuO7Ws+cK/1L4hm1PpYi
fqYdjSMx4rfXSX9HPjjH0l/6O7jv99B/VeuZvwnvK/vwwH+X9ykknlEc59qV
Ef8APlPKv1r8JMp/UMov35XT1j+biX9gftF+r1jp8MCb2Y3b9Crp+U2eO8N/
XpD3fb4V3cDPyn1fofG0vIyPg2ncDBW+3c5flf+A5N/BZbwrfN5uR/i3b0UH
3BflwXc2G8rzU6TfLjqjPEiP71rul/Ziv71b2gX8mLTLg9JPeXx5TOyT/TDK
CT6D1tXBx9K6Ovh0SX9D2pfzXyz9Ef7zK+lHk6Tfgc+Uflde+hc4+pfsB1L+
9qT4gbrE04TLviKD0y8iDv8TKH7SZd6k8UMSbzAfLu+zMS8p/pb5RTlngTl+
M5dyus3vND+D9zpgz88PWO/f9Wu833FW8eNltgf6eUPUfizw3iFxwwNbOt+/
Bu8lHO8pKX8l+eD9BPBn5L54XwX9COtjKCf4NYlDUE7w+LI/+u/rEkrfgUhM
eq95/60Fe8Po+xOJSVOEo5zgKyQflBM8U+6L9yjA91A50b86kJ7gqaQnOOsJ
znqCHyM9wdvLfTH+uvVr9KMb9JxRrRvTc0ZwPJf0kP7fi25zxM7Rvoiru8g4
C/72/B0D458P88h83+D0E8QPcPqGLu37BbXvZOHHpD8in+0S/yNuBA9rvPLU
BwGhniGUP+xkifgrpM879NhjS6uHebq52NUvEicgfa6kn0DjS4iML8+QHa4U
PWWdROWD+Qv8IXiIlB/xD+yhgvAtUn5wlL+StAv4ULTLMLtdeH7kkXYBHyLp
U6S+6rmP5B8kcSP471J+xEvg0N/3e6t/6iDvcfh+FzYxib/rDY75Guyc40/Y
OXPf9wq0eavGZ7uk9/3ufGISvq/t+71hp/y+3/390//Q9+X5eR/8PHPMR5ij
Xi7zTY33lfMBmfu+/+DUF3r68vIecOTDz23d9Hepr8Z7Sjndnocyn+NSft/3
KLT21eKlN0Rn5siHOdbZmHt891F7Z8tzQIwLrM98sX+1fijrhBgv3PaVcb1m
uNitrOsq+2nWzl5v2UTrPJ3oOTXnI+XQ7HCzzE+Zo5yszwY7vcY/k3KCf/Ok
XU6Uh9M3EP/G+uwWf8VczhnR7Me+bm4B/fvJuU++37NOTCqQcwW3il9C+pYV
puyud/iIWv8HL3g8J/eVcXtVPrjvuG0D1reNO491aa08iAfc9jci/4r03Ac8
kZ7jgNeW9HgOgnXXNvJcDM8jwOOF4zmLmnfL81w8jwDPo+fRvF6B5xrMr8q6
Fq9Xoxy8PjzWPldR249308rnnsnrwFgfQZw8XtbZciU9r888JudJoZz9JD3+
Hvkhn9bSf8Gzk3a1rBSVbCaJnYCvlucCz7j03/Gyfsj2MFLshO1/pbx3wfH/
YTnnFPlMXt9p6MNLr5hN7mvaaOqWfE1P4ZqePTp8erD/F/cM1vP5/W8f2vF8
EW393Pc7W38bN32+++Zw2eet1Qv7v5m/Nfe5NXem+GtxbwcpD6/XvS7l5/Zd
/3n8mNeuZWnPK1fZXLND0UGzK9FB2zf4ppRTm5dJvbh9kQ+Xv6fcl8vfXNqR
+5FwrX8lniusv6hbUc3P/Nt6bbpvSe+r8/w1e3PL380e3Npd2ldbr3DTZ520
F7ejW/u62YOb/bjZm5t9/i92rrW7m5249a/lUi+2Tze7vSLraTyObJb1LuZy
zoX23DNOzp9i/oLEt+BHJc6pLud6cHqMv5r/sf2t8kszxK/azz2dceCOvL/m
lfEdPFvWyefY6+qaH0M8z3ZeQsZl5mo9Wq7xEhd5ZR0A/DtZ539Wxmvw5vJc
4KjYGTjOS7xujzuaX5U4QXuOibid7WG8nC8MXr5g//jnN95Q69S4VpHnHVXw
vS3sQ5ZzKRvLeKfWz+U822jxI+DN5XluIznnjstTVc6bhj0v+81+TlRDzjUD
ry/nNM6Uc2HA7/uiVMufY4t6Vso5huCD5PmXPN9XfqaLPHcrIe89qnUqeW4o
51Sq+W+orCdvFPtXzx9lvfea2D/3dzm/Rq2Xhkk524n9g+McsKpi/+BPSH03
if2zn2km9q/WRUX/amL/an1G2kvO51LrNvNlfXW0xEXgEWIPn4n9s98rKfbP
XNbB1LiTLHYr61GKrxD7l3Uw5Vc9Yv/4jWu+5HNN7J/vW1zsnznsn8e1FIlz
mL8r/YJ5H7FX8DZiz/PkfDTwDrKfoZmsh4Bfkf0P/rK+AT5E7BO/+b7oL8zl
OYi2HwxxHXP0L+YPSv9iXlKeNzG/IudDMZ8h/ZH5CumPzPGb+TiJV3m9Olv6
L/MtOE+beLw832G+VM7hZS7jncYDxD8wnyHzTeb3y7nePD7uEP/CfI7YD/xh
ljx3/kaeR4NfFH5e5jvwb4Y8x/9a9jnAj9WRfQ7qOZ9csV79oqwzgG8V/yP7
ppz1T9nP0JX2n0TL/pDz4qeQT4bkX0/2Rah1SMknW+wH6bEPQfaDqfQPSfmH
0r6UKLnv79Lu6jmC+OHXaF/NQNmXEib1gt+uKOVZL/cFj5D7wh6Q/33i/zvS
fphoea6aK+mRT5Ck3yX1hD+/Kfr4TbZ1AG8sOrwv9gA/nCvtXlnshu2tptSL
ebqUm3m+lI95fWkv5s/S89AKsi6t3ruQK9ZX7XQp2rrfDaz3SfokSW/Kb+hm
Cv9U9vkg/YRn7PUc6MDx8OsSL8KuPpZ9ccfEz3O8MVviPeg8T9Y9wiXOgb/t
1NeOGzv4nqPiyZR94G5xtdt8xG0e5DYfcZt3/1/N79zm6W7zepxnwn4M74Mz
x/vg2nqa9F/meO+bOd4XZo73i5mr88+J4z1obT+qvE+t3RfnUbvUl9sd9dXm
L1Jf5qgvc7x/DT7x3TUNNxWcVvXi9KgXc9SLOeql7ReVenG7o17MUS/maC/w
uLV5ny9Pu6LO/VDzsi+6738z9aZz3jj2f46ucaJufq46Vxx8Rchb7T7ckqXO
tef5HerlVn62c5QfHOf2o/zgVbulT4/aX0Sdywc+pNEx/yJ+Bc658cIz2jR4
tFWjy+r7CPA/HokP1XeKhaeM2vD56T53VXr4h9GUP/ixWjWWxvUu5vE9jyYx
abp8h9T3nMPEpH8+5zAx6Z/POUxM+udzDhOTcM6h77ntiUn75Hujvuf8JCbh
nB+UU42/i5em1Ai/pM7zBx9WsURy7ErnnFv1XDK9x8TsIWVVecDHzs4IvR1c
UpUHvOvGoLRNO8+r8oCPaFh6y5xHLyo7Z/+McoIHlNhRuW7UUaWn2t8i7YL+
Cz619rLu4QOdc1bBEwsWdz+81fmujcpnf/L70ROd83vB98s+FtRX7c+Udkd9
wT9uNafWm/H7DHUuE80T1XeThXeKbJtwtvUhZf/gz4p9qu8gC8e52er7xcKD
Vt13bs29Us73i2m+qb5fLDxN7Bzl4fEL5QE/ONC3P4L/h/oj+FjqL+AF0h/V
OfY0DsIvgQfO9/VL4OXFLyF/8D9OJ58f3i9FlZ/HcXWeufAy9F14To9zUbT5
gpzvwRzjMvtz9Z0I4siHOfLR9vlLPuCDxH5g/+BLDpRsNDQ1RX23Bny8fEcD
dusWV7B/hj1r611SHvCVMi6gPOBp5XY+UPlygRpHwM/+1++XjR8VUedXq3MD
Lk4q+tTGTWrc5PvCnzBH+TnORDnBn0w7UTPgh3vOd8SEL/qxWfCb3Z3zV8Hb
UL8DL0n9Ts0fpd+p790LH3Jz4JT/Lr2k9FfvNcj3rNX37nmdUPoLxp07AbY/
RL3AS6c0yIooVVyd7w3+HvlD8J/EH0a6zENRX/BR5CfVe/fiJ1Ff8NDd64cf
T8hX9QWfJH4S9eU4HPaG+UXMZ2UqHE1IVzqo+aCMX8k0Dz1J58mDR1f70ZN0
vKyqF/jyOpMbRE1yvnMNPobGNXCMa9Af/j9I9IcO4OVFB9gnjwvIB7wN2Sf4
ErFP9d154WPFrpA/+3PoyRz3BfdS/wW/SP0XPIP6L/gj1H/5vmh35ig/jwso
P3P1HRPhx8XvqXONhK+SuNf3O3d3jQ/FH6Je4BtEB9SL74t6MUe9mKNePL6g
XszVd+tcxiPmvt+n4/XGbG1cQ72Yo17MUS/mqJe2DxbfDyWOejFPdlk/VN8P
JY76MlffeSEO/8Yc9sAc9qC9dyl6MoffYA6dmUNnrfyis1v5Md5doe+RqXmQ
X50dqQnF1Dm94A/SOfMYX3p0iqne5kwZlR680stPzh63LUidw8/+2ffc8gvm
f67e3z96TYj63ofatzxnf+Cu5SUVR/wfLTyZ3guA34Zual3xzJoKy9IKVX9U
+3WFQwf42/Vnrq0vVy9ElZ/nF9CBn/ugXuARUi/kD3/b1pPV2M9bhr4jk2fc
oHYBH07tAo7z/8Hd7BPt0kruCzuHPpivoTxKt43Jkb3uOudgo70SRR/Ys9oH
K/M7tJddjsSkr4esXxh92vn+I/iIma0r1S/hfL8GfNTDsbXDK4eqdgTPWrI/
8ud6RVQ+yh5kXEY5wXc2/bDjxsvO9zTBl8l4jfqiXXqTPYNXEXsGR31/rN77
vbkDw+h8cmdfq+/55IlJOJ8c5UQ+KCfyUfYp+iMft/kC8ud2B2/zx6W8hRPD
lD3zvgXkD871wvxisTzfR/7g36xKyL/76g7nvG6Xcmr77uS+yKfNpAEPdYj/
0TmvUsqfIPGt+t6uy7oi8hkceOrbP7qkK7+KeUq+zO/U+b3SL96SeRDuCx22
Db5X//rCM8qvsh8A53gMfonHcdgzz5twX47bwdl/4r7Qc7ish2BcQHl2i27o
jyhPC6lvVVonbyjr5NAT43U30ZPOIfeclfVztDt44tON6syYtMc5v1d45Mo3
8jKHnDH/B7H93tE=
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJw1mnX8FdUWxe+9k2IgYICdgH6ehZ2UhCIIiGATUiKlhCDSIEpJiYUoYNGg
dKmAioCtYD+7g7b1fZfrvD/Ob6+7Z8+ZMyd2rPkd3aZb066lQqGwmj8Rcgfy
LGStuFAYUSwU2tB+4fd45BDareBVAee0F1Ns0C1KCoXa/G5Ni2hracNo59Ie
pq/W2GxAzsoKhUbIxrmvyWYX13bSzi7a7iGut0I2Rj5Kv03Bc7hvO/IsbFoi
zwv36tl3I4fT9oBXIgfRMlp/2sCA76ANoJWjtQs4od0b7GTzHu+yjmfOZ2zv
pr6nIfLz2P2/iPyQ34N5ziTky/y+s+j3GhCeoT57xX7OIuS9jL8O9v2wf5Tf
bcFXIxfwPi2QTXjWQdg2pg3l2lrsHka2Qt7IWpwGbotcin0n7HPsq7FQQ9D3
5feTtEEFj7sbfbSi7eZ3OeyrIMsj19HXVHBr5D+0H7FdRD9fpbavjjwK2Zw2
DruyYR27gxdz/w3YF7D/DnEa+ouR03mvZsjh3Hs84+mqMWP3SOw10Vz9irwQ
+xv1m35Wo5tJP8vR9Qtz9Qfv1p5Wi/4mc/17bGsjf0BWK3rtl9N/LeTf2P2I
PB39FdqH6OsiI+RTXDsXPBO5ruh10b6an3qvvJR63cdo/LQ3U+/lsch3aH3Q
vY1cWjT+nWsdGEcKXhB7njS/JVrXgDXPY8J+0rt8zf1tkTWQvZC9ab9pTMHm
loJ17YP+afrtAF6I3MI9fcGXIZcVjXWORhbdl+x1FnuE83grsmfQ10IWi16D
ZxKfofXM95jUa6j11X1tw70fxb5/JXKxxhX0a2I/S+t0T9E26r89v2PwfOQy
WnfwUuToorHurcjz5jL3zTOP68Zw77ii31Hna0nquX819fqPCmvxduQ9cnjk
sYwIfXYs+v4s9CFcJ+ydMWHOX8j8Hk+xr+4q2hfsCfeODfZLU8vXU8/9PWFs
w4P9BWG8I4Ne8zQ6jGFxOF86Z5PQ3UQrT3sm9npuRm5OPeea+0+Ygxto1cHz
wlnQmZgT7lVfz/H7dvCzyHWZ5/LJ3L6qY3jfBanH9QZyQtH2et/nY6/pJuTR
/G5Bm6tzGdkvvRb7OQ3Ds+bS73+5VpN+5jCmzujOBy9G/0Fk/CL4EK69yljW
gyuCXwGvBR8I3gxeDl6H/TnYTwFfw3OeRh/Teit+YPegznbsvbcC/AX2l2D/
ALgp+rnoO+hZ4PHgdvJ92mvgtnoWeCx4Hq2bzkdi/9MFPA+8lNZD+50+F2I/
jf6v4/ozmfW6PgP9t+gvx2a59qL8B/rr0efy1/Jn4L0V3zI/Q8+6CPsr0H/G
vbehvwr8F3gQuCn4Zu19cA3wJvTdwNPB34Abce808NfgBlo38IvgLtiUAX8P
bqLYAq7H895BfyH4Yq07+KzcvqwD+Mzc/q49+GTwLHBLcD1wk9hxsBltBnvs
WOQl6K9CvxBcHfyyfDG4gWIYuJfiLfhDcG/wNxo3+ATFgsz6C8CXY3Od4gK6
3+Sr0Z+lmIX+U/DFiiHgjyPP1SPgTyKvxcPgj8AXgn/V2oPPBO8ELwCfBk6x
+RJ8KXgX+oXgauA4zHkd8Db0c8CngLfLn4BPlU+NvUbTkRdj/yb6Hlw/H/wC
uDP4HvAO8B3gE/Te2HfDfjb4dPBPzNdYxTB+98VmMngk16fT/0Tw3zo/6CfJ
jyjvkK8AVwKPQ38q1wfQzy3aQ+jrIm/DZii4uvwpeDi4Jrhn2HtdwBG6/eXX
aQO5f4n2Pfos9769FlzSGU3tb+WjPqHdBn4LWTnyu7fB7rHgB+XLWnLPfuju
0l4I8UW+dFqI3crFXsrsY2Zp3VL7avnevZD1ij4bOmtXYFPEpmrkc9SR3xeg
78icHYocwbX66PqmPku6rzZ4BO1PnVPkGdgs4/522I9OHY9WIufRzgG/grwa
mxL9DMHmOnCmvEp5EPhP7h0IPhv8LLijxq59yb0fIS9FvxV9T+1/8DZwP/CV
4N3g/uDzaGsY80HIc2kjwQn3norNfGxaZ477mlvNsfx21zC2f/O68KxBqWPp
At71bu5txjiHohulnIl++tDPphBLvkG+EPIo5VOn5N5zrbDZGPIB5QVna88x
no+SkDOHnOSJ3HFiQ+q++/PcU5CP6IwpjqfODbR/VmlesZ2AvqaSdflRRA3w
+/T7qPYJNldie4TiHL+bIQ9XLCz4bB2H/LTks3U8+DPwfbRJ4PuRs+nzSOyH
I3/HZqTycuQW+r+d6w14jz/4PQr9OZHzLOVbyrGWRs5Xf8DuSOy/VSxWPq11
Qj8D3RvyzeAyyJnomyg+oh+cOtdTvj8kdX43DbxP7PdqjP0wvRu/H5Jv1prR
f9XU/lXn/USNh9/NwY9x75bIuAJyA8+6Hjwb/YqS711Z8hprreW7poU8+Wt0
87m2S3G45DpD9Yxi+bDwvsotb2MsFZSDIH+W70F3MvIn7U3wSZH3lOqlPJzd
lSG+z+NaZWw+p/9Xed4YcPOQhyoHTcM5Vi6oPLBvwGVDHnFIyEOGhP41jkpF
+xr5meXhHfWuPWlfgXspZkTOAXYy5r1oU8AN0JXNPB7N577op4GboE/BD4Lr
K0eLnf+uQL6eeB9eE/zK4pAvvc61QzUG5LbUOZLy4dcS79Wrw/nTOyrHVh2k
mmgJ11cmXkfFGr3jnPCeWruf6a8h614lct6unFk+T7m1aq1uvNsnyO7yWfSz
Cpubsa0EXgBuCd4LPInrTRLfK7+p8b0WeW9URC7i+sd6H+R42kL0E0peC/lW
5V57c/9odI2Qm9BNph1QdN15b1jfgxWrNT/0uYb3aYTu/dTzI3vlaQvpYzf4
aeQR9PU5eAf6V2Kv4ROx/cT0ovNvzcmkkNv1556Z2AxAHpwYN+dZE4ON9kaR
5w3h+mWZfXU7bJZhuz5xLFOuorHoHTS+5xPvW+Vsiv9ng3dx/xrlfeDd4I3K
J8BTEudfqjG/KLkeki8thbnTHC5BnoT9r9qfyCdDjaZabU2orToETqCV1jRx
ndImvG8PxnEm+jsT10ra4zpzK0JM/5l++qSuRyclrr8nhDy5N/ra6Cei7xTe
UWv0Zdj/x0U+T63DmdrI73roE9WSmevKydz7QuJaW/nk7bRLeP79yu8S1+uN
0a3nnhrgP0vmAdqFPVkTu81c6545f18exrZHvgz7MyPXH6pblOu/FmpV1azy
McOCX1X8kT8sGznWKLYvTh2T9e5F+Z6wH7QvlFOvBN8UOQYpL1DtpTzlDPTb
sHk51BeqM5SzaJ63o38pcl2/v3xmZL9dDvlW5DU6TDVD0bW9araXYvM4U2Lz
IeJwHpTPSB1/rlJ+mDoeiX9Q7r8GfRfNQWybCyPnqh3AR0fOF8QHtQ4xQ2NQ
fjuX+3eAB6Y+5zrvtyB7xN7PjyPfi73eSzQHkbmXUuR8TftBJNd3Yf7PQK7O
7APfS5zvC1+qHDp2nvNYbC5IZ241cmvsWlG1sHgD8RsLkUuKjvXat3rfocrX
WP+WseuXacjlIV9S7nQRdn8UfCYbgPcrOvarrlV9qzWbit2d3Pd47nzj/7Xs
hNT+QVzBO5H95xHIOdgeg83o2PXNfPTXR657ZmstwDfFzvFmID8Ifkn+6bmQ
F2o/K6bUDTFL/Ij8repH1d+qTzWOxYnXX5zJguAHvmQtDiza/w/m95DYeccF
XF+VeH0j5ntV4BPEKygOKB7IFygG6F1UV8pP/euvdHZin8GnYueDB4b+J/Ls
3sqBcsc2xbjeyMmpeayHkGW4fzh4g2JC5hikWKSYOTjETXFr6l9nfUXmc63z
vT11DS0OcHXYA1s1H7F9xlrkrsj2pyMz1cA8v2liHzwx+Grtix5hbyg31jqv
w+amkn1pp5LnfHyY9/Wx/Yd4xOfCs/RM1Q7a5/Lf8xPzoDoL78Zel3/5RuUQ
yhFDfaN8pmHkelS51j7IqdzbWLFDeykxt6Y69L7Y/Fo9+TjaTzoL8hn0/XPB
fmFQ7Fzl/Mi1pvKr8si59HNDwfVjGWzmga+LnNvpubPRvx7ZphLyMH4/zntf
mdlHXoX+QOTKzP0rJ1I9p3W8CDmesY4Gv5J43RXf5FvEw2ovqAZfUXQMKBf8
facQ15aFvEX5i+o85dWNIs+51l/7WzWfeNfLIsch+TrxFQ+k3sMtkHWZ08tj
v0vF2LzLtZF5FPki5Sjyk+KpG8b2n5q3BqpzEvsf1cXiY1Q7iFdUfqA84W7w
UdKDO8fmElRDqe47OeSWrWOfHdWJ4vBUFys3VD2pWlz5lDjlPon9uWpn1evy
meLcxR8ob5V/nhrbj2+Uf8G+RcFcgXgc8Tmqx/eLnJNrP+i95ZPFySsuKj6K
Z5D/USxojr5Xav5W9a/4HvGjqi0Vx8Udq0ZWDLsi7Kuq9DNdNVpiHky5lTjL
Y3PPr+pu5eTiuVSPf5V4rtqDY51JcNXM3NVw+vlP4hq0Jvq/+F1N+QyynuIX
dq1L5lJ2oJ9VMNdUPbJPGBE7X1oBroy+lDqGihMblXruRzOuXzLXOapzFSt1
Rh6IzQfqDOosDqX/agVzOOJm5OfF+YtL0Jg7R+Z+xHHXUT6TeN3FO4lXU4wQ
LyA+5p+C+fc9ic+UeLORjOd6dCNz85Pa54p7qm2Ux/YOYy4UQ60aeX0PiFzb
aj8sSv29Q98+lJcenjvXVz0+IvE3IPFR4xPPp7isPzPnSeK+xEP2Cz7wC2we
KphbEx8j37J35Dq+PjhVrpXat4nTqIL9E/relDge61zUiO2n5K8U8w7OXWeK
E3g6ct64p+R4PZjrFXP7BfkH1arKgZQL6dvBUblrGHEj+wa/p3nW2dYZV2xW
bFWdK87nj8w5nHgk8XnK41XT/Z459xUXoXxXvvrWzFyF3vcS5NrEZ1O81u2J
c2bxXcpplNvIFyv+yYcoVm0RV8V7HJ/Z1/VEt7/q2cy1sXgtcZ3KGcTL1Vdt
jH1Hrt2feD6VT+6Xu+YUB1IhdxwSByJuTHHhUOQhmfN28WzLsGnO/e9m5lG0
3+RvdibODcTB3p04Bxbv93fm+ll8i+JmP8ZZPjdXf1fwG+Jg5JPPjVyzKN69
qpyUfvroW01kjkdnrUXk2Nqd33uJe05cY96oejBxXireb0bqHEa8nOKg9ufH
sXM81baaL9Vrv4AL3DcuMZ8gXrp/7BpYYxD3pRxJudKmxDxGs9R53d5Fj0O8
hPxWfcazPXIOJn5PvLVyCdXI+q5RtWC+VPyDvi2ICyob7lHNfnPJ4+kc6hHF
UHGDjUKsGRU7n1b8FH+xI3P9Lz5q39x8wZWp60DVg8+ohs3N9YgrE2c2nXub
RuaxdDb1nbYU8lvVJLVzx1ftz3tSx5Ax6HZGzpf0rXAp92xTPCyZe1GMqoNN
hVB7qgZVrqXvkVrvAwKHIy6ncu66ukpmvm0iz62FPC53ja39rNxAXJPOZwv5
ap5TRP4T+fuifKxyfp27WbG5bfnJH0uOo4qnyl3FtZcpmj/9JvEciqtX7qoc
Vd9BB8TmBpTnK89UfTFTY85dX12rPI1+dyj3QpYLc3F12GNak3tz13Ty4eI2
3028n8X5H5Sb/2qZ+pup6ll9axDnKk6gFdeeSJy3iIdXfqk8Uzz/1sScie6t
lPv9xcsdAhZnpz2vbxTKr8W1fph4PvWdRd9AFIN03vXNVDm2cu1fEufz+i6z
O/AbnVLHXH2rHyYeMXBW4q70HUbf0sTVtAnfkfU9+eDMvF8VxeTAjXRIzad9
j+0C+hkXeA/xH28m5gY1n6oZVfuIq9ycmAPUvhWHqD51v77HiVMR9yNuq3LB
35tVUysPuih3jqpaXFy9vgPofGmfHBp8l2KbfP4s7j8lcY2pb3X6Dn9Ebt5K
OcCRuflBjf+Y3JyL5kScg/6poXZmbmQg+ETk/wCdSjdF
           "]], 
          Polygon3DBox[CompressedData["
1:eJwtmnfcFcX5xe+9uzt7gVgAG9hijKL5xYhYQEDpAiJVqqGJlIiCioJgQToq
CAJqbFSNSgfpTSNdxViS2DX4MaKxIiAmivI7X8/8Me+ds8/s7O6U85znmfe0
Pjd0GFwqFArd9CfV7/K8UOik3ypJodCyXCjUzwqF1bJ9WCwUDqnBNSqrVL9R
Za3q/UOhsIj71f4Utf9Y7R8VDrKdLFxS+aPqh3RtndpuV72P6pt1/8eq36qy
QfUBKs+qXl/9TJX9FOExwu+ov8eFf9L1ruprpa5Vlm2+ytuqv6rykOptVM5T
myHC61S/TeWvqn+rZ65X/UPVl+r+t9TfJPX3o9oeL3yN7HOF2wlXF16tdtXV
fpHKO6q/p/bTZS+qfqLsbdV+jHAttX9CuLJ+Owp/o7JT9T1qP1P1u9X+Adkv
UfvBwmfINlP4WY1vX+E5sj8uPED2ZcI9ZT9VuHvusf5J9uXCzfT7pewdVI5Q
m7Wy91P9VNU7yN5Z998nXFf4KOHPhPvr/n8JLxY+Tu2f0/x113utYfyEe6p9
ddnbCp8o3Eb4WrWpr/oXajdPeIZwHWzqb3TBYztP7W+V/QzhxcLfyl5Z5YCe
N0/4M9U/kP0B2f+s+2sL9wpeD81lP073vyH7eOFHZL8Iu8rVqv9B1/8g+xnC
U4X/T/i3wqnwx+q/qnAmfLTwPuEhalNL9Yoq/xE+RvZKso/Qbw31v0zP2y/b
Sxq/u2U/qGuzVP+A7xEuqzzP2Jf8/t+pLFf9WV27tOgxnhi85vcKryl5L9Bf
PeFrZP+HnvGQ2hwrvF/1ynr+GLVpKFs/ta+n5++QvW7Ra347a032K1XvqH7u
Ufvj1WYjbXV9mfAralNH7a9Wm13B48r7LVGbS9SmoPK98HXCNVW/Ufe30OVE
9UZx/80XvkP2hrINYxyFF6mfvcKN1efNwmcJzy7bfr7wQuFzhTPZnxOepPsv
Vvutud9lpt73Udm76ffHgseINXyh7I+qbR7Hv4LKjbpeSfYRfL+uD1X7L9R/
RdkuUv/NhVPh/8l+t+y1hTdFvFv2acyvrr2hejv1tb/gMXlM9XHxfder/X/V
vpXajBSuKTxX/dcRbitcQXid8D1qX0f4OeEf1P5l4duFvxY+Iu4PxudMfUNd
1afp/iP1rG/jfmI+BrM+1GaJ6i/o/utV/0T2EPliIOtPZaTq56uPWeorxPVa
Q3ii8DnCZwrfpt+z4FnmVbbPM/PPEbr317Kv1zNaqK8nhZOyObO58BOpufSv
jInwM8Jl4Y3CVwj/RTgXXiHcSHguZC68SrgJ+1O4KNwoeGxrRH74u/Ctsv+g
a2tVb6prlWRrx37Ru+3SfVNk/5PKCtW/07XFsp2g+ulqu194vfCxwn2Ft+l3
VNGcDrffXPJ+3aNyS8n8TV93qQyF/zUG/XX/aXrmlbr/gPrbIHycbP3K5qPl
wkcK9xJuGTx/v1f79cL1gufjdOFVrGf110O4mnAb4ZP1W79oDmC/Dol8x/po
IvvB1PwxrOA5Y46Z6w66/ojsO1Ov/9pq86Lq8zLvf7jkMdlfVfubhNfF/TFA
/V+k9vvhN+GJat9MeIOeN0747OD5/6RkvjxF1y/R/f/VtX+qfnlqfjhf1x5W
fYjafy7cUPWxvK/628T34XuFh+c4p0Kht/Ak+J9v0KWKwg/yfNlnC7dV3z2F
15bMZ+/zzqpvVrvbi/aZ+M6l+HjmSqW/6hN0/2O6/3Ld3wN+1ft8XfC7TRRe
ltrfDMOHq/59Zv6orvqAsv0Y/mylntVNtlHqb3L0V/jzocJdWD/CrYRPF+4q
/KTad4Tbdc9S4Uqp3x/Ohrv/E/3v+9FflWTvJnyL7F8IPyQ8Xvjfsi8QzoW7
C38ivJCtkfp7dukZM4SbqL/N+Dfd/xX+i28vm7/GCX8u+xTh/mpfC/7Q+10Y
/e2Tep9mKi+r/qnKE6o3VXlJ9eWp91vVqG9KujZO97ZUv9vK5ki48obU/aNp
0DY3Fbzf7sjNLXepPrVsTYI2GSX7KtX/lnu/DNT7bZd9Dz6m6D2/LZjP79Xz
Wut5O2WfI3yabPdEffKIcDXhO4WnwXe5xxs9slX40WA9BLdNF66S27/OTaxP
0F/ogxPV5jXeMff4ogfZv1Nyj3/XxPwwWvhUtV2otjOE/8avcJX4Dg/qPS9Q
/RHVH0avZPadS4SfEk50/wDcoK6/ILxB71dU+08j/z+ldq2L7vMV1Qer/WXR
3zSQ/b1gfvos6plBsjeS/Wf8e+TPw8IfRL0Gj8Kn7LFeqp+k6xfhH3Tp74n1
Atr2qqjn5gn/Bv2ILhV+OrU2xUcwX/A6/M6cD1Z9i77jTt2/J/H+bZ5a69Uq
eg02UWmK/ip6TcPz8P3RKjen9gv4hwoq16bmeeY+UembmtPh9t3R368U3if8
ofCs6G8qqu1HwnOET9H7zNFYzC5Zc61PzW9ofrT/2GAt9XjUL5NT+4Mu8Zt3
BvPHW3G+egfr4Vbq/wTh14P5GF6eLzxe7e6XvXNcE0/qmZ2F35T959z7h9iA
PYbPqq/7B8n+W9UP5+YouGqIykbVu8g+RfZ6sh9dNifBTUNVnlP9reD1wTpZ
UHY8Mr7od5qd+rv4Pq7tSO2j8FV3qmyF84Pfd1/i/Tgzs954Xfin3OuZ/XRX
wesP/zGhaA34i4ZSOVDwNfzJy/B20Rz8AmMR9eNW9fdjbn4+SrYbC7Zfquff
gF6J89cgs3ZBw+zW72Ld07tgrYT/OpX4SdcfK1kjH5Wb/9G1K8v2K/gX1lhB
fdYI1vcflRwvPI1mFD6M/hQeKPvGyDe/ET4BHVa0Jn1V9X8F6wV0wzNRr+8W
fi/6Z/xLih6Ja6Qa76u+e6n0Vn1ksPb4ldo3U/sPg8eHcXqa9RIcbxF3tRC+
Pdi/JsKXCi9UH+0LjpUuK5s34c+HIj+xv+B3fOyRarMo936j3rzsmJTY9OI4
//AkfMkav0pt+uh5c6I/rab2jTNrfebsR74hsV65X/V2srXJrKXxiZUy642Z
Jc8Jc7M583qGWyaXrUHQj7Sh7ZV6v7loqNR8h4b/pmQNjHbvkDmWIqZCg+/D
xwo31++Wsn3uipLjG3wxmgPtAYcTu23R93SSbQHcovabGV/h+ezFsnUmevM4
ldtSx9HE05XjfkjV/m71d4Wes0Ptz8ytB69N7N8+UJvVRc85+5Pv4HvgGLjm
rNx6ZlBi/zRR9l8XvccaoIfU/x2qnxP1dvvMsSk+vwL6NLP9G9mPlL0j/k54
hNpczn4MzlVMVlmt+mvBXDFVZQ3fHpwPqB3jAWIK1jprnlgDjX6g5BgF7f7n
zPHLS2p/KHfMgm/BxxDLdCN+ie9OPPjH4HgYfXFM2Rr8ytQaE20Oh8FlaNhF
mWPWX7RjwbEsMfZe4QsKjr1fUxmr+gHdU1V9XRWcn2goXEW4WbCW/Z1wWnaM
fFPJe5C9SEzQM7WPw9e1D147F8b47NzgZ7HGWGsz9LwmwpdFPUR8e57wGrX/
Pvf34HPgpCW5NdHXcX0yfmh6tD0+e2Nm/oeL71VZFhwf91F9ospS3kftu6T2
WcuFX4/662AcP2LqviW/A+/CnNdJPIe7Yo6DXMemkrmMHMPDJc8BuYd2srdJ
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

           "]], Polygon3DBox[CompressedData["
1:eJwt1nnQ1VMcx/H73Ofe57mVbaSdITsThVJGURQtRCkVElFCG6VU9jxFRGUZ
Yy9DljZjpJ4WtEdCRrYaWi2RtJoUXt8594/P/Z3v+3y+55zf+Z3f93fr9x7U
eWA2k8ncT3l60U9P189LE/ikPJPpWJbJ/CJemstkqpdkMk+L5+mrpOH6N+rL
FTKZRtqnYKXUVvo41wqsTF5bnnZ0Hd+N8l/Wf5l4tL6XxCP4fhM3pnOoCt9l
WFtj9BNX8pfwtaIfxbPklVnLE+IJfLXF18b41FfuZ8HkVqOFcve5Vsd+kjPI
DcdNnyHuLf8/OWPlT+T7nu8G/B1sO8/ZWB3xI3QoTye8M/Uyx+e8D+kfiY+i
+TzfYeOxB8QP0gLsauqGl9Cp+mqLe5h3l3FG5NIYMdYSfK64krLW+R62gObH
nurbhOVcm8ldLPcf62spd4L+07ApWAvt6dk0x0NUYqxW+EXUw5orxMca52HX
FtgFdKrck42zUd42/KC4Oz2JNdc/DHuqLO1LL57r6SdqaLxVWA1zVqEp/Otc
u/Jul3cG3YOtwtphm8W7jNUf+zif1pfNpf2Mfa1nvL58VbAO4pf4tvKN4tsh
Po+a0WGFdK7K+bqJr6ZjsIZyp2lvsLaT5A6XexY2C9uSTXs/Ehsrt5rcnvgM
7BdsNVbXtQE9zJuV14iml6Z9if25W19N81yKjcJG0lrsAbkHsfb0At+32P3Y
geKZj7NfS9692J7is4hnUh3rjy3VrkZV45mKB9JK7SOpq/GeNd6N2EzxTnP+
RTvFN1lfxn20xCdp/sA3Bi9g3bG3sc1YJ75t4tPjWWIrsDZl6b29qpDOV5yz
ztrHYsdRf2M8ydOc1ok76pvOM4Ou0K4bz4t68o3jaU9bxCfSAHMsyqd35jD9
N8T7EuPKmxj7jA0QL+Dbm0/vb504F9jtdALf+/n0fi+Md4iW8Uwyx+HYR+IP
aTk2viy9K3PEH9Di8rTPu4t1JOpJV+PdxldL/zXi6ebdU3xG/xTPVJytbnyD
sE+081RGLbEh2JfF5xPPqTU2FFsbz5COimdffJZLtA94Pgfp/EI6u39iZ1JD
6oJday17tZtQhbWssZZbsEOs70psMvZb1D25C8V7jLWXmhZSfYs69zjv8e67
quurch/JpXoadXVyvLtya2K3FmvnLuOtwGdgr1BzuSvFF9MB/WNd5/DMpSPk
HB73xLdd33LtLJXQxdg2bF7UYN6ZsY9yd0bNi3fNGs/H5lnvupJUS76njtpT
4/nQd+IdNBtbL55HS8vT3n9a3M/Y1wPiAbRM+xC60hwTY6+w+eJSahNrx1ob
b4N4fCF9l+L7tIyG6h9o/MFRV+P7RPXy6ZzFeVvO3wf7QPt3a/6DGmOlxhuj
XZFNdWEZ9rfrE+Lx2fRtWYLVk9tPfEs21eS52LtYd/P1oJvN/1rxWX5YPFNx
tvaXJx79X0cN452JtaNhxtpakuplpfFaWMt67XGFtN+x70tpiNxb5d0WZz/O
HjYIu1nch2aXp9oRNWSF/A7Ym9gr8Y3DvsIux96Kb5Q5/hLfIb5P32qeqXhr
cZv47mGTsA58P/P1zqW5lhRr0wxsk3VvpkbW2RI7O59q5fN8m6JuyP1V3C+X
1h73MI2vk/h5auqeX82nuWMNQ7ChcT54usj9Q26DqL36PuV5B78i3plcup+4
r158+3ma0mPYN9id2IU8O6ytSYxblt7pNcUaFrXsYHl6p78p1r+og/+Kh/Ne
IjcT7318A8Tn0gLxbuM1wx6NOXi/wOqUpv9P8T9qWqyRhpWnGvqf62BapV0j
6g3fc/rX07PGeiabvqWL4jsY/wViDVgrvtF4q0L6b/UG9jodzdPEWir5/oxz
y1eh/y78W6w+9cVez6czPqc01aWoT/vE/wOMC0TB
           "]], 
          Polygon3DBox[CompressedData["
1:eJwtzzsogFEYh/HjbmNBbJIyUVZRTAwk10JuCyUsFFKIDJTNqlAGt9wvs8Uu
UkqKTCSKEb8Tw9P3nuf9n/f9Tn7vcMNQYgghG6koSAthnShKCSEFfdyG77hm
dXIICUkhJKJGPcGNyT87l6AYPfwiP8l/OFegHGP8Mt/Brzo/2fGIV/6Hr8A9
X+e8KbNv5wHK+Dv+jb/kt7htnOIkZrg2vXYcqkvl9+UTYs78LeTxs3yTTIZe
JprVc9ySXpa6n5uRncaHu1V6D1yr3l7a366481a9KXOg9+X7ibP0ENbkF2Rr
4xuwqF5P/XtDfMuOew1cI3bVu9HhSN3BdeJYfY0pM3P0WuJ+XJg/w3//z447
5uVXzO+K/+P86s4LKt274kb0KmXe43tQpR7lzvXPIjID3CDO1YXI5bvM6ka9
+ob7BQ/rScE=
           "]]}],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, 
      {GrayLevel[1], EdgeForm[None], 
       StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
dHc9APx6iDk6u81F13mqV/8PQCsG9A==
           "]], Polygon3DBox[CompressedData["

1:eJw1mHfUFdUVxefNzLvzSQABAQsfvUgVFVRAxY7GsixoloIYpSgdUZQioKYY
iA3BhqCSSBONa0WiMSuJlNgQUVAsgAp+SBVBokiRYH7bff3jvnf23Dszd+49
Z599btO+I64YniZJMqWUJDn/F5aTpDsXlmOPzZKkDvg4cHVajn0bLcNuTWtS
JMmwkCRVjH2QsWvAv1Y/+CF+1oEb0Zow9jTaVOwejB9Nfy3wFeBNvHQN+F3e
vxl7PW0zeDH4C+wNue0ltCrsb2iH6N8J3o9dk2e8hn0k71tYkSTdeP4Q+puB
nwfvZkxVyffo3ruZ3/HYtfn/nnsn6T76X6SdGN93GP2L4vsP0HZhP13yM5/l
+e/QPx57As//jv4aJY/5AXst7VjsVbRtub/vPeyVtC3YX9JalXxN37s199j3
advj+zT/LfF5NZjj19iP8L4Xed9h4K3gjeAXKvzd+v5vtIbYB5nfOvA7tAPY
3fnOHqz19+Aftb7YzRlb5v9M+rrxjP3Y3bn2APgEnl8D/EvwSOw9tH3gbvpm
+vvwzEexH6HNxK7H/T147+Pg1fR3Znxtxo8Dt8PeRWsRfUa+8xn4bey69N9Q
to+8Bq6T2HfWg0/TuoEP8fzPwe/QXw88B3stbSm4NrgP48eBj+LbxnPPFOay
nL724C/p78a1d8HHgZ+kfQiuzjM/pK8D9m2MrwH+CHwc+Hbw/OD90z4+Bl7B
/R3AM7RHXJvMt16L3ZrWCfwb8NXYzWntwc2YT3vuaRX9q4rnzaRvNX3PVThG
FtNfK3HstAdfkji2FtPfm/9DjK/PtUrss7lW8I4LwdPBXSu8H6eC7wM3DB6r
NdJaNaV/AOP/zrXd9J8I3k5fR/Cd4KOD105z0FyagI8GrwS/zNgTaFux28X9
7gT+KnXMKHY2cc9n4KbgweAvwZ+KC8ADwS14XiPshrSbsb8q/Ly24OH0bwC/
n/qd/cC9aD8qfnUP9g76t8X3jwB/Xfj9mv8t4LYVnnvt+L6N8glwJfhGcBX4
E3AD8ABwB8avi/PT/Qlzekv8wH4Mp++8wvwmnlsErkn/x/QfT/8Y8I9cfxPc
BDwMPJv+1/Qs1nhUhX30M+a/I7fvyqf1mocz+/pi+Xvk0jsYP7Rs36/O/xb6
LggxVmI8N+P6wZL9vUbk22bYh5cdS/9WvMkPmPP9hb9J3/Zs5rXSmlYDP5Z5
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
c7wobrrm9q129D8caxTVGsrBql0+zX1WJn5Zl1vzSktPy6yFpXfku6uif4vz
5NsPxfMU1biqdeeVfJYl7tT5jbCuV0X/KefOJZelPi/cTv/lqgtzn4fJX9bH
87+d8XzvW951aeqzM9Uol+iMMXiv62BfztjJtC7i0rLrmauwfyi5XrkWu7Fq
VmnzWJ9X/Vx/lF1bSPNIz9YsWwudm3ovdtPO0ftS29ojnWvcW3Z+kY7rIqen
/6jE7+yTes+VG9dEf5emFVdU5ta6qqE0N90zIlgTibt6pdZKyqHi8jx3br0w
da0l/XSB/JYxZykXll0Pq+bR+d+szLWQajbx65zMtdyAWE9Oz1zLSJNL/yzJ
nD/FB7Piem8MrttVv6u+UU7UGaK00NLM+VfnE8pf8zPnZ50XNAHPzJwPdgbv
/VjxffD5g/L1wsx8rzMr5fuXMucvxceCkn1iSvD982O9uyP4jOoM+l7OnC8b
B6+dzjp0fvoVeG7JMbYtGM/BHiQfC/YhfZtibk/0d2mbdYnPh0Ph/dI9RWH9
KD2gM9H1vPt3hflKekb++1tpgMSaR/uj/LMvt8/Kd0Wk8mX5tM56dZ4k7t0R
41vxLlucqXpgY5xfVawX9M369q0xnjS/TapFaK+qViscO+IA8d1E8KTEmkp8
ui3yzab4PYvkryWvkdbjbfAVJcfo48F6WNpXfDU95sP7c2tOac/F8peS90T7
qfyqswXVcDpbKxeem96p/esU9Zb0mc6bpH+kvXRtQtkxszeePyuWtIfvxZpG
6yUN0CD1mZi0gfiyd+Izce2f+HFMYp/ZG/lIWkxnNMq3/w0+698S4+v/W4Q1
fQ==
           "]], Polygon3DBox[CompressedData["
1:eJwt1XmwjmUYx/HHed/3nJNjC8nOsR+k0SnJlmmoRJm0USlhGJQlVCPr0FRk
yZ4lyv5nTcw0Uw4qZVKWKFkzGYYxWmaKY6I+V48/fnPf1/f+Xff+3E/x4DH9
RuclSTKactQ4P0mWZpKkWzZJKoqHgJPFe9WbMXanFtoKC5LkXIUk6St+hNqI
X+ebRL3l3Is159uBL1Ceoe/5q+m/H92h/VG6gBXxTMb6GKNQfh/eKeJR+K7M
DaZtvn7bYv3lDaBnsZXYCOw2cSFdpo6FSfI31kLbTeJ7+WaoD8CW6+sH7BCV
8O1V1tJ+3Txaqlfm604l6lWVJ5Wn6DV5e/iK1btSM3Mcg42mvnydsXrYQGOs
xw6Lf6S2xhiJ7cQKqJc+5vAXY9WUZ3nO0Xa+Mrp6Y75Fyp48jXmejLXSVXPc
H4eFn1K/ZLyuNNpeDaWMeg9jLGE5Ke8ZvjXir+V8E2dUmO7Be5l0bjHH0+Im
cldgP8X65Q6TOxTflknn0w2bhhXxHVJva5y5tJ3ndOSaywFxF9qI7eGdxFca
e6xeybjn8GL1a7xNtb2o3lpuiXoeX1PxeZ7ZsS/6GWzsj7VdzKXrjPU+EHtC
DbDn5JbH3VCvEXsmbyZleR/HN8o9re1pbJX4GE8jbAQ2B7uZbwi+FfsdK9Xf
J+LzcWbYFGwWX47vCXwT9suNPV2bSe9E3I2z4kl0EetAb/Etz0/vwYZMerZx
xhfE1fGPrOOYPhfSzriP9KmcBjwd9D/GXg1WsiadeDrTBp7t2Bm5ffh6U2vs
Q7pL+xzjnOCvKWkNdjv2RpwxVhkrw+Zh8+kIVhW7qH5Cfz30dR/Vjz3l2yzv
grgd33jsnZg371B8G/Yb1hirojzB1wSbqH6dp3YSh5kkT9G/4kbGWSLvsnqZ
sf4UV4g7o/4QT6+4H+K2+Ca+o3G2uhirv314BXEd8bpMejf606JMepfjTh8X
b8ml/ZUb4wrtwdrobyPfkViX/DE8zfC7oz+qKK5vn4dgW/nK45vmm46PxTsp
G2FlWL6+xvF9x1eLquDt45uJO8SXR1msR0F6n2OuB8V15b6krQX2PvYlVgMb
hS2Lb8Fch+HD4w0xZn2+xfHG5KVnH3egucpqbBdWHRsZ7wa2DDuAFWFDsabY
SuxnrAo2HDtYkL5V8WY1zab36jN6jG8ddqu2vjwLqb72sfgOvKF4BbXKpm9b
vHHj5NUxxnz1e7L/H3Ey0Bhz+Wpm0zXEWj7nexurir0grhv/BnE9ue+KvxBr
Sgbl0rNciH2F7aZWctdjHRnmxffFV0veqjhPbAa2P/4PsdbYa2w6ti+ew/x0
ziXYNGwqtdTfg/iv6n9l039V/LPqYguwncZUJM+bywf4nTyzgeNYjTgzrB02
K95yrBLWjraER24xNkHu/Vj7vPS7jO8zJ291/I/kzsyk72W8m2ux9tib8c5i
VbBOdFT8Rza9w/FtTKUrWE9axnc4l55Rl7x0P2NfRxSmd6iJvFfEE6k5tjT+
F9gE8e74p+XStcSaSvFFtItnCTVSHx/7r+0fvs1xRtn0/x3/8cn6W8TXABsX
+8VXfuPbb5WX3vm4+5fEi6kh38txz/mu4d/GuxHfBj2MzVOui28w/h18J7Fb
8tP3L+7nq/Fdx/uBDTJ2KX/tvPSuxj/gP3VeAcs=
           "]], 
          Polygon3DBox[{{1823, 1292, 714, 21, 508, 1879}, {1628, 1015, 1329, 
           530, 134, 1491}, {1945, 1063, 893, 205, 549, 1869}, {1890, 947, 
           759, 520, 519, 1403}, {1641, 1043, 1290, 537, 539, 1821}}]}],
        Lighting->{{"Ambient", 
           GrayLevel[0.8]}}]}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0jtIlWEYB/DH7GJ2sbHJEJw0zaUtsbVsyZa8NbgpmESLLhGZ19IWy2oQ
HAyRBEFdNbEkFSXvHbPUHCSHaIogAn8fwfmf3/95v/c95/sOJ6emoexuWkT0
yysl6fXe9njnWMQ51vIC77OQD1nMZ7zBt8cjLjtTqf/WZ/SrMuR6nbU5/bq8
MzeZy/Q5vV1fYy93+Ya/OM5/fM8Bn5dr/7CsmHt5Wx6lR6yam7nGx1xnC1tl
Q2/jZw4fjSh3JqXv65/0ChmRTWsH1paT+5dRaXfui/UqvUPf0jv5lU/4VL7p
XdxmN3eYZ/+Y7OovWS3n3f+yOZPT/Ou5xviTA9zmC065fsv+tmSPntJvSqP5
j/mjfk0m7a+1VqIP6hX6a5Ym98MrfMAC3mN2ovM/2OdMVvKbsUjO6qkjEWe4
wdNc5Yqc0peYyed+n0v2n9S/61N6oSy6nmFtQi+QBfMJ80V9Xve1MUu3ETP8
II7HNNOTZ6ZX9FjMT/v//zsEvVJahA==
        "]], Line3DBox[CompressedData["
1:eJwl0mlSE1EYheEbBgMiiIIiymBAZFASMBiZByUBZVBmTOAPC4AFsRiXAEVZ
5WYUeL7yx1vv+c7t27np7tzZxe55JqV0iVxjSr/qUjrKpvRXOWAeNt/KNfmz
vIov2MWdvqovy2uoYNF8xAmnOMAJDnFsLcNX7j8o18kPMCQXdO/iejnLTRjH
H/2+7qHciklzGy/wBO9Zexy/a97gzbgmzmdu5x/YwYew7mms2zMVa+ZOLuG7
3MUf8QJF10zztv4lz+N1rMdz0M3FHrmPZ9EfNq/wlvUhnjEv8xtMy0u8wYNx
XnyTB/gTL3AON/aWzL1yD6binrqZeL7yK+6OPfitL+uey8+wZO7gax7VF+Un
cQ/zdpw3zob9eG5Y13+Nc0RGLd6jrso/433Fu3afiu6RnEdZbuECmvHW+vv4
LvQNPIL6+M/6fJxDXpYbeQz/Mv+/s3tsTirs
        "]], Line3DBox[CompressedData["
1:eJwl0mtPz2EAxvE7W+t19IRWqaZVKk1iU1RTVLO1JIpC6SA6i0IUIpIcOyBJ
SDr3HsyYl+Pznwfffa/ruv/3/Xvyj61pKm2MCiFMIiUmhPc7QviAOSRHh/CR
/9rL5Xn5EyrkctuCnCN/5kV8wVd8wxJOOvvOy/iBffoKr2IN69hAtn2Tt1Ap
b3OW93fyfr2KT6EaSfpp/uX8gFwjn8HZyDu2Ws6z1/E5nI98117PDfgppzi/
IF/EJRy0NXITLqMZe2wt3Io2XEE7CuxX+RoOeeeI3iEf5U7uity15+rdcg96
EW/r49/2w/J1uR/5cqHthnwz8r4+wIk8yLewW77NhXyHh1Ak3+VMd+9xsT7M
I7iPBP0B/3F+TH4oj+IR9toec4l9jJ/gKTLs4/wM6fIEl/rNc07TJ/kFXuIV
Um2v+Q3e4rg+xXHuTPMJfYbLeJbfYVf0///ZPzChS5M=
        "]]}, 
      {GrayLevel[0.2], 
       Line3DBox[{1840, 1418, 2103, 1896, 2042, 1417, 1590, 2041, 1416, 2102, 
        1895, 1415, 2180, 1653, 1652, 2181, 1414, 1651, 1650, 2179, 1413, 
        1589, 2040, 1412, 2101, 1894, 1411, 2100, 1893, 2039, 1410, 1851}], 
       Line3DBox[{1842, 1808, 2229, 1595, 1452, 2047, 1596, 1454, 1973, 2048, 
        1715, 2205, 1597, 1456, 1664, 1716, 2206, 1598, 1458, 1966, 2049, 
        1717, 1733, 1766, 1599, 1677, 1987, 2215, 1758, 1742, 1718, 1738, 
        1767, 1600, 1776, 1989, 2216, 1759, 1744, 1719, 1739, 1768, 2221, 
        1601, 1678, 1746, 1760, 1747, 1720, 2207, 1602, 1463, 1971, 2050, 
        1721, 1603, 1465, 1977, 2051, 1722, 2208, 1604, 1467, 2052, 1605, 
        1469, 1796, 2053, 1843}], 
       Line3DBox[{1845, 2059, 1802, 1480, 1617, 2058, 1479, 2190, 1913, 2057, 
        1978, 1478, 1616, 1728, 2056, 1975, 1477, 1615, 2211, 1727, 1757, 
        1756, 1684, 1614, 2210, 1755, 1726, 1754, 1753, 2223, 1777, 1613, 
        1752, 1725, 1751, 2218, 1991, 1682, 1612, 1750, 1724, 2055, 1974, 
        1476, 1611, 2209, 1723, 1676, 1475, 2187, 1912, 1675, 2188, 1474, 
        1610, 2054, 1473, 1609, 2234, 1865}], 
       Line3DBox[{1846, 1490, 1627, 2068, 1489, 2133, 1917, 2067, 1488, 1626, 
        2066, 1980, 1487, 1625, 2065, 1686, 1691, 2191, 1916, 1685, 2194, 
        1690, 1624, 1683, 2193, 1689, 1623, 2064, 1979, 1486, 1622, 2063, 
        1681, 1485, 2132, 1915, 2062, 1484, 1621, 2061, 1483, 1620, 1866}], 
       Line3DBox[{1847, 1501, 2242, 1996, 1500, 2137, 1922, 2075, 1499, 1635, 
        2074, 1498, 1634, 2073, 1695, 1732, 2195, 1921, 1694, 2213, 1731, 
        1633, 1693, 2212, 1730, 1632, 2072, 1981, 1497, 2136, 1920, 1496, 
        2135, 1919, 2071, 1495, 1631, 2070, 1494, 1867}], 
       Line3DBox[{1848, 1515, 2143, 1928, 2080, 1514, 1639, 2079, 1513, 2142, 
        1927, 1512, 2197, 1699, 1698, 2198, 1511, 1697, 1696, 2196, 1510, 
        1638, 2078, 1509, 2141, 1926, 1508, 2140, 1925, 2077, 1507, 1856}], 
       Line3DBox[{1849, 1541, 2248, 1832, 1540, 2247, 1831, 2086, 1539, 2246, 
        1998, 1538, 2245, 1830, 1537, 1868}], 
       Line3DBox[{1850, 1814, 2231, 1575, 1815, 2224, 1789, 1576, 1807, 2228, 
        1791, 1884, 2225, 1810, 1809, 2024, 1577, 1816, 1878}], 
       Line3DBox[{1852, 1819, 2233, 1592, 1424, 2043, 1900, 2107, 1425, 1901, 
        2108, 1426, 1959, 2109, 1654, 1427, 2182, 1655, 1656, 1428, 2183, 
        1657, 1658, 2200, 1429, 1659, 2110, 1960, 1430, 1902, 2111, 1431, 
        2044, 1903, 2112, 1432, 1904, 2113, 1820, 1877}], 
       Line3DBox[{1859, 1837, 1811, 2125, 1992, 1451, 1910, 2126, 1453, 1972, 
        2127, 1674, 2186, 1455, 1663, 1709, 2128, 1962, 1457, 1965, 2201, 
        1710, 1741, 1740, 1459, 1988, 2202, 1743, 1711, 1735, 1734, 1460, 
        2214, 1736, 1737, 1712, 1745, 2217, 1990, 1461, 1748, 1749, 1713, 
        2129, 1968, 1462, 1970, 2204, 1714, 1671, 1464, 1976, 2130, 1679, 
        2189, 1466, 1911, 2131, 1468, 1795, 2241, 1875}], 
       Line3DBox[{1876, 1827, 1446, 2123, 1909, 1445, 2122, 1908, 2046, 1444, 
        1670, 2121, 1969, 1443, 1967, 2120, 1669, 1442, 2203, 1668, 1667, 
        2185, 1441, 1666, 2119, 1964, 1440, 1665, 2118, 1963, 1439, 1961, 
        2117, 1662, 1438, 2116, 1907, 2045, 1437, 2115, 1906, 1436, 1994, 
        2001}], Line3DBox[{2003, 1887, 2094, 1817, 1888, 2095, 1398, 2032, 
        1583, 1399, 2033, 1584, 1400, 2034, 1889, 2096, 1401, 2035, 1585, 
        1402, 2036, 1586, 1818, 2232, 2008}], 
       Line3DBox[{2005, 2243, 1522, 1934, 2148, 1523, 1935, 2149, 1524, 2082, 
        1642, 1525, 2083, 1936, 2150, 1526, 1937, 2151, 1527, 1997, 2244, 
        1528, 2084, 1829, 2006}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{1320, 1285, 2241, 1266, 1310, 1299, 2053, 1286, 1270, 1311, 
        1300, 2059, 1287, 1362}], 
       Line3DBox[{1322, 1303, 854, 2077, 1030, 840, 2071, 1019, 824, 2062, 
        1007, 814, 1121, 2188, 1119, 1185, 2048, 1118, 1116, 2127, 794, 2045, 
        977, 778, 2043, 964, 764, 2039, 951, 748, 1345}], 
       Line3DBox[{1323, 2084, 1305, 863, 2080, 1037, 849, 2075, 1025, 833, 
        2067, 1012, 819, 2057, 1136, 1134, 1188, 2051, 1133, 1131, 2130, 799, 
        2046, 982, 787, 2044, 970, 773, 2042, 958, 757, 2232, 1366}], 
       Line3DBox[{1324, 1306, 2246, 874, 2082, 1047, 858, 1161, 2196, 1160, 
        844, 1155, 2212, 1193, 1154, 828, 1142, 2193, 1149, 1230, 1229, 1190, 
        2218, 1215, 1216, 1138, 1218, 1217, 1227, 2215, 1207, 1208, 1123, 
        1210, 1209, 2202, 1181, 1224, 1225, 1178, 1105, 2119, 782, 1095, 1175,
         2182, 1094, 768, 1088, 2179, 1087, 752, 2033, 941, 738, 1259, 2224, 
        1339}], Line3DBox[{1325, 2086, 1307, 875, 2083, 1048, 859, 1164, 1196,
         2198, 1162, 845, 1158, 2213, 1194, 1156, 829, 1144, 2194, 1150, 1206,
         1241, 1205, 1191, 1219, 2223, 1246, 1220, 1141, 1204, 1240, 1203, 
        1228, 2216, 1211, 1245, 1212, 1126, 1199, 1239, 2214, 1198, 1183, 
        1222, 1251, 1223, 1180, 2185, 1108, 783, 1098, 1176, 2183, 1096, 769, 
        1091, 1174, 2181, 1089, 753, 2034, 942, 739, 1261, 2228, 1276, 1340}],
        Line3DBox[{1326, 2094, 938, 749, 2100, 952, 765, 2107, 965, 779, 2116,
         978, 795, 1117, 2186, 989, 2205, 805, 1120, 2187, 998, 815, 2132, 
        1008, 825, 2135, 1020, 841, 2140, 1031, 855, 2243, 1351}], 
       Line3DBox[{1327, 946, 758, 2103, 959, 774, 2112, 971, 788, 2122, 983, 
        800, 1132, 2189, 993, 2208, 809, 1135, 2190, 1002, 820, 2133, 1013, 
        834, 2137, 1026, 850, 2143, 1038, 864, 1360}], 
       Line3DBox[{1328, 1280, 975, 792, 2125, 1263, 987, 2229, 803, 1267, 996,
         2234, 812, 1005, 1348}], 
       Line3DBox[{1341, 930, 2024, 741, 944, 2035, 755, 2102, 956, 771, 2110, 
        1099, 968, 785, 2120, 1110, 981, 798, 2129, 1111, 992, 2207, 808, 
        1128, 1001, 2211, 818, 1145, 1011, 2065, 831, 1159, 1023, 2073, 847, 
        2142, 1035, 861, 2151, 1050, 877, 2248, 1357}], 
       Line3DBox[{1343, 736, 2095, 939, 750, 2101, 953, 766, 2108, 966, 780, 
        2117, 1101, 979, 796, 2128, 1102, 990, 2206, 806, 1122, 999, 2209, 
        816, 1137, 1009, 2063, 826, 2136, 1021, 842, 2141, 1032, 856, 2148, 
        1045, 872, 1352}], 
       Line3DBox[{1346, 763, 963, 2233, 777, 2115, 976, 793, 2126, 988, 2047, 
        804, 997, 2054, 813, 1006, 2061, 823, 1018, 2070, 839, 1330}], 
       Line3DBox[{1353, 2245, 873, 1046, 2149, 857, 2078, 1033, 843, 2072, 
        1153, 1152, 827, 2064, 1140, 1139, 1189, 2055, 1125, 1124, 1186, 2049,
         1107, 1106, 2201, 1179, 1104, 1103, 2118, 781, 1093, 1092, 2109, 767,
         2040, 954, 751, 2032, 940, 737, 2231, 1372}], 
       Line3DBox[{1356, 2247, 876, 1049, 2150, 860, 1034, 2197, 1163, 846, 
        1022, 2195, 1195, 1157, 830, 1010, 2191, 1151, 1232, 1231, 817, 2210, 
        1000, 1221, 1143, 1202, 1201, 807, 2221, 991, 1200, 1127, 1214, 1213, 
        2217, 797, 980, 1226, 1182, 2203, 1109, 784, 967, 1177, 2200, 1097, 
        770, 955, 2180, 1090, 754, 943, 2096, 740, 929, 2225, 1277, 1369}], 
       Line3DBox[{1358, 1291, 1304, 2244, 862, 2079, 1036, 848, 2074, 1024, 
        832, 2066, 1147, 1146, 1192, 2056, 1130, 1129, 1187, 2050, 1115, 1114,
         2204, 1184, 1113, 1112, 2121, 786, 969, 2111, 772, 2041, 957, 756, 
        2036, 945, 1281, 1367}], 
       Line3DBox[{1361, 1289, 1301, 2242, 835, 2068, 1014, 821, 2058, 1003, 
        810, 2052, 994, 2131, 801, 984, 2123, 789, 972, 2113, 1283, 
        1319}]}, {}, {}}},
    VertexNormals->CompressedData["
1:eJzsfXdUVEkTL4KKICrmgDmAAUFUMACWihETBkBFVFQEMaKYEAUUFZUkggHF
RDBgIKgEwSYoOQw5h2FIwzADRkRA3qy3mnfgHHaf33O/3e8c958+1hbV1b+K
3X3n3lHb9q8xFBUREYntJiIiJtLRf3Xwm/6b/pv+/05X2mjZrWp2NomYckfy
vgSf8LQvfO45JAFeNu3yPHQsltScsLF3uiogweuqFM7bJUJDUMjbR5P91Wod
Hbu+nFBLNjnU7y3onwTvGH6oRv5A5J/JyAeC8rko/9+Gw8/SLz7vYjVzQgWh
44foh+Mj8+LA8UIo645/KQmX8t49UVBF9BEf1Wsu9wr98smcHyOP9ND33B8h
x4LjWZ2nTixOItY/Rj7ZK/I+OmdPKthFl1zbufOV2uKtpHx1kIB47F6x6Cwv
FRwYfrBqx7+AkQ/qKF8K5V9m9IEw1Gcj6nOJ0RtsUf9a1P/fhjPFkeJK8dxy
Onj1stRyQkezufHLhn9lQY8Jrx4acUqIi3rvkzLaXDJ6ZdDwhoB0GG9qz0lt
SiNRE9Zlzj5RQ9zPVvb9LJsFDTKrTlZ8D1XrTm7uaUzjEwVOTvPqqdmgzPBD
BPLfRP7ejHxwRvmjUP42Rg/QR30OoT4RjP5gj/pT/P8pPGmc07in8U79kvop
9U+KI8WV4rnWOiPic3UZoWNsiuZiM6McUFW8bTx0ay6BHyOXTHqkOyDRrRC0
U5cleci9VbvOPuba15NHes/LUn81ogQ0GX5QQ/7xyL+ekQtaKP8dyr/G6AOS
qM8I1AcY/WEm6t8d9cf1ggKut+q/lH9o3qR5lOZPGuc07mn8Ur+kfkr9k+JI
caV4elWs66pvxiZ01J5UsG2gfhkk6p8lcZuT1QqMTVYvSS8j6qdm3MhYVgXP
GD64h/yrkV+DkQ/KKH8syn/L6ANjUZ/rqM9pRn84jPrvRv1xveCP632J6/27
caZ1iNYlWo9o3qR5lOZPGuc07mm8U7+kfkr9k+JIcaV4dqRPGcMPkcivjPy3
GPmghfJ7oPwejD7wCfWZiPqg/nAB9b+H+uN6oR7Xu/6/lE9oXad1ntZ3Wodo
XaL+TPMmzaM0f9I4p3FP4536JfVT6p8UR4orxfMx8tFxOfLPRX9egPJHofxI
9OcpqM9V1AfjES6g/iaoP64XonC9L/5L/kz7JNo30X6J1nVa52l9p3WI1iVa
j2jepHmU5k8a5zTuabxTv6R+Sv2T4khxpXiuQ7l0DEf5rpife6E+w1Ef1B/m
ov6S7fLzDFzvfys/d0SnfRLtm2i9pnWd1nla32kdonWJ1iOaN2kepfmTxjmN
exrv1C+pn1L/pDhSXCmeW1EPOpqiPgT7DSfU/7+VH36WTvtO2ofS/pP2SbRv
ovjTuk7rPK3vtA7RukTr0YW2/TPQ/EnjnMY9jfe5bfvnVv+kOFJcKZ7Y97eO
gn9p//yzdIW2+8HWePRvux8EWt/r2+4HW/GJarsfbM2fNM7by/+34fCb/pv+
m/7fpxurSzf7TokgF3cXhCj3F5AQ64ZOY3tmgDVDh/Z0wwnsbFnnImJ1X1Ui
4TiXWCbqNHeKyYa9McNqnNKjyfpZ4+QO29YQzvR7D0/dywN7hg66SGcj3ZSR
A6dQzkmU05GedD46P52Xzkfnp/OO3TpFwiudQ+i4Maw57mB2EYg9jr7VeSmL
9G6ZwDu3t4pMmmpaltdSCvTf9P9T+mDm39AL//8EpBtWv59ebJZN6OjQ12/d
c30eTGTmg1E4rzbOe4bhAwPkv4j8Axi50PKImXccyj/DrBe24HpP4Hr1mPWC
Ma63ENf7s3andqX2p/aldGp/Sqf2o/akdrTl6ih4JnGI9Y8xnWiaDxnkOqSy
FS+KH8XtuEF1YpdtaWrbpYYPbFDOJZtEj7Lv7+K34kJxovhcZuTDCZS/AOWf
Qj462iB/P8SzP847FufdgLjZov4FqP8lZr2wE3EIbIsDnEIcXiH9Z3Gm/k39
nfr5WcTtJrMuWIzron5D/Yj6zxHE7QyDG+gibtRvqB9R/3FA3K6i/Hkon+JC
caL4yOF8dFyF82LcwW7U/9hfxGlHdMt8d5+ipELydMcrEaONFeBoEtMjchsb
1j+RuBvuEKu2UE/s1Jb5XDAfs69ipxcHHBl+eIT8dsjfkXwaJzRuaLzQOKFx
Q+OF+gH1C+oPdJ103XS91D+ov1A/OdU2T/7HfvKb/uf0y5p7TNcvD1Yb8W6c
lLuegDxQrbPvq54B2fXzgjVTMknaYWejYRo8EuV1yCTbNBfMggd12lAdrpYx
zCD0UEsNGekoZ+wgnQ/lDD+wkD8S+Tual8ql81D5Z9GfHzD+Sa6gf9J/0/9P
6VvRz+cyfk6s0M9p3qR5lOZPV/R/D5TnhHJovqD5g+YNGlc0zmh8ZTD6Qxrq
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
vus7R5pPTh4f6pHvlgXWSYvMDoudAe+ex6c8SOMTxWVhx6WnZsON1YL7N3ql
QJQe6020oIb43ql4mm6VBWNHFB9505QP7rKT5ealVRPnKRC5uyADbncnyhWp
pVAQ8/b45+FVRG59+WASmQYxr/kzrbQrQOK+mV2BXjlR/b54TOwtFpz59s5j
oLCPzVg1QNGqspToq1p3Gmb887+vDMwjoSvdasi4vWLfQuJyiLH7d+ONvETQ
8DnmILaXRy4q+NhanCggUwapjN7szoJZOusXhzlzyWTLnMkX3EuIVMsth8Pb
0qGnke7h7zsqCNz3Fzn7hkNOF3UJquuWDYZ2joN157NJisq7S56LKsmFhydm
hcvlg1fXiiUh69LJhE3Hd1/ZUE0Urr5+nxVWBFYpPSdpHrgAJo3szPMePLLr
aFjQjhEl8HWVnmZpUQbcfMHdO29UNXlj/eXjKIsiyDdQHVL6jg0vrD2k1jRV
kHs5GzwlU/NgrxvHTv1ZBRj0NDQllhxSnXWi/AXJAgdJi7GzX3NhiHLdBY99
JSQi/2LDm0npcFrZadwjRx48MPms0ziggJSz1+0P28aCdeKJ6wc/r4H3y/as
u22dQ+42b2iaee3nf3/du+VoVVi8gBRkOAcPfBJNfIKd5pseigfH/qFOXnoC
8qTkeLaObjyJqH1ZO/t1Muw7ONPJMJBP6oxkOm2vTCYic/J4DV3TYFtk/CK5
uzVkHWgMS3dPI9Xa5yeNCsqEgTN9Cm9drSY9FF3zh03OJrlc791fJfJh6G61
OTonCuHN8AN9358oJUq3xA/fcCqH1cZ1N2w/VcCIr93PvulcSK7HnVm2n18C
+lqT+20IqoHicJd9CzenEakeksWNezNh8qAWWdMEPhjqVNy33J5MUmfl3JYM
SYUTnxMuPd8pgG3Nd29bi8QT630y2TXayR3iYHF+Zv6WpbWEM6zYc3Gir9qd
ph33DpbEg/RRA3vDLrVE2dwqMu9+gNpofTf3epMUkOA0nRAV8MmXpct6RawM
Vdu8bz8YeWWB6rWUBB2bGhJe11O/dFykWsuKUwomEoXQPD9wzrEZpcDbLzbF
2JSldmTwncE9VlWDZ/PZ9Y5hXDBmZ3a6GRWjJlhRZFQqyoFlE1yfbngqgOnp
I/Tcol6p6fcK6N9fJQ0W3nPWVZaqBVOpy9lDtwSoySyWsXP53vG6Ss+MO1cQ
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
GdwgEHGzQTwTkE5xTkc876CcCJSjjngexnkf4Lwd2X0l3jO6MveGIIv3hlPw
nnEyc88IlXjPuAnvGZ2Rfwzyq7XBPzL0HOLWmMv01T5MX03Csa+e5ZumuX55
Crkm5jK6v1UpeZdm1P17VRWssHxyKTbtFYxYVLI5XMivJ/212l3Ib8bwgyvy
RyL/UrQvs9+JC92OdnRrY9/w0DVIX4v9f68DP/p/ooL9f0iRrP8FXjm5safO
sSwhnyRvW5ryKrAUTqB8mv83oByzXV8VYhflkrMHp9vb3WaTkgfb3t+2rQRj
nFcU9aH+donhB2vkL0B+Xpv6EhKqhPUF/RntFhlqiXjqMfqDOOqvhPpHMPrD
FdQ/DvUPaLsuyEb6HdTfnNEHilCf0ueMXRBnSEacZawYuwxm7AL6aJdhaJcr
yJ+A/IG43qMoPxflm6D+dbj/moT6B7fVH9JRT/pddsaOUaEB9Hvrysx30Bl6
TCj9Hjr9rjm1+z/9fXP6XW2qD/2+9kv8HjnVv/335el6/1vfl/9VdEbvylk/
/Nnq/54/tOC97RXm3hYS8N72n9Lz30ZvSm/7e42Jf/F7Dd/eqzVc/b1h0yAN
1h/nhP09F7u8+oXva31/ybHC/60Ajs69/e2R8jsy111x5MCe7e+p74Zq/+Jz
np+lf0A9dzN6ghrq+XfP23N40NeK7X5qmTebM2TUaklpk51c9/QEKMDvWTNx
cD+0B37P2sVQ4ZNGeCKc9+1i6LVfQLw1tEJOj0iAwa9yu781jYFjR650L3oh
ID6przx7bUyA+G2SkrcEAqIn0buU9TCKaOlVzUib8/PnvTfb3vsQei/T2Pbe
h9B7nPtt73EIIL8p3tN9Y+7FCL0XO4T3ZV+RboJ0f7x3zmHuc0k53uciHbKQ
XvoP3/N2RH8r90Hyqy8fnttLpk9kp5Pc8StKA3Z3jP+D0RblMsM4UCo7VlYz
oQqWndDYO/l0PPji31N5VM75qugvjiO84fx23apx02uhYI3qHNXMBLjO3AsA
3gtAF7wX+LvXu0/+uc+LBgEJnb1yVdKSKKKk90xlRsDP2+VVS1KCw6MqyOg6
5+PI9RxSpV49UvZPnu/dgN/fYuLFM1QTv8NFv/smgnT63beO5Mhud1s1+psA
hvfqvzdLIwruvvW6/FTIP0cOFD+n8sGjYvnocq10mPjofNKMqDg4pxlrdpLF
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
CdsCGTwqTwBfAY2B/Z4=
     "]], {CylinderBox[{{0, 0, 1}, {0, 0, 1.001}}, 2.5], 
    Text3DBox[
     StyleBox["C",
      StripOnInput->False,
      FontSize->Medium], {0, 2.3, 1.001}], Text3DBox[
     StyleBox["S",
      StripOnInput->False,
      FontSize->Large], {0, 0, 3}]}},
  Axes->True,
  AxesLabel->{
    FormBox["x", TraditionalForm], 
    FormBox["y", TraditionalForm], 
    FormBox["z", TraditionalForm]},
  BoxRatios->{1, 1, 1},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{406.86521004260345`, 410.00283910317563`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-3, 3}, {-3, 3}, {-1, 5}},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{3.1488803528387006`, 0.09675494604319004, 1.2349862363292483`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.771247462179191*^9, 3.771247703055224*^9, 
  3.771247827256225*^9, 3.771247984073366*^9, 3.771248042443088*^9, 
  3.77124938940556*^9, 3.7712602890529203`*^9}]
}, Open  ]],

Cell["\<\
In this case the boundary curve C will be where the surface intersects the \
plane z=1 and so will be the curve\
\>", "Text",
 CellChangeTimes->{3.771251721680903*^9}],

Cell[TextData[Cell[BoxData[
 RowBox[{"1", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"5", "-", 
     SuperscriptBox["x", "2"], "-", 
     SuperscriptBox["y", "2"]}], "\[DoubleRightArrow]", " ", 
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     SuperscriptBox["y", "2"]}]}], "=", 
   RowBox[{
    RowBox[{"4", " ", "at", " ", "z"}], "=", "1"}]}]}]], "Text",
 CellChangeTimes->{{3.771251539791523*^9, 3.771251613466063*^9}},
 FontColor->RGBColor[0, 0, 1]]], "Text",
 CellChangeTimes->{3.7712517076568727`*^9}],

Cell["The parameterization of this curve is", "Text",
 CellChangeTimes->{{3.771251735437978*^9, 3.7712517434765368`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"curvc", "[", "t_", "]"}], "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"2", 
     RowBox[{"Cos", "[", "t", "]"}]}], ",", 
    RowBox[{"2", 
     RowBox[{"Sin", "[", "t", "]"}]}], ",", "1"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.771251748708708*^9, 3.771251794347014*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"2", " ", 
    RowBox[{"Cos", "[", "t", "]"}]}], ",", 
   RowBox[{"2", " ", 
    RowBox[{"Sin", "[", "t", "]"}]}], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.771251802259245*^9, 3.771260295648506*^9}]
}, Open  ]],

Cell["with the understanding that 0 \[LessEqual] t \[LessEqual] 2\[Pi].", \
"Text",
 CellChangeTimes->{{3.771251808962178*^9, 3.771251835281258*^9}}],

Cell["\<\
Using Stoke\[CloseCurlyQuote]s theorem we can write the surface integral as \
the following line integral\
\>", "Text",
 CellChangeTimes->{{3.771251896904613*^9, 3.771251915326668*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[Integral]", "S"], 
   RowBox[{"\[Integral]", 
    RowBox[{
     RowBox[{"Curl", "[", 
      RowBox[{"eF", ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}], ".", 
     RowBox[{"\[DifferentialD]", 
      OverscriptBox["S", "\[RightVector]"]}]}]}]}], "=", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", "0", 
    RowBox[{"2", "\[Pi]"}]], 
   RowBox[{
    RowBox[{
     RowBox[{
      OverscriptBox["F", "\[RightVector]"], "[", 
      RowBox[{"curvc", "[", "t", "]"}], "]"}], ".", 
     RowBox[{
      RowBox[{"curvc", "'"}], "[", "t", "]"}]}], 
    RowBox[{"\[DifferentialD]", "t"}]}]}]}]], "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.7712519197458773`*^9, 3.77125196021356*^9}, {
  3.7712598862227163`*^9, 3.771259933156962*^9}, {3.7712600096995773`*^9, 
  3.771260109953781*^9}},
 FontColor->RGBColor[0, 0, 1]],

Cell["\<\
The above cell uses some notation which is not approved for Mathematica. \
However, the action which is represented is the integration of a dot product \
of a vector field, eF, (not illustrated) with the derivative of another curve \
and its truncating plane, curvc, (illustrated). The right-hand form is made \
up of two parts, and those parts can be expressed as\
\>", "Text",
 CellChangeTimes->{{3.771260123754479*^9, 3.7712602011518383`*^9}, {
  3.771260317071219*^9, 3.77126031728579*^9}, {3.771260807636876*^9, 
  3.7712609449225903`*^9}, {3.771261878807847*^9, 3.77126188812778*^9}, {
  3.771261921702511*^9, 3.771261933662335*^9}, {3.771266319657566*^9, 
  3.771266324047806*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"comp", "[", "t_", "]"}], "=", 
  RowBox[{"eF", "@@", 
   RowBox[{"curvc", "[", "t", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.771253232056555*^9, 3.771253241002939*^9}, {
  3.771253286371097*^9, 3.771253367439046*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{
    RowBox[{"-", "12"}], " ", 
    RowBox[{"Cos", "[", "t", "]"}], " ", 
    RowBox[{"Sin", "[", "t", "]"}]}], ",", 
   RowBox[{"64", " ", 
    SuperscriptBox[
     RowBox[{"Cos", "[", "t", "]"}], "3"], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "t", "]"}], "3"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.7712533297723494`*^9, 3.7712533686059847`*^9, 
  3.771260326155531*^9}]
}, Open  ]],

Cell["\<\
the above being the composition of the boundary curve function within the \
vector field function, and\
\>", "Text",
 CellChangeTimes->{{3.771260211370522*^9, 3.771260216167389*^9}, {
  3.7712616843087473`*^9, 3.771261707596458*^9}, {3.7712619561012287`*^9, 
  3.771261974068674*^9}, {3.771266332623354*^9, 3.771266335543269*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"curvc", "'"}], "[", "t", "]"}]], "Input",
 CellChangeTimes->{{3.7712602324735317`*^9, 3.771260239607229*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "2"}], " ", 
    RowBox[{"Sin", "[", "t", "]"}]}], ",", 
   RowBox[{"2", " ", 
    RowBox[{"Cos", "[", "t", "]"}]}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.7712602408077583`*^9, 3.771260330910562*^9}]
}, Open  ]],

Cell["\<\
the derivative of the boundary curve with respect to t. So let me try out the \
integration with\
\>", "Text",
 CellChangeTimes->{{3.7712603441092443`*^9, 3.771260349373115*^9}, {
  3.771261732419903*^9, 3.771261762435361*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", 
   RowBox[{"2", "\[Pi]"}]], 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{
       RowBox[{"-", "12"}], " ", 
       RowBox[{"Cos", "[", "t", "]"}], " ", 
       RowBox[{"Sin", "[", "t", "]"}]}], ",", 
      RowBox[{"64", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "t", "]"}], "3"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "t", "]"}], "3"]}]}], "}"}], ".", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"Sin", "[", "t", "]"}]}], ",", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", "t", "]"}]}], ",", "0"}], "}"}]}], 
   RowBox[{"\[DifferentialD]", "t"}]}]}]], "Input",
 CellChangeTimes->{{3.7712603713199244`*^9, 3.771260388975369*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.771260391063957*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["\<\
The answer above in green is the answer which Paul\[CloseCurlyQuote]s arrives \
at.\
\>", "Text",
 CellChangeTimes->{{3.7712604100130787`*^9, 3.771260432139638*^9}, {
  3.7712610994474363`*^9, 3.77126110134344*^9}, {3.7712612375594807`*^9, 
  3.771261246092863*^9}}],

Cell["\<\
******************************************************************************\
***********************
I\[CloseCurlyQuote]m going to do Paul\[CloseCurlyQuote]s example 2 also, \
since it may help out with problem 1.\
\>", "Text",
 CellChangeTimes->{{3.771266204477234*^9, 3.7712662374749117`*^9}, {
  3.771274162860846*^9, 3.771274176387032*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell["\<\
The function eF will be a dot-ee in the integral, but will not actually \
appear on stage. The only parts visible in the example are two triangles, one \
of which will be projected onto the other.\
\>", "Text",
 CellChangeTimes->{{3.77127725182239*^9, 3.771277280237577*^9}, 
   3.771278095762698*^9, {3.7712793374431133`*^9, 3.771279352409461*^9}, {
   3.771281377119073*^9, 3.771281385950749*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eF", "[", 
   RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], "=", 
  RowBox[{"{", 
   RowBox[{
    SuperscriptBox["z", "2"], ",", " ", 
    SuperscriptBox["y", "2"], ",", "x"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.77126635418305*^9, 3.771266368054201*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox["z", "2"], ",", 
   SuperscriptBox["y", "2"], ",", "x"}], "}"}]], "Output",
 CellChangeTimes->{3.7712663714345016`*^9, 3.7712664095072203`*^9, 
  3.771267047474374*^9, 3.771267411252976*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RGBColor", "[", 
        RowBox[{"0.5", ",", "0.9", ",", "1"}], "]"}], ",", 
       RowBox[{"Prism", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0.001"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0.001"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "0.001"}], "}"}]}], "}"}], "]"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RGBColor", "[", 
        RowBox[{"0.7", ",", "0.2", ",", "0.7"}], "]"}], ",", 
       RowBox[{"Prism", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.001", ",", "0.001", ",", "0.001"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.001", ",", "1", ",", "0.001"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1.001"}], "}"}]}], "}"}], "]"}]}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.771276059354925*^9, 3.771276148259055*^9}, {
  3.771276181787752*^9, 3.771276234000259*^9}, {3.771276520976366*^9, 
  3.771276662130169*^9}, {3.7712767188725777`*^9, 3.7712767814144163`*^9}, {
  3.771276891252623*^9, 3.771276895370726*^9}, {3.7712769382094*^9, 
  3.771277103076159*^9}, {3.771277139278153*^9, 3.771277156162225*^9}, {
  3.771277215506157*^9, 3.771277215872229*^9}}],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0.5, 0.9, 1], 
    PrismBox[{{0, 0, 0}, {1, 0, 0}, {0, 1, 0}, {0, 0, 0.001}, {1, 0, 0.001}, {
      0, 1, 0.001}}]}, 
   {RGBColor[0.7, 0.2, 0.7], 
    PrismBox[{{1, 0, 0}, {0, 1, 0}, {0, 0, 1}, {1.001, 0.001, 0.001}, {
      0.001, 1, 0.001}, {0, 0, 1.001}}]}},
  Axes->True,
  AxesLabel->{
    FormBox["x", TraditionalForm], 
    FormBox["y", TraditionalForm], 
    FormBox["z", TraditionalForm]},
  ImageSize->300,
  ViewPoint->{0.32675539431786105`, -3.241559929278724, 0.9140679062185141},
  ViewVertical->{0.06523706452078556, -0.34688704784861213`, 
   0.9357637534037987}]], "Output",
 CellChangeTimes->{{3.771277207131969*^9, 3.7712772166713123`*^9}}]
}, {2}]],

Cell[TextData[{
 "It appears that the function ",
 StyleBox["Curl ", "Input"],
 "will not work on the symbolic form of a vector field."
}], "Text",
 CellChangeTimes->{{3.771267697361774*^9, 3.771267717127878*^9}, {
  3.771279364784854*^9, 3.771279365968923*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"aa", "=", 
  RowBox[{"Curl", "[", 
   RowBox[{"eF", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7712663774842978`*^9, 3.771266388229607*^9}, {
  3.771266657733959*^9, 3.771266658972291*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["StructuredArray", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               
               RasterBox[{{{0.235431, 0.32765, 0.833291}, {0.235431, 0.32765, 
                0.833291}, {0.235431, 0.32765, 0.833291}}, {{0.235431, 
                0.32765, 0.833291}, {0.235431, 0.32765, 0.833291}, {0.235431, 
                0.32765, 0.833291}}, {{0.235431, 0.32765, 0.833291}, {
                0.235431, 0.32765, 0.833291}, {0.235431, 0.32765, 
                0.833291}}}, {{0, 0}, {3, 3}}, {0, 1}], AspectRatio -> 1, 
               Axes -> False, Frame -> False, FrameLabel -> {None, None}, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], 
               Method -> {
                "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                 Automatic, "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                 Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["SymmetrizedArray", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"3", ",", "3"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Symmetry: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"Antisymmetric", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "]"}], "SummaryItem"]}]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               
               RasterBox[{{{0.235431, 0.32765, 0.833291}, {0.235431, 0.32765, 
                0.833291}, {0.235431, 0.32765, 0.833291}}, {{0.235431, 
                0.32765, 0.833291}, {0.235431, 0.32765, 0.833291}, {0.235431, 
                0.32765, 0.833291}}, {{0.235431, 0.32765, 0.833291}, {
                0.235431, 0.32765, 0.833291}, {0.235431, 0.32765, 
                0.833291}}}, {{0, 0}, {3, 3}}, {0, 1}], AspectRatio -> 1, 
               Axes -> False, Frame -> False, FrameLabel -> {None, None}, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], 
               Method -> {
                "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                 Automatic, "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                 Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["SymmetrizedArray", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"3", ",", "3"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Symmetry: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"Antisymmetric", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "]"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Specified independent elements: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "StructuredArray[SymmetrizedArray, {3, 3}, <0,Antisymmetric[{1, 2}]>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.771266389461755*^9, 3.771266412687892*^9}, 
   3.7712666597673693`*^9, 3.771267050434342*^9, 3.7712673245418*^9, 
   3.7712674160829153`*^9},
 Background->RGBColor[1, 1, 0.85]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CurleF", "=", 
  RowBox[{"Normal", "[", "aa", "]"}]}]], "Input",
 CellChangeTimes->{{3.7712664957953243`*^9, 3.771266550447205*^9}, {
  3.771266650125847*^9, 3.771266663245483*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7712666637827377`*^9, 3.7712670616782207`*^9, 
  3.771267329450001*^9, 3.77126742663352*^9},
 Background->RGBColor[1, 1, 0.85]]
}, Open  ]],

Cell["\<\
But when the raw field is substituted as an argument, Mathematica comes up \
with the correct answer.\
\>", "Text",
 CellChangeTimes->{{3.771267757368001*^9, 3.77126778266955*^9}, {
  3.771277301532544*^9, 3.7712773045969048`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ab", "=", 
  RowBox[{"Curl", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SuperscriptBox["z", "2"], ",", " ", 
      SuperscriptBox["y", "2"], ",", "x"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.771267649261105*^9, 3.771267670153633*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"2", " ", "z"}]}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.771267672311615*^9}]
}, Open  ]],

Cell[TextData[{
 "I see that ",
 StyleBox["Grad", "Input"],
 " will not work on the symbolic form of the function expression either, so I \
have to use the specific descriptive form as an argument."
}], "Text",
 CellChangeTimes->{{3.77126880390827*^9, 3.7712688210345984`*^9}, {
  3.771268856929039*^9, 3.771268874520615*^9}, {3.771279392375931*^9, 
  3.771279394607993*^9}, {3.771325055967101*^9, 3.771325060454995*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grad", "[", 
  RowBox[{
   RowBox[{"z", "-", "1", "+", "x", "+", "y"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.771268193726956*^9, 3.771268201839465*^9}, 
   3.771268774295703*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.771268203339191*^9, 3.771268776181323*^9}]
}, Open  ]],

Cell["\<\
The primary curve S in this example (purple) is the triangle with vertices \
{1,0,0}, {0,1,0}, and {0,0,1}, and assuming the rotation or direction of \
travel is counterclockwise. The equation of the S plane is \
\>", "Text",
 CellChangeTimes->{{3.7712701848944817`*^9, 3.771270251514427*^9}, {
  3.771270371024091*^9, 3.77127037850217*^9}, {3.771277345203538*^9, 
  3.771277349067295*^9}, {3.771279413399386*^9, 3.771279414487317*^9}, {
  3.771348490035048*^9, 3.771348512238875*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "+", "y", "+", "z"}], "=", 
  RowBox[{
   RowBox[{"1", " ", "\[DoubleRightArrow]", " ", "z"}], "=", 
   RowBox[{
    RowBox[{"g", "[", 
     RowBox[{"x", ",", "y"}], "]"}], "=", 
    RowBox[{"1", "-", "x", "-", "y"}]}]}]}]], "Input",
 CellChangeTimes->{{3.771270383097692*^9, 3.7712704211410103`*^9}, {
  3.77127221532506*^9, 3.7712722161219482`*^9}}],

Cell["\<\
Catching up with a few equivalences from the example, not all of which \
contain Mathematica-compatible nomenclature,\
\>", "Text",
 CellChangeTimes->{{3.771269223638241*^9, 3.77126923945253*^9}, {
   3.771279446214232*^9, 3.77127946123783*^9}, 3.771279737100604*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[Integral]", "C"], 
   RowBox[{"eF", ".", 
    RowBox[{"\[DifferentialD]", 
     OverscriptBox["S", "\[RightVector]"]}]}]}], "=", 
  RowBox[{
   RowBox[{
    SubscriptBox["\[Integral]", "S"], 
    RowBox[{"\[Integral]", 
     RowBox[{
      RowBox[{"Curl", "[", 
       RowBox[{"eF", ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}], ".", 
      RowBox[{"\[DifferentialD]", 
       OverscriptBox["S", "\[RightVector]"]}]}]}]}], "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Integral]", "S"], 
     RowBox[{"\[Integral]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "z"}], "-", "1"}], ")"}], 
       RowBox[{
        OverscriptBox["j", "\[RightVector]"], ".", 
        RowBox[{"\[DifferentialD]", 
         OverscriptBox["S", "\[RightVector]"]}]}]}]}]}], "=", 
    RowBox[{
     SubscriptBox["\[Integral]", "D"], 
     RowBox[{"\[Integral]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "z"}], "-", "1"}], ")"}], 
       RowBox[{
        OverscriptBox["j", "\[RightVector]"], ".", 
        RowBox[{"Grad", "[", 
         RowBox[{
          RowBox[{"z", "-", "1", "+", "x", "+", "y"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], 
       RowBox[{"\[DifferentialD]", "A"}]}]}]}]}]}]}]], "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.771269248147241*^9, 3.771269463109232*^9}, {
   3.771269513165262*^9, 3.7712695256993647`*^9}, 3.771272333705469*^9}],

Cell["\<\
I can change the format on one value and plug in another one to prepare the \
internal environment of the integral. The dot product dots the curl of the \
external function with the grad of the primary curve.\
\>", "Text",
 CellChangeTimes->{{3.771269591993926*^9, 3.771269595976543*^9}, {
  3.7712723510853977`*^9, 3.771272366516873*^9}, {3.771279492932641*^9, 
  3.771279508524222*^9}, {3.771279553130937*^9, 3.771279601401115*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"0", ",", 
    RowBox[{
     RowBox[{"2", "z"}], "-", "1"}], ",", "0"}], "}"}], ".", 
  RowBox[{"{", 
   RowBox[{"1", ",", "1", ",", "1"}], "}"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"curl", " ", "F", " ", "dot", " ", "grad", " ", "S"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.771348550036717*^9, 3.771348570323745*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1"}], "+", 
  RowBox[{"2", " ", "z"}]}]], "Output",
 CellChangeTimes->{3.77127239396307*^9}]
}, Open  ]],

Cell["\<\
Then I change form of curl-F-dot-grad-S by substitution to reduce variables \
to the space dimension of C \
\>", "Text",
 CellChangeTimes->{{3.771348742022904*^9, 3.7713488225738*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"2", " ", "z"}]}], ")"}], "/.", 
  RowBox[{"z", "\[Rule]", 
   RowBox[{"(", 
    RowBox[{"1", "-", "x", "-", "y"}], ")"}], " "}]}]], "Input",
 CellChangeTimes->{{3.771272531185117*^9, 3.771272552511318*^9}, {
  3.7713486345679913`*^9, 3.771348738347927*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1"}], "+", 
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", "x", "-", "y"}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.771272553952241*^9, 3.771348724113736*^9}]
}, Open  ]],

Cell["The remaining work is in the following form.", "Text",
 CellChangeTimes->{{3.771348861555681*^9, 3.771348868595284*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[Integral]", "D"], 
   RowBox[{"\[Integral]", 
    RowBox[{"-", "1"}]}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", "x", "-", "y"}], ")"}], 
   RowBox[{"\[DifferentialD]", "A"}]}]}]], "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.7712696123779783`*^9, 3.771269650078961*^9}, 
   3.771272617248168*^9}],

Cell["\<\
The curve C in example 2 is a very simplistic one, with the projection of the \
primary curve onto the xy-plane acting as a cut-off boundary. The region D \
must be described correctly in order for the integral to work.\
\>", "Text",
 CellChangeTimes->{{3.771274652676868*^9, 3.771274710249611*^9}, {
  3.771276257208661*^9, 3.771276320901042*^9}, {3.771277361530492*^9, 
  3.771277364747005*^9}, {3.771278175448077*^9, 3.771278178264161*^9}, {
  3.771279648519638*^9, 3.771279673911021*^9}, {3.771279757916203*^9, 
  3.771279759516107*^9}, {3.771348878866865*^9, 3.771348889546022*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RGBColor", "[", 
        RowBox[{"0.2", ",", "0.7", ",", "0.9"}], "]"}], ",", 
       RowBox[{"Thickness", "[", "0.02", "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"1", "-", "x"}], ",", "Medium"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.58", ",", "0.58"}], "}"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<boundary curve\>\"", ",", "Medium"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.5", ",", "1.3"}], "}"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<in xy-plane\>\"", ",", "Medium"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.5", ",", "1.15"}], "}"}]}], "]"}], "}"}]}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "100"}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"ImagePadding", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"10", ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"15", ",", "15"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.771277396238967*^9, 3.771277599163389*^9}, {
  3.7712776491010027`*^9, 3.771277678665154*^9}, {3.771277716073516*^9, 
  3.771277905297553*^9}, {3.771278209959586*^9, 3.7712783600507727`*^9}, {
  3.771278397602831*^9, 3.771278434400235*^9}, {3.771278587508807*^9, 
  3.771278588187182*^9}, {3.77127862186826*^9, 3.77127887696189*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.2, 0.7, 0.9], Thickness[0.02], 
    LineBox[{{0, 0}, {1, 0}, {0, 1}, {0, 0}}]}, InsetBox[
    StyleBox[
     RowBox[{"1", "-", "x"}],
     StripOnInput->False,
     FontSize->Medium], {0.58, 0.58}], InsetBox[
    StyleBox["\<\"boundary curve\"\>",
     StripOnInput->False,
     FontSize->Medium], {0.5, 1.3}], InsetBox[
    StyleBox["\<\"in xy-plane\"\>",
     StripOnInput->False,
     FontSize->Medium], {0.5, 1.15}]},
  Axes->True,
  ImagePadding->{{10, 10}, {15, 15}},
  ImageSize->100,
  Ticks->{{{0, 
      FormBox["0", TraditionalForm]}, {1, 
      FormBox["1", TraditionalForm]}}, {{0, 
      FormBox["0", TraditionalForm]}, {1, 
      FormBox["1", TraditionalForm]}}}]], "Output",
 CellChangeTimes->{{3.7712787353828087`*^9, 3.771278781386731*^9}, {
  3.771278817275524*^9, 3.771278877833252*^9}}]
}, {2}]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "1"], 
  RowBox[{
   SubsuperscriptBox["\[Integral]", "0", 
    RowBox[{"1", "-", "x"}]], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "x", "-", "y"}], ")"}]}]}], ")"}], 
    RowBox[{"\[DifferentialD]", "y"}], 
    RowBox[{"\[DifferentialD]", "x"}]}]}]}]], "Input",
 CellChangeTimes->{{3.771278932142145*^9, 3.771278975477661*^9}, {
  3.7712790093655*^9, 3.771279014668519*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["1", "6"]}]], "Output",
 CellChangeTimes->{3.771279016346895*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["\<\
The above green cell shows the correct answer to Paul\[CloseCurlyQuote]s \
example 2.\
\>", "Text",
 CellChangeTimes->{{3.771279251405682*^9, 3.7712792778199368`*^9}}],

Cell[TextData[{
 StyleBox["1 - 10 Direct integration of surface integrals",
  FontWeight->"Bold"],
 "\nEvaluate the surface integral ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["\[Integral]", "S"], 
   RowBox[{"\[Integral]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"curl", " ", "F"}], ")"}], ".", "n"}], 
     RowBox[{"\[DifferentialD]", "A"}]}]}]}]]],
 " directly for the given F and S."
}], "Text",
 CellChangeTimes->{{3.769089523998581*^9, 3.769089637224659*^9}},
 Background->RGBColor[
  0.9600061036087587, 0.9600061036087587, 0.9600061036087587]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"1.", "  ", "F"}], "=", 
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["z", "2"], ",", 
     RowBox[{"-", 
      SuperscriptBox["x", "2"]}], ",", "0"}], "}"}]}], ",", " ", 
  RowBox[{
  "S", " ", "the", " ", "rectangle", " ", "with", " ", "vertices", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
  RowBox[{"{", 
   RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
  RowBox[{"{", 
   RowBox[{"0", ",", "4", ",", "4"}], "}"}], ",", 
  RowBox[{"{", 
   RowBox[{"1", ",", "4", ",", "4"}], "}"}]}]], "Text",
 CellChangeTimes->{{3.769089651377276*^9, 3.769089657199839*^9}, {
  3.7690897377329397`*^9, 3.7690897859450293`*^9}, {3.769089823216421*^9, 
  3.769089832416027*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.707409579428261*^9, 3.7074095811482058`*^9}, 
   3.76908943841496*^9}],

Cell["\<\
The function eF is one which we assume we need to incorporate into an \
integral, but which does not actually appear physically.\
\>", "Text",
 CellChangeTimes->{{3.771281033075186*^9, 3.771281074152837*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eF", "[", 
   RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], "=", 
  RowBox[{"{", 
   RowBox[{
    SuperscriptBox["z", "2"], ",", 
    RowBox[{"-", 
     SuperscriptBox["x", "2"]}], ",", "0"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.771263732533535*^9, 3.7712637495755367`*^9}, {
  3.771264057619399*^9, 3.77126407784261*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox["z", "2"], ",", 
   RowBox[{"-", 
    SuperscriptBox["x", "2"]}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.7712640806920557`*^9}]
}, Open  ]],

Cell["\<\
After some experimentation, I came up with a parametric expression for the \
rectangle defined by the four points in the problem description. The \
following plots show that the points, the parametric plane equation, and the \
cartesian system equation are understood.\
\>", "Text",
 CellChangeTimes->{{3.771281079496614*^9, 3.771281125311201*^9}, 
   3.771281192374567*^9, {3.7713496487454853`*^9, 3.771349676326723*^9}, {
   3.771421844573518*^9, 3.7714218485733128`*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"r2", "=", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
          RowBox[{"Point", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
          RowBox[{"Point", "[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0"}], "}"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
          RowBox[{"Point", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "4", ",", "4"}], "}"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
          RowBox[{"Point", "[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "4", ",", "4"}], "}"}], "]"}]}], "}"}]}], "}"}],
       "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p3", "=", 
     RowBox[{"ParametricPlot3D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"u", "+", "1"}], ",", 
         RowBox[{
          RowBox[{"4", " ", "v"}], "+", "4"}], ",", 
         RowBox[{
          RowBox[{"4", " ", "v"}], "+", "4"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"u", ",", 
         RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"v", ",", 
         RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}]}], ";"}]}]}]], "Input",\

 CellChangeTimes->{{3.707409584677772*^9, 3.707409741525716*^9}, {
   3.7074263094830217`*^9, 3.707426338170018*^9}, {3.771189731672847*^9, 
   3.771189746888714*^9}, {3.77118982573587*^9, 3.771189924042665*^9}, {
   3.771189985563161*^9, 3.771190032328967*^9}, {3.771190087477283*^9, 
   3.771190152314953*^9}, {3.771190193067367*^9, 3.771190229856577*^9}, {
   3.7711902647771397`*^9, 3.7711902935666513`*^9}, 3.771280978085003*^9, 
   3.771281163010106*^9, {3.7712811996640673`*^9, 3.771281250443554*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p4", "=", 
   RowBox[{"ContourPlot3D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], "y"}], "+", 
       RowBox[{"4", "z"}]}], "\[Equal]", "0"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", "0", ",", "4"}], "}"}], ",", 
     RowBox[{"ContourStyle", "\[Rule]", "Red"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.77134943535826*^9, 3.7713494987387*^9}, {
  3.77134960226053*^9, 3.7713496195380583`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"r2", ",", "p3", ",", "p4", ",", " ", 
   RowBox[{"BoxRatios", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "150"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "4"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.771280122419963*^9, 3.7712801263854322`*^9}, {
   3.771280340185402*^9, 3.771280340392921*^9}, 3.7712804321373167`*^9, {
   3.7712804915657883`*^9, 3.7712805048999567`*^9}, {3.771280891271503*^9, 
   3.7712809121264753`*^9}, {3.771349503512375*^9, 3.771349565125087*^9}}],

Cell[BoxData[
 Graphics3DBox[{{
    {PointSize[0.03], Point3DBox[{0, 0, 0}]}, 
    {PointSize[0.03], Point3DBox[{1, 0, 0}]}, 
    {PointSize[0.03], Point3DBox[{0, 4, 4}]}, 
    {PointSize[0.03], Point3DBox[{1, 4, 4}]}}, 
   GraphicsComplex3DBox[CompressedData["
1:eJyFnH3QXFV9xzd5yBshQSkUMsWWtisqhUAaVOoozyWDCQt0Wp0pA0iG8NIp
UjcwBOYRhnFanGYYSRpZHBGJEfICWuo0kzKL8RGJCBYi0IQkkLiAIWlCyAsR
xQjhZTt5zu9zOnzO3Cn/fIcPh93f/ex9zt39nXPvn15+zef/fnSj0ThpTKMx
0Dj0zz89dOvJ885MeUfOq6aeedeHW6sGzf9915Z+s/VowZs/Onr6Q+1fFPyZ
xz/yn83WswX/2tTHn2r3niv4zDsv39lt9wo+aqTWrQW/9MFnFjRb2wr+8FXf
mdLq/E/B/+hDX7qv3dtZ8BvXf2p6p/lqwZ//lwlruu09Bf/4pzaf3+vuK/jt
r923pd/fX3A8J6/PDr4/Vw2a49kcz+Z4NsezOZ7N8WyOZ3M8m+PZHM/meDbH
szmezfGc/G0bJPFsjmdzPJvj2RzP5ng2x7M5ns3xbI5nczyb49kcz+Z4Nsdz
8rRnkMSzOZ7N8WyOZ3M8m+PZHM/meDbHszmezfFsjmdzPJvj2RzPycdvBkk8
m+PZHM/meDbHszmezfFsjmdzPJvj2RzP5ng2x7M5ns3xnI77wCCJZ3M8m+PZ
HM/meDbHszmezfFsjmdzPJvj2RzP5ng2x7M5ntPxvT1I4tkcz+Z4NsezOZ7N
8WyOZ3M8m+PZHM/meDbHszmezfFsjud0HI2KxLM5ns3xbI5nczyb49kcz+Z4
NsezOZ7N8WyOZ3M8m+PZHM+p3tEViWdzPJvj2RzP5ng2x7M5ns3xbI5nczyb
49kcz+Z4NsezOZ5TXYdVJJ7N8WyOZ3M8m+PZHM/meDbHszmezfFsjmdzPJvj
2RzP5nhO7z+2IvFsjmdzPJvj2RzP5ng2x7M5ns3xbI5nczyb49kcz+Z4Nsdz
ep8JFYlnczyb49kcz+Z4NsezOZ7N8WyOZ3M8m+PZHM/meDbHszme0+tNrEg8
m+PZHM/meDbHszmezfFsjmdzPJvj2RzP5ng2x7M5ns3xnP6/SRWJZ3M8m+PZ
HM/meDbHszmezfFsjmdzPJvj2RzP5ng2x7M5ntN/P7Ii8WyOZ3M8m+PZHM/m
eDbHszmezfFsjmdzPJvj2RzP5ng237p67FMntpYOpnw0J/7Nr/jG4B3t3mvF
eF7fnNdP/9/kiuT1zXn9Ol5Xv/uQjDdnfJ0fv++adXdO+1irM5hyVc6bzprX
7bb3F5zx6b8fWb0/9xccD3Wv7/p5/br6/fqMr+vf+n2pp65+v+/4m645YlRj
ZdGfPP/0ifMajTXF+8I9/hsPvHRpo/FEMR7u8XM/eNGJjca6Yjzc4496+tHj
G42NxXi4x3dvPfkPGo3NxXi4x1989jcnNBovFOPf6x/651cFZ7xfh/Hm6188
/e1+/+XideAev2z4iwf6/e3FeLjH33DXktf7/R3FeLjHzxrasLfff6UYD/f4
KX83fle/X647wD1+z19+Znu/X65HwIv+/Aeue6nfL9cp4B7Peet+L+enOeeh
OeebOeeVOeePOeeDOeeDOZ+7OZ+vOZ+jOZ+XOZ+LOf6Lvn14Nsez+714Nsez
OZ7N8WyOZ3M8m+PZHM/meDbHszmezfFsjueibx+ezfHsfi+ezfFsjmdzPJvj
2RzP5ng2x7M5ns3xbI5nczyb47no24dnczy734tnczyb49kcz+Z4NsezOZ7N
8WyOZ3M8m+PZHM/meC769uHZHM/u9+LZHM/meDbHszmezfFsjmdzPJvj2RzP
5ng2x7M5nou+fXg2x7P7vXg2x7M5ns3xbI5nczyb49kcz+Z4NsezOZ7N8WyO
56JvH57N8ex+L57N8WyOZ3M8m+PZHM/meDbHszmezfFsjmdzPJvjuejbh2dz
PLvfi2dzPJvj2RzP5ng2x7M5ns3xbI5nczyb49kcz+Z4Lvr24dkcz+734tkc
z+Z4NsezOZ7N8WyOZ3M8m+PZHM/meDbHszmei759eDbHs/u9eDbHszmezfFs
jmdzPJvj2RzP5ng2x7M5ns3xbI7nom8fns3x7H4vns3xbI5nczyb49kcz+Z4
NsezOZ7N8WyOZ3M8m+O56NuHZ3M8u9+LZ3M8m+PZHM/meDbHszmezfFsjmdz
PJvj2RzP5ngu+vbh2RzP7tfh2RzP5ng2x7M5ns3xbI5nczyb49kcz+Z4Nsez
OZ7r+pwp1+XE59/edlb/h+1f5MTn1/9s+Y5rej/Pic910R8n8XnC0mevHG4P
58TnPdGfJfFZvbf6nVNaS3Pi88Loc12o/uGbN6a6SXyeFnWT+Lw26ibxuTLq
JvG59d5UN4nPOVE3ic+b//W61Z3myznxmXJrTnye8eCsi17ovpgTn5v7X37q
oXYvJz6/fN6/Dd7R3JITn8fd2Vs1t/dcTnz+cNsRJ57b2ZgTn8ujn7Vc/bfr
o24Sn2dH3SQ+Pxp1k/h8Iuomc1806ibxOT7qJpkHVkbdJJ7fuPQHe5ut3Tnx
/NiYmfcdWl8i8ZxyV048X/m5oSlzeztz4vn03x+5odfdkRPPh33newsOrXeR
eN4446yZD7W358Tz8dHPOl79t71RN4nnH0fdJJ4XRN0kni+Jukk8nxx1k3h+
Z3Gqm8TzuqibxHP3uDcW9bqv58Tzkn9c86VO8/WceJ7/kwWtVufXOfGc8tc5
cz/5iXPHzu29lhPPN8/d/sihdT8Sz+cfffONrc7enHheG/2steq/rYq6STx/
O+om8XxL1E3i+eqom8Tz8qibxPP1UTeJ53OibhLP1/3z7d9vtg7kxPPFG2fP
73V/lxPPMz5y0hWd5u9y4vmkmw4Mtjpv5MRzyjdy4vngnyx6q9v+bU48b7vu
C8+1e7/Jief50c+ar/7b3KibxPMFUTeJ5zOjbhLPJ0bdJJ4nR90kng9E3SSe
t0bdJJ6n7p76s3bvYE48/+Fn3v5us3UwJ57fW/RfN/e6b+XE885td1zUab6V
M/eTPz7nE63OmznxnPLNnHhe0ntzf7f9+5x4nhH9rBnqv50UdZN4PirqJvF8
MOom8bwt6ibxvDbqJvG8Kuom8bw46ibxvPvzT73Qbfdz4vnZFd9a3e69lxPP
P3rzym82W+/lxPPS86bN63XfzZn7yUve/ZtO892ceL7u9SdPbnXeyYnnlO/k
xHPKfk4874y6ydy3j7pJPHejbhLPS6JuEs/zo24Sz3OjbhLPF0bdJJ43jNQ7
qiLxPGvc3V/sdUdVJJ6HTxu1udseVZF4PvXif5jZaY6qSDwv++rTD7Z7jYrE
87E/mP7nrU6jIvF823N33d5sNSoSz7OjnzVb/bf1UTeJ589G3SSeV0fdJJ5P
ibpJPN8bdZN4PibqJnPfPuom8TytM3Brs3VYReJ5xUi9AxWJ5yk7/vvKXneg
IvG8cPInNnTbAxWZ+8lnLD6r0xyoSDzfcNnole3e6IrE86tfu+qPW53RFYnn
4ehnDav/dmrUTeJ5WdRN4vnYqJvE821RN4nn/idT3SSe50XdJJ53Rd0knhfN
fPboVmdsReJ54Nozvtpsja1IPA+N1DumIvG859HD5vS6Yyoy95P3Xv1Mtz2m
IvG84Zj1n+40x1QknmcNfvKBdu+wisTzFPpi6r8tjLrJ3LePukk83xB1k3h+
Neom8Tw76ibxvD7qJvP6SNRN4nnfwXvubffGVySeL2uO+0CrM74i8bzpr9tf
abbGVySeWyP1jqvI3E++56++0OuOq0g8T1v73Se77XEViecVvx1zRqc5riLx
PBT9rCH13/ZE3WTu20fdJJ43RN0knmdF3SSeh6NuEs+nRt0knpdH3SSez/uP
a6Z2mhMrEs+PbN60uN07vCLxPH30pye2OodXJJ7v/4ulNzZbh1dk7ieP1Duh
IvG86CtzL+h1J1Qknge+t/GxbntCReJ5U/SzNqn/1oq6ydy3j7pJPE+Lukk8
r4i6STxPibpJPC+Mukk8j466STx//4ozh7vtSRWJ5w8tXP6xTnNSRea+UPfw
b7V7R1QknsdsvXZsq3NEReZ+8oTnr2+2jqhIPO8bqXdiReL5skuWfa7XnViR
eJ4e/azp6r/dH3WTuW8fdZN4XhR1k3geiLpJPA9F3SSe90TdJJ7nRN0knscc
N+mcXvfIisx9+9hXR+J539Vbmp3mkRWJ58tjPyKJ5+ceXjGq1ZlckXg+95WJ
1zZbkysSz4+M1DupIvG8KPpci9R/G4i6STwPRd0knvdE3SSe50TdJJ43Rt0k
ns+Jukl8rok+F5n3fcW/N8RPiD7dCe/r260c/GkcP5nXud737//Hx8fxk/C6
PmHdcwbcP2S/pTn7mc3Zz2zOfmZz9jObs5/ZnP3M5uxnNmc/szn7mc3Zz2zO
fmZz9jOb49N9Qnya49Mcn+b4NMenOT7N8WmOT3N8muPTHJ/m+DTHpzn7gc3x
7H4gns3xbI5nczyb49kcz+Z4NsezOZ7N8WyOZ3M8m+PZHM/meHbfD8/meDbH
szmezfFsjmdzPJvj2RzP5ng2x7M5ns3xbI5nczy7v4dnczyb49kcz+Z4Nsez
OZ7N8WyOZ3M8m+PZHM/meDbHszme3cfDszmezfFsjmdzPJvj2RzP5ng2x7M5
ns3xbI5nczyb49kcz+7Xwd2vw7/Hwz2ez8Xj4R7P5+XxcI/nc/R4uMfz+Xo8
3OP53D0e7vGcDx4P93jOE4+Hezznj8fDPZ7zyuPhHs/55vFwj+c89Hi4x3N+
ejzc4zlvPR7u8Zy37nNyfppzHppzvplzXplz/phznphzPpjzuZvz+ZrzOZrz
eZnzuZjj3xzP5nh2PxPP5ng2x7M5ns3xbI5nczyb49kcz+Z4NsezOZ7N8WyO
Z3M8u2+JZ3M8m+PZHM/meDbHszmezfFsjmdzPJvj2RzP5ng2x7M5nt2fxLM5
ns3xbI5nczyb49kcz+Z4NsezOZ7N8WyOZ3M8m+PZHM/uQ+LZHM/meDbHszme
zfFsjmdzPJvj2RzP5ng2x7M5ns3xbI5n9xvxbI5nczyb49kcz+Z4NsezOZ6L
fml4NsezOZ7N8WyOZ3M8m+fn6qjvl5+rI56fqyOen6sjnp+rI56fqyOen6sj
np+r4/4kz9URz8/VEc/P1RHPz9URz8/VEc/P1RFP+/h+WvTr0r6ztQVP+6TW
Fzzt6yn7lmkfyi8LviH61eZp/bnsT6b10rI/mdb3dhU8rUeV/cm0flL2J1O/
f3/B0z67J4s+W9oXtr7gaR/TpoKnfTe/LPiK6M+bp3Xgsn+Y1i13FTyts+0u
eFoXKvuHN8bzAczTvrZ1Rb8r7cPaVPC0b2hLwYdifcE8ra/uKnhaD9xd9t9G
1n/2Fjytt5R9ubQvbGPRR0r7mLYUvBXrHeZpHXJ3wdO62d6CXx7Pryj6eCP7
jDaXfZ5YTyn6PCPrV3sLntaLXiv4vlh/cZ8hrSO9VvALa/oMy2v6A8fX9AHW
1vzen1/zu35Gze/32TW/u4drfl9PqfkdPVTze3lTze/i6TW/f38S60T+/buo
5vfv9TF/+vfa3pg/zVfF/Gk+N+ZP85Ni/jQ/NeZJ84UxT5rviXnSvBXzpPn9
MU+aD8Q8af7jmCf9e+rbMU+aXxDzpPlRMU8WvytjPix+V8Z8WPyujPmw+F0Z
86H5UMyH5rfEfOjfL2fGfGh+MOZD8w0x75lPi3nPfFHMe+Z7Y94zPzHmPX//
3xbznvmKmN/MB2J+M58T85v52pjf/H14KOYx840xj5mfE/OVv++ldeNbiuvy
GtZ5xfmeU6zbxuv4+09+fqP4+DjPzdN+z18Vr5/uI3mguJ6mfaAvFTztW3y5
4Om+k/uK61q6f+Lhgqf9pC8VPO1/fLngab/e9oKvi+cs+fqV7s8YLni6n+Dn
BU/7WF8seNp3+XLB0z7B7QVP+9p2FDzdZ3N3cR1M94usLni6v+Hxgqf9+M+U
6z4j+1VfLHjaH1qu76T9jNvLdZ+R/Ws7ynWfkf1WrxT8nnjuk6/X6X6XbsHT
/RmPFTzdT/B0wdP+9w0FT/uIXyh42vdarrOkfZrlOkvaV7ij4Gkf3CsFT/u2
ynWWKv5Off1N9/c8WPB0P8rPCp7un3iq4Gm/f7l+kfanP1/wtM+3XF9I+1LL
dYS0j7JcL0j7/l4peNqnVvb/076qss+f7gNbWVx/d8a8ZH5azEu+rp0d+5qK
PnDMV+afjfnK/NqYr3w9+mjMV+YLYt+UeTfmMfPVMY+ZHxvzmPnKmMd8nXoi
5jHzS2IeM7869nGZL4n5zfyUmN/Mb4v5zfzVmN/M0314d5f9pZjfzE+O+c18
ecxv5pNjH5r5/Jj3zO+Nec887YPeXvDZMe+ZD8e8Zz4n5j1f98fHvGee7ut6
rODXx7xnfiDmPfNVse/OfG7Mh+bHxHxoPi/mQ/P1MR+anxrzofnCmA/NV8a8
5+8h62LeMz8n5j3zrTHvmS+Oec/8Qp6D4f5YzIfmu2I+LPpmMR+aL4/50Hx0
zIfmc2I+ND+B54eIs2/T39PYt2nOvk1z9m0WfbA4f8zZt2m+vqbfxf5Mc/Zn
mrM/05z9meb5/tMaD/7+iQdzPJjjoeiDcT+j+LKafhfHW3xPjuM153jNOd5i
n178Xqg7Xn8f5njNOV5zjtf8hpo+GMdVfD+P4zLnuIp9cXFcdfX7+zP1m1O/
+aya/hh1Ft/buc/L+8qizrp6/H2Yesyn1PTNeN/i+3a8b93r+/vnnpp+Gq9j
zv5h94WYf8zzfZfinIfmfI7meDPnuMyZf8z5ezTnvDXnfCj6cvG5mOPTHJ/F
vprgdT79/RafRT8tfJrj0xyf5visu4/PHG/meDPHW9Gv474n70sJP3Ue/P0c
D0WfjfsfxfFgjoe6++nMOV5zjtec4y36eHG8dcfl7/8cV/H7gvsNxTmuuvvU
zKnfnPqLfRdRf12d/v5Pneb5fr2a+7nMqafYnxD11L2vv5/zvnX3MRXr8vH6
da9Tdz+Oefq7L/tszLe+jjPenHnPnNfxdZN5pljnitc35/XNmR/MeV9fB3lf
c/6uzanHPD+vQJx6zPn7NadOXzep05w6zfk7Nad+c+ov+m88B0Cc+s35+zXP
z/3QdZzjMue4zDkuc/6uzTlec47XnOMt+m/cjy/O8ZozP9R9byn6ZjyXQxwP
5ngwx4M580zd8wrM8WOOH3P8FH258GOOH3PmN3O8+fpL/eaM9/ULz+a8jjke
zHl9X194fXM+R3Pe15z3Nce/OfX4+pKf2yBOPeacV+bUaU6d5tRpznliTv2+
flG/eX4egjj1m/N3Yc5xmXNc5hyXOcdlzvlvzvH6+svxmnO8Rd+M5xKIc7zm
zAN11/2in8Z98eJ4MM/3t4rjwZx5oOhD/j/9JfP8fFrx/Hxa8fw8AfH8fFrx
/HxacbyZ5+fTiuf73MXz82nF8/NpxfPzacXz82nr7s/V97r/BX2p5iA=
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[2], EdgeForm[
       None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
S443Q5G26J7Uu0LfLTnHekZ7NDm/uTI4lnZkTpvgeNtJ75M5/ZPzudHob5Rt
oh8Dd9NehCsF5w5VZW/M75Qcq0bB1yTHp6fgjslxbox8SXJ+Nhq+Ljl3GSc/
lJy7jIQ7JMfI8sHx8FCu/yT69slx8YDg2F1Z+mK/aI+cqByzZDuuKT9R8r0q
z5nCWJ452+Brk2O88oGtis/IBmSLQ3L2O7IZ+Qk5BMUGrXnmdRmgXBauhu5v
5MTM+dgMrl8ps/9Vjqj8cBOyA/mluJ6uu7rQb0NmFXH/s9x+Qzne9NzPOyvY
FhbCs4PXeRE8J9heFsNT4cfh7+C1ug739yTHXwX7X/neb4LryDnF7+peViKT
FSPRfwtPgR+Fp8NfKkbCM+Bvg2vZufDcYPtaAn8XbIPzi+faXryrecF2vRSe
EVzHzIOnB9e1P8A/BO+DH4t3vkb+qeBfi+NdmLM0eL0Ul2fnriW1H7/JnZ9r
X0zLnf/Lnr/Onf/L9ibnrim0Z7+FqxX2+UXuHF57YVbumld2vovsNXO83pG7
fvkSrqo8JnN9dwzSM3Ptspb3/L/cNeausqfMNjwzdw4sm5+Uu5bZAX+ZbCuy
vUnJ9qS4tiB3ra24Nj93XayY+HPuHoXyqEVwfdkmfGVyDqo8YWHu2lxxc1nu
voTi4Fq4WeY4uDp3T0D77qvcdZD23dTcdZDs/7fMObHyjXm5a3zFzVW5a3PF
2TW5c/V/9D65hz04/oPj+cH585Zi/X4uZEOxpqr9V+bO8XRuz+S+QP3ga5yV
uY+xHj4lc623OLdfVRK9IncOpvpxCVw9c89hee59pzw/RedRR6jWjK7HD4fr
Kp+Aq8Ajkcaccxu/24SxV+Y6ohSdp6muidG5nGqNH3P7c/Vb1uXO69SH2ZA7
d23GdQ6SD4Z3Qt87ua+kPtK2IjdQf2lr8YzqI/1a5A+qPefm9pl7o++XXCOp
nsqjr9mS6x+Drl3mftTG3Pmz6p1/cuefVeFTo59Ftc/fufNn9X/+gs/JXHP9
mzsnV531Z+4850j4eeRSjgfwW5cxDslcc+0UnaO+prha7OUR6DYghxSsPFM1
VDnOfYk5e8p+lDvkrqG2Fra1trD/7sl1/rrCB8n/rC98x6pi38tmQuFLNhf/
38i5m7RvM/tLnatr7Ch4VvEb+q3lhS2L5c9VL2zJXXtO48Ij4Nnw18H5sXyj
+mC7Rdc46mPsHV13qB+1Z3R9pD7GftG1j+rTfaLrHfXT9oBbwdcG+4NumWvt
A6LX7jCtreJc5j7DnNxxRHX9wdE1l551dfEeKqE/JLrWqKwcIDoWV5R9Rddl
h6qeiI7Xsr05ybaoWun33L0+1Wh/wC2La25M7mtpj2xP7j+2De5jye9dHdy7
6lzc85bk3pZ+a1NyH6xDcE+rS3Fvm5N7Yp2Ce0iqR7oG9zh7wNcF95G6Fftx
W3Kv88bgnuit6K8J3peqQToG9+RU47QP7smpjuge3PeS7705uC94Z/FO1if3
A49W7pBc994T3A/rX+yR35J7WLcG27tqpfuLvFr9qweCc/CH4eNkp8m5dTXt
qeTc/ZbgPpx6yP2C8+VB8A3B/U7VTX2Dc/AH4WOUZyXnXv3Rd2AcjL5PcI7/
ANwluIenuun64B6naqvOwX041Vanyg5Lzl+byK5KjtlnwxVKjtlNZRslx+xm
soWSc4L6ss+S8+nq8hvJ9UAt+bqS64Ta8p8l59DHp+y/RofyvBryG8n58QdF
LqFa4Dm4D/wK/Ah8M/wUPDw4dx4JDwvOnUfAPYL7haq5GnO98iX35T8MzlM+
R38m+n1LzsvP0P4qOXcfHFyvPMKcQcH1ynD4weD6aRh8uvZsybVBA7hsybXB
K8E1ynjmnIK+TMm1xHj0D+v30TdEXw79UI7vja5PVV+cpf1ecu/speA6SLXY
aej3KrnGeDm4Hnorc6+4SrTNH8WcHcn9pjuDe7F9Crs6N9rHHgu/kWwTsttG
0f1/ndsYHpg5d20RnbfLDs+L7sHKrppEfzvQGl0S3dfS+l4KP5a51ngwOn9T
rTEoOj9UrTo+d99JufQnuXNUPdcN0XWfbOCy6N7Ro9x/R+Y8DY+Fb4FfzdzD
vCY6/5ctXRE95wT4vWSbUB5+ZXTNq3z+89w9ScW7H5Njm2yvdXQNq/5nB3hc
5r5o++i6Vf3VjtE12tvcQ1/O+wiuh/6jZFtUHXSf8sLMNt85+j61d7pE14ay
geuj62L1aTtF1zKqv+6PzoFVQz0QnQOrX/R27r6cvsv0ja4lte/ujK5JtR97
Rteqsu07ou9NNnxLdD2rfn6/6HpT+/Su6DpU34n6RNew+tYj+5Pt9Qzu098L
3x38TaBfZtvuHl0v3xXc1+8r2wveT3p27f27o+vficF2rTrljuBefe9iv9zM
nHeKfdcjuk5X3+y93D1P1a0f5+69q5b8KHe/XX22d3P3G9U3eyd3T1L9tA9z
98nVy/ogd+9d/bcJufvSyl0nJuf02ne3RfcEtNduje4JqLbtH92vbgR/mrxX
Z6peZVyQuUYeyJxp8CT0w3KzvtEcER1TFNsHR8d39VWaRvsi9ZOW5q7Nlbe+
mTt31bePmtHvXP3S66L9g76z1Ip+z/qG0iA6RiimHR/9PhVDzo+uPWX/ecn7
RDXC/tE9NPXT1BxWr1J9krbRfkPfB+sgAzLnqFuTc1Pd50+5e1/q1VwU/S1A
Nr97yXtAv9s8On4p7xic/JvyLX8m71t9Vzor2n+q13RBdH9YPagLo79N6JvR
GdG+VN/aToj2V+qBtIz+ZqFvSWdG+171i86J9vl6DzWi47u+b54YHXPVj2oW
HQv0TbB2tA3rW1VD5NHMvaOrtccy93E3Fc+rOr5N8T7ld7tG+17V+hNz1/ua
vzn3+1Q/UXmd8kl9Izs5OrbK3k8r1ki2tH/JtqL+1U3IpMx9mu+Ka+r6nxb2
oDq6d3TvTjmtbGVZ5j5Yt+iYpdxYdqacTb2jVtExUX22i5GxhY2pH6hzFT/v
iY6h+t3vCztUT69ddJzSPZ9erKny81+T83J9dzslOn/Qt9F60TmG1r1C8f71
rbB+dE7yf4Yx2Bs=
           "]], Polygon3DBox[CompressedData["
1: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
iD1Kx6zVWUPsVTonMpeYU5dnPcRcZ85fUXoMmFvMscty/mEuMicHlh6Tljm+
D8n5i1hCTLmq9DNEu6Ph0fIDgucOc2ho6e/AWmBNXFl6jNDSaOppxNpgLY2m
RiteHpzLyemHl9Yw63JOOKC0xvok54RW4taFtREaac/SOXlj1kRtSmus9Tln
ty6twdCuxHxifd/gWoOaYwq5Nzj2kwMOy/E56txacQfxiYXnOnOemExsfk5/
r+o1LYntpbXjb9rWLq0hXxc/r2tqiRsXvpbX1BQ3En8jXiXeV3xoYa2L5t0v
z9e3xS+IG4h3FFfTfTeIT87zlfn5VvL85nlQy1DT8N5fkmPFHwe/92bavpy8
Jnjvivn7vp7zBfPnC/Fr4pY5f3wuflW8m3hfcQ3df2Pyejkz55uV4kalNdIL
4mfFlcS1xO+IV4gbincSv6j9NTp2CGmVZ6O/5cRkna9Z+F7c8whim7bb6H5f
6lgXne+uY1XEX4hPFJ+e1xfrs1WeH6yv9/P4Md4/i98VHyI+kjFP/ox8tu90
7Cftv6NjB5e+ZwW9/zrxseKTxD/q/NvEHHFbcdL5T8QdxV1yPvwsr2fiQQPx
N+LTxWeLG4m/FXcXnyOuJf6KNSPuKa4k/pyYKT6NMRJ/Kj4ux4ftxOvFJ4l7
iOuIN4lPFZ8lrif+WnyauFfh3PRDzgfkh+3F34l75HzNvP0+52/yObU9NR61
3bX6rm+INwVrkWp5LjAneHZVgmslaqYWpTUZ852aqbl4jzzfmf/N9Ld74Xr6
7OT1wPyndqKGor6m3n5Z3J81Vbqm2aTP8n7penybwrUUNdU/hetxajdquJ1L
a8SXxP3ETUrXTNQm1Cg7lK6ZqEWoSRr/3/zsm+cr85G1yWfms/5aeq4yZ5nr
/5ReS/gBtfJ6XS7urWvqlq4Zl4nPEdfJ651aiJpo+9I13bPic8X1StecrHXW
PFqwel4rfCY+y7elax1qnqD9aoXXCmtmx9IxhrXMmt4pP1/WHmuQtfpv6bXM
miZ2ba3tZ/p7hRyuc/vk+Ek+bJ7Hb1Me831Kr0lyIzlyXGkNtTbHjGZ5fMm1
5NyxpTUauZycPqZ0TF2s63uJq4nriZ8SnyXernTNSK1JzZnE1QvXptSohbgq
81HcU7xN6ZqSWpSadMscT6hFqUmrlK4xyfXkfPQ7epxas0eOP8QT5gZzhM/y
U+n5x/zCYyD9M/eYg/WJFaVrmyb6G1K4xmEtbZ+srVhT5J5Z0bGGmMNarJe8
llmT+E8jxKfk+EgtRA4ld7YL1uvoa2JArbx26yevZdbwDzp3jfiY0v4Vtcau
ydoJDUVt00x/owrXONSOOyW/PzmaWmSX5NqImoTakxoUPjm4FmqeXBtRE1FL
UVPhFZ4TXGs2Ta49qEGIXQ2TYxkxjNjWIDnWEOOIJY2TYwsxhVqSmhIvdFxw
rUnNSS19Q3DtSg1LrXxTcK1JzYl3OTa4VqVmpVa/LbhWo2bDq8KIpRalhqF2
uTm49qUGxvu5kXXEvbi//nYklurY5XqPA/XZ2hSOhY2SYzExEa02U9cdVFiz
oZ1mRGs3NBTa4pFoLbVnnh/UwDy/TsG5sG5yLu6a5wsxmOfXOj9PNBta7fjg
3F0nOZaTw4nttZNzGzGeWrCy/joUrgnxFo5L/n54DHhdxyY/TzwvvOcOyc8P
D5padffk2pOalee3m/5uL1zzomW2TfYe0DTUqi2Ta2FqVryPjsnjhwdC7UAN
8Wxhj5nxOSrZm8BTwItZou9VpbAnQy1Pjb+6cE1PfX988nhRc+IFdEoefzwB
vPD2yd4xHjLvxXs+ktck3t3RyV4GHh7e+jHJXt6C/P3x4N8WTwrOzdslazVy
NLm8anKuJqejJWolawc0Bdpg8+Tcj0ZAS1VI1kdoKrREpeR4iqaYr3t0F1fU
fo3Ctf2WyfmSGp/afovkfEmNj3ZAQ/C862atUTFZS6A58KK3Ss4HeNLk/mrJ
2gMNgLaonqwF0Bh4R3hIxJsWwVqoZrJ2QBOhJWro79TCmuItXTOAmKD9vQt7
51WS/VQ8dLzzrZNrm3Z5/PHA3hHfHewl4SnhjY0PHg88Vby1CTnWjo+OzcRc
/L0biWuFPV2eFc+sIrmrdOy/LfrZkQOI/bdE5zpyALn+5uhcQM4nF94anSvI
id9Fz0dq2S8Lxzs8GLzr3rrPN9q/K9ob/Lywt4jH+LH2Hwj2FqnZ14ofDPYC
8QQ/Et+fc82E6NxCzsE7xEP8QDw1a5eborUIGgavEc9xjfanB3uJeIofiqcF
65nHtP20sKfNesMjwpvvH+xdUT/iLZ0ZPF/RoMTbXYPnA5qQeLVb8Hyhh0G8
aBo8nvREiCc7Bq9vahbyyc7B40uNS3zaKa8PNCzxe5fg+YtHxXpoEhx/8KSY
Tztk7YyGZv3Uz/kDT434ckbOY/sH57tuOR9R85OvumYtjiZn/jYMXh94YMzv
BsH5DU9tcuEeG+sDTc76rRc8/9HY5JeWwePROdk7xNMl3hBjiC14imiNO6Pz
PZqD3gX6Fq/0muBeCj0VvNKrg71a/CN6KxcF91boseCNDg3uldAzwQu9Mjj+
0nN4V3xPcK+Fngve6VXB8RfPkN7MhcG9FHoqeK8jgnst9FzorQwKjmf0DPGi
bw+Oh/SA8MLvCO790WMjPo4K7hXRMyL+jQzuJdFTIj5eF5wv8KTfE98b3Cuk
h0Zv6dLgXhA9IXpPg7OWuj1aa1XJ8RnP9n3x5KyVJ0drZzQzempatFZHcxNb
iDFNWQ+lvYiHo2txPAm0+oPRsQfNTq1wf7T2RIOiv6aLdy1cA1BbPBCt7akx
8DIfiq5NqVHR9lOjtT4aH609JVrro7nR5vdEa200Otr73ujPhwZHq98drd3R
7GjNO6K1KZoT7ToxOvegYfuQW4Pj1dela4n7orU9NQW1zaRo7U+Nw7W8pn7p
e7K+WyTnfzwb4tFJyeNNz2M3vXaSeLD2hxb2eubrWLfCng/e5eJofxAPE7/z
01yv0ZOjFvgrujagJqgZ7eHi3V5Y2I9bp2PTC/cg8Z6eiK5VySd4v0ui/T08
YPycz8QzCvdkD0Z76dh12r+hsH/ycbRfQg8QrYvmRas2D/ZTPo/ujf63hy1e
G+3v0COcT24S3y2+JNj/+SK6t0pP9VFxh+h7nR3sxTwaXcuTf/GCZkdrOTwh
vKtXor0tPCy8rlejvS08L/zgT6L9JnqSeF+vRXtReGD4my9HP3s8aLyrVeKR
hT0svKvXo70uPCy0JJqS+Vw5eOwYQ571UcH+5VvRfh6eOF790/k8nj1e1Jxo
bwtPCu/+mWh/Fw8f7+pxcfvCHha1ADUB37dOsJc4Nz9vPEW8sseivS48M7y5
N6K9Nzw6/MyP8vOm5453/GS094uHjP+4Jtq/o0dO7bc62r+lBsTf/DDaX6en
hT/5gXhC4Z43teD70bUiNSH19K/RtTI1M94VHha159+lva9fdL5hYQ8Mv+ff
6PN4TNTfv0d7XXhG1Ld/RNfHxB96xxuif59ADxl/guYm9TqeFbXq39G1MTUr
fvE7eT7Rg6AWpiZuK94y2P9YH93boseFN/5UtP+PR45f+aV4buHfANA7GZKv
vyXYb18Q7aVQ/7BWDs7z6aRgr/bNaH+Y9U+t+m50rUzNSj9iobhP4R4LXv6i
aO+GepPa+r3oWpsam99nfBXdO6WHin/+drRfTc8FLw1Pjef3TenfY2zU+eWF
f/PxlLhvXt/Dgv2CMtk/IL6ij05Ozj/0YPltATU1tfTa0n7Fz9GM3sNv/DHa
q8GzwTt+Kdqfx0PGK58X7V3jmXNvPsPjpZ8h+fmA5Pw7JcdTPCP01YbS+XKv
5PqU3yhQ/x2RnM8ZL37rwm9e+G3BwOwd4CFUFn9W+rcH/AaBemV4zscHJV/P
bxyoTw9Pzt+zc/7A40GPflU6vx6cnK/5zQb1ZptkfUDPlXq2bbKemJP1B57H
luLPS8cyYtr40muQ/IJHspX2vyitr9sl6wN6tvR+6QGjb27NevKE5HqYHjV6
tUuy/qaHjf48MVmf0/MmthJjp5UeY/TNHsn6kvWLvtk/WX9OzvkRjwp9vam0
XtgnWY/xGxb0zX7J9Te/KUEP7UsOL/wbEvRUq2S9c1/Or3hi6PeNpf2A1sn6
iR4z+mPvZL3Ob1Lwtv7UZ96tsMeFv079fmnhnhL659Bk/cJvgPALDiOHFe5R
o4cOSdYz/IaG+g1PnHqmZrCXnpL9bzx1enHPRfeq6MnR+1oW3cuiB0Z/b0V0
vwn/A28ssKYLe2T4dzHZK8OzJ9eSc/HF0cH09p6N7vXR4+O78J3oFeBJ0Dtb
Ht37o4dGf3FldL+Lnia90aXRvTh6pPQjX4zuxdAD/Q+3+MCy
           "]], 
          Polygon3DBox[CompressedData["
1:eJwt13f8luMaAPD3977vL5qi1KGt4TSdNNA8DQkNDeW0HC2rgYaOljSEEi0h
lYPKMc8xKk0qlZZVmjoHpZBVIqnO9/o8vz+uz31d3+d61zPu+34r9B7ccVA6
lUptE7miYiaVWieawB+zqdQl8qPytLy4sWVOKtVG3yPq8x0rKi6S13PspHhb
XcHYXN91+qY6diErLkrJr3Dse5GVlzC20tdOX3PHd4nubBSbwJqpPxPd2Eg2
np2QF/Dacsb2rAs7V89S8RfWgf2NTdNzEfuTKC1v4NgPIlde0niNvvb68ju+
TNRmHVk3dkpPddGPTWIPisfUpfRdLMrIGzo20VhUVJN3i88Vc9UVRWs2Qn2v
+E6eifNgvFrd1me08z412W1sDpvP/pAXjNcbO7HubIj6N72n1TVFDfG546dY
rrGeurG+Vuqqev/OHmNz2FH2tCgrL8Feit+t/rO+m+XT2BPxe+WFWCVjZ9aD
tdZXjd3CHmdPppLfvyaTnMvvssm52Cb/1firnkvFZfryqS90/DLHbmb9WUu2
R/RkY9gkdlZ+nr5LjV3ZzeyMvAirYuzCerHJ6sJeW0iUkF8e51G+V/SSj41r
pO8hxwqyAqKkvI5jp0VheWXjjfp66ntYfZ6eInF/yOs69rtYor7E2ELf9fqu
VFdy/AZ2P5vMGrOd4kY2nI1lS+I7iWHsBfZ8vF7PftGHTVBP1ddLz8/sv+pz
xTk5yTO0IpN8h6+zyfO0w5gvzi9rqKdRXBNehw1nC9WveL/O7AsxkD3KZrNi
6pWZ5Hk8rP8Cecf4THEnm6Jvpr4O6gPiDvYIm8EqqNeKxvGseG35THKelmeS
c3kom5yzeJ5XifrsSDZ5tkuK1Znk+f4mnm35oriOoms6eYbiWfpN/pZj5Y3N
1Nemkmv2Tia5rgezyfW7TuwTvdl4fVP09YvPdHw0e4W9xfrGZ7Ix7FX2NmvC
LmU3sclsGmvLarBb2RNsHruCVWYd2Dj2EHs979nvz2azWeJ9+S96f5CXE1X0
lVG/m0nmgaP6S8t/keeXlzW203ejvp5xbdm9bBF7lR2TnxOvMbZhndi4vGte
il0fc6c4kDe/VE0ndXjG+13AarAe6j5eOyWbXPe41hdnk+vSX36lfKz8NX1L
9B2Xn8vKGNuyzmyN/Jjer9Ul4/exrjGX6rvLsQVsMevCarFYLOaxheymmDfZ
3exZ9iL7Wf5mrAnGBqwFu13Pcfa9uqwoE+dGfRkfrG++elE8H3HfshFsMXuN
lWPviUaxbsS5lXcS/xMD2NS4RvrWx/uw79RZUYLtjOeanY15SdRnI9Wtvc8s
x9azLew+dg2bydaxzWy1upWYwday98RwfS3YNLZavUHfdvkJfiLuC1GLjY77
V98Tjm3ISdbWUexaNpu9z7ayAfGssUmxbrKVbAS7mj3O3mWb2FD2VzaFrWDr
2DDWnD3KVsU9GmsFa8amspVsfVwj9QP8U/nT/GVRR71dtJEP1DfMsZXyJ9nB
mJNEYbaHvcTSxoqsOqut3hq/j93JhrC98b4sY6wUaxTbJX+RpYwVWFVpA/Un
MR+xIWwUuzzWEHE9G8CGsi/iWWb5jdVYHbZK/hQ7pC4mirB71S39vsccW8M2
srrsQ9GWDYprxuqrPxbt2V1sBKun/ki0Y4NjnWb7Yl5hWWPlWG/ZnXHv+YyJ
MW+xFWxMfF82h21k29n4+Ez2DNvKdrAJ8f5sHtvGdrKJ8T3YfLadfRZ7JNaV
LWa74rlnk9gNbAH7kO2K9S3uffY8+5TtjbUxzid7jn3C9sQpZ+fHPMa6s94x
R7AubBH7LPYQLMuKsZqsJ+sb+7pY29hCtpPtj/WSdWYvsB1sH1sReyAxIZ53
9kZE7D1inZef0hOXf3nMt5Iv454SBVPJ/djGa+c6tiUnuTcHsaZsMlvKVrOB
rAl7MNZmtirWWvlM/nnMhbGGsrfZjFhv1TkiH3uLTY81RH02b2/7Zuxl2F52
On5//A42h33FzhOFoldd3MFajvVi/dgy+ayYd9T5I9i7eev5AXVufK54J9aN
WJfjt4oC+nawk+xMzA+iHvsy5mVWwFid1WVbvd8ZVjCd7PNiv1cwNznP49PJ
viL2F5/G/KjvlLy0qOy1G/L2iX/kza8xz96hPiwe0P+c+mV9veMZEiPZXPY8
uyWee3Efe5o9x9rEORZ92UT2KNsS34EdVxePz4nvHHueWPtykj1m7DVH5v2O
Qulk7xJ7mG5xD4h74lqp5+r7Sn6WFTY2Zi1Z97gWYkhcZ/YM6xPrkxjFnolz
wD6J9ZT9ri4lKrHHs8m6HGtx2WyyZkzPJmtIrBvlssneZkY22evE/qZ8Nvmv
00K+W/SQj/Z+E73fAflpdo7xCtaUzcwm/5Hif1EFeVPHqkYtbya/W98/9H0s
X8hPqi8WFdnBdHLTFTE2YVcrD8lzYj9qbMpasVu97ip2P3udLWW3sQZsHPs3
Wxb7iLz/Gtew29jtIp2b7EWHppO9S+xhPpD/0+t/lheN8+W137D/xJ4h1oO4
RuxIvHfMHcbLWQN2OL4DK2qsza5iNdWbY52KfQYbzL6VvxHzibEua8RqqbeI
VuxWdherrt4U6yjrywayKur3Y41jt8TvYLvl/2I5xktYNdYw1rGYA9lQNprV
UH8Q6wDrxwaxauqNsT6yPmwA2xzPADumviCeG1YiN1njp6eT+Svmsbv1HBEP
x9oXc5q+9+JZCVefiT22WBv3IvuGpeJ5MKxj89i3cR3EhexBdQef8axjH7Hd
8dq8/dDRnOQ/QPwX2OT4s+ynWNvintF3Im//3CWd/I+M/5P3xGeKR2LNje+s
r7J6fSa5F3+K/3HycfE9xFNsub61+hqpd8RczoaxMWyjfAH7MeY+cRHbz/5g
+Yz1WRP2f0+M4QI=
           "]]}],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {{}, {}, {}, 
      {GrayLevel[0.2], 
       Line3DBox[{251, 474, 1113, 252, 488, 280, 1222, 503, 295, 1227, 518, 
        310, 1234, 533, 325, 1243, 548, 340, 1254, 563, 1161, 355, 578, 1175, 
        370, 1269, 593, 385, 1273, 608, 400, 1279, 623, 415, 1287, 638, 430, 
        1297, 653, 445, 1309, 668, 460}], 
       Line3DBox[{253, 475, 1114, 254, 489, 1125, 281, 504, 296, 1228, 519, 
        311, 1235, 534, 326, 1244, 549, 341, 1255, 564, 1162, 356, 579, 1176, 
        371, 594, 1187, 386, 1274, 609, 401, 1280, 624, 416, 1288, 639, 431, 
        1298, 654, 446, 1310, 669, 461}], 
       Line3DBox[{255, 476, 1115, 256, 490, 1126, 282, 505, 1136, 297, 520, 
        312, 1236, 535, 327, 1245, 550, 342, 1256, 565, 1163, 357, 580, 1177, 
        372, 595, 1188, 387, 610, 1197, 402, 1281, 625, 417, 1289, 640, 432, 
        1299, 655, 447, 1311, 670, 462}], 
       Line3DBox[{257, 477, 1116, 258, 491, 1127, 283, 506, 1137, 298, 521, 
        1145, 313, 536, 328, 1246, 551, 343, 1257, 566, 1164, 358, 581, 1178, 
        373, 596, 1189, 388, 611, 1198, 403, 626, 1205, 418, 1290, 641, 433, 
        1300, 656, 448, 1312, 671, 463}], 
       Line3DBox[{259, 478, 1117, 260, 492, 1128, 284, 507, 1138, 299, 522, 
        1146, 314, 537, 1152, 329, 552, 344, 1258, 567, 1165, 359, 582, 1179, 
        374, 597, 1190, 389, 612, 1199, 404, 627, 1206, 419, 642, 1211, 434, 
        1301, 657, 449, 1313, 672, 464}], 
       Line3DBox[{261, 479, 1118, 263, 493, 1129, 285, 508, 1139, 300, 523, 
        1147, 315, 538, 1153, 330, 553, 1157, 345, 568, 1166, 360, 583, 1180, 
        375, 598, 1191, 390, 613, 1200, 405, 628, 1207, 420, 643, 1212, 435, 
        658, 1215, 450, 1314, 673, 465}], 
       Line3DBox[{265, 481, 1119, 266, 1220, 495, 287, 1224, 510, 302, 1230, 
        525, 317, 1238, 540, 332, 1248, 555, 347, 1260, 570, 1167, 362, 585, 
        377, 1271, 600, 392, 1276, 615, 407, 1283, 630, 422, 1292, 645, 437, 
        1303, 660, 452, 1316, 675, 467}], 
       Line3DBox[{267, 482, 1120, 268, 496, 1130, 288, 1225, 511, 303, 1231, 
        526, 318, 1239, 541, 333, 1249, 556, 348, 1261, 571, 1168, 363, 586, 
        1181, 378, 601, 393, 1277, 616, 408, 1284, 631, 423, 1293, 646, 438, 
        1304, 661, 453, 1317, 676, 468}], 
       Line3DBox[{269, 483, 1121, 270, 497, 1131, 289, 512, 1140, 304, 1232, 
        527, 319, 1240, 542, 334, 1250, 557, 349, 1262, 572, 1169, 364, 587, 
        1182, 379, 602, 1192, 394, 617, 409, 1285, 632, 424, 1294, 647, 439, 
        1305, 662, 454, 1318, 677, 469}], 
       Line3DBox[{271, 484, 1122, 272, 498, 1132, 290, 513, 1141, 305, 528, 
        1148, 320, 1241, 543, 335, 1251, 558, 350, 1263, 573, 1170, 365, 588, 
        1183, 380, 603, 1193, 395, 618, 1201, 410, 633, 425, 1295, 648, 440, 
        1306, 663, 455, 1319, 678, 470}], 
       Line3DBox[{273, 485, 1123, 274, 499, 1133, 291, 514, 1142, 306, 529, 
        1149, 321, 544, 1154, 336, 1252, 559, 351, 1264, 574, 1171, 366, 589, 
        1184, 381, 604, 1194, 396, 619, 1202, 411, 634, 1208, 426, 649, 441, 
        1307, 664, 456, 1320, 679, 471}], 
       Line3DBox[{275, 486, 1124, 276, 500, 1134, 292, 515, 1143, 307, 530, 
        1150, 322, 545, 1155, 337, 560, 1158, 352, 1265, 575, 1172, 367, 590, 
        1185, 382, 605, 1195, 397, 620, 1203, 412, 635, 1209, 427, 650, 1213, 
        442, 665, 457, 1321, 680, 472}], 
       Line3DBox[{277, 682, 1322, 683, 278, 501, 1135, 293, 516, 1144, 308, 
        531, 1151, 323, 546, 1156, 338, 561, 1159, 353, 576, 1173, 1174, 368, 
        591, 1186, 383, 606, 1196, 398, 621, 1204, 413, 636, 1210, 428, 651, 
        1214, 443, 666, 1216, 458, 685, 686, 687}], 
       Line3DBox[{459, 667, 684, 1308, 444, 652, 1296, 429, 637, 1286, 414, 
        622, 1278, 399, 607, 1272, 384, 592, 1268, 369, 577, 1266, 354, 1160, 
        562, 1253, 339, 547, 1242, 324, 532, 1233, 309, 517, 1226, 294, 502, 
        1221, 279, 487, 1218, 250, 473, 681, 688}], 
       Line3DBox[{466, 674, 1315, 451, 659, 1302, 436, 644, 1291, 421, 629, 
        1282, 406, 614, 1275, 391, 599, 1270, 376, 584, 1267, 361, 569, 1259, 
        346, 554, 1247, 331, 539, 1237, 316, 524, 1229, 301, 509, 1223, 286, 
        494, 1219, 264, 480, 1217, 262}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{690, 1004, 473, 689, 1113, 912, 691, 1114, 913, 692, 1115, 
        914, 693, 1116, 915, 694, 1117, 916, 695, 1118, 1010, 1217, 696, 1119,
         917, 697, 1120, 918, 698, 1121, 919, 699, 1122, 920, 700, 1123, 921, 
        701, 1124, 922, 702, 1322, 1005, 923, 1006}], 
       Line3DBox[{704, 1011, 1218, 703, 488, 705, 1125, 924, 706, 1126, 925, 
        707, 1127, 926, 708, 1128, 927, 709, 1129, 1012, 1219, 710, 1013, 
        1220, 711, 1130, 928, 712, 1131, 929, 713, 1132, 930, 714, 1133, 931, 
        715, 1134, 932, 716, 1135, 933, 717}], 
       Line3DBox[{719, 1014, 1221, 718, 1015, 1222, 720, 504, 721, 1136, 934, 
        722, 1137, 935, 723, 1138, 936, 724, 1139, 1016, 1223, 725, 1017, 
        1224, 726, 1018, 1225, 727, 1140, 937, 728, 1141, 938, 729, 1142, 939,
         730, 1143, 940, 731, 1144, 941, 732}], 
       Line3DBox[{734, 1019, 1226, 733, 1020, 1227, 735, 1021, 1228, 736, 520,
         737, 1145, 942, 738, 1146, 943, 739, 1147, 1022, 1229, 740, 1023, 
        1230, 741, 1024, 1231, 742, 1025, 1232, 743, 1148, 944, 744, 1149, 
        945, 745, 1150, 946, 746, 1151, 947, 747}], 
       Line3DBox[{749, 1026, 1233, 748, 1027, 1234, 750, 1028, 1235, 751, 
        1029, 1236, 752, 536, 753, 1152, 948, 754, 1153, 1030, 1237, 755, 
        1031, 1238, 756, 1032, 1239, 757, 1033, 1240, 758, 1034, 1241, 759, 
        1154, 949, 760, 1155, 950, 761, 1156, 951, 762}], 
       Line3DBox[{764, 1035, 1242, 763, 1036, 1243, 765, 1037, 1244, 766, 
        1038, 1245, 767, 1039, 1246, 768, 552, 769, 1157, 1040, 1247, 770, 
        1041, 1248, 771, 1042, 1249, 772, 1043, 1250, 773, 1044, 1251, 774, 
        1045, 1252, 775, 1158, 952, 776, 1159, 953, 777}], 
       Line3DBox[{781, 1160, 954, 779, 1161, 955, 783, 1162, 956, 785, 1163, 
        957, 787, 1164, 958, 789, 1165, 959, 791, 1166, 569, 793, 1167, 960, 
        795, 1168, 961, 797, 1169, 962, 799, 1170, 963, 801, 1171, 964, 803, 
        1172, 965, 805, 1174, 967, 807}], 
       Line3DBox[{806, 966, 1173, 804, 1265, 1057, 802, 1264, 1056, 800, 1263,
         1055, 798, 1262, 1054, 796, 1261, 1053, 794, 1260, 1052, 792, 1259, 
        568, 790, 1258, 1051, 788, 1257, 1050, 786, 1256, 1049, 784, 1255, 
        1048, 782, 1254, 1047, 778, 1253, 1046, 780}], 
       Line3DBox[{809, 1058, 1266, 808, 1175, 968, 810, 1176, 969, 811, 1177, 
        970, 812, 1178, 971, 813, 1179, 972, 814, 1180, 1059, 1267, 815, 585, 
        816, 1181, 973, 817, 1182, 974, 818, 1183, 975, 819, 1184, 976, 820, 
        1185, 977, 821, 1186, 978, 822}], 
       Line3DBox[{824, 1060, 1268, 823, 1061, 1269, 825, 1187, 979, 826, 1188,
         980, 827, 1189, 981, 828, 1190, 982, 829, 1191, 1062, 1270, 830, 
        1063, 1271, 831, 601, 832, 1192, 983, 833, 1193, 984, 834, 1194, 985, 
        835, 1195, 986, 836, 1196, 987, 837}], 
       Line3DBox[{839, 1064, 1272, 838, 1065, 1273, 840, 1066, 1274, 841, 
        1197, 988, 842, 1198, 989, 843, 1199, 990, 844, 1200, 1067, 1275, 845,
         1068, 1276, 846, 1069, 1277, 847, 617, 848, 1201, 991, 849, 1202, 
        992, 850, 1203, 993, 851, 1204, 994, 852}], 
       Line3DBox[{854, 1070, 1278, 853, 1071, 1279, 855, 1072, 1280, 856, 
        1073, 1281, 857, 1205, 995, 858, 1206, 996, 859, 1207, 1074, 1282, 
        860, 1075, 1283, 861, 1076, 1284, 862, 1077, 1285, 863, 633, 864, 
        1208, 997, 865, 1209, 998, 866, 1210, 999, 867}], 
       Line3DBox[{869, 1078, 1286, 868, 1079, 1287, 870, 1080, 1288, 871, 
        1081, 1289, 872, 1082, 1290, 873, 1211, 1000, 874, 1212, 1083, 1291, 
        875, 1084, 1292, 876, 1085, 1293, 877, 1086, 1294, 878, 1087, 1295, 
        879, 649, 880, 1213, 1001, 881, 1214, 1002, 882}], 
       Line3DBox[{884, 1088, 1296, 883, 1089, 1297, 885, 1090, 1298, 886, 
        1091, 1299, 887, 1092, 1300, 888, 1093, 1301, 889, 1215, 1094, 1302, 
        890, 1095, 1303, 891, 1096, 1304, 892, 1097, 1305, 893, 1098, 1306, 
        894, 1099, 1307, 895, 665, 896, 1216, 1003, 897}], 
       Line3DBox[{911, 1009, 685, 910, 1321, 1111, 909, 1320, 1110, 908, 1319,
         1109, 907, 1318, 1108, 906, 1317, 1107, 905, 1316, 1106, 904, 1315, 
        1314, 1105, 903, 1313, 1104, 902, 1312, 1103, 901, 1311, 1102, 900, 
        1310, 1101, 899, 1309, 1100, 898, 1112, 1308, 1007, 1008}]}}},
    VertexNormals->CompressedData["
1:eJztyDEJgEAYgNEfxSCuVnCwgxEOdDWCTcQmFvBqXA6XAycDCO9bPnh92ual
iYihi2jj7R739TjLVT9xzjnnnHPOOeecc8455/zbc/XMOeecc84555xzzjnn
nHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnn
nHPOOf+9P8sDIe0=
     "]], GraphicsComplex3DBox[CompressedData["
1:eJx1nX20lVWdx889F+4FvGqi02iZJmulji/LN5qYUs4RtYlpqWlIMFq4WIFZ
mkkp6RpcTIOW2pgZEqzxJUMrpEnLcWmZgAlZ+QKhYuqENGqg6IjyLhfOXKfz
2WfW55kv/7DWZ33Xd//2b//23ud5nv0896DJF505pV6r1Zb01mrdA/+fesGH
7nygq7+x3/DNo2ZtXdvoOejef/jrt9Y2zr3x3296X31XhaP/4apLxjw9eE1j
v/vHrn9v15qiN0f/zP2Hzf7b7W80TvrtU7fvs/GNojdHP3XGwpu/3ruuMf7c
80/Zr76u6BO/d9UVD8xf/0Lj228e9qfj/mvg///+wbOtVqvC0T85aeYTpwxZ
0bj/wHEjTqitKHpz9BcNP2TYFSuWN44c88zEaUuWF33iKQ+OB773DV/qv2nQ
hsbYWUtPv7ZrQ2nX/MMnPXTfxK63K3mDW3/oez6+bGttW+PRo+6e/pWdGxuL
R13eGvL2xqI3R28f+uV24Unv+oF7HGk39ct5gzvP+FgPT3rHib85esePPnHX
CeNujn7C+LHjzp11XOO2CQvv+8YR3xmN3px4XLf4mOOT6tz+jJc5+sO7P37H
qbu2Nlb3XfPjr7+9tYyvOfrfj/rBp07v2da46oiXFnyjvq3ozYnzmlUvrzy4
taPRv2bexJ4dO4qPOfqj+0688tDe/sYdtU3je7v7i94cvdtF73lBnObop03Z
7bBLB29qnDfhqf6h9U1Fb067zs+GW9a9/vvWm41N45oDq3Kt+d57F/RcuaPV
6P7NZ9YcV9tU4egfeePCZ2uDas3Jr3bVH+6qNdGbP7j+pS0v7Hqj4gO3/t1v
PrXyxtqWip56M0dvH/Tm5CeNo/3Jszk+iXvcicf5Z76Yo3edoE88jbs5/s4D
Pubok39a550feMqPOXXldZVxN0fv9Ra9OXqvt+gT9/pJ/Obo0/ppTjxeJ/Ex
Zx55/2KemqP3vonenHbtA/e+Q/zWw5O/OXr7E6fHHe78wD0u+Jujd52QN7cL
T3r7w9M4uh6IJ9VJ0qe8uZ5pN3H7MF5er+BeH+Ber4jfPvCktz/c6w/tJu51
Bu51D//E7UOe3S7c8ZPntC+bo3d+0Jujdzxwx4OP+wt3f/GxHp5+F92+aPfv
XlCrN29e+p/Pdu3qKvuyOfrpEz/ypQsH1ZsXP3X1hHq9XvTm7EefPPT5Iwc2
/uaPf/LZo0/c1V18zNEf8vCQ3ucGDWrOXLTXXSfWBxW9Oe0mH8cPT3H69wnt
pt8tSd99w4+WntLV0/zl3NeumrlrcNGbo191xKqbPzq4p3n9j+YN/ud6T9En
7jywf92z45Kzf9Y1pPno177yx8W7epvs7+bor5ozf+Q9g4c0b73hoHOW1IcU
vTlx2od4zMmn+wtPeveXeDyO8PQ70/WA3hy96wG9OevSX/q9Z3PI4bM/9ODA
//iYo7/xyd22b+vZo/n4J34+6YruPYreHP1Do1YfuK2+R3N7s+9PM1q7F33i
KT/OPzzVT8q/Ofrkk+p88pST3jqgPqz53AX9x7V2DS31Y47edYg+1efw5e+6
+tp6X/OV8bOuGd3arejN0X+wdvGjB/YMa/7knxb8rDXQPnpz6tNxwtM8cj2g
N0fvekCfuPsFd/z01/VDf83Rv3z+6Mnf7OlrLpp6zNBGd1/Rm6N3v+COHx/r
4am/bhee5oXzQ57N0Ttv6M3Rux7QJ+444e4X/ub8zvE6xrphjj6tY4l7PeH3
htdt/M3Re91Ab47e6wb6xB0n8TseuNuF2x/u9Y12zfl9lfJmjt75R2+O3uOL
3hy9+wV3HuDuF/6pv6keXP/k0xy95xf6xL3e4uN5jd6cfnk+4mOO3usSenP0
af4m7n7h43USffq9YX/Gy/nH3xx9isccfcqzOXqPL3pz9B4XeOqv8wP3eH35
7/uOnLBzbeW6e+68bXvtv2t9haP3fQb05uh9Hwa9OXpf76NP3PdD4L6/Aff9
ENq1D9z3hfAxP23zgR+b3f9ipV9w68/46Hm//t7WFyrXxejN0Sef1K77Bfd4
4WM9POldJ/ibo/c4ok88jZc5et+PQm9OPK4TfMzxSXVlf7jvn8B9nwR/38dA
b47e9zfQm6N3u+hdb3Dfn8HH/XpsyiXzP/DY4sr99st3fGHKiFeWVzh6X8+i
N/9LXv9ltH3g1vd+/7r+fbc8U2mXcTdHbx/05uTBPuQtteu8UW/m6D1e6BNP
42WOv+sKH3P0yT+tY84D3PWJvzn14HWJ8TJH7/UKvTl6r1foE/f6Q/zm6NP6
Y048XmfwMaf+vf4zv8zRex9Bb0679oF73SZ+6+HJ3xy9/YnT4w53fuAeF/zN
0btOyJvbhSe9/eFpHF0PxJPqJOlT3lzPtJu4fRgvr1dwrw9wr1fEbx940tsf
7vWHdhP3OgP3uod/4vYhz24X7vjJc9pPzdE7P+jN0TseuOPBx/2Fu7/4WA9P
v098fwDu+wDsL77eR2+O3tfv6M3ROx54ise/B/BP3Pcl4L4vwb7g+wzsm+bo
fX2K3px27UO/HCc86R0/7Tqf8PT7yuOI3hy9xwW9OfPa18X4mKP39TJ6c/S+
TkefeMqP8w933eKT8p/qKvmk+vR9EniqK9/3gPv+BvVjf3iqZ48XenP06b5H
4o4f7vjpl8cX7vszcMcJT/HYB57qyvGTB3P07hd6c/QeL/SJO064+4W/Ofus
1wHmnTn6tA4k7vnIfud1D39z9J536M3Re96hT9xxEr/jgbtduP3hXh9o15z9
PeXNHL3zj94cvccXvTl69wvuPMDdL/xTf1M9uP7Jpzl6zy/0iXs9xMfzGr05
/fJ8xMccvdcl9Obo0/xN3P3Cx+sk+rRf25/xcv7xN0ef4jFHn/Jsjt7ji94c
vccFnvrr/MA9XoveNW11q7Wzcj0I9/Us3Nf1cF8nwn29DPf1/mvHnvBia+D6
wf5w699z1pB1rdb2ynUWPOmTv+OEOw/4WA9PeucZ7rzRru8bwH29j4/vJ6A3
J//2hye928Xf/YKnevB1ItzXiXBfz8J9XbzyjyN3tP6f9whuf+D8La3WxgpH
7+sR9Oat//1XfY8Abv3Hpj/5Wqu1taKHW3/pvFvebLU2V/Rw68mD9dSD8wN3
Phkv6+G+P4CPxxG9/dHbB73nL/0yR+/+wlP9pPhT3uyDv/vLuHgdgHsdgHu+
UA/2gdsH7vkL9zylXc9r9ObUs9dJuNdVfKyHex0gHuvh9meeWs88NUdvH/Tm
tOs4id/jhb/HC39z9M4zenP0Hl/05uhdJ+jNGUfHCU96twtP9eM6JE5z4kx6
jwt6c/QeL/TmjLv7BXc89Ms+8FQ/XlfhXpfgXj+Jxz7wpLc/3Osq7Sae5rvX
SbjXSdZV5xme1qu03rpdxt3xM+7m6J0f9OaMr/MPd/7xtx7/5OM44Y4Hf+cH
f3P0zhv6lE/3C705cbpdeNqXff0O93U33PcT4L5vAPfvJerN1+9wX9/h4/sJ
cPvAfZ+B3w+OH57idH7g7i8+1sOtZ576OhHu60S4r0OJx/2Cu1/E43zCPe74
pHw6/3Dr8Un+aXx9fwDuOqFd5xOerrt9fwDu+wBw+8OTv+8PwNM4Oh6444E7
P/Q3cfvAnU/83V+4+wt3v/BP3PnBxxy988N+5HkHT/PO8wVuPeuw65x12By9
6x+9OXrXP3pz+uX44Y4H7nbh9icPidsH7nmNvzl6jxf7lPsFT+NiPXlLPqld
9xfu/sLdL+IxJx5zfFL9OE58zNE7P+jNGRevD3CvD4yX9XCvG/h4nhKn1wHi
NEfvdQa9OXqvG+jNidPx4+N1Dx9zfBw/3HHCHQ/5THGm3wnOM9zjSL15HOHO
Az6uT/RuF+52yaf9yac5Ps4n3PnB3/Hgn+J0PuGprpw3/M3ROw/ozQcutvau
1dZVrmfhvg8A9/0WuK9/zz55ztBa7bXKfQa47xvAfZ0IT/HYH+7r1r0f/9X+
tdpLlfjh1l+018SDa7U1lesyuPXEaX940jv/cOeTdlP8zgPcecPHenjSO064
46RdjyPc1/v4uB7QmzO+9ocnvdslz+a06/7CU537uh7u62Xi8fUy3NfLcPvg
7/qE+74BPo6z7/KL+rpqSyr3w+G+jpuzcPWkWu0PFT3c+tNG7vbl2sA4VM6B
t7n1xJ/yYx/0iTuf1JvzAHeeGXfr4c4zPo4fvf3R2we9x5c8mKN3HuCprlL8
9oHbB//KewTt8a28f9TmXmfgnnfUlX3g9oF7fYB7vtOu1w30iXsdhlfeY2r7
V97PanPvC8w76+GV987aPm6XeJxPfJxPuPsLdz7hzj/ceYY7TnjlPbJ2vyrv
ebW5/emv5yncdQ6vvEfT9q+8p9PmSW9/uOcp7Sbu8YV73sE975inzhs81X+a
v26X8XL8cOcBnvYdtwtP7aZ90NfdcF+Hsu75ehbu62V8kt7twlO7ab9L3PcH
4L4/AHf8jLuvp+C+DsLHeuJ3PPCkd5zsF84b3HkgTucf7jzjYz3ceuaRr8vg
vi6D+zqReNwvuPtFPM4nPI1jyqfzD7cen+Sf6s3Xm/BUP77+hafrUPvD7U+/
PF5wjxc+jgfueIjT4wv3fQB8HA/c8eBjPTzFn9pNdej+wt1fuPNPPhO3D9zj
hb/7C3d/4e4X/ok7P/iYo6+ck2/vd5X3UNo8rRue73Dr2b88T+Gep/DK+yDt
eCrvj7R55b2hNq+8J9Lm9if+xO0D93qCvzl655n+ul9w+8CTT+X9oHY8lfcU
2tz1TJzWwyvvp7R9XFfE47qFu/7hrlv83S76yvsvbX3l/Ys2d7twt0t/Uzxp
33Qe4CnPaV6k/qY8e7zg6ftg5/5q8Fk7ugZ+19x/1OX/2t/5zr853+m6bNR5
G28YtKJx1n/c/cG/2r68fE/SHP1pd51z3oj6msa+L//bIyvf7nyH35x2k/7n
n//UQa/WNjS+OuPb1/90R+fvBZjzfS1z4knc/eV7XMnfcaI3R5/8U/6dT3xS
nh+dUdvz4QG/Y2fdubq/v/Pd9cTH9T595V21/sbrU59/5br+zve3zfEfs+nw
uave+a7YbZc9+fmdne+fm5fvUatdvl/0xd+M23VqrdZcMLZv8/v7O98zN+e7
PebkzZzvIJkTv/tV/g6C4ix/N0EcvfuLPuXBHB/Hg485/XJdkc9Uh64TfMzJ
v+uc/JvjY048Se86R594ijNx54H4E08+jge9efm+cahzc/SuB/Tm6F0P6M2J
3z7le8iKp3yXOPDk43bRp3Vjyxl/c8mHB36ffKv3viu/v7PzHeDEj9198d+d
PPD759g5B8x8dmfn+73m+Ce9/dH/Ys537j661tN8/aunX/uFnZ3vlJqjv+L5
nesPrg1pjn117fUjd/YWvTnt2gduPeuA44c7fuZ14snH8cAdDz6Jp/yMef/n
DnlfbVjzh2fPnLOzv/MdV3P0PVNWTt671tfsfnzfm37d3/kuq3lZP+UDtx7/
3y04/pahtT2ak0f/9LZv9Xe+a2qOjzn5sT95MC/7guIs+4I4ereL3px1wOPO
OmCO3vWA3uPLvDZHbx/8rYe7TvAxp137s56Yo3d/0Zszvv49QP7T7wRz6if9
bnG/iCfxlDfXCdz1Rj4Td/0Qp3nZd0K7ycf6sl+Io3ec6BN3u3wfwPsv3wEw
R+/9He7fA/iYo/fvGfTmvNdvznv9Se920Zujd3/Rp/w4D/ik/Pj3ANz7O/7m
6P37oXwnTf681+z5xXvB5rzPa04ezHk/2rx8Z1LxlO9SiqN3v9Cn/prj47zh
Y078rgfylurH44uPOXl2fZJnc3zMiSfpXZ/oE09xJu48EH/iycfxoDcv39cK
9WyO3vWA3hy96wG9OfHbp3yPS/GU72IFnnzcLvq0Dnhfhnt/Z74knny8z8K9
z+JjPdx65qnjgTse5l3iycfxwB0PPomnPHhfhnv/LeuV9HDr8fF+jd6cftmH
+M3Leqt4ynorjt7tojdnfnm8mF/m6D2O6D0uzBdz9PbB33q4xxcfc9q1P/PU
HL37i96c8U37qTl1kvZ3x0+7iaf8uB7grivylrjrhDjNy7od2k0+1pf1Vhy9
40SfuNvlvSfvX3Dvj3Dv47wHZM57Q0lvf/SJO058vF8Tpzn61F/vU+V7C9oH
OU/uuuU8uTnn2M05z2/O+wXm5bsuiqd8L0Icvfdr9Ob01xwf5wcfc+L3ONLf
xD1e5M31g78542LOuCQf1wPxmOPvOPE3R+/+ojenv4knf8eJvzn9TXlOeXBd
lfflA3f94JO464d6c5z4W08e7E8ezOmv4yce1wl6+9Cu46HdFKfbLe/ji9Nu
Wpe8X8O9L8O9b8K9bzKv7c+42B+9OXr7oHc86FM85uhTv7xvwr0/wr0/4m99
WT/lX9ZbcfT2h9sfH+upf+eZunWeqTfnjXozx98+cOtp1/mHO058rKfOU/zm
xG+OT6rPtJ+aUw9pH3f8xGlOnKm/zic+jh+fNO6uN/LsusLfdYV/qrfkbz3x
JO54yroqf7j1+Dhv6N1u2RfkX/YFcfRuF7055wy9b3Je0fsX3Ps7Pol7P+Kc
njn+iTtOzgEmf8eDPnH74+M80C9z9Cmf3h/x8f6I3vt1eT9IPpyD8nzn/FXl
erZ9vsucdh1PeV9S7Zb3mMTRO370qV/m+DgefMzpl8eXPCReeY7Q9nFdkefK
84623uOOvzk+bhfuOOH2oV37lPdQfJ+f91YCd/7xSTzVScqn9fQr+af8Jx/3
i3r2vkO9ef9Fb47ePui9P8K9zuNjPdx66tzxkGfHg94cvX3QOx70KR5z9CkP
3qfgaT+yHm49Pt430ZsTp33KuqR2yzomjt7+cPvjU7lv3J4XHi/q3+NFnVfu
57d9Kvfh29x6/D1ecMeDj/XEk+rK+wt5SPuOOeNoTrspnpTPyn31dr88Xvik
8Uo+1tNu4m4X7vEq66TahadzR/P+8Itrjh+8rrFh7iemPtHqnHMete+Zk9b1
rmhcd/Rjly5udc7Z/uNbx3x67qA1jX3u6D55UatzPvnCFw46Z0N9Q2P8pFvv
fLDVOVecuNvlXIo551hSPAuX3Xn17O5tjb0uvWW/J1qd872/G3XR9/7c3d84
+dllDyxrdc7jffPMP08b072psXr49OmrWp3zh5uennf2/vVac/rxr3/6wVbn
nK15OWclf+J3PHC3S7/My/ko+XMuxfknTueH8yfOPz6JO//kx/7oHT/tOg/k
bdae/VNPqdebT58+bOZzra5Sh4nvM/Yz0774zvtpXQecsarVOdeUuH1od/7X
lsz4br2nOfSeY0asbHXOPZqT/5G/HHH1O+8bzP/sKRsfb3XOAZrjn+JJ/o4T
/xc/N3bhR7r3aF582cypD7U659/M0dsH/9Su48QncfvQ36WbZ81+pT6secK7
Jy79batz7tGcPJjj437hY17OsR+19tbh3X3NZx654MZl/+fv2puX8/yB25/8
OE7ykPrresA/1Yk57aZ4HH85Jy9OnbgemL8eR+apOXr74G893PWDjznt2p/z
b+bkM63D5vik/joe9Ob0y+NOvxL3ONJumtcex3K+PYyv6wd/x0O/zNHbB705
8aR2HSc+7m85Jy89z8e978C9T/Gc3Xqey3ufKuc0tJ+Wv0ur+il/H1acdr2v
wb0PEo95OaeheHhu7v2deNwvno87P/gk7ryRB/ujd/y06zyQZ89fuOcX+Uk8
+Xhek0/XJ3kzxz/5uF18XM/kxxy9ffBP7ToP+CRuH/Lj+U5/zdE7/nLeVfO0
nHcN3D70y+0Sf4onjZc5/qldx1nOl4ozjh4v5oXzTP2bo7cP/tbDPb74mNOu
/Tn3Yl7+PrXWMfSpX24XvTnxexyJP3GPF+2m+eXxKuc/wzi6TvB3PPTLHL19
0JsTT2rXceLj/pZzpNLznM7rNtz7BdzrP88HzXk+mPT2R5+448TH+wtxmqNP
/fW+Cfd+VP4ekOqf52jm5e/1iJe/yyNOf90u8Zuj936K3px+mZfn5spDef4u
TvweL/qbuMeFvLlO8Dcn/0nv8aVdc3wcD9zxE2fiycftEmfKQ4rf445P4h5f
fBL3+FIPjrM8v5ae/tqffjlO2vU4ordPef4e2rV/ea4d5rX3Hbj3O/LgdRi9
9zvmi33or9dn/K3HJ/k7fnwStw/xe58q5znDfpHitw9xJn/nE705/m4XfYrH
8ZfzluKMi/NPXTlvnGcwZ17YB2497SYfjyN6c+o81U/aX8zL330L+5rjJD9u
l/ykfDp+9Klf5uTHdYW/6wF/c3zMybP9y3lL1U85VxnqyvVMv+wPtx5/c/pr
Tn+T3nGW85bixOP84OP48Un9sj/P17zf8TzO+w7c+y8+iXt/4fmgOf6JO06e
JyZ/x4M+cfvj4zzQL3P0KZ/eH8tzau2P6L3/ordP+c6z1o3yPWff7+K7zeLl
ebriIT9ul/6ao3f86FO/zMtzc8VTnr+L0y+PL3lI3OOIj+uKPFfuW7b1Hnf8
zfFxu3DHCbcP7dqHdiv3M9v6xJ1/fBJPdZLyaT39Sv4p/8nH/aKevQ9Sb97X
4Nbj4/2X/nqdR5/87UM9u13y4PWfdq3HJ/k7HnwStw/98v5Cv8zRO/5yzjDs
R4mnPLhd+pvi9HihT+NoTruOB58Up/tVzjGKM+4eX+q8cp+5Pb8q96Xb3Hr8
k4/rAb15+S699pHynfmwv5iX7/+L09+UB8dD/B539JX7yW29Of21Tzn3qPEq
5xvDOFbub7f15sSZuP3h6bm89wuea3t9hnvfwSdxr8881zbnuXbSp3Mviafz
Ralf3hfK95G0j6BP53nsw3PS9JzanOe86TyS/eGOp3xPSfHzPNd5o13nhzg9
Lvgk7vyTh3ROyfHQbuLJx+2iN6e/zifxJ+48l+8FhTybE6d9iNPtwtM5K/uX
7wiF82muK+rZnOdH6bl8es7u8cIn8fR835znd0mfnpsnXvmd3PZJ/fK4lO88
KM/o03kA+/CcKD2nM+c5Vzq3YH+44ynfhQjnIpw32nV+iNPjgk/izj95SOcc
HA/tJp583C56c/rrfBJ/4s5z+R5CyLM5cdqHON0uPJ3TsH/5ToKvi9v177qi
ns25j5S4xx3ucYF7HOEeF7j7W97vU7/gztv/AKwthVk=
    "], {{
      {RGBColor[1, 0, 0], EdgeForm[None], 
       StyleBox[GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJxN3Hf8fnP9x/Hzua5zrk8h2SsklRYpKltG0S6iRQMpUmmhtKyoaCgiWWXL
3ntLZGRlVPbMKCNF6Pe8f17v763fH+d2vV/X+6zrXGe8X8/H83VetunW639x
1HXdZtNd1+fzZQnE2kumMaQxW9ovzDRJe5xpzrRfZJ60X555Jmm/INMr0v50
1jNuy/4gHZsknm5930+8eYK5Ey+V+IeJXzmqdc+eaYW0X5NpgbTny/TatD8z
Xe1Xp7175p8921yoa9tMe45Mi3S1z1N9rcv+ztHW6Xv9L26/6bNZ34Jt3Xtk
Jcvlcynrz7R82lumf4m0l037x+n/XOKXJ35j4p8k3iLx4omXSfyjxK/P52LW
l+lNaW81Xe03p/3TSR0nx2uZTEu3/bb/L2nHbKXMN9XVMbPOpTPNlfbr2jre
Mqp1WHbFtB8Yqs+x2jMre10+53V82z6+yn/W1TFfOe33ZFol7Q9keq92puXT
fkOm1dK+f6hlzfuzrG++HKRlE78+0/yOdaYVbS/Twn19ihfONE+mrbOht7R1
7ZXlv5L4bYnXSbxP4i8lXj3xmon3TvyFxG9KvGrin09qO7a3smPR1b6t47e0
ffxy5l8zn2/L/L/I/G/I55Jd/Qf+o4ez/29N+x1p75v+x4b6rRsmPiDx+/K5
fuL3ZXp32kv0tX7bWSDtr2b97219v8z8fx9q3vcn3i/xuxxDsWOY9tcy/wdb
+1fp/2A+1+3qN22Q9nqZNujqHHfOvjPTO/yX7Tf/Y6h1+S/2n1TfOzO9q82z
/qiO8TztGvlBtvfztA9O+6zMv/qojtlK7Td+P/17pn1A2mem/4msf6PEH0/8
68Qb5fPjXX33sbQfT/+H2r4elP5P5POTiTfJ9Mm0P5Jpua7+U8fgoyb3h0yf
SvvbmbZPe/NMW6S93XT1bZL2b7K+jfP50sSvad99Pf2fsXzah6T/0/lctKtr
avO0t03/x9q+HZz+byTeynWa+NDE/8z+fjbx5xIflvib6d868ZcSH5n4X+nf
sq3rCOdXPl/W1TXsGGyf+b+Q9ufTPjz930r8lcRfS3xU4u8k3jbxNxL/NvG2
+fxiV9vw3WcybdHVNqzju9P1+x2HYzL/txN/LfF2iY+2f36z/cv0Fe1RtX23
fdr/zv5u2o7lsZl/x3x+QpxpJ/cY51BX5+RuaW86qmNtm7ukvUO29+3WPi7L
75zPb3b1m+zD9zK9u6tzdNe0d8z8O7R1HZ/5d0q8U+IfJD4h8R75nL+re+KP
0t45/Tun/cO0T5zUcbJu2/iu8y3Td7TbPLtk/l3T/nHaJ2f+p4fqs+2TEn8o
nxt2dc59OO23Z1pbuy2zzXS19R2Y+dfN51pdrfPnfk/6f9Dap6b/Z/ncravf
5Dfsmv7d0/5F2qdN6jxxvvww017mTf+P0/5l2qenf1/37a6Wcc3sP6p5P9vO
0SeHOnfdy0/J/L9yDLs6Jvuk/dNMr0z7VZn2TPupzP/5duzOyPxbu4a6+o+/
7Jrwn6b9s0wH6ss95+K0H9TOsmvnc9WurvHDRnWda/vura6BUS37k/Ybfpjf
s3eb95xs75mh+mzn7MT/SbyP45Hp2bTfme0doj/Tumm/PdMv09430zp9fafv
6Cy/mgdH1nFYPg7NNJX28/lu/7SPSP+5k1rGskclXj197058pGOZ6T2ev5nn
tLRPTv/F7r/57vDExydeI/O/N/ERXX2nzzIHtPW/Nf1DljmxzX+B+2P6f534
xMRrpn/9xKe39a+V+AWZ56zEpye+KO3JpPpPTXxh2v/NPAe3/T3P/byvWP/a
6Rvnu98mPibx+fbdfTTx2W2dT2b+F+TziTygb8386yU+OX1n5bu3uZcmvijx
uYnX8ezpa//PT7xu4tkm1S++xPgl0wWJz0l8adpzTOp8uCDx74wXMl3Y1ndZ
2hv2Nb/+d2R9H038+8SXuWemvVGmK9P+Q6aN+5q0L8v87xpqHvNenPidiS/J
5x8TX5fp0rTnyjZuaPP/Pu0+04GJf5Xpucz/ySx/c9o3uUelvWD670r7j5n/
yrRvSfvPmf6S6dZMc+e7P+XzxkzzpD1vpivSvjzTfGnPn+mvaV+R5S9Pe4FJ
7cvlia+Y1DZuav3vdq/sa3tXJX5P4oUyz50t/kPa7+/r/HQ8357+jye+OvG1
id+beJFJxX7/VWn/flT7fGvb5u7uMV1dw545o8xzTFv+6rRfkum4xMdmWtjz
sq/j5fd/IOtfPN/d7/gkvjbt6UmdO9cnvibtz2T++1r/epl/0Xx3bTv2f0x7
sUn1/ynxdWl/NfM/m/gRz4XM/9J895Djm/h648++4lsTr5/+DVzTXY23Pph4
q8T/SHyH+27iTfo63tb//sQvM8ZJfHviG9JeMtPf2vr+ZDye6d+J/+Y4pb3E
pNZ3b+Kb0n65Z3LiBxLfnPYX+4r1fzjr/2Bf17/9/aixpWd0u9/d6vnc13ht
rcQfT//n+hovGr99KPHu03V9ud7/4n7a1/L252Pp/3Jf40njwY0Sv8o9rx2v
P6f9yFDHw/X518Tb9TW+Ms76eto7ZZovA+7Zcz1/IfN+I/Fj6bsz82+W+NWT
ut+4H96W9msN2DP/44lvT/vzfR0/8ebGHn0dv2c8dxIvNan/7+nEd6S9eV/3
l+cTb5H+pfPdVNb3ROJ7JrX9UYs3NbafVPxk4ruMd90TEo+yv/el/Xr3uMTP
pv9e46m+zlf3r/dl+W8nnm79Wya+znnY1TnnnPxsX+frHFnfF90/8zlv5p8z
0zjtZSfVni3tB2w7n2d0dY/13WZ9XX8vTnvrLL/MpLYnfjDt5TO9YKp+78Np
L5dprna8H0p7hyw/e0t4Ppfl3zip/8P+/M34rK/lJ4k/n/6d5SCJ5078pcTf
S7xo4vkSfznxm12jLX4k7RUyLdjmfzTtlTK9OHGf+PG0V8w0d1v/39N+y6TW
P3/if1hXPueZqmO+6Lj21/ILpf3VbG9l10TrezLtl+VzycSvyLTkuPZ3gbQX
S/trbX8XSbxw4m0T7yVfSvzmxFNyoUn9npcm/qfrK59LJX61dab9o8zzqtb+
t+vTfnQ1Zl0q7Z9M17ZfnfYz6f+pfLXty38S75l4mcSvTfys8VPiNyReOvFz
iX8sX52qdT2deJl8LjdV87w+7VUntS/Lpf3ftFdzDupP/Hzaq2RavB2ff6X9
xnx+q6sxsX1aNtOnuxqzWsfPs73l27olqXtnWjHxColHaf8i0yqJV0o81pfP
lafqmJln5Uyrp71GplXSfkumN6e9VqZV035TpqXTXjvTamnvM1192n3ab51U
31sTD3LTfL4u8dusM+1XZdomu7ZdpjXTfo1pqo6RZVbP8qtaf9oTv8VvnKrv
7PPrMr1yqv4z8+ybedZJ++1pT6e9hjFI4g0Tz5n4l5nemXjdxC9Ie/187tXV
mNUy+8lP0/+utF9o3nz+tKucyn/wq3z37vS/I+3Z5N753KOrnNAy++e79dL/
3rRnT/uAnI/vT/zBTAemfaDxd9rvT/8ccu3s3/qJ10v8osQHZfp44g8nfrHc
N58fm6rfYJ83yLRGV2NSv2mdTO+Yqt9sn9bK9LKpOied8x/J9L60P5Xpo2n/
Nuv8YdrfTPul9j/b/2Trmyfx2p65iTdKPFfiD+Vz46maZ+O0P+78mqpz3Dl9
sHy09c2d9ify+Z6pOmddA7/Od59Ne7O053Ps8vn2qTrGm6S9aabN0/5Mm+dw
+VbaX0v7JWl/Mp8fnar/7FN+76Tm1Z4//Z/O57pT9Z/Y59/ku89ZX9oLpL1u
5t8q8ZaJF9TnPpr4y5m2su1MW6b91UyfT3uLTCukvWamL6T9Wc+tqVqHdR4y
XfPqWyjtL7oGpuoa2jrtY/Ifb2P/Mx1rrDCpY++3zpv5D8v0TdtPvHDaX8rn
1xN/o/3md3qG2p+0F3G8JtVn3Ysm3iafK03VNew3bWuf0/5Kpu3SPiLzfLe1
F0v7SPmn9SdePO1Tsk/fSbxzplONrTPtkPb3Mp3W16f4+5l2y/T1LLdjPn+Q
aftxLWd529jVdvPd9lP1nzmnTs86dk97j0xnyDcmtW+O7RL+23x+MfGXrGdc
85nfPu6S6UTXaD5/5N6Q9rfy+fmp+k/9hhPcs+yf695vzedGU3UO7pD2sfnu
p2nv6DpI+7hMP/N7Ey/pWOTzx4l/YntpH0/vae2Xu/Yn1Wddr5Br5/ONU3UP
3c21lOlDU3VO24ePOYen6ppxzb5jUueOe+NSrrV8ruZe5neO67xwfrgGf2SZ
vvIP47uv5Hm1h3voVP0G+/yBTBtO1W92TA7O535TdY5sa758t+dU/YafpH1S
tvmr1n512u/yjG/7/hq5ufvdVJ2DzrH983nAVC3z60wbZv5TtNP3hsx/aqZD
Ev8s8WvTPr+v7duPi9Le0z13qo7xz9P+Xqa9p2qbzvEL+lq/7VzofPCbpuo/
ts5D8/mbTAdlOtA10Nf4cm/XUo7HxX31m+8S99Ls3xFT1b/0dN1X3V/t42GZ
1k//sY5R+l9Pe+pLz9w/8XFZ3/Z9jQcPci7RHie1bfv+OtdmX+PPAxOfmP7f
JT7e8XFuGW9n/hNb/7KZ/9K+9sf2jk//5cafiffxX8hPJxXb3hsz/7XySdda
4rPTf3Xi8xMflfjUxFf0tf7DEp8s383yZ7Z4uSz/+75+328Tn5b+D09qefHy
6T8mnxcmvtj9J+0/ZP6j0z4p7TPkp5n/vLa9N2f+y9J/XOIjEp8i303/RW3Z
N6X/yr62f2ris9J/VeKzE5/gWpefT2r9fu8ymf+69F+R+OTEZzp+njNTNYa7
LO1d+hovnpn2OfLHLP+HdjxW9PxIfHlbfiXXX1/jzbMTnys/Tv8fW7xy+m+U
fyY+N/F56d+tr/HRxc69xH/qa/4LE59Pq53U/vk9b8ny5+XzhsR/ynR+2htP
6v9xvFZI/6cS39yWXyXxJfn8c+K/ZLo07U0m1fbbVqWd+W6qnuHuQX+WT6f9
h7QvyvY3k48n/n3i1T2/JrVt63or7Va+3eZfI/Hmk1r+6sRrJr4p67su8TWJ
L6bVTur3O55vS/8GiU9t/WsnviXz39q2d2Hm32JSyztea6X/7r7GI8Yff0j/
X/ta3vV/SeL75ZuJ70h8ZeI/5vP6xDdmujbtLSfVduzWyfq2kp/rT7xu4pv7
On72/3dZ/nb5eeu/TD46qfgG987Mf2tfx0d8afrvlH8nvjnx720/8Uemavx0
OS1wUv23enZm+Y9M6ty3b29PfI/83P+V+IrMv7X8u63v3Z7f8vPW/67Ecyb+
Hb1AziV/ntTyfv970n9XX8v/LfGfsr4H5MuJ7018TeIb+jqf70l8VeKvyO9b
//uy/JcnNb/+9xtLJH4m8dPuffatr/HjBpkeSnutSf1e19t6mf9hekXi/2R6
JO1r+rqe/f6rs737+hpPGn/+MfE2k7q+3b8+mOVPn67r1/X+AeOPSf2/dyd+
b+Izput+5365ftqbTur8cT2t1vb32fb7N0j8YF+/74HEN2Z79/Z1PIHAJ9Le
Tn49qv4Npyt+Pv3PZfp62tvLr+Wunqvp/1eWmSvx44lvyfr+Kb9u/TcP9X89
lmX/m2nbtG/r63n1aPpvSv9jfW1vyjrS/pacOu3H0v/hrP/pfNcnfmhc+qLv
9c9De0z7GXpF2v9y7crvJxX/27M+y39jUvvzn8QfTXxHX+e7/r9k/u9Mav8t
v5HtuQ9N1T31qbT/I79O/4KZnu2L8WKouOxUln9Ovp32SzI9n/Z3J6WH+n0b
Z307JF4g8fyZdkx7JxpM1j1OvLN7UV/3D/v316zv+r7up/7f2xLvIh9v+urH
2/psD6z9VOLvyd/b8f9k4pe2Y+MYLeE49NW/eKb/9nU8re+5zH971v9UX/+n
9d0xFCMW4txAqf1dqM3/ieliyiQfXHs01PYXSXvhTLtNimNP16Iz8+Dc43pE
z6zzhX314bDjoTgztoKxYNs4KbaGsWGxc/XFM3HNaXpxXzwX1+0TT/fFg3Hh
YSjmuURXjMsymPWrumISWDZugV9gcNg0ZoxtL9UVS56nr7Z5X5D1zdkXvzbv
ZCjmjF8v1raJSWOt9hGrxvxf1Nb1wqHO59nTXizTrpPi0vj0XO0cwlWxLEwL
i8WU8Uscc44sP+rr2Fn3bEMx2eXbsZk98UsSr5Z4jcRzDsWQsWT64Zn5Ixbt
i5XgKC+mb/bFa3HbeeinffEkXGnuoRj5y7tikI7x4n3xKFxqrqE4+Cu6+g/8
h5gttrtuVywX56EV04yxMxwXz7VNrP0Vff3X+pYdirNiXxgYVozpYsMYMdb7
8r78Ds6N+YZiuvj1Ku0YvbKveXHl+Yf/MXjLLpB47r7OhRnuSX/sG+923g3F
1fA1vxGLW7Cvcw/nXWgoxot3r9++w6z5LRZo23x1X/wXB154KE6L127cFVte
ui8+iVMuOhTX3LQrBmYZDHizrtaBDWPMn+qKeWLPuC22irFiw8tmfZ9Le8u0
X5r1vaFv/Np5n/jFfZ3b1rXIUIx3hne3Y/D6vtaF2y42FLPFfz/XvsOQMcKt
Mp01XRwZ68V8GWEwO99pY3mYKi2LpoW1YsaY6DaZzsnyy2V7X07fV/2XQzHp
L7X1nJ3+N/W1blx5qfQv3zce7LodignTmrZp3/nd9tU+fyftb42KKWPJtvGa
vo6tfXvlUN/Z/je6mveNff03O5h3KIZNK/xq24dF+jq3nKvzDrUNLHuLtm2+
Buz43e0ash7r85/7zRi1bdkmdr1CX2zYsXndUPM4Pt9ty+LUtL9Pt3MEF8aH
MWSsepW+riUc5vVZfqW++nDmZYbG2Ee1n+fmeC7Z175Zdml6eV/nkn157VBM
eueumK11vLYvf4Nz7SVDMeddu7onuObxyvPS/vOo+AqmvJNlu2LN8/Z1b8V9
3zgU892kq3X6DlffoSsmjd2v1lfbsssNxa3x69XaPWiNvvgzDv3moZg1do0t
nzdd56XzE7veu32vf79RsehVs/wuXfW9aag+LNs6zYNh0wZphNg2JowNH5Lp
gunykGDMv850/nQxcFrhHm2f3toXD7fsCln/QaM6Fo7JIW091odl68PM+DV2
af/hyn0de/u6ylDbsT0se432m8xrma3ad46NY2TeF/V1b3YveMtQzJsWShPF
wr+Z/Z9zVGOXj0wXB6c9rtGeAZgldnn4qHg1Bo6FHzkq/osnH9RivBsP3q/N
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
8tou1ZV3l0eWV3bJrrzDPLK8sjydvJ08tXyjPH68fnJSuSmPLK8sz+xabfzs
3Uk8s3xTa3Sl1fDA8sWt1ZV3lmeWb41HixeXp5YvkAePF4+HkJeQ/5X3lueU
95SHh5eHZ5WPlJ90xus6lHeVp5W3lQeV75T/lHeVR5JPEcPFcnlO+Uh5Hnkf
eSp5Kzft6l06PH28fTyAvIA8qHyGn+6KffKA8n3yVPKWyknlppt35V3lAeVD
40fz7iEeU15TnkdeSp5avlL+Ul5UOafck4eTl5OHk28TU8VW5bhyXZ5P3k8e
UZ5I/knvOuJZ5V3lh+Wt5fnl/eUZ5h2WA8gFeCp5K+UDvEG3tXyCJ5Kvcceu
vHY8j7yP/Ji8qDyYvJgYNVbNU8mXt0tX3kGeSd5JHkteSx5lXuXvdeXF5EHk
Ody5q3cB8TzyOfI78lLKYeWyPIK8gvJdXrH9Wr7Js8W7tVtXXkgeR75CzBf7
5enj7ePR5dXlMeQ1xECxUJ5EPkB+QO/+kVPKLfkbeSd5GHkQd+rqXUY8Zrxm
mCw2KweWC/Og8aLJd3n95BxyD/ksr96hXeW68mXePzmyXJlnk3eT5473Tn7K
KyaHlcvKf2mDPHHye/ks7x4Pn3xa/svLdlLLb+WzvHXHt/xZPsuLd3TLT+Wr
vGYntPxXvspLd37Lf+WrvG+XdpVryldnvG9d5b7yTV4iOavcVX7KO3bH/8s3
eeGuavmufJb37J6Wf8rXeKsebPmgfJX36/qWD8v3eMnubfmofJMXjWdPfs/T
xNu0bldeKJ4w3i85qFxU/sdr9HzLv+TvvGIPt3xVPsv78mTLp+SrvGGXdJWv
y1d5vWiy9Ab5Km/WUy2flX/yej3T8lMeLfc3OavcVcwrxTNFL+Ah5iXmr/Zu
MJ4t3i2eMN4wnjDesLW7qg3we3hvHp2Vb09Xfmr8d0YbH/NO8YR5l4f8lHfr
8ZZPy0d5h2Zr+aN8lvfo7q70BPkrb9AjLV+Xk8pNvXPCuyd4wni75LByWfkr
r9QcLT/l6eDt4C/hhZG/8kLxMMnn5Ke8VEPLn+V7vE3ntvxdfssrxDO1Wdse
79gDLX+XH/My8TR5t4X8lreHx8e7LeSrvDw8RvJtOaJccaE2v/yRN6hv+bF8
mHdp9vb7eHp4e3hGeEd4dnh3eHZ4d3h0+E74T3hr5N+8UzxX9CAeHL4b/hte
IZ4WnB1v55XhCeIN4vnh/eEB4lvhX+HF4dHhS8EosUqeHL4Z/hneHJ4I3gh+
Ct4Tnhs+GX4Z3iGeHb4bnhneGZ4dPh0eApyAB4YXhj+Gt4fnhS+FP4X3hWeF
d4WngreCJwVnx9t5S3hi+DT4NXhDeJT4kDB37J1nhHeEh4OXgyeFN4WfhTeG
5wXXxre9+4GmQFtYtP1/PCu4Nr7NK8PDwMvAP6EWn+eD9wPTx/Z5UHhReAx4
DXhw+E74T3hVeEL4QPhBeEd4QPg4eCJ4I3iK+D74P3hFeC54L3ggeCF4Hngf
+DN4N3ho+Fx4FngXeEB4QXhAeEF4ZHhl+Gl4b3g8+Cr4K7z7AKfh2+Df4PXg
yeDN4N/w7gEaEi3JO3dcvzwSOD6ezzvAY8JnwW/B68EzwTvBI8ErwWPBN8E/
wWvB88CnwK/A68ATwffA/8DLwrPAd8B/oJacJ4E3gX9BLTvPBR8EzwDvAI8E
HwTPA++D/AsbP7nlW5g6ts4zwjsiH8NWz2j5H88B7wE/hNp3+hrvweEtf5WP
8hIc1fJV+STWz1Mg35efYrGYLH1NPskbcELLN+XDvAtPN/1P/onNntbyWfk6
dn5uy1flt7wBPAMzXoihvAjPNX1QfovVH9nyY/kpln/6/8tfsf+zWn7sHSXr
tXzMu0zki1j8ZS2fnalBHRezpBfIH7FuzJweJ1/FyjFzep18FWu/quW78lGs
+5aWb8ovseI7Wn4mf8WSr235rfwMO7635aPyU+z5tpbPyn+x9Wtafiwfxb7v
afmv/BJrxZRnvA5DseebWr4sH+dd4JmgV8pPsd4HW37JQ8RXwF/g3RfyR2z4
qZaPylexwydbfiRfxYIxZfm1fBKLfaLlvxgqloqZYqeYKXbKH8ZLJ3/Eah9o
+TGmi+1isFgsPQGLfLTlxxgwFowBY8HybWz64ZZPyzex8MdbvitfncWNPW/l
UHgtHiu3kk9iwxivfFS+h11imvJL+SA2iqnSKyxjWUxWvikfxBoxUvmqfBSr
vbTl13ilmlEJH7aJ6cmj5E1YH+bpHcnqZvE2TNQ7ktVJ4o2+0yevxObwSzWm
8khsVX6MxWLI9AqMVF4pj8ROMU7vPLaMZTFQeaA8GRvFPOWp8kosFEOVV8oj
sVUMVB4qT8VG7ZN9k1dio5imd/6qy5zFO7XlkVgoRusdy1PtWGCYxkXyRGwT
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
8S1iScbn+MltLT8wPr6m8RHjbePvq5teb3xnfHxe4zfyE+PvG5qeLn+Qb9zY
eMnMu94nxWNub+M94+mbG58xHjee/nPjIcbDxsh3Np5gvGn8jKfw+6ndN36+
u/EMteDGu/c13qDf+Pv+xkeMf41f8Ql6nvu98fVDjfcYbxtf4ydPt/u/MfGj
jacYbxtv4hPjdv8zfsYj/ta2b/yKb9D/1Robj/Ln8ROqRTf+xH/oe54nxsd4
BB6g1tiY2Nh49pYvzqoRV7Otllx+gWfM0WLj7ecazzC+Np7GL2Zr42fj23sa
r1E7bTyNF+BLxrvGx3M1/cz935jZ2BmfMj6Wj9zS+If9N+b+a+Mzxtvuf7c1
fcz9wBjZWHmBNt6W087UN7fns3yX33CudnyMr/n7Ju33y5cXbHqk55Pn+7xN
jzTe9vw+uOlX7jeex79o+qjnoef5AU2P9Tz2PLu86Y2eR57v9NnD2/PU853e
etT/e54f0vRVz1/P68Obvur57Hl9fNMjPV88r09s+qrnn+czvfbc9jz2fD6y
6a2eJ8YDxzW9zf3b8/P0pjd6Hnlen9P0U89bz+czmv7q+W08QK8+po0fPM8v
anqs57Xn/wVNH/W8lK+c1fRV4wHPY/rq3e154Pl+VdNbPZ89j+nVZ7Tns+c1
/fzkNl7y/Kd/n9ae18Y71zV90PjG85++e28b/3ieX9H0PM8bz3P67R3t+e55
fUvTOz0/Pa/pnY+156Xn801NT/U88by/s+mhs57n9Nqn2vPf85u+/WB7nnsm
eDbwfXhXmucXPfeZ9nz2PKLH8ut4Pnl+PtT0UrUgxhvyh9nb88jz958tnzD+
8Hx9pOmtnreer/TL2drz1PP1701P9XzzvKS/0ps9Xz1v6c/0YM9D+S1/Kf+s
69XzkR67SHveqUmh5y7Qnseet/Rm/qntWj8/z6Ttv2eeZx+fh3d9eSZ6NvJl
eHcXDZeWS7OkXXoGeBbwGXhXkmekZyUfhndP0WxptzRWWqtnnmcfH4R3N9Fw
abk0W9otzZH2SLOkXdJcaa80MFoYTZe2S5OlzdJsabc0W9otzZZ2S4OkRXom
ezbzNXh3Ew2Rlkijo9XRgGnBNDxaHk2aNm0MZyxHc6W90jxpnzRd2i7NlHZK
s6Xd0ihplTRd2i6NllZLY6W10iRpkzRYWixNlDZKQ6Yl06Rp0zRWWivNkHZI
4527jVmMXWiotFSaJG2SZku7penSdmmytFmaLe2WxkprNcYx1qFh0jJpnLRO
Giot1ZjH2IdmS7ul0dJqabC0WJop7dQ54dyg+dJ+aba0W2MkYyWaJ+2Tpkvb
pbnSXmkatA3nkHOJBkoLpRnTjmkOtAfvf+MRotnSbmm0r21jOmM7mintlAZC
C3GNulYxBWzBOefco4HTwmlQtCgaAa2ABkuLpbnSXmm+tF9jGmMbmi/t1xjN
WI2mS9ulSdOmabS0WmM+Yz/nsHOZBk2Ldo4512hgtDCaLe2WZk27psnT5mky
tBkaMi15RiOZLs2adk2TnlWvQtuWo8vVXWOuNRo0LZomR5uj4dHyjHmNfR1D
x5JGNOs9HrQnmh/tj6ZH26M50Z5oIrQRmhRtikZEK6I50Z5oTLQmGhOticZC
a6EhzXoPB+2JxkRromnRtmhYtCyaEe2IpkRbomnRtmg4tBwaDC2GZkO7kcPL
5WlKtCWaAe2ApkXboqnQVmhWtCuaAe2ApkPboVnRrmhOs96TQZuiOdGeaDa0
G5oH7YOmQFugadG2aGK0MRoWLYvmRHuiQdGiaEq0JZoV7YpmRbuikdHKeBf4
w2c0p6E0LloXjYnWRDOhndCsaFc0MdoY/+ff2/OA35PmRHuisdHaaCS0EpoI
bYSmRFuiOdGeaFK0KZoKbYUmRZuiWdGuaE6z3gNBG6Ex0ZpoTLQmGhOtiSZF
m6IZ0Y5oTLQm/neeABoULYrGReuiMdGaaFK0KRoSLYnmQnuhSdGmaFK0KRoU
LYqGQ8uhsdHaaE60JxoTrYkmTZvGzLAzmhBtiIZGS6Mp0ZZoVLQqmtKs9zbQ
nmhGtCM5s9yZhkXLovnQfmhEtCKaG+1Nji3XpjnSHmlAtCAa0yy/O62LxkXr
koPLxeXccm+aF+2LhkRLkvPL/eXwcnk5ulydJkAb+D9n5Mku
          "]]],
        Lighting->Automatic]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0j1IVWEYwPFXrzfFrMiMtEupUwVGRIvYoIEFFi7ZEg19rIEZiKZGUJYf
qEOTBCpFihXVUl5siYyLSARJRRQ6GQUhNVSLWOrvxeHh9/zP4R7OOfeUX7h0
sjErhPDCFJh8k8wJ4WsyhC32nfG4/q5T9mKzUX/TJfbKeEwv6ir7AVOkf+iD
9mOmTP/Sx+11plXv2xDC/dj2QS47f4dH9QhznH/AE3qMQY+jXj9lSs/wtJ7m
Zv2WZ/QbbtOfeVZ/4lY9zznzxcxkhzDLDN/xffb6O0hzkpsSruHF5DHXFNpT
LOU055jhR77kB85yio/5ikvxGq73N/6epabMdLmXXVx1b7vZrUu4olO8rrfz
n97BTp3gHx3Yoldd/7fO0lf0f/1TL7NZL3FRn+Jwrndqb7CPmbTO6FH7iHmm
p/SQ/Z55rl/ru/YWM6qf6Gb7QHw+Pan77TfNQz2hO+1d5pFO61v2btNj2r2D
Xl5jEy/yMvtYzcOsYQ1reYStHrc9Ph87eNW02W/wXPxveZ63uYeHuDd+k6zg
/vhdmIR7WUiuf99rvF5c0g==
        "]]}, {}, {}, 
      {GrayLevel[0.2], 
       Line3DBox[{563, 562, 1288, 1680, 565, 556, 1285, 1677, 557, 569, 1290, 
        1682, 570, 551, 1283, 1675, 552, 593, 1301, 1692, 589, 588, 1299, 
        1690, 591, 600, 1304, 1695, 596, 595, 1375, 1756, 689, 1345, 688, 
        1729, 693, 1347, 692, 1733, 700, 1349, 699, 1732, 703, 1351, 702, 
        1742, 721, 1357, 719, 1740, 720, 1360, 728, 1746, 726, 1359, 725, 
        1744, 709, 708}], 
       Line3DBox[{568, 566, 1289, 1681, 567, 549, 1281, 1673, 546, 545, 1280, 
        1672, 548, 547, 1282, 1674, 550, 594, 1302, 1693, 597, 574, 1292, 
        1684, 573, 571, 1291, 1683, 572, 585, 1377, 1758, 682, 1341, 680, 
        1726, 681, 1342, 678, 1725, 679, 1343, 685, 1728, 687, 1344, 686, 
        1741, 707, 1353, 706, 1736, 711, 1354, 710, 1737, 714, 1355, 715, 
        1738, 713, 712}], 
       Line3DBox[{607, 606, 1307, 1698, 609, 604, 1306, 1697, 605, 621, 1313, 
        1703, 613, 612, 1334, 1720, 653, 652, 1327, 1714, 646, 645, 1324, 
        1711, 647, 655, 1328, 1715, 654, 581, 1296, 1687, 582, 1363, 731, 
        1747, 732, 1369, 747, 1754, 745, 1368, 743, 1752, 744, 1394, 786, 
        1772, 766, 1384, 765, 1769, 783, 1391, 782, 1770, 780, 1390, 696, 
        1730, 695, 694}], 
       Line3DBox[{634, 632, 1319, 1707, 633, 630, 1318, 1706, 631, 643, 1323, 
        1710, 644, 610, 1308, 1699, 611, 668, 1335, 1721, 669, 664, 1333, 
        1719, 665, 676, 1340, 1724, 677, 579, 1295, 1686, 580, 1371, 748, 
        1755, 749, 1374, 752, 1764, 755, 1378, 753, 1759, 754, 1381, 758, 
        1774, 785, 1392, 784, 1773, 788, 1393, 787, 1783, 792, 1395, 791, 
        1780, 796, 795}], 
       Line3DBox[{636, 627, 1315, 1979, 625, 623, 1317, 1980, 629, 640, 1321, 
        1981, 638, 617, 1311, 1978, 619, 661, 1332, 1982, 663, 667, 1339, 
        1984, 675, 671, 1337, 1983, 673, 576, 1294, 1977, 578, 1373, 751, 
        1761, 762, 1383, 760, 1763, 757, 1380, 738, 1749, 736, 1365, 734, 
        1777, 790, 1397, 798, 1782, 800, 1399, 794, 1779, 773, 1387, 769, 
        1767, 771, 776}], 
       Line3DBox[{642, 641, 1322, 1709, 608, 601, 1305, 1696, 602, 603, 1312, 
        1702, 620, 614, 1309, 1700, 615, 651, 1326, 1713, 650, 648, 1325, 
        1712, 649, 658, 1330, 1717, 659, 583, 1297, 1688, 584, 1366, 739, 
        1750, 730, 1362, 729, 1753, 746, 1370, 742, 1751, 741, 1367, 740, 
        1775, 774, 1388, 763, 1765, 764, 1385, 767, 1771, 779, 1389, 777, 
        1768, 778, 781}], 
       Line3DBox[{657, 656, 1329, 1716, 564, 558, 1286, 1678, 559, 560, 1287, 
        1679, 561, 555, 1284, 1676, 554, 553, 1300, 1691, 592, 586, 1298, 
        1689, 587, 590, 1303, 1694, 599, 598, 1376, 1757, 698, 1348, 697, 
        1731, 691, 1346, 690, 1734, 704, 1352, 705, 1735, 701, 1350, 683, 
        1727, 684, 1358, 718, 1739, 717, 1356, 716, 1745, 727, 1361, 724, 
        1743, 723, 722}], 
       Line3DBox[{775, 770, 1766, 768, 1386, 772, 1778, 793, 1398, 799, 1781, 
        797, 1396, 789, 1776, 733, 1364, 735, 1748, 737, 1379, 756, 1762, 759,
         1382, 761, 1760, 750, 1372, 577, 1685, 1293, 575, 672, 1722, 1336, 
        670, 674, 1723, 1338, 666, 662, 1718, 1331, 660, 618, 1701, 1310, 616,
         637, 1708, 1320, 639, 628, 1705, 1316, 622, 624, 1704, 1314, 626, 
        635}], Line3DBox[{827, 826, 1412, 1796, 829, 820, 1409, 1793, 821, 
        834, 1414, 1798, 835, 811, 1405, 1789, 812, 861, 1426, 1810, 857, 856,
         1424, 1808, 859, 868, 1429, 1813, 864, 863, 1489, 1872, 935, 1460, 
        934, 1843, 939, 1462, 938, 1847, 946, 1464, 945, 1846, 949, 1466, 948,
         1859, 975, 1475, 973, 1857, 974, 1478, 982, 1864, 980, 1477, 979, 
        1862, 959, 958}], 
       Line3DBox[{832, 830, 1413, 1797, 831, 809, 1403, 1787, 802, 801, 1400, 
        1784, 804, 803, 1404, 1788, 810, 862, 1427, 1811, 865, 843, 1418, 
        1802, 840, 838, 1416, 1800, 839, 851, 1492, 1875, 923, 1453, 921, 
        1838, 922, 1455, 918, 1837, 919, 1458, 931, 1842, 933, 1459, 932, 
        1858, 957, 1470, 956, 1851, 961, 1471, 960, 1854, 968, 1473, 969, 
        1855, 965, 964}], 
       Line3DBox[{833, 807, 1401, 1785, 806, 805, 1402, 1786, 808, 817, 1407, 
        1791, 818, 815, 1406, 1790, 816, 841, 1417, 1801, 842, 836, 1415, 
        1799, 837, 850, 1422, 1806, 853, 852, 1491, 1874, 924, 1454, 916, 
        1836, 917, 1452, 920, 1841, 927, 1456, 925, 1839, 926, 1457, 930, 
        1860, 953, 1468, 952, 1850, 955, 1469, 954, 1853, 963, 1472, 962, 
        1852, 967, 966}], 
       Line3DBox[{875, 874, 1432, 1816, 877, 872, 1431, 1815, 873, 885, 1436, 
        1820, 879, 878, 1449, 1833, 903, 902, 1444, 1828, 896, 895, 1441, 
        1825, 897, 905, 1445, 1829, 904, 846, 1420, 1804, 847, 1481, 985, 
        1865, 986, 1486, 998, 1871, 996, 1485, 994, 1869, 995, 1502, 1020, 
        1884, 1006, 1495, 1005, 1881, 1019, 1501, 1018, 1882, 1016, 1500, 942,
         1844, 941, 940}], 
       Line3DBox[{890, 888, 1437, 1821, 887, 886, 1438, 1822, 889, 892, 1439, 
        1823, 891, 882, 1434, 1818, 883, 910, 1448, 1832, 911, 912, 1451, 
        1835, 915, 913, 1450, 1834, 914, 844, 1419, 1803, 845, 1488, 999, 
        1876, 1002, 1494, 1001, 1877, 1000, 1493, 989, 1866, 988, 1482, 987, 
        1886, 1021, 1503, 1023, 1888, 1024, 1504, 1022, 1887, 1010, 1497, 
        1008, 1879, 1009, 1012}], 
       Line3DBox[{894, 893, 1440, 1824, 876, 869, 1430, 1814, 870, 871, 1435, 
        1819, 884, 880, 1433, 1817, 881, 901, 1443, 1827, 900, 898, 1442, 
        1826, 899, 908, 1447, 1831, 909, 848, 1421, 1805, 849, 1483, 990, 
        1867, 984, 1480, 983, 1870, 997, 1487, 993, 1868, 992, 1484, 991, 
        1885, 1011, 1498, 1003, 1878, 1004, 1496, 1007, 1883, 1015, 1499, 
        1013, 1880, 1014, 1017}], 
       Line3DBox[{907, 906, 1446, 1830, 828, 822, 1410, 1794, 823, 824, 1411, 
        1795, 825, 819, 1408, 1792, 814, 813, 1425, 1809, 860, 854, 1423, 
        1807, 855, 858, 1428, 1812, 867, 866, 1490, 1873, 944, 1463, 943, 
        1845, 937, 1461, 936, 1848, 950, 1467, 951, 1849, 947, 1465, 928, 
        1840, 929, 1476, 972, 1856, 971, 1474, 970, 1863, 981, 1479, 978, 
        1861, 977, 976}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{1093, 1094, 1342, 1098, 1347, 1106, 1346, 1107, 1369, 1128, 
        1362, 1129, 1383, 1382, 1139, 1374, 1140, 1452, 1221, 1455, 1224, 
        1462, 1230, 1461, 1231, 1486, 1249, 1480, 1250, 1494, 1260, 1261}], 
       Line3DBox[{1097, 1095, 1341, 1096, 1345, 1105, 1348, 1108, 1363, 1130, 
        1366, 1133, 1373, 1372, 1137, 1371, 1138, 1454, 1222, 1453, 1223, 
        1460, 1229, 1463, 1232, 1481, 1251, 1483, 1254, 1488, 1258, 1259}], 
       Line3DBox[{1099, 1100, 1343, 1103, 1349, 1109, 1352, 1112, 1368, 1135, 
        1370, 1136, 1380, 1379, 1145, 1378, 1146, 1456, 1225, 1458, 1227, 
        1464, 1233, 1467, 1236, 1485, 1256, 1487, 1257, 1493, 1265, 1266}], 
       Line3DBox[{1101, 1102, 1344, 1104, 1351, 1110, 1350, 1111, 1394, 1134, 
        1367, 1131, 1365, 1364, 1132, 1381, 1147, 1457, 1226, 1459, 1228, 
        1466, 1234, 1465, 1235, 1502, 1255, 1484, 1252, 1482, 1253, 1267}], 
       Line3DBox[{1113, 1114, 1353, 1117, 1357, 1124, 1358, 1125, 1384, 1148, 
        1388, 1153, 1397, 1396, 1155, 1392, 1156, 1468, 1237, 1470, 1239, 
        1475, 1245, 1476, 1246, 1495, 1268, 1498, 1273, 1503, 1275, 1276}], 
       Line3DBox[{1115, 1116, 1354, 1118, 1360, 1122, 1356, 1123, 1391, 1149, 
        1385, 1150, 1399, 1398, 1157, 1393, 1158, 1469, 1238, 1471, 1240, 
        1478, 1243, 1474, 1244, 1501, 1269, 1496, 1270, 1504, 1277, 1278}], 
       Line3DBox[{1119, 1120, 1355, 1121, 1359, 1126, 1361, 1127, 1390, 1154, 
        1389, 1151, 1387, 1386, 1152, 1395, 1159, 1472, 1241, 1473, 1242, 
        1477, 1247, 1479, 1248, 1500, 1274, 1499, 1271, 1497, 1272, 1279}], 
       Line3DBox[{1182, 1181, 1419, 1180, 1421, 1184, 1420, 1183, 1490, 1263, 
        1489, 1262, 1492, 1264, 1491, 1053, 1295, 1052, 1293, 1294, 1051, 
        1297, 1055, 1296, 1054, 1376, 1142, 1375, 1141, 1377, 1144, 1143}], 
       Line3DBox[{1197, 1196, 1434, 1199, 1433, 1198, 1449, 1168, 1408, 1167, 
        1405, 1166, 1404, 1165, 1406, 1069, 1308, 1068, 1310, 1311, 1071, 
        1309, 1070, 1334, 1037, 1284, 1034, 1283, 1033, 1282, 1032, 1035}], 
       Line3DBox[{1205, 1204, 1438, 1193, 1430, 1192, 1431, 1170, 1410, 1169, 
        1409, 1164, 1403, 1163, 1402, 1077, 1318, 1076, 1316, 1317, 1065, 
        1305, 1064, 1306, 1039, 1286, 1038, 1285, 1031, 1281, 1030, 1029}], 
       Line3DBox[{1206, 1203, 1437, 1202, 1440, 1195, 1432, 1194, 1446, 1174, 
        1412, 1173, 1413, 1162, 1401, 1078, 1319, 1075, 1314, 1315, 1074, 
        1322, 1067, 1307, 1066, 1329, 1043, 1288, 1042, 1289, 1028, 1027}], 
       Line3DBox[{1208, 1207, 1439, 1201, 1435, 1200, 1436, 1172, 1411, 1171, 
        1414, 1161, 1400, 1160, 1407, 1080, 1323, 1079, 1320, 1321, 1073, 
        1312, 1072, 1313, 1041, 1287, 1040, 1290, 1026, 1280, 1025, 1036}], 
       Line3DBox[{1217, 1216, 1451, 1210, 1442, 1209, 1441, 1186, 1423, 1185, 
        1424, 1179, 1418, 1175, 1415, 1089, 1333, 1088, 1338, 1339, 1082, 
        1325, 1081, 1324, 1058, 1298, 1057, 1299, 1050, 1292, 1045, 1044}], 
       Line3DBox[{1218, 1215, 1448, 1212, 1443, 1211, 1444, 1188, 1425, 1187, 
        1426, 1189, 1427, 1178, 1417, 1090, 1335, 1087, 1331, 1332, 1084, 
        1326, 1083, 1327, 1060, 1300, 1059, 1301, 1061, 1302, 1049, 1048}], 
       Line3DBox[{1220, 1219, 1450, 1214, 1447, 1213, 1445, 1191, 1428, 1190, 
        1429, 1177, 1416, 1176, 1422, 1092, 1340, 1091, 1336, 1337, 1086, 
        1330, 1085, 1328, 1063, 1303, 1062, 1304, 1047, 1291, 1046, 1056}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{1506, 1890, 1681, 1512, 1680, 1899, 1716, 1524, 1698, 1911, 
        1709, 1528, 1979, 1704, 1915, 1707, 1918, 1785, 1934, 1797, 1599, 
        1796, 1943, 1830, 1608, 1816, 1955, 1824, 1612, 1821, 1959, 1962}], 
       Line3DBox[{1507, 1891, 1673, 1892, 1677, 1896, 1678, 1897, 1697, 1523, 
        1696, 1910, 1980, 1705, 1916, 1706, 1917, 1786, 1935, 1787, 1936, 
        1793, 1940, 1794, 1941, 1815, 1607, 1814, 1954, 1822, 1960, 1961}], 
       Line3DBox[{1509, 1508, 1674, 1893, 1675, 1894, 1676, 1895, 1720, 1526, 
        1700, 1913, 1978, 1701, 1525, 1699, 1912, 1790, 1597, 1788, 1937, 
        1789, 1938, 1792, 1939, 1833, 1610, 1817, 1957, 1818, 1609, 1956}], 
       Line3DBox[{1510, 1505, 1672, 1889, 1682, 1511, 1679, 1898, 1703, 1527, 
        1702, 1914, 1981, 1708, 1919, 1710, 1920, 1791, 1596, 1784, 1933, 
        1798, 1598, 1795, 1942, 1820, 1611, 1819, 1958, 1823, 1963, 1964}], 
       Line3DBox[{1513, 1900, 1684, 1903, 1690, 1519, 1689, 1907, 1711, 1921, 
        1712, 1922, 1984, 1723, 1530, 1719, 1927, 1799, 1944, 1802, 1947, 
        1808, 1603, 1807, 1951, 1825, 1965, 1826, 1966, 1835, 1614, 1971}], 
       Line3DBox[{1515, 1902, 1693, 1521, 1692, 1520, 1691, 1908, 1714, 1529, 
        1713, 1923, 1982, 1718, 1926, 1721, 1928, 1801, 1946, 1811, 1605, 
        1810, 1604, 1809, 1952, 1828, 1613, 1827, 1967, 1832, 1970, 1972}], 
       Line3DBox[{1518, 1514, 1683, 1901, 1695, 1522, 1694, 1909, 1715, 1924, 
        1717, 1925, 1983, 1722, 1929, 1724, 1930, 1806, 1600, 1800, 1945, 
        1813, 1606, 1812, 1953, 1829, 1968, 1831, 1969, 1834, 1973, 1974}], 
       Line3DBox[{1531, 1532, 1726, 1535, 1729, 1542, 1731, 1545, 1747, 1567, 
        1750, 1570, 1761, 1760, 1574, 1755, 1575, 1836, 1615, 1838, 1618, 
        1843, 1623, 1845, 1626, 1865, 1644, 1867, 1647, 1876, 1651, 1652}], 
       Line3DBox[{1536, 1537, 1728, 1541, 1732, 1546, 1735, 1549, 1752, 1571, 
        1751, 1568, 1749, 1748, 1569, 1759, 1578, 1839, 1619, 1842, 1622, 
        1846, 1627, 1849, 1630, 1869, 1648, 1868, 1645, 1866, 1646, 1654}], 
       Line3DBox[{1540, 1533, 1725, 1534, 1733, 1547, 1734, 1548, 1754, 1572, 
        1753, 1573, 1763, 1762, 1579, 1764, 1580, 1841, 1616, 1837, 1617, 
        1847, 1628, 1848, 1629, 1871, 1649, 1870, 1650, 1877, 1655, 1656}], 
       Line3DBox[{1550, 1551, 1736, 1552, 1740, 1559, 1739, 1560, 1769, 1581, 
        1765, 1582, 1782, 1781, 1588, 1773, 1589, 1850, 1631, 1851, 1632, 
        1857, 1637, 1856, 1638, 1881, 1657, 1878, 1658, 1888, 1664, 1665}], 
       Line3DBox[{1553, 1554, 1738, 1558, 1744, 1564, 1743, 1543, 1730, 1544, 
        1768, 1583, 1767, 1766, 1584, 1780, 1594, 1852, 1633, 1855, 1636, 
        1862, 1641, 1861, 1624, 1844, 1625, 1880, 1659, 1879, 1660, 1670}], 
       Line3DBox[{1555, 1556, 1737, 1557, 1746, 1565, 1745, 1566, 1770, 1585, 
        1771, 1586, 1779, 1778, 1593, 1783, 1595, 1853, 1634, 1854, 1635, 
        1864, 1642, 1863, 1643, 1882, 1661, 1883, 1662, 1887, 1669, 1671}], 
       Line3DBox[{1563, 1561, 1741, 1562, 1742, 1538, 1727, 1539, 1772, 1587, 
        1775, 1592, 1777, 1776, 1590, 1774, 1591, 1860, 1639, 1858, 1640, 
        1859, 1620, 1840, 1621, 1884, 1663, 1885, 1668, 1886, 1666, 1667}], 
       Line3DBox[{1577, 1932, 1758, 1576, 1756, 1931, 1757, 1517, 1687, 1906, 
        1688, 1516, 1977, 1685, 1904, 1686, 1905, 1874, 1976, 1875, 1653, 
        1872, 1975, 1873, 1602, 1804, 1950, 1805, 1601, 1803, 1948, 1949}]}}},
    
    VertexNormals->CompressedData["
1:eJztyLENQFAARdEXCnOYQ2EHI0j81gg2EZt8C1jDHBqJETTnNjc5/bxOS5Pk
7JI2X9ewlf24x/eVc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc845
55xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc845
55xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnn/C9/AEinvpA=

     "]]},
  Axes->True,
  AxesLabel->{
    FormBox["x", TraditionalForm], 
    FormBox["y", TraditionalForm], 
    FormBox["z", TraditionalForm]},
  BoxRatios->Automatic,
  ImageSize->150,
  PlotRange->{{0, 2}, {0, 4}, {0, 4}},
  ViewPoint->{0.4479127407842475, -2.5715795686823872`, 2.153219147829232},
  ViewVertical->{-0.34453084169296355`, 0.0169375672267765, 
   0.984904941401465}]], "Output",
 CellChangeTimes->{{3.771281180900728*^9, 3.771281214960534*^9}, 
   3.771281254837335*^9, 3.771349506487915*^9, {3.7713495673993073`*^9, 
   3.771349582036149*^9}, 3.771349624177617*^9}]
}, Open  ]],

Cell["I need the curl of the vector field, F.", "Text",
 CellChangeTimes->{{3.7713497201973667`*^9, 3.771349732035399*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eFc", "=", 
  RowBox[{"Curl", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SuperscriptBox["z", "2"], ",", 
      RowBox[{"-", 
       SuperscriptBox["x", "2"]}], ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.771281304157106*^9, 3.771281331344575*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"2", " ", "z"}], ",", 
   RowBox[{
    RowBox[{"-", "2"}], " ", "x"}]}], "}"}]], "Output",
 CellChangeTimes->{3.771281332438115*^9},
 Background->RGBColor[1, 1, 0.85]]
}, Open  ]],

Cell["\<\
Above: this value does not agree with the text answer, which is {0, 2z, -2z}. \
I believe the text answer has a typo however, as it produces a zero integral \
later on.\
\>", "Text",
 CellChangeTimes->{{3.771349919840769*^9, 3.771349982837428*^9}, {
  3.7714218722060204`*^9, 3.771421881388401*^9}}],

Cell["\<\
Regarding the equation of the plane containing the four points.\
\>", "Text",
 CellChangeTimes->{{3.771282799682867*^9, 3.7712828140554733`*^9}, {
  3.771349905329689*^9, 3.771349910793426*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vec1", "=", 
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", "0"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.771263363787878*^9, 3.771263378970015*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.7712633881286077`*^9, 3.771263403370195*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vec2", "=", 
  RowBox[{"{", 
   RowBox[{"1", ",", "0", ",", "0"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.771263394295953*^9, 3.7712633998863783`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.771263395224011*^9, 3.77126340078415*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vec3", "=", 
  RowBox[{"{", 
   RowBox[{"0", ",", "4", ",", "4"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.771263409847426*^9, 3.7712634239252863`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "4", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.771263425920356*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nor1", "=", 
  RowBox[{"Cross", "[", 
   RowBox[{
    RowBox[{"vec1", "-", "vec2"}], ",", 
    RowBox[{"vec1", "-", "vec3"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.771263462259066*^9, 3.77126348390663*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"-", "4"}], ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.771263485037665*^9}]
}, Open  ]],

Cell["\<\
The plane\[CloseCurlyQuote]s equation, as shown on the above plot, would then \
be\
\>", "Text",
 CellChangeTimes->{{3.771282903172666*^9, 3.771282908868246*^9}, {
  3.771349766577321*^9, 3.77134977360914*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"0", 
    RowBox[{"(", 
     RowBox[{"x", "-", "0"}], ")"}]}], "-", 
   RowBox[{"4", 
    RowBox[{"(", 
     RowBox[{"y", "-", "0"}], ")"}]}], "+", 
   RowBox[{"4", 
    RowBox[{"(", 
     RowBox[{"z", "-", "0"}], ")"}]}]}], "=", "0"}]], "Input",
 CellChangeTimes->{{3.771282913876814*^9, 3.771282984194004*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"-", "4"}], " ", "y"}], "+", 
   RowBox[{"4", "z"}]}], "=", "0"}]], "Input",
 CellChangeTimes->{{3.771283003064753*^9, 3.771283014561853*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell["\<\
I get the grad of the plane, supposing that this grad is essentially the same \
as grad S, despite the difference in the number of given points (3 versus 4).\
\
\>", "Text",
 CellChangeTimes->{{3.771349795767776*^9, 3.7713498431972713`*^9}, {
  3.771350108095695*^9, 3.77135011499921*^9}, {3.771350196595113*^9, 
  3.771350205528767*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gp", "=", 
  RowBox[{"Grad", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "4"}], "y"}], "+", 
     RowBox[{"4", "z"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.771283040125203*^9, 3.771283083974598*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"-", "4"}], ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.771283085062996*^9}]
}, Open  ]],

Cell["And dotting curl F with grad S.", "Text",
 CellChangeTimes->{{3.771350260127043*^9, 3.7713502675972*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"0", ",", 
    RowBox[{"2", " ", "z"}], ",", 
    RowBox[{
     RowBox[{"-", "2"}], " ", "x"}]}], "}"}], ".", 
  RowBox[{"{", 
   RowBox[{"0", ",", 
    RowBox[{"-", "4"}], ",", "4"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.771283249039995*^9, 3.771283289098811*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "8"}], " ", "x"}], "-", 
  RowBox[{"8", " ", "z"}]}]], "Output",
 CellChangeTimes->{3.77128329087351*^9}]
}, Open  ]],

Cell["From the equation of S, I see that z=y.", "Text",
 CellChangeTimes->{{3.771350925424069*^9, 3.771350948806828*^9}}],

Cell["\<\
It remains to decide on a curve C for cut-off. With similar thinking to Paul\
\[CloseCurlyQuote]s example 2, I choose the projection of S on the xy-plane.\
\>", "Text",
 CellChangeTimes->{{3.7713503278112783`*^9, 3.771350394230342*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RGBColor", "[", 
        RowBox[{"0.2", ",", "0.7", ",", "0.9"}], "]"}], ",", 
       RowBox[{"Thickness", "[", "0.02", "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "4"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"4", "-", 
           RowBox[{"4", "x"}]}], ",", "Medium"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.8", ",", "1.78"}], "}"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<boundary curve\>\"", ",", "Medium"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.5", ",", "4.3"}], "}"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<in xy-plane\>\"", ",", "Medium"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.5", ",", "4.15"}], "}"}]}], "]"}], "}"}]}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "100"}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "4"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"ImagePadding", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"10", ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"15", ",", "15"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.771277396238967*^9, 3.771277599163389*^9}, {
  3.7712776491010027`*^9, 3.771277678665154*^9}, {3.771277716073516*^9, 
  3.771277905297553*^9}, {3.771278209959586*^9, 3.7712783600507727`*^9}, {
  3.771278397602831*^9, 3.771278434400235*^9}, {3.771278587508807*^9, 
  3.771278588187182*^9}, {3.77127862186826*^9, 3.77127887696189*^9}, {
  3.7713505422408543`*^9, 3.7713505878521223`*^9}, {3.771350620898641*^9, 
  3.771350660057721*^9}, {3.771351314562883*^9, 3.771351314794353*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.2, 0.7, 0.9], Thickness[0.02], 
    LineBox[{{0, 0}, {1, 0}, {0, 4}, {0, 0}}]}, InsetBox[
    StyleBox[
     RowBox[{"4", "-", 
      RowBox[{"4", " ", "x"}]}],
     StripOnInput->False,
     FontSize->Medium], {0.8, 1.78}], InsetBox[
    StyleBox["\<\"boundary curve\"\>",
     StripOnInput->False,
     FontSize->Medium], {0.5, 4.3}], InsetBox[
    StyleBox["\<\"in xy-plane\"\>",
     StripOnInput->False,
     FontSize->Medium], {0.5, 4.15}]},
  Axes->True,
  ImagePadding->{{10, 10}, {15, 15}},
  ImageSize->100,
  Ticks->{{{0, 
      FormBox["0", TraditionalForm]}, {1, 
      FormBox["1", TraditionalForm]}}, {{0, 
      FormBox["0", TraditionalForm]}, {4, 
      FormBox["4", TraditionalForm]}}}]], "Output",
 CellChangeTimes->{
  3.771350510689941*^9, {3.771350543608251*^9, 3.7713505887956867`*^9}, {
   3.771350625597163*^9, 3.7713506607350683`*^9}, 3.771351315543405*^9}]
}, {2}]],

Cell["\<\
It is necessary to substitute the value of z which I found before, making\
\>", "Text",
 CellChangeTimes->{{3.771350958449942*^9, 3.771350975157216*^9}, 
   3.7713513420960693`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "1"], 
  RowBox[{
   SubsuperscriptBox["\[Integral]", "0", 
    RowBox[{"4", 
     RowBox[{"(", 
      RowBox[{"1", "-", "x"}], ")"}]}]], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "8"}], " ", "x"}], "-", 
      RowBox[{"8", " ", "y"}]}], ")"}], 
    RowBox[{"\[DifferentialD]", "y"}], 
    RowBox[{"\[DifferentialD]", "x"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7714223449749203`*^9, 3.771422347317172*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["80", "3"]}]], "Output",
 CellChangeTimes->{3.7714223491448317`*^9},
 Background->RGBColor[1, 1, 0.85]]
}, Open  ]],

Cell["\<\
The above answer does not match the text. The interior dot product which the \
text answer gives appears to be based on\
\>", "Text",
 CellChangeTimes->{{3.771351023299662*^9, 3.771351055576747*^9}, {
  3.771437549760974*^9, 3.771437551544901*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"0", ",", 
    RowBox[{
     RowBox[{"-", "2"}], "z"}], ",", 
    RowBox[{
     RowBox[{"-", "2"}], "z"}]}], "}"}], ".", 
  RowBox[{"{", 
   RowBox[{"0", ",", 
    RowBox[{"-", "1"}], ",", "1"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.771351068514529*^9, 3.771351100350634*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.7713510922685003`*^9, 3.77135110127201*^9}}]
}, Open  ]],

Cell["\<\
And an integral constructed from the above dot product, no matter the limits, \
would equal zero. For information, the text answer lists \[PlusMinus]20 as \
what appears to be the integral value.\
\>", "Text",
 CellChangeTimes->{{3.771351111101334*^9, 3.771351170594039*^9}, {
  3.771351445282279*^9, 3.771351453441813*^9}}],

Cell["\<\
Just for kicks, I played around to come up with the meaningless integral\
\>", "Text",
 CellChangeTimes->{{3.7714223889328203`*^9, 3.771422410387052*^9}, {
  3.771422494169786*^9, 3.7714225009122467`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "1"], 
  RowBox[{
   SubsuperscriptBox["\[Integral]", "0", 
    RowBox[{"3.405129", 
     RowBox[{"(", 
      RowBox[{"1", "-", "x"}], ")"}]}]], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "8"}], " ", "x"}], "-", 
      RowBox[{"8", " ", "y"}]}], ")"}], 
    RowBox[{"\[DifferentialD]", "y"}], 
    RowBox[{"\[DifferentialD]", "x"}]}]}]}]], "Input",
 CellChangeTimes->{{3.771350847198094*^9, 3.771350876443282*^9}, {
  3.771422132252838*^9, 3.7714223157585993`*^9}}],

Cell[BoxData[
 RowBox[{"-", "20.000043342188`"}]], "Output",
 CellChangeTimes->{{3.7713508720775747`*^9, 3.771350877464609*^9}, {
  3.771422128719262*^9, 3.77142231705166*^9}},
 Background->RGBColor[
  0.6572365911345083, 0.9900053406576639, 0.9543907835507744]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"3.", " ", "F"}], "=", 
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "z"}]], ",", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z"}]], 
      RowBox[{"Cos", "[", "y", "]"}]}], ",", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z"}]], 
      RowBox[{"Sin", "[", "y", "]"}]}]}], "}"}]}], ",", " ", 
  RowBox[{
   RowBox[{"S", ":", " ", "z"}], "=", 
   FractionBox[
    SuperscriptBox["y", "2"], "2"]}], ",", " ", 
  RowBox[{
   RowBox[{"-", "1"}], "\[LessEqual]", "x", "\[LessEqual]", "1"}], ",", " ", 
  RowBox[{"0", "\[LessEqual]", "y", "\[LessEqual]", "1"}]}]], "Text",
 CellChangeTimes->{{3.769089921052499*^9, 3.769090058836027*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.707411976463635*^9, 3.707411978268442*^9}, 
   3.769089448765614*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"surf", " ", "=", " ", 
  RowBox[{"Plot3D", "[", 
   RowBox[{
    FractionBox[
     SuperscriptBox["y", "2"], "2"], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.707413334432379*^9, 3.7074133907473583`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
6dboYe+zUObkt88pn0fd733ePin1+MLIWLfz8gdPr3OP97lK5rQtd5XX3+Z9
zvzvgl9/Fx7m6txww2ne2vt8UuZdnWl+WEvy7wm3mtA03Mv7fEDy/yD54fNj
yd9Q8sMn54fPOyV/seSHz+8kfwvJD59DRuYsiIbyXPPXn33j/uPDvM/Orev0
K79vbvB2+z7LTw31Pm+cd8dDO2KL3KmGv/m4f+0hZ3yWDVw1P7LQrb5i9mMP
NxrkfQ6963P3YWiBm3RNuNlNrQd4n01Gp+f2TcfcwHYlx68I53if+cV1m94Z
nefGvln5LxfEn/U+P5e51g00fxss+a+U/PB5t+Q/V/LDJ/KflPzeJ+WHz1cl
/xTJD5/I/6LkRx9ISv4PJT88n+gxuzQUPn2fF2uanFb0d+95WbWOU6OhFW7t
Zz9fO7fDR97zqJmFPbKyvnXLPsqfGB8X9Z6fuPfFi/qml7lFr334m+Wn3vee
2/5Sb0M6VuCeLsmvPHnOSO+55ifTR4Sj+e6hpb2K50f+5j1vu+XmjvMjS114
YlZyVbPh3nMTmWvtpPnbT5J/k+SH5wLJv0bywzPyF0h+eOb88Hy95H9G8sMz
8j8o+eF5q+TvKPnhef6FP72Xjq13S/dcNaNz3mTv+dNnljwbDa13Q++t0TM+
bpL3/NbiEeFwdJ27MVF8fvOBE73n537zUNOsrHXuX1cvXj266wTv+Ytv76ze
N73GPdumVa063cd7z0P77kmkY6vdvnMODdjXYJz3fG+DwS+Fo6vcY6UT9uat
HOM9r5a5VlWav8Ukf57kh+fxkn+I5Idnzg/PnB+ev5T8EckPz5wfnrtI/h6S
H577vfrBjFB4szvnmykvVbvmizN9eOOjb6Zjm9xZl/X/Ih2b7T3femXz3tHQ
Jld72K0lczrM8p6vGnTChaMbXc195zYcvuxz77nB6uQlWVkbXY07i7t07zzD
e/610Xv/ikU2uOr/mPNm683TvOeSnG6bI+nTPs99NV67+1Tv+W2Za9Wg+VuO
5D9L8sPzw5K/ruSHZ84Pz5wfnpG/puSHZ+SvJvnhea/kryL54fmaQy2WRtLb
XfNjHZrFx8W85wv+8O9PQ+HtLjxuwmvp2D+957L3lg9Ox7a5p8KVC0+tm+c9
7y/+8KFoaJt760Tv6y8+/JX3vK5Nz9+Ho1vdtMkF0XbVvvKevx5+df2srK1u
eZcrjzzYaO6Zz9fSJ4/FIlvc/v8Mv2Nguzne8+0y16pJ87cWkv+3kh+ez5f8
2ZIfnjk/PHN+eEb+6ZIfnjk/PE+Q/PskPzwfvm/Vjlhkl+s4PT2m6/HF3vOG
z3IXRNKF7o0u81tNK1rkPS88+fioULjQFZyMrj61Lu49T77r2n7p2E5XbWLf
JzvnLfSeR4z/zz3R0E7XMXxnpUlzvvGe+3+/4upwdId78/srxv48cYH3/Oht
o2plZe1wy8dUahOOfq3mb5Vo/nZI8t8q+eE5Jflfl/zwjPz5kh+eOT88c354
5vzw/IjkXyb54XnDztb/Livb7Vrcdv9bofCZ+Vt2jbF90rHdrvC8sn5PzVp6
xnPLSltjkd1u5P4ZPWfVW+o9t3z4yY7R0G7nFtx/9/GcpPc85bXV8yLpInfs
nbJ2rTfnec8Xzm71P+FokZvwyOdNB7bL855HbB7zQShc5Lq0+GP9+Lglav42
mOZvyP87yQ/Pd1B+75nywzPnh2fkPy754ZnzwzPnh+dro1WGh8J7XWx56tbO
eSu856kL+5wof51fRrXvMqveCu/5opK1j6dje1zbJyY9Urv7t97zyLN/vyEW
2eMGtqnd56lZy73nytePuzka2uMWVM15YdmpZd7zgMcqfxlJF7tTG7a9Ggov
854PvfPUZeFosbth8s0jh40uUPO3/jR/Q/5/Sn54/kzyn5D88Mz54ZnzwzPn
h2fOD8/I317yw/N7HVMNwtF9bnH3PpWnFa31nqs+f/1rofA+N/KqkS0aXbzW
e35xzPjvy8pKXI+Tcx8e3XWN91yarNozHStx1xRsebPeu6u9556lT6+JRUpc
VvTXuW8tW+U9bzxv/Y3RUIlLdW+8q6xspfec7drOjKT3uslXdawzsN3K/3f+
hvxxyQ/PVSg/PCN/d8kPz5wfnpG/kuSHZ+RfL/nhGfknSX54PnJqwsRI+oCb
UHXEY6O7npm/9QrVOCccPeDWHxz8VlFJynvedHdkSCh8wFVaG5ndbGDKe77z
xQ2l5a9/3bzuG3Jqp7znxRPadUvH9rveY+7518Jx673n6777dEUsst99NOSm
RtWuWe89T/2x2vXR0H5X0Pva2zvnrVPzt740f0P+TyU/PD8m+ddJfnjm/PDM
+eGZ88Mz54dn5M+X/PB81xfPtYiGTl8nex9L5tQ+M39bsnXTuEj6kBuzfPHJ
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
70J/XhP8HenPX4K/O8VnBH+niu+QfRTgVYUH/Sqm6jsF/tV1OehjK9R1OehX
m1R90JcKFW8l+yJ4nZ/kd5z4+t4u6HuKvxz0ScXzgr6qeN2gDyv+W9lPwvzF
4HxWfE1w/qv7kElB/1c86FcbFU8E1xfFGwbXI8W3yL4RdVzSH3j+fG9wHVT8
78F1U/FtwXVW8RuC67Li+cF1XPG2sg8HfOn/+XxhcRz3Ib/Kfcj4oP+o+fkt
wf2D4hcG9xuKvxfcnyheJbifUTwR3P8o/lfpz8xfkf6J+4er5f6hy+Sgf/J9
VB15XuP7jdHSV/l+YKfsmwL/QXhoctBv+freSfot8/Pl+YjX/0L6MK6/j8j1
92fpw+APCW8r+7W4foL0Z76Ovyv9ma/7MenPvM4G2U/F6yyXvs3X67Okb4Nf
I/we6dtc31z2lXH92ZODfs71a6Sfc/2fpJ9z/WTp58wvkH1SvM4u6fN8/xCS
Ps/8Senz4K8Kny19nuuLpc8zXyV9nvkl0ueZn0gEfZ55P+nzzA9In2feUvo8
5/9F+jzfL90ofZ7nV0Olz3N9vvR5rj9X+jzz1tLnmb8tfZ7XHy99nutHSZ9n
fov0eV7na+nzXH+h9HnmG6XPM79f+jnu686ROdVo6efMd0g/57nWTdLPuf47
6edcf4f0c+ZdpG8zbyt9m3l96dvM35G+zbyS9G3OGZe+zfUvSX/m+96B0s/B
84RjnyrP8bBPle+HsU+VOfapMsc+VebYp8q8oTHfw35UNceT/skc+1GZYz8q
c+xHZQ4PfJ8PD3yfDw/M4YE5PDC/zJjv4Xi5HsfLHMfLHMfLHPtdmeN41ZxN
jpc5jpc5jlfN8SQ/c+RnjvzM/T5hIyc/vyAnP48gJ3PkYY48zJGHOV6X7//x
uvycgvX5OQLrW+vwfTLq1XOE9A2ej6E/MPffAyWO84Q5/DOHB+bIzxz9IfN8
b63i/vuexHG+Mcf7yxz+mcOn5Y3vh+FNzQ/FG3N4Yw5vzOGNuf+eJnH4UfNA
8cMcfpjDD3P4YQ4PfH8OD3w/7793SRwemMMDr4/jZY7jVfNGfF+SOI6XOY6X
OY6LnwtwXMz99xzpuQDHxRz5eR3k53r/PUSqR36uR06+z0dO5v57gsSRhzny
MPff1zNel++38brMsT5zrG+tw/exqGeO79fwfRT6aubvC+TGmaO/Mcc6fF1D
n8m8Tz43zhzrM0d/YI7X5esXXpc5/q4z7yfPjfP1F3m4HnmY4++XOXLy9RE5
mSMnc/ydMsf5z9dlHBdff3FcvA6Oi+txXFyPv2vmrY35of99Erq+wwNzeGAO
D8zhgTn+HjPvu86Nq/me+GEOP5nnflsUhx/m8MMcfcC6/1HzQPzeCHF4Yw5v
zOGNObwxR//JPD/MjWfet5yr5orwzPXwzByemcMzc3hmDs/MBxtzxZeNuSKO
i++jcFx8X4F1+PqO95HnilifOdbn6zi88fp4XZ7v4XV5rtjGmCsiD1+XkYc5
8vA6eB/5Oo6cfD31v49B8zrk5Hqc51yP/MyRnzny8/rIzxznIa+D4+LrOI6L
OY6L53I4Lq7H32/m/Ye5ceY4XuY4XuY4XuY4XuatjbkiPPD9CTzwPA0euN7/
XgTVwwNz9LHM+wZz48zhhzn8MIcfzul/F4LnnOKHOfoS85eNuRm88fwN3pjD
G8/l/O8/UD28cT36f+Z9g7lx5vDJHD6Zwydz+GTuf/+B8sMn1w825o3wzJ+/
ox4cv7v4v+VvARM=
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
s76VXwrOQeTD74Fvj95PreBzNB+ZDVQw/l3OcbJs3lb5geA8ZYv8THD+Ui65
PqMa0XD5p2xv7kM2Dc7Rdsm/BeePu+HGwfb++5znSPmU4o5h8N2MYad8Y3BO
tzezmcp95N+Um0/WvGd2WznX/swmK3dT8nJxcB40hlYhs1eyW5egb6e9mb2v
csB/4PbBedzvmT9S/vhb5neUPx7MfKLyx78zX6na3VE8q0tw/JCSbaligCOZ
z1Wd9nBm2xV7/Jv5r6JZPnE93I3x5JLHpjyuAHx5cLyRT96nikPG5e3DlIMU
RN81OFZRfUv59avcpzH6u4PjuiLJNl/1umLwlcE1hBLJ+aNqd6r7KmZbohgg
uU6oGl2Z5JqGaoClkmsjquMdmzxm1foqJNeXVOs7Prkmo1iomnK84JinutZ3
cHxYC74lOG5UPVs51zs8t3KyP1I89kje9UbldKpPK+Z8L7rOrXjy3egYdhI8
Ojr/ux2+Odr33g8Piq6bKgd/ET4zeZ0rvlWdT/XnRdG1bdVzFkbXAlUzfCm6
zq3ayGtwg+T7Kx5WzVt1ideja95L4Tfg5snrVnHmjLxjIMUA8/OOtxTHKp6d
SJ9R0TVy+bhl0bV2xW9Lo2PVyfCY6Hr5MvhNuFnyeyluX5G3rZTNlC+QL5E/
UH5QW9+c/5VNjrtU676UNju4/lY6Oa5QLfHK5PxUdbaqybGc6kV9k22+6vmq
Q2iNXRRdU9E676TYIzn3Ud2pXXIOq5p2++TcVjXzY5JjQtVyOyfn76op9Uv2
NToLKJ8cK6r+0y0531dtsE+yH9H5wq3wguD67ZeMoWFwDrUObhSce6q+IltR
P7r2KTtZHrks7zxcuWSV5PhTdbCzk+Mu1eqbJMdOOh+plBxPqj5WMTlGVY3r
wuT8XecCbWhjgmP7X3KOJ5WPKGdVneoVxVrJcbVqcRcn11hUQ6ufHHvrnKJI
9i51onO+JnDD6DzpbLhR5jdlz1/O2VbKZp4afYZzAdwiOnc8Cz4NvinZd6um
HbL+p6BfnnMerZy3Z7IP1ZlOr2Q/rvMF1bdknxsoppWfCz4TUa3uCrgz+obJ
OZrOaLon+yzV2/+iT7fgWl+d5LhUNcB6ybG3zmLqJseiOnP5IOd8X3n3Xtpa
eCKyRnJ+oTrkNcl+U2ciNeFBwTXG2skxsOqEh7Kx6TyraLYe6jLOwlzfHFxj
LJoc56tmXjI5llZd/cbkeEY1/0bJeajOqs6gjQo+OzsnOZbWOdR1yTm1atHK
F2XfronOR1vATWR/+N+DwfnXLcl1CdVp5X9a6ltF19K0nmdH1yZl5ztG51jP
wFMUsyTnDjoX25NzTqT5fzXvfEO5mOJqxVDNCjjmVJw4H/ljzrmGagiqZcoP
nq8cITmfUq1eeb/W8P2K95JrYqrnqwag8Q+LzoNlt6+Nrv0rzqyCvEPzF1y3
b0sbHVwf6JRsu5Sf9oBfCa7T6nxD8azi5G2Zj1YssSP7JqpvbM++oWoaiucU
Tx6rGB59u+C6wQ/ZmledZHO2R1RjOS85R9P5YIvkHFDng1clf0+dl+msQ7HK
SciN2b7Q/rg6OdbSOVrv5HhV55stk3M9nS02Tc7vdJanMw3FPzWRrZJzTJ3P
tqZNCT7jW5tzvUX1tG/gc4JrR+/kXftTHfWLLKZSzPxxZrdVW1sN1wuuy32a
81mG6mxfZ/ZB9Z9h2X7RGY3qlprz+qyBDsn+RbWFT3KuuamO92HOdTbVvjom
+03VDTZldkO1qVU51/pUK1uZc/ysWpbGp3GejPwfs6TD2w==
          "]], 
         Polygon3DBox[CompressedData["
1:eJwtmnXg3UQaRV9mXilOi7WFQg13Z3GKF9fFoTgUdylOcS3u7u5uxQuLLlrc
3RfbRfYcbv5Ik9O835Nk5vvuvZNBW+669i6l0+n4T5f9VPyzAfu1mk7na47v
qp3OTvBW8Mnw93AfeEJ4LPwAvCe8I3wm/BM8EzwAfhaelm04vAH8I8fTsG0O
rw//wPFcvH43eEU+/xL4Z3hmeCDnn4PvhXeFt4VPhe+H94BHwGfA97V/vx18
Gjwp21rwMPgTjvuxbQb/E/6e455sK8JLw+9yfAd/vwO8BXwivAR8iK/n+1wP
vwCfCI/i/LXwFGz/hNeAv+R4crb14NXhLzgej20FeCn4HY4nZlvD3wd/xPEr
vN8Z8InwzXDDtjT8D/gNjnuwLQ8vCb/NcZdtOXgJ+C2On+fvT4CPgK+Bn4GP
hA+Cr4CfhY+GD4Gvgv8FHwUfDF8JPwcfDx8OX+29ZnsKfhier0enU+Ch8CLw
OH8r2xPwg/A8nF8ffhJ+CJ4XnhJeH14T/sr34v0Phw+AL4UnYlsdXgH+kONJ
2NaEV4I/5vglXn8qfBx8AzwB26rwcvD7HP/B+YXheeBX4PHZVoKHwu9xPDXb
xvA68Dcc/5vXnwYfD98I92HbBF4X/pbjvmybwuvB33E8ltcfAY+EL4P/By8I
zwX/G/4dXgieG34Z/hbuBf+X7Un4L3hJjhfi/GtOILal2C0Mv87xq5w/Ez4J
vgV+GT4dPgG+CX4aHgUfCF8O92ZbF14N/pzj3zg/DzwL/CL8J7wEvCD8KtyL
bR14VfgzjidkWw1eHv6A4xd5/UnwkfB18C2M697wG/AS3L9fOD8XPBP8vPON
8xPCH8I7wvfAE8AfwCPgZdvxtmnJ+P2oZHxOzP4l+JOS8T9pyfW6j/1E8Ef8
/U7wuyXXZzz2L8Bvl1y/HiWf/17JfOhZ8nvvZz8x/DF/vzN8Nzw+/D68A/wo
PCX8Jbw7PAaeHP4c3hW+va1rb8HbON9hfnbnbXjb9npY/8bBW1nPgEngT+Bd
4Dvh8eB34O3g22AuQedNeGv445L5OknJePm0pL5MVjJefyy5P9OyfxP+D9uG
/O1GbD/JJfe7f8n8nps3P9T5Af8FzwIf4HiH/3R8loznISXzox/nd3e+wj/D
v5bU74El8+OPkvE+Q8l4eKVkfP/B5//L8Vkyvv9s6/VrJfPtr7b+flMyf6cq
Gd/fl9TXviX14buS+dynpH69yH4w/Bt/f4DzpaT+TV0yH54sqe/ftv3jq5Lx
OmXJeH6hZLz/wvlnrFfw3PDP8NPWC3iI8w8e6XyHZ4D/Bx9ovYOng3+C94fn
5/rs7XwqqY8LwPtYr0vq4XzwXs6fkvm3CDwSXrukPs7T9puVS+rZgvC+1v+S
+roofKD1p6Qez9v2w1VK6slybf3drGT+f8Z+Ebg3+yPhz9kvCk/O/qj2+i4D
92N/jPOf/crwYPbHt/d3GDyI/XHWQ95/Q3jekv71Pvv54AnYHw6PYz87XNkf
Cn/Afn54QvZHwF+wXwyegv3R8Jvs57CMsT+sff/trb8lemBoWy83LqmvS7f1
fqOS+j2W/TTwD1z/faxv8LTwj/C+7f3vC38H72W/gPvB38N7w4/AU8BfwLtZ
T3j/l+Cn4cfhZzjfH/4PvB/8GDwV/BW8h7+H1z8G3w/PxUTf0jHZ/v3i8Ou8
fla4YX8w5+Zs9cUK8MXw4vDB9oeSerkYfJD9o6T/L9PW601K6vcc8C7WW/gi
eHZ4Z/sXfCE8W6ufloUvgN9gPxtc2B/Szu8d4WXg872/NeN95ib18acSfTFd
iR74paTfDijRL6tao+FbeP2M/L4F4LPgk+FJ4PXgx+EH4Lnhda2R8L3wnPA6
8MPwPfAc8IrWRPhaeCC8pjURvhOeFV7DmgzfAc8CrwU/CN8FzwavAN8MXwMP
gIdZQ+Eb4cHwEHg7eDj8u7+fbX94d7jh/Mzd1DP1nYV6f67HfRyeyu99jHMr
s90F38T5IZxfzZ4F3wrPBK9kjYdvgAfBq9gz4JvhGeC14Yfgu+HZ4eXhm+Cr
4enh5eAb4avg6eAl4CvhC+Gp4YHw1vY/+DeOB7Bt5XiAf+V4erYtnR/wLxz/
wPcfYH1s69eSbFfBF8F9eL/+8Bad9AR7w4+8fqD1ta1/S7FdDV8M9+X1S8PX
wJfA/eCh8LXwpfA08KLwRfDZ8BTwIvCF8Fnw5PCy8A3wlXB/eDC8Lbw5/D/r
G9vZ8CnwpJxfGD7X6w/3gheCz4FHw5PBi8OXwOfCU8GLwRfD58BTwoPgbax/
8H85nrWbfrYHXDg/Qzf1Rf39h9eC338ZPJL7/SA8HL4UPgB+AN4Bvg4+HH4Y
3g2+FT4OfsSxA98GHw8/6r2AL4cPhB+Ch7X6d0v4VniVVt9vDd8OP1HiX77h
+zwFl5r7ORv//ylca+737CV6SzEw3Plaomf/KvE3M5Xo/T9L/MeMJfp35Va/
bwXfBo9Xc/3nKvETTc14mKXEv/SsmS9zl+jrbs34m6NEH/aoub5zlviPn0v8
yfQl/mPNVl+PgO+EN4TP8/rD91qvutEb+/N7u9yPueBj4cPgnvD88OhO9PnE
8LzwyfAx8ITwfPAp8LHwRPCc8DHwofB48IzwCK93E/0yN9txnfiP8Tk/B3xY
J36hB/ySOpftEvutPYvv+4jjq6T+r9P6p53he+C1Wz29E3w3vBF8PrwnfB+8
VusHdoTvcm573+DPrSElelI/+x6f+YRzS51k/7FmeL6t51tz/hRrR8n8/LSJ
/r+nrf/bwKO70Qv+nmEl9euhVn/szPmzu+npelM11Pdtz3bsOwfstfbo+Zto
gnFtj160iSawd49f4hWX7kQr2+P1akM76f328GWbaAZ7e68Sr6sm/bTt6Qs0
6flvtppi7SYa4rdWgyzTRGN83moMswA1pdrjwVYv7cT/ndWNJp+8SY9Xq6vx
ezXRAGp/NXenSU9Xi6u5SxPNrhbXY0zaRAPoPfQYEzfRCHoPxbneT02qNlWD
d5v0fLW5HsAswnt4d9sT/b16xF9ajTW0ZbXXSXz/96z36h7uz4nwu9Z7dZj9
q6b+bV4yftWDjte1SurVwjXzY82SfrVkzXxYH649ooecLxuWjOelaubHBiXz
y3pmf92/pF5uXtMv9yupl5vV9KN9S+r3SjX1dnjJfLR+WY+3KJk/zmfr/+4l
9XmDmv6wW0l9Xr2mH2xXMl+tB9brHUrm8wnwO/YDeBH7e0393r5kPutx/uzE
U+l9VqvpJ9tyPAHnN63pl/uU9Jf1a/rVriX9Y72afme+pB7ZpKb/7A33ho+H
34avcFzDh8Av2L9K9Iie7PdOPKte7aua+XtDiZ6bme32JprkAM5NC1/R5DN2
1JvD15V4ggdLMqZ9m2Q8Zk9mPEc18chmPyd004utwdZiPe2cTTyTXvcO+Az4
AnhVa4/9q0kG1afGU1tDSvt99XyLN/HIesEFOf+ovd0aWnMNzmxyTb02x9oj
4LXhH9oxY222pjiWHFPWysM7GWuOuf2a1HDHop5xhyYaSi/pPTq6yRj13uk5
9Z72tL41ntH/81gvaY9bpYlntfepoa+3F3WirfWM0zfpkXrJ++HL4evhjTk/
Br6tiWYbAf/aJLvQ0+nt9GyzNfEoejk92+xNPIleTs84KzxvJ15SD99PLdeJ
t/+siTayBluL9ehTNvEEevepOP7Se8V2LfwM/FUn3/+8Es0/L//3j068gB5x
xiaeR++oRxnSRKPrXfQU/Zt4TL2GPWK8JhmE9UaNMH5bf55oNeojar1OtOt7
bf0Z1tbPr2v6i2PEsaLnGeQ16sQL6YnMPvXIeiUzjWmbeF6zDj3RNE08tl5J
DzRDE4+nN9JzDW7icca2/VP/c06J3j8Ifg4+s0SvHww/D59Voof1vPZma561
Tw9kdqRG0hvpgcxC1TB6Iz2vWaSaSi+sxzaLHNWJ99Zjmz2aGem9zWjNavVc
U6lF1HBNPPWMNZ7a7FLPrNfWk5uN6Tn16mbAZsH23ClqPPkB7fyw9+qh1JZq
TL2VE3FQez2832YcA9rra/Zh5mT2pecyi3quvf6ztP1GDXlfEw2ittTj7d3E
E+r99Pgj2/mo99fz7dUkE9AL6in3aeIp9Zp6wD2bZAx6w3PhXZtkEkNqNIZa
Q884WY2mUFuoQXrXZG5mx2oeszg9qFmiGkdvqic3+1Tz6dXVmKc10XxqTzXu
6U00ktpXDXVBE42stlIjquXtEfYKNdN5TTS4WkqNdX4Tja72MtMw21STmXWo
qfUK9ih7lZmA2nF0W6/UnHoVe5a9yzUD1w7MWKa118G7NNFMg2oy/hFtPbM+
qaHUUmqQATUeeea2vpgtqknUJmYw09V4iOuaeAS9hZ5Br6hn1EvoCa5v4hn0
CmrGy5p4DLWknkMvbM+2d+vJ+rb1yHqmp+vT1iOzKutdv3Z+Wr+2q/Gfh5T4
Nz/Tzz6sxK/tW5O/n1ziT7ev8fOHlvi7bWv87sElfnGfmvz9pBL/u1ONPz+y
xM/Z8+yFo0p64dY1/vugEv9qTbI2jS7xy0fCr8EXluT5R8GvwxeVrAccDb8B
XwzP3yM91t51Wknv3Q8eC59Skj8cCD8Ln1GSF4y0Z8Cnl+QFe9bkESeU+PMj
4Ffg80vyiePgt+DL4YV7pEeO68QL2DsX6JH6ag+VR3H+Vc5fULI+cSz8JnwZ
vFCPaLY92vlmPdu7Zj3jxJI8Qv84Bj62JO8wY3HtxQzb7MXM02zfzNos1IzS
7N3M2uxSj+Vaj/pa72XGafa/dCfZp5muazdmxGa9ZtqztP1N/W5mqp4f2kmW
Oq7V88t04g/MlF2LMKM1a1b/z9r2T/W+GbtrE+pjs3f1vv3NjPFvvduN99KD
TcJv3aUm/zi6JO/YtSb/OaYkr3GNz7U+M6mJOLdzTb5zVEkeosc2O/Kaee30
QK6F9G77sZn3PG1/1W+MbfV537af6eHM4uxJ9ib7ufpOfTmm1dS7t/VbrW1G
Nl/7e95oNeE97eerFf1OZjVqZr+rv8ksR03tb/U3XdPOX3/r8G705dgm+t85
YxaihnUu+X9j2++nV1ATP9mkR6qV9+Tvp4NnhB/n+5xboy3VIGoRx9C1bb3x
+mzWTb/1PXwv5/ylbX2xFjgnzZbUyM5Va4RZjxre2uGcNytSU1sLnDNmW85p
55Ke4Zy2Xusl9BTntvXaerV5N9/9qSb+xppySVt/rTWbdjNfn2iivw+C5+B4
Af7v5VZje7/MYNXeozi/GLws/GGJJlRbfcr2ZU0GZha2NdwfvqSm99qD1TqX
1WgVNZZa64IabaOmUducX1M7raFqPzM0s7StfE3NNZ+a46+b3IsLa7SZGkmt
dGmNdlMDqYX0JGZfeiC9inPeLNKaai3wN3ovf2/y26+q0aJqVLXqrZz/sBPN
9mmNn1BXqi8/g09m+7oTT+L1Oa/m3Mdsn3O8Pe/Rs8l3vqvEg0zayXv4XpfX
aE81nFruCnjOTjSp2lQPaJZ3cSfe8MqauW8NUCtfVPP91ahqVXuC2ag9x15h
DXdt1xptbT+7xqvr0fXqp9Z4cT26Xv26mmzADMIs4swab64n15ufVePt9ex6
91Nq5q5zWK82usbr6xn1jtfDi3eSOZg9bNJNP3i8SX0/o6Y2WCP08l6jnvC7
Ta7d6TXXTs+v99eT6Y1mLfFqt7ZspmK2ck1NrbAGqvX1UI7VaUq81e2c36iT
zMPs47aa7MOMw6zj2prsxZpj7TmtJmswszC7uKGmNlujzV427qYfPtak39xY
83lmNmY3zhHn0kQlc+cWzq/SSUZjVuOcc+5ZI/TCXhOvjXPSXuicde5as8wq
7Hn2QvMxe6Gf6Wd7Te199ugxTXq8vdue7lq9GsNeb490LV8NYe+057o2YE+0
F+v3XDuxR2/RjSYxO1eTqFX0ENb/R9r6bc+/pdVTaoGNuvlse7Tf76Ya76MH
Mou5uSabMmMyazqnxruZIZkl6UHM5u1JehMzNPWf+lB9r4Zw7UHNo7bQw7j2
YE/T26g5XKuwZ6lF1DjqPf2o2ufiGm2vxtdrXV1zf/SgetENu5krXkOvpZmF
aylmQmYZZrg+y+CaptmuGaxr9a7RmM2aeZidm9mYhbxfoy3VoGpR12Bdm3dN
1bXZ12u0uBpdre6ars8+uCbqWu8bNVmDml3t7jMsPstixjx5TQbt2r9ryGbT
Zj5m8+pvsyAzaZ+1MG80q36rRuur4dXyZtQ+m+Iartm1mbNzyTnlXHuEbb9O
PJpezYzZZ13MmM2efYbCZynMuHvVeH6zgCNKsgAzK7Nk/aRZ1kc1Y+fvMdRN
JmWWbEZmVmXmZnZsxmYWZ8alH9Vf6idcg3SuOmfNS82ozJ71F2ZXZlr6Df2P
/uXDmnvvGFD7m6H7rIp5ptm6mbvP8rimZhbvMyI+K+Ka+aReP7ZHO/GAekGf
MfFZE9fgJ6zJ3PQ7+iv9zKM1WlPNqRd9reacr9EbPVbjDfWAesEnaryhnlJv
aaZkFrVNSdbkM1I+KzWc/5uSc+/VaAs1ht7kyZosS4+p13yzxpvp2fRuD9d4
Sz2V3mrjdjzt1WY3rmG5lrUN/zd9zTNaPqu1BTw1fGeNFlRDqiXfbe+vHkmv
9E6NllHT6O3G1WgPNYhe8gP49k48ll7rz1aP+p7687fZrujEg+pF/14DavJM
1kw1a4SuFZqPz1CzRuValWsig+ExNdmBHlov7RqTa02uqQxUL9R4dT253vz/
2Ai/EA==
          "]], Polygon3DBox[CompressedData["
1:eJwt2HncVdMaAODTOacSlRIZCjdJV6lopPFqRPOcRprRgAahgdusCQ1kqNwG
uSXuTZGhgUpo0mQoco3XWBpVKs/7298f72+t91nvPud8e++19tpfie4DWw1I
p1Kpz0VusTCTSh3NlUoVFVfItxislE2l7tLOZvNYczXXs95sFpspVsjbiNns
A/l2daPUVWX3snlsMWvP2rM5bCvbw8awiqwve5rNZc1YW/Yc28x2sX+yCuxO
9gSbzW5h7djzbAvbzUazZeJcVpZVZt/o/4sdkhcSxdiHrLxj79A+zp5mDdX8
V1zKqrN67JD+yyyftgyrxL7Wr+zYOHlz2CLWTs0NrA97is1hTdk8cVCeX1zK
Nhl/gf0uLyguYx+w/7Ai8bmsJvtZ/xVWWFuRVWc/6r/KLojrwmqwn/TL+d5u
2mnsKdZITRU2kM1lL7K2bJE4Ed8pSrIdxhewI/ILxeVsM7vZsY/Gb2KrWF81
pdmt7EH2CKvArhRXiBLGasX105aQ/01cpV877httKXGz/n2OfdCx1xq/XBSP
WmM145xpi8kvi8/VrxH3l/YacYv+MMc+IF6QlxHt2Xj5OLFUfl5cc3GxfqU4
F9pGYqL+KjVrfe/AuLbikvjdxqobm6m9XNykf5e6vmKG/CI1F4pi+tWMTdf+
XbTQf0TNBJ93o/FS4uoIY/8w9qy2tXhaf5O6bepGGr+WtWSPsomsWlxbUSh+
k7EqcV9ri8T1jfOgX5U9qW0oJui/4dg1jh1g/HxRMP4WY5XjHo7vF4/EPaLu
DXV9jJdlHdgENo3VZi+JXOwqVoZ9pl9f3TjtSvYO66emNhvJlrGVrCerxUbE
nIh5z3qxm9hQtoi9zDqzBmw8e52tZv1ZPTaWrWBvs3tYHTYq7nX2OuvN5ovD
8gtEcfaR8brqxmhfY8vFOvl14nY2Uf64ujqOKxn3XrTG6hh7Rvui/GTMe3G1
up28Bh+mXcxeYV3VLBEZdjW7ju3V/zdLa0uysrFW6t/o2CHahWxB/C1xD4sH
2UvyV9V1c1w1dl/Md/YS68CqswfYi2wZ68IWi1Pxt4pSbJfxpSyrLcXKsX36
tzt2nnY7+5SNU7NFNGf3smGsqryVuqfY+2wrG8HWZpL5eCqbc37Emkwyb09m
kzkbc3ddJjlvf2aT+zru79/EVz7rHJE35oixdzPJ/X465misD2JVJrmPf88m
93Dcy/vFIDbDcc/7LZ3kv4rP5CflhcQP8jcyyX18MJvMiZgbR8UZdeVFFXW7
jR9jZ+UVRFW2hx1hp+M8xXUTI3zGIXZM/5o4Xt02dYfZcXnpOJ5tZQfYD/KL
xZVsbdyzmWQNOZBN5ljMtdWZZJ06kU3WvFj78umXZK0d28mxf+q/mUnm7aFs
sn7EOnKR/vXsDnV91OWNc8PKs66sVzx/Y71hFVg31pvlibWAlWNdWE+WZQVY
adaedWNn9d/JJGvmH9lkXY319bxYe1lbdV3UndbPE79f24y1ZUf1z41rrW3D
OrNT+m9lknXvsLGisa6Kc+I+YS3UtVd3XD9/XH9tO9aVndHPHWuqtilrw47o
52VXapuzduyYfsFYU7Ud2B0s5TtWiorst2yynse6/rs4ENcnrqeyjbHPYI21
/dhgVlG+WTRjA+NZwarIPxJN2QA2lFWWb4z1ifVmA1k5+S7RmY1gY1k9+TbR
mg2Oe4rVkO8RXdkoNp41kG8XbdgQNpLVlH8omrD+bAirJH9fNGR92L2svHyn
6MSGszGsrnyTuI3dwwaxG+Q7REf2MBvNbpZvjbnOBrHhrLr8Y9GWDWWjWC35
wZjDsaeLZ3x8pnO7j/VTNyX2cOpay/eKe9jkeAayVvGdal9gH7PP2Hj2Wqyx
rB5rzE7qv8fqanuwfqxMzrqxX55b5BEbfdYKdoO6VvKO6vLJ18ezgfVk/VlZ
+ReiP5vKZrE28g2iPuvFBrDrYh0RPdlYNpU1kX8p7o9nNnuOdZR/Lu5mk9h0
1jLnno57u7jfdWM6ee7vlnfRHxl7C3X15Z+I7mw0m8xuk38qerAxbAprHOuE
469lt8V5ET9kEyvDOspvj+NjfRNlWSd5d8emHTtT/E+eL4Ktij0R+0ZeQJzH
3mJz2M/ytLiIrWdz2S/yrCjKNrDn2I/yM/Ii4t3YI8R5YKeSqZZazp7X+Yml
xIWa92Kd8vsWaz9l+9kUNbPE1/E7xLnsTeMFWP44h9lkzk7VzojzryYTzwp1
r8cehu2Tn00l7xkr4trENWa54t5gK2P/E/eg/HSsc+K1WAvj+a39hH/JJmeS
d4F4J3g2npPizthvsW/VnC/yG3s7nv3se3kRUZCtZreonax9m61ng9XcyqbE
Gso2sEEx/9hUtjruWzaEtWAz2Qa2mT3MWrJZbCPbwobHfGbz2c5cybvVBDZb
fCcvHNeTvWO8sbpp2jXsfTY01gz2OFvLNrEHYr1hi9ge9gWbFPcoW8h2s33s
sVi/2AK2i+1lE2M9ZNNjfrJ342+WN4/rxNbLP1L3UKyR7Am2jn3AhmWSvXej
dLInjr3xWfnJWJPTyXM2nrc7ssnebHQ62QvFnqiYi/yHujysqry2z/si9h7x
7NLWYvXZt7HPYAW1tVkD9l3sKWIuaeuwhuz7dHJDFNU2ZM2kv+kfV5dbW4XV
Yl/q51J3sbYRa84O6KfZJXHtWQt2MK5/Jtn/H88m7xzx7lE49pSss7oeMUdY
Np6nrAlrzQ7rZ+JdJZ3M8ZjrE3PeIWINOaI9Ko7lnKv8rKaaGrG+sxMsL6sm
r+Pz9uufjT2CtgFryn7RPxP7AW191oT9qv9sJnkvj/fzJfL/x5ohHo75zhYY
656z3v+aK9mrxZ5tk+/9mg2P+R7XSF2PnHvjyXSyn459dWnX7Xv+TDz/5e+p
e1T+lXgovp/NZ3dmknewdunknSzezTK5k33YnznPmHjWbFbzTcxXdfPlSx17
dyb5/0GvdPLuFu9w+XIne+rB6eT/CfF/hcKsA5vLtsk/cexYxy4XJVjdOPfs
hP53bFKsBfF3sPtjLRCPsSVsObsvk1y3y9LJtYhrslfeXbzMlomv1E1V9xdg
t/86
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0jkvRFEYgOFrX8cS0RINUVCKglIUVCIKOqKgIBEFpULodPwCWiL0Ejr7
MvY1ImJr7Gt4TqJ45zmZezLnO5lb0t7b1JMQRdGwXhXWj7rUbGIU5XGBxVxn
JU9Zywc28pttzE6Kopi6rcs5yGqOsp4TbOEUOznPfi7xjtd817aeda9lA+1w
hXGucpdr3AszcZ8bPOAmt3QYfodH3OEx4zzhLk+5xzPu85zT7nHDD13oJdxR
Y2bb4hAX2cc5dnCSzRxnHUdYxQGWsVRd1hls5aczGsJ9WcNjVoR7sYg39l3x
Tbl6CntVaMYcFjDGfGaHPcxijJnMYkY4j+lMZYrSrJOYGv7j8B1/layf8Exf
MkY04+P2/334A8H3Su0=
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{690, 999, 1005, 1341, 689, 1123, 912, 691, 1124, 913, 692, 
       1125, 914, 693, 1126, 915, 694, 1127, 916, 695, 1128, 1006, 1222, 696, 
       1129, 917, 697, 1130, 918, 698, 1131, 919, 699, 1132, 920, 700, 1133, 
       921, 701, 1134, 922, 702, 1342, 1000, 923, 1001}], 
      Line3DBox[{704, 1007, 1223, 703, 488, 705, 1135, 924, 706, 1136, 925, 
       707, 1137, 926, 708, 1138, 927, 709, 1139, 1008, 1224, 710, 1009, 1225,
        711, 1140, 928, 712, 1141, 929, 713, 1142, 930, 714, 1143, 931, 715, 
       1144, 932, 716, 1145, 933, 717}], 
      Line3DBox[{719, 1010, 1226, 718, 1011, 1227, 720, 504, 721, 1146, 934, 
       722, 1147, 935, 723, 1148, 936, 724, 1149, 1012, 1228, 725, 1013, 1229,
        726, 1014, 1230, 727, 512, 728, 1150, 937, 729, 1151, 938, 730, 1152, 
       939, 731, 1153, 940, 732}], 
      Line3DBox[{734, 1015, 1231, 733, 1016, 1232, 735, 1017, 1233, 736, 520, 
       737, 1154, 941, 738, 1155, 942, 739, 1156, 1018, 1234, 740, 1019, 1235,
        741, 1020, 1236, 742, 1021, 1237, 743, 528, 744, 1157, 943, 745, 1158,
        944, 746, 1159, 945, 747}], 
      Line3DBox[{749, 1022, 1238, 748, 1023, 1239, 750, 1024, 1240, 751, 1025,
        1241, 752, 1026, 1242, 753, 1160, 946, 754, 1161, 1027, 1243, 755, 
       1028, 1244, 756, 1029, 1245, 757, 1030, 1246, 758, 1031, 1247, 759, 
       1032, 1248, 760, 1162, 947, 761, 1163, 948, 762}], 
      Line3DBox[{764, 1033, 1249, 763, 1034, 1250, 765, 1035, 1251, 766, 1036,
        1252, 767, 1037, 1253, 768, 1038, 1254, 769, 1164, 1039, 1255, 770, 
       1040, 1256, 771, 1041, 1257, 772, 1042, 1258, 773, 1043, 1259, 774, 
       1044, 1260, 775, 1045, 1261, 776, 1165, 949, 777}], 
      Line3DBox[{781, 1166, 950, 779, 1167, 951, 783, 1168, 952, 785, 1169, 
       953, 787, 1170, 954, 789, 1171, 955, 791, 1172, 1053, 1270, 793, 1173, 
       956, 795, 1174, 957, 797, 1175, 958, 799, 1176, 959, 801, 1177, 960, 
       803, 1178, 961, 805, 1179, 962, 807}], 
      Line3DBox[{806, 1277, 1060, 804, 1276, 1059, 802, 1275, 1058, 800, 1274,
        1057, 798, 1273, 1056, 796, 1272, 1055, 794, 1271, 1054, 792, 1269, 
       1268, 1052, 790, 1267, 1051, 788, 1266, 1050, 786, 1265, 1049, 784, 
       1264, 1048, 782, 1263, 1047, 778, 1262, 1046, 780}], 
      Line3DBox[{809, 1061, 1278, 808, 1180, 963, 810, 1181, 964, 811, 1182, 
       965, 812, 1183, 966, 813, 1184, 967, 814, 1185, 1062, 1279, 815, 1063, 
       1280, 816, 1186, 968, 817, 1187, 969, 818, 1188, 970, 819, 1189, 971, 
       820, 1190, 972, 821, 1191, 973, 822}], 
      Line3DBox[{824, 1064, 1281, 823, 1065, 1282, 825, 1192, 974, 826, 1193, 
       975, 827, 1194, 976, 828, 1195, 977, 829, 1196, 1066, 1283, 830, 1067, 
       1284, 831, 1068, 1285, 832, 1197, 978, 833, 1198, 979, 834, 1199, 980, 
       835, 1200, 981, 836, 1201, 982, 837}], 
      Line3DBox[{839, 1069, 1286, 838, 1070, 1287, 840, 1071, 1288, 841, 1202,
        983, 842, 1203, 984, 843, 1204, 985, 844, 1205, 1072, 1289, 845, 1073,
        1290, 846, 1074, 1291, 847, 1075, 1292, 848, 1206, 986, 849, 1207, 
       987, 850, 1208, 988, 851, 1209, 989, 852}], 
      Line3DBox[{854, 1076, 1293, 853, 1077, 1294, 855, 1078, 1295, 856, 1079,
        1296, 857, 1210, 990, 858, 1211, 991, 859, 1212, 1080, 1297, 860, 
       1081, 1298, 861, 1082, 1299, 862, 1083, 1300, 863, 1084, 1301, 864, 
       1213, 992, 865, 1214, 993, 866, 1215, 994, 867}], 
      Line3DBox[{869, 1085, 1302, 868, 1086, 1303, 870, 1087, 1304, 871, 1088,
        1305, 872, 1089, 1306, 873, 1216, 995, 874, 1217, 1090, 1307, 875, 
       1091, 1308, 876, 1092, 1309, 877, 1093, 1310, 878, 1094, 1311, 879, 
       1095, 1312, 880, 1218, 996, 881, 1219, 997, 882}], 
      Line3DBox[{884, 1096, 1313, 883, 1097, 1314, 885, 1098, 1315, 886, 1099,
        1316, 887, 1100, 1317, 888, 1101, 1318, 889, 1220, 1102, 1319, 890, 
       1103, 1320, 891, 1104, 1321, 892, 1105, 1322, 893, 1106, 1323, 894, 
       1107, 1324, 895, 1108, 1325, 896, 1221, 998, 897}], 
      Line3DBox[{911, 1004, 1340, 1122, 910, 1339, 1120, 909, 1338, 1119, 908,
        1337, 1118, 907, 1336, 1117, 906, 1335, 1116, 905, 1334, 1115, 904, 
       1333, 1332, 1114, 903, 1331, 1113, 902, 1330, 1112, 901, 1329, 1111, 
       900, 1328, 1110, 899, 1327, 1109, 898, 1121, 1326, 1002, 1003}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{251, 474, 1123, 252, 488, 280, 1227, 503, 295, 1232, 518, 
       310, 1239, 533, 325, 1250, 548, 340, 1263, 563, 1167, 355, 578, 1180, 
       370, 1282, 593, 385, 1287, 608, 400, 1294, 623, 415, 1303, 638, 430, 
       1314, 653, 445, 1327, 668, 460}], 
      Line3DBox[{253, 475, 1124, 254, 489, 1135, 281, 504, 296, 1233, 519, 
       311, 1240, 534, 326, 1251, 549, 341, 1264, 564, 1168, 356, 579, 1181, 
       371, 594, 1192, 386, 1288, 609, 401, 1295, 624, 416, 1304, 639, 431, 
       1315, 654, 446, 1328, 669, 461}], 
      Line3DBox[{255, 476, 1125, 256, 490, 1136, 282, 505, 1146, 297, 520, 
       312, 1241, 535, 327, 1252, 550, 342, 1265, 565, 1169, 357, 580, 1182, 
       372, 595, 1193, 387, 610, 1202, 402, 1296, 625, 417, 1305, 640, 432, 
       1316, 655, 447, 1329, 670, 462}], 
      Line3DBox[{257, 477, 1126, 258, 491, 1137, 283, 506, 1147, 298, 521, 
       1154, 313, 1242, 536, 328, 1253, 551, 343, 1266, 566, 1170, 358, 581, 
       1183, 373, 596, 1194, 388, 611, 1203, 403, 626, 1210, 418, 1306, 641, 
       433, 1317, 656, 448, 1330, 671, 463}], 
      Line3DBox[{259, 478, 1127, 260, 492, 1138, 284, 507, 1148, 299, 522, 
       1155, 314, 537, 1160, 329, 1254, 552, 344, 1267, 567, 1171, 359, 582, 
       1184, 374, 597, 1195, 389, 612, 1204, 404, 627, 1211, 419, 642, 1216, 
       434, 1318, 657, 449, 1331, 672, 464}], 
      Line3DBox[{261, 479, 1128, 263, 493, 1139, 285, 508, 1149, 300, 523, 
       1156, 315, 538, 1161, 330, 553, 1164, 345, 1268, 568, 1172, 360, 583, 
       1185, 375, 598, 1196, 390, 613, 1205, 405, 628, 1212, 420, 643, 1217, 
       435, 658, 1220, 450, 1332, 673, 465}], 
      Line3DBox[{265, 481, 1129, 266, 1225, 495, 287, 1229, 510, 302, 1235, 
       525, 317, 1244, 540, 332, 1256, 555, 347, 1271, 570, 1173, 362, 1280, 
       585, 377, 1284, 600, 392, 1290, 615, 407, 1298, 630, 422, 1308, 645, 
       437, 1320, 660, 452, 1334, 675, 467}], 
      Line3DBox[{267, 482, 1130, 268, 496, 1140, 288, 1230, 511, 303, 1236, 
       526, 318, 1245, 541, 333, 1257, 556, 348, 1272, 571, 1174, 363, 586, 
       1186, 378, 1285, 601, 393, 1291, 616, 408, 1299, 631, 423, 1309, 646, 
       438, 1321, 661, 453, 1335, 676, 468}], 
      Line3DBox[{269, 483, 1131, 270, 497, 1141, 289, 512, 304, 1237, 527, 
       319, 1246, 542, 334, 1258, 557, 349, 1273, 572, 1175, 364, 587, 1187, 
       379, 602, 1197, 394, 1292, 617, 409, 1300, 632, 424, 1310, 647, 439, 
       1322, 662, 454, 1336, 677, 469}], 
      Line3DBox[{271, 484, 1132, 272, 498, 1142, 290, 513, 1150, 305, 528, 
       320, 1247, 543, 335, 1259, 558, 350, 1274, 573, 1176, 365, 588, 1188, 
       380, 603, 1198, 395, 618, 1206, 410, 1301, 633, 425, 1311, 648, 440, 
       1323, 663, 455, 1337, 678, 470}], 
      Line3DBox[{273, 485, 1133, 274, 499, 1143, 291, 514, 1151, 306, 529, 
       1157, 321, 1248, 544, 336, 1260, 559, 351, 1275, 574, 1177, 366, 589, 
       1189, 381, 604, 1199, 396, 619, 1207, 411, 634, 1213, 426, 1312, 649, 
       441, 1324, 664, 456, 1338, 679, 471}], 
      Line3DBox[{275, 486, 1134, 276, 500, 1144, 292, 515, 1152, 307, 530, 
       1158, 322, 545, 1162, 337, 1261, 560, 352, 1276, 575, 1178, 367, 590, 
       1190, 382, 605, 1200, 397, 620, 1208, 412, 635, 1214, 427, 650, 1218, 
       442, 1325, 665, 457, 1339, 680, 472}], 
      Line3DBox[{277, 682, 1342, 683, 278, 501, 1145, 293, 516, 1153, 308, 
       531, 1159, 323, 546, 1163, 338, 561, 1165, 353, 1277, 576, 1179, 368, 
       591, 1191, 383, 606, 1201, 398, 621, 1209, 413, 636, 1215, 428, 651, 
       1219, 443, 666, 1221, 458, 1340, 685, 686, 687}], 
      Line3DBox[{459, 667, 684, 1326, 444, 652, 1313, 429, 637, 1302, 414, 
       622, 1293, 399, 607, 1286, 384, 592, 1281, 369, 577, 1278, 354, 1166, 
       562, 1262, 339, 547, 1249, 324, 532, 1238, 309, 517, 1231, 294, 502, 
       1226, 279, 487, 1223, 250, 473, 1341, 681, 688}], 
      Line3DBox[{466, 674, 1333, 451, 659, 1319, 436, 644, 1307, 421, 629, 
       1297, 406, 614, 1289, 391, 599, 1283, 376, 584, 1279, 361, 569, 1270, 
       1269, 346, 554, 1255, 331, 539, 1243, 316, 524, 1234, 301, 509, 1228, 
       286, 494, 1224, 264, 480, 1222, 262}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
rYfE9Y24v3/v6/8HTiWdSQ==
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{231.2765846221811, 194.66666666666666`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-1, 1}, {0, 1}, {0., 0.49999992857143116`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.8571596194486555, -2.4914492072203958`, 2.1231952888576933`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.707413392900618*^9}]
}, Open  ]],

Cell["\<\
The s.m. calls attention to the surface as a parabolic cylinder.\
\>", "Text",
 CellChangeTimes->{{3.707413431155203*^9, 3.7074134511853123`*^9}, {
  3.771439199947009*^9, 3.771439203568021*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fF", "=", 
  RowBox[{"{", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "z"}]], ",", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "z"}]], 
     RowBox[{"Cos", "[", "y", "]"}]}], ",", 
    RowBox[{
     SuperscriptBox["e", 
      RowBox[{"-", "z"}]], 
     RowBox[{"Sin", "[", "y", "]"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.707413477715884*^9, 3.70741354987964*^9}, {
  3.707413948488777*^9, 3.707413964200014*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", "z"}]], ",", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "z"}]], " ", 
    RowBox[{"Cos", "[", "y", "]"}]}], ",", 
   RowBox[{
    SuperscriptBox["e", 
     RowBox[{"-", "z"}]], " ", 
    RowBox[{"Sin", "[", "y", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.707413967804278*^9}]
}, Open  ]],

Cell["Finding the Curl is not difficult.", "Text",
 CellChangeTimes->{{3.70741654216943*^9, 3.707416575048441*^9}, {
  3.7713514836829243`*^9, 3.771351487215878*^9}, {3.771411010839375*^9, 
  3.7714110228613977`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"curly", "=", 
  RowBox[{"Curl", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z"}]], ",", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "z"}]], 
       RowBox[{"Cos", "[", "y", "]"}]}], ",", 
      RowBox[{
       SuperscriptBox["e", 
        RowBox[{"-", "z"}]], 
       RowBox[{"Sin", "[", "y", "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.70741401709902*^9, 3.707414036181673*^9}, {
  3.707414272495553*^9, 3.707414275157784*^9}, {3.707414369356213*^9, 
  3.707414442553514*^9}, {3.707414848908214*^9, 3.7074148795370092`*^9}, {
  3.7074149458250513`*^9, 3.707414950455051*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["e", 
      RowBox[{"-", "z"}]], " ", 
     RowBox[{"Cos", "[", "y", "]"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "z"}]], " ", 
     RowBox[{"Cos", "[", "y", "]"}]}]}], ",", 
   RowBox[{"-", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "z"}]]}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7074140379184437`*^9, 3.707414276808655*^9, 3.7074144439629927`*^9, {
   3.70741485230332*^9, 3.707414881749861*^9}, 3.7074149517425013`*^9}]
}, Open  ]],

Cell["Below, eliminating the z expression.", "Text",
 CellChangeTimes->{{3.707416928173627*^9, 3.707416943923903*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"curlyz", "=", 
  RowBox[{"curly", "/.", 
   RowBox[{"z", "\[Rule]", 
    FractionBox[
     SuperscriptBox["y", "2"], "2"]}]}]}]], "Input",
 CellChangeTimes->{{3.707415028231243*^9, 3.707415052091078*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["e", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["y", "2"], "2"]}]], " ", 
     RowBox[{"Cos", "[", "y", "]"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["y", "2"], "2"]}]], " ", 
     RowBox[{"Cos", "[", "y", "]"}]}]}], ",", 
   RowBox[{"-", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      FractionBox[
       SuperscriptBox["y", "2"], "2"]}]]}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.707415207863167*^9}]
}, Open  ]],

Cell[TextData[Cell[BoxData[
 RowBox[{"Below", ",", " ", 
  RowBox[{
  "Mathematica", "  ", "was", " ", "hesitant", " ", "to", " ", "combine", " ",
    "the", " ", "two", " ", "instances", " ", "of", " ", 
   SuperscriptBox["e", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["y", "2"], "2"]}]], " ", 
   RowBox[{
    RowBox[{"Cos", "[", "y", "]"}], "."}]}]}]]]], "Text",
 CellChangeTimes->{{3.7074166541475677`*^9, 3.7074166675069323`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"curlyzz", "=", 
  RowBox[{"curlyz", "/.", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["e", 
       RowBox[{"-", 
        FractionBox[
         SuperscriptBox["y", "2"], "2"]}]], " ", 
      RowBox[{"Cos", "[", "y", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         SuperscriptBox["y", "2"], "2"]}]], " ", 
      RowBox[{"Cos", "[", "y", "]"}]}]}], "\[Rule]", 
    RowBox[{"2", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["y", "2"], "2"]}]], " ", 
     RowBox[{"Cos", "[", "y", "]"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.7074152201303596`*^9, 3.7074152517566023`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"2", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      FractionBox[
       SuperscriptBox["y", "2"], "2"]}]], " ", 
    RowBox[{"Cos", "[", "y", "]"}]}], ",", 
   RowBox[{"-", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      FractionBox[
       SuperscriptBox["y", "2"], "2"]}]]}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.707415254468288*^9}]
}, Open  ]],

Cell["Below, writing the surface equation as the s.m. recommended.", "Text",
 CellChangeTimes->{{3.707416701029482*^9, 3.7074167253473454`*^9}, {
  3.771184470131937*^9, 3.771184474026449*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"surf", " ", "=", 
  RowBox[{"{", 
   RowBox[{"x", ",", "y", ",", 
    FractionBox[
     SuperscriptBox["y", "2"], "2"]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.707415313319995*^9, 3.707415315003766*^9}, {
  3.707415363458338*^9, 3.707415391583955*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", "y", ",", 
   FractionBox[
    SuperscriptBox["y", "2"], "2"]}], "}"}]], "Output",
 CellChangeTimes->{3.707415395201806*^9, 3.771351564990746*^9}]
}, Open  ]],

Cell["Below, finding the partials in preparation for crossing.", "Text",
 CellChangeTimes->{{3.7074167480034933`*^9, 3.707416769697721*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"surfofx", " ", "=", 
  RowBox[{"D", "[", 
   RowBox[{"surf", ",", 
    RowBox[{"{", "x", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.707415406332676*^9, 3.707415421822752*^9}},
 Background->RGBColor[1, 0.925, 0.925]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.707415424290056*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"surfofy", " ", "=", 
  RowBox[{"D", "[", 
   RowBox[{"surf", ",", 
    RowBox[{"{", "y", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7074154478473997`*^9, 3.707415451509857*^9}},
 Background->RGBColor[1, 0.925, 0.925]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1", ",", "y"}], "}"}]], "Output",
 CellChangeTimes->{3.707415452793932*^9}]
}, Open  ]],

Cell["Below, crossing gives the normal vector needed.", "Text",
 CellChangeTimes->{{3.707416781897196*^9, 3.7074168025047827`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"norm", "=", 
  RowBox[{"Cross", "[", 
   RowBox[{"surfofx", ",", "surfofy"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.707415500849845*^9, 3.707415516795751*^9}},
 Background->RGBColor[1, 0.925, 0.925]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"-", "y"}], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.707415517534243*^9}]
}, Open  ]],

Cell[TextData[{
 "Noting that a quicker way than the pink cells above is to take the ",
 StyleBox["Grad", "Input"],
 ","
}], "Text",
 CellChangeTimes->{{3.771351788817614*^9, 3.771351793023015*^9}, {
  3.7713530528231993`*^9, 3.7713530642774343`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grad", "[", 
  RowBox[{
   RowBox[{"z", "-", 
    FractionBox[
     SuperscriptBox["y", "2"], "2"]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7713515674231377`*^9, 3.771351591573914*^9}, {
  3.7713517373548803`*^9, 3.771351757600527*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"-", "y"}], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.771351592484624*^9, 3.771351759317834*^9}]
}, Open  ]],

Cell["Below, the dot product will be the core of the integrand.", "Text",
 CellChangeTimes->{{3.707416817432075*^9, 3.707416838071272*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"integr", "=", 
  RowBox[{"curlyzz", ".", "norm"}]}]], "Input",
 CellChangeTimes->{{3.707416167820435*^9, 3.7074161801910973`*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["y", "2"], "2"]}]], " ", "y"}]], "Output",
 CellChangeTimes->{3.707416181521984*^9}]
}, Open  ]],

Cell["Below, the limits are given explicitly.", "Text",
 CellChangeTimes->{{3.7074169591470737`*^9, 3.707416970091105*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "1"], 
  RowBox[{
   SubsuperscriptBox["\[Integral]", 
    RowBox[{"-", "1"}], "1"], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         SuperscriptBox["y", "2"], "2"]}]], " ", "y"}], ")"}], 
    RowBox[{"\[DifferentialD]", "x"}], 
    RowBox[{"\[DifferentialD]", "y"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7074162440324078`*^9, 3.707416326808754*^9}, {
  3.707416423918993*^9, 3.707416424173341*^9}}],

Cell[BoxData[
 RowBox[{"2", "-", 
  FractionBox["2", 
   SqrtBox["\[ExponentialE]"]]}]], "Output",
 CellChangeTimes->{3.707416329237734*^9, 3.707416425534046*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["\<\
The above line matches the text\[CloseCurlyQuote]s answer, except that the \
text has +/- on it.\
\>", "Text",
 CellChangeTimes->{{3.7074164565720797`*^9, 3.707416514114102*^9}, {
  3.77135315155457*^9, 3.7713531529063587`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"5.", "  ", "F"}], "=", 
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["z", "2"], ",", 
     RowBox[{
      FractionBox["3", "2"], "x"}], ",", "0"}], "}"}]}], ",", " ", 
  RowBox[{"S", ":", " ", 
   RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", "a"}]}], ",", " ", 
  RowBox[{"0", "\[LessEqual]", "y", "\[LessEqual]", "a"}], ",", " ", 
  RowBox[{"z", "=", "1"}]}]], "Text",
 CellChangeTimes->{{3.76909011799417*^9, 3.769090196022616*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.707426830491157*^9, 3.707426832129898*^9}, 
   3.769089459860938*^9}],

Cell["Regarding the vector field F,", "Text",
 CellChangeTimes->{{3.7713539668166523`*^9, 3.77135397522322*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eF", "[", 
   RowBox[{"z_", ",", "y_", ",", "z_"}], "]"}], "=", 
  RowBox[{"{", 
   RowBox[{
    SuperscriptBox["z", "2"], ",", 
    RowBox[{
     FractionBox["3", "2"], "x"}], ",", "0"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.771353289170005*^9, 3.771353318116962*^9}, 
   3.771353450408766*^9, {3.771353496231271*^9, 3.771353516638461*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox["z", "2"], ",", 
   FractionBox[
    RowBox[{"3", " ", "x"}], "2"], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.771353519651819*^9}]
}, Open  ]],

Cell["And getting the curl for that one is necessary.", "Text",
 CellChangeTimes->{{3.771353981687077*^9, 3.7713539904627447`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Curl", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["z", "2"], ",", 
     RowBox[{
      FractionBox["3", "2"], "x"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.771353527795542*^9, 3.771353545509573*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"2", " ", "z"}], ",", 
   FractionBox["3", "2"]}], "}"}]], "Output",
 CellChangeTimes->{3.771353546708867*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[TextData[{
 "The curve S this time happens to be a square in a plane which is parallel \
to the xy-plane. Three points on this plane are {0,0,1}, {",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["a", "4"], ",", 
    FractionBox["a", "2"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ",1}, and {a,a,1}. I could (and did) calculate the equation of a plane, but \
that doesn\[CloseCurlyQuote]t get me to the text answer. So I will adopt a \
craven imitative stance and write S as 2 a+z, whereupon"
}], "Text",
 CellChangeTimes->{{3.7713540312772093`*^9, 3.77135415844038*^9}, {
  3.771361693225163*^9, 3.7713618051971693`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grad", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", " ", "a"}], "+", "z"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.771361464579852*^9, 3.7713615337813463`*^9}, {
  3.771361614186881*^9, 3.7713616182105618`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", "1"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.771361534528213*^9, 3.771361619804563*^9}]
}, Open  ]],

Cell["So there is a dot product between curl of eF and grad of S.", "Text",
 CellChangeTimes->{{3.771355562195785*^9, 3.771355588353677*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"0", ",", 
    RowBox[{"2", " ", "z"}], ",", 
    FractionBox["3", "2"]}], "}"}], ".", 
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7713611757385693`*^9, 3.771361177129113*^9}}],

Cell[BoxData[
 FractionBox["3", "2"]], "Output",
 CellChangeTimes->{3.771361178002281*^9}]
}, Open  ]],

Cell["\<\
Taking C equal to be the projection of S onto the xy-plane is not now \
necessary, since the limits on both trees will be constants\
\>", "Text",
 CellChangeTimes->{{3.7713556735120277`*^9, 3.7713556877025146`*^9}, {
  3.771361855123814*^9, 3.771361880577613*^9}, {3.77136196699857*^9, 
  3.771361967422736*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RGBColor", "[", 
        RowBox[{"0.2", ",", "0.7", ",", "0.9"}], "]"}], ",", 
       RowBox[{"Thickness", "[", "0.02", "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"a", "-", "x"}], ",", "Medium"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.7", ",", "0.58"}], "}"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<boundary curve\>\"", ",", "Medium"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.5", ",", "1.3"}], "}"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<in xy-plane\>\"", ",", "Medium"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.5", ",", "1.15"}], "}"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<a\>\"", ",", "Medium"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.1"}], ",", "1.0"}], "}"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<a\>\"", ",", "Medium"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.", ",", 
          RowBox[{"-", "0.1"}]}], "}"}]}], "]"}], "}"}]}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "100"}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", "}"}]}], "}"}]}], ",", 
   RowBox[{"ImagePadding", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"10", ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"15", ",", "15"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.771277396238967*^9, 3.771277599163389*^9}, {
  3.7712776491010027`*^9, 3.771277678665154*^9}, {3.771277716073516*^9, 
  3.771277905297553*^9}, {3.771278209959586*^9, 3.7712783600507727`*^9}, {
  3.771278397602831*^9, 3.771278434400235*^9}, {3.771278587508807*^9, 
  3.771278588187182*^9}, {3.77127862186826*^9, 3.77127887696189*^9}, {
  3.771355768054587*^9, 3.771355969966024*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.2, 0.7, 0.9], Thickness[0.02], 
    LineBox[{{0, 0}, {1, 0}, {0, 1}, {0, 0}}]}, InsetBox[
    StyleBox[
     RowBox[{"a", "-", "x"}],
     StripOnInput->False,
     FontSize->Medium], {0.7, 0.58}], InsetBox[
    StyleBox["\<\"boundary curve\"\>",
     StripOnInput->False,
     FontSize->Medium], {0.5, 1.3}], InsetBox[
    StyleBox["\<\"in xy-plane\"\>",
     StripOnInput->False,
     FontSize->Medium], {0.5, 1.15}], InsetBox[
    StyleBox["\<\"a\"\>",
     StripOnInput->False,
     FontSize->Medium], {-0.1, 1.}], InsetBox[
    StyleBox["\<\"a\"\>",
     StripOnInput->False,
     FontSize->Medium], {1., -0.1}]},
  Axes->True,
  ImagePadding->{{10, 10}, {15, 15}},
  ImageSize->100,
  Ticks->{{{0, 
      FormBox["0", TraditionalForm]}, {0, 
      FormBox["0", TraditionalForm]}}, {}}]], "Output",
 CellChangeTimes->{{3.771355804015011*^9, 3.7713558243653803`*^9}, {
  3.771355912412504*^9, 3.7713559707527113`*^9}}]
}, {2}]],

Cell["So that", "Text",
 CellChangeTimes->{{3.771356526619622*^9, 3.7713565344583483`*^9}, {
  3.771356856727762*^9, 3.7713569438048553`*^9}, {3.771361886521513*^9, 
  3.771361889121472*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "a"], 
  RowBox[{
   SubsuperscriptBox["\[Integral]", "0", "a"], 
   RowBox[{
    FractionBox["3", "2"], 
    RowBox[{"\[DifferentialD]", "y"}], 
    RowBox[{"\[DifferentialD]", "x"}]}]}]}]], "Input",
 CellChangeTimes->{{3.771361204441848*^9, 3.771361208368002*^9}, {
  3.771361247856997*^9, 3.77136126415842*^9}, {3.771361406649868*^9, 
  3.7713614092652407`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"3", " ", 
   SuperscriptBox["a", "2"]}], "2"]], "Output",
 CellChangeTimes->{{3.771361225920039*^9, 3.771361265381863*^9}, 
   3.7713614109874163`*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["The answer in the green cell above matches that in the text.", "Text",
 CellChangeTimes->{{3.771361906320698*^9, 3.771361918008308*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"7.", "  ", "F"}], "=", 
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", "y"], ",", 
     SuperscriptBox["\[ExponentialE]", "z"], ",", 
     SuperscriptBox["\[ExponentialE]", "x"]}], "}"}]}], ",", " ", 
  RowBox[{
   RowBox[{"S", ":", " ", "z"}], "=", 
   RowBox[{
    SuperscriptBox["x", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", "2"}], ",", " ", 
      RowBox[{"0", "\[LessEqual]", "y", "\[LessEqual]", "1"}]}], 
     ")"}]}]}]}]], "Text",
 CellChangeTimes->{{3.769090212053033*^9, 3.769090309430645*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell["The curl from the vector field", "Text",
 CellChangeTimes->{{3.7713583547914047`*^9, 3.771358361334178*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eF", "[", 
   RowBox[{"z_", ",", "y_", ",", "z_"}], "]"}], "=", 
  RowBox[{"{", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", "y"], ",", 
    SuperscriptBox["\[ExponentialE]", "z"], ",", 
    SuperscriptBox["\[ExponentialE]", "x"]}], "}"}]}]], "Input",
 CellChangeTimes->{3.771358376960909*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", "y"], ",", 
   SuperscriptBox["\[ExponentialE]", "z"], ",", 
   SuperscriptBox["\[ExponentialE]", "x"]}], "}"}]], "Output",
 CellChangeTimes->{3.771358378578512*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Curl", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", "y"], ",", 
     SuperscriptBox["\[ExponentialE]", "z"], ",", 
     SuperscriptBox["\[ExponentialE]", "x"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.771358381908671*^9, 3.771358391917143*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox["\[ExponentialE]", "z"]}], ",", 
   RowBox[{"-", 
    SuperscriptBox["\[ExponentialE]", "x"]}], ",", 
   RowBox[{"-", 
    SuperscriptBox["\[ExponentialE]", "y"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.771358393136065*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["This time the curve S is a curvy function for a change. ", "Text",
 CellChangeTimes->{{3.7713584491791773`*^9, 3.77135845894693*^9}, {
  3.771358489441864*^9, 3.771358495073646*^9}, {3.771358635509015*^9, 
  3.7713586380048923`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eS", "[", 
   RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], "=", 
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", 
    SuperscriptBox["x", "2"]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.771358498573181*^9, 3.771358504666258*^9}, {
  3.7713585511534557`*^9, 3.7713585548797092`*^9}, {3.771358657068296*^9, 
  3.77135868713943*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", 
   SuperscriptBox["x", "2"]}], "}"}]], "Output",
 CellChangeTimes->{3.771358690462654*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   SuperscriptBox["x", "2"], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "250"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.771358752415348*^9, 3.7713588288309402`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx1nXd8VFXax4P0IijCvurShFlQX14EBBRETlgUMwqI4CpWEEFAHHWx0C1Y
llVUMiJlRUVAGBClqGMbigGiiGgckJKhxAsJEloytEibF2ae38nmd/Lwz378
7v2cc8/3Puc55d45uWLgE30GX5CWlra4SlpaxXP/u2z90UmJxOGVV+zo+Vki
kVh5wYx9l537bzP904kFmb59ltcYV391z+92m+cyG6T7/J7lbwTu278rf5NZ
98eAawOxzZbv8K3Lntp3lWn5wMUbmvmzLH9l+CN7duZPMU+36jLjb/5lBnzo
fzql7c5/2uSsbfGZzx+1vMazveN5+Z+b8/eclpZneaXkf+eYBg0fmxeIFVh+
IqPp8Gl980yHTlt7xMIHLZ+1b0n/CdP2m9D/zh7t88ctTxT99nhe/lHTPnn9
Mcurzfj3iKtGnTFZGbWbBH1/Wv5MeHTDXt9VTL/97puOZARPW35nuPqgmROq
p28bPCb73H9bftlP5/3WSYfnR55eMiMcOOV4BmfP4OwZnD2Ds2dw9mzrJc/g
7BmcPYOzZ3D2DM6ewdkzOHsGZ88La17yQiB23PEMzp7B2TM4ewZnz+Ds2dZL
nsHZMzh7BmfP4OwZnD2Ds2dw9gzOng/NfuaRc/U7nsHZMzh7BmfP4OwZnD3b
eskzOHsGZ8/g7BmcPYOzZ3D2DM6ewdnz4GSc73c8g7NncPYMzp7B2TM4e7b1
kmdw9gzOnsHZMzh7BmfP4OwZnD2Dlx/PnhLPnhLPnhLPnhLPnhLPnhLPnhLP
nhLPnhLPnhLPnhLPnhLPnhLPnhLPnuI5qniOKp6jiueo4jmqeI4qnqOK56ji
Oap4jiqeo4rnqOI5qniOKp6jjuc0+ceewdkzOHsGZ8/g7BmcPdt6yTM4ewZn
z+DsGZw9g7NncPYMzp7BlXg2SjwbJZ6NEs9GiWejxLNR4tko8WyUeDZKPBsl
no0Sz0aJZ6PEs1Hi2Sj5WfHsKZ49xbOnePYUz57i2VM8e4pnT/HsKZ49xbOn
ePYUz57i2XM8y/joeAZX5huOZ3BlvuF4BlfmG45ncGW+4XgGV+YbjmdwZb7h
eAZX5htKPMeVeI4r8RxX4jmuxHNciee4Es9xJZ7jSjzHlXiOK/EcV+I5rsRz
XInnuBLPccezrF8cz+DKetDxDK6sBx3P4Mp60PEMrqwHHc/gynrQ8QyurAcd
z+DKetDxLOtxxzO4sr/heAZX9jccz+DK/objGVzZ33A8gyv7G45ncGV/w/EM
ruxvOJ5lf8nxDK7s1zmewZX9OsczuLJf53gGV/brHM/gyn6d4xlc2a9zPIMr
+3XW89+Wr/g6I3hg5Zorn28eC59Z+VbijjPvTthn4B8c/r3KG7blhndY3mRT
9ddenLbe9J92/v//xfJ27Tdeezax2HLsE4LveX1PWlP/bHt99bnBH3Lz77Qc
14MH7hh52eOxbIPr/U+OrTO97yzLcT14off2PUHfNnv9ouIdI3t9t9pyXA8+
5cFd9/v8Z+31o3dee//6BbWsN3B4g4dqq36vde45OB7Aub3g3C5wvn9w3Cfq
7ZF8zkedesG5XnCuF5zrBed6myS9HXbqBed6wblecK4XnOtN5eECp15wrhec
6wXnesG53tR8JubUC871gnO94FwvONebGt+znHrBuV5wrhec6wVX6jVKvUap
1yj1GqVeo3h26gVXPDv1giuenXrluTv1gitx5dQLrsSVU6/EuVMvuNKPnHrB
lX7k1Cv92qkXXMkbTr3gSt5w6pU85tQLruRJp15wJU/aemlcM8q4ZpRxzblP
cGX8svdJ4529nsYve/803tlyaPyy7aLxzvEAroxrBuMaOK4HhzeMj/CGeRTG
QZ5HgfM8CpznUeCYR9H92PEX9WIc5HrBuV5wrhcc9aJ8jHdcPjiXD87lg3P5
GNe4fHAuH5zLB+fyMX6Vv14rUN7fFSjv7wqc8jFOlb+/EVPep8SU9ykxp3yM
R+Wv67OU/e0sZX87Sytf2TfIUvYNspR9gyyj+FH2f2LK/k9M2f+JOeVjHFGe
r7IeL1DW4wVO+RgvlPh0ygdX4tMpH+OC0r+c8sGV/uWUj/yv5AenfHAlP9jy
KR8aJR869YIr+dCpFxz10rrDrtceW3NPM5//0Mr4hILHArGzKycN63P4xwUH
TAdv0cVBX8KAzxj34oZKt9fm641yvcH1GB9RDsZHXI/8zOXDD8rH/aN8vn+U
o1zvvN9BOcr92Pvv3PaudxOJ0u9MFiYOH2zmzzfZ079ckEjstvVe27tOtPYb
2yzH9eCzzrZ5MpGI2etv8Ge1nJe3znJcDz6E1rkZMu6D4/q74v+Y06dombk+
O9LzTGKxvf7ZwgqFJ3JGWY7rH674+v/9s8ab5rZ2NZ9KS1tl/b+yesITdxYF
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
PWXdx+29jbjd95ZyuL3XyrqS2ztO1onc3gayPuX2TpH1I7c3RPsAuL6SrH+5
vTIOOu1tJus7bm9D4mjXAimH23tI1o/c3lWyHuT2rpJ1KLd3q6wTub0HaL2P
6zNlncvtlfmP095PZB3H7Z1PHO3aLuVwe0fJOpHbW0PWfdxev6w3ub0dZT3I
7X2I1vW4/nJZz3J7Zd7rtPdRWa9xewcQR7t+kHK4vRfIepDb21zWd9zeubKu
5PZmybqP21tI63dc313WrdxeWe847f1Tvmfm9u4mjnZ9LuVwe2+XdR+390lZ
x3F7t8j6lNvbUtZ33N4CWqfj+hWpdZDTXlnnGm6vtMtwe/8kTu0y3F7xYLi9
0i7D7RUPhtsr92+4vbIe78ztFT+G2yv7G057JW6d9j5KnOLWaa/EudNeiVun
vRLnTnslPp32Hqd1N8W/017Z13LaK3nJae8nxCkvOe2VPOa0V/KS017JY057
Jf847Y3T+prym9Ne2c902ivjjtPeZsRp3HHaK+OU014Zd5z2yjjltFfGF6e9
w2gdTeOX017Zx3baK/MKp709idO8wmmvzEOc9sq8wmmvzEOc9sr8wWlvEa2X
aX7itFfeXzjtlXmj097qxGne6LRX5plOe2Xe6LRX5plOe2V+6LR3Ea2Laf5p
r6f3WYbXI/LeyvEg6w7Hw1ritO5wPMg6xXL6rt6WQ+sRx4+sXyyn7+1t+bQe
cbwNpXU0rXfs9fR9vvNcwHE9rV8Mr2tkveNwlANO71ud9SN+Z8fPa42yTgTn
OLS/76N2gXN/we/suN5qyjoLnOu1v++jesG5Xvz+juvtoax3wLle+7s/qhec
68Xv8rjeJsq6A5zrtb8HpHrBuV78Xo/rXajM/8G5Xvs7QaoXnOvF7/i43sHK
PByc67W/H6R6wble/L6P6z2kzIfBuV77u0KqF1yp18l7h5R5KbhSr5MfwBXP
Tr2DlfkhuOLZqRdciSun3oXKPA1ciSunXnClHzn1NlHmS+BKP3LqBVfyhlNv
D2XeAq7kDadecCVPOvVWU+YP4EqedOoF53rxu0JlXHDqBVfGBadecNSLc3vG
y34dzu3B7/vA8fs+nOcDjvN8cN4OOJ+3A87n7YDzeTvgfN4OOJ+3A87n7YDj
vB20d5vs+3F7wbm94NxecG4vOLcXnNsLzu0F5/aCc3vB+XwhcPx+Ex7ay/4h
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
JOk=
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
+bLGR5ycaobitrTvSbyNOF7x2fJJ8k3aJ7U+2geIb2wWvBdItqV5cH4nm6a9
W6rjqJ4je6m9cNoTpz1givcWp97rpbqM6jPae6ZaoWqG4uGVB72U2rbIBtyf
13jF36lOor1ft+jbpa47KFdSziR+W9z4stR7xrTHaUnq/WbK/Z9LzaUrp3sR
eUTmnFbf9PDMOa2+tfY7bCqYmz0yc36rtaO9N+LbVEPXPjrxYJNS1xFVT5Qt
fTs6L+yeuT6iPFH5ovJo5ZhLU+eAyotV45LPVC6snPiU4H1i8lNtgnO99fna
1xyfqrpx4vWo/S3aa6c9ZtPBvyTe69Iyjz8Vh95F/9M5f3TBvkw1fNX+VANU
nqW86h76NA3enyOfqFqk9jpqz2MHjicX7Lsbpa4zqt6ovZrisqal3oepvVhT
U9cCVROUPVedXByoanHaT6iarGqz2hOoeqvqrtqPpP0w2hfzd+J5rj2T7YK5
BcUJ8uGq96jmLP+pvT3a49M+mItQjKF8UDnfaM3z4PxdMUzbYC5CMcz/Mr+D
ePgt0XuAVGsQ93h4wTy6vp14kl55LKo4Wdxth8w2RbUS+QJxLOK8L89cSxN/
8n+ItVaU
          "]], Polygon3DBox[CompressedData["
1:eJwtmnccV9Mbx+8995wvsldmKaWMNGQkGSWkZGTToIwkSmYyomk3iFAKKSOr
EllFRvbM3tmbQr+M3+fd5/xxX9/zOc+593vHOc/zeT7Padh7QLfTQ1EU+1VF
EfW7OBXF5WVRbKj2/Wq/oeNS4XWFX9eYm4Snq91YJ/WpFcUn6ttY+BThz2Tb
TxcZIzxH+CjZX1ffUJ2/jvr+kO09jV9T7T6yfyjbeB3XCK8pfKzGX5t8/lrC
3YUv0jkvCn8qPFn4U52/iXA/4c819k0dw3X99dT3p8beKvyY2m1lH6Dxy2W7
UHj90s84TfYnhXeXfZDsH1R+thOFP5LtLR0jNXZ99d2r9jvcn/BGwm9p7O3C
T6jdTuPP0PmfqW9T4VOFv5DtXeE1hHsLfyB8m47HhXcTHqjxw2V/T3iQrvla
5XteItw9+Fn+p/6LhDfQ7/6y/6DfgcLr6Le98Aa6xioaeznfQOP31vmXqf2A
+o6ULepYqrHnqK+1bI+pvafay3VcoDHfCw9Qe236db2axi9T+1z17aTxN+ia
t6hdT2OPk22i8BTh+sLHC3+hczYXPk34S9l+0vEM71Z9K2Qbm3w/NdmP0fi3
1beacC/hd2X7XHgz4f7CS5LnFPPv2OC5xhz5XPiY4LlzoezvCA/Uf7yi9hAd
i4UHCL+s9iEaP1n4SY2/Vv/3jvpWFz5e+P3kb7aqcM/gbzlGx2jhJHy0xi+W
vY7wccLvMVeF3xU+Q9d/Ve0V+r1YeEP9dhE+WONOV3s7Hd+o/TbXU3sDjblP
7b4a84jaJ6tvodoDdTzHfBV+Xu0vdb83CW+kc+vr/wep73nmj+yL1H5N11gk
vK/sg2Xvp755wn1lf4b3q/M/Ef5F9otkP0l9DwufJPvTal8j+0fCP8l+geyn
qe9R1qfsz6q9r67fXO3z1T5X9iv1u2vptb9U53SSvRXPXPn/ub+tS9/TPsHP
07T0PXcUvkq4rXBifQsfpguNU/tptRvU/M3HlvYRzIVDZR+r9lOybyH7VcIf
CP8gfH7N32B86TXOt2ENXV96zrC2rtb4D9X+UeOHaPw3st8reyv1zVJ7hew/
8z5k/5i5rON+4ebCp2j8JMYLNxM+WXiq8EOsFeFThc+q/Kz9dc0X1J4i+xzh
HWTvJ/sryd+TZ+f9nasxL7AeNP5FtftGX+8N2XvLXun4Xbaz1ddKttkac4zw
Bdnn3qHrzVd7D40/U2P7qO8e/JHGLFD71eR3zbs/T/Z9hJ8V3lv4HOEB0f7u
beGbhW+WfabwdsInCU8Wvk94e+G+wmM0/mPhn4UvFL5R9juEG+X73Vt4oXB7
4bOEe+oe7sJf636erPx+tin9zMzR44TvVvsE9c1X+8Xk+b8z60Tnj9P/fSr8
q/DFwt015k78o8Y/ofZ1fF/8new9ZL8+eT1vLtxLeITGfSX8ZZ6fq+q4Uu2N
1X8I/63xrwgfkJ9nnvp6lR5zqNpX6v/fV/t72afI/pvGvy37kepbXbbVmMNq
b1J6/HOV1yrf+BOeIfp7nKr+STp/RnI82j/P15nCrwkfmJ+vjn6vFt5U1zic
byn7q8Jd83p9VH3Hlf5P7Mfq+jPUfl72nrLPoS/HLPz/Qzq655iA/zk6Ov4+
l9/XUmKU7EcTQ2VbQ33/Cg8l5rAWmC/CnYT/xjfp6Cl8ReH397vsi4WPEl5D
46+LjqXEfPzxPzp+zDFovtp36XiZe8n+5e/kGEVMeVLtO3W8pHbnvD4nRa/d
60r748nR8YM1zdq+Rbie8MTSfODGaF9BzMVfv697XEv4X13vEl3vpmjfgE/B
t7xUORYQE77TmGXq+1L4ZOHNNPYP4a+E+zKnhE9Kfv98h5msl+j4jc/B98wS
3k34YeEfiD/R/vNsjb+lZv9FPFyQ+ckv+ANitfr+IT7IPlHtx3P8+5X1K3tn
nkH2btHxdX7mO3/K/rXs/dTXULZ71fcYMVJ928q2XMe3avfn/tX+S8c3wqcK
b6HxK5Jj+un8J/xBx3fCpwk/qvZUjWmo9qTS/Oa7PHYt/e6u/3lQ9rbCc4W/
l32u+nrkmNeV2Kn7+Ut4iPCWzAX1bav2ucHjV+EZiCfqa6Nr/YB/UPsc2b+T
vZ/65gq/mfnienAUtUfiY2RbFx8pPEJ4L+HviTe8b/V9q/MPhJMIP5bj9ZLK
8wXS+pXs/8q+lHgt/LVwYI3rfs5SXwvZSr6B8Jn4wOg1sCvzO3htwHl21JFq
5kLHRfvPF2S/oWZO00b4kmCuc7fs2wvfVfr//9Pxs9pnqG8b1pvGN1N7sMb/
CFeGHwl3ED5b1yuYMxo/CB+t8T9p/HZqnxc83yYkP++G2R+sljks8WKBbD11
zs1q99J518u2fs1cC84FF1xT+D+Nv0S4nfD90fc/p/T7XIt70PhL9bO7bHVq
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
mP0PfBQf8op+/w9RlFNi
          "]], Polygon3DBox[CompressedData["
1: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
I+MbwYrH2sOapJN6JeqWxfF+aR3/FxPME3w=
          "]], 
         Polygon3DBox[CompressedData["
1:eJwlz7FKQnEUgPFjt4I0F53ShiQSdEmoIa2loDloc3DQpVAxCPQprKFHyKmx
aLeeoJ6gXqNBod/F4YPvfBzO/95K7+56tBYReWxitBFxL7xlIl5RTCIy2iPe
9W3kcKVXtSfMzWWU0NbrWh835pkbz9jSl+sRO/oh/9K+0eAlLYtysnozfXuX
57RzjPmJW01M+IV2i475we4UC/7nfkE/sPOhfaLKi9oUL3aW6S4u9X3tCN1k
9e3pP/T4sXaKAa9pdQz5mbaHJv9x4xctXtH+AUaJIIY=
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ksv3FEYB+AzxqXuvoDbvppGXCphI3YlLlVtdWcjLFg0EZQREYaKRlpB
7PkE9Qn4BFrVlhYRl4g0jWWTpp4Ti/f//N6cOf/3nJmp7BvuGkqEEJbUhBDz
qMcZ95IhlPCI5bzkI96yiYnMEFpZwtesYKUalBs4xhbOs51r7OUWB7gdZ3E3
fi4rhIfmptRn/TjjwToyQvii7+Q+u/iVKWd4bP1Anpar5W/yrFwjf5fn5Fr5
mT0/9N085HMesYc/+YK/+JLHfMUTLthfb/+UOtW/5Rv10Zn34izucISf2M/N
+B6uso1pNnOU9axTA3Ipe1nEp/xvViP/sIrnLONf6785aW4xx9ikNlSRfp2F
XGUBV5jPD8zjMnP5ng/4z91uuKjP4XW8p5zNK5WW/RThIt5PNj7MMBm/Z9oe
3mmeJO7/L3d4iEQB
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{978, 1270, 1489, 1172, 977, 1490, 1173, 979, 1271, 1491, 
       1174, 1356, 1454, 1492, 1175, 1357, 1455, 1493, 1176, 1358, 1456, 1494,
        1177, 1359, 1698, 1272, 1384, 1664, 980, 1495, 1178, 981, 1496, 1179, 
       982, 1497, 1180, 983, 1498, 1181, 984, 1499, 1182, 985, 1500, 1183, 
       986, 1665, 1273, 1184, 1274}], 
      Line3DBox[{988, 1385, 1581, 987, 1501, 1185, 989, 1275, 1502, 1186, 
       1360, 1457, 1503, 1187, 1361, 1458, 1504, 1188, 1362, 1699, 1276, 1189,
        1363, 1700, 1277, 1386, 1666, 990, 1387, 1582, 991, 1505, 1190, 992, 
       1506, 1191, 993, 1507, 1192, 994, 1508, 1193, 995, 1509, 1194, 996, 
       1510, 1195, 997}], 
      Line3DBox[{999, 1388, 1583, 998, 1389, 1584, 1000, 1278, 1511, 1196, 
       1364, 1459, 1512, 1197, 1365, 1701, 1279, 1198, 1366, 1702, 1280, 1199,
        1367, 1703, 1281, 1390, 1667, 1001, 1391, 1585, 1002, 1392, 1586, 
       1003, 1513, 1200, 1004, 1514, 1201, 1005, 1515, 1202, 1006, 1516, 1203,
        1007, 1517, 1204, 1008}], 
      Line3DBox[{1010, 1393, 1587, 1009, 1394, 1588, 1011, 1282, 1283, 1704, 
       1012, 1668, 1284, 1285, 1013, 1669, 1286, 1287, 1014, 1670, 1288, 1289,
        1015, 1672, 1290, 1291, 1671, 1016, 1395, 1589, 1017, 1396, 1590, 
       1018, 1397, 1591, 1019, 1518, 1205, 1020, 1519, 1206, 1021, 1520, 1207,
        1022, 1521, 1208, 1023}], 
      Line3DBox[{1025, 1398, 1592, 1024, 1399, 1593, 1026, 1292, 1594, 1460, 
       1027, 1461, 1595, 1293, 1028, 1673, 1294, 1295, 1029, 1674, 1296, 1297,
        1030, 1676, 1298, 1299, 1675, 1031, 1400, 1596, 1032, 1401, 1597, 
       1033, 1402, 1598, 1034, 1403, 1599, 1035, 1522, 1209, 1036, 1523, 1210,
        1037, 1524, 1211, 1038}], 
      Line3DBox[{1040, 1404, 1600, 1039, 1405, 1601, 1041, 1300, 1602, 1462, 
       1042, 1463, 1603, 1301, 1043, 1464, 1604, 1302, 1044, 1677, 1303, 1304,
        1045, 1679, 1305, 1306, 1678, 1046, 1406, 1605, 1047, 1407, 1606, 
       1048, 1408, 1607, 1049, 1409, 1608, 1050, 1410, 1609, 1051, 1525, 1212,
        1052, 1526, 1213, 1053}], 
      Line3DBox[{1057, 1527, 1214, 1055, 1528, 1215, 1059, 1308, 1529, 1216, 
       1368, 1467, 1530, 1217, 1369, 1469, 1531, 1218, 1370, 1471, 1532, 1219,
        1371, 1472, 1533, 1534, 1220, 1065, 1535, 1221, 1067, 1536, 1222, 
       1069, 1537, 1223, 1071, 1538, 1224, 1073, 1539, 1225, 1075, 1540, 1226,
        1077, 1542, 1228, 1079}], 
      Line3DBox[{1078, 1227, 1541, 1076, 1621, 1418, 1074, 1620, 1417, 1072, 
       1619, 1416, 1070, 1618, 1415, 1068, 1617, 1414, 1066, 1616, 1413, 1064,
        1680, 1313, 1312, 1681, 1063, 1311, 1615, 1470, 1062, 1310, 1614, 
       1468, 1061, 1309, 1613, 1466, 1060, 1465, 1612, 1307, 1058, 1611, 1412,
        1054, 1610, 1411, 1056}], 
      Line3DBox[{1081, 1419, 1622, 1080, 1543, 1229, 1082, 1314, 1544, 1230, 
       1372, 1473, 1545, 1231, 1373, 1474, 1546, 1232, 1374, 1475, 1547, 1233,
        1375, 1705, 1315, 1420, 1682, 1083, 1548, 1234, 1084, 1549, 1235, 
       1085, 1550, 1236, 1086, 1551, 1237, 1087, 1552, 1238, 1088, 1553, 1239,
        1089, 1554, 1240, 1090}], 
      Line3DBox[{1092, 1421, 1623, 1091, 1555, 1241, 1093, 1316, 1556, 1242, 
       1376, 1476, 1557, 1243, 1377, 1477, 1558, 1244, 1378, 1706, 1317, 1245,
        1379, 1707, 1318, 1422, 1683, 1094, 1423, 1624, 1095, 1559, 1246, 
       1096, 1560, 1247, 1097, 1561, 1248, 1098, 1562, 1249, 1099, 1563, 1250,
        1100, 1564, 1251, 1101}], 
      Line3DBox[{1103, 1424, 1625, 1102, 1425, 1626, 1104, 1319, 1565, 1252, 
       1380, 1478, 1566, 1253, 1381, 1708, 1320, 1254, 1382, 1709, 1321, 1255,
        1383, 1710, 1322, 1426, 1684, 1105, 1427, 1627, 1106, 1428, 1628, 
       1107, 1567, 1256, 1108, 1568, 1257, 1109, 1569, 1258, 1110, 1570, 1259,
        1111, 1571, 1260, 1112}], 
      Line3DBox[{1114, 1429, 1629, 1113, 1430, 1630, 1115, 1323, 1324, 1711, 
       1116, 1685, 1325, 1326, 1117, 1686, 1327, 1328, 1118, 1687, 1329, 1330,
        1119, 1689, 1331, 1332, 1688, 1120, 1431, 1631, 1121, 1432, 1632, 
       1122, 1433, 1633, 1123, 1572, 1261, 1124, 1573, 1262, 1125, 1574, 1263,
        1126, 1575, 1264, 1127}], 
      Line3DBox[{1129, 1434, 1634, 1128, 1435, 1635, 1130, 1333, 1636, 1479, 
       1131, 1480, 1637, 1334, 1132, 1690, 1335, 1336, 1133, 1691, 1337, 1338,
        1134, 1693, 1339, 1340, 1692, 1135, 1436, 1638, 1136, 1437, 1639, 
       1137, 1438, 1640, 1138, 1439, 1641, 1139, 1576, 1265, 1140, 1577, 1266,
        1141, 1578, 1267, 1142}], 
      Line3DBox[{1144, 1440, 1642, 1143, 1441, 1643, 1145, 1341, 1644, 1481, 
       1146, 1482, 1645, 1342, 1147, 1483, 1646, 1343, 1148, 883, 1344, 1149, 
       1695, 1345, 1346, 1694, 1150, 1442, 1647, 1151, 1443, 1648, 1152, 1444,
        1649, 1153, 1445, 1650, 1154, 1446, 1651, 1155, 1579, 1268, 1156, 
       1580, 1269, 1157}], 
      Line3DBox[{1171, 1355, 1354, 1697, 1170, 1663, 1453, 1169, 1662, 1452, 
       1168, 1661, 1451, 1167, 1660, 1450, 1166, 1659, 1449, 1165, 1658, 1448,
        1164, 1696, 1353, 898, 1163, 1352, 1657, 1488, 1162, 1351, 1656, 1487,
        1161, 1350, 1655, 1486, 1160, 1485, 1654, 1349, 1159, 1653, 1447, 
       1158, 1484, 1652, 1347, 1348}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{385, 603, 1490, 386, 613, 1501, 413, 1584, 624, 428, 1588, 
       635, 443, 1593, 646, 458, 1601, 657, 473, 1611, 668, 1528, 488, 679, 
       1543, 503, 690, 1555, 518, 1626, 701, 533, 1630, 712, 548, 1635, 723, 
       563, 1643, 734, 578, 1653, 745, 593}], 
      Line3DBox[{387, 755, 907, 604, 1491, 388, 768, 912, 614, 1502, 414, 778,
        917, 625, 1511, 429, 788, 1704, 922, 636, 444, 1594, 798, 927, 647, 
       459, 1602, 808, 932, 658, 474, 1612, 818, 937, 669, 1529, 489, 828, 
       942, 680, 1544, 504, 838, 947, 691, 1556, 519, 848, 952, 702, 1565, 
       534, 858, 1711, 957, 713, 549, 1636, 868, 962, 724, 564, 1644, 878, 
       967, 735, 579, 1654, 889, 972, 746, 594}], 
      Line3DBox[{389, 756, 908, 757, 1492, 390, 769, 913, 770, 1503, 415, 779,
        918, 780, 1512, 430, 789, 1668, 923, 790, 445, 1595, 799, 928, 800, 
       460, 1603, 809, 933, 810, 475, 1613, 819, 938, 820, 1530, 490, 829, 
       943, 830, 1545, 505, 839, 948, 840, 1557, 520, 849, 953, 850, 1566, 
       535, 859, 1685, 958, 860, 550, 1637, 869, 963, 870, 565, 1645, 879, 
       968, 880, 580, 1655, 890, 973, 891, 894}], 
      Line3DBox[{391, 758, 909, 759, 1493, 392, 771, 914, 772, 1504, 416, 781,
        919, 1701, 782, 431, 791, 1669, 924, 792, 446, 801, 1673, 929, 802, 
       461, 1604, 811, 934, 812, 476, 1614, 821, 939, 822, 1531, 491, 831, 
       944, 832, 1546, 506, 841, 949, 842, 1558, 521, 851, 954, 1708, 852, 
       536, 861, 1686, 959, 862, 551, 871, 1690, 964, 872, 566, 1646, 881, 
       969, 882, 581, 1656, 892, 974, 893, 897}], 
      Line3DBox[{393, 760, 910, 761, 1494, 394, 773, 915, 1699, 774, 417, 783,
        920, 1702, 784, 432, 793, 1670, 925, 794, 447, 803, 1674, 930, 804, 
       462, 813, 1677, 935, 814, 477, 1615, 823, 940, 824, 1532, 492, 833, 
       945, 834, 1547, 507, 843, 950, 1706, 844, 522, 853, 955, 1709, 854, 
       537, 863, 1687, 960, 864, 552, 873, 1691, 965, 874, 567, 883, 970, 884,
        582, 1657, 895, 975, 896, 901}], 
      Line3DBox[{395, 762, 911, 1698, 764, 396, 775, 916, 1700, 777, 418, 785,
        921, 1703, 787, 433, 795, 1672, 926, 797, 448, 805, 1676, 931, 807, 
       463, 815, 1679, 936, 817, 478, 825, 1681, 941, 827, 1533, 493, 835, 
       946, 1705, 837, 508, 845, 951, 1707, 847, 523, 855, 956, 1710, 857, 
       538, 865, 1689, 961, 867, 553, 875, 1693, 966, 877, 568, 885, 1695, 
       971, 887, 583, 898, 976, 900, 902}], 
      Line3DBox[{398, 606, 1495, 399, 1582, 616, 420, 1585, 627, 435, 1589, 
       638, 450, 1596, 649, 465, 1605, 660, 480, 1616, 671, 1535, 495, 682, 
       1548, 510, 1624, 693, 525, 1627, 704, 540, 1631, 715, 555, 1638, 726, 
       570, 1647, 737, 585, 1658, 748, 596}], 
      Line3DBox[{400, 607, 1496, 401, 617, 1505, 421, 1586, 628, 436, 1590, 
       639, 451, 1597, 650, 466, 1606, 661, 481, 1617, 672, 1536, 496, 683, 
       1549, 511, 694, 1559, 526, 1628, 705, 541, 1632, 716, 556, 1639, 727, 
       571, 1648, 738, 586, 1659, 749, 597}], 
      Line3DBox[{402, 608, 1497, 403, 618, 1506, 422, 629, 1513, 437, 1591, 
       640, 452, 1598, 651, 467, 1607, 662, 482, 1618, 673, 1537, 497, 684, 
       1550, 512, 695, 1560, 527, 706, 1567, 542, 1633, 717, 557, 1640, 728, 
       572, 1649, 739, 587, 1660, 750, 598}], 
      Line3DBox[{404, 609, 1498, 405, 619, 1507, 423, 630, 1514, 438, 641, 
       1518, 453, 1599, 652, 468, 1608, 663, 483, 1619, 674, 1538, 498, 685, 
       1551, 513, 696, 1561, 528, 707, 1568, 543, 718, 1572, 558, 1641, 729, 
       573, 1650, 740, 588, 1661, 751, 599}], 
      Line3DBox[{406, 610, 1499, 407, 620, 1508, 424, 631, 1515, 439, 642, 
       1519, 454, 653, 1522, 469, 1609, 664, 484, 1620, 675, 1539, 499, 686, 
       1552, 514, 697, 1562, 529, 708, 1569, 544, 719, 1573, 559, 730, 1576, 
       574, 1651, 741, 589, 1662, 752, 600}], 
      Line3DBox[{408, 611, 1500, 409, 621, 1509, 425, 632, 1516, 440, 643, 
       1520, 455, 654, 1523, 470, 665, 1525, 485, 1621, 676, 1540, 500, 687, 
       1553, 515, 698, 1563, 530, 709, 1570, 545, 720, 1574, 560, 731, 1577, 
       575, 742, 1579, 590, 1663, 753, 601}], 
      Line3DBox[{410, 766, 1665, 767, 411, 622, 1510, 426, 633, 1517, 441, 
       644, 1521, 456, 655, 1524, 471, 666, 1526, 486, 677, 1541, 1542, 501, 
       688, 1554, 516, 699, 1564, 531, 710, 1571, 546, 721, 1575, 561, 732, 
       1578, 576, 743, 1580, 591, 903, 1697, 904, 905}], 
      Line3DBox[{592, 744, 888, 1652, 577, 733, 1642, 562, 722, 1634, 547, 
       711, 1629, 532, 700, 1625, 517, 689, 1623, 502, 678, 1622, 487, 1527, 
       667, 1610, 472, 656, 1600, 457, 645, 1592, 442, 634, 1587, 427, 623, 
       1583, 412, 612, 1581, 384, 1489, 602, 754, 906}], 
      Line3DBox[{595, 747, 1696, 899, 584, 736, 1694, 886, 569, 725, 1692, 
       876, 554, 714, 1688, 866, 539, 703, 1684, 856, 524, 692, 1683, 846, 
       509, 681, 1682, 836, 494, 1534, 670, 1680, 826, 479, 659, 1678, 816, 
       464, 648, 1675, 806, 449, 637, 1671, 796, 434, 626, 1667, 786, 419, 
       615, 1666, 776, 397, 605, 1664, 763, 765}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
Gz0=
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->250,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-1, 2}, {-2, 2}, {0., 3.9999991428571886`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.771358804554097*^9, 3.771358829789379*^9}}]
}, Open  ]],

Cell[TextData[StyleBox["I could look at the grad of S.",
 FontSlant->"Plain"]], "Text",
 CellChangeTimes->{{3.771358868513606*^9, 3.7713588876606007`*^9}},
 FontSlant->"Italic"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grad", "[", 
  RowBox[{
   RowBox[{"z", "-", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.771358892025818*^9, 3.77135890890825*^9}, {
  3.7713606306697063`*^9, 3.771360677145941*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "2"}], " ", "x"}], ",", "0", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.771360678552792*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["\[ExponentialE]", "z"]}], ",", 
    RowBox[{"-", 
     SuperscriptBox["\[ExponentialE]", "x"]}], ",", 
    RowBox[{"-", 
     SuperscriptBox["\[ExponentialE]", "y"]}]}], "}"}], ".", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", "x"}], ",", "0", ",", "1"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.771358945196129*^9, 3.771358953205658*^9}, 
   3.771360698468639*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox["\[ExponentialE]", "y"]}], "+", 
  RowBox[{"2", " ", 
   SuperscriptBox["\[ExponentialE]", "z"], " ", "x"}]}]], "Output",
 CellChangeTimes->{3.7713589551231194`*^9, 3.7713607002889757`*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "2"], 
  RowBox[{
   SubsuperscriptBox["\[Integral]", "0", "1"], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", "y"]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[ExponentialE]", 
        SuperscriptBox["x", "2"]], " ", "x"}]}], ")"}], 
    RowBox[{"\[DifferentialD]", "y"}], 
    RowBox[{"\[DifferentialD]", "x"}]}]}]}]], "Input",
 CellChangeTimes->{{3.771359197435954*^9, 3.771359228721385*^9}, {
  3.7713607123000183`*^9, 3.771360802861608*^9}}],

Cell[BoxData[
 RowBox[{"1", "-", 
  RowBox[{"2", " ", "\[ExponentialE]"}], "+", 
  SuperscriptBox["\[ExponentialE]", "4"]}]], "Output",
 CellChangeTimes->{{3.771360782529737*^9, 3.771360804743881*^9}},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["The answer above agrees with the text.", "Text",
 CellChangeTimes->{{3.7713608286844797`*^9, 3.771360836500372*^9}}],

Cell[TextData[{
 "9. Verify Stoke\[CloseCurlyQuote]s theorem for ",
 StyleBox["F",
  FontWeight->"Bold"],
 " and ",
 StyleBox["S",
  FontSlant->"Italic"],
 " in problem 5."
}], "Text",
 CellChangeTimes->{{3.771179574688334*^9, 3.7711795969101067`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[TextData[{
 "11. Stoke\[CloseCurlyQuote]s theorem not applicable. Evaluate ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"\[ContourIntegral]", " ", 
    RowBox[{
     RowBox[{"F", ".", 
      RowBox[{"r", "'"}]}], 
     RowBox[{"\[DifferentialD]", "s"}]}]}], ",", " ", 
   RowBox[{"F", "=", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["x", "2"], "+", 
        SuperscriptBox["y", "2"]}], ")"}], 
      RowBox[{"-", "1"}]], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "y"}], ",", "x"}], "}"}]}]}], ",", " ", 
   RowBox[{
    RowBox[{"C", ":", " ", 
     RowBox[{
      SuperscriptBox["x", "2"], "+", 
      SuperscriptBox["y", "2"]}]}], "=", "1"}], ",", " ", 
   RowBox[{"z", "=", "0"}], ","}]]],
 " oriented clockwise. Why can Stoke\[CloseCurlyQuote]s theorem not be \
applied? What (false) result would it give?"
}], "Text",
 CellChangeTimes->{{3.769090331237348*^9, 3.769090342547594*^9}, {
  3.769090567357874*^9, 3.769090599310092*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[TextData[{
 StyleBox["13 - 20 Evaluation of ",
  FontWeight->"Bold"],
 Cell[BoxData[
  RowBox[{
   SubscriptBox["\[ContourIntegral]", "c"], " ", 
   RowBox[{
    RowBox[{"F", ".", 
     RowBox[{"r", "'"}]}], 
    RowBox[{"\[DifferentialD]", "s"}]}]}]],
  FontWeight->"Bold"],
 "\nCalculate this line integral by Stoke\[CloseCurlyQuote]s theorem for the \
given F and C. Assume the Cartesian coordinates to be right-handed and the \
z-component of the surface normal to be nonnegative."
}], "Text",
 CellChangeTimes->{{3.769090649500703*^9, 3.769090701200571*^9}, {
  3.769090741136052*^9, 3.769090779444502*^9}},
 Background->RGBColor[
  0.9600061036087587, 0.9600061036087587, 0.9600061036087587]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"13.", "  ", "F"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "5"}], "y"}], ",", 
     RowBox[{"4", "x"}], ",", "z"}], "}"}]}], ",", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"C", " ", "the", " ", "circle", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    SuperscriptBox["y", "2"]}], "=", "16"}], ",", " ", 
  RowBox[{"z", "=", "4"}]}]], "Text",
 CellChangeTimes->{{3.769090794789345*^9, 3.769090843273568*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell["F is the external vector field.", "Text",
 CellChangeTimes->{{3.771362231206955*^9, 3.771362237285749*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eF", "[", 
   RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "5"}], "y"}], ",", 
    RowBox[{"4", "x"}], ",", "z"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7713622403443003`*^9, 3.771362285068554*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "5"}], " ", "y"}], ",", 
   RowBox[{"4", " ", "x"}], ",", "z"}], "}"}]], "Output",
 CellChangeTimes->{3.771362290357305*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Curl", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "5"}], "y"}], ",", 
     RowBox[{"4", "x"}], ",", "z"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.771362295686398*^9, 3.771362311043715*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{3.771362312015128*^9}]
}, Open  ]],

Cell[TextData[{
 "This seems a little odd, because I am given C but not S. In order to \
function in this environment I need to follow example 3 on p. 467, which is \
analogous. As a surface S bounded by C I can take the circular disk ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "2"], TraditionalForm]]],
 "+",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["y", "2"], TraditionalForm]]],
 " \[LessEqual] 16 in the plane z = 4. Then ",
 StyleBox["n",
  FontWeight->"Bold"],
 " in Stoke\[CloseCurlyQuote]s theorem points in the positive z-direction; \
thus, ",
 StyleBox["n",
  FontWeight->"Bold"],
 " = ",
 StyleBox["k",
  FontWeight->"Bold"],
 ". Hence Curl[F].",
 StyleBox["n",
  FontWeight->"Bold"],
 " is simply the component of Curl[F] in the positive z-direction (z being \
the ",
 StyleBox["k",
  FontWeight->"Bold"],
 " component). Since F with z = 4 has the constituents ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["F", "1"], "=", " ", 
     RowBox[{
      RowBox[{"-", "20"}], "y"}]}], ",", " ", 
    RowBox[{
     SubscriptBox["F", 
      RowBox[{"2", " "}]], "=", 
     RowBox[{"16", "x"}]}], ",", " ", 
    RowBox[{
     SubscriptBox["F", 
      RowBox[{"3", " "}]], "=", "4"}], ","}], TraditionalForm]]],
 " I thus obtain"
}], "Text",
 CellChangeTimes->{{3.771362464967355*^9, 3.771362517644669*^9}, {
  3.7713660671428413`*^9, 3.771366084182551*^9}, {3.7713678054067307`*^9, 
  3.771367876803236*^9}, {3.771367948042495*^9, 3.7713679969432898`*^9}, {
  3.771368049047248*^9, 3.771368104107888*^9}, {3.771368136076322*^9, 
  3.771368237711616*^9}, {3.771368269944159*^9, 3.771368272462384*^9}, {
  3.771368776040455*^9, 3.7713687861257057`*^9}, {3.7713688228616734`*^9, 
  3.771368827531994*^9}, {3.771411136138288*^9, 3.771411137322356*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Curl", "[", "F", "]"}], ".", "n"}], "=", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", 
      SubscriptBox["F", "2"]}], 
     RowBox[{"\[PartialD]", "x"}]], "-", 
    FractionBox[
     RowBox[{"\[PartialD]", 
      SubscriptBox["F", "1"]}], 
     RowBox[{"\[PartialD]", "y"}]]}], "=", 
   RowBox[{
    RowBox[{"16", "-", 
     RowBox[{"(", 
      RowBox[{"-", "20"}], ")"}]}], "=", "36"}]}]}]], "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.771368280460321*^9, 3.771368449440538*^9}}],

Cell["\<\
Hence the integral over S in Stokes\[CloseCurlyQuote]s theorem equals 36 \
times the area 4\[Pi] of the disk S. This yields the answer\
\>", "Text",
 CellChangeTimes->{{3.7713685084394093`*^9, 3.77136855290878*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"36", "*", "4", "\[Pi]"}]], "Input",
 CellChangeTimes->{{3.77136856516077*^9, 3.7713685716139812`*^9}}],

Cell[BoxData[
 RowBox[{"144", " ", "\[Pi]"}]], "Output",
 CellChangeTimes->{3.771368573509755*^9},
 Background->RGBColor[1, 1, 0.85]]
}, Open  ]],

Cell["\<\
The above answer does not match that of the text, which is 80\[Pi], but see \
the following note.\
\>", "Text",
 CellChangeTimes->{{3.771364435934164*^9, 3.771364449684702*^9}, {
  3.7714211982929897`*^9, 3.77142120753825*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[Integral]", "S"], 
   RowBox[{"\[Integral]", 
    RowBox[{
     RowBox[{"(", "9", ")"}], 
     RowBox[{"\[DifferentialD]", "A"}]}]}]}], "=", 
  RowBox[{
   RowBox[{"9", 
    RowBox[{"(", "\[Pi]", ")"}], 
    RowBox[{"(", 
     SuperscriptBox["4", "2"], ")"}]}], "=", 
   RowBox[{"144", "\[Pi]"}]}]}]], "Input",
 CellChangeTimes->{{3.77136528916225*^9, 3.771365299938134*^9}, {
  3.771365427925787*^9, 3.771365435108033*^9}, {3.771365510427287*^9, 
  3.7713655170490837`*^9}, {3.7713655556242113`*^9, 3.771365559591704*^9}, {
  3.771365651950695*^9, 3.771365677251824*^9}, {3.77136570808315*^9, 
  3.771365715459942*^9}, {3.771365831896612*^9, 3.7713659307803907`*^9}},
 Background->RGBColor[0.9, 1, 1]],

Cell["\<\
As an interesting take on this problem, the s.m. gives the result shown in \
the cyan cell above, which is seemingly at odds with the text answer, but in \
perfect agreement with example 3 (and the yellow cell).\
\>", "Text",
 CellChangeTimes->{{3.771365951691719*^9, 3.7713660055928907`*^9}, {
  3.7713686248846073`*^9, 3.771368635682238*^9}, {3.7714111831443577`*^9, 
  3.771411188704176*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"15.", "  ", "F"}], "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SuperscriptBox["y", "2"], ",", 
      SuperscriptBox["x", "2"], ",", 
      RowBox[{"z", "+", "x"}]}], "}"}], " ", "around", " ", "the", " ", 
    "triangle", " ", "with", " ", "vertices", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0"}], "}"}]}]}], ",", 
  RowBox[{"{", 
   RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
  RowBox[{"{", 
   RowBox[{"1", ",", "1", ",", "0"}], "}"}]}]], "Text",
 CellChangeTimes->{{3.769090855585724*^9, 3.7690909959782953`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell["This is similar to Paul\[CloseCurlyQuote]s example 2. I have the vector \
field", "Text",
 CellChangeTimes->{{3.771420648533572*^9, 3.7714206657637863`*^9}, 
   3.771421236641171*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eF", "[", 
   RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], "=", 
  RowBox[{"{", 
   RowBox[{
    SuperscriptBox["y", "2"], ",", 
    SuperscriptBox["x", "2"], ",", 
    RowBox[{"z", "+", "x"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.771364496484152*^9, 3.771364515986261*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox["y", "2"], ",", 
   SuperscriptBox["x", "2"], ",", 
   RowBox[{"x", "+", "z"}]}], "}"}]], "Output",
 CellChangeTimes->{3.771364518927825*^9, 3.771369114035303*^9, 
  3.771411274995369*^9}]
}, Open  ]],

Cell["and I get its curl (which matches the answer in the text).", "Text",
 CellChangeTimes->{{3.771420671627286*^9, 3.771420692090954*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Curl", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["y", "2"], ",", 
     SuperscriptBox["x", "2"], ",", 
     RowBox[{"x", "+", "z"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.771364532086918*^9, 3.7713645485134706`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{
    RowBox[{"2", " ", "x"}], "-", 
    RowBox[{"2", " ", "y"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.7713645495087433`*^9, 3.77136911674409*^9, 
  3.771411277929432*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["The three given vectors are set down.", "Text",
 CellChangeTimes->{{3.771414904282395*^9, 3.771414916079876*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vec1", "=", 
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", "0"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.771263363787878*^9, 3.771263378970015*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.7712633881286077`*^9, 3.771263403370195*^9}, 
   3.771364654715897*^9, 3.7713691193515787`*^9, 3.7713695977331448`*^9, 
   3.7713701643651342`*^9, 3.77141128074192*^9, 3.7714167031111727`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vec2", "=", 
  RowBox[{"{", 
   RowBox[{"1", ",", "0", ",", "0"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.771263394295953*^9, 3.7712633998863783`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.771263395224011*^9, 3.77126340078415*^9}, 
   3.771364657784671*^9, 3.771369122079743*^9, 3.771369600351701*^9, 
   3.771370167432638*^9, 3.771411283608395*^9, 3.7714167055840683`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vec3", "=", 
  RowBox[{"{", 
   RowBox[{"1", ",", "1", ",", "0"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.771369752795719*^9, 3.771369773028644*^9}, {
  3.771369819652648*^9, 3.771369824147297*^9}, {3.771370184374949*^9, 
  3.771370187679023*^9}, {3.771370232469532*^9, 3.7713702328932037`*^9}, {
  3.7714112951326513`*^9, 3.7714112976285963`*^9}, {3.7714150048862658`*^9, 
  3.77141500791648*^9}, {3.7714154755330353`*^9, 3.771415479292777*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.771369774312962*^9, 3.7713698254698687`*^9, 
  3.7713701886894217`*^9, 3.771370236092963*^9, 3.771411299423786*^9, 
  3.77141670825093*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cross", "[", 
  RowBox[{
   RowBox[{"vec2", "-", "vec3"}], ",", 
   RowBox[{"vec2", "-", "vec1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.771418674345189*^9, 3.77141869660367*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.7714186982383423`*^9}]
}, Open  ]],

Cell["So an equation of the plane is, unsurprisingly,", "Text",
 CellChangeTimes->{{3.771418742403304*^9, 3.771418748353971*^9}, {
  3.77142070696248*^9, 3.771420714170149*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"0", 
    RowBox[{"(", 
     RowBox[{"x", "-", "1"}], ")"}]}], "+", 
   RowBox[{"0", 
    RowBox[{"(", 
     RowBox[{"y", "-", "0"}], ")"}]}], "+", 
   RowBox[{"1", 
    RowBox[{"(", 
     RowBox[{"z", "-", "0"}], ")"}]}]}], "\[Equal]", "0"}]], "Input",
 CellChangeTimes->{{3.771418756559745*^9, 3.771418801944396*^9}}],

Cell[BoxData[
 RowBox[{"z", "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.771418819508955*^9}]
}, Open  ]],

Cell["\<\
which will not be used. The triangle that was given is C. Suppose I make S \
equal to the same triangle, except using {0,0,1}, that is, the vectors\
\>", "Text",
 CellChangeTimes->{{3.771418951348424*^9, 3.7714189996899233`*^9}, 
   3.771419981283646*^9, {3.7714207222179813`*^9, 3.771420749632946*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vec4", "=", 
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.771419014969288*^9, 3.771419024057178*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.771419025813628*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vec5", "=", 
  RowBox[{"{", 
   RowBox[{"1", ",", "0", ",", "0"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.771419026693966*^9, 3.771419041240602*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.7714190427415533`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vec6", "=", 
  RowBox[{"{", 
   RowBox[{"1", ",", "1", ",", "0"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7714190439743567`*^9, 3.771419054008585*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.7714190551591063`*^9}]
}, Open  ]],

Cell["Then", "Text",
 CellChangeTimes->{{3.771419097902707*^9, 3.7714190987906027`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cross", "[", 
  RowBox[{
   RowBox[{"vec5", "-", "vec6"}], ",", 
   RowBox[{"vec5", "-", "vec4"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.771420335904187*^9, 3.771420341038293*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "0", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.77142034222838*^9}]
}, Open  ]],

Cell["And an equation for S would be", "Text",
 CellChangeTimes->{{3.7714191426064253`*^9, 3.771419147525126*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"x", "-", "1"}], ")"}], "+", 
   RowBox[{"0", 
    RowBox[{"(", 
     RowBox[{"y", "-", "0"}], ")"}]}], "+", 
   RowBox[{"(", 
    RowBox[{"z", "-", "0"}], ")"}]}], "\[Equal]", "0"}]], "Input",
 CellChangeTimes->{{3.7714191555531063`*^9, 3.7714192310264263`*^9}, {
  3.771420369487568*^9, 3.7714203757012777`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "1"}], "+", "x", "+", "z"}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.771419232172675*^9, 3.771420378012081*^9}]
}, Open  ]],

Cell["and its grad would be", "Text",
 CellChangeTimes->{{3.771420767544179*^9, 3.771420771144305*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grad", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "x", "+", "z"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7714192538264227`*^9, 3.77141927936096*^9}, 
   3.77142039924015*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"1", ",", "0", ",", "1"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.7714192805132723`*^9, 3.77142040119436*^9}]
}, Open  ]],

Cell["and the dot product with the curl of F would be", "Text",
 CellChangeTimes->{{3.7714193461358957`*^9, 3.771419349222582*^9}, {
  3.771420778832971*^9, 3.771420789543787*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"0", ",", 
    RowBox[{"-", "1"}], ",", 
    RowBox[{
     RowBox[{"2", " ", "x"}], "-", 
     RowBox[{"2", " ", "y"}]}]}], "}"}], ".", 
  RowBox[{"{", 
   RowBox[{"1", ",", "0", ",", "1"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7714193538559628`*^9, 3.771419363568961*^9}, 
   3.7714204141515627`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", "x"}], "-", 
  RowBox[{"2", " ", "y"}]}]], "Output",
 CellChangeTimes->{3.771419365164372*^9, 3.771420415572258*^9}]
}, Open  ]],

Cell["Now I have it down to an integral over C", "Text",
 CellChangeTimes->{{3.771420844139954*^9, 3.771420851925644*^9}, {
  3.7714210586814537`*^9, 3.7714210624468727`*^9}}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[Integral]", "D"], 
  RowBox[{"\[Integral]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", "x"}], "-", 
      RowBox[{"2", " ", "y"}]}], ")"}], 
    RowBox[{"\[DifferentialD]", "A"}]}]}]}]], "Input",
 CellChangeTimes->{3.771420872392061*^9}],

Cell["\<\
but I have to watch out about the integration limits, taking a cue from Paul, \
because if the limits on \[DifferentialD]y are put as 0 to 1, it will not \
work.\
\>", "Text",
 CellChangeTimes->{{3.771420879542095*^9, 3.771420940898777*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "1"], 
  RowBox[{
   SubsuperscriptBox["\[Integral]", "0", "x"], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", "x"}], "-", 
      RowBox[{"2", " ", "y"}]}], ")"}], 
    RowBox[{"\[DifferentialD]", "y"}], 
    RowBox[{"\[DifferentialD]", "x"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7714194977330313`*^9, 3.771419559247937*^9}, {
   3.771419593527081*^9, 3.771419658604648*^9}, 3.771420019764639*^9, {
   3.771420228003805*^9, 3.771420229329954*^9}, 3.771420426015197*^9}],

Cell[BoxData[
 FractionBox["1", "3"]], "Output",
 CellChangeTimes->{{3.771419509680167*^9, 3.771419560801877*^9}, {
   3.771419600803278*^9, 3.771419660345869*^9}, 3.771420021308279*^9, 
   3.771420230728956*^9, 3.771420427479065*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["The above answer agrees with that in the text.", "Text",
 CellChangeTimes->{{3.7714209505382977`*^9, 3.7714209585221367`*^9}}],

Cell["I can make a plot of the setup showing S and C.", "Text",
 CellChangeTimes->{{3.7714152098411617`*^9, 3.77141522178123*^9}, {
  3.77142059820603*^9, 3.77142060703762*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RGBColor", "[", 
        RowBox[{"0.5", ",", "0.9", ",", "1"}], "]"}], ",", 
       RowBox[{"Prism", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0.001"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0.001"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "0.001"}], "}"}]}], "}"}], "]"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RGBColor", "[", 
        RowBox[{"0.5", ",", "0.9", ",", "1"}], "]"}], ",", 
       RowBox[{"Prism", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0.999"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0.001"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "0.001"}], "}"}]}], "}"}], "]"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Cylinder", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", "0.001"}], 
       "]"}], "}"}]}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], ",", 
   RowBox[{"BoxRatios", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "1"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.771276059354925*^9, 3.771276148259055*^9}, {
   3.771276181787752*^9, 3.771276234000259*^9}, {3.771276520976366*^9, 
   3.771276662130169*^9}, {3.7712767188725777`*^9, 3.7712767814144163`*^9}, {
   3.771276891252623*^9, 3.771276895370726*^9}, {3.7712769382094*^9, 
   3.771277103076159*^9}, {3.771277139278153*^9, 3.771277156162225*^9}, {
   3.771277215506157*^9, 3.771277215872229*^9}, {3.771415325621106*^9, 
   3.771415361849271*^9}, {3.771415400792429*^9, 3.771415408831902*^9}, {
   3.771415551571567*^9, 3.771415622168914*^9}, {3.771415657127761*^9, 
   3.771415665158956*^9}, {3.7714159522418127`*^9, 3.771416010436036*^9}, {
   3.7714160785619917`*^9, 3.771416086225712*^9}, {3.771416193607382*^9, 
   3.771416267219363*^9}, {3.771416427856391*^9, 3.771416467180973*^9}, 
   3.7714165305548773`*^9, {3.77141664172705*^9, 3.771416651406543*^9}, {
   3.771417397190427*^9, 3.771417404047347*^9}, {3.771417470943075*^9, 
   3.771417523986328*^9}, {3.771420534882362*^9, 3.771420572927496*^9}}],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0.5, 0.9, 1], 
    PrismBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 0, 0.001}, {1, 0, 0.001}, {
      1, 1, 0.001}}]}, 
   {RGBColor[0.5, 0.9, 1], 
    PrismBox[{{0, 0, 1}, {1, 0, 0}, {1, 1, 0}, {0, 0, 0.999}, {1, 0, 0.001}, {
      1, 1, 0.001}}]}, CylinderBox[{{0, 0, 0}, {0, 0, 1}}, 0.001]},
  Axes->True,
  AxesLabel->{
    FormBox["x", TraditionalForm], 
    FormBox["y", TraditionalForm], 
    FormBox["z", TraditionalForm]},
  BoxRatios->{1, 1, 1},
  ImageSize->300,
  ViewPoint->{-2.3579555498760927`, 2.2946157320707523`, 0.7904329617000807},
  ViewVertical->{-0.6183044902443424, 0.5056117991882598, 
   0.6017111149590763}]], "Output",
 CellChangeTimes->{
  3.7714152855762863`*^9, {3.771415334922716*^9, 3.771415362594841*^9}, 
   3.771415410171627*^9, 3.7714155566186523`*^9, {3.771415592918666*^9, 
   3.77141562280682*^9}, 3.771415666316072*^9, {3.77141601204384*^9, 
   3.77141603306005*^9}, {3.771416087589778*^9, 3.771416106338585*^9}, 
   3.7714162680373*^9, 3.771416468305614*^9, 3.771416531795731*^9, 
   3.771416652147236*^9, {3.771417473092515*^9, 3.771417524624235*^9}, 
   3.771420574228119*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"17.", "  ", "F"}], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     SuperscriptBox["z", "3"], ",", "0"}], "}"}]}], ",", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
    "C", " ", "the", " ", "boundary", " ", "curve", " ", "of", " ", "the", 
     " ", "cylinder", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    SuperscriptBox["y", "2"]}], "=", "1"}], ",", " ", 
  RowBox[{"x", "\[GreaterEqual]", "0"}], ",", " ", 
  RowBox[{"y", "\[GreaterEqual]", "0"}], ",", " ", 
  RowBox[{"0", "\[LessEqual]", "z", "\[LessEqual]", "1"}]}]], "Text",
 CellChangeTimes->{{3.769091010394346*^9, 3.769091051630097*^9}, {
  3.7690910869595127`*^9, 3.76909113151511*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell["There is the vector field", "Text",
 CellChangeTimes->{{3.77142311884512*^9, 3.771423125275804*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eF", "[", 
   RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], "=", 
  RowBox[{"{", 
   RowBox[{"0", ",", 
    SuperscriptBox["z", "3"], ",", "0"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.771422704637948*^9, 3.7714227265849857`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   SuperscriptBox["z", "3"], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.7714227278047543`*^9, 3.7714249295421467`*^9, 
  3.7714249655919037`*^9}]
}, Open  ]],

Cell["and its curl.", "Text",
 CellChangeTimes->{{3.771423128687997*^9, 3.771423136779339*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Curl", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     SuperscriptBox["z", "3"], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.77142273107495*^9, 3.7714227575678062`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "3"}], " ", 
    SuperscriptBox["z", "2"]}], ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.77142275967724*^9, 3.771424968529058*^9}]
}, Open  ]],

Cell["\<\
And from the text answer it is evident that a parametric version of C (and S) \
is chosen, which from the constraints on domain reveals itself as a quarter \
cylinder.\
\>", "Text",
 CellChangeTimes->{{3.771423144395134*^9, 3.771423179650028*^9}, {
  3.7714232270564823`*^9, 3.771423231000524*^9}, {3.771436173699025*^9, 
  3.771436197329692*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", "u", "]"}], ",", 
     RowBox[{"Sin", "[", "u", "]"}], ",", "v"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"u", ",", "0", ",", 
     FractionBox["\[Pi]", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"v", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7714228635608253`*^9, 3.771422930762515*^9}, {
  3.771435412259554*^9, 3.7714354168571253`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyFnHvYVWPex58ch3jNvGXIaZqxCRnGIRJaMq7YosQYQ2NSGeddiWkqx9AM
TU4bxStJkgwuh+FJEpHkUNGJtDsfdHrUGMOU4nnH6/dZzzWf+90X/7j6dLf2
7/6se33vtX7P2s9Pu/c68/db1dTUNN22pmbrf/9/av23/23IjpxRHttxn+vb
PvKbJ8fdevBVbS88aPifrpu2IbtkzSPTX3zilQx+x6opmx88fEN2+aBpg+++
ZlrO3/vkmzdPPXJ9dmV2YeMO+87N+U9WDhvxypy67OBuX14z6c1KAz95Zafz
d1+X/faCF35xyXZLc/7OeWN7Td5mTTbhxPZrRn6+POfTj73hohEjP8mmxf/h
jHs7/h38/DgunwM/NOrYJ+qC94263415wPvHPG+PecOHhJce4Qn+5/vbP/Gt
R7zC7fmyQ9o+sF/x+cye4fYMt2e4PedcnuH2DLdnuD3D7Rluz3B7htsz3J7h
9gy356dWf1xfKL6ReIbbM9ye4facc3mG2zPcnuH2DLdnuD3D7Rluz3B7htsz
3J4LLzc9YlzpvcQz3J7h9gy355zLM9ye4fYMt2e4PcPtGW7PcHuG2zPcnuH2
PGNKi78VirMSz3B7htsz3J5zLs9we4bbM9ye4fYMt2e4PcPtGW7PcHuG2/Pg
Q6ZMK1U+TDzD7Rluz3B7zrk8w+0Zbs9we4bbM9ye4fYMt2e4PcPtGW7P7Yd1
/6S2VEk8w+0Zbs9we865PMPtGW7PcHuG2zPcnuH2DLdnuD3D7Rluz41qvv1v
SeIZbs9we4bbc87lGW7PcHuG2zPcnuH2DLdnuD3D7Rluz3B77vrCjCGF4rLE
M9ye4fYMt+ecyzPcnuH2DLdnuD3D7Rluz3B7htsz3J7h9jzxkoeaFcsrEs9w
e4bbM9yecy7PcHuG2zPcnuH2DLdnuD3D7Rluz3B7htvznntfMaZU+STxDLdn
uD3D7Tnn8gy3Z7g9w+0Zbs9we4bbM9ye4fYMt2e4Pfef2eaIcmFN4hluz3B7
httzzuUZbs9we4bbM9ye4fYMt2e4PcPtGW7PcHv+aNAOk2pL6xLPcHuG2zPc
nnMuz3B7htsz3J7h9gy3Z7g9w+0Zbs9we4bbc6s2806r1H6aeIbbM9ye4fac
c3mG2zPcnuH2DLdnuD3D7Rluz3B7htsz3J7vXj/m42//bM9we4bbM9yecy7P
cHuG2zPcnuH2DLdnuD3D7Rluz3B7hj825MGpe32+IXv5kY9vOPnFp7KV47eb
tn9xVOIfvjbG8e/gPj7cx+9xb3ZPqbI+OT7cx6/Gq9VPH9Lj4R5fzQ+fO2fc
LdtP3bIhG3Rb3eOHvjQ8m//BsMMOLJazuvjz7Ph7uMcPaHdVbW1pQzIebg/V
jk/9Pn61+jm+x1fr3/K5rqda/XzulfePGXH7vA3Zcce823XsbuPz/uSvd24x
dVj3Ddl594359KWNb+efa874JX3mdWj38Prstm7L+25376x8vDnjF3/25OTL
7/o0e+iqsxctu25ePt6c8R9Onf/J863rspHvLOp6fstF+Xhzxo+c9Wzzix5c
m7Waf0T7Y6c29O3NGf961vGiG19ZnZ3RonLQ56etyMebM54/8/eMN2c8n8fn
M96c8Y/GfJgf480ZPyp8LQp/jDdn/F1xPhbH+WG8OeMvi/N9dpx/xpszvlus
J9YX480Z73VI/9brDe51Bff6gXudwL0e4D7vcJ9fuM8j3OcL7vMCt3+4PcPt
E26f9GntE26fcPuE2yfcPuH2CbdPuH3C7RNun3D7hNsn3D7h9kk/1j7h9gm3
T7h9wu0Tbp9w+4TbJ9w+4fYJt0+4fcLtE26f9F3tE26fcPuE2yfcPuH2CbdP
uH3C7RNun3D7hNsn3D7h9kl/1T7h9gm3T7h9wu0Tbp9w+4TbJ9w+4fYJt0+4
fcLtE26f9FHtE26fcPuE2yfcPuH2CbdPuH3C7RNun3D7hNsn3D7h9km/1D7h
9gm3T7h9wu0Tbp9w+4TbJ9w+4fYJt0+4fcLtE26f9EXtE26fcPuE2yfcPuH2
CbdPuH3C7RNun3D7hNsn3D7h9kn/0z7h9gm3T7h9wu0Tbp9w+4TbJ9w+4fYJ
t0+4fcLtE26f9DntE26fcPuE2yfcPuH2CbdPuH3C7RNun3D7hNsn3D7h9kk/
0z7h9gm3T7h9wu0Tbp9w+4TbJ9w+4fYJt0+4fcLtE26f9C3tE26fcPuE2yfc
PuH2CbdPuH3C7RNun3D7hNsn3D7h9kl/yT7h9gm3T7h9wu0Tbp9w+4TbJ9w+
4fYJt0+4fVbrv+00oNdOjWqeTbyd+5d29S+Vnky8PfCz0St7VcYk3hZH/9be
Th0168IJpQcTb3Ojf2hvk74Zv+XnxZsSb9Rpb7+LOu1tZNRpbyuiTnvrHHXa
G31Oe7vujj7jy4XXE28dj2x8VU3NpMTbcS+cfO6C2omJt0X1/aaNK01IvA3s
8NfsnsL4tL8xrPJ8z0pt4m3qsp32P7X8QuLt+qjT3jpFnfaWRZ32tjTqtLeb
o0572z/q9PU7Jeq0zy+6Pl1XKL6b+Hxr2/ZjyoV3Ep/3Pbmoa03N24nPizv/
sVnPyluJz9b/2mV2pXZK4nOHh8YOKZbfTHxWTmzXflxpcuKTOu2TOu1zWNRp
n5dEnfZ5TNRpnztGnfY5P+q0z9rd/3lnpXZm4vPhyyddUS7MTHz++dUhxWL5
g8Rnrx+du39NzQeJz2ffPnW7npUZic+BPZe/Vqmdnvg8q+m1/YvlaYnPcVGn
fVKnfd4addpn76jTPp+LOu3zpqjTPs+MOu2zz8C7nygU035Rlznn/6lSOzfx
+csWB/UoF+YmPlsO+DIrluckPptOf2Ovmpo5ic+vf3LnptrS7MTnyj5dPixV
0v7bVVGnfVKnfZ4UddrnwVGnfVKnfVKnfVKnfR6y9pDJpcr8xOdux29+uFCc
n/isv3PqtZXajxOfq5bdc2658HHi84NWFxxVLM9LfI6/9eAmNTXz0p+/VDZu
qC19lPg8NOq0T+q0z5q7vqvTPldHnfZJnfZJncnPNaJO+1x75rQFtaXFic/Z
j90/vlRZlPicsPHCoYXiosTnox0Ou6pSuzDxOWTE153KhYWJzz989s7BxfKC
xOf5Jw3doaZmQeJzXdRpn9Rpn69EnfY5Ouq0T+q0T+q0T+q0z9kLj9xcX780
8Xny9g9eWqldmvr8RaN5taWlic9fnHdx+3JhaeJz9M3TXyhV0v7b7k8fsW+x
nPbfbv/wgbsLxbT/Rp32eUrUmfiMOu2TOu2TOu2TOu1zSNRpn4eVt761UEz7
RY9NuPTL+vrlic9mK9+/sFK7PPF5x38dNbu2tDzxuVXr4e3KheWJz77dtnq2
VEn7b+sGX7JPsZz236jTPsdEnfa5R9Rpn9Rpn9Rpn9Rpn2ujTvu8s/2spsVy
2i/aunfrmwvFtF/0xwdGfFZfvzLxWffGNhdUalcmPi+ou2xGbWll4nPOrjOP
KxdWJj6L2dFPlipp/4067XObqNM++0Wd9kmd9kmd9kmd9nlK1Gmfn3418pFS
ZXXis1th+x8Wy6sTn3NPL11fKK5OfJ76x9l19fWrEp+vjjymS6V2VeLz8Hcf
fqe2tCrx+fjn27YuF1YlPqnTPrtHnfb5YdRpn9Rpn9Rpn9Rpn2OiTvvs8Eyv
Q8qFtF/02ry5w0uVtYnPI7Y6rnGxvDbxObblqP6F4trE515n/2B1fX3af7vr
+p6/rtSm/bdtx855s7aU9t+o0z4nRZ32eWTUaZ/UaZ/UaZ/UaZ/bRJ32+USP
thNqS2m/aO/bRx9YLqT9ortrd7y/VKlLfG63pPd2xXJd4nPADh9dXSjWJT7X
H3788vr6tP/W47ePdq7Upv036rTPfaJO+yxHnfZJnfZJnfZJnfbZPeq0z+12
3/mUSm3aL+L9Jftcf9nHhXIh7Rfx3lfSz5z4WKNieX3i87RVjXsXiuvTvscP
+yyqr0/7b9Rpn9Rpn9Rpn9Rpn/OiTvukTnt7M/oz9vxcFb5L9G18HObr8dU4
Hsyr9bWqfV+bPpLfW4P7vVC43wuF+73QnOu9ULjfC4X7vVC43wuF+71QuN8L
hfu9ULjfC4X7vVC4fdLvsk+4fcLtE26fOZdPuH3C7RNun3D7hNsn3D7h9gm3
T7jfq4Tb89DoI9kz3J7h9gy355zLM9ye4fYMt2e4PcPtGW7PcHuG2zPcnuH2
TL/LnuH2DLdnuD3nXJ7h9gy3Z7g9w+0Zbs9we4bbM9ye4fYMt+cm0UeyZ7g9
w+0Zbs85l2e4PcPtGW7PcHuG2zPcnuH2DLdnuD3D7Xlc9JHsGW7PcHuG23PO
5Rluz3B7htsz3J7h9gy3Z7g9w+0Zbs9we+4SfSTz//tn9YsT/4w3Z7zPC+PN
Ge/zxXhzxvs8Mt48H6/zm48XZ7zPO+PNGe/1wHhzxnudMN6c8V4/jDdnvNcV
480Z7/XGeHPGex0y3pzxXp+MN2e81y3jzRnvdTsr+open3CvQ7jXG9zrKuda
P3CvE7jXA9znHe7zC/d5hPt8wX1e4PYPt2e4PY+OvqI9w+0Zbs9we865PMPt
GW7PcHuG2zPcnuH2DLdnuD3D7Rluz32jr2jPcHuG2zPcnnMuz3B7htsz3J7h
9gy3Z7g9w+0Zbs9we4bb8ynRV7RnuD3D7RluzzmXZ7g9w+0Zbs9we4bbM9ye
4fYMt2e4PcPteY/oK9oz3J7h9gy355zLM9ye4fYMt2e4PcPtGW7PcHuG2zPc
nuH2XBd9RXuG2zPcnuH2nHN5htsz3J7h9gy3Z7g9w+0Zbs9we4bbM9yeX42+
n33C7RNunzmXT7h9wu0Tbp9w+4TbJ9w+4fYJt0+4fcJ/vdPY+3p02JANrivf
MvPld/N+XePP+u4x4Nz1Wb/O34xbUpyT89Lv/mdTZdt/f86qt6Zu/8X8nJ95
bqMhM361Ljv2/vO3/tvoJTlfdNp+/5rcYU3Wp/n0vqc/0NC37P/TaaOLn32S
taic3v/9jg19y2cW77uq3cVLs00vHDX9jvlrc/7Uu92ObXLPgmxNy1eHHziq
oT95zjFXLR+9eW7WfeKKpkN3buhPPj/94YuXtZmRdd9lfesTd2/oQzYZ+Oji
A/aelJ0+a9Og2a828DNendTp7y8Nyd4/b8Grh9U38KO3/rLVz67793Pgjisq
vXvNzvtsx98w5MhBrT7Ndt33xns/33d+zv+170V9F9+5Ltv5g9GntjhxSc43
//PGS6+/e032cLPpXb8+vqHf2PiRswrTT1iVDVz79uYlm1fm/Ianuo/6ouvC
bE3h6xv269nQP5y4T7suy2d9mB1/7h5fn7/y05yf1fLDe5/e+H72cJMZI8/Z
0tBXvPSEk5s/vuL17OUTlp921zMNfUJ/z9rvHw6Ofj/9roPWNV7zYo9Psymd
O156R+ePc9755qd2vf2dddmgZeM33TNxcc6vGbnslxvmrsnWn/Tb419cuizn
W1o2W1G4c1V2X5ste3z0+MqcnzT+gOGbx36U3TS4yS2jJ3ya86db1nXqOf+D
bPKtJz64cFFDH+/xc/Ya3/bJydmA4m4jXxjR0Jfr9pf7+rW57bHsoSnNN722
sYFf07HzTXMa1WVt957e6oQvFuX9pcrpOzZt0mxt9uPD/uvF/rcsy/l+P2/9
j9MWrMr2fLr1f9eeuTLnoxdefN9T42ZmB645afTc1xr6Xbsc2/yteb2nZFds
XvmbdkMa+lf+/QDwO5td1++T89ZmF3wzrl+n/ZflfZitl//4inYHrM6ajV14
0E1bVuR87etNe/+u1dTsyGf2+/3R/Rr6NkMvWtHmsw3PZXNnjpywcF0Dn3L1
/dd/02d1Vj/7p69kj61o6J8sHnTtObe8mE0oPXD41svTvsTZ6j+Qqz2q9A1K
6g80j/xqoT5Ac56f9bz/buTjeD3Xz4g8fU/P7xNj3FQ9p3eN4+6j5/HDo469
9dw9IOp+R8/XA6s8Rw+v/rz81//vuZhcvTlylee4nSJXr45chfeMXL01chV+
VuRqm8hV+OLI1d6Rq/BrIlf3i1yFPxu5ujFyNeeRq6sjV+FdIle7Ra7CX1au
wvdUrsI/UK7CW0euvhi5yvNX28jVH0WuwjdFrjaOXIVviVx9KHIVvnPk6g2R
q/CbIldXR67CX49cPS5yFX5e5OqIyFX4lcpV+MGD/zNX4S0jP1+P/OQ56MzI
z4GRn/BrIz/rIj/hX0d+3hP5CT8l8nNg5Cf8OeUn/JnIz/6Rn/CBys+8nsjP
YyI/eb5YEPm5a+QnvEXkZ7PIT/hY5Sd8t8jPyyM/4TuO+s/8hN8V+dk18pP7
8G0jP3eP/IQ7P+FjIj/nRH7mz0eRn1siP7n/XKj8hLO+t0z8br1z/+CfO8N9
PwbnOI3iONyn+TkCfsbE/7y+8vvPqO/xqJf9vdGc7+YzOeYH93sCcPaVy8MT
+2mr8DgzvML3DO9bxXnI9+U4T3fEeYP7PQQ45/v52D/ZN0uxPja3+W69wA+K
9TQ81hd8r1h/hViP8N1ivc6P9Qs/KdZ3/1jvcL8XAec6aR7XDfvvNXFd3R3X
GfzNuA4fi+sSfnNct23jOoZ/FF5GhCf4sLj+v4o8gP898mJA5Af8L5EvnSJv
4DMijw6IfIL7fQ84v+fnN3H/mP/8JXKwc+QifGTkZhY5Cm8bOTsuche+NnK5
f+Q0/JFYl0fEOoXfHPm+Y+R9/rmxH3wV+wP8h7F/fBn7CXzv2G+Ojf0H/nrs
T0fxHBC8j957gXMd3hTXJf3zjrEvbrrxu30S3iP20eGxr+Y89t1OsQ/D18Y+
PSb2bfhXsa8/Ffs8/I14H6hjvB8EPzDuD/rF/QL86rifWBD3F/Dj4/7jjLgf
gZfjfuWKuH+B3xj3NzvG/Q58ZNwPnR33R/ArIyd7R0520fvVh8bfc/9wZszn
tZhf3s+P3BsWucf+e06cp1/FeYOTh29EHsJbxzobEesOTh52iTxkfyQP34s8
hPM89ee4nuB7R07WRE7Cfx85OSRyEv7XuP7nRB7AyckhkZPsj+TkF5GT8JaR
kw9ETsKXRK4Ni5yD7xP5uW/kJ3yPyM95kZ/wUyI/+0V+wp+I4y6Mz4GTn18N
/i4/2X/Jz9siP+FTIj8fifyE3xL5eUzkJ3xe+How/MHvj/zcGPkJ/yzys1/k
Z94XjfzsGPkJnxn52SLyMz9+nO+Fcf7h5OdOkZ/cP7wS+VmM/ISTn0dHfsKz
yM/nIj/h6yI/+0Z+wkfFOj481jV8UOTnDyI/8/GRnxsjP+E/ivz8IvIT3jzy
s03kJ3xK5GeryM+8H6j8hJOT/4ic5H7mwsjJoZGTOY+c7BA5CV8XOflo5CR8
c+Tkk5GT8MnKSfhBkZN9Iyfhf4icrEROwrPIyU6Rk/ChkZOXR07Cb4mc3CFy
Ev545OSvIifh5OHZkYfwgcrPvL+n91S5z/R7qnC/pwr3e6pwv6cK93uq1b6H
C/d9INz3XXDfn8D9Pmq1+XJ/6/nCPV+45wv3fOGeF9zzgntecM8L7ueLat8j
Hlrle69wzxfu+cI9X7jnBfe84J5X/rygeVWrk/tw1wl3nb2qfN8T7nrgrqfa
53Kf7M9tUuX7j3Afv9pxxlX5fh/c7zPn/SjlADz5vmRwrxO4/cPtAe764X5f
He58gPs6gnu9wX1+4fYPt89q3rjPtLe8LydvcHuD2xvc3uD2A7cfuP3A7Qdu
P3D7qeaB+2R7gCffZwxuD3lfTh7gni88+b5n8OT7icE9X7jnW21e3Id7XvDk
e4XBPS+464e7fnjyfcDgrr9andyHu0646zylyve/4K4Hnnyfrsrncp/sz92j
yveh4D5+tePUVfm+D9z5yX7qvPq+vpmPw/7lPIH7+HmfTcf/vr6ZP5d9yp8L
9/ULdz1w1wN3Pd/XN3Od7HeuE+464b4e4V7ncM8L7nnBPS+45/V9fTPPl/3a
84V7vnDPF+755n0wXV/w5PdpBLcHuD3A7QFuD3Bfv9XuW+j/JL83I7j9wO0H
bj95P0p+4M4NuL3Bk9+bEdze4PYGtze4vcGdY+6bHae+meuHezz7nf3DfRy4
PeQ/L9Px2Y98fPfNblPfzJ+b99/0uXD7h7se9iPXk/fHVA/c6w3uOuHJ71sI
7jrhXidw189+5/rhrh/u+uG+XuCeF9zzgie/9yC45wX3+od7vuzXni/c84Un
v8cguOeb99+UD3B7gNsD3B7yPpt/X0Fwe4A7B6rdt1Tr/8DtB24/8OT3EgS3
H7jzM/95pbzB7Q1ub3B7gye/lyC4vcGdn9U4faT/BQUXWxU=
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[2], EdgeForm[
      None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
1bbHZs69yicnKU8l3hMXM+aixLnlxMz1pvJPhcy1s/LYCZlrOu2nb6Tu7Sj/
VMxcqyp3nZK5vpb2eD11f2MMfiy2PV+z52R5LYZflLovpNx4cub6XXlMz+3J
xGv5DOWCxDVjucw5XOu6aubaSvptRuq+1ga4c2ado7VQH1uYuG9QFL4zscae
nbrPJh34Suo+mPTtnNQ9NOnbmXCVfI3Uy1wHKc9UyVxzaU2dnrnW0DqtnLmG
Uu+ivNZ/Yv05j/uck1iXzk3di1OvIGTeE9VjOZhaM+zFDmG79fyD65K1et/g
NbdRzyS4DtikZx5cG63RMwlei18m1vjLUuv894J13IZ8fmpu/oD9ns+VX7Df
8v/tSazZp6fW7W8H10Dr8mf7SvT+tzi4PlutuRRcX66C5wfXcOozzAuu1dRP
+ChYV27Vs4KHwl/Am7nnFmwZXJ97lyafjE79uTR/f8KWBtdeW/Jno2cUNA+1
t6XuIS8KrndXwnOD60LpmSXBNdlmeEFw7atex8LgOv5T+LXgOn5Fnq9mRNfz
6n9OS617h8CbNL9z1t76Xf7s9uefc1/+HNfnn/FA/jmP5mN2JO4JH05dH+3J
X6PfQr3031PXBUfy+Po8ryi/FE/cU/o7tV5S3/hPuFPi/tjR1PXX/vx33ZG/
7mD+2p/za31m7e+XZ+5vqB6dlLomVc95Vs7Lg2uCr+FPgvX7N/DO/Lt9i5WW
niZeLLHOUB9cPfCPg2vibYn7/1pHJ8DLguvmr/J77M7vo776AuIVEufYl6J7
EH8k7muUzJ/l3vz9NU/uyjwnVwTXSdsT73e1M9f7B/Pvq++tOmth6h6peshb
UtcO6gFW4/rRxD3DszLrMfVwLs6sDdRjPDOztlR/9Rtee23invOm1HWf+rrb
U9df6i2vhS9P3DfemOd29Y2/TF2nq89Ti+tnE/dpv05d+6gfdUlmfaL+zAWZ
NYB6WZdm1kjqUzXOrMHUU2oIv5yv2ampn5V67CtS1z4613grdZ9BmqGO9oP8
d5+Y+rxGvZGmeVy9lGaZtYR6X9dk1n76HVQD6vdSf35z6lpMuV3rVfNffa0G
mXWm+leNMuu0Hfn+olyqPtL5mTWS+j/NM+sQ9Uwm5vNEPZZumTWD+vbrUvcl
VI8/n/pcQ32VyanPmNSfuTPzWlYfpmvmtawe3Q2ZNa16R60zazn1mtpm1njq
ibXLrFHVN5NWkQ5Rr+/GzPpWtf8Lqc9f1Ketnu9NqoUnpD4XU09gSuozFNXv
vTPnbZ0prEndq1Hd/UzqMyz1wVpm1lc64/g0dZ2rerlX5nyu84vPU/dhVJt3
z5zfVHc/l/rMS3X3+NTnXKq7n019Xqa6vmfm/Kw+VY/M+Vk9kxdTr1P15Vpk
1ns6z5qfuq+i86krM/dhtI8szdeO6qZimfu3qpuKZ+7rqiepefV84jqoROae
sPqEpTLXpDoH+TZ1X0JnHDtS9zFUC2+Db0hcz+6BuyY++9iZuu+h86YPUvdG
VIvpnvcn7uNoH1H+VF1cU7kjcW2+Mdd16pNsSH1uojqiev45VRuWzNxbVt1x
XuaesHpNF2Y+p9D+onmvOa9+1EWZzyzU56mR+cxCmvzqzP1S1fhbU5+hqF4+
LvNZhvpd3+e5Wmdky3OtpbO8D+FzE5+V1M3cB1Ov7KXUZ44661mSuq+ls7ZP
Uvc31Kd6OfU5nc5V30zdP1Q/+YrMvYL/AxKSxx8=
          "]], 
         Polygon3DBox[CompressedData["
1:eJwtmnfgltMbxp/nnNOe2ggZldGgklVpIhUNktWWVJSRqEgoKbuMyN5klpGy
d2REyiZURvZM+F2f33X+eH3fz/d5X9/e55z7uq77Pu/2w8f3PykURTFY/0n6
+Yh+DtaT5mVRtBE3jkUxR3ymeLa4pni6eJx4qngb8UXiyeI54sV6/7HiZuI9
xB+KTxT3Eg8SPyYeKt5F3E5cX++/QHyq+DxxQ/GF4oniGeKlev0wcUvx3uJ6
uj5TfIr4XPF24kvEU8UXixuIZ4lPE58vflfvHyvuLu4n3lbXLxZPEV8kriE+
RzxWPEX8pV4/XjxAPExcS9fPFZ8oPkv8oq6PErcXdxXfLK5XQf8G/dxGvEo/
x+l6D13vL14hHiPuJD5Y/IL4OPGe4i7iReJjxE3Fu4ufF//OvdGjs/gj8Um6
3lt8pPhb8QTxUeLR4mr6900TjxFPFr+k68eL9xJ3Ez8pHiFuLd5X/Jp4tLiD
+CBxbb3/PPFJ4rPFW4jPF48XTxM/pdePFO8u3k/8qHiIeGdxW/Hr4hPEHcU9
xXX1/hnik8XTxY3Es8Wni2eKl+n1w8WtxPuID9P1O8T3i58TP6frD4t3yvfj
AfHR4h3ELcRfi18T9xQfke/Hiry/uD9rxS+Ku4r7ir8Rvy4+OO+/L8Qvibvl
/bBBvFx8kHhgXv+X835h/daJXxEfID5MvF78qvhA8eHiz8TPizuLDxHfJl6j
55v1vI4ea8RP6fo++t0B4g/Ez4j3y/e/ij7/h3k9TxBXEn8gPjKvbwXx++JB
4uPzen8kPlo8VvyT/n9vig8RHyveKH5D3Ed8TK6/Z/N6sz6fi18QdxEfKv5E
/Jx4f3Ef8fvip8X7ig8Ud9Pfu0l8g/ghcQfx9eKrxfeIO4pvEF8jvlfcVjxf
fKn4ZnE78bXiy8S3iFuLrxHPEV8vvkV/727xJvaeHnPFF+mxlrXT4wo9v1yP
Day9HiP0/rv0+mV6/9viBbr2tp5X0qOKeICu367r94mfFbcXLxBfIb5NvKf4
OvHl4lvFrcRXi2eLF4hbiK8UzxJfK+4hvkV8k3iRuLv4ZvGN4ofFncQ3iueL
F4r7iG8T3yleKo7iNeIjxKPEvcW3iu8QPyFuLp4nPl98pXgn8eXi6eIrxE3F
V4jPFc8VNxPPFZ8nniduKb5KfKH4OvEfuh8rxf3EQ8W/cX/EfcVDxL+I3xIf
Kh4svlbcW1xR3EB8Xb6flfVoKL5LPFDXtxY3Fc8X9xIncX3xNeKDxUFcT3yV
+CDxv3n/v6d/3/LS61tbj3m6fmByfbDeV4t7Yjx6TV39uFd8hHhb8c7iheJB
4u3Eu4jvFB8u3kq8k/h+8VHi7cW7iW8U9xXXFm8tvkncT1xH3DjvN+qzgR5N
8v7po+tVxY3ETfTvvVR8lvgS8fW6foi4unjLXN/9xQ3F24vvEx8pbiLeVXyH
+DDxluIdxbeLB4gbiXcQ3yA+VFxTvBX1pr9XUf5xqX6/LvsD+t8s++8z4of0
+h3FrbOfLcv+0TX7x33Jn4d/zxPiB8Tb5Pv3n/g98eHikdxm/b3V4oHi48R/
6/q72e+Gi1eLnxTvLe4h/kv8jrh/9sN/xKvEh4lHiJeI7xc3FjcXPyReKK6f
7y/+/WBeT9bvHvE9yfuL+71c/Ki4RWl/f1X8iHg38V7iV8SLxbuK24tXip8Q
t83+iF8uyv5J3nhHvDTZP/HXt8VLxG3E++f9dW9eb9ZzR92Py8TniC8Xv6nr
j4v3EHfKfvlYcv7Ar47R6+8UPyJenvcz+xvNIkdtRrv1mpf1/NS8d9nDrPXn
pfcue5ja+aj03mUPsze/KO11D+Qs8WXpvcUeYy+vLb02rBFeVDnXCp+Jz/JZ
6exFBmOvbSidtchc1O63pbMGe4a9sr501iPzsVe/Lp21WDPW6ofSXo1ns7d/
LO39ZABq75vSXrA8WvvxBLTwdfF9hTWRPPCxfjdcz08p7A0vRXsBHoGWPROt
fWga2vtctJahwWjjs2hcYY3Ea16L1lo8By1/JVrb0XS0+k3x4sKajXetiNZq
PAxtflu8rLBGo+VvRGs7mo42vxWt3Wg03vEqnlLYQ9BCNBGt/Lh0rVPzaN+H
4u/1/BT97pjsz2Q1MgrZpLF+/qjHydm/xxTOmmQOskb9nPXIfGTFmsHZGQ/H
u2vkLEYmIwv9XDrrkfnI0n+VzpZoCNrxR+lsRkYj+/1XOruSYcluf5bOxmgK
WlIxOBuy59nr/5bOsmRasmSl4CxJpkRrfyqtjWhkVWqvtLahcdXQqtJegCfo
Fhavl9ZCNBGt/6C0F8zLtfNaaS/AE7CEFaW9BY+RRBZviC/mvfr5LfWhxzT0
SvxdYf3Em/CoitRyaS/AE6qLV5X2AjyhBt5UWvvxALLDytLajsbjXe+X9kY8
spL4rdJe+3x0VsBzyfZkfLIxH4Ks83J0tiDzkC1eiM46s/N6XBW9vmRm7veV
0etLRmO9r43eL73y//9qca/CPQTrdU30fiGjnsH9jK6t4Xk/zBN3L9wDsB+u
iF5fPGOi+BbxePGQvB/mRq8vPc0kPr/4ZPGwvP7zxQMK9zTsz+vERxXuSU4X
3yqeIB4qPpN6EJ8qHlG6t1sc3YvR49FbPETPVbjHoFd4OLqXo2egF3kwuveg
J5kqvlt8uniU+CzxPeJJ4uPFk9FT8WnikaV70SXRvR09Kb3ioujekp6R3vCR
6N6SHpFe8Ino3pGekN7z0ehehR6U3vfx6N72/z0wekrPWrinoX4XRHsnHnqa
+GbxSeLB4lPZb+ITxceW9qp10b0NnoXXfCvuWNhz8LaN0V6Fx9ELfRXt/fRE
eNl30d6Ep5ENvhS3KpwR8Kpvor0Uz8JLN0R7J55KNl4Z3WuRkfHer6O9Fg+m
F3tH/HzhngzvXS/es7AH433vil8r7IF4+xfRWQOPx9s/js6OeDzZ/qPo7EcG
pFdfGp2t6Nnx3iejsy4ejF5eH90L0ROhpTeKxxXWVLTzhmhtRUPx+u+jswCe
Txb5XNyscCYhC62NziZkInqHVeKVhXsIsvZT0dmazE02+CQ6m5ARyFafRWcZ
MhbZ5lPxdoUzDr3Mi/RAhXuaKfiDeKL4OPHq6PkAuoVetRGv02um5bzB/q+b
67dt8H6tl+unXXBvXy1/3hbBs4oa+X60DL6fzEDo3TsFzypq5f3XOnj/MsNh
trFfcD3Wz/Wyp7gy79XvRpeuKeqHmQ6znQ7B9dIgf572wfu/Ua6/vYPrpWGu
z73Q3egapTb5HbOimnn/twqu79pZf3bP2YyMRu8ccvYig9GLljl74Uf0yv/k
+iAD0rvGnPXIfPT6KVhftsh6tEfOeuQj9uenef3IqNTTV3l9yUPU47q8f8mo
7JdP8v4hU1MfG/N+Jx9RX9/n/UYGpr6+E/8ZrIloIZ/x92DNRWtZk1+DNQJt
4J6w/3bK+tQtuB52zHrYNbj3a5r1s3twHmqe9emA4PzULOtZj+C80j7nqcOC
81SLrF8HB+evtrne+gX7U6usf72D8xQ9Mr3lgOD93TrXa5/sb+1yvfQP9sOW
WW97BeevHjmPDQ/OW31yXjshOF/1znlxNL4fXTPUCnuSoICmo+XUQIr2ALSf
Pbgp2KPwJtZ4c7AH4n141r/BHjQi5030nZkfs7uOwb1dk+wv+wfnv+7Zr4cF
58VuOZ8ODc63HXIePTI4f3bM/n9UcN7tlP396GA9padhdrK59L1en6xt3HP0
mB6HWdDfWd+ZeaH3v5aeb1SoYG1Go4eLk3hh6XnGKHEl8YPil8QfiutWsJah
aT2S+8kHxC8W/iw/JGdtPtMQcanrd4uf4jOLo/he8TPiCeItxE+I3+IeiIP4
HvHTrKG4qniR+FU8WFxZ/FDpnme0uIr4YfEr4pPFdcRLS89r2NufJ3s9e3wX
8VrxJLxX3EW8UXyx+CZqQPy9+JLS86R9xV+LZ4rnU+Pir8Rn4yVokniDeAba
LN5B/Jl4Qul55H7ib8QXlJ7vsLbfJvcarPFu4i/EZ5Sed3cWfye+SHyjeCvx
J+ITSs9bqa0vk7MBNYbWfpo8j0Vzx4ir6fMvLt0vjscLxUvEb4pPEtcSPy5+
o3BvTx5nNlkh2D+ZWeA/q0vPt/5K7mXoaQaJ/+Y1eL94oHgTGQRvp0bFf+Kp
ped3PwdnErIIHoLfM4Ol/5kQnCeYOZAvfsl5gb/J3xofnF/oufHb33IeoCem
X5oU7K8jcr44W3yUnv+j391GdincG9Mj30r2oWbE/4pvLz0PGxyL/4f9u8RP
Fv5//5fci/E3xoqrV3D2IIOcKK4pfky8QjxOXEP8qPh1cV/x73r/dWh5Ye35
NblXRYN6iX8RX1V6ntlP/Id4AVovPlT8m/hatF58oPhH8Vw+u7in+CfxPLIF
Giv+WXwl2adwfmKGwSxlU2n9WabXXFp4xoS+P531lhkf/n5f9l/OJNi77GH2
dufgWqamWcshwZ+Fz8S9Oz74s/CZuNejgmuNmiNrdAmuJWqKz8aZD7VHDVIr
BwbvZfY0tdEzuBaoCWrtoOBZODPxEeIGwbNwZuIjxQ2DZ+nM1JktNQqeNTNz
Zta4RfDsmxk4s/tqwbNmZs7M3qsGz+6Z4TOrrBM8q2dmP1RcN3iWz0yfWfhW
wWcBnAkwW90yeHZPPz1MXC/4bID+m1n61sG1Ts2z1oOCtRmNRlv6BmsDGsHa
HRGsNWgOazswuLapcbRh32AtQBPQrn2CZx3kObSmTfDeZQ9T+6cH73X2PNo5
MXjeckl0v01e/yvXG1rPwRz99mXR/SVnOMxjLo3u5zlD4SyAfIgW7RZ81sCZ
A2cTVYJriZqiFs4I9hI8BW2fGqy1aC61cWywlqKpaN0hwVmVzIoWHxqshWgi
tXBMcG1QI9TqmODaoYbwinHB3oLHoHVTgr0ET0HrJgd7EZ5E7Z4Z7H3oB15x
VrB2oWF404nBZxnMQzjLqR5ce9Qg2jcyeN42I3pexcwYbUAjPhJfEKy1aO7H
4lnB3omHcr5wWfA87fzo+Rf9DPOe86L7CWbgaAsa86F4ZvB8YWr0/I6ZM/OF
s6Lnd8ycmZddFD2f4cwMb8VjPxXPDp7PXRzdX3Emyjzwguj5DjNt5iuTo+eH
zKCZV5wZPe+jP2FeOEvcsvAZGfO9C6NnofSXeA2e84n4wuB54szo+Q0za+Z/
c6LnQZz5Mj+cHT0/YgbNPGdK9PyRmTXeTwZYIz4vWIvR5A/EM4K9Ds97X3x+
cBYgE6xG34LnZdOj54fMyJmHnhs9n2SmT5YgU7wnnh6cdcg8q8TnBPcq94rP
KNyzcPbGGRxnX7WDz7I40+Lsq1awVqPZeOGI4PnOtOj5KDN8tBrNxouOC55P
nRM9D2Vm/0H0jJ7Z0vrC86VJ0fM/zkA437gSnSx8ZkXWIfN8pudzgudZE6Pn
g5xxMM86PXr+y5nJGj0/O7o3/KrwXjxFj42F9yTzsVOj51GcmTBPOy16fsYZ
C1mHzIMXHR7sdXge2W5s8PzqjOh+nDMe9Kl2clYenu/3vslZkgxHduTzvlA4
Q3L/90nOkmRO1nO/5Kz3cN4PHZKzHpkQfdguuR8mM1H/7ZP1gIyJ/uyVXM8L
cz3tn+zleDb7qVOyXuLx7KeOyXpJhkIf9k7WRzIy2YKMwd8/Lev7tsn+Raaj
9+aMvmbhHhx93ybZz8iA+Me/0f7DmTL+sSk6fzFfw+/+jp5/cQaM/vwa3Y8y
r8O/fo7O85yZ4m+/ROd/znjxx83R83rOjDl7i8n7lTM4zuZSsj9yRoe//Rft
j5xZ418MQ9E75oGc7ZZ4SOEzXvS/VvIsmXkI/vtPtP5zpo1/NU7295lZDzsn
+wGZCf07IFlv6SHYv92T/YHMTrZslVw/ZEyyZUs9HimcMclyrZP1l0yHv+2R
nD/IdPjBrsn+siD7W4vk/EKGRd93S84jZFT866fovMSZOfOPhTFn6dLzjQei
5x18J4P5wv3R/R3fSSE//xB99sO8k/OSH6PnoXvn/bJ7cr2TSfHnNsn5iYxJ
/eyS7G9kRvJV8+S8QGbEr9ol+x09FH62Z3K90SPhL12S/ezxrL9dk/1uSdb/
bsl+SI+FP7dNPo8g83J2WyE5//TL+tQ0OX+QKfHbnZPPV8ik+HeTZL+mZyLf
bZ/s1/RM5MUdkvMNPSB6uKMedxTOsPjnTsn6QYYlPzZLzj9kYvT0N92/3oW/
I8B3DUKyvvKdA/JQneT8wfqQ9/6InufwHQPOHqsk50XOIMkXjZLzLz0bZ+PV
kvMiZ+Tkz4bJ+YqeirPKqsn5cmDef/Q46NHJwfm4bvI8mR4PPdxaj6sL94Dk
33rJeYyekzyzZXKeZgZHfttCjzML93Tkwa2S8zI9O/m3QXK+oyckL9fXY1bh
npX6oAdDP08JPhutnDwP5oyUs9VKyXmU+TDf7aiRnF/5jgff/aiZnE+Zd5J3
/4qeZ/EdFb77UT053w7Kfvd79HyM75xwNlsxOR9zRkt+/jN6PsZ3YDgvulzc
ofB3eP4H6Dm1XQ==
          "]], Polygon3DBox[CompressedData["
1:eJwt13fcVXMcB/D7PPeWSmVmVRramUmLFi0ZJQ2kISmjvaOB7E2UkCKpSIW0
0KJFS2lqp6yULTS8v69z//i8ft/v+/zufe5zzzm/87ulOvVs0SM3lUqtljwy
WfNgOpXalpNKZeQMNps9xX7UnyNl2RQ2gm3X55Uz2Rz2NPtJX1TKsav1ZTOp
1B2OTWCzWQ1WjLVmL7JJbLr6Ub5Xf6oUZ03055l3u2NvsI9YY1aGdWZvslms
JivKWrGR7G3WmW2QYWwa+4zNVz/HftWXkvPZDPYY+1Z/upzL2um/loGOTWKf
sJb6ddKTjWMfsir6c/zd5uwZNp6VZqez+mw4e461YuulFxvPZrIF6ufZb/rS
cgGrqD/Da5s49gh7mVVmZ7Kr4/thY+JcqUfzlPFidoVylXoUO66/SC5n0+J9
2B79yVKMVdIX8X6NHXuYjWbvRc136wvHuWOfxP/EDulLSCX2KXuW/aIvKZXZ
VPYQ26UvGNcHW8leYsf0F0otNos9yX7Qny1l2EfsCfa9/iw5jw3w2Q7zvyWv
urTxBnMqq7ur3zVvgXnnsFNZLTaIPc6uZ1/JXWwMe4/dZ04uy5ET1eVjvvGI
8T/Jpy5jvNeYiu9PXUBdzlhXv1Laxmf3fq+bUlv/hdzMHmevsSHmZ1haCqor
ONbX+JvxV0mrSxj7Gf8w/i4ZdUljA69ZJR3j2vR+E7zfUMfysjxSSF3RsYHG
f43/yAnq84zXOb5W7lS/7LVTvbahfrXcFtcXe4sNNv+Y/qjkV5c1FjXnFHXN
eG/zHjOvv/4v/Z+SR13K2Mi8NdJJ/YJ5E82ro/9Sbonzx8ayU/Une00V1ovd
zy5mZ7HrY/3Ifn+XsLNZs1gr2Dh2DSvPurKJbC7bFPduOrkf4758xrFm+orm
3aOewj517EpWmnVgY9kM1pxVYt3YO2w+a8rKsS7sLTaHzYxzyL+L9SvuQ3Z5
/E3zbor7iU1hpdhprB4bxp5lBdlJrDK7iw1mw/T5+AlSWF0pN7kmK6jvVk/O
riX1WEnWjr3KprH6rBRrz15j09kk9QP8G32uFEkl12QJ82517JXsNV6drZCW
cS+yUayWvrh5beJeZJNTyfX9djo5/xszybW+LNZg9o85FeUy0/bFvRFrkbEl
65Q9l0vkOjY0+x38GA8O71PUeDPrqv1efSzOsbENu4P9oD4ea6XxJtaFfRfX
Y1wfxtasM7tI/7lcy4bEOWd71f/GmmpswTqyLXEPxf1svJq1ZhfqP5Nr2H3s
abZV/Ufck8amrA3bE/dQnM9YV1gHVlL/sdRhPdhwtlC9j/2hryJ12H52JNZj
Yyt2e1yncY+z/MbGrCVbrz4U96/xKtacVdUvlRvinLKRbJ36IMsYr2TN2Br1
AZZrrMeuY1+pf471xVifXc82q39jBYxNWCu2Qv0DOxJrrjRiF+gXS9NY49hT
bKP6F5Yv7m92I1us3s/+1F8qdVPJtfEd+1dfQxqwL9iP7Gg8Y6QxW86+Z//p
a0pDVkI/T2o71p0NYzvUf8U6EfcFu5XtjPUm7qVYz1hbNle9h/0czxipxuax
vexgPLelena/sZsdiOdT9to9Qz9TLnPsDtafFdF/KFVZZ9aPnan/SKqxLmwA
e1+9i+2P51M8R7P7nO1sRzw/s3uahrGfiT2Ceng8E2OdkR1sZ+xdpHz2ex4T
64Gxevb7+0C9k+2L5108H9mGWL9ZXmM1dhU7Sz9LqrOubCA7Wz9barA72aBY
G/UfyKXsdtaXnaufK1ewbmwoO0k/TS5k7VkPtkj9Lftdf4nUZrvZ4Xi2Gpuz
9myX+u94XsQazNqxk/XT5SLWgfXMPgPel0vYbaw3K6x/Ty5g7Vh3Vlw/Ry5n
97Ah7BT9DLmYdWS9WAH9u+lkHf3Gd55fPUG9zbgp1sPYm5hXSD9VznfsVtaN
rVX/xHKMddm12XX8E6nLemafUbFev5NOnrFbM8naXUY+lStZH/NGmHd3rA+O
P8w+Y1vYWPVgvk6fXwqwO+N7N2+EY4vYJnZLfCesP/uQLWc3x//K+rEP2DLW
Os4P68NmsCXs9bhv+Xr9iRE2PtZHtkF/khRiY9gAtlqfI3nZuFgL4zqNOVKQ
vcIGsjX6tJzAXmWD2Fp9HsnH3oh1nm3UnyKF2U1xvn2+vo69z5ayNnFuWW82
nX3Ousa5ZQ+yhWwj6xD3JLuXzWGrWMe4/9h9bG5O8htkono436I/pj9NlrKR
7DCrIFXZ2+x+tlWfktMNt8X94v2GODaPrWGd4n5hQ9nHbC1rH2sBG8xms5Ws
RVw/LH4MTWULWVtWhQ1gM9mKVPLb4FI2iM1iX6aStaAmu5/Nz0nWhS6sFnuA
LWAb2Mvq/nyV/ngq+b21hL3A/o41I9Ze1l1f32sfc2wp28buieuWPcI+Z1vZ
NvUrvJCxNmvKtqtfZYWNddg17DL9MmnBHmQvppI98aR0ss/dlEn2x7FHnJhO
9sMbMsl+Mfa1k9PJvnlzJtnjHlCPNRYzXuv9bkkl+9Up6WTvuyWT7F3LyQJp
wPqZ93B2b/EaK2JsmH32lNXPl6tYX/YQK69fKA3jO2OPsAr6RdIornX2aCrZ
x7+VTvbDX2eSPX3skyekk98O6zPJnjn23ePTyT58bSbZg/eMv6l+Qr3c++3w
fqPjs/KV+qPJ9ibVK/4HxZOOreA72V3xbGMPscVsM+sRawZ7nC1j29mo+J/4
l/r/ki1Yqo85B+OZLrnqc429jb8YD0mOunhu8vthXDo5viaT/JaI172eTo6v
ziTvEXv2N9LJ74mvMsn+PX5DvZlO9vDrMsnvqWr65XKjeoTP85LP0k1fz/FH
2RL2Desd3zF7jj0fz0T2P5Nb7jM=
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {{}, {}, {}, 
     {GrayLevel[0.2], 
      Line3DBox[{251, 459, 1095, 252, 472, 278, 1197, 486, 292, 1202, 500, 
       306, 1209, 514, 320, 1219, 528, 334, 1231, 542, 1138, 348, 556, 1151, 
       362, 1247, 570, 376, 1251, 584, 390, 1257, 598, 404, 1265, 612, 418, 
       1275, 626, 432, 1287, 640, 446}], 
      Line3DBox[{253, 460, 1096, 254, 473, 1106, 279, 487, 1116, 293, 1203, 
       501, 307, 1210, 515, 321, 1220, 529, 335, 1232, 543, 1139, 349, 557, 
       1152, 363, 571, 1163, 377, 1252, 585, 391, 1258, 599, 405, 1266, 613, 
       419, 1276, 627, 433, 1288, 641, 447}], 
      Line3DBox[{255, 461, 1097, 256, 474, 1107, 280, 488, 1117, 294, 502, 
       308, 1211, 516, 322, 1221, 530, 336, 1233, 544, 1140, 350, 558, 1153, 
       364, 572, 1164, 378, 586, 1173, 392, 1259, 600, 406, 1267, 614, 420, 
       1277, 628, 434, 1289, 642, 448}], 
      Line3DBox[{257, 462, 1098, 258, 475, 1108, 281, 489, 1118, 295, 503, 
       1125, 309, 1212, 517, 323, 1222, 531, 337, 1234, 545, 1141, 351, 559, 
       1154, 365, 573, 1165, 379, 587, 1174, 393, 601, 1181, 407, 1268, 615, 
       421, 1278, 629, 435, 1290, 643, 449}], 
      Line3DBox[{259, 463, 1099, 260, 476, 1109, 282, 490, 1119, 296, 504, 
       1126, 310, 518, 1131, 324, 1223, 532, 338, 1235, 546, 1142, 352, 560, 
       1155, 366, 574, 1166, 380, 588, 1175, 394, 602, 1182, 408, 616, 1187, 
       422, 1279, 630, 436, 1291, 644, 450}], 
      Line3DBox[{261, 464, 1100, 262, 477, 1110, 283, 491, 1120, 297, 505, 
       1127, 311, 519, 1132, 325, 533, 1135, 339, 1236, 547, 1143, 353, 561, 
       1156, 367, 575, 1167, 381, 589, 1176, 395, 603, 1183, 409, 617, 1188, 
       423, 631, 1191, 437, 1292, 645, 451}], 
      Line3DBox[{8, 667, 23, 681, 38, 696, 53, 711, 68, 726, 83, 741, 98, 763,
        764, 113, 786, 128, 801, 143, 816, 158, 831, 173, 846, 188, 861, 203, 
       875, 218}], 
      Line3DBox[{263, 465, 264, 1194, 478, 284, 1198, 492, 298, 1204, 506, 
       312, 1213, 520, 326, 1224, 534, 340, 1237, 548, 1144, 354, 1245, 562, 
       368, 1248, 576, 382, 1253, 590, 396, 1260, 604, 410, 1269, 618, 424, 
       1280, 632, 438, 1293, 646, 452}], 
      Line3DBox[{265, 466, 1101, 266, 1195, 479, 285, 1199, 493, 299, 1205, 
       507, 313, 1214, 521, 327, 1225, 535, 341, 1238, 549, 1145, 355, 563, 
       1157, 369, 1249, 577, 383, 1254, 591, 397, 1261, 605, 411, 1270, 619, 
       425, 1281, 633, 439, 1294, 647, 453}], 
      Line3DBox[{267, 467, 1102, 268, 480, 1111, 286, 1200, 494, 300, 1206, 
       508, 314, 1215, 522, 328, 1226, 536, 342, 1239, 550, 1146, 356, 564, 
       1158, 370, 578, 1168, 384, 1255, 592, 398, 1262, 606, 412, 1271, 620, 
       426, 1282, 634, 440, 1295, 648, 454}], 
      Line3DBox[{269, 468, 1103, 270, 481, 1112, 287, 495, 1121, 301, 1207, 
       509, 315, 1216, 523, 329, 1227, 537, 343, 1240, 551, 1147, 357, 565, 
       1159, 371, 579, 1169, 385, 593, 1177, 399, 1263, 607, 413, 1272, 621, 
       427, 1283, 635, 441, 1296, 649, 455}], 
      Line3DBox[{271, 469, 1104, 272, 482, 1113, 288, 496, 1122, 302, 510, 
       1128, 316, 1217, 524, 330, 1228, 538, 344, 1241, 552, 1148, 358, 566, 
       1160, 372, 580, 1170, 386, 594, 1178, 400, 608, 1184, 414, 1273, 622, 
       428, 1284, 636, 442, 1297, 650, 456}], 
      Line3DBox[{273, 470, 1105, 274, 483, 1114, 289, 497, 1123, 303, 511, 
       1129, 317, 525, 1133, 331, 1229, 539, 345, 1242, 553, 1149, 359, 567, 
       1161, 373, 581, 1171, 387, 595, 1179, 401, 609, 1185, 415, 623, 1189, 
       429, 1285, 637, 443, 1298, 651, 457}], 
      Line3DBox[{275, 653, 1300, 654, 276, 484, 1115, 290, 498, 1124, 304, 
       512, 1130, 318, 526, 1134, 332, 540, 1136, 346, 1243, 554, 1150, 360, 
       568, 1162, 374, 582, 1172, 388, 596, 1180, 402, 610, 1186, 416, 624, 
       1190, 430, 638, 1192, 444, 1299, 656, 657, 658}], 
      Line3DBox[{445, 639, 655, 1286, 431, 625, 1274, 417, 611, 1264, 403, 
       597, 1256, 389, 583, 1250, 375, 569, 1246, 361, 555, 1244, 347, 1137, 
       541, 1230, 333, 527, 1218, 319, 513, 1208, 305, 499, 1201, 291, 485, 
       1196, 277, 471, 1193, 250, 458, 652, 659}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{661, 982, 458, 660, 1095, 883, 662, 1096, 884, 663, 1097, 
       885, 664, 1098, 886, 665, 1099, 887, 666, 1100, 888, 667, 465, 668, 
       1101, 889, 669, 1102, 890, 670, 1103, 891, 671, 1104, 892, 672, 1105, 
       893, 673, 1300, 983, 894, 984}], 
      Line3DBox[{675, 988, 1193, 674, 472, 676, 1106, 895, 677, 1107, 896, 
       678, 1108, 897, 679, 1109, 898, 680, 1110, 899, 681, 989, 1194, 682, 
       990, 1195, 683, 1111, 900, 684, 1112, 901, 685, 1113, 902, 686, 1114, 
       903, 687, 1115, 904, 688}], 
      Line3DBox[{690, 991, 1196, 689, 992, 1197, 691, 1116, 905, 692, 1117, 
       906, 693, 1118, 907, 694, 1119, 908, 695, 1120, 909, 696, 993, 1198, 
       697, 994, 1199, 698, 995, 1200, 699, 1121, 910, 700, 1122, 911, 701, 
       1123, 912, 702, 1124, 913, 703}], 
      Line3DBox[{705, 996, 1201, 704, 997, 1202, 706, 998, 1203, 707, 502, 
       708, 1125, 914, 709, 1126, 915, 710, 1127, 916, 711, 999, 1204, 712, 
       1000, 1205, 713, 1001, 1206, 714, 1002, 1207, 715, 1128, 917, 716, 
       1129, 918, 717, 1130, 919, 718}], 
      Line3DBox[{720, 1003, 1208, 719, 1004, 1209, 721, 1005, 1210, 722, 1006,
        1211, 723, 1007, 1212, 724, 1131, 920, 725, 1132, 921, 726, 1008, 
       1213, 727, 1009, 1214, 728, 1010, 1215, 729, 1011, 1216, 730, 1012, 
       1217, 731, 1133, 922, 732, 1134, 923, 733}], 
      Line3DBox[{735, 1013, 1218, 734, 1014, 1219, 736, 1015, 1220, 737, 1016,
        1221, 738, 1017, 1222, 739, 1018, 1223, 740, 1135, 924, 741, 1019, 
       1224, 742, 1020, 1225, 743, 1021, 1226, 744, 1022, 1227, 745, 1023, 
       1228, 746, 1024, 1229, 747, 1136, 925, 748}], 
      Line3DBox[{752, 1137, 926, 750, 1138, 927, 754, 1139, 928, 756, 1140, 
       929, 758, 1141, 930, 760, 1142, 931, 762, 1143, 932, 764, 1144, 933, 
       766, 1145, 934, 768, 1146, 935, 770, 1147, 936, 772, 1148, 937, 774, 
       1149, 938, 776, 1150, 939, 778}], 
      Line3DBox[{777, 1243, 1038, 775, 1242, 1037, 773, 1241, 1036, 771, 1240,
        1035, 769, 1239, 1034, 767, 1238, 1033, 765, 1237, 1032, 763, 1236, 
       1031, 761, 1235, 1030, 759, 1234, 1029, 757, 1233, 1028, 755, 1232, 
       1027, 753, 1231, 1026, 749, 1230, 1025, 751}], 
      Line3DBox[{780, 1039, 1244, 779, 1151, 940, 781, 1152, 941, 782, 1153, 
       942, 783, 1154, 943, 784, 1155, 944, 785, 1156, 945, 786, 1040, 1245, 
       787, 1157, 946, 788, 1158, 947, 789, 1159, 948, 790, 1160, 949, 791, 
       1161, 950, 792, 1162, 951, 793}], 
      Line3DBox[{795, 1041, 1246, 794, 1042, 1247, 796, 1163, 952, 797, 1164, 
       953, 798, 1165, 954, 799, 1166, 955, 800, 1167, 956, 801, 1043, 1248, 
       802, 1044, 1249, 803, 1168, 957, 804, 1169, 958, 805, 1170, 959, 806, 
       1171, 960, 807, 1172, 961, 808}], 
      Line3DBox[{810, 1045, 1250, 809, 1046, 1251, 811, 1047, 1252, 812, 1173,
        962, 813, 1174, 963, 814, 1175, 964, 815, 1176, 965, 816, 1048, 1253, 
       817, 1049, 1254, 818, 1050, 1255, 819, 1177, 966, 820, 1178, 967, 821, 
       1179, 968, 822, 1180, 969, 823}], 
      Line3DBox[{825, 1051, 1256, 824, 1052, 1257, 826, 1053, 1258, 827, 1054,
        1259, 828, 1181, 970, 829, 1182, 971, 830, 1183, 972, 831, 1055, 1260,
        832, 1056, 1261, 833, 1057, 1262, 834, 1058, 1263, 835, 1184, 973, 
       836, 1185, 974, 837, 1186, 975, 838}], 
      Line3DBox[{840, 1059, 1264, 839, 1060, 1265, 841, 1061, 1266, 842, 1062,
        1267, 843, 1063, 1268, 844, 1187, 976, 845, 1188, 977, 846, 1064, 
       1269, 847, 1065, 1270, 848, 1066, 1271, 849, 1067, 1272, 850, 1068, 
       1273, 851, 1189, 978, 852, 1190, 979, 853}], 
      Line3DBox[{855, 1069, 1274, 854, 1070, 1275, 856, 1071, 1276, 857, 1072,
        1277, 858, 1073, 1278, 859, 1074, 1279, 860, 1191, 980, 861, 1075, 
       1280, 862, 1076, 1281, 863, 1077, 1282, 864, 1078, 1283, 865, 1079, 
       1284, 866, 1080, 1285, 867, 1192, 981, 868}], 
      Line3DBox[{882, 987, 1299, 1094, 881, 1298, 1092, 880, 1297, 1091, 879, 
       1296, 1090, 878, 1295, 1089, 877, 1294, 1088, 876, 1293, 1087, 875, 
       1292, 1086, 874, 1291, 1085, 873, 1290, 1084, 872, 1289, 1083, 871, 
       1288, 1082, 870, 1287, 1081, 869, 1093, 1286, 985, 986}]}}},
   VertexNormals->CompressedData["
1:eJztnHlUVccdx28Al8SocamACopG5LhA3DC4MFaJRomxmmoVxQUXtCq4RUDi
VsGKB+PGsRQQkQSJa2oSRBTihgVZNAioyGIQEdlrMR4bUNscvvOu/dXx5VKI
eDL8w+HLY+7MZ+Z+Zt57v4eFi/uk+QaKorRvoiiG//me+PSnr0o26PKuLz40
X2ev1H5tmNcrZPPalEq2sHh/atTBWMbzT4suVgf3r2SLfVO27vRO0eXJd5/E
jxtYwZazeS0cu2fq8i6FfwmNzShjfeY89D4bn63mYwonOJuUshmzv3lnYdN8
XX7J6Qv3C0bF7PTI0cVhVQW6PHXo+gWhYXdZCr7znD8uEX/Hc2e0y6/Dcxv0
wxz94vlq9DsJ4+C5F8a5DePmuT+4zAUnnm8JHH3wJ46cK88lZ8lZcpacJWfJ
WXKWnCVnyVlylpwlZ8lZcpacJWfJWXJuPJwP+AcndK6qZKf3Z60fE3VEL/8S
PC4Cf/dLtS/KRe1rfbyo/xnRPs0SaiqZr19ZpM3JEF1ejp/57+v6eBEHre1r
7b/W+07UH9dMqwN+NyrZHyJcc0pMYniuDHU/FPepSyUrKTga4favRL158pVj
Be/uq2CLIx4XDA+4qje/df/whcU7ytnelZPzbq+9oTdfn39g29l3y1hc1RuO
vXrn6c1z3Dxy1geXsAvNDp1vn5CvP88OMAmKvcfc0lpkp39wR2/ujp/57/Xl
8bgev76+/CzGsw7j05fvB6888NOXr8B88PnRl1djvodg/vXlszODll8zjmHG
fVa23HZDzb2xzhZg3fFc6zrUuq40rxON8651HrXOi4iz5Cl5Sp6Sp+QpeUqe
kqfkKXlKnpKn5Cl5/pI8TfA8fxie90ueP4+n5FY3bvL+rRs36UPJU/KUPCVP
yVPylDwlT8lT8pQ8JU/JU75e1Ph5iriJ6m1EeX21o7V9Qf2n6PPdiqAuVBHU
hSqCulBFUBeqCOpCFUFdqCKoC1UEdaGKoC5UEdSFKoK6UEVQFyp51jNPQV2l
5Cw5S86Ss+T8inHWyl/rvGidL83zqHF+tc671vWgdZ1oXT9a15XW9aZ1HWpd
n1rXrfRG3eZR+llylpwlZ8lZcpacG46z5Fk3nqOCN56Z6VjJdmS7m/U5naTL
Q6Yfdls9rYKlRjp8+XBshi7vVPi5X1aTcjbTOGd02x9u6vJ9Zr/zS/59KWud
9ehB9Offq9e1SM6LdSxmg3pY7JvyV5Wb5bX0dXb377Jon+vtv/9Q5dbx2FEP
a9d8Nqzw0Pzgm+rr1ZusW/3pya4cVpY7OdE6XOXTs22NUVB1JuvbNbpNYEuV
z5PmHe8lD7nM3CwK9owyUcc71fzjoh87n2WW8ROqM75Vc99xTQzWRfuz8zPC
0/s9wyfd/3JF57UV7G99e/240z1dlw9f7z/Qd1A569B9Q0BVd5VDk6lprre3
l7KvSxaO7zZS5bDK0XThup3FrPi1w3MeD1c5rPrqWL9zI4rYrKTHoeXVhbrc
xdb37LVZuczmiemavm7qeL81/+30gqvX2PBpHR87F6qvz39wYa5R/KMrLM1p
kfWUGpWDPWtqHHnnHHPNtR2/40t1XIdWTnEyPBHCujSf6fPM56yVFLy+v5S8
f2Fk027AybnlbE/LMYmbJmap8+XZanfgpVJm/s2yuMVxt3S5eU/7iprMYpaf
6Ls1PP+2Ln/gUZZstb2IZR59L/tqpDrefnNqZjQ9eJ29Eeg2O/y0Oq4HI9oY
Bt/8jnm+6bbxep46rhhv61FBhy+wAoenbx0PVftvGudyao9fBCtxqj515pGa
n7Sxm1j4WhmzmLrKxfAH9X2W7b6mBX1NS5hX2Iiyj3zUfjpOcjGel1PEUh2y
eodMUvvpkzfMuTI6jXWfG9Ak5YzaHwOnYM/tyy+yibGd9tj5q9d1vuE3Z0X0
EWaqVGV0VP8/gLLX/NaEZtNL2KoAg8Qulup121xymudqdY/l+IR9PKVGfX/H
cUS/wSNtE1iH1AGFfTzVdmZ63nM4c/84W3Sx6EhWqZrbBSze1XPlPRZ+eGOH
1hFqO5ejnFp8tDmK5W52vvH49v96dTLx6nb4ZS7xagp8tIR4tSv8ZUW82hW+
cyJeTYIfY4hXr8CnScSrcXhcAvHqLLRrTrw6AP0wI15dg35fIl7dJPDqPoFX
FWXZoRd5dQvx6l54NUngVSfi1TB4tSXxqh+8OpB41QpejSJe7Szw6p/h1VLi
1d4Crxq9XuvVpcSrMwVe9Xjv6T97fO3Pnu5+0qb/M3wy4NUjxKv28Gob4tVm
8OpxgVeLiFdXw6vOxKsL4FVr4tXzAq9Ohle/I14dI/BqpcCrTeHPncSfneDP
jsSfXeDPW8SfD+HPdOJPW4E/H8GfHsSf5wT+HCLwZwz8aUb8uQP+9CT+HA9/
JhN/boE/uxF/vi7w5ycCf4bCnyuJP9vBn1nEn5ME/lwi8OdQ+DOM+DNb4E9+
bngL5wiezxC87yw6j/F2jMf+dzui5xFbxz7/3ML79xn6y/PPMJ7BGB/PRXUC
fwSXweDEc2NwHAiuuuuCe2vMA89XY56CMW88PyeoQ+DzbYL5180j1kfptNr1
wvO3sZ68sb54fgXrbxzWI8+9sV63Yf3yvCfW9wmsd56HC+oi+H1yM7b2vuH5
HdxXYbjPeO6F+7AE9yXP38R92wf3Mc95fUgsqQ+5jvv/PnzA89vwhRn8oeMD
v5jANzwPgY8M4SeerxLUe3Cv2cJzPF8ID/aAF3l+Fd60g0d5bg/PRsO7PO8H
L8+Ap3mei3V5ntTDzIHfV8D3PC/FfrAC+wPPT2D/MMJ+wnMz7DdDsf/wPBr7
01XsVzw3uFNb9zKU1L3wfa6tQ+2+x/Oe2BftsU/y3B37aDGer/DcBvtuF+zD
PK/APr0W+7aOJ/Z1Y+zzOm6oB1pK6oVicD54G+cFng/GeWIzzhc8b4vzx16c
R3g+H+cVU5xfeH4N55tgnHd4Honz0Eicj3i+RU892zhSz7YM48km9U558N5u
4r1hmKdCUq8VAR/aEh8mYJ1lC3xoKfBhX+LDVNw/i2g9GDzZinjSC54MIp78
O+7/TwSerLr+fE8WCDzpQTyZD68Fkvq0NPjzfeLPtfCnP/Fnb/gzivgzEu3m
CvwZJfBnIPHnGviziPizJfxpSfy5AbyiiT+z4M9/EH8Wwp+diD+t4E9j4s8w
+NOA+NNLjz9LVjzfn2bEn+nwZ3/iTwZ/fkX82R/+nEr8eQvr+Bzxpwv8uYz4
sxz+XE78eRL+NCT+tIA/hxB/noY/04g/m995ft0g96Qt8eQyeDKfePIdeLKz
wJNexJMMnvwN8WQePLKEePIUPNmNeNIOnvQlnmwHT4YQTy6CJ02IJ7PhySDi
yWMCT/J6xcmkXtFLcM7k3isl3uOv8yz5P+tU+b4c/zPrVBu6HrWm4Pn78ssa
b0OPS1S3/LLG29Djqq9+1ld/tF5Xa/uidrTW/zc2D7ysenWt/Bsbt8bG59fm
VenP+u3Pq+JPrb7S6uH68mF9+b+h/fyy9qmXte80tn25se2/jY3Pq35u0eqx
hvZVY/NSQ6836c+6jUv688UcRB4QfY5V+vPF3LR+XvjflsIeJA==
    "]],
  Axes->True,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->200,
  Method->{},
  PlotRange->{{0., 0.9999999999999937}, {0., 0.9999999999999937}, {0., 
   0.9999999285714286}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7714229181254587`*^9, 3.771422931530422*^9}, 
   3.77142497123886*^9, 3.771435418632884*^9}]
}, Open  ]],

Cell["Using the parametric notation, the curl could be cast as", "Text",
 CellChangeTimes->{{3.771423326860931*^9, 3.7714233393408337`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "3"}], " ", 
    SuperscriptBox["v", "2"]}], ",", "0", ",", "0"}], "}"}]], "Input",
 CellChangeTimes->{{3.771423353821785*^9, 3.771423354900419*^9}}],

Cell["\<\
This problem is very similar in appearance to Paul\[CloseCurlyQuote]s example \
1. The curve C is at some specific height of the cylinder, and I will assume \
for a start that z=v=1. Then considering C as a circle at that height,\
\>", "Text",
 CellChangeTimes->{{3.771423385435136*^9, 3.7714234218821383`*^9}, {
  3.771424771159504*^9, 3.7714248071408043`*^9}, {3.771425419642397*^9, 
  3.771425477823044*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"curvc", "[", "u_", "]"}], "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Cos", "[", "u", "]"}], ",", 
    RowBox[{"Sin", "[", "u", "]"}], ",", "1"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.771424812768601*^9, 3.771424851451692*^9}, {
   3.771424907610417*^9, 3.7714249167296267`*^9}, 3.7714249509047937`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Cos", "[", "u", "]"}], ",", 
   RowBox[{"Sin", "[", "u", "]"}], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{
  3.771424852767837*^9, {3.771424910952939*^9, 3.771424979797962*^9}}]
}, Open  ]],

Cell["If I do the grad of curvc by hand, I would get", "Text",
 CellChangeTimes->{{3.771425778548991*^9, 3.771425791804916*^9}, {
  3.771435778944646*^9, 3.7714357972784224`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"Sin", "[", "u", "]"}]}], ",", 
   RowBox[{"Cos", "[", "u", "]"}], ",", "0"}], "}"}]], "Input"],

Cell["\<\
However, the above is not what the text answer gets. I don\[CloseCurlyQuote]t \
have a good rationale, but I could speculate that because the z dimension is \
what creates C from S, then only the derivatives involving v are taken, and \
thus the gradient is just\
\>", "Text",
 CellChangeTimes->{{3.77143581347755*^9, 3.77143582386082*^9}, {
  3.7714358616031227`*^9, 3.771435939791174*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Cos", "[", "u", "]"}], ",", 
   RowBox[{"Sin", "[", "u", "]"}], ",", "0"}], "}"}]], "Input",
 CellChangeTimes->{{3.771435945297367*^9, 3.771435957502071*^9}}],

Cell["\<\
As on a previously used path, I could dot the curl and grad separately\
\>", "Text",
 CellChangeTimes->{{3.77142560516264*^9, 3.771425626378148*^9}, {
  3.7714360484108667`*^9, 3.7714360540172462`*^9}, {3.771436126414909*^9, 
  3.771436132333131*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "3"}], " ", 
     SuperscriptBox["v", "2"]}], ",", "0", ",", "0"}], "}"}], ".", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Cos", "[", "u", "]"}], ",", 
    RowBox[{"Sin", "[", "u", "]"}], ",", "0"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7714238360461082`*^9, 3.7714238535400877`*^9}, 
   3.771436019069872*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "3"}], " ", 
  SuperscriptBox["v", "2"], " ", 
  RowBox[{"Cos", "[", "u", "]"}]}]], "Output",
 CellChangeTimes->{3.771423855102559*^9, 3.7714249842011003`*^9, 
  3.771425658704774*^9, 3.7714258690515947`*^9, 3.771436020757105*^9}]
}, Open  ]],

Cell["And then do the integral.", "Text",
 CellChangeTimes->{{3.771425665993823*^9, 3.771425672392683*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "1"], 
  RowBox[{
   SubsuperscriptBox["\[Integral]", "0", 
    FractionBox["\[Pi]", "2"]], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "3"}], " ", 
      SuperscriptBox["v", "2"], " ", 
      RowBox[{"Cos", "[", "u", "]"}]}], ")"}], 
    RowBox[{"\[DifferentialD]", "u"}], 
    RowBox[{"\[DifferentialD]", "v"}]}]}]}]], "Input",
 CellChangeTimes->{{3.771425314658684*^9, 3.771425369538665*^9}, {
   3.771425875970745*^9, 3.771425883035737*^9}, {3.7714260402610273`*^9, 
   3.771426074827497*^9}, {3.7714261282986927`*^9, 3.77142616449044*^9}, {
   3.771426199519903*^9, 3.771426202288703*^9}, {3.771435465191181*^9, 
   3.7714354715027313`*^9}, 3.771436032789961*^9}],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{
  3.771425373272101*^9, 3.77142588420364*^9, 3.7714260342491503`*^9, 
   3.7714260769574137`*^9, {3.771426131376317*^9, 3.771426165357171*^9}, 
   3.7714262034813766`*^9, 3.771435473224472*^9, 3.771436034709298*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["The answer in yellow above agrees with the text answer. ", "Text",
 CellChangeTimes->{{3.7714355358286953`*^9, 3.771435549802719*^9}, {
  3.771436142476523*^9, 3.771436147292212*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"19.", " ", "F"}], "=", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     SuperscriptBox["\[ExponentialE]", "z"], ",", "0"}], "}"}]}], ",", " ", 
  RowBox[{
   RowBox[{
   "C", "  ", "the", " ", "boundary", " ", "curve", " ", "of", " ", "the", 
    " ", "portion", " ", "of", " ", "the", " ", "cone", " ", "z"}], "=", 
   SqrtBox[
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     SuperscriptBox["y", "2"]}]]}], ",", " ", 
  RowBox[{"x", "\[GreaterEqual]", "0"}], ",", " ", 
  RowBox[{"y", "\[GreaterEqual]", "0"}], ",", " ", 
  RowBox[{"0", "\[LessEqual]", "z", "\[LessEqual]", "1"}]}]], "Text",
 CellChangeTimes->{{3.769091147860154*^9, 3.769091175591354*^9}, {
   3.769091264028055*^9, 3.7690913196730957`*^9}, 3.769091354871107*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell["The vector field is", "Text",
 CellChangeTimes->{{3.771433451099177*^9, 3.77143345446516*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eF", "[", 
   RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], "=", 
  RowBox[{"{", 
   RowBox[{"z", ",", 
    SuperscriptBox["\[ExponentialE]", "z"], ",", "0"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.77143345729935*^9, 3.771433500446838*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"z", ",", 
   SuperscriptBox["\[ExponentialE]", "z"], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.7714352035288353`*^9, 3.77143696229902*^9, 
  3.771437109660612*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Curl", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"z", ",", 
     SuperscriptBox["\[ExponentialE]", "z"], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.771435216766878*^9, 3.771435236698697*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox["\[ExponentialE]", "z"]}], ",", "1", ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.771435237921034*^9, 3.771436965298938*^9, 
  3.77143711297721*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"u", " ", 
      RowBox[{"Cos", "[", "v", "]"}]}], ",", 
     RowBox[{"u", " ", 
      RowBox[{"Sin", "[", "v", "]"}]}], ",", "u"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"u", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"v", ",", "0", ",", 
     FractionBox["\[Pi]", "2"]}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.771435254383088*^9, 3.771435335733954*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx1vHdcT////5+Q/SIrvMgKIWSn6C4jpYwSKisroUFJilIIRTRQVFQqbe29
t/Zez/beIXv1y8v9/nh+Lr6/t3/O5TydzvNxrs/HuT1u99t5PM7cEzqKp3l5
eHjGDufhGTq4va7sG3FXRE+yt7xrXMcY3k2uuC+7XPLpAtlgkLtlkda8Vkry
HO7fa68cEJJNBo7EkrXNaxUk/XC/P2ry6gitbLANeziirEBFUij6z75/2qIQ
IdkicLf/1t209rhkHu4fX56Wo8Upg+tKy8oO3zwtaYn7U+xPtIZrceAQv1pC
acFZSWncfzPw+18drMuz9dotqC05hOf3v3qQDM27LyTbCBZpjZlNay9KHsN9
Bw3n6bK2zfBp/rVNLof1JONw//1MTU8tTiucujEl+PBNfcl/Z/3Zly8UX20r
1AGF9QELp/sYSBrivqf5qMRwrS4AkHEsLTCULMd9HvEKeU54D/g7N4y3/XxV
ci3uK/d6Vg4M9MG0H0a3dguaSNrgvtcvQWvfcXqSs6w4Sa9EpCSJ80bb7Mvh
S4Nh7I0Wge9qpkCco9cerQ1bmgw/t5o++KZmDcT5oNsBM2upbPiYPs7GwMYB
iLPRnUW2YUuL4JN7ruw3NRcgzm/iXja5hZeBrvrkbDFDdyDOAh9mr7WW4kDv
okPyBjZeQJzVlzjdNs6pg3Mdrrlh3n5AnFVFx2qGLW0Evf2XFn1TCwTifEMu
a7LIxWZYGS6gMV0rGIizt/rdOLfwVuibGuMlZhgKxLnATFp9+o928Dc42nHQ
PByI82enYeOtpbrgfMWQJQY2kUCcZ0cmR/Dd6QHhDR7nnjhHA3HeVmyqZpzT
By1PZXzDvGOBOJtPm21iEKQryRmyfCgvvwLj3OeqVplRHAQhgkc3OEtbM84/
W0q2ZhQnwdN/ygKdpF0Y52FXvz7zicuCynE/UzvPejHOfCPHf00vLoT7fLaa
TtKBjLOFoqt7pEwZLLvtcXmrcijjPM559V6fuCrIHR5l2nk2knG2bkv77riq
DrTMcyxtrsYyzqOn+xWnFzfAbd4LO52kExlnOUl9b/inGQ4kG+br7ElmnK1O
Sl6PlGmFRTduKm1VTmWc8++O2L/yZjt8lrKqnHo8nXHmDyhY4hPXCRlD7I92
ns1knBWLn/LM/9IN9kkuTXG6WYyz7ZcTZY6r+uC0mY+GzdUcxlknRe3glOm6
kpdkLLPilVQY57B3V8subQmCrN7tsw8KOzDO36RDtl/akgSXvrxQOiDsxTjP
eCw8J6DpDaRcy7u/WTCYcXZ+t/un3pZCkPsp37dfOJJx9new6JxgVwolxtkK
51fFM85xkFru31QJyweEVDcLJjPOua2/UneuqQVdODVGbn4a49ybPrNSb0sD
RFx/GbtfOJNxvjwjek/yuSb4ntCopbYsm3H+pXUwfYJdCwDPvNnnV+UxzreT
Pmw8FtMGW1xE26MdCxjnf6bYhvg3dcCpzQWbNwsWMc5PNFYs+TGmG27X6zxN
cylmnGfF5rjsXNMLr0zHv985v5Rx3lw157WO9EXJ414V+gYv1RjnpyaWO2wM
A+G1hLORXOwLxnn2kINx1oaJoJB6+sLO2NeMc39ye5lyeCao68fbrM+NYJxP
btl0xdqwAF6O3NklG5vAOO+az2f+wb4E3uaemxdQmsI4rx+Wb6McXgEP7UX3
rM/NYJznttg/jy2phuXHP11NTM1mnIefDNxvbVgPOUtivWRj8xlno+LJh5Pv
NsK6b4nnOioLGee+rYYnPtg3w/C6+UMCSosZ51OhNRoLX7VCScpte93CUsa5
UmiLjnJ4O7h7dSxbn1vOOO9+7KlvmdYJelbyqd8zKxnnpOFjrsWWdIOU7mvV
xFQO49zxPc9HZOMFyQ5VqaJf6qcY58V3r+Tv+BwAFjdGXRqt/5JxvhoXli39
OR4+3SssGKUfwjhfdCwvv7QhA7wPPD/zYEUc47xAuURW+nMeBFivvT5KP4Vx
1rJsr7mnWgwjPjlmySlmMs4Z7a1PLm0oh+OHeKc+WJHL5byjZc+RaRw4ohYq
qsFXyDhf9WgaKf25FkbbnTkwSr+Yce4c8k5N4HwDhKfNuObTVMo4C6y8EHdP
tQlOfsl1lVOsYJy3qfVN59nZAhOWmmV0J1Yxzhcfal++tKEN4o6s6bFaUcM4
P4/vKWoX7oCz1m0TVzyvY5yzejRXHJnWBZbHd83U4GtgnH0doj/u/K4lObTq
1L3y9jOMs6p1z8lYez+IDZloIJfryTj7ik26FGMfC2qfsyN25oYzzk9KBA7l
XEwD3Z0jqj5PT2KcS8cu/BFtnwOrnwor78xNZ5zvzXuWV1JbCB/bZMucTHMY
Z1/JubNzLpbCIce1Pp+nFzLO2apeOinDKiF2i3SHS38x49x1eUVitH01zOo8
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
oYC+gzjTc/pZ6DuI8zP0GR/RdxBnXvQZh9B3EGcx9BlJ6DuIsxb6jEXoO4jz
S/QZVug7iHMF+ox+9B3EeRz6DBX0HcTZEn2zKvpo4rwWfXMT+mhWX6NvzkEf
TZzHoG9ehD6aON9E30w+mjh/R9+sjT6aOG9A3+yEPpo466NvfoM+mtWt6JvJ
RxPnXvTNtuijifMS9M3e6KOJszr65kT00cRZAX0z+WjirIO+uQd9NHG2Qt88
DH00cS7GOlAV60Li/ALrwMtYFxLnJVgHzsG6kDibYx1ojnUhcb6AdSDVhcR5
FtaBi7AuJM7ZWAdSXUicr2AdeB/rQuJsh3Ug1YXE+RzWgV+xLiTOUlgH2mJd
SJwFsA5cinUhce7FOpDqQuKchnXgUawLibMj1oGfsS4kzkmYEwljbkSc3TAP
EsJ8iDi/x9yHciDibIf5zkvKe5DzM8xxKNchzp2Y11B+Q5wlMH+pxTyGON/D
/OUE5jHEWRtzFspdiPNUzFMoXyHOCZibUI5CnM9gPiKOeQlxHh/7Jwf5gbkI
cY7AvCMe8w/ifAxzDVPMOYjzjKmP3PYKSkr2Gf7hS5xXm5f+l8dRPsfqlOui
Kr9zN8rhiHPixsvvfudrlLcR544fNf/laJSrEWc9Dg//77yM8jPi/DNqfs3v
XIxyMuJ8G/NzysmI892Y0P9yLsq9iHPukvT/8izKt4jzxGfl/+VWlGMR54Oj
Ov7LpyivIs6OV779l0NRLkWc69vGRP3Omyh/Is4lcX2hDytew0iFtGE+AoaM
J9/ZOoFhTQmQuWCjgPItc25e9FnVr/VtBpg0FWztbLNkPGfnLJ88qz8f5n1/
lboj7D7jqZl6YdqV78UgJHNxk0WXJeMpLZSn/PhnOUDMwvz5luaM5/CyJ9Zy
AxzwtDi5u2iu4f+THyr9lR9uv3bFPb+jAQyGwSlncT/GU3fPxE8NPU3gWpi8
W6vFh/EcWOt5Qvh9C4xpr3Lp8vZiPJ0rH97Y/6kNMt1eP/h4x4PxzD55pfHf
bx3gLlpx8fp1V8Zz04aSUct/DtYfXwWfLp77lPGcURXodlruNXQc4dteHG3J
1VufQi+HEwmwKGW1a9QXB8bz2TyhzsXPMuC8qf30ERqujKdI2A13qfv50OJw
82vFBQ/GM6XdkGdlSjH42cVb/vPEi/HkyfCU90spB9c11WnfynwYz8L9cYJf
0znQWTvcZsRqv/8nfzv+V/5WqGsycOZZA+wXn++/dGI846knz1/83HlwHMuZ
PqNtXQLj+fX26RGebi1g8XBz2vGOBMZz3u60PlHvNohVSrjjNjmR8eSZc8rn
fWAHnNI+mL/9UwK37jiQs/B5VBdsDVZUFtqbwHhWOO0VaU0e9AtX75j5rYtn
OnB7nofANZUAyJ5zfGyj7CPGOS95Of9843gY7eZ25qLOS8Z51FoXpYuf0yHN
3HPu6Fpfxnlh0Oee0oQ8MI6sTfCLCGKclW9lOu2UK4apXqt4R/OHMc4zbizN
ltpUDnzpmVtufIvg+gehud83rOXACuXo+bf1ov+f/E3zr/xt54SDPkoTGyDr
n87MmcXpjHPwKXvltf80wYyy9SN2yWUyzvd6jpddG9cCX0ekF92994ZxbviR
Llw/vg36j9Zn3bDLYpxj3/N9njSlA2TbXYT7T2QzztOaq6xzZnaB5rLrafZf
sxnnZMnUD3ELeyB9iN7cNQdzGOfRUbfra4b7w+nvo++P+viMce5zseG7vTYO
fpRf2vthvg/jnKhfmp45Oh18R5XOWPozmHE+an5ntKZ1LqimjZzeZBzJOL9S
394j/bgIRgVG+4vbxTHOFVZxD/k0y+BG4SzbJYJJjHOegOyhJrkqGF/8bJfo
xhTGeTb64IV/5W96NeMi5fbVg+A2v0ivfXmM8xsHATE9qUYYu+H7misHChhn
v1lDh1qtaYYH04fX8GsUMs53J4xOGuyJsGXLpGnnjhYxzkJNox/rC7fDxxvC
R+Q3FDPOkUcc5gULd4LQzf2c21+KGef18yY9ihXpBlPeFSadjiXc/E32/oEC
JV/Yss1hRqi7C+MseMduY/3DGBDwv5ewaEsg42w/zWz+kvLBum7qSdUVeRGM
c9PDi2klQ3IgoGvg+uaP8YzzqIWeHTovC+FD+UiDGZxkxrm2iG+lk2IpeFSf
lPsyIp1x1jaIvtg8rhKWzzKvDuR5w+WMdZ3qX/nbVUWF/RoJtbCvMOeobFQR
46z6Ps61a0MD7JppPSlosH4kzjYVZ99bz2iC55Ka/vuLShnnm50f9h4b0gK7
5+VOebu+nHHWeqwtzd/bCpXK8hkSNysY5zvjLoSr1bfDZ6vXxZ9CKhlnj3Hd
zXwVnXBhW1hHwxtuzlnrbPkiTc4bhlx3Ttj9lJu/LX+qPPe6TRRsnyPc+XMT
N387UbM3UU8tBYIUlu2yVoxlnCfPt1ecND0L1rXpNBjeSmacny/+Na/gSgGs
4L1t0PQ6nXH+0KHvdf9DMRhXOv6q8MlinI9dcPy+8Xo5NO3uPhpyKY9xfoM5
ReRf+duyWn3tjfrVIPE8Y7bBWG7+1rjh4Yeaj3UwJ0vM79o4bv523Ha83uSU
QZ+hrT5f5VMl1w+bn4I82yaw0j5lGD44PhDnGCXh5ZyzLVD29dtIKZMaxlkx
PXDb1x1tYOXW8uzVzDquH84ST20R6QCXDxfDc/fWM87v7oUtkHvnCZsP2fQV
7Obmb/x+5tm5myPAMbDqacP3MMa5Je3Vu0O+STBmvuDjhk3c/G3veo2lu6oz
oLxg3/ZwxTTG+ftSi/cKq/LA5spujptEFuMs5eHQI3mgCG5feBtc9zmPcT7o
3qP21r0UKqMfZSulcHNOmrea9Vf+1j72dpFufiX865t53HsaN38bH2J4jIe/
BnYMPFhWacRhnEO/iCueXVUPvHPcgzLSaxhnxdlHX21oaYCMixlD+H/UMc7B
QdFTwlyaoHnZzJDF4xoYZ+932Q7PT7XAk33jg+0nNDLOZfB1e6RoG2wc39w4
f2QT4zze7OL1D/LuUPNrz/AbsV6M86qhj/Zu9giF3mmnlg/oRjLOHoVj4lOM
EkA27YLKSkFu/laBfPcgb+Is7+M1Mpc/G2blXtnRq5vLOEeV8ma1XyuAkQ+X
dTy9UMg4rxxTbP3xVjGMWTfRYM6kEsaZ5q+m/5W/pdvNtbQpK4PFnIDzE0o4
jHO8Tvbzh3mVsG2bw/j4h7WMc++kye2rONXA63Cpz8+xnnHOQ767kTdxLgkK
DTvq0ADXxV+37RJqYpwvPrLKPLWxCW53NZ4LUW5mnPXTlM41djRDROaF92tu
cHNOr0DBMVvPuMIPj/iH1lU+3OdQO0amS2QEwbUTPPXqjtGMs9uYEleDDTGw
d9K+xctSUxjn9agXk1A/iPP4de4B8wZ94JqZnq5hC7j527qi5IU/qnNgSqBu
reCyYsbZy60od/7CQngQU3Jdbl4Z40zzV2f9lb912RcKLnlUDLZfC5/Xr+Xm
bwEZ08eN3lAG7jX6ObNdufmb/3e/tf4fKiB+2C91E0Fu/vYE9WIS6gdxvrRW
60x6QC3MOZu3r+gnN+d8OuWu26ayeihq2G+++1gr43xLptgy8lgj/HQTcR4R
wc05/z2ZOWOKnRPsb55rvNSNm7/96nfQ/3TMH/6N0ZBfqM3N38amyJ647RIO
Pm8CzW4v4eZvQTj+NeJ4SJxzdjg6XCtLgev7zaW/HClknJ+O0BsqcTITJE7u
9W7z5eac0vHVezbMyQVhtaDkNZ3cnJPmr878K3+bvHF2bvTEAlj5tv7k+n+5
uZBIfOC1r4eKwDDG8Ex5agPj7H1EVaggrgQKQ0e8/6bOzd9UcPwzxfGQOLfO
nDt/ZFYlCG/KuZ9sx805OaHqHql61cAfUqzdNKudmycv0riZv6YOgh853DZ7
wc05AzW3Knl+fwwJwdPHOYzj5m+Xqw8PNBV5wprq8SVHW+IY5xmVPD9i44PA
2HlebIw8N39TQz93BP0dca6uF1r53iMBfjzjz1E4ys3fJpWMSvj0LAVacjq+
zG/n5pzfLBvK1J9kQP+Q6TfnnObmnIbomzP/yt+cXsgZTo/JBKOVm8+4t3E5
fz5/SsjpTg7stZUIU33Nzd+2jIt+K7KtAJaXXxg35CI3f9uDfu42+jvifGr8
U7ettoP9wOpAxNAGbs45++7F0fp1ZTBTLlqv5AE356xbz7ciYnslVL23+ddk
LTfnnByXc6JZ/AEIjHbesm0aNxfS7I0wCvjyAsSvPb2u/IObc36Mqan22OEN
c5R7rRcu+j/5G9YnC7BeIc7rLg9ZN3JDBLwa3dN5dz43F3ptMuf44kVxMHpT
XHRlDTfnFH408ZV7YhKYJUH9zgfcnNP0f+Rvj12T988ekgTbjY9IeBhz8wr5
zIt6mt9TwEZRLCb8CDev2DM04flBkQywl66VF9vAzSvGH/tTn9RhvUKcI+ce
OW0pmgeOpwM/nWrg5pw3wvsCbgwpBM6SgmJjf27OeRnE7LcML4b65z+UG/W4
OWfXqh89i2eZwr6Dds9K47mcFTf0ubxqtoGluyNEbV5z87cqXvN7tabO0O6R
UzYigsv5C9bbS7H+Js4b2gvXhvP6w+W9pjHzfLmcbY6uTrKMDoY0s6Xt7yy4
+Vvmc97DBicjYOTqfSKfj3PzN8f/kb+5T0z9lDsnGE4tcvx0gMPlbKTuUlNw
JBzEax4ujM7lctY/XSlyecxgXbC/avbMOC7nGqy352D9TZwLGwK8Dw/6/vue
Tp1+NtxcaMIs0yjXyjQYUjE2eNtlbi6UfnvLXqHxbyD41zUJ/wPc/O3lY7eV
7yPl4U6Wf/nqAS7nT9c0L4tGakLIh5s9GT+4nF+c/Tije6EpbLvjqmr9jcv5
GOZElBsRZ/s3HO+e80/Ab/3HoHP9XM5BPTI+UvNdwHbjP4ZbOrmcZ2nvPxTy
wQP2ix3+cLWG83/zN5//v/zt7NcHwiOETSGnz/rTvf+Tv0mIqCTO6reBQI9Z
h3785HIO0tVVDHRyBvWT7d1Dv3M5b3n5Jyei3Ig4H3hU0ty2wB/GTLac4N7H
5Tzr0HPDnOJgeGbq/NqtlcuZOO5BrsRzoclxM8lB3jF2niLHeywZfzungy+H
cXpAptk4YdntCPb5MszvKM9jOoPH2eLf0fHDH/05L30Pfb7g4KwXv+eZ0bwz
+pzy1hi5etff+SurT73WCDiuCgaBV0P2KflfY/OWFzSMb2+ZrCfZMabzbB+/
JJtvWXPFyuTZqmTIWKp7Yp//fe66HmfTi21y2cCbHLTrl9ljNp95U8OGVc9W
FcEc7SWdiv5ObD6zu16I7+aEMphtpZCyr9uVzWcey7dsQZscB5Y3WfH/MvNg
85n1HDyfW1XUgeSGrGNeAt5sPrPWlAljn61qhF0P+QIU/f3YfGbX2hyZnivN
EKA718RkbiCbz1z6ysJ8c0IrhDuDx77uIDafeeRF6WS74R0Ql3kkRzgihM1n
3ig+dKBVrgvS+q/2/zQLY/OZLwxNlBC37YEcwWcziuUj2HzmaYutl6zuCwLJ
LG3zrxb3Gc/0j9PT1+fpSi7Sefi5unsX49l6TvDRqr4kMG0c8eSLhRPjuSXp
g212axa8W+G3xuiMB+OZf69FZlVfIbzUVhL8YuHHeP4I35v561wZ+Bz4NVSi
LIi77q8xZkd2axUMvVz0xfBMGOOpPG5Rhv2JOjj82LMn8ksk47l1puz8VX0N
EBpq1PjZIpbxrAr6dWLasmbgO/fqvOO4RMbz4o5Qt1/nWiHEkL9VvCyJ8RxR
c7ax2asdjllcVat6nsJ4PtedPS+7tRPGPm2pMjyTxniuHVl6PEioByK99uyf
LprBXcfqbOlqf6IPTkZG5Ud+yWTzgbesP8P76HoQnKq7JndZ4jHjfG74WTsR
FV1Jy1YdE+OtBxhnzyJnHbvrSaDTr/ZUX8KDcfYbNbL2MGTBcoOh40QrXzPO
KnM2LLS7XgiXfypu1pcIY5yrJbRrDOpK4QAIGSlaRjPOxw6+fHQYqmCt2ceQ
FZUJjHOjboWc1ItasDzedJnvUTLjvCrj9hC764PjA2/OJH2JNMb5g9LcI+av
m+Dsy9DApsYMxjmsMSbSoG7QV25z3qVomcU4G1w4MPnc+HaQbTHvTFyZyziL
/Xqrcxg6YcNt7TsrKvMZ52/37mXv1umGR3ZLJ+7ZXMg4R09fuEjqRS+MaX6h
xveoiHE28TIoKGgOhGPzWufZ/3RknK1USuuawy9KDjkhUOelcoRxvm6WuKWg
ORFOc6aJPfnpyzgnLN8+S+zgG8hTPKYj+iuUcebpbf6e31wAneuDkx//jGGc
XbYt6hgqWAo3H/DeMzZJYpylHM+WrT9YCfxD/NaI/kplnBve+aact66BF3r7
axuNMxlnKSGDivzmehBp/XXn8c9sxtlmz7T8s0OaIFrZa6WMcT7j3GAUlTZU
sAXcW7y0jE0KuetYPVVjncXboOu5cfIByWLG2azwe/D6gx2wSllRQPRXCeNc
+MPJu1CvCwz5F2mOii9jnOcIS7qctx7U5azviY3GFYyz/bWAeWfmBELUe6sW
1U2ujHPVsKHJb9svSKYZpX+KmXSCcb79Sd1RfU4i8E56q6S6KYhxTgq47PFU
NBO8RaavH1EdxTibrE45qD6nAITnu45V3ZTEODuNz66+LlwC31+HGQfeT2Oc
o7uKjj8VrYD8jVm9fNVvGOeKjKrWYLFqcHtTe+zI0jzG+bvCu7Xqc+pBwtew
XWVTIeM8erP+F12hQR//bujc4aeLGefpy79GXxduhn/EHqgE3i9lnBfNNDa+
P+jjr5hMsz0UWs44rxs9ZPNT0XZoSHXL4quuZJy3f7nF67mmE+TGLBsaPLSa
cVZsHZkWLNYNIQoREkeW1jLOUq96NC9rBED++7OXziq4M873pX99tW/UkVxk
3bVi4u7TjPOFtgotfY142HP86xsNhVDG2dXYuehgXjqsfxNXOdMonnG2uLO7
95JGHlhPS7qkoZDKOEdlDgyTHVIMt+RfXks+/YZx9t9VYXswrwyumJrfmmmU
xzi7FQXOUXesgnVVq6UlMrjvGXhy0CLgkkYtiH4Q2qmhUMI4b+8VfZ40owGW
/DN19+Pf7+NAzgmis1pkBvu5kPAIxeTBuow4b9AbJVLQ1gyCW77s7+vjMM6h
YR91D+a1wvTDHSozjWoZ5+VfGqJqQ9thlERPgNCNesbZUzyPR92xE4ZntohK
ZHDfM3DwTLzzwu1+8GjuGFW11a8Y5+D7eWLB7lqS4RbhZQ37NBjnh6UOgQu2
x0LNRE37Y6sjGOdoicWjqlengeHODtM76tz3DPiP5RNfsD0Hbt6bue7Y6gzG
uUD74tr1voXwIGdP1zqeXMZZtrwul7O6FHJuS+29o859z0AK7FY3ja0AhUWc
Jf3yJYzzRq/YX0Lbq6Es49LwY6vLGeewCUvt3+QOjpsa/9RnTa9inO1jcwTW
+zZAw0iv6HU8NYxzyduhpyx0mkDdW+qxWyv3PQP8CyQCOatb4JN7z/o76tz3
DOxS0f2x7EsriOmLL4ir5L5n4K6Vt4xpbDsYbb8zsV++mXEmvsSbOBNf4s38
G/Il3sSZ+BJv4kx8iTdxJr7EmzgTX+JNnIkv8SbOxJd4E2fiS7yZPiNf4k2c
iS/xJs7El3gTZ+JLvIkz8SXexJn0gvSDOJNekH4QZ9IL0g/iTHpB+kGcSS9I
P4gz6QXpB3EmvSD9IM6kF6QfxJn0gvSDOJNekH4QZ9IL0g/iTHpB+kGcSS9I
P4gz6QXpB3EmvSD9IM4xOP7ReEicM3D8o/GQOA/D8Y/GQ+brcPyj8ZA4L8Hx
j8ZD4vwTxz8aD4lzIY5/NB4SZw8c/2g8ZLqB4x+Nh8TZE8c/Gg+J8wQc/2g8
JM5GOP7ReEicm3H8o/GQvW8Hxz8aD4lzOI5/NB4S59Po54zR3xHnEejn7qO/
I87n0c+ZoL8jzsXo5+LR3xHnt+jnBnr++DvifBv9HPk79t459HOb0d8RZ3f0
c/Xo75h/Rj+3Gf0dcU5CP2eN/o44e6Gfq0d/R5z70M+Jor9jfgP9nCn6O+Js
jH6uAP0dcU5BPzcb/R1x1sT6RArrFeJsi/XJWaxXiLMB1iceWK8QZ3GsT3yx
XmG+DusTZaxXiLMa1iccrFeYf8b65CjWK8TZBuuTBqxXiPMNrE+oXiHOulif
9GO9QpxPYn1C9QpxVsL65DLWK8R5O9YnVK8QZ0esT75ivUKcJ2J9EoX1CnHe
i/W2ANbfxFkC622qv4mzLdbbVH8T5wGst6Ww/ibOYVRvY/1NnMOx3qb6mzjz
Y729GOtv4qyJ9fZBrL+JcwbW21uw/ibO/FhvV2L9TZzjsd6+gPU3cdbEepvq
b6bPWG87Y/1NnDOw3l6D9Td7zwDW22+w/ub65z85EeVGxPkd5kGUDxHPuZgH
UT5EPHdiHkT5EPEUxzyI8iHiuRvzIMqHiOdJzIMoHyKeBpgHUT5EPNMxD6J8
iHgWYB5E+RDxrMI8iPIhpsOYB1E+RDz7MA+ifIh4fpaNlPISiALXnGtXrCq4
PLdOXlF/YXwSJPAoSZg0WoLxA90oW6Ek4N8wrzhOOAtM/OZF2zk9go/H/LuF
ZLPgbcDok8NdC8FR2fFAe4YjhE/78JATXggHpW5V+y4rgyO8lobPDV1B18zG
W0i2DOKLf+5XjK4CTeX0DJnxHrC8c3mKFmewP+K8O0ucd1dMefX2tQ3zRJvh
merV4B0Fr2Gl7dC7QrLNEPDP+1mXLw/exxWHeL4GB8FD6aLJsrat0FAeoPpm
0CcdHmq0KM84BHq+ubhqcdphiut5+5lDu+DUcofdL2XCQO61znJboS6QPSdc
oiPbA+dVwvWvTIoA75OSMeFaPXBtdcuElId9oHurxGlXbSTwTRsnwwnvA9+l
sK/FKxO2z9kSXfX8JaQPl/a0FXoDQ5NGL4aCAvh8tPOlcpIPvDifqGkrVAgr
u/W9xsiXQsnuN9Jd7wLhUMmR25zwUjgm0LCoIqMSlmk7Syy5GQoCm76/EJKt
gks4L24dzovzwNx4dGP6RHNOC2R8vDxi0qkkGHpB7KaQbCu4GlxTPD+9HS4N
bzALFkmB40IjJsjatoPYuFW2Cgc7Yc4UuR8KH1MhoaLUSYvTCflubYXrH3dD
jlDY5Xdx6TDLyn2x7eB9dlrMmV+wuBeurJn9zvp2Jlu3Pl5zdIp4RD4k33Lf
2bgpBO7E35eVtS0AS4XoaTckSsA1Xf9Wwv1I2LpoyUlboVIYp9WXr+5YAWYj
d8Q7ceJg4GHGNU54JdzH+Wa/cL6ZAebeu6/+WKmzqQ16vQJ0Pq/KgdJdWiZC
su0wfpS91XGtDqiVtR+rXpUHq3k3jpG17YTCJys79jl3wZmPCUqdiQVgEz7a
QYsz6COEcrZJ5/ZA7fY1L10nF0HvuUohW6E+UMPniIfxueIFfC6wd/rt92cH
/esVn0OaMsYJIGL0CWRtS+CtTmads3g5ZO0orzsgmQLtjXYqtkKVYIHP83bg
872dmM9XSvhGdMq0w4PvbZpbBUvAa6mboZBsJyw+Ix9w63QnlIbGJs2sLQW+
+gt8srbdcMW2x13wRjf8q20z9ZNzOXs/A82n+ozzqSbjc4pFvAHaFr6lkHVq
VvuFJRlQsFZtnaxtBZu/VIfzl2bic4FrN9+PFHzfDrIvygZafarAaFT5JSHZ
brC8eDl7yadOCGpRE7MtqobyOI8hsra98BHnEZniPKJIfA6yD+fnOOD8nD58
vpAz0vme6fIOkDl6fs+54nqQbxtzQUi2F0pxPokUzidJwpzfcctsn8WJYaDo
evxUsWk00xPlxi2W3X6J4Ow6ril4sM74hHpycv5lSDVMh4e6nZN+nMiGCNQT
rVPeHxylcyDJ9aTbPPFC0EM9iVXsLYkaVQjio4vEM5JLYAXqSRrOAxHBeSCk
J3JrYk79jK0Ez62zhoUdrmN6UlCiBGdfVsOEsu15froNTE/26/dOL7WoA/nR
xjMG1jUxPekZvc1ojlgDWEiGqit8b2Z6IsqxPnPA97eudwW/HNRt0hNd3xql
+4LNMOTVvIGPN9uZnki+zint64uBRRJB9wraUiED9cTuXuZ7hbEpMH77iVc9
ZjlMT+4k+HzznZMJ115ZHB/+TxHTk6v993n51ubCBZETfZM4pUxP/HA+xiuc
j+GJeuLZMJp/fUoFzJ1zYtKrO40wjPTk+/fJp3ZxwPHEbtXl2s1wAvXEcUrP
NJvyGpjqIe4aptQKiagnWQI6/9SJ1oN128L2jRLtIIh6ku5+xvqjfgOMXDJp
RercTqYnIdW621ZDArSaJd6LEs9lerL8+65Jb3tTYOKs9p2XPYpgG+oJ790T
t6QlM2HF1778h/5lwGP9R0+8cJ5DEc5zID2Z5N58+GpLGTS63Qsdcb4FylBP
rnVqP144rhLeWY83mKzTBmtQT1pFv+YWruEAz3W7DXP1OsAW9WSPwU0+48M1
8I+WwI9lBoPjKOqJKeoF6ccy1I081AvSD9INedQL0g851A071IsK1A/SjSrU
C2HUD9KNOagXpB+kG2vxeb0vPq+firoxJbJIp+VOLCxbOM9N62Y5FKJuvMbn
4y/w+fgs1I09DfPMfpwvALX+nYoH+buYbmSutM8PSSiEuWYt/rJSPVCBumGF
z6kz8Tl1NM23x+e/w/D5L+lGsEjnaim3DHiqlfxuSWgP0w33TSoXXq66AZqn
q4yO+8tD6q+oH8tkb8BjfL64DJ83JqKekF8pQv9CvuUK/r0Nni8IzzN17J/n
hfT8kPz2XjzvE/we0it7HO9p/Kf7dKG6Qf4X6Tq4GsA7td/dCzoVc6rDteqg
8LvsgdxWH7C8l+549Yw5qNyTGojU8gWrLfKv3LfWgrnVRdGzkyOh2MMhSotT
CzXhh+wijzVAjd/2BV4eMbBjhONZTngDfPh3RZ1hnQfM/WreoWRpCU/nubfo
cDxh+I/zOXt0YmEE77CAPZtdYWPoDpXq8Diwvit0R+57NYguGPtj4+MkiPly
6omQbC2MKhKZ7eBfD7PTPzj4bkyFGNEhFeFaDZB9LMPIsqYRxp+pWTujOR2m
t+Sf4oQ3gf6nlq7CZheQDjT94vDzHtTie35i9//wETsYBbKf0ppFf7lD3cCV
nAitGBCs4BUdJpgGm+vD0oxNguCMgsF0bU462KSPzi3U44BytKnFqPh0cJdb
qccJr4GVs3ZFD/evgxaRJatjN2WBqOoZaVuhBuiIyiie2d8Aei+Kq7XjcuHB
P+uKw7WaYEOLRlb4+EGdtJBMsX5eAN3Jw9Q44S0gonJe2VnUAZx3nls6ptoC
droVnYrRcoREafFzViLh8D5N5OHh0FdgKucDdkJR4MgRSTBcmAIu1xIWc66E
gtjn8cWc8DQot9v4xm9dNux40j7mrkAcBGbu5NPm5MH22rB+t5BKcH63UiXD
MBvuP/+5x1aoBk5Ex12JjamBiybSWbPe5IP7zdxQLU49bM5u/NXZUA9u5v6z
xMcWAa+Yk5StUBPsiVJP+tzSCGNz1h9oWV0Cat3n8sK1WuDoq86bwzqbQX9i
8gPrQ4M+2GXDIU54GwgsPHfmmsYDSD00Tk9L4RaU4HuH7JT3pMoOCYGkhfLX
Uk57g5A9J1ibEw6rwit+Js1IAtmrnbmPB/dHO3vdl7VNhRmJFtPrQjPB4WJ5
r9CNRDDTbkrghOcC72nnGSaLCsDKI+qTyZM0+Dn74ddwrWLo1N69zjGpHPTH
mfCtTsgH/XdvRGRtq6G2f2Gq9wMOhM4RvZN+tgim+a+eL2tbD0VXBhQiD9VB
gPjce/39JXD5OG+gFqcRmn516Zx81ABeShMfzjEph5IphRtthVrgiFRFeKdR
E7hpD7XbNbIKVmW9eBOu1QYVN1N/XjzeAk53PzwxGvw+axPtA5zwDhBWy3m8
evs1uNYX9+vcagNIwPs3L19kXXbua5iW7L4mZ7oPZDSOXbjTNhRyRhX8MBgV
D3OaIm899owEzhYp6QitFKgo3bZi+NR0eBb80GDenGRQnHzNUNY2B7I956rt
XpQL7v3JIt+6M6BF91CZFqcI6iSuZ8rNLIKANZ8aCqNywZXzpS9cqxxUcH5v
Dc7vPYrzQIrGHv76aFklnDi03DPRuwSsyp7aCMnWg5x+ls2G8Gpo+55hKmJd
Dl2WGoKyto3QqD1zis7setByOn7I4XIVyMJ6Xy1OM8x+ue94UlMDvN/4fe2w
IzXwqn+4mK1QGxwut/Sf5NUEMdo7R0bOrYfhXiWp4YM+2GFM8tfTmoP+WdL+
Y88g75OHXypwwrtgc/+d1wveFkOI7ubi83IVTJcijMdXCho9B1XnjQoqeZ5w
FHUp0m798MBBH3E6SNx4nlcl06Vgf+FRNQHFoLpu0piV+jUgg7r0TbLWIPj+
Yyg5tT3cTNgdXFCXshSleEKG+kHdvC19nmuiQRJ1qXSywUcnqxyQL/2s5B1W
xXSptGB7iKF2AZwPGqhMjquFWNQlECjoEnpSBKnpN1f0nmiAGahL+1GPjFCf
mlGXdqMekT7Voy5tRT2ahfpEunQY9cga9Yl0qYv0CPWJdMkQ9agd9Yl0aRjq
kRjqE+lSU2d615rK69D1xqJBDZ6BIurSxuR185JXOoN5/bop58dHwk3Upbrm
uFuO67xhx6vhX00yUpkuKawR/bGkMwjka3XOyNzJZbr07Ueh0vGuRHgtdVBF
sYnDdKnLOfpdvm0KPF0ufddxsJ+QLlVLvnwgKZ4OqrH1TVYKjUyXcuruLfVv
yISZO6+CqVkz06V400uZ/1pkQ235FEfdoFZIQF2KEauYO2ChCRufiwet67Nh
70+7cetehESZDWxT+u49cC4cFqAufebRTnMc5wLGPCXF05alMl3yg6mvp4u+
gvIDPkVBQrlMl06ZxDvYKwaA44FEjQX/FMMv1KU24xHhb+TC4aPfkzPxw6uZ
Lm1x5viMrIkC/m5TvbTN9UyXnGNfv9ihHQevzNaF+Jo0Ml360SO1M+V6IkgK
dL+3iW1muuTz0zf1hEwylPm5rrryrRVWoy4pj5sKvPypoLXloO5RsQ6wQV3y
/vV87/W5prDn4rt9vYPjSDrqz7cD1hbCVx6Afk3XzNT9KVCF+uNRvrlB48wT
2MpbN55fJwcUUH/yb0YZx9k6g8Wks0NWpBYx/fkuMH3cqGNu8Naj0ah0bzm4
oP7w4zw0FZyHRvojlGrjfcTSG461dK7jX1sP91F/xGbkfR4xxx/sAl7pnbra
CJ2oPwvFhs+vVA2EDINTgRFJzSCD+rPy5PydAQuC4fvmuT2jR7Yx/ZF4IHXx
5tsQWD66dvHR3R0wDPVne9QxB+WYMDhR/Ew96FEXnED9UTzmevNBRQJElK6d
7C1gwebp1eicfnKuMQMumw2ziy+0ZfP0+EW/dVpV5MP4ab2OXgJP2Ty9eVcy
Xii3FYN3QLm77ZEXbJ7exgr+necay8HVrf5AfKEbm6d3ALn0av3hRPP0aP2m
xV/rNxX9nA2V25qgLD9Ew/bIazYf71h18u6G5haw2fUofOvmIDYfT3Ns+/xz
jW0gFpInFl8YzObjGW4c9/V9XQfUThsVI3YylM3Hu625Ku9qTReYm2zdFPIh
jDuPV+3U6vcWGaA9bdxPy2g3xkG7+9hEhxP5ILvHdHHUFy/G4VeM/5fnzsUw
/3b//rZ1rxmHdPTZ19F3EwerHd7l2y5zoPurZrlrZRjjQOsr1/y1vvLAioKd
mXYtUBiyeNrAkiR2veITHya/s2iDO2bSLy2jk7nvdfm4S/xf0w6Q3HNy+dSd
qex6edHff5z5x+/T9bZEZy/W1uwB306nbcvOZnDnEy7Y9FjqRR6YHz73ku9R
MLteb6xbhLGOoeuNuSEx5uLnMsh+6JA5qjaGXW/uN4ulKtlVEFFi728ulchd
h4750s+/1jM+WmzReuFzK+Q/4ncaVZvNrssZ6x8XrIfoujxdy/lUsjthw0El
e3OpAnZdr2t+Td0V1g2us759TztXyK6L1iEe+msd4tW8mktbjYqgaNe7pEPO
8dx1ylUGzXtFymBBl+bac0eT2XVNbOVXOlpbCcdXNFgs1E5j13UH60bpv9YJ
ak0tv3JweDucOrVri0wrd53gvpnuokdrO+DG7TuaC7VLWfs3zLvYfiqiC1y8
kp4M+1TG2j8Sc6dPf63jc+MbJ3l7SSksL/42/bYLdx3fxjY9W6egCjiT1x37
7nQWa+d5zKNq/lpPFznc7YJTUDsYHkhzeHe6ivt+tsulzxbpd8JUJclzr2Sq
WXtoXdv1v9a17Txqd+rrjnL4kG6W9mpmPvvevZhTPfprHdlV0wS31+/a4ZW8
yPUMH+46sgPo6zh/rdsqxvwK/loPpaxbFNsvHwpTtZZMM4vlrntaLNS9QUsv
Ho5qlT1Rs+Kue/rZeeNQv3wqrHK3dzWNzWT9oSVl/AxRtTfAx1H2c+nKY5zz
nJwqNPXyoGek1SE1K+57h6h91F5qZyrmWkv/Wt8kxqPRsUKtEh5fHn/RpYu7
vslfM0Amr4MDAyPFJByGcN8vNLfywytNvVoIPdC+Sc2K+36hbDfnm+Ym9XDW
3WGz8HTuupvhlZtDlFIaQPC9zNa37tz3CxEv4kfcYF7JvkqfaOiYLtF+/wN3
vdKjX/kXJDKSwI73spq6I3e90ujusPWjN6TDC33l7tmu3PVK1A+oXxAf6gfU
L4iPD+ZdHn+tPzodf//Cu4sVUGB/a0nZTu76o9lhA8UVPlXwXcHu7v0P3PVH
Vb666xObqmHBWLfWLc9bGAfqZ9TviAP1M+p3xME4apnXkaXxUGNpsiREjLtu
6Aveb3T/0fWK4v1G9x9d71m83+j+o+t99T/W+2w9VPzR3KUMBBdIzLy9hLve
px7vT7pf6bqu4f1J9ytd1zS8P+l+peuqQF0zQp2j9i9GXSOdo/afRl3jR52j
9u/8H+tlNFDXNFHn2DiLuqaIOkftdEddE0Odo3auxHHF66/1LGU4rkTjOEPt
jMNxJQfHGWqnL44Tzn+tKwEcJ2jcoPZ44ThB4wa1597/WN/xDcdvGs/pe4f+
j/UU0Ti+NuN4y9Zvom888Nf6hQv4PFICn0/S+gXeRWGlT0+8hhafZ9bRX+5y
1yHi82AVfD5Mxz88q3hI/1UDZIjWDy0QiGX6M2Tf011bXwTAJclHASMe2bLz
vLHgE97yIh5MFa/84HvkxvSzDp/r38Xn/HR+Q/1J4Y82NIBq7/LNd1pT2flv
BImn353fBCJXjUaN3JDB7utD3/xCtKz9ofD1RsNmYwf2vUf8JB00reOgQkPn
QZOxF/vedK19SxVE0qFp45wL545y3ydQi/M5nHB+B7Wn9Jfb042DOlIZ8WbV
C6ts1p6YYRcUtho1wuQfm+4ccs5j7XEdvWnUzn3NIDynsudeWQF3vdKs/Ymh
Yn7wQnmE6rGlz1k7eyekB4WIxcLKp9liR5cGsHbS+sPRuB6R2kk6YoS6QnpS
ivN+XuA8IGr/BS8piTcJdaB5QsPs1JcC1n7zbSUZOi8bYKRag+KMwTqE2k86
4oG6Qu0nHZFCXaH7dNe8KXVnHH2gtOLKhY0Z3Pd80vpVWs9K10XjAY0P7D1F
OB7Q+EDXReMBjQ90/77A+WRrcH4ZXe9H6bzqot4aeFvg6T1v8Di6XhoPaHyg
66XxgMYHul4aD2h8oOul8YDGB9IBWi9N66eJA/kG8hHEgXwD+QjiQL6BfARx
IN9APoI4kG8gH0F6kojzGvfgPEfiQ76BfATxId9APoK93wZ9A/kI4kO+gXwE
8SHfQD6C+JBvIB9BOkbto/ay+w77E/Uv4km/N/3+dDz93vT703W54f1G9x87
D95vdP+xddZ4/9D9ROfXxvuH7ic6/2i8f+h+Im5lqEeqqE/0vTWoR4dRn+h7
21CP0lCfqD+4oh7VoD5Re2pRj0ifqD3/oh6RPlF7RFCPSJ/od7yKes2D+k3t
vIN6nYn6Te0swPfdjMT331A772NdJ4J1HvXbh6jvtaj31P4TqO+k99T+tajv
pPfU/hEj/9R1VOdR+yuxrqM6j/rhRxzPhuD4Rte1Ht+X9Bzfn0TXZYT1eS3W
63RdKlifa2G9Tte1HutzqtfpfjyL46USjp90vZU4Xj7A8ZOuVwbrc12s1+l6
q7E+p3qdrtcO6/MNWK/T9cphfT4L63W676oxl6Gchq7XBnMZymnoetdgLkM5
DV1vOeYylNPQ9cZhLkM5DemPGvoM8h3EIQRzGcppiMOwgj+5DOU0xMEXcxnK
aYiDEuYylNMQhx+Yy1BOQxw8MJehnIb0h9Y/Lv1r/eNu3Lf7a53j/wc+WIbn

   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[2], EdgeForm[
      None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
3CxY37XG3xguDTeHywTr1gpwfWko/E3getJH+hx4MtfpwnWO4riutIzuUbE3
uMaRpp3EnJuYc6jWLtwVPhp+Hu4Ml1LcVgyAS8KfwiOTNYTyQjeOZ3OdjxmH
J+ezj+ChyfrjdfiO5Nj3BnxnckycAd+THN/fhgckx9PX4NuT4+Ob0nfJ8fRV
+LbkuP8W3D85T0yD+ybnuelwv+Rc8g48MDkuz4YfSNZGM+F7k3NDzzx3KBco
ttfK88X7zLk/WfcMCNY7D+KfhX9wsu4ZmOcR5Y538Q9Kzg3vwfcl66cDWVPL
pU31HYPz+QfMr8b5f7AxHG+WpkuOZRWlVfVcpQ+DY+dZ0gPBcfpM+E/pvuS9
WjV4jZyrfB38+5wH72bOh8nrbIt0SvLamsmcJxg/lHYN/s1rwLuYMyd57e6Q
zkpe69ulp5LX1jZ4VvLaOjt4XZzP/9YIXl8Xw1uZMzN5nZ0XvI5qa8/Cx8B1
4L+Y80HyOp6F/0mtF/xT8d+aXNso7/ROrnlmBOsdrbFXg2s+aeDvmDMxWa98
C09Irj/fCtYU0oqL8I9Prg9fCa4dpaUX4H8iuQb+Bn46uf6cD49NriFfD653
pfGeCY71ivPDg3XEWHge8x9J1nZz4WHJOvu14PpY+vwT/COSNd+IYH3xBP6R
ufZQbTgxuM6WFp0QXItLi85RDZRcM0wOrpWlq6cE19aqHVoH13Adci2kerFL
rjFU/3XNtYfqP+mQa4Prv/Zwm+B6sWOuYaSbpG3aBuuLTvB1wbrjxlyPSY/0
zvWPNFGfXOeorpXmWcg9j0vuO3wNP5Vcz78Q3JNQjfMB/geT66IhwfXHiFw7
qb/SI9eB0kHSftKH0ke9ck2rfoy064dc5+HkukX6sEd0zXU/46XJNaee/wXR
vQ7t9WOitaJqhM3J2l05aD5jpYJr+X15nC/D+d+wPpn1z1eZ+zCqozOOm+W6
5fPMvR2tyWuja8PF0iTRe021YbvodS699GXm3o601heZe0TqP/ybx3Dpk9rR
PZCj9T2wTpmv+Wyy7t/CuR3YL9gf2E5sQ8H1718F18DSKvWw5xU3tM+x33J9
Uje6Z6K90yq6ttW+aBytz9Xf+CfPI4r5NaN7KYpd3aPjmGL++dH9Fumoi6N7
TdJLdaL7OdpTjaJrCum3RXkc09poGl3vaM1cGV3LrJKe4jN+Du6/lYjWPGt0
Xxz/kWvIzzL30NbBryueBv/u72buY6hfd3C0vioOf4fV4NzNwaNqjcOlX7CW
HG/Nn+PqgvNI2eiavZT0DnZJZs0zI3P/Qdrj7cy9C/0Wu7H1Bees46NrcOW7
46JrZ8Wi5tj0gjXqsjxWK/40i66VpJO/y+O/NPC3efyXvv0xj7fKd2Wi6/1W
fJfT8LcrWCcvzeO5cm7p6Ppd+fTY6Dpd2u+HPF8onx6l3JzHserYaPh7xvbY
3HzNbNcaKbgntiezflDfaS/cGN6Wr7mN+f8+l1z7vRdc80m/vR9cF6qWnx1c
O6pnuyRYY65QTAjuI6oP8HFw3alewYJg7fZ9fj9av2sVV4PrUfUQpGW+yaxn
5gfruCVa/8H6bjH8Q7De/Blexn1OSc4984L7N+o5zAnuEap+XxysQ3+Ch0bn
8TV6boph+XW25L/5Oq0l5r+E/2Ctf/gV5RZ9rvZfcv9oBbwSm1cwS9/quywM
1qQ/aF8Ea9uleu7BevZHxZZgPbs8v5+ftM60l/GPw/9dHlerRtf+SxlfSM73
nwZrjYX4f8/vW/e8KX+mugf1A2O0tlSv8qBo3ate4gHR+lP7Q/uEy/3XVywe
rW935df5No89Wg8lMDUIeyX3NDfna6VEvle25LFrZ37dkO898ap8Pel/9Mw/
C677vy64z5miNfbxwfHg5ILrmw8z1zi6xob8Otvze9N3fVE5M3N/8vvgWmRl
wXF0S/5s1Hc9UHFc3zE4Dh1ZcN1dJFq3KxY1S+5dqof8SeY5qtOLRut59STn
ZK59pP/0vkHvGhTfLknudSq/nxnde5GmPTG6N6h6alrmnqTi/6PJ/TX1cC7k
3PCC33csxFemYB1RI1qL6l3Ggsx1n2Jjm+T3CuoR1YrOs+r514/WMOrVN4mu
edX/bwCPKbi3o9pNz1DvAi6J1i16v3B5dF0sTXRptIZRX31x5t9C9V3/6N9L
e61XdD2o3vIK5lQuuKbYkLnvrTplS+aeuWqQrZl74Orv7U7uo2k994z/31Od
o+tBvftYkrkOkh44K/r9gnp3qYj7faplNjI2Kvh90E+Za+epeZxSjNL7iMs4
Nx5+Pjjnq9cn3bspc29Eev+U6HpB/aJzousC6eftmXsR0sx/ZO69KL8MSe7P
qgd1LueGFKzhf83c91Bd3C96b0o//46/ZsG6fW3m2lw1whq4mtY23Cm5TpA+
eTL5PYc0/47M9bs0/ObMPZ+f4eJFHI/0fcflMUd7Qb/xqnyOanbFhErBuVSf
pX7vqfjvhEcHaxA9nweCc6bWofT8Nriunjn+4jnvxN8tWferz1yF4wH4G2kt
ZtZOqj3XZ36fonciKzPX3epT/ZK5plBP4/3M7/LUd/o48zsy9XbmZX7/pR7L
3MzvxdTn+SjzO7g7gvO2Pld9ktmZ96BixQeZ+5bqsbyX+R2ccv3dyb1R5ZSv
83iivtZy+IKC+zOzMr/vU99mZub3iaoNT4/u5ap+rBTdY1c9WDG636s6tHJ0
n1z1QrXo92Kql8+Ofs+lfsLfXLNVwTVs+ei+verlk6L786phK2APFFw7l4vu
86tX81bmdxbq1UzP/C5D9enJ0f1n9S52Z36X9He+z/UcpJH6JL/XVO9udeZ6
TT2rEP2uU/3JktG1g9bhjOTfW33Xw6PrBfUhd2b/72Osy9yfVJ/z0GitorUx
O3kdqDeyK/P7LPU8S0XXMuq7HhZdm6gfe0R0DaK+5arMdaXyy2fJGkj1437R
PeH/AQ63z84=
          "]], Polygon3DBox[CompressedData["
1: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
          "]], 
         Polygon3DBox[CompressedData["
1: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
W3GvYffFXsf+Aq4j30Q=
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {{}, {}, {}, 
     {GrayLevel[0.2], 
      Line3DBox[{251, 474, 1091, 252, 488, 280, 1199, 503, 295, 1204, 518, 
       310, 1211, 533, 325, 1220, 548, 340, 1231, 563, 355, 578, 1143, 370, 
       593, 385, 1248, 608, 400, 1253, 623, 415, 1260, 638, 430, 1269, 653, 
       445, 1279, 668, 460}], 
      Line3DBox[{253, 475, 1092, 254, 489, 1103, 281, 504, 296, 1205, 519, 
       311, 1212, 534, 326, 1221, 549, 341, 1232, 564, 356, 579, 1144, 371, 
       594, 1156, 386, 609, 401, 1254, 624, 416, 1261, 639, 431, 1270, 654, 
       446, 1280, 669, 461}], 
      Line3DBox[{255, 476, 1093, 256, 490, 1104, 282, 505, 1114, 297, 520, 
       1123, 312, 1213, 535, 327, 1222, 550, 342, 1233, 565, 357, 580, 1145, 
       372, 595, 1157, 387, 610, 1167, 402, 625, 417, 1262, 640, 432, 1271, 
       655, 447, 1281, 670, 462}], 
      Line3DBox[{257, 477, 1094, 258, 491, 1105, 283, 506, 1115, 298, 521, 
       1124, 313, 536, 1131, 328, 1223, 551, 343, 1234, 566, 358, 581, 1146, 
       373, 596, 1158, 388, 611, 1168, 403, 626, 1176, 418, 641, 1183, 433, 
       1272, 656, 448, 1282, 671, 463}], 
      Line3DBox[{259, 478, 1095, 260, 492, 1106, 284, 507, 1116, 299, 522, 
       1125, 314, 537, 1132, 329, 552, 1137, 344, 1235, 567, 359, 582, 1147, 
       374, 597, 1159, 389, 612, 1169, 404, 627, 1177, 419, 642, 1184, 434, 
       657, 1189, 449, 1283, 672, 464}], 
      Line3DBox[{261, 479, 1096, 263, 493, 1107, 285, 508, 1117, 300, 523, 
       1126, 315, 538, 1133, 330, 553, 1138, 345, 568, 1141, 360, 583, 1148, 
       375, 598, 1160, 390, 613, 1170, 405, 628, 1178, 420, 643, 1185, 435, 
       658, 1190, 450, 673, 1193, 465}], 
      Line3DBox[{265, 481, 1097, 266, 1197, 495, 287, 1201, 510, 302, 1207, 
       525, 317, 1215, 540, 332, 1225, 555, 347, 1237, 570, 362, 585, 1149, 
       377, 1246, 600, 392, 1250, 615, 407, 1256, 630, 422, 1264, 645, 437, 
       1274, 660, 452, 1285, 675, 467}], 
      Line3DBox[{267, 482, 1098, 268, 496, 1108, 288, 1202, 511, 303, 1208, 
       526, 318, 1216, 541, 333, 1226, 556, 348, 1238, 571, 363, 586, 1150, 
       378, 601, 1161, 393, 1251, 616, 408, 1257, 631, 423, 1265, 646, 438, 
       1275, 661, 453, 1286, 676, 468}], 
      Line3DBox[{269, 483, 1099, 270, 497, 1109, 289, 512, 1118, 304, 1209, 
       527, 319, 1217, 542, 334, 1227, 557, 349, 1239, 572, 364, 587, 1151, 
       379, 602, 1162, 394, 617, 1171, 409, 1258, 632, 424, 1266, 647, 439, 
       1276, 662, 454, 1287, 677, 469}], 
      Line3DBox[{271, 484, 1100, 272, 498, 1110, 290, 513, 1119, 305, 528, 
       1127, 320, 1218, 543, 335, 1228, 558, 350, 1240, 573, 365, 588, 1152, 
       380, 603, 1163, 395, 618, 1172, 410, 633, 1179, 425, 1267, 648, 440, 
       1277, 663, 455, 1288, 678, 470}], 
      Line3DBox[{273, 485, 1101, 274, 499, 1111, 291, 514, 1120, 306, 529, 
       1128, 321, 544, 1134, 336, 1229, 559, 351, 1241, 574, 366, 589, 1153, 
       381, 604, 1164, 396, 619, 1173, 411, 634, 1180, 426, 649, 1186, 441, 
       1278, 664, 456, 1289, 679, 471}], 
      Line3DBox[{275, 486, 1102, 276, 500, 1112, 292, 515, 1121, 307, 530, 
       1129, 322, 545, 1135, 337, 560, 1139, 352, 1242, 575, 367, 590, 1154, 
       382, 605, 1165, 397, 620, 1174, 412, 635, 1181, 427, 650, 1187, 442, 
       665, 1191, 457, 1290, 680, 472}], 
      Line3DBox[{277, 682, 1291, 683, 278, 501, 1113, 293, 516, 1122, 308, 
       531, 1130, 323, 546, 1136, 338, 561, 1140, 353, 576, 1142, 368, 591, 
       1155, 383, 606, 1166, 398, 621, 1175, 413, 636, 1182, 428, 651, 1188, 
       443, 666, 1192, 458, 685, 1292, 686, 687}], 
      Line3DBox[{459, 667, 684, 444, 652, 1268, 429, 637, 1259, 414, 622, 
       1252, 399, 607, 1247, 384, 592, 1244, 369, 577, 354, 562, 1230, 339, 
       547, 1219, 324, 532, 1210, 309, 517, 1203, 294, 502, 1198, 279, 487, 
       1195, 250, 473, 681, 688}], 
      Line3DBox[{466, 674, 1284, 451, 659, 1273, 436, 644, 1263, 421, 629, 
       1255, 406, 614, 1249, 391, 599, 1245, 376, 584, 1243, 361, 569, 1236, 
       346, 554, 1224, 331, 539, 1214, 316, 524, 1206, 301, 509, 1200, 286, 
       494, 1196, 264, 480, 1194, 262}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{690, 987, 473, 689, 1091, 897, 691, 1092, 898, 692, 1093, 
       899, 693, 1094, 900, 694, 1095, 901, 695, 1096, 994, 1194, 696, 1097, 
       902, 697, 1098, 903, 698, 1099, 904, 699, 1100, 905, 700, 1101, 906, 
       701, 1102, 907, 702, 1291, 988, 908, 989}], 
      Line3DBox[{704, 995, 1195, 703, 488, 705, 1103, 909, 706, 1104, 910, 
       707, 1105, 911, 708, 1106, 912, 709, 1107, 996, 1196, 710, 997, 1197, 
       711, 1108, 913, 712, 1109, 914, 713, 1110, 915, 714, 1111, 916, 715, 
       1112, 917, 716, 1113, 918, 717}], 
      Line3DBox[{719, 998, 1198, 718, 999, 1199, 720, 504, 721, 1114, 919, 
       722, 1115, 920, 723, 1116, 921, 724, 1117, 1000, 1200, 725, 1001, 1201,
        726, 1002, 1202, 727, 1118, 922, 728, 1119, 923, 729, 1120, 924, 730, 
       1121, 925, 731, 1122, 926, 732}], 
      Line3DBox[{734, 1003, 1203, 733, 1004, 1204, 735, 1005, 1205, 736, 1123,
        927, 737, 1124, 928, 738, 1125, 929, 739, 1126, 1006, 1206, 740, 1007,
        1207, 741, 1008, 1208, 742, 1009, 1209, 743, 1127, 930, 744, 1128, 
       931, 745, 1129, 932, 746, 1130, 933, 747}], 
      Line3DBox[{749, 1010, 1210, 748, 1011, 1211, 750, 1012, 1212, 751, 1013,
        1213, 752, 1131, 934, 753, 1132, 935, 754, 1133, 1014, 1214, 755, 
       1015, 1215, 756, 1016, 1216, 757, 1017, 1217, 758, 1018, 1218, 759, 
       1134, 936, 760, 1135, 937, 761, 1136, 938, 762}], 
      Line3DBox[{764, 1019, 1219, 763, 1020, 1220, 765, 1021, 1221, 766, 1022,
        1222, 767, 1023, 1223, 768, 1137, 939, 769, 1138, 1024, 1224, 770, 
       1025, 1225, 771, 1026, 1226, 772, 1027, 1227, 773, 1028, 1228, 774, 
       1029, 1229, 775, 1139, 940, 776, 1140, 941, 777}], 
      Line3DBox[{106, 354, 107, 355, 108, 356, 109, 357, 110, 358, 111, 359, 
       112, 360, 361, 113, 362, 114, 363, 115, 364, 116, 365, 117, 366, 118, 
       367, 119, 368, 120}], 
      Line3DBox[{779, 1030, 1230, 778, 1031, 1231, 780, 1032, 1232, 781, 1033,
        1233, 782, 1034, 1234, 783, 1035, 1235, 784, 1141, 1036, 1236, 785, 
       1037, 1237, 786, 1038, 1238, 787, 1039, 1239, 788, 1040, 1240, 789, 
       1041, 1241, 790, 1042, 1242, 791, 1142, 942, 792}], 
      Line3DBox[{794, 577, 793, 1143, 943, 795, 1144, 944, 796, 1145, 945, 
       797, 1146, 946, 798, 1147, 947, 799, 1148, 1043, 1243, 800, 1149, 948, 
       801, 1150, 949, 802, 1151, 950, 803, 1152, 951, 804, 1153, 952, 805, 
       1154, 953, 806, 1155, 954, 807}], 
      Line3DBox[{809, 1044, 1244, 808, 593, 810, 1156, 955, 811, 1157, 956, 
       812, 1158, 957, 813, 1159, 958, 814, 1160, 1045, 1245, 815, 1046, 1246,
        816, 1161, 959, 817, 1162, 960, 818, 1163, 961, 819, 1164, 962, 820, 
       1165, 963, 821, 1166, 964, 822}], 
      Line3DBox[{824, 1047, 1247, 823, 1048, 1248, 825, 609, 826, 1167, 965, 
       827, 1168, 966, 828, 1169, 967, 829, 1170, 1049, 1249, 830, 1050, 1250,
        831, 1051, 1251, 832, 1171, 968, 833, 1172, 969, 834, 1173, 970, 835, 
       1174, 971, 836, 1175, 972, 837}], 
      Line3DBox[{839, 1052, 1252, 838, 1053, 1253, 840, 1054, 1254, 841, 625, 
       842, 1176, 973, 843, 1177, 974, 844, 1178, 1055, 1255, 845, 1056, 1256,
        846, 1057, 1257, 847, 1058, 1258, 848, 1179, 975, 849, 1180, 976, 850,
        1181, 977, 851, 1182, 978, 852}], 
      Line3DBox[{854, 1059, 1259, 853, 1060, 1260, 855, 1061, 1261, 856, 1062,
        1262, 857, 1183, 979, 858, 1184, 980, 859, 1185, 1063, 1263, 860, 
       1064, 1264, 861, 1065, 1265, 862, 1066, 1266, 863, 1067, 1267, 864, 
       1186, 981, 865, 1187, 982, 866, 1188, 983, 867}], 
      Line3DBox[{869, 1068, 1268, 868, 1069, 1269, 870, 1070, 1270, 871, 1071,
        1271, 872, 1072, 1272, 873, 1189, 984, 874, 1190, 1073, 1273, 875, 
       1074, 1274, 876, 1075, 1275, 877, 1076, 1276, 878, 1077, 1277, 879, 
       1078, 1278, 880, 1191, 985, 881, 1192, 986, 882}], 
      Line3DBox[{896, 993, 992, 1292, 895, 1290, 1090, 894, 1289, 1089, 893, 
       1288, 1088, 892, 1287, 1087, 891, 1286, 1086, 890, 1285, 1085, 889, 
       1284, 1084, 1193, 888, 1283, 1083, 887, 1282, 1082, 886, 1281, 1081, 
       885, 1280, 1080, 884, 1279, 1079, 883, 684, 990, 991}]}}},
   VertexNormals->CompressedData["
1:eJzNm3dcVFcWx8cWewEsgK7BhhgrYseuUbHElRAxdtnYAGMBrBBXQMVo1LUE
gwVwQYnGiA1jCc+GdUCKihSpwyQCsZFY0Oi+Gc552T2bk/feCLvJP/nw4+R3
v+/Ou+fe+2PSwm2+88zKGo2mTjWNpor470jHlbP2hOkF97Wjj1Ue7RMbX/bz
gAiia0Gn9abqnL9SnXJ6KPTZR+rjTeRU+7wnFx5t29VXLzys3dpz/dDjQjzR
HyjUY4gP558A+ncy41I9RoaHG5fW47iPCI/cPDxSOT/Ux8E7Ocatvl7o4eqr
K2x1SRoX9e6ga5l6qmM9+ncF3YHocvXdFPo7kHrK303huLRe6bhK9TYdek3f
OKlAOPdDTbdTunjJ3xb080RvS+rjST3nI5D6tsSf8giMDzcu5aQ6V692HuR8
OE7v+ffMn7vphAZt6m6I3JvyX3p90LUy9V5MvZeMf3nrOO4iwoP1PqCbK+Q3
lceM6EF9tlqes8sXitt3yz1pcVfyR72Q6OuITn2U6pwP6kUm+svxy/kUMfWc
rtS/adRX1dKjc4V3W/vXH94z8790G9DRpxnRlfqo1ZuTcakez/AkyPhjfQum
nj6X3PMqra+kMfyTI7wx/pMt6Rqia0k9/p7Wvyb11IeOq9SH1qvVuXETZHw0
b+mPOn6u+Dloid6U6DaM/i6jUx86LtWpv5yulrMleV5Tfbh6Op/o/xP0Eewr
+PkWEV1LdOyj8URfy+hBCvVCZtxChf7IX8z4U50+71rmeeV85J7LAvZF3G/R
H/fjRYyO+2o80b3eUqc8an0oJ9UtGH6l41Ifpfo1OOfhuQ8/38ug47kSx71K
6uMV1iv1ufKWutZEflM5aT2n94d7C95jUB8AOt7PtERXWt+f6Grr5Xw4fs5n
oMp6ysnxU53616hTdg/H/EAro9cC/STRayrU48tZr0H0BIXPZaq/qZyPom4Y
cyXMmVB/DDrmVVqiRxKd+qD+hNE5/0cKdaWcVEeefYwP91xK54HTR9W4vXJV
sF7YnT036tToCGncMUTH92Q06LtIPafHws84DuoC6KOJHsvolB91udyS5p/c
vHHj+npn1nPdoxcKk1tmXPlgm6zukFL2M/4e9W5E18r4cM/FfY6cP5fT+kFd
kUJ+7r3lcku5fFhtPc1LuXqaGyv1p3ky9/5wOTNXz+X5anNp9PdkeLj5oTxy
86+2Xmn+b2o9x6P0feD4u5E8nOo9TcyfUad5uFIftXp55edU71ZOnJhjX2Dy
bZoDc7k3p3N5stp6OR/Kb2ruXVG6TwXn2/+v/Jzm4bSe5tty+ttycnl1eeXk
FZ2fy/GbmsNTn2KVOh2X5slUr+icnMu35XJ1pbpaH7m/IyidHy4/V5oDy+ly
ObypPuWVn9N8Xu3zUv9KMvWoy+XJVLdRWV/R+blafrnnUpu3U52rL5bJwzmd
y43fNj9XOi6X85uanyutl+Pn6t82ry5vXS2PXB4ul/MrzduVjtuQ0bmcWS6v
Vpob/9nyc86nonN1Lk/mcmCuXmkubeq4avNzuZy/vHSlubrSHFhtTv6/ys+r
k5wcdZqfU/1tc3K19TTfRl1tTs7Vc/m50nHjybg0P+d81Opq83COs92kWeHZ
AXqhtPqmIQe/PyJMCHayWxYu3hO991U+HqQXPKoWj5vr8a2gqVPJuWaEfsD6
9y1dm23UC0/qza+zdOLXQsm49JE6Ue8y0T2gZIteeD3C+Xn4iAhhfMtXYzpG
6gdE+L1p3jtYL1y3XNNli+ce4QnUx3TqlVccohfer9XWKnT4NuFN7TL/KwHr
9tXboxfGuH/93ZRhgYL3nFrbd+39LT/MJXlXlF1g/TP+emG53bSqn4v8XlCP
/M6E/3PgTwX+J4Q/n+EPZvjrEX5dh82OD5uLPuHX2kwvuCDxx9mcPfCwo16w
mNIktP2+81L98w+rHHLrqxcm9O3nMHPWOck/LD+m1vCReqHY60S60+hYwRV4
Wl0e881OV73w2DLsYbUbZ6T5vzk/OWTaJ3oh2mWwbWenU5L/wWeOmi0L9MKz
77dbPb0cI/Fgv+tEci3kTwd+H8JfG/hxPpHfmfCHA38W8ON8tgZ+PeFPAP5I
4Ed/5C8m/Gu/7u5V7FUgJG+428T2sFb63BvoTplfWl8grCiuP/Hg0hvSPPR2
XNjf4p8FQo6d86jpg65LnDu3T2h491SB8Ek176GTa16TOEM1K5MaJBYIW/8e
eyMm8cpv7/mTY8lnCgqEC7vNNqwNviz5L9zUYntqaYEw2+7RKP2UOIkT9+nT
JNdCfi3D78PwpwF/CeGfSvjDgP8L4MfntQf+swy/G+Hv133roLQAnbA488Fj
p3opEufI5efGOkboBOvkq32nLEuWfH528Q9pekknuGi3Li3MT5LGrdz7HzuX
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
d0bu74P/ApCG1MI=
    "]],
  Axes->True,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->200,
  Method->{},
  PlotRange->{{0., 0.9999999285714223}, {0., 0.9999999285714223}, {0., 
   0.9999999285714286}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-0.010131663008330988`, -2.909652945287129, 1.7273728860285555`},
  ViewVertical->{-0.04242061612225781, -0.09687921720328772, 
   0.9943917279432118}]], "Output",
 CellChangeTimes->{{3.771435312395471*^9, 3.7714353367437696`*^9}}]
}, Open  ]],

Cell["\<\
The following is the dot product which the text answer shows, and which is \
presumably the core of the integral.\
\>", "Text",
 CellChangeTimes->{{3.7714371970769577`*^9, 3.7714372715518713`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["\[ExponentialE]", "z"]}], ",", "1", ",", "0"}], "}"}], 
  ".", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "u"}], " ", 
     RowBox[{"Cos", "[", "v", "]"}]}], ",", 
    RowBox[{
     RowBox[{"-", "u"}], " ", 
     RowBox[{"Sin", "[", "v", "]"}]}], ",", "u"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.771436486261032*^9, 3.77143651042774*^9}, {
  3.771436754053087*^9, 3.771436765804247*^9}, {3.77143690714633*^9, 
  3.7714369222598257`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[ExponentialE]", "z"], " ", "u", " ", 
   RowBox[{"Cos", "[", "v", "]"}]}], "-", 
  RowBox[{"u", " ", 
   RowBox[{"Sin", "[", "v", "]"}]}]}]], "Output",
 CellChangeTimes->{3.771436513121091*^9, 3.7714367684239187`*^9, 
  3.771436924917543*^9, 3.771436970177597*^9, 3.771437122031233*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "1"], 
  RowBox[{
   SubsuperscriptBox["\[Integral]", "0", 
    FractionBox["\[Pi]", "2"]], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", "z"], " ", "u", " ", 
       RowBox[{"Cos", "[", "v", "]"}]}], "-", 
      RowBox[{"u", " ", 
       RowBox[{"Sin", "[", "v", "]"}]}]}], ")"}], 
    RowBox[{"\[DifferentialD]", "v"}], 
    RowBox[{"\[DifferentialD]", "u"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7714365577653503`*^9, 3.77143656193963*^9}, {
   3.77143659601187*^9, 3.771436601347165*^9}, {3.771436779397502*^9, 
   3.771436789145306*^9}, 3.7714369343814383`*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    SuperscriptBox["\[ExponentialE]", "z"]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.771436566353335*^9, 3.771436602194069*^9, {3.7714367818415413`*^9, 
   3.771436790598522*^9}, 3.771436935702201*^9, 3.771436973809052*^9, 
   3.771437125354436*^9}]
}, Open  ]],

Cell[TextData[{
 "However, this route does not get to the text answer, which is ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". I should also note that the integration limits appear in this case to be \
listed in the text answer, and are the ones used above."
}], "Text",
 CellChangeTimes->{{3.771437295734454*^9, 3.7714373139652157`*^9}, {
  3.771437705122655*^9, 3.771437753278462*^9}}],

Cell["My preferred route would be ", "Text",
 CellChangeTimes->{{3.771437321143693*^9, 3.771437334732481*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["\[ExponentialE]", "z"]}], ",", "1", ",", "0"}], "}"}], 
  ".", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "u"}], " ", 
     RowBox[{"Sin", "[", "v", "]"}]}], ",", 
    RowBox[{"u", " ", 
     RowBox[{"Cos", "[", "v", "]"}]}], ",", "u"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.771437352322772*^9, 3.7714373591889*^9}, {
  3.7714374183948793`*^9, 3.771437420753346*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"u", " ", 
   RowBox[{"Cos", "[", "v", "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", "z"], " ", "u", " ", 
   RowBox[{"Sin", "[", "v", "]"}]}]}]], "Output",
 CellChangeTimes->{3.771437361639516*^9, 3.7714374219275093`*^9}]
}, Open  ]],

Cell["\<\
because, while differentiating v, it only requires a reason unknown to \
refrain from differentiating u. This would produce\
\>", "Text",
 CellChangeTimes->{{3.7714373660025*^9, 3.771437434023127*^9}, {
  3.771437772447941*^9, 3.7714377810206623`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "1"], 
  RowBox[{
   SubsuperscriptBox["\[Integral]", "0", 
    FractionBox["\[Pi]", "2"]], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"u", " ", 
       RowBox[{"Cos", "[", "v", "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", "z"], " ", "u", " ", 
       RowBox[{"Sin", "[", "v", "]"}]}]}], ")"}], 
    RowBox[{"\[DifferentialD]", "v"}], 
    RowBox[{"\[DifferentialD]", "u"}]}]}]}]], "Input",
 CellChangeTimes->{3.7714374529400787`*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    SuperscriptBox["\[ExponentialE]", "z"]}], ")"}]}]], "Output",
 CellChangeTimes->{3.771437454546039*^9}]
}, Open  ]],

Cell["\<\
which appears just as good as the other way, though neither match the text \
answer.\
\>", "Text",
 CellChangeTimes->{{3.771437482197712*^9, 3.771437496107957*^9}, 
   3.771437795284108*^9}]
},
WindowSize->{1366, 843},
WindowMargins->{{4, Automatic}, {Automatic, 3}},
Magnification:>1.5 Inherited,
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 10, \
2015)",
StyleDefinitions->"Charter1.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 89, 2, 45, "Input",
 Evaluatable->False],
Cell[492, 17, 571, 12, 86, "Text"],
Cell[1066, 31, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[1164, 36, 391, 12, 54, "Input"],
Cell[1558, 50, 302, 9, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1897, 64, 254, 7, 50, "Input"],
Cell[2154, 73, 174, 4, 49, "Output"]
}, Open  ]],
Cell[2343, 80, 232, 5, 51, "Text"],
Cell[2578, 87, 546, 14, 78, "Text"],
Cell[3127, 103, 316, 6, 86, "Text"],
Cell[3446, 111, 1388, 38, 90, "Input"],
Cell[4837, 151, 1612, 41, 104, "Input"],
Cell[CellGroupData[{
Cell[6474, 196, 150, 3, 45, "Input"],
Cell[6627, 201, 83984, 1385, 637, "Output"]
}, Open  ]],
Cell[90626, 1589, 177, 4, 51, "Text"],
Cell[90806, 1595, 511, 14, 48, "Text"],
Cell[91320, 1611, 121, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[91466, 1616, 311, 9, 47, "Input"],
Cell[91780, 1627, 259, 7, 45, "Output"]
}, Open  ]],
Cell[92054, 1637, 149, 2, 51, "Text"],
Cell[92206, 1641, 195, 4, 51, "Text"],
Cell[92404, 1647, 908, 27, 79, "Input",
 Evaluatable->False],
Cell[93315, 1676, 698, 11, 155, "Text"],
Cell[CellGroupData[{
Cell[94038, 1691, 254, 6, 47, "Input"],
Cell[94295, 1699, 448, 13, 54, "Output"]
}, Open  ]],
Cell[94758, 1715, 340, 6, 51, "Text"],
Cell[CellGroupData[{
Cell[95123, 1725, 144, 3, 45, "Input"],
Cell[95270, 1730, 281, 8, 45, "Output"]
}, Open  ]],
Cell[95566, 1741, 237, 5, 51, "Text"],
Cell[CellGroupData[{
Cell[95828, 1750, 821, 25, 79, "Input"],
Cell[96652, 1777, 108, 2, 69, "Output"]
}, Open  ]],
Cell[96775, 1782, 276, 6, 51, "Text"],
Cell[97054, 1790, 357, 7, 86, "Text"],
Cell[97414, 1799, 73, 1, 45, "Input"],
Cell[97490, 1802, 409, 7, 86, "Text"],
Cell[CellGroupData[{
Cell[97924, 1813, 294, 8, 54, "Input"],
Cell[98221, 1823, 248, 6, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98506, 1834, 2207, 55, 429, "Input"],
Cell[100716, 1891, 704, 17, 506, "Output"]
}, {2}]],
Cell[101432, 1911, 262, 6, 51, "Text"],
Cell[CellGroupData[{
Cell[101719, 1921, 284, 7, 45, "Input"],
Cell[102006, 1930, 7976, 162, 143, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110019, 2097, 205, 4, 45, "Input"],
Cell[110227, 2103, 409, 11, 69, "Output"]
}, Open  ]],
Cell[110651, 2117, 241, 5, 51, "Text"],
Cell[CellGroupData[{
Cell[110917, 2126, 354, 10, 54, "Input"],
Cell[111274, 2138, 194, 6, 45, "Output"]
}, Open  ]],
Cell[111483, 2147, 421, 8, 86, "Text"],
Cell[CellGroupData[{
Cell[111929, 2159, 275, 7, 45, "Input"],
Cell[112207, 2168, 147, 3, 45, "Output"]
}, Open  ]],
Cell[112369, 2174, 495, 8, 86, "Text"],
Cell[112867, 2184, 390, 10, 45, "Input"],
Cell[113260, 2196, 277, 5, 86, "Text"],
Cell[113540, 2203, 1563, 47, 141, "Input",
 Evaluatable->False],
Cell[115106, 2252, 444, 7, 86, "Text"],
Cell[CellGroupData[{
Cell[115575, 2263, 386, 11, 45, "Input"],
Cell[115964, 2276, 132, 4, 45, "Output"]
}, Open  ]],
Cell[116111, 2283, 194, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[116330, 2291, 352, 10, 45, "Input"],
Cell[116685, 2303, 214, 6, 45, "Output"]
}, Open  ]],
Cell[116914, 2312, 126, 1, 51, "Text"],
Cell[117043, 2315, 385, 12, 75, "Input",
 Evaluatable->False],
Cell[117431, 2329, 597, 9, 86, "Text"],
Cell[CellGroupData[{
Cell[118053, 2342, 2323, 63, 964, "Input"],
Cell[120379, 2407, 851, 23, 221, "Output"]
}, {2}]],
Cell[CellGroupData[{
Cell[121264, 2435, 546, 16, 79, "Input"],
Cell[121813, 2453, 146, 4, 100, "Output"]
}, Open  ]],
Cell[121974, 2460, 177, 4, 51, "Text"],
Cell[122154, 2466, 576, 17, 117, "Text"],
Cell[122733, 2485, 787, 22, 78, "Text"],
Cell[123523, 2509, 166, 3, 45, "Input"],
Cell[123692, 2514, 218, 4, 86, "Text"],
Cell[CellGroupData[{
Cell[123935, 2522, 361, 10, 54, "Input"],
Cell[124299, 2534, 197, 6, 54, "Output"]
}, Open  ]],
Cell[124511, 2543, 484, 8, 120, "Text"],
Cell[124998, 2553, 2196, 57, 133, "Input"],
Cell[127197, 2612, 641, 18, 45, "Input"],
Cell[CellGroupData[{
Cell[127863, 2634, 927, 21, 75, "Input"],
Cell[128793, 2657, 77392, 1238, 374, "Output"]
}, Open  ]],
Cell[206200, 3898, 123, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[206348, 3903, 373, 11, 54, "Input"],
Cell[206724, 3916, 228, 7, 69, "Output"]
}, Open  ]],
Cell[206967, 3926, 309, 6, 86, "Text"],
Cell[207279, 3934, 204, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[207508, 3942, 175, 4, 45, "Input"],
Cell[207686, 3948, 151, 3, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[207874, 3956, 177, 4, 45, "Input"],
Cell[208054, 3962, 148, 3, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[208239, 3970, 177, 4, 45, "Input"],
Cell[208419, 3976, 125, 3, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[208581, 3984, 235, 6, 45, "Input"],
Cell[208819, 3992, 144, 4, 45, "Output"]
}, Open  ]],
Cell[208978, 3999, 220, 5, 51, "Text"],
Cell[209201, 4006, 358, 12, 45, "Input"],
Cell[209562, 4020, 236, 7, 69, "Input"],
Cell[209801, 4029, 348, 7, 86, "Text"],
Cell[CellGroupData[{
Cell[210174, 4040, 321, 10, 45, "Input"],
Cell[210498, 4052, 144, 4, 45, "Output"]
}, Open  ]],
Cell[210657, 4059, 111, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[210793, 4064, 320, 10, 45, "Input"],
Cell[211116, 4076, 156, 5, 45, "Output"]
}, Open  ]],
Cell[211287, 4084, 121, 1, 51, "Text"],
Cell[211411, 4087, 246, 4, 86, "Text"],
Cell[CellGroupData[{
Cell[211682, 4095, 2497, 66, 964, "Input"],
Cell[214182, 4163, 927, 25, 567, "Output"]
}, {2}]],
Cell[215121, 4191, 191, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[215337, 4199, 510, 16, 79, "Input"],
Cell[215850, 4217, 146, 4, 100, "Output"]
}, Open  ]],
Cell[216011, 4224, 258, 5, 86, "Text"],
Cell[CellGroupData[{
Cell[216294, 4233, 331, 11, 45, "Input"],
Cell[216628, 4246, 95, 1, 45, "Output"]
}, Open  ]],
Cell[216738, 4250, 334, 6, 86, "Text"],
Cell[217075, 4258, 215, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[217315, 4266, 566, 17, 79, "Input"],
Cell[217884, 4285, 262, 5, 69, "Output"]
}, Open  ]],
Cell[218161, 4293, 824, 24, 98, "Text"],
Cell[218988, 4319, 165, 3, 45, "Input"],
Cell[CellGroupData[{
Cell[219178, 4326, 391, 11, 79, "Input"],
Cell[219572, 4339, 40411, 661, 314, "Output"]
}, Open  ]],
Cell[259998, 5003, 205, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[260228, 5011, 500, 15, 54, "Input"],
Cell[260731, 5028, 404, 13, 54, "Output"]
}, Open  ]],
Cell[261150, 5044, 217, 3, 51, "Text"],
Cell[CellGroupData[{
Cell[261392, 5051, 791, 21, 54, "Input"],
Cell[262186, 5074, 581, 17, 54, "Output"]
}, Open  ]],
Cell[262782, 5094, 118, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[262925, 5099, 228, 6, 79, "Input"],
Cell[263156, 5107, 623, 21, 72, "Output"]
}, Open  ]],
Cell[263794, 5131, 451, 11, 60, "Text"],
Cell[CellGroupData[{
Cell[264270, 5146, 743, 23, 62, "Input"],
Cell[265016, 5171, 440, 14, 72, "Output"]
}, Open  ]],
Cell[265471, 5188, 193, 2, 51, "Text"],
Cell[CellGroupData[{
Cell[265689, 5194, 279, 7, 79, "Input"],
Cell[265971, 5203, 195, 5, 79, "Output"]
}, Open  ]],
Cell[266181, 5211, 140, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[266346, 5216, 246, 6, 69, "Input"],
Cell[266595, 5224, 125, 3, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[266757, 5232, 248, 6, 69, "Input"],
Cell[267008, 5240, 125, 3, 45, "Output"]
}, Open  ]],
Cell[267148, 5246, 131, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[267304, 5251, 226, 5, 69, "Input"],
Cell[267533, 5258, 144, 4, 45, "Output"]
}, Open  ]],
Cell[267692, 5265, 251, 6, 51, "Text"],
Cell[CellGroupData[{
Cell[267968, 5275, 332, 9, 79, "Input"],
Cell[268303, 5286, 166, 4, 45, "Output"]
}, Open  ]],
Cell[268484, 5293, 139, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[268648, 5298, 154, 3, 45, "Input"],
Cell[268805, 5303, 199, 6, 62, "Output"]
}, Open  ]],
Cell[269019, 5312, 123, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[269167, 5317, 552, 16, 79, "Input"],
Cell[269722, 5335, 200, 5, 110, "Output"]
}, Open  ]],
Cell[269937, 5343, 238, 5, 51, "Text"],
Cell[270178, 5350, 527, 14, 94, "Text"],
Cell[270708, 5366, 165, 3, 45, "Input"],
Cell[270876, 5371, 112, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[271013, 5376, 380, 10, 75, "Input"],
Cell[271396, 5388, 197, 6, 75, "Output"]
}, Open  ]],
Cell[271608, 5397, 131, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[271764, 5402, 337, 10, 75, "Input"],
Cell[272104, 5414, 209, 6, 99, "Output"]
}, Open  ]],
Cell[272328, 5423, 650, 14, 127, "Text"],
Cell[CellGroupData[{
Cell[273003, 5441, 333, 9, 45, "Input"],
Cell[273339, 5452, 171, 4, 45, "Output"]
}, Open  ]],
Cell[273525, 5459, 141, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[273691, 5464, 279, 8, 75, "Input"],
Cell[273973, 5474, 90, 2, 75, "Output"]
}, Open  ]],
Cell[274078, 5479, 322, 6, 86, "Text"],
Cell[CellGroupData[{
Cell[274425, 5489, 2875, 79, 1113, "Input"],
Cell[277303, 5570, 966, 27, 218, "Output"]
}, {2}]],
Cell[278281, 5600, 191, 3, 51, "Text"],
Cell[CellGroupData[{
Cell[278497, 5607, 429, 11, 79, "Input"],
Cell[278929, 5620, 228, 6, 103, "Output"]
}, Open  ]],
Cell[279172, 5629, 142, 1, 51, "Text"],
Cell[279317, 5632, 668, 19, 73, "Text"],
Cell[279988, 5653, 73, 1, 45, "Input"],
Cell[280064, 5656, 114, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[280203, 5661, 334, 9, 54, "Input"],
Cell[280540, 5672, 242, 6, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[280819, 5683, 387, 10, 54, "Input"],
Cell[281209, 5695, 340, 10, 78, "Output"]
}, Open  ]],
Cell[281564, 5708, 239, 3, 51, "Text"],
Cell[CellGroupData[{
Cell[281828, 5715, 365, 9, 54, "Input"],
Cell[282196, 5726, 150, 4, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[282383, 5735, 395, 11, 54, "Input"],
Cell[282781, 5748, 50279, 821, 335, "Output"]
}, Open  ]],
Cell[333075, 6572, 177, 3, 51, "Text"],
Cell[CellGroupData[{
Cell[333277, 6579, 305, 8, 54, "Input"],
Cell[333585, 6589, 207, 6, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[333829, 6600, 484, 15, 54, "Input"],
Cell[334316, 6617, 285, 7, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[334638, 6629, 584, 16, 79, "Input"],
Cell[335225, 6647, 239, 5, 73, "Output"]
}, Open  ]],
Cell[335479, 6655, 122, 1, 51, "Text"],
Cell[335604, 6658, 288, 10, 75, "Text"],
Cell[335895, 6670, 1036, 31, 116, "Text"],
Cell[336934, 6703, 703, 18, 151, "Text"],
Cell[337640, 6723, 519, 16, 73, "Text"],
Cell[338162, 6741, 73, 1, 45, "Input"],
Cell[338238, 6744, 113, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[338376, 6749, 301, 9, 47, "Input"],
Cell[338680, 6760, 193, 6, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[338910, 6771, 328, 10, 45, "Input"],
Cell[339241, 6783, 125, 3, 45, "Output"]
}, Open  ]],
Cell[339381, 6789, 1789, 51, 193, "Text"],
Cell[341173, 6842, 560, 19, 80, "Input",
 Evaluatable->False],
Cell[341736, 6863, 225, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[341986, 6871, 126, 2, 45, "Input"],
Cell[342115, 6875, 133, 3, 69, "Output"]
}, Open  ]],
Cell[342263, 6881, 237, 5, 51, "Text"],
Cell[342503, 6888, 756, 19, 100, "Input"],
Cell[343262, 6909, 405, 7, 86, "Text"],
Cell[343670, 6918, 634, 18, 78, "Text"],
Cell[344307, 6938, 73, 1, 45, "Input"],
Cell[344383, 6941, 189, 3, 51, "Text"],
Cell[CellGroupData[{
Cell[344597, 6948, 315, 9, 54, "Input"],
Cell[344915, 6959, 246, 7, 54, "Output"]
}, Open  ]],
Cell[345176, 6969, 140, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[345341, 6974, 346, 10, 54, "Input"],
Cell[345690, 6986, 304, 9, 69, "Output"]
}, Open  ]],
Cell[346009, 6998, 119, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[346153, 7003, 175, 4, 45, "Input"],
Cell[346331, 7009, 298, 5, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[346666, 7019, 177, 4, 45, "Input"],
Cell[346846, 7025, 290, 5, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[347173, 7035, 472, 8, 45, "Input"],
Cell[347648, 7045, 244, 5, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[347929, 7055, 206, 5, 45, "Input"],
Cell[348138, 7062, 127, 3, 45, "Output"]
}, Open  ]],
Cell[348280, 7068, 177, 2, 51, "Text"],
Cell[CellGroupData[{
Cell[348482, 7074, 365, 12, 45, "Input"],
Cell[348850, 7088, 99, 2, 45, "Output"]
}, Open  ]],
Cell[348964, 7093, 313, 5, 86, "Text"],
Cell[CellGroupData[{
Cell[349302, 7102, 175, 4, 45, "Input"],
Cell[349480, 7108, 125, 3, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[349642, 7116, 175, 4, 45, "Input"],
Cell[349820, 7122, 127, 3, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[349984, 7130, 177, 4, 45, "Input"],
Cell[350164, 7136, 127, 3, 45, "Output"]
}, Open  ]],
Cell[350306, 7142, 88, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[350419, 7147, 207, 5, 45, "Input"],
Cell[350629, 7154, 124, 3, 45, "Output"]
}, Open  ]],
Cell[350768, 7160, 114, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[350907, 7165, 378, 11, 45, "Input"],
Cell[351288, 7178, 173, 4, 45, "Output"]
}, Open  ]],
Cell[351476, 7185, 103, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[351604, 7190, 311, 9, 45, "Input"],
Cell[351918, 7201, 172, 4, 45, "Output"]
}, Open  ]],
Cell[352105, 7208, 180, 2, 51, "Text"],
Cell[CellGroupData[{
Cell[352310, 7214, 356, 11, 45, "Input"],
Cell[352669, 7227, 160, 4, 45, "Output"]
}, Open  ]],
Cell[352844, 7234, 175, 2, 51, "Text"],
Cell[353022, 7238, 305, 10, 75, "Input"],
Cell[353330, 7250, 251, 5, 86, "Text"],
Cell[CellGroupData[{
Cell[353606, 7259, 558, 14, 79, "Input"],
Cell[354167, 7275, 272, 5, 100, "Output"]
}, Open  ]],
Cell[354454, 7283, 132, 1, 51, "Text"],
Cell[354589, 7286, 177, 2, 51, "Text"],
Cell[CellGroupData[{
Cell[354791, 7292, 3238, 76, 220, "Input"],
Cell[358032, 7370, 1162, 25, 426, "Output"]
}, Open  ]],
Cell[359209, 7398, 734, 19, 78, "Text"],
Cell[359946, 7419, 73, 1, 45, "Input"],
Cell[360022, 7422, 106, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[360153, 7427, 266, 7, 54, "Input"],
Cell[360422, 7436, 203, 5, 54, "Output"]
}, Open  ]],
Cell[360640, 7444, 95, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[360760, 7449, 292, 8, 54, "Input"],
Cell[361055, 7459, 216, 6, 54, "Output"]
}, Open  ]],
Cell[361286, 7468, 357, 7, 86, "Text"],
Cell[CellGroupData[{
Cell[361668, 7479, 542, 14, 70, "Input"],
Cell[362213, 7495, 36700, 600, 360, "Output"]
}, Open  ]],
Cell[398928, 8098, 140, 1, 51, "Text"],
Cell[399071, 8101, 218, 6, 54, "Input"],
Cell[399292, 8109, 421, 7, 86, "Text"],
Cell[CellGroupData[{
Cell[399738, 8120, 345, 8, 47, "Input"],
Cell[400086, 8130, 236, 6, 45, "Output"]
}, Open  ]],
Cell[400337, 8139, 179, 2, 51, "Text"],
Cell[400519, 8143, 164, 5, 45, "Input"],
Cell[400686, 8150, 401, 7, 120, "Text"],
Cell[401090, 8159, 210, 5, 45, "Input"],
Cell[401303, 8166, 261, 5, 51, "Text"],
Cell[CellGroupData[{
Cell[401589, 8175, 396, 12, 54, "Input"],
Cell[401988, 8189, 269, 6, 49, "Output"]
}, Open  ]],
Cell[402272, 8198, 107, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[402404, 8203, 752, 18, 82, "Input"],
Cell[403159, 8223, 319, 6, 69, "Output"]
}, Open  ]],
Cell[403493, 8232, 189, 2, 51, "Text"],
Cell[403685, 8236, 819, 20, 121, "Text"],
Cell[404507, 8258, 73, 1, 45, "Input"],
Cell[404583, 8261, 100, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[404708, 8266, 277, 7, 54, "Input"],
Cell[404988, 8275, 212, 5, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[405237, 8285, 305, 8, 54, "Input"],
Cell[405545, 8295, 233, 7, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[405815, 8307, 543, 15, 70, "Input"],
Cell[406361, 8324, 56024, 919, 328, "Output"]
}, Open  ]],
Cell[462400, 9246, 207, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[462632, 9254, 549, 17, 54, "Input"],
Cell[463184, 9273, 342, 8, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[463563, 9286, 686, 18, 82, "Input"],
Cell[464252, 9306, 367, 10, 75, "Output"]
}, Open  ]],
Cell[464634, 9319, 452, 10, 92, "Text"],
Cell[465089, 9331, 110, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[465224, 9336, 479, 15, 54, "Input"],
Cell[465706, 9353, 273, 7, 47, "Output"]
}, Open  ]],
Cell[465994, 9363, 262, 5, 86, "Text"],
Cell[CellGroupData[{
Cell[466281, 9372, 540, 16, 82, "Input"],
Cell[466824, 9390, 200, 6, 75, "Output"]
}, Open  ]],
Cell[467039, 9399, 200, 5, 51, "Text"]
}
]
*)


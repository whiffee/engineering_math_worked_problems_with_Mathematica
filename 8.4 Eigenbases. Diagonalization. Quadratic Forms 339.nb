(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    233484,       6804]
NotebookOptionsPosition[    210082,       6015]
NotebookOutlinePosition[    210470,       6032]
CellTagsIndexPosition[    210427,       6029]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[""], "Input",
 Evaluatable->False,
 CellChangeTimes->{3.768861340894577*^9}],

Cell[BoxData[""], "Input",
 Evaluatable->False,
 CellChangeTimes->{3.768861334257194*^9}],

Cell[BoxData[""], "Input",
 Evaluatable->False,
 CellChangeTimes->{3.7688613373071527`*^9}],

Cell[TextData[{
 "1 - 5 Similar matrices have equal eigenvalues\nVerify this for ",
 StyleBox["A",
  FontWeight->"Bold"],
 " and ",
 StyleBox["A = ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["P", 
    RowBox[{"-", "1"}]], TraditionalForm]],
  FontWeight->"Bold"],
 StyleBox["A P",
  FontWeight->"Bold"],
 ". If y is an eigenvector of ",
 StyleBox["P",
  FontWeight->"Bold"],
 ", show that ",
 StyleBox["x = P y",
  FontWeight->"Bold"],
 " are eigenvectors of ",
 StyleBox["A",
  FontWeight->"Bold"],
 ". (The object ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["P", 
    RowBox[{"-", "1"}]], TraditionalForm]],
  FontWeight->"Bold"],
 StyleBox["A P",
  FontWeight->"Bold"],
 " will be frequently employed as one gooey mass, so I\[CloseCurlyQuote]ll \
refer to it as the melange.) "
}], "Text",
 CellChangeTimes->{{3.768843274817335*^9, 3.768843345748055*^9}, {
  3.769727283772002*^9, 3.76972736480956*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"1.", "  ", "A"}], "=", 
   RowBox[{"(", GridBox[{
      {"3", "4"},
      {"4", 
       RowBox[{"-", "3"}]}
     }], ")"}]}], ",", " ", 
  RowBox[{"P", "=", 
   RowBox[{"(", GridBox[{
      {
       RowBox[{"-", "4"}], "2"},
      {"3", 
       RowBox[{"-", "1"}]}
     }], ")"}]}]}]], "Text",
 CellChangeTimes->{{3.7688433899152803`*^9, 3.768843424160972*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.675786736810458*^9, 3.675786738778215*^9}, 
   3.768843045801516*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AA", "=", 
  RowBox[{"(", GridBox[{
     {"3", "4"},
     {"4", 
      RowBox[{"-", "3"}]}
    }], ")"}]}]], "Input",
 CellChangeTimes->{{3.675789486115238*^9, 3.675789510560655*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", 
     RowBox[{"-", "3"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.675789513322032*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PP", "=", 
  RowBox[{"(", GridBox[{
     {
      RowBox[{"-", "4"}], "2"},
     {"3", 
      RowBox[{"-", "1"}]}
    }], ")"}]}]], "Input",
 CellChangeTimes->{{3.675789518506029*^9, 3.675789535759665*^9}, {
  3.675789715347478*^9, 3.675789733728998*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     RowBox[{"-", "1"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6757895400608063`*^9, 3.6757897353044853`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e1", "=", 
  RowBox[{"Inverse", "[", "PP", "]"}]}]], "Input",
 CellChangeTimes->{{3.67578954498573*^9, 3.67578955876713*^9}, 
   3.675789621510854*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["3", "2"], ",", "2"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.67578956075336*^9, 3.675789622929261*^9, 
  3.6757897393678837`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e2", "=", 
  RowBox[{"e1", ".", "AA", ".", "PP"}]}]], "Input",
 CellChangeTimes->{{3.6757896281694517`*^9, 3.675789637660211*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "25"}], ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "50"}], ",", "25"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6757896399402122`*^9, 3.675789742712984*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e3", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"vals", ",", "vecs"}], "}"}], "=", 
   RowBox[{"Eigensystem", "[", "e2", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6757897756836576`*^9, 3.6757898065761127`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.675789807462769*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e4", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"vals", ",", "vecs"}], "}"}], "=", 
   RowBox[{"Eigensystem", "[", "PP", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.675789866777913*^9, 3.67578988421338*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "5"}], "-", 
        SqrtBox["33"]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "5"}], "+", 
        SqrtBox["33"]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox["1", "6"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "-", 
          SqrtBox["33"]}], ")"}]}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox["1", "6"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "+", 
          SqrtBox["33"]}], ")"}]}], ",", "1"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6757898853278837`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e5", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"vals", ",", "vecs"}], "}"}], "=", 
   RowBox[{"Eigensystem", "[", "AA", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6757898996575603`*^9, 3.675789914708374*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "1"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.675789915496839*^9}]
}, Open  ]],

Cell[TextData[{
 "Above: Some basic declarations and calculations to set up the problem. The \
spectrum matches the text answer, i.e. I have that the eigenvalues of the \
melange equal the eigenvalues of ",
 StyleBox["AA",
  FontWeight->"Bold"],
 ". "
}], "Text",
 CellChangeTimes->{{3.675790343860745*^9, 3.675790397011145*^9}, {
  3.675792376397789*^9, 3.675792387037472*^9}, {3.768843586128821*^9, 
  3.7688435990781097`*^9}, {3.768843695954637*^9, 3.76884373753509*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e14", "=", 
  RowBox[{"e1", ".", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "2"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.6757913881730413`*^9, 3.675791424089514*^9}, {
  3.6757916596963882`*^9, 3.6757916734861383`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["3", "2"], ",", 
   FractionBox["5", "2"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.675791426040249*^9, {3.6757916610589647`*^9, 3.6757916747072*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e15", "=", 
  RowBox[{
   RowBox[{"e2", ".", 
    RowBox[{"{", 
     RowBox[{
      FractionBox["3", "2"], ",", 
      FractionBox["5", "2"]}], "}"}]}], "\[Equal]", 
   RowBox[{
    RowBox[{"-", "5"}], 
    RowBox[{"{", 
     RowBox[{
      FractionBox["3", "2"], ",", 
      FractionBox["5", "2"]}], "}"}]}]}]}]], "Input",
 CellChangeTimes->{{3.675791465506802*^9, 3.6757915112445908`*^9}, {
  3.6757916904812517`*^9, 3.6757916913336887`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.6757915021841497`*^9, 3.675791513068399*^9}, 
   3.675791692709614*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e16", "=", 
  RowBox[{"e1", ".", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.675791740779916*^9, 3.67579176103658*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.6757917631671677`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e17", "=", 
  RowBox[{
   RowBox[{"e2", ".", 
    RowBox[{"{", 
     RowBox[{"2", ",", "5"}], "}"}]}], "\[Equal]", 
   RowBox[{"5", " ", 
    RowBox[{"{", 
     RowBox[{"2", ",", "5"}], "}"}]}]}]}]], "Input",
 CellChangeTimes->{{3.67579177481182*^9, 3.675791823497601*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.675791825310608*^9}]
}, Open  ]],

Cell[TextData[{
 "Above. This confirms the second half of Theorem 3, sec 8.4, p. 340. I know \
the theorem states that eigenvectors of ",
 StyleBox["aA",
  FontWeight->"Bold"],
 " are good with the melange (after being dotted with Inverse[",
 StyleBox["pP",
  FontWeight->"Bold"],
 "]), but not the other way round. The other way round is what this problem \
instruction is trying to establish. Is it enforceable?"
}], "Text",
 CellChangeTimes->{{3.675791832601659*^9, 3.675791884638709*^9}, {
  3.6757919765329657`*^9, 3.675792066568634*^9}, {3.6757933913891*^9, 
  3.675793395307352*^9}, {3.675794160898402*^9, 3.675794179216441*^9}, {
  3.675798373048006*^9, 3.675798377568038*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e19", "=", 
  RowBox[{"PP", ".", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.675792139866103*^9, 3.675792172468708*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "2"}], ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.675792175071559*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e20", "=", 
  RowBox[{
   RowBox[{"AA", ".", "e19"}], "\[Equal]", 
   RowBox[{
    RowBox[{"-", "5"}], " ", "e19"}]}]}]], "Input",
 CellChangeTimes->{{3.67579219373602*^9, 3.675792216140785*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.675792217542568*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e21", "=", 
  RowBox[{"PP", ".", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.675792236895651*^9, 3.6757922453146667`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.675792246764501*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e22", "=", 
  RowBox[{
   RowBox[{"AA", ".", "e21"}], "\[Equal]", 
   RowBox[{"5", " ", "e21"}]}]}]], "Input",
 CellChangeTimes->{{3.6757922516625843`*^9, 3.675792270251062*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.67579227160044*^9}]
}, Open  ]],

Cell[TextData[{
 "Above: Okay, it works. That explains where those ",
 StyleBox["x",
  FontWeight->"Bold"],
 " vectors in the answer came from. The eigenvectors from the melange work \
when dotted with ",
 StyleBox["pP",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.675792276610248*^9, 3.675792324407474*^9}, {
  3.675792430859495*^9, 3.6757924531951714`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"3.", "  ", "A"}], "=", 
   RowBox[{"(", GridBox[{
      {"8", 
       RowBox[{"-", "4"}]},
      {"2", "2"}
     }], ")"}]}], ",", " ", 
  RowBox[{"P", "=", 
   RowBox[{"(", GridBox[{
      {"0.28", "0.96"},
      {
       RowBox[{"-", "0.96"}], "0.28"}
     }], ")"}]}]}]], "Text",
 CellChangeTimes->{{3.768843826453993*^9, 3.768843856187904*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.675793407445447*^9, 3.6757934093322573`*^9}, 
   3.768843073630727*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"aA", "=", 
  RowBox[{"(", GridBox[{
     {"8", 
      RowBox[{"-", "4"}]},
     {"2", "2"}
    }], ")"}]}]], "Input",
 CellChangeTimes->{{3.675793416988901*^9, 3.675793444347166*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"8", ",", 
     RowBox[{"-", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.675793445229145*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pP", "=", 
  RowBox[{"(", GridBox[{
     {"0.28", "0.96"},
     {
      RowBox[{"-", "0.96"}], "0.28"}
    }], ")"}]}]], "Input",
 CellChangeTimes->{{3.675793448307199*^9, 3.675793473856583*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.28`", ",", "0.96`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.96`"}], ",", "0.28`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.675793474531372*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e1", "=", 
  RowBox[{"Inverse", "[", "pP", "]"}]}]], "Input",
 CellChangeTimes->{{3.675793485058494*^9, 3.675793501593148*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.2800000000000001`", ",", 
     RowBox[{"-", "0.9600000000000001`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.96`", ",", "0.2800000000000001`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.67579350475204*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e2", "=", 
  RowBox[{"e1", ".", "aA", ".", "pP"}]}]], "Input",
 CellChangeTimes->{{3.675793507147254*^9, 3.6757935311586847`*^9}},
 Background->RGBColor[1, 0.9, 1]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3.008000000000001`", ",", 
     RowBox[{"-", "0.5439999999999997`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.4559999999999995`", ",", "6.992`"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.675793536268107*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e3", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"vals", ",", "vecs"}], "}"}], "=", 
   RowBox[{"Eigensystem", "[", "aA", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.675793546723152*^9, 3.6757935624710913`*^9}},
 Background->RGBColor[1, 0.85, 0.85]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"6", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6757935629416037`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e4", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"vals", ",", "vecs"}], "}"}], "=", 
   RowBox[{"Eigensystem", "[", "e2", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.675793566210939*^9, 3.675793579917182*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"6.000000000000001`", ",", "4.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.17888543819998307`", ",", 
       RowBox[{"-", "0.9838699100999075`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.48083261120685233`"}], ",", "0.8768124086713189`"}], 
      "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6757935810973177`*^9}]
}, Open  ]],

Cell[TextData[{
 "Above: ",
 StyleBox["aA",
  FontWeight->"Bold"],
 " and the melange share eigenvalues."
}], "Text",
 CellChangeTimes->{{3.675794921599966*^9, 3.675794938086032*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e5", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"vals", ",", "vecs"}], "}"}], "=", 
   RowBox[{"Eigensystem", "[", "pP", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.675793583634809*^9, 3.675793596036509*^9}},
 Background->RGBColor[0.9, 1, 1]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0.28`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.96`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.28`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.96`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.7071067811865475`", "\[VeryThinSpace]", "+", 
        RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
       RowBox[{"0.`", "\[VeryThinSpace]", "+", 
        RowBox[{"0.7071067811865475`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.7071067811865475`", "\[VeryThinSpace]", "+", 
        RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
       RowBox[{"0.`", "\[VeryThinSpace]", "-", 
        RowBox[{"0.7071067811865475`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6757935972000237`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e6", "=", 
  RowBox[{"e1", ".", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.675793634236496*^9, 3.675793713489954*^9}, {
  3.675793888987108*^9, 3.675793922209239*^9}, {3.6757942283110247`*^9, 
  3.6757942285585213`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.3999999999999999`"}], ",", "2.2`"}], "}"}]], "Output",
 CellChangeTimes->{3.675793716714204*^9, 3.6757938902833033`*^9, 
  3.67579392477524*^9, 3.6757942305138807`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e7", "=", 
  RowBox[{
   RowBox[{"e2", ".", "e6"}], "\[Equal]", 
   RowBox[{"6", " ", "e6"}]}]}]], "Input",
 CellChangeTimes->{{3.67579393438907*^9, 3.675793942352456*^9}, {
  3.675794249335767*^9, 3.6757942733412323`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.675793943209251*^9, 3.6757942754349747`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e8", "=", 
  RowBox[{"e1", ".", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.675794297945176*^9, 3.675794314451882*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.6799999999999999`"}], ",", "1.24`"}], "}"}]], "Output",
 CellChangeTimes->{3.675794315888743*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e9", "=", 
  RowBox[{
   RowBox[{"e2", ".", "e8"}], "\[Equal]", 
   RowBox[{"4", " ", "e8"}]}]}]], "Input",
 CellChangeTimes->{{3.6757943208881598`*^9, 3.675794342450931*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.675794343977311*^9}]
}, Open  ]],

Cell[TextData[{
 "Above, e6 through e9: eigenvectors of ",
 StyleBox["aA,",
  FontWeight->"Bold"],
 " after being dotted with Inverse[",
 StyleBox["pP",
  FontWeight->"Bold"],
 "], work as eigenvectors of the melange."
}], "Text",
 CellChangeTimes->{{3.675794360443062*^9, 3.675794417584152*^9}, 
   3.675794759108259*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e10", "=", 
  RowBox[{"pP", ".", 
   RowBox[{"{", 
    RowBox[{"0.17888543819998307`", ",", 
     RowBox[{"-", "0.9838699100999075`"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.675794439334732*^9, 3.675794441464883*^9}, {
  3.6757945151583157`*^9, 3.6757945396311483`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.894427190999916`"}], ",", 
   RowBox[{"-", "0.44721359549995787`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6757945447365313`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e11", "=", 
  RowBox[{
   RowBox[{"aA", ".", "e10"}], "\[Equal]", 
   RowBox[{"6", " ", "e10"}]}]}]], "Input",
 CellChangeTimes->{{3.675794559019822*^9, 3.675794618721623*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.6757945816292057`*^9, 3.675794620195705*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e12", "=", 
  RowBox[{"pP", ".", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.48083261120685233`"}], ",", "0.8768124086713189`"}], 
    "}"}]}]}]], "Input",
 CellChangeTimes->{{3.675794626870426*^9, 3.6757946572031403`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.7071067811865475`", ",", "0.7071067811865476`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.675794660762526*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e13", "=", 
  RowBox[{
   RowBox[{"aA", ".", "e12"}], "\[Equal]", 
   RowBox[{"4", " ", "e12"}]}]}]], "Input",
 CellChangeTimes->{{3.6757946652462997`*^9, 3.675794683888679*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.675794685588216*^9}]
}, Open  ]],

Cell[TextData[{
 "Above, e10 through e13: eigenvectors of the melange, after being dotted \
with ",
 StyleBox["pP",
  FontWeight->"Bold"],
 ", work as eigenvectors of ",
 StyleBox["aA",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.675794702183549*^9, 3.6757947357251472`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"5.", "  ", "A"}], "=", 
   RowBox[{"(", GridBox[{
      {
       RowBox[{"-", "5"}], "0", "15"},
      {"3", "4", 
       RowBox[{"-", "9"}]},
      {
       RowBox[{"-", "5"}], "0", "15"}
     }], ")"}]}], ",", " ", 
  RowBox[{"P", "=", 
   RowBox[{"(", GridBox[{
      {"0", "1", "0"},
      {"1", "0", "0"},
      {"0", "0", "1"}
     }], ")"}]}]}]], "Text",
 CellChangeTimes->{{3.768843913680202*^9, 3.768843936823736*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.675795007343429*^9, 3.6757950090522413`*^9}, 
   3.7688430881019897`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"aA", "=", 
  RowBox[{"(", GridBox[{
     {
      RowBox[{"-", "5"}], "0", "15"},
     {"3", "4", 
      RowBox[{"-", "9"}]},
     {
      RowBox[{"-", "5"}], "0", "15"}
    }], ")"}]}]], "Input",
 CellChangeTimes->{{3.6757950239848623`*^9, 3.675795054338252*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "5"}], ",", "0", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", 
     RowBox[{"-", "9"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "5"}], ",", "0", ",", "15"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.675795055205221*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pP", "=", 
  RowBox[{"(", GridBox[{
     {"0", "1", "0"},
     {"1", "0", "0"},
     {"0", "0", "1"}
    }], ")"}]}]], "Input",
 CellChangeTimes->{{3.675795062464519*^9, 3.6757950885931892`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.675795089923311*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e1", "=", 
  RowBox[{"Inverse", "[", "pP", "]"}]}]], "Input",
 CellChangeTimes->{{3.6757950995586033`*^9, 3.675795110921802*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.675795111791499*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e2", "=", 
  RowBox[{"e1", ".", "aA", ".", "pP"}]}]], "Input",
 CellChangeTimes->{{3.675795114663012*^9, 3.675795127104043*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", 
     RowBox[{"-", "9"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "5"}], ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "5"}], ",", "15"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6757951285604773`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e3", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"vals", ",", "vecs"}], "}"}], "=", 
   RowBox[{"Eigensystem", "[", "aA", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6757951462545023`*^9, 3.675795172815318*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"10", ",", "4", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "0", ",", "1"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.675795173466585*^9},
 Background->RGBColor[1, 1, 0.85]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e4", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"vals", ",", "vecs"}], "}"}], "=", 
   RowBox[{"Eigensystem", "[", "pP", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.675795175342413*^9, 3.675795190101692*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.675795191521644*^9},
 Background->RGBColor[0.94, 0.88, 0.94]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e5", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"vals", ",", "vecs"}], "}"}], "=", 
   RowBox[{"Eigensystem", "[", "e2", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6757951982070303`*^9, 3.675795203509034*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"10", ",", "4", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "3", ",", "1"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.675795205050452*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[TextData[{
 "Above: it is seen that ",
 StyleBox["aA",
  FontWeight->"Bold"],
 " and the melange share the same eigenvalues, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"10", ",", "4", ",", "0"}], "}"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.675795271235817*^9, 3.675795308330961*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e6", "=", 
  RowBox[{"e1", ".", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.6757953157737913`*^9, 3.6757953467712107`*^9}, {
  3.675795377887932*^9, 3.675795378087184*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.67579534880503*^9, 3.675795378989855*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e7", "=", 
  RowBox[{
   RowBox[{"e2", ".", "e6"}], "\[Equal]", 
   RowBox[{"10", " ", "e6"}]}]}]], "Input",
 CellChangeTimes->{{3.675795354222021*^9, 3.6757953556320753`*^9}, {
  3.675795421182996*^9, 3.67579543790943*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.675795439535462*^9, 3.6757954796024103`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e8", "=", 
  RowBox[{"e1", ".", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.675795444670579*^9, 3.675795467467942*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.6757954617887487`*^9, 3.6757954822153597`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e9", "=", 
  RowBox[{
   RowBox[{"e2", ".", "e8"}], "\[Equal]", 
   RowBox[{"4", " ", "e8"}]}]}]], "Input",
 CellChangeTimes->{{3.675795470354151*^9, 3.675795503306818*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.675795504731539*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e10", "=", 
  RowBox[{"e1", ".", 
   RowBox[{"{", 
    RowBox[{"3", ",", "0", ",", "1"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.675795511706974*^9, 3.675795529469037*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "3", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.675795530830011*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e11", "=", 
  RowBox[{
   RowBox[{"e2", ".", "e10"}], "\[Equal]", 
   RowBox[{"0", " ", "e10"}]}]}]], "Input",
 CellChangeTimes->{{3.67579553387525*^9, 3.6757955571864033`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.6757955582699833`*^9}]
}, Open  ]],

Cell[TextData[{
 "Above, e6 through e11: it is seen that the eigenvectors of ",
 StyleBox["aA",
  FontWeight->"Bold"],
 " work as eigenvectors for the melange if first dotted with Inverse[",
 StyleBox["pP",
  FontWeight->"Bold"],
 "]."
}], "Text",
 CellChangeTimes->{{3.675795568392641*^9, 3.675795630478424*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e12", "=", 
  RowBox[{"pP", ".", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "1", ",", "1"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.675795653477384*^9, 3.675795688423497*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"-", "1"}], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.675795690100224*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e13", "=", 
  RowBox[{
   RowBox[{"aA", ".", "e12"}], "\[Equal]", 
   RowBox[{"10", " ", "e12"}]}]}]], "Input",
 CellChangeTimes->{{3.6757956928266373`*^9, 3.67579574016284*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.6757957249882793`*^9, 3.675795741358686*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e14", "=", 
  RowBox[{"pP", ".", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.675795745416543*^9, 3.675795762556863*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.675795766244851*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e15", "=", 
  RowBox[{
   RowBox[{"aA", ".", "e14"}], "\[Equal]", 
   RowBox[{"4", " ", "e14"}]}]}]], "Input",
 CellChangeTimes->{{3.675795768104424*^9, 3.6757957916584044`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.6757957932809362`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e16", "=", 
  RowBox[{"pP", ".", 
   RowBox[{"{", 
    RowBox[{"0", ",", "3", ",", "1"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.675795795695195*^9, 3.6757958131390944`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "0", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.675795814649742*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e17", "=", 
  RowBox[{
   RowBox[{"aA", ".", "e16"}], "\[Equal]", 
   RowBox[{"0", " ", "e16"}]}]}]], "Input",
 CellChangeTimes->{{3.67579581703128*^9, 3.675795835817066*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.675795837221884*^9}]
}, Open  ]],

Cell[TextData[{
 "Above, e12 through e17: it is seen that the eigenvectors of the melange \
work as eigenvectors for ",
 StyleBox["aA",
  FontWeight->"Bold"],
 " if first dotted with ",
 StyleBox["pP",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.675795841416251*^9, 3.6757958774300013`*^9}}],

Cell["\<\
9 - 16 Diagonalization of matrices
Find an eigenbasis (a basis of eigenvectors) and diagonalize.\
\>", "Text",
 CellChangeTimes->{{3.768843981827083*^9, 3.768844014448053*^9}}],

Cell[BoxData[
 RowBox[{"9.", "  ", 
  RowBox[{"(", GridBox[{
     {"1", "2"},
     {"2", "4"}
    }], ")"}]}]], "Text",
 CellChangeTimes->{{3.76884507930085*^9, 3.76884508224788*^9}, 
   3.7688451261754093`*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell["Example 4 on p. 342 shows how to get this done.", "Text",
 CellChangeTimes->{{3.768847412435216*^9, 3.7688474285698137`*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.675796319529718*^9, 3.675796321056068*^9}, 
   3.768843098869419*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"aA", "=", 
  RowBox[{"(", GridBox[{
     {"1", "2"},
     {"2", "4"}
    }], ")"}]}]], "Input",
 CellChangeTimes->{{3.67579634847406*^9, 3.675796365293001*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6757963660155478`*^9, 3.768844955498274*^9}]
}, Open  ]],

Cell["Find the eigenvectors", "Text",
 CellChangeTimes->{{3.768847439266926*^9, 3.768847444561389*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e1", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"vals", ",", "vecs"}], "}"}], "=", 
   RowBox[{"Eigensystem", "[", "aA", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6757963702563562`*^9, 3.675796383605921*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "1"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.675796384109077*^9, 3.768844958432481*^9}]
}, Open  ]],

Cell["\<\
Make a matrix of a couple of the eigenvectors, think of this as P from above\
\>", "Text",
 CellChangeTimes->{{3.7688474709845333`*^9, 3.768847481672291*^9}, {
  3.768847566821303*^9, 3.7688475748609753`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e2", "=", 
  RowBox[{"(", GridBox[{
     {"1", 
      RowBox[{"-", "2"}]},
     {"2", "1"}
    }], ")"}]}]], "Input",
 CellChangeTimes->{{3.6757963959684687`*^9, 3.6757964288429127`*^9}, {
  3.675797098381859*^9, 3.675797110987249*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.67579643133106*^9, 3.675797113032092*^9, 
  3.768844960842188*^9}]
}, Open  ]],

Cell["Get the inverse of the eigenvector matrix, this will be P\[Transpose]", \
"Text",
 CellChangeTimes->{{3.768847506648541*^9, 3.768847525870778*^9}, {
  3.768847578548896*^9, 3.768847585764536*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e4", "=", 
  RowBox[{"Inverse", "[", "e2", "]"}]}]], "Input",
 CellChangeTimes->{{3.768847294094512*^9, 3.768847298911841*^9}, {
  3.7688473559263363`*^9, 3.768847356701827*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["2", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["2", "5"]}], ",", 
     FractionBox["1", "5"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.768847299618204*^9, 3.768847358527169*^9}]
}, Open  ]],

Cell["Then muliply to make a conglomerate.", "Text",
 CellChangeTimes->{{3.768847598948132*^9, 3.768847617187505*^9}, 
   3.768847918571117*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e4", ".", "aA", ".", "e2"}]], "Input",
 CellChangeTimes->{{3.7688473631379128`*^9, 3.768847378067699*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7688473825864983`*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["\<\
Above: This is what I need. It is already diagonalized. The answer agrees \
with the text.\
\>", "Text",
 CellChangeTimes->{{3.6757970391497307`*^9, 3.67579705990117*^9}, {
  3.6757971692972813`*^9, 3.675797193864531*^9}, {3.675798143719596*^9, 
  3.6757981543274612`*^9}, {3.7688479698335114`*^9, 3.768847992279163*^9}}],

Cell[BoxData[
 RowBox[{"11.", "  ", 
  RowBox[{"(", GridBox[{
     {
      RowBox[{"-", "19"}], "7"},
     {
      RowBox[{"-", "42"}], "16"}
    }], ")"}]}]], "Text",
 CellChangeTimes->{{3.7688441283500566`*^9, 3.7688441443241987`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.675797203426504*^9, 3.6757972050897017`*^9}, 
   3.7688431062608767`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e1", "=", 
  RowBox[{"(", GridBox[{
     {
      RowBox[{"-", "19"}], "7"},
     {
      RowBox[{"-", "42"}], "16"}
    }], ")"}]}]], "Input",
 CellChangeTimes->{{3.675797227116585*^9, 3.6757972487421503`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "19"}], ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "42"}], ",", "16"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.675797249520859*^9, 3.768848033549138*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e2", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"vals", ",", "vecs"}], "}"}], "=", 
   RowBox[{"Eigensystem", "[", "e1", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6757972560500507`*^9, 3.6757972734393177`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "5"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.675797274369285*^9, 3.768848037048671*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e3", "=", 
  RowBox[{"(", GridBox[{
     {"1", "1"},
     {"2", "3"}
    }], ")"}]}]], "Input",
 CellChangeTimes->{{3.675797279906137*^9, 3.675797300556761*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.67579730175441*^9, 3.768848041417246*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e4", "=", 
  RowBox[{"Inverse", "[", "e3", "]"}]}]], "Input",
 CellChangeTimes->{{3.768848019913669*^9, 3.7688480452390623`*^9}, {
  3.768848076781877*^9, 3.768848077438117*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.768848045943962*^9, 3.7688480780688753`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e5", "=", 
  RowBox[{"e4", ".", "e1", ".", "e3"}]}]], "Input",
 CellChangeTimes->{{3.768848059002654*^9, 3.7688480676127367`*^9}, {
  3.768848120364771*^9, 3.768848121108541*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "5"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7688480697353373`*^9, 3.768848080906377*^9}, 
   3.7688481218090487`*^9},
 Background->RGBColor[1, 1, 0.85]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Det", "[", "e5", "]"}]], "Input",
 CellChangeTimes->{{3.7688484290632544`*^9, 3.7688484323380947`*^9}}],

Cell[BoxData[
 RowBox[{"-", "10"}]], "Output",
 CellChangeTimes->{3.768848433616366*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e6", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"-", "5"}]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.768848445742405*^9, 3.768848464751522*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "5"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.76884846645372*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Det", "[", "e6", "]"}]], "Input",
 CellChangeTimes->{{3.7688484700373573`*^9, 3.768848473256707*^9}}],

Cell[BoxData[
 RowBox[{"-", "10"}]], "Output",
 CellChangeTimes->{3.768848474818513*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigenvalues", "[", "e5", "]"}]], "Input",
 CellChangeTimes->{{3.768848957973927*^9, 3.768848969808338*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "5"}], ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.7688489705588017`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigenvalues", "[", "e6", "]"}]], "Input",
 CellChangeTimes->{{3.768848973205839*^9, 3.768848978120057*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "5"}], ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.7688489791620502`*^9}]
}, Open  ]],

Cell[TextData[{
 "Above: Mathematica has found e5 as the answer, but the text shows e6. e5 \
and e6 have the same determinant, trace, and eigenvalues, and I suspect they \
are similar. However, I do not know how to find P such that e6=",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    StyleBox["P",
     FontSlant->"Plain"], 
    RowBox[{"-", "1"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".e5.P, so I can\[CloseCurlyQuote]t take a green."
}], "Text",
 CellChangeTimes->{{3.6757973628346024`*^9, 3.675797376602488*^9}, {
  3.675797494487727*^9, 3.675797541060495*^9}, {3.7688489970798903`*^9, 
  3.768849040092362*^9}, {3.768849072763383*^9, 3.7688491143619537`*^9}, {
  3.768849908560319*^9, 3.7688499210516148`*^9}}],

Cell[BoxData[
 RowBox[{"13.", "  ", 
  RowBox[{"(", GridBox[{
     {"4", "0", "0"},
     {"12", 
      RowBox[{"-", "2"}], "0"},
     {"21", 
      RowBox[{"-", "6"}], "1"}
    }], ")"}]}]], "Text",
 CellChangeTimes->{{3.768849174443565*^9, 3.768849188466569*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.675797562959461*^9, 3.675797564805546*^9}, 
   3.7688431116846447`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e1", "=", 
  RowBox[{"(", GridBox[{
     {"4", "0", "0"},
     {"12", 
      RowBox[{"-", "2"}], "0"},
     {"21", 
      RowBox[{"-", "6"}], "1"}
    }], ")"}]}]], "Input",
 CellChangeTimes->{{3.67579756804849*^9, 3.6757975980906754`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", 
     RowBox[{"-", "2"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", 
     RowBox[{"-", "6"}], ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6757975991747913`*^9, 3.768849993706369*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e2", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"vals", ",", "vecs"}], "}"}], "=", 
   RowBox[{"Eigensystem", "[", "e1", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.675797603414345*^9, 3.675797628659189*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4", ",", 
     RowBox[{"-", "2"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.675797629380925*^9, 3.768849996354464*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e3", "=", 
  RowBox[{"(", GridBox[{
     {"1", "0", "0"},
     {"2", "1", "0"},
     {"3", "2", "1"}
    }], ")"}]}]], "Input",
 CellChangeTimes->{{3.675797637309307*^9, 3.675797672879972*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.67579767343747*^9, 3.768849998556073*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e4", "=", 
  RowBox[{"Inverse", "[", "e3", "]"}]}]], "Input",
 CellChangeTimes->{{3.768849987121846*^9, 3.76885000734988*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "2"}], ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.768850008016835*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e5", "=", 
  RowBox[{"e4", ".", "e1", ".", "e3"}]}]], "Input",
 CellChangeTimes->{{3.768850017283877*^9, 3.7688500344754353`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "2"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7688500359926033`*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["\<\
Above: The looked-for diagonalized matrix. The text answer agrees.\
\>", "Text",
 CellChangeTimes->{{3.675797784157221*^9, 3.675797813651127*^9}}],

Cell[BoxData[
 RowBox[{"15.", " ", 
  RowBox[{"(", GridBox[{
     {"4", "3", "3"},
     {"3", "6", "1"},
     {"3", "1", "6"}
    }], ")"}]}]], "Text",
 CellChangeTimes->{{3.768850089174371*^9, 3.768850128419339*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.675797837558751*^9, 3.67579783903603*^9}, 
   3.768843117820272*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e1", "=", 
  RowBox[{"(", GridBox[{
     {"4", "3", "3"},
     {"3", "6", "1"},
     {"3", "1", "6"}
    }], ")"}]}]], "Input",
 CellChangeTimes->{{3.675797842103318*^9, 3.6757978677292643`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "6", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.675797868374968*^9, 3.768850146293531*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e2", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"vals", ",", "vecs"}], "}"}], "=", 
   RowBox[{"Eigensystem", "[", "e1", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.675797874573173*^9, 3.6757978919143467`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"10", ",", "5", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "1", ",", "1"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.675797893183846*^9, 3.768850148986514*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e3", "=", 
  RowBox[{"(", GridBox[{
     {"1", "0", 
      RowBox[{"-", "2"}]},
     {"1", 
      RowBox[{"-", "1"}], "1"},
     {"1", "1", "1"}
    }], ")"}]}]], "Input",
 CellChangeTimes->{{3.67579789836561*^9, 3.6757979351428843`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.675797936042266*^9, 3.768850157796607*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e4", "=", 
  RowBox[{"Inverse", "[", "e3", "]"}]}]], "Input",
 CellChangeTimes->{{3.768850164630864*^9, 3.7688501748074093`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", 
      FractionBox["1", "2"]}], ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "3"]}], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.76885017594241*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e5", "=", 
  RowBox[{"e4", ".", "e1", ".", "e3"}]}]], "Input",
 CellChangeTimes->{{3.768850184794529*^9, 3.768850197021886*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"10", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "5", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.768850199446555*^9},
 Background->RGBColor[1, 1, 0.85]]
}, Open  ]],

Cell["\<\
Above: another similar-looking lookalike. The text gives the answer \
{{10,0,0},{0,1,0},{0,0,5}}.\
\>", "Text",
 CellChangeTimes->{{3.6757980648915367`*^9, 3.675798128992465*^9}, {
  3.675798257515628*^9, 3.675798312578252*^9}, {3.768850400560815*^9, 
  3.76885043654138*^9}, {3.768851393047464*^9, 3.768851405293778*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e6", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"10", ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "5"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.768850838863965*^9, 3.768850865015747*^9}, {
  3.768851416238776*^9, 3.768851426735573*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"10", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "5"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.768850866964912*^9, 3.768850891005849*^9}, 
   3.768851428208514*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Det", "[", "e5", "]"}]], "Input",
 CellChangeTimes->{{3.7688508026389*^9, 3.7688508069230213`*^9}}],

Cell[BoxData["50"], "Output",
 CellChangeTimes->{3.768850807915325*^9, 3.768850894086237*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Det", "[", "e6", "]"}]], "Input",
 CellChangeTimes->{{3.76885080924336*^9, 3.768850813195033*^9}}],

Cell[BoxData["50"], "Output",
 CellChangeTimes->{
  3.76885081422472*^9, {3.768850871849586*^9, 3.768850897273102*^9}, 
   3.76885143276097*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigenvalues", "[", "e5", "]"}]], "Input",
 CellChangeTimes->{{3.768851451334001*^9, 3.768851457365445*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10", ",", "5", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.768851458121531*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigenvalues", "[", "e6", "]"}]], "Input",
 CellChangeTimes->{{3.768851459843792*^9, 3.768851464237173*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10", ",", "5", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.7688514652109337`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tr", "[", "e5", "]"}]], "Input",
 CellChangeTimes->{{3.768851472950612*^9, 3.7688514765808687`*^9}}],

Cell[BoxData["16"], "Output",
 CellChangeTimes->{3.768851477377948*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tr", "[", "e6", "]"}]], "Input",
 CellChangeTimes->{{3.768851479091034*^9, 3.768851481844537*^9}}],

Cell[BoxData["16"], "Output",
 CellChangeTimes->{3.7688514825000553`*^9}]
}, Open  ]],

Cell["\<\
Again, I can\[CloseCurlyQuote]t prove they are similar, but with three common \
qualities, it\[CloseCurlyQuote]s suggestive.\
\>", "Text",
 CellChangeTimes->{{3.7688515072275753`*^9, 3.768851519081848*^9}, {
  3.769727042765913*^9, 3.769727049227675*^9}}],

Cell[TextData[{
 "17 - 23 Principal axes. Conic sections\nWhat kind of conic section (or pair \
of straight lines) is given by the quadratic form? Transform it to principal \
axes. Express ",
 StyleBox["x\[Transpose]",
  FontWeight->"Bold"],
 " = ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["x", "1"], ","}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "} in terms of the new coordinate vector ",
 StyleBox["y\[Transpose]",
  FontWeight->"Bold"],
 " = ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    SubscriptBox["y", "1"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "} , as in example 6, p. 344."
}], "Text",
 CellChangeTimes->{{3.768851625878303*^9, 3.768851795873046*^9}}],

Cell[TextData[{
 "17.  ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"7", " ", 
     SuperscriptBox[
      SubscriptBox["x", "1"], "2"]}], "+", 
    RowBox[{"6", " ", 
     SubscriptBox["x", "1"], " ", 
     SubscriptBox["x", "2"]}], "+", 
    RowBox[{"7", " ", 
     SuperscriptBox[
      SubscriptBox["x", "2"], "2"]}]}], "=", "200"}]],
  CellChangeTimes->{{3.6757985686516857`*^9, 3.675798570575069*^9}, {
   3.6758030663695927`*^9, 3.675803167028607*^9}}]
}], "Text",
 CellChangeTimes->{{3.7688515359544888`*^9, 3.7688516155267153`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.675798564421301*^9, 3.675798565994627*^9}, 
   3.768843124411694*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e1", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"7", " ", 
     SuperscriptBox["x1", "2"]}], "+", 
    RowBox[{"6", " ", "x1", " ", "x2"}], "+", 
    RowBox[{"7", " ", 
     SuperscriptBox["x2", "2"]}]}], "==", "200"}]}]], "Input",
 CellChangeTimes->{{3.6757985686516857`*^9, 3.675798570575069*^9}, {
  3.6758030663695927`*^9, 3.675803167028607*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"7", " ", 
    SuperscriptBox["x1", "2"]}], "+", 
   RowBox[{"6", " ", "x1", " ", "x2"}], "+", 
   RowBox[{"7", " ", 
    SuperscriptBox["x2", "2"]}]}], "\[Equal]", "200"}]], "Output",
 CellChangeTimes->{{3.675803147604413*^9, 3.675803168464698*^9}, 
   3.675803223905944*^9, 3.675803791694311*^9, 3.675808845401464*^9, 
   3.675850298583097*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e2", "=", 
  RowBox[{"(", GridBox[{
     {"7", "3"},
     {"3", "7"}
    }], ")"}]}]], "Input",
 CellChangeTimes->{{3.675805001800157*^9, 3.675805034460052*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"7", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "7"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.675805035305924*^9, 3.675808848012775*^9, 
  3.675850302111578*^9}]
}, Open  ]],

Cell["Above: The text answer identifies the matrix as C.", "Text",
 CellChangeTimes->{{3.76885203637757*^9, 3.768852059351838*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e3", "=", 
  RowBox[{"{", 
   RowBox[{"x1", ",", " ", "x2"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.675805039166741*^9, 3.6758050518292837`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x1", ",", "x2"}], "}"}]], "Output",
 CellChangeTimes->{3.675805052162171*^9, 3.675808850558848*^9, 
  3.6758503048236303`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e4", "=", 
  RowBox[{"e3", ".", "e2", ".", "e3"}]}]], "Input",
 CellChangeTimes->{{3.6758051354051237`*^9, 3.6758051407370367`*^9}, {
  3.6758051750652647`*^9, 3.675805198232379*^9}, {3.675805263822184*^9, 
  3.67580526935597*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"x1", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"7", " ", "x1"}], "+", 
     RowBox[{"3", " ", "x2"}]}], ")"}]}], "+", 
  RowBox[{"x2", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"3", " ", "x1"}], "+", 
     RowBox[{"7", " ", "x2"}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.675805142621472*^9, {3.675805177837418*^9, 3.67580519889301*^9}, 
   3.6758052709013166`*^9, 3.675808853798942*^9, 3.67585030790058*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e5", "=", 
  RowBox[{"Expand", "[", "e4", "]"}]}]], "Input",
 CellChangeTimes->{{3.6758040547371807`*^9, 3.675804062773307*^9}, {
  3.67580520347987*^9, 3.6758052104318733`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"7", " ", 
   SuperscriptBox["x1", "2"]}], "+", 
  RowBox[{"6", " ", "x1", " ", "x2"}], "+", 
  RowBox[{"7", " ", 
   SuperscriptBox["x2", "2"]}]}]], "Output",
 CellChangeTimes->{3.6758052109474983`*^9, 3.675805275817811*^9, 
  3.675808856446746*^9, 3.675850311527638*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e6", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"vals", ",", "vecs"}], "}"}], "=", 
   RowBox[{"Eigensystem", "[", "e2", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6758054223511763`*^9, 3.6758054588865013`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"10", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.675805459575575*^9, 3.675808860055255*^9, 
  3.675850313932765*^9}]
}, Open  ]],

Cell["\<\
Above: according to example 6, p. 344, numbered line (10) on p 343 becomes:\
\>", "Text",
 CellChangeTimes->{{3.675805580122849*^9, 3.675805597280918*^9}, {
  3.6758065684568872`*^9, 3.6758065896307*^9}, {3.76885187304109*^9, 
  3.768851877726103*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e7", "=", 
  RowBox[{
   RowBox[{"10", 
    SuperscriptBox["y1", "2"]}], "+", 
   RowBox[{"4", " ", 
    SuperscriptBox["y2", "2"]}]}]}]], "Input",
 CellChangeTimes->{{3.675805611469602*^9, 3.675805642879189*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"10", " ", 
   SuperscriptBox["y1", "2"]}], "+", 
  RowBox[{"4", " ", 
   SuperscriptBox["y2", "2"]}]}]], "Output",
 CellChangeTimes->{3.675805647650454*^9, 3.675808864226454*^9, 
  3.675850318346808*^9}]
}, Open  ]],

Cell["And further,", "Text",
 CellChangeTimes->{{3.675805724181831*^9, 3.675805726452264*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e8", "=", 
  RowBox[{"e7", "\[Equal]", "200"}]}]], "Input",
 CellChangeTimes->{{3.675805730700116*^9, 3.675805746867992*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"10", " ", 
    SuperscriptBox["y1", "2"]}], "+", 
   RowBox[{"4", " ", 
    SuperscriptBox["y2", "2"]}]}], "\[Equal]", "200"}]], "Output",
 CellChangeTimes->{3.675805747963718*^9, 3.6758088669155617`*^9, 
  3.6758503212901*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["\<\
Above: the equation is the same as in the text, except numbering of constants \
is reversed.\
\>", "Text",
 CellChangeTimes->{{3.7688520905509768`*^9, 3.768852123837783*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e9", "=", 
  RowBox[{"e8", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"10", " ", 
         SuperscriptBox["y1", "2"]}], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["y2", "2"]}]}], ")"}], "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{"10", " ", 
          SuperscriptBox["y1", "2"]}], "200"], "+", 
        FractionBox[
         RowBox[{"4", " ", 
          SuperscriptBox["y2", "2"]}], "200"]}], ")"}]}], ",", 
     RowBox[{"200", "\[Rule]", "1"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.675805762136541*^9, 3.675805783300047*^9}, {
  3.675805903592478*^9, 3.675806002851405*^9}, {3.675809799139522*^9, 
  3.6758098055693693`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    SuperscriptBox["y1", "2"], "20"], "+", 
   FractionBox[
    SuperscriptBox["y2", "2"], "50"]}], "\[Equal]", "1"}]], "Output",
 CellChangeTimes->{3.6758057837991*^9, 3.675806004799775*^9, 
  3.675808870654354*^9, 3.6758098067758303`*^9, 3.675850324469273*^9}]
}, Open  ]],

Cell["\<\
Above: this is the line where the type of conic section is identified. Here \
there are different coefficients to the squared terms, and the signs are the \
same. This identifies an ellipse.\
\>", "Text",
 CellChangeTimes->{{3.6758613124492283`*^9, 3.6758613654239264`*^9}, 
   3.768861280382318*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e10", "=", 
  RowBox[{"e2", "-", 
   RowBox[{"10", " ", 
    RowBox[{"IdentityMatrix", "[", "2", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.675808660605842*^9, 3.675808668227743*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     RowBox[{"-", "3"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.675808669687587*^9, 3.6758088738523808`*^9, 
  3.6758503276454287`*^9}]
}, Open  ]],

Cell["\<\
Above: the part of example 6, p. 344 where normalized eigenvectors are \
calculated.\
\>", "Text",
 CellChangeTimes->{{3.6758500023959513`*^9, 3.675850040993045*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e11", "=", 
  RowBox[{"Thread", "[", 
   RowBox[{
    RowBox[{"e10", ".", "e3"}], "\[Equal]", "0"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.675808787378152*^9, 3.675808823403378*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "3"}], " ", "x1"}], "+", 
     RowBox[{"3", " ", "x2"}]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"3", " ", "x1"}], "-", 
     RowBox[{"3", " ", "x2"}]}], "\[Equal]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6758088247595043`*^9, 3.6758088807491217`*^9, 
  3.675850332051886*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e12", "=", 
  RowBox[{"Solve", "[", "e11", "]"}]}]], "Input",
 CellChangeTimes->{{3.675808913837821*^9, 3.675808922439399*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x2", "\[Rule]", "x1"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.6758089229711313`*^9, 3.6758503345127707`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e16", "=", 
  RowBox[{"{", 
   RowBox[{"1", ",", "1"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.675809287273285*^9, 3.6758092929575863`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.675809295103465*^9, 3.6758503377326937`*^9}]
}, Open  ]],

Cell["\<\
Above: the components of the first eigenvector have been calculated.\
\>", "Text",
 CellChangeTimes->{{3.675850087632106*^9, 3.675850103087735*^9}, 
   3.76885192310048*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e13", "=", 
  RowBox[{"e2", "-", 
   RowBox[{"4", " ", 
    RowBox[{"IdentityMatrix", "[", "2", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.675809172893449*^9, 3.675809190449519*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.675809192724547*^9, 3.675850342078147*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e14", "=", 
  RowBox[{"Thread", "[", 
   RowBox[{
    RowBox[{"e13", ".", "e3"}], "\[Equal]", "0"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6758091991984663`*^9, 3.675809221093629*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"3", " ", "x1"}], "+", 
     RowBox[{"3", " ", "x2"}]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"3", " ", "x1"}], "+", 
     RowBox[{"3", " ", "x2"}]}], "\[Equal]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6758092216440783`*^9, 3.675850344779887*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e15", "=", 
  RowBox[{"Solve", "[", "e14", "]"}]}]], "Input",
 CellChangeTimes->{{3.6758092255336857`*^9, 3.67580923481713*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x2", "\[Rule]", 
    RowBox[{"-", "x1"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.6758092354965*^9, 3.675850347531872*^9}]
}, Open  ]],

Cell["\<\
Above: This looks good. However, the vectors are supposed to be orthonormal.  \
They need to be normalized.\
\>", "Text",
 CellChangeTimes->{{3.675812531772868*^9, 3.675812573186747*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e16n", "=", 
  RowBox[{"Normalize", "[", "e16", "]"}]}]], "Input",
 CellChangeTimes->{{3.675812590847597*^9, 3.675812600089807*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", 
    SqrtBox["2"]], ",", 
   FractionBox["1", 
    SqrtBox["2"]]}], "}"}]], "Output",
 CellChangeTimes->{3.675812601045281*^9, 3.6758503507870893`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e17", "=", 
  RowBox[{"{", 
   RowBox[{"1", ",", 
    RowBox[{"-", "1"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.675809296184923*^9, 3.675809306658732*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"-", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{3.675809409270677*^9, 3.675850355183651*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e17n", "=", 
  RowBox[{"Normalize", "[", "e17", "]"}]}]], "Input",
 CellChangeTimes->{{3.675812608079423*^9, 3.6758126184332533`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", 
    SqrtBox["2"]], ",", 
   RowBox[{"-", 
    FractionBox["1", 
     SqrtBox["2"]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.675812619001316*^9, 3.675850388563733*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e18", "=", 
  RowBox[{"(", GridBox[{
     {
      FractionBox["1", 
       SqrtBox["2"]], 
      FractionBox["1", 
       SqrtBox["2"]]},
     {
      FractionBox["1", 
       SqrtBox["2"]], 
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["2"]]}]}
    }], ")"}]}]], "Input",
 CellChangeTimes->{{3.675809411320014*^9, 3.675809434981839*^9}, {
  3.675812639884056*^9, 3.675812657971212*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", 
      SqrtBox["2"]], ",", 
     FractionBox["1", 
      SqrtBox["2"]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", 
      SqrtBox["2"]], ",", 
     RowBox[{"-", 
      FractionBox["1", 
       SqrtBox["2"]]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.675809435511037*^9, 3.6758126610139713`*^9, 
  3.675850391354137*^9}]
}, Open  ]],

Cell["Above: the matrix of eigenvectors is put together by hand.", "Text",
 CellChangeTimes->{{3.675850253212266*^9, 3.675850277018332*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"e19", "=", 
   RowBox[{"{", 
    RowBox[{"y1", ",", "y2"}], "}"}]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.675809545523562*^9, 3.675809554252121*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"y1", ",", "y2"}], "}"}]], "Output",
 CellChangeTimes->{3.6758095598078203`*^9, 3.675850394805415*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e20", "=", 
  RowBox[{"Thread", "[", 
   RowBox[{
    RowBox[{"e18", ".", "e19"}], "\[Equal]", "e3"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.675809561579171*^9, 3.675809587930202*^9}, {
  3.67580962626504*^9, 3.675809629911345*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["y1", 
      SqrtBox["2"]], "+", 
     FractionBox["y2", 
      SqrtBox["2"]]}], "\[Equal]", "x1"}], ",", 
   RowBox[{
    RowBox[{
     FractionBox["y1", 
      SqrtBox["2"]], "-", 
     FractionBox["y2", 
      SqrtBox["2"]]}], "\[Equal]", "x2"}]}], "}"}]], "Output",
 CellChangeTimes->{3.675809588574717*^9, 3.67580963104748*^9, 
  3.675812713542501*^9, 3.675850397458499*^9}]
}, Open  ]],

Cell["\<\
This mostly matches the text. Perhaps the rotation would be opposite to the \
text. In Wikipedia is an article on the Principal axis theorem, which was of \
use.\
\>", "Text",
 CellChangeTimes->{{3.675810253266831*^9, 3.6758103131839743`*^9}, {
  3.675812756220752*^9, 3.675812824577794*^9}, {3.675813261300084*^9, 
  3.675813262530966*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SqrtBox["20"], " ", 
       RowBox[{"Cos", "[", "t", "]"}], " ", 
       RowBox[{"Cos", "[", 
        FractionBox["\[Pi]", "4"], "]"}]}], "-", 
      RowBox[{
       SqrtBox["50"], " ", 
       RowBox[{"Sin", "[", "t", "]"}], " ", 
       RowBox[{"Sin", "[", 
        FractionBox["\[Pi]", "4"], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       SqrtBox["20"], " ", 
       RowBox[{"Cos", "[", "t", "]"}], " ", 
       RowBox[{"Sin", "[", 
        FractionBox["\[Pi]", "4"], "]"}]}], "+", 
      RowBox[{
       SqrtBox["50"], " ", 
       RowBox[{"Sin", "[", "t", "]"}], " ", 
       RowBox[{"Cos", "[", 
        FractionBox["\[Pi]", "4"], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Thickness", "[", "0.003", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.675813005421507*^9, 3.675813052116282*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.003], Opacity[1.], 
    FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
+y+j5ZmwLZfqPYl5Vm9J1l5jJqS3sfiOOOc8ru7Qe27FhFyL4TefcM5R1D53
kn2CCWdEjQpNMLev/fIt7QYTFD1PDUjgeg+/wZD4ew+vl7yjcAz3Q+vkyya1
Apzjc6uyCnG/tO7014ppZ8Kdqktd+5MIdG/x1OPyCSZ4F7vdTsP9ltlUntsv
IQziE6MvfuJ+9CtVs1muLwxd40GiO+IJVG65yNA7WBiODQke6LmFc5p2yhqd
RGFI/P5v9SDOPdmhZenfnwqDy731F/uxPjwnKoO024TBcc22Vc1YP1LM5//1
0GOBkQrpY4NzzzKBXbbjm1hwOrU0SjOSQE2hH0XOHGRBUo+6yAjWp7acR993
hrJg58Ve/bNYv0ZetfYUf2VB4+fdF1Vw7lmg5WslMcwCF5X8VioA62PqpdLt
ImzQ2/UvdSfOQQfEZ68W67HhwPT6U0cv4P323L/V8jIbNsTvVzL1wvVS2rCY
0BEB/r3fOqXHsP5c6qb3moiA9674E6PO+Lj73ABqnwiUPLSUX4BzkI6a516z
QBHYl9ZQ4+iAc061VzGzSQSKFfrSb9tgPRO29uWdE4XZ6ZbLTZsJNGe52eCZ
KFHoM1ygmrIJ31+N9JO3aaLglORFOpgS6Ms3hz6Ht6JgoNf0sxHPG5dd2l/1
FcQgx3CHuMtKAjHTFSPs8sXA4s5yL4eFBNJPXb62970YMAo1dQeVCTTsXdV7
5ocYZAu+Nj0/H9fPhkPqx4TFYbnVeKiPPIHIQ+a3aNvFQW4QAlZLE0jlpLTj
5x/isGt7ZsWDST7imC/MHBwSh5atjJvfx/ioKGprIlNYAmKml1dJjfBRXp5x
FF9DAr4eb3Y+0MdHFW0t/DY3CZj6/Cw25xcfrQ668FNYUBIm1/nbWL/lI/kP
m8zuy0iCV0po94pKPnrqHaJoqiIJSz2ZvWJlfJRy2XDmiKkkVJ07uTWT4qO6
+gLlrRGSUCQ+GJ7wlI9ujTipNIhKQaZdVN457Fdilx20WnVdCgbdNarnYD+j
Hb37y7oEKTBM+nFz0IqPVFMuJJtkSMGMnNZU6U4+2hHNa1r9Ugral5jG7DHn
o71mh/P7m6XAd2WggfYqPppdmbfstJI0ON0u0s4i+EjYpnRlcZY0pF/Pn/ld
jf1e/YfbWs+kwTQv69RQGQ/l/dUeupYrDdFyk3enCnmowcDowNa30iCq4ukw
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
     "]]}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-5.916077723004504, 5.916079548853602}, {-5.916078340041437, 
   5.916079342570704}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.675813061173345*^9, 3.675850401291378*^9}]
}, Open  ]],

Cell["\<\
Above: Would this be it, or would it go the other way? If I had to label x1 \
and x2 axes, which would be which?\
\>", "Text",
 CellChangeTimes->{{3.675813207845455*^9, 3.67581322131641*^9}, {
  3.675813624165895*^9, 3.675813638477971*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"7", " ", 
      SuperscriptBox["x1", "2"]}], "+", 
     RowBox[{"6", " ", "x1", " ", "x2"}], "+", 
     RowBox[{"7", 
      SuperscriptBox["x2", "2"]}]}], "\[Equal]", "200"}], ",", 
   RowBox[{"{", 
    RowBox[{"x1", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x2", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
   RowBox[{"ContourStyle", "\[Rule]", 
    RowBox[{"Thickness", "[", "0.003", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.675864627988832*^9, 3.6758646699702253`*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJx1mA1QVWUax/kIREHg4r33CGmtjauIowKuWRPLeVYLS2nWL0xLSCoKdZGP
bERA1m1mvQqBrKtXLIPS9WtjTSfSRPA8gKS7G360FpFCpiPUrikfC0kruvee
5/1fZ5zpnTNz572ce877Pu/z/J7/nzEvZc5P8/Hy8orw9vJyf/76bG/c2d4w
+qs5evTB5KCohkkj6Ldbxj6zZWy3XtBVP+ThghGUs3/xuVFRN/Tbd91jBPVk
XDyScbFDv6vmjWruZQ4rfazmPmr+jpof25LdOf5FKyWZz/9WL7hZ92N7vpUy
02pik3e061nu245YqWTKprIVS1r04zXuYaWz5u+/1Ed+Ftjh12ulK2+ura9d
dkavS6qeuuc5G5U9knpsn8Wpz6vKmTov1Uayjq/iKibU3bnyimteGOG64Q9G
u/vxGa77p4QXryh/10j8+lrp4SobOcznf2rErHx/fWmzjVZGvvdyb9s5Iy98
0xdZ3TaqlPcb66bf3j85xk6H01+b/aFx2Qgu6Xv/cLydnk2vCinp+9bIivfv
fDnLTh/Ifo3sAEdWgMNON7cXfu+6jGPm93aqb/6fdXtQt/FTVsSMX7bZaabE
27jYlHypyTX/Z8+kb3omdRvVgRuf3TNGo8a+yKWbG/qMHz551DgUo9Fh8zn9
xuDOQxvWJGjUEBXdv9Vxyxg92Tf+8aUalczqHfLg5p+MHU+HLDyzSqOHnnG/
4LbREJT01j6HRk825eZFz7xrXJ39o//WTRpd/bB1XnHZXSNrwJk54NQowVyP
Nx946vSLH+3WaNTccQdXZ/pweZKPrW6PRn4v5fjFHPPhFW/vXf72Xo0GzTzw
5TXPty1/Y59G07a2zE2Z6cf1sX8pOOv6+/CiPxU3Ov34yU2LdxdVaFRtrt+f
x5nr0qjVnWZdQ3jon+vOlJRqlPRJZcfffhPALeklX6aXaDT52nzXFcDXM/7r
mJGj0UozT4ayb2K7T2KKRl7ltX7ltcM4sJpcl0YFtafya08F8saeiH+sjNTo
EfM9QexIHbkhdaRGJ6KDGqODhjPOo9jpHsH86qXYVeFH7dRq5kkId66tcF12
Wuf+6AzhpiUDQ7MX2Wlh4Yyd2ypDucCdVhY7PW3Gy8Jhr10bf7LVRgXuP5dZ
GPk2Pc49wvhyzLRDaxJtNO6k+0FhPNUcNhprri+Mo2u+21V80ErzffNPXaAR
jPq5I3Xmmau6Y+/75knyO5okz1HxDaNYeQ9PkPdSm6yD42Vd9LWsk9fLuilE
9sFzZF+UJ/vkxbJvapQ4cKHEhTokTvyNxI0iZv5r9PWjds54s3tR/+MhtG7B
u6tL6u28Q+JMRyTufErOgf4o58KRck60Qc6NC+UcSZ0rD5NzJnXunC15QP+R
vOAYyRNSecMpkkcUIHnFNZJ3dHXLmMWz3tFYk7wkljzlxyRvSeUx+5rxfYDi
9vr3lx7QOFTynlQd8ENSF6TqhBOlbkjVEXdIXemqzvgFqTtd1SFHSV3qqk65
TOpWV3XMl6Su9TtS51wnda+//gMvfSJa4ybhgq44wf8WbuhtwhEGxxVnuEK4
oyP+N4RLepZwisHxbOEY7xSu6RbhHB8U7umKgwwu5wsnOVm4qSuO8nvXExZ0
tlToyC9w+YDFmR+RauOWNvdoNm7ecA8rg7MfpI1OP37UypsVR1XeM7iq8p4/
UnPVd7B+A/UArt6Rvsa5MZV5MZU9RneXe4QxODquM81SSWF860LxgOsyIqrO
hVedszC4Of942McT51k4LS074bhj0EC9PzHnq+bMMV7csKow0Ht3KIObodnb
JiyLD+WKL1K3Hsj1YfBkyBtzXZcvX5144srEE8EMbr61K7JoV2QwX3hKS159
3o/Bq+fN4c+np1lcVxCDmy8kb6j7vDKQy37xeZ73xQAGD1sHE1zXvU98j/vw
OzzHb8q+y9esQbx9QVfOsBR/z3uxjhK1LqwT68Y+sC/sM0TtG3HIN+MdymY4
w70YcUMcEVfEGXEfUOcwLb21e+fse+cETs7ZfT79VxF9htIvvF/0i+ecce7I
g8b78qT6vjxCXvmqeamaK33CuaJPjN+JPmHfaFOfGLWiTzx5q/QJ3xJ9YpwU
fcJdVlOfGMh71AHqAnWCukEdoa5QZ6g71CHqEnWKukUdm8dXZOcUZ9oSZ9r3
nroHBz4bHbvm9CU795//+6zxD9/jBLgBjoAr4Ay4Aw6BS+AUuAWOgWvgHLgH
DoKL4CS4CY6Cq+AsuAsOg8vLRY94uJ2rOD5dcV3pEQ/3r6g+gL6APoG+gT6C
voI+g76DPoS+hD6FvoU+hr6GPvep6ns4j3LVF18R/eHpo+ir6LPou+jD6Mvo
0+jb6OPIL131+XbV96OUDlD6w6MToBugI35OZ/ycLkF9QtdA50D3PKZ0EHQR
dBJ0E/gAXQWdBd0FHQZdBv6MEr1Br4re4N+L3vDoOug857LabeuCh/Pra7Nu
OsLv6ULoROhG6EjoSuhM8BQ6FLoUOhW6FToWnFV6g4KVDoYuhk5WeerR0dDV
/kpnQ3c/qHQ4dDk4C90OHQ9dD50P3Q/OwheUKp8A3wAfAV8B7qo69/gQ+BL4
FPgWcBe+Bj4H8e9SPkjpDY9Pgm+Cj4Kvgs+C7wJn4cvSlU+LVb5t/S2Tox6f
B87uFe56fCJ8I3wkfCU4W6N853rlQ+FLVymfCt8KHwtfC5+LeoAPhi8Gl+Gb
4aPhq+Gz4bvBYfhy+HT49jjpgzrqFxyOlb5Jqo/qqq8SuDtX+i4tlD6sgx+q
T5Pq2wTuDpe+Tk7p8wQ+KR1AShcQuLtRdAM1i44g8E/pGVJ6hsDdRaJLqEh0
CoGvSsd4PvE97sPv8Bw8F+/Be7EOh1oX1ol1Yx/YF/aJfSMOiAvihLglqTgi
rogz4o5zwLngnHBu8eoc7/9/zP8BAVpPZQ==
   "], {{}, {}, 
    TagBox[
     TooltipBox[
      {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.003], 
       LineBox[CompressedData["
1:eJwl1FV4EAQUBeCNERuMWBCjW1Bp6Q7pcpTSIGLQ3d0g3aGE0iEl0l2ChCLd
KCjdnf8+Hv5zH8/TuRmat4tuGxgQEJBSxNxYBBGbOMQlHsGEEJ8EhJKQRCQm
CWGEE0EkSUlGclIQFdNDKlKThrSkIz0ZyEgmMpOFrHxANrLzIR/xMTnISS5y
k4e85OMT8lOAghSiMEUoSjGKU4KSlKI0ZShLOT6lPBWoSCUqU4WqVKM6NajJ
Z0RTi9rUoS71+JwvqE8DGtKIxjShKc1ozpe04Cta8jXf8C3f0YrWtKEt7WhP
BzrSic50oSvd6E4PetKL3vShL/3ozwAGMojBDGEowxjOCEYyiu8ZzRjGMo7x
TGAik5jMFKYyjenMYCaz+IEfmc0c5jKPn/iZ+SxgIYtYzBKWsozlrOAXVrKK
1axhLb+yjt9YzwY2sonNbGEr29jODnayi93sYS/72M/vHOAgf3CIwxzhKH/y
F8f4m+Oc4CSnOM0ZznKO81zgIpe4zBX+4V+uco3/+J/r3OAmt7jNHe5yj/s8
4CGPeMwTnvKM57zgJa94zRveEjP+QGIRRGziEJd4BBNCfBIQSkISkZgkhBFO
BJEkJRnJSUFU4Ps/8w7FSYLJ
        "]]},
      RowBox[{
        RowBox[{
          RowBox[{"7", " ", 
            SuperscriptBox["x1", "2"]}], "+", 
          RowBox[{"6", " ", "x1", " ", "x2"}], "+", 
          RowBox[{"7", " ", 
            SuperscriptBox["x2", "2"]}]}], "\[Equal]", "200"}]],
     Annotation[#, 
      7 $CellContext`x1^2 + 6 $CellContext`x1 $CellContext`x2 + 
       7 $CellContext`x2^2 == 200, "Tooltip"]& ]}],
  AspectRatio->1,
  DisplayFunction->Identity,
  Frame->True,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{"DefaultBoundaryStyle" -> Automatic},
  PlotRange->{{-10, 10}, {-10, 10}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6758646501106977`*^9, 3.675864671331501*^9}}]
}, Open  ]],

Cell["Above: Bravo home team.", "Text",
 CellChangeTimes->{{3.67586468266527*^9, 3.675864690977072*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"19.", "  ", "3", 
    SuperscriptBox[
     SubscriptBox["x", "1"], "2"]}], "+", 
   RowBox[{"22", 
    SubscriptBox["x", "1"], 
    SubscriptBox["x", "2"]}], "+", 
   RowBox[{"3", 
    SuperscriptBox[
     SubscriptBox["x", "2"], "2"]}]}], "=", "0"}]], "Text",
 CellChangeTimes->{{3.768852180009883*^9, 3.768852265196312*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6758490543993273`*^9, 3.6758490562543592`*^9}, 
   3.768843147802367*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e1", "=", 
  RowBox[{"(", GridBox[{
     {"3", "11"},
     {"11", "3"}
    }], ")"}]}]], "Input",
 CellChangeTimes->{{3.6758490808334208`*^9, 3.6758490824280987`*^9}, {
  3.675849128899067*^9, 3.675849151058461*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.675849153953864*^9, 3.675850411409096*^9}]
}, Open  ]],

Cell["Above: The matrix identified in the text answer.", "Text",
 CellChangeTimes->{{3.768852357327198*^9, 3.7688523739975853`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e2", "=", 
  RowBox[{"{", 
   RowBox[{"x1", ",", "x2"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6758491694427443`*^9, 3.6758491767216167`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x1", ",", "x2"}], "}"}]], "Output",
 CellChangeTimes->{3.6758491776775637`*^9, 3.675850413251844*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e3", "=", 
  RowBox[{"e2", ".", "e1", ".", "e2"}]}]], "Input",
 CellChangeTimes->{{3.67584918618359*^9, 3.6758491950412073`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"x2", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"11", " ", "x1"}], "+", 
     RowBox[{"3", " ", "x2"}]}], ")"}]}], "+", 
  RowBox[{"x1", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"3", " ", "x1"}], "+", 
     RowBox[{"11", " ", "x2"}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.675849196493258*^9, 3.675850418236355*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e4", "=", 
  RowBox[{"Expand", "[", "e3", "]"}]}]], "Input",
 CellChangeTimes->{{3.6758491995748377`*^9, 3.675849206154212*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"3", " ", 
   SuperscriptBox["x1", "2"]}], "+", 
  RowBox[{"22", " ", "x1", " ", "x2"}], "+", 
  RowBox[{"3", " ", 
   SuperscriptBox["x2", "2"]}]}]], "Output",
 CellChangeTimes->{3.6758492071439857`*^9, 3.6758504211956997`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e5", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"vals", ",", "vecs"}], "}"}], "=", 
   RowBox[{"Eigensystem", "[", "e1", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6758492174066973`*^9, 3.675849233065631*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"14", ",", 
     RowBox[{"-", "8"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.675849234396235*^9, 3.6758504240584373`*^9}]
}, Open  ]],

Cell["\<\
Below: According to example6, p. 344, expression (10) on p 343 becomes\
\>", "Text",
 CellChangeTimes->{{3.6758496346148577`*^9, 3.675849655933055*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e6", "=", 
  RowBox[{
   RowBox[{"14", " ", 
    SuperscriptBox["y1", "2"]}], "-", 
   RowBox[{"8", " ", 
    SuperscriptBox["y2", "2"]}]}]}]], "Input",
 CellChangeTimes->{{3.6758496854092827`*^9, 3.6758497363309593`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"14", " ", 
   SuperscriptBox["y1", "2"]}], "-", 
  RowBox[{"8", " ", 
   SuperscriptBox["y2", "2"]}]}]], "Output",
 CellChangeTimes->{3.675849835782938*^9, 3.6758504271710377`*^9}]
}, Open  ]],

Cell["Below: and further,", "Text",
 CellChangeTimes->{{3.675849814833509*^9, 3.675849818608222*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e7", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"14", " ", 
     SuperscriptBox["y1", "2"]}], "-", 
    RowBox[{"8", " ", 
     SuperscriptBox["y2", "2"]}]}], "\[Equal]", "0"}]}]], "Input",
 CellChangeTimes->{{3.675849822691289*^9, 3.675849847423749*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"14", " ", 
    SuperscriptBox["y1", "2"]}], "-", 
   RowBox[{"8", " ", 
    SuperscriptBox["y2", "2"]}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.675849848394973*^9, 3.6758504304264803`*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["\<\
Above: this is the line where the type of conic section is identified. The \
signs on the squared terms are opposite, which would normally indicate a \
hyperbola. However, the equation is equal to zero, and I guess that\
\[CloseCurlyQuote]s what makes it a pair of lines. The equation appears in \
the text answer.\
\>", "Text",
 CellChangeTimes->{{3.6758612185417643`*^9, 3.675861281594664*^9}, 
   3.7068172066445093`*^9, {3.768852413156426*^9, 3.768852421020061*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e8", "=", 
  RowBox[{"e1", "-", 
   RowBox[{"14", " ", 
    RowBox[{"IdentityMatrix", "[", "2", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.6758504761214*^9, 3.675850519212689*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "11"}], ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", 
     RowBox[{"-", "11"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6758505227226143`*^9}]
}, Open  ]],

Cell["\<\
Above: the part of example 6, p. 344 where normalized eigenvectors are \
calculated.\
\>", "Text",
 CellChangeTimes->{{3.675850571609209*^9, 3.675850614832107*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e9", "=", 
  RowBox[{"Thread", "[", 
   RowBox[{
    RowBox[{"e8", ".", "e2"}], "\[Equal]", "0"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.675850620654792*^9, 3.675850652831132*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "11"}], " ", "x1"}], "+", 
     RowBox[{"11", " ", "x2"}]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"11", " ", "x1"}], "-", 
     RowBox[{"11", " ", "x2"}]}], "\[Equal]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{3.675850654318574*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e10", "=", 
  RowBox[{"Solve", "[", "e9", "]"}]}]], "Input",
 CellChangeTimes->{{3.6758506593335257`*^9, 3.6758506703826237`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x2", "\[Rule]", "x1"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.675850671406876*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e11", "=", 
  RowBox[{"{", 
   RowBox[{"1", ",", "1"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.675850679389927*^9, 3.675850694021894*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.675850695745117*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e12", "=", 
  RowBox[{"Normalize", "[", "e11", "]"}]}]], "Input",
 CellChangeTimes->{{3.67585069783823*^9, 3.6758507053735437`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", 
    SqrtBox["2"]], ",", 
   FractionBox["1", 
    SqrtBox["2"]]}], "}"}]], "Output",
 CellChangeTimes->{3.6758507061948843`*^9}]
}, Open  ]],

Cell["Above: one normalized vector down, one to go.", "Text",
 CellChangeTimes->{{3.675850748085293*^9, 3.675850757971805*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e13", "=", 
  RowBox[{"e1", "+", 
   RowBox[{"8", " ", 
    RowBox[{"IdentityMatrix", "[", "2", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.6758507657775583`*^9, 3.675850793540265*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"11", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "11"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.675850795241555*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e14", "=", 
  RowBox[{"Thread", "[", 
   RowBox[{
    RowBox[{"e13", ".", "e2"}], "\[Equal]", "0"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.675850807719318*^9, 3.675850834353512*^9}, {
  3.675850867218408*^9, 3.675850867648507*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"11", " ", "x1"}], "+", 
     RowBox[{"11", " ", "x2"}]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"11", " ", "x1"}], "+", 
     RowBox[{"11", " ", "x2"}]}], "\[Equal]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{3.675850835227594*^9, 3.675850869366069*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e15", "=", 
  RowBox[{"Solve", "[", "e14", "]"}]}]], "Input",
 CellChangeTimes->{{3.675850838249892*^9, 3.675850845161147*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x2", "\[Rule]", 
    RowBox[{"-", "x1"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.6758508458247337`*^9, 3.675850872214913*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e16", "=", 
  RowBox[{"{", 
   RowBox[{"1", ",", 
    RowBox[{"-", "1"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6758508842459803`*^9, 3.675850892575685*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"-", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6758508939394817`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e17", "=", 
  RowBox[{"Normalize", "[", "e16", "]"}]}]], "Input",
 CellChangeTimes->{{3.6758508982538843`*^9, 3.675850905751099*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", 
    SqrtBox["2"]], ",", 
   RowBox[{"-", 
    FractionBox["1", 
     SqrtBox["2"]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.675850907320622*^9}]
}, Open  ]],

Cell["Above: both normalized eigenvectors have been found.", "Text",
 CellChangeTimes->{{3.6758509201839*^9, 3.675850929630332*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e18", "=", 
  RowBox[{"(", GridBox[{
     {
      FractionBox["1", 
       SqrtBox["2"]], 
      FractionBox["1", 
       SqrtBox["2"]]},
     {
      FractionBox["1", 
       SqrtBox["2"]], 
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["2"]]}]}
    }], ")"}]}]], "Input",
 CellChangeTimes->{{3.675850970517714*^9, 3.6758510162278433`*^9}, {
  3.6758511848709993`*^9, 3.675851243012959*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", 
      SqrtBox["2"]], ",", 
     FractionBox["1", 
      SqrtBox["2"]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", 
      SqrtBox["2"]], ",", 
     RowBox[{"-", 
      FractionBox["1", 
       SqrtBox["2"]]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.675851017567687*^9, 3.675851244750414*^9}]
}, Open  ]],

Cell["\<\
Above: the matrix of eigenvectors is put together by hand. The expression \
appears in the text.\
\>", "Text",
 CellChangeTimes->{{3.675851041972035*^9, 3.67585105673837*^9}, {
  3.768852469194273*^9, 3.76885247821821*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e19", "=", 
  RowBox[{"{", 
   RowBox[{"y1", ",", "y2"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.675851060559675*^9, 3.6758510680994062`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"y1", ",", "y2"}], "}"}]], "Output",
 CellChangeTimes->{3.675851069491789*^9, 3.675851249260213*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e20", "=", 
  RowBox[{"Thread", "[", 
   RowBox[{
    RowBox[{"e18", ".", "e19"}], "==", "e2"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6758510742552547`*^9, 3.675851145351885*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["y1", 
      SqrtBox["2"]], "+", 
     FractionBox["y2", 
      SqrtBox["2"]]}], "\[Equal]", "x1"}], ",", 
   RowBox[{
    RowBox[{
     FractionBox["y1", 
      SqrtBox["2"]], "-", 
     FractionBox["y2", 
      SqrtBox["2"]]}], "\[Equal]", "x2"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.675851108049032*^9, {3.675851138419676*^9, 3.675851146536854*^9}, 
   3.675851252266265*^9},
 Background->RGBColor[0.87, 0.94, 1]]
}, Open  ]],

Cell["\<\
Above: it looks like something has a 45 degree rotation. But it is not an \
ellipse. This time the answers match the text well. The text says pair of \
straight lines, which is obvious, since all factors are linear.\
\>", "Text",
 CellChangeTimes->{{3.675851267531556*^9, 3.675851289450561*^9}, {
  3.675851797236515*^9, 3.67585180593093*^9}, {3.675851842289693*^9, 
  3.675851855681223*^9}, {3.6758527788859873`*^9, 3.6758527790124073`*^9}, {
  3.7688601873880043`*^9, 3.768860198867716*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"3", " ", 
      SuperscriptBox["x1", "2"]}], "+", 
     RowBox[{"22", " ", "x1", " ", "x2"}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox["x2", "2"]}]}], "\[Equal]", "0"}], ",", 
   RowBox[{"{", 
    RowBox[{"x1", ",", 
     RowBox[{"-", "50"}], ",", "50"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x2", ",", 
     RowBox[{"-", "50"}], ",", "50"}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
   RowBox[{"ContourStyle", "\[Rule]", 
    RowBox[{"Thickness", "[", "0.003", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.675864274752337*^9, 3.675864307566042*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
pfA/oyVZTQ==
   "], {{}, {}, 
    TagBox[
     TooltipBox[
      {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.003], 
       LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
         19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
        53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 
        70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 
        87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 
        103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 
        117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 
        131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 
        145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 
        159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 
        173, 174, 175, 176, 177, 178, 179, 180, 181, 182}], 
       LineBox[CompressedData["
1:eJwN0Gc+FwAAANA/iSRRaZNRSkSDUpEVWloaNNDPAXSvLlBkNIkSlRGVtpaU
VRTqfXgXeIm1V8vrggKBwDWuc4N6GrhJI00008ItbnOHu9zjPq208YB2OnjI
Izp5TBfdPOEpz+ihlz76ec4Ag7zgJa8Y4jVveMs73vOBjwzzic984SvfGOE7
o/zgJ2OMM8EkU/ziN9PM8Ie/zDLHPP8IyAoimAWEsJBQwlhEOIuJYAmRLCWK
aJaxnBXEsJJVrGYNa1nHemKJYwPxJJBIEhvZRDKb2UIKW0kljW2kk8F2drCT
XWSSxW72kM1e9rGfHHI5QB75FFBIEQcppoRSDnGYIxzlGGUc5wQnOcVpyjnD
Wc5xngoqucBFLnGZKqqp4Qr/Ab+0U2I=
        "]]},
      RowBox[{
        RowBox[{
          RowBox[{"3", " ", 
            SuperscriptBox["x1", "2"]}], "+", 
          RowBox[{"22", " ", "x1", " ", "x2"}], "+", 
          RowBox[{"3", " ", 
            SuperscriptBox["x2", "2"]}]}], "\[Equal]", "0"}]],
     Annotation[#, 
      3 $CellContext`x1^2 + 22 $CellContext`x1 $CellContext`x2 + 
       3 $CellContext`x2^2 == 0, "Tooltip"]& ]}],
  AspectRatio->1,
  DisplayFunction->Identity,
  Frame->True,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{"DefaultBoundaryStyle" -> Automatic},
  PlotRange->{{-50, 50}, {-50, 50}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.675864313517419*^9}]
}, Open  ]],

Cell[TextData[{
 "Above: with new tool, ",
 StyleBox["ContourPlot", "Input"],
 ", the plot is easily executed."
}], "Text",
 CellChangeTimes->{{3.6758643409483833`*^9, 3.675864370099321*^9}, {
   3.768852523098033*^9, 3.768852536552197*^9}, {3.76885259282231*^9, 
   3.768852614221489*^9}, {3.768852715010096*^9, 3.7688527239140053`*^9}, 
   3.768853448923376*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"21.", "  ", 
    SuperscriptBox[
     SubscriptBox["x", "1"], "2"]}], "-", 
   RowBox[{"12", 
    SubscriptBox["x", "1"], 
    SubscriptBox["x", "2"]}], "+", 
   SuperscriptBox[
    SubscriptBox["x", "2"], "2"]}], "=", "70"}]], "Text",
 CellChangeTimes->{{3.768853541020129*^9, 3.768853586270746*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6758587889770317`*^9, 3.6758587905743933`*^9}, 
   3.768843164457657*^9}],

Cell[TextData[{
 "I am at example 6, p. 344. The coefficients for the squared terms are equal \
here as in example 6, and they make up the diagonal. The ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "1"], 
    SubscriptBox["x", "2"], " "}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "term is divided in half and makes up the off-diagonal \
\[OpenCurlyQuote]corners\[CloseCurlyQuote] of the matrix."
}], "Text",
 CellChangeTimes->{{3.76885717100031*^9, 3.7688572626122303`*^9}, {
  3.768859245244478*^9, 3.768859262370325*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e1", "=", 
  RowBox[{"(", GridBox[{
     {"1", 
      RowBox[{"-", "6"}]},
     {
      RowBox[{"-", "6"}], "1"}
    }], ")"}]}]], "Input",
 CellChangeTimes->{{3.675858795401278*^9, 3.675858865466703*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "6"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "6"}], ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.675858867338476*^9, 3.768858989655623*^9, 
  3.768860855950046*^9}]
}, Open  ]],

Cell["Above: The matrix C is identified as per the text. ", "Text",
 CellChangeTimes->{{3.7688536919309883`*^9, 3.768853722616911*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e2", "=", 
  RowBox[{"{", 
   RowBox[{"x1", ",", "x2"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.67585890084793*^9, 3.6758589085293283`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x1", ",", "x2"}], "}"}]], "Output",
 CellChangeTimes->{3.675858910471187*^9, 3.7688591409475603`*^9, 
  3.7688608591133757`*^9}]
}, Open  ]],

Cell["\<\
Below: The polynomial equation\[CloseCurlyQuote]s coefficients are made from \
the above matrix, the 1 and the 6.\
\>", "Text",
 CellChangeTimes->{{3.768857579849468*^9, 3.7688576098403883`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "\[Lambda]"}], ")"}], "2"], "-", 
     SuperscriptBox[
      RowBox[{"(", "6", ")"}], "2"]}], "==", "0"}], ",", "\[Lambda]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.768857397355744*^9, 3.768857487094286*^9}, {
  3.768857519668406*^9, 3.76885752976357*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", 
     RowBox[{"-", "5"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", "7"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7688574877595253`*^9, 3.7688575311291523`*^9, 
  3.768858992922948*^9}]
}, Open  ]],

Cell["And the polynomial is readily available as", "Text",
 CellChangeTimes->{{3.7688576210560493`*^9, 3.7688576401037273`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e7", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"7", 
     SuperscriptBox[
      SubscriptBox["y", "1"], "2"]}], "-", 
    RowBox[{"5", 
     SuperscriptBox[
      SubscriptBox["y", "2"], "2"]}]}], "==", "70"}]}]], "Input",
 CellChangeTimes->{{3.768857645811795*^9, 3.768857676262644*^9}, {
  3.768858975827869*^9, 3.768859004188675*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"7", " ", 
    SubsuperscriptBox["y", "1", "2"]}], "-", 
   RowBox[{"5", " ", 
    SubsuperscriptBox["y", "2", "2"]}]}], "\[Equal]", "70"}]], "Output",
 CellChangeTimes->{{3.768858978008305*^9, 3.768859005222075*^9}, 
   3.768860864991097*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["\<\
Above: this is the line where the type of conic section is identified. The \
squared factors differ in sign, and the sum is greater than zero. Hence it is \
a hyperbola. It agrees with text.\
\>", "Text",
 CellChangeTimes->{{3.675861054339308*^9, 3.675861078056801*^9}, {
  3.675861435829385*^9, 3.6758614647565813`*^9}, {3.768859299154298*^9, 
  3.7688593056888866`*^9}}],

Cell[TextData[{
 "Below: beginning the part of example6, p. 344 where normalized eigenvectors \
are calculated based on\n(A-\[Lambda] I)x=0, and for this case ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Lambda]", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = 7 and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Lambda]", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = -5."
}], "Text",
 CellChangeTimes->{{3.675859172089765*^9, 3.675859193432015*^9}, {
  3.76885836312123*^9, 3.7688583650877857`*^9}, {3.768858407471936*^9, 
  3.768858456316951*^9}}],

Cell["So,", "Text",
 CellChangeTimes->{{3.768858370404305*^9, 3.768858419814013*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e8", "=", 
  RowBox[{"e1", "-", 
   RowBox[{"7", " ", 
    RowBox[{"IdentityMatrix", "[", "2", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.675859203825531*^9, 3.675859225264287*^9}, {
  3.675859398979381*^9, 3.675859400457316*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "6"}], ",", 
     RowBox[{"-", "6"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "6"}], ",", 
     RowBox[{"-", "6"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.675859229173934*^9, 3.675859402187727*^9, 
  3.768859010938499*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e9", "=", 
  RowBox[{"Thread", "[", 
   RowBox[{
    RowBox[{"e8", ".", "e2"}], "\[Equal]", "0"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.675859274313737*^9, 3.6758592904209213`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "6"}], " ", "x1"}], "-", 
     RowBox[{"6", " ", "x2"}]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "6"}], " ", "x1"}], "-", 
     RowBox[{"6", " ", "x2"}]}], "\[Equal]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{3.675859291064766*^9, 3.675859405935152*^9, 
  3.7688590142405853`*^9, 3.768859149476718*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e10", "=", 
  RowBox[{"Solve", "[", "e9", "]"}]}]], "Input",
 CellChangeTimes->{{3.675859294507938*^9, 3.675859302589938*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x2", "\[Rule]", 
    RowBox[{"-", "x1"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.6758593036172*^9, 3.675859409118045*^9, 
  3.7688591540957527`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e11", "=", 
  RowBox[{"{", 
   RowBox[{"1", ",", 
    RowBox[{"-", "1"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.675859315933105*^9, 3.675859329819875*^9}, {
  3.6758594155607643`*^9, 3.6758594182967176`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"-", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{3.675859419513262*^9, 3.7688591577948027`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e12", "=", 
  RowBox[{"Normalize", "[", "e11", "]"}]}]], "Input",
 CellChangeTimes->{{3.6758594240486727`*^9, 3.675859430632287*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", 
    SqrtBox["2"]], ",", 
   RowBox[{"-", 
    FractionBox["1", 
     SqrtBox["2"]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.6758594328368483`*^9, 3.768859161533112*^9}]
}, Open  ]],

Cell["Above: one normalized eigenvector down, one to go.", "Text",
 CellChangeTimes->{{3.675859439657035*^9, 3.6758594505995626`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e13", "=", 
  RowBox[{"e1", "+", 
   RowBox[{"5", " ", 
    RowBox[{"IdentityMatrix", "[", "2", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.675859486467683*^9, 3.675859498847567*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"6", ",", 
     RowBox[{"-", "6"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "6"}], ",", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.67585950010612*^9, 3.76885916807716*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e14", "=", 
  RowBox[{"Thread", "[", 
   RowBox[{
    RowBox[{"e13", ".", "e2"}], "\[Equal]", "0"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.675859502246315*^9, 3.675859517877471*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"6", " ", "x1"}], "-", 
     RowBox[{"6", " ", "x2"}]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "6"}], " ", "x1"}], "+", 
     RowBox[{"6", " ", "x2"}]}], "\[Equal]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{3.675859518743483*^9, 3.768859171964695*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e15", "=", 
  RowBox[{"Solve", "[", "e14", "]"}]}]], "Input",
 CellChangeTimes->{{3.675859522326692*^9, 3.675859529524995*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x2", "\[Rule]", "x1"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.6758595315664873`*^9, 3.768859175027594*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e16", "=", 
  RowBox[{"{", 
   RowBox[{"1", ",", "1"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.675859536860044*^9, 3.675859567371765*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.675859546981628*^9, 3.6758595684474363`*^9}, 
   3.768859178028541*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e17", "=", 
  RowBox[{"Normalize", "[", "e16", "]"}]}]], "Input",
 CellChangeTimes->{{3.675859571072857*^9, 3.675859579747321*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", 
    SqrtBox["2"]], ",", 
   FractionBox["1", 
    SqrtBox["2"]]}], "}"}]], "Output",
 CellChangeTimes->{3.675859580769577*^9, 3.768859181580567*^9}]
}, Open  ]],

Cell["Above: both normalized eigenvectors have been found.", "Text",
 CellChangeTimes->{{3.675859588724207*^9, 3.6758596002267733`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e18", "=", 
  RowBox[{"(", GridBox[{
     {
      FractionBox["1", 
       SqrtBox["2"]], 
      FractionBox["1", 
       SqrtBox["2"]]},
     {
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["2"]]}], 
      FractionBox["1", 
       SqrtBox["2"]]}
    }], ")"}]}]], "Input",
 CellChangeTimes->{{3.675859647093934*^9, 3.675859694615891*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", 
      SqrtBox["2"]], ",", 
     FractionBox["1", 
      SqrtBox["2"]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", 
       SqrtBox["2"]]}], ",", 
     FractionBox["1", 
      SqrtBox["2"]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.675859696171226*^9, 3.768859192480295*^9}]
}, Open  ]],

Cell["Above: the matrix of eigenvectors is put together by hand.", "Text",
 CellChangeTimes->{{3.6758597040389967`*^9, 3.67585971467074*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e19", "=", 
  RowBox[{"{", 
   RowBox[{"y1", ",", "y2"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.675859722786455*^9, 3.675859730319828*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"y1", ",", "y2"}], "}"}]], "Output",
 CellChangeTimes->{3.67585973154062*^9, 3.7688591974807453`*^9}]
}, Open  ]],

Cell[TextData[{
 "Following the wind-up section of example 6, and fetching the appropriate \
vectors connoting ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " ,"
}], "Text",
 CellChangeTimes->{{3.768858897935429*^9, 3.768858910549617*^9}, {
  3.768859346519519*^9, 3.7688594227889957`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e20", "=", 
  RowBox[{"Thread", "[", 
   RowBox[{
    RowBox[{"e18", ".", "e19"}], "\[Equal]", "e2"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.675859733805747*^9, 3.675859749287294*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["y1", 
      SqrtBox["2"]], "+", 
     FractionBox["y2", 
      SqrtBox["2"]]}], "\[Equal]", "x1"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox["y1", 
       SqrtBox["2"]]}], "+", 
     FractionBox["y2", 
      SqrtBox["2"]]}], "\[Equal]", "x2"}]}], "}"}]], "Output",
 CellChangeTimes->{3.675859750940428*^9, 3.768859203418552*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[TextData[{
 "The parametric version of the hyperbola in e7 would be ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"x", "=", 
     RowBox[{
      FractionBox["2", 
       SqrtBox["70"]], "secant", " ", "t"}]}], ",", " ", 
    RowBox[{"y", "=", 
     RowBox[{
      FractionBox[
       SqrtBox["5"], 
       SqrtBox["70"]], "tangent", " ", "t"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.675862532385458*^9, 3.675862566839159*^9}, {
  3.675862604557909*^9, 3.675862670779744*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox["2", 
        SqrtBox["70"]], 
       RowBox[{"Sec", "[", "t", "]"}], 
       RowBox[{"Cos", "[", 
        FractionBox["\[Pi]", "4"], "]"}]}], "-", 
      RowBox[{
       FractionBox[
        SqrtBox["5"], 
        SqrtBox["70"]], 
       RowBox[{"Tan", "[", "t", "]"}], 
       RowBox[{"Sin", "[", 
        FractionBox["\[Pi]", "4"], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       FractionBox["2", 
        SqrtBox["70"]], 
       RowBox[{"Sec", "[", "t", "]"}], 
       RowBox[{"Sin", "[", 
        FractionBox["\[Pi]", "4"], "]"}]}], "+", 
      RowBox[{
       FractionBox[
        SqrtBox["5"], 
        SqrtBox["70"]], 
       RowBox[{"Tan", "[", "t", "]"}], 
       RowBox[{"Cos", "[", 
        FractionBox["\[Pi]", "4"], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Thickness", "[", "0.003", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.675860099931797*^9, 3.675860176912899*^9}, {
  3.675860210648035*^9, 3.675860217998314*^9}, {3.675861923239809*^9, 
  3.675862038857629*^9}, {3.6758621429615183`*^9, 3.6758622273661957`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.003], Opacity[1.], 
    FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
/9f/A9Bcjr8=
     "]]}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-1.2153365234229123`, 
   1.2107226687787103`}, {-1.2455522290993697`, 1.2416275521717934`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.675860225542171*^9, {3.675861999897332*^9, 3.6758620396701107`*^9}, 
   3.6758622315476627`*^9, 3.768859209863278*^9}]
}, Open  ]],

Cell["\<\
Above: the plot shows the sign differences for multiple angle formula, I \
think. But does not take into account the sign differences for the problem \
equation. Those are tried out below:\
\>", "Text",
 CellChangeTimes->{{3.6758623015297823`*^9, 3.67586236382224*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox["2", 
        SqrtBox["70"]], 
       RowBox[{"Sec", "[", "t", "]"}], 
       RowBox[{"Cos", "[", 
        RowBox[{"-", 
         FractionBox["\[Pi]", "4"]}], "]"}]}], "-", 
      RowBox[{
       FractionBox[
        SqrtBox["5"], 
        SqrtBox["70"]], 
       RowBox[{"Tan", "[", "t", "]"}], 
       RowBox[{"Sin", "[", 
        RowBox[{"-", 
         FractionBox["\[Pi]", "4"]}], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       FractionBox["2", 
        SqrtBox["70"]], 
       RowBox[{"Sec", "[", "t", "]"}], 
       RowBox[{"Sin", "[", 
        RowBox[{"-", 
         FractionBox["\[Pi]", "4"]}], "]"}]}], "+", 
      RowBox[{
       FractionBox[
        SqrtBox["5"], 
        SqrtBox["70"]], 
       RowBox[{"Tan", "[", "t", "]"}], 
       RowBox[{"Cos", "[", 
        RowBox[{"-", 
         FractionBox["\[Pi]", "4"]}], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Thickness", "[", "0.003", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.675862378047618*^9, 3.675862383966097*^9}, {
  3.675864797016602*^9, 3.675864915514456*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.003], Opacity[1.], 
    FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
AoZr
     "]]}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-1.2455522290993697`, 
   1.241627552171793}, {-1.2098053932611919`, 1.2115756947884995`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.675862385379821*^9, 3.675864806786868*^9, {3.6758648480883913`*^9, 
   3.675864916694476*^9}, 3.7688592145071573`*^9}]
}, Open  ]],

Cell["\<\
Above: playing with the signs makes it come out looking more like it should.\
\>", "Text",
 CellChangeTimes->{{3.675862407388625*^9, 3.675862421996244*^9}, {
  3.675864972919685*^9, 3.675864985935508*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["x1", "2"], "-", 
     RowBox[{"12", " ", "x1", " ", "x2"}], "+", 
     SuperscriptBox["x2", "2"]}], "\[Equal]", "70"}], ",", 
   RowBox[{"{", 
    RowBox[{"x1", ",", 
     RowBox[{"-", "50"}], ",", "50"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x2", ",", 
     RowBox[{"-", "50"}], ",", "50"}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
   RowBox[{"ContourStyle", "\[Rule]", 
    RowBox[{"Thickness", "[", "0.003", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.675864004443363*^9, 3.675864073325346*^9}, {
  3.675864129815201*^9, 3.675864152586955*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJw9mAtUzukWxr8vuSSlTJKiUNKFRCVU826X7sZUhjjoDDNyScrInJkcodzD
MOY0ZpgzOGZWkVEZlVzejVVCyC13o4uGKVJCS+hM//3u71vWymr1/S/73ft5
fs/uPzshao6RTqdz0+t07T89XodMDIqyQJ32CcXV95JqUrwtUL+h6Mh3p0Pw
Wd3XNzKFOe6cXDwvNzIY5/q4xvq4muOiu/nxd0cEo82+CY7vrMzxpM+FITn2
wdg79Fun0G+7Yc769ML1pkFo1d2/6fMSU1xmu91+aXIgXijK/vufKbZ/PT8+
EL/P67Y4O90Ul8z0sfhoZiBOMDHr+us3JhhYW5Z8/Po4XKX/6fO1w0wwpP2y
+8ahuGj2h8/RLrgxrMxKP3ccjuk8vnj7x53xWmR5tx+GjsXUtrlWTrmdULv8
3TE4Y/evXyU97ohuh/ssLE8cg69OHt1YbdQRS64MTRHpgG4FGcVFDsbo1P7c
PQBHh+8Mb+rdATfldVy07uWHuCF4XcyGfUY4OWtSX315AP7l9lGR/UY9Omrv
6Y+uwXYzkyfqsGbe/8Ivm/jh+cB3R4xH63Br+wXPjUaznj96xQzW4YpODjEn
No3GlTubFxWcfyfft7V/RqKZdp23MmLuvcHeriMxdWt+Tn1gq3yZ0ey9J9wX
90fbm3W1a5ULtXr7onFr3LIvqt/I9C+dOjyz88WqOfJ2/J0WafbIdqt3lg9W
LcpM+Gl2i7yjFcAHmz4rmxle+lqun6pvs+7vg9YVtyu+mPFK/qu37reGzt7o
OG5XSML2l5Lq64U7Phjs2H1vs2z0MM/aMtALMy9NDB1Y8kLO+OWb5qHzhuNY
rzX+2/KaJNV3GD5Mb/HcHt8oq6/siR7gOgyNLhRnNJg3yo6WCSdSznvirbW+
i/ULGiTV1xNfajeql7PKvh4yc4UH9mpYWWgyrV5OStt1UP9PD4zbmBLiFFkv
j7Rff7oHNsRFvS0IqpePEqL3/T7FA1NM3x9M3fZEvtnUmj759GDcfOOzwHsu
T+QArY6DcbmwuTb658cyPTNZ2EwajNW+z33+PFQr9wR65YYNcscvT/jZPnv0
SNL5uOExx1br+fdrpH9ewraKj9zQ5WJJVtxv1fJYQfbNgC2uuLel84CdqVXq
vFywsPtb7P72odSJ5x3E80HYrdfZ/xQ9u6/OZxAaTa294HT4ltz1pEwf4eWM
KSkebR8nVcjbWsEG4sKlAW0Ft69LtwtL7J6UOGHE0ko33csyGaTV3xEzk/46
mjr5qNw99uPjNuYDsPB+/zVGcQXyd63e/XGezVyX5r75cuXPGy8NO9RfzW2L
f0Rr3STr/H4YdW5aWNLmbKHVo0c/rBOP436dmCfCGpMORd91wF2/JfjNuV8i
tpTET/QO7YtjVxf6tXQrEw5a/fpg/fyx3+c6XhVrB9ibmifaIaypiyy0vyFC
Cu3//p8tDglbnlNtfUe80ephg7rs61lbdA9FxITMnNL4Xji/xWl2p62V4sWn
x7zaLlrjsvEN458H1YgK7f174mTtPvViqHu7cvTACZ8YW47u/VRYHJp/Pbze
En96fCVn2OdPRa72vpbol5Jb0yv8mbBad/PBpH2WeDS7/dMsWGdGRP9ZPOfK
K2Fd7r/0Zq4JBtA8iaLDKS+mftAJkzOfzzq16Z0o1+7fEUeerHI/WaWHfvQT
H9Pv4RP6O3mHvgc8l950XbCi+8hhdF/YTc8hLem5IJqeU56g54Zkeg/Zn94L
rOg9ZQS9N/AcVFFd4FOqk+xXc6vSLLIXrLmWF5vo80B20s63NxhR3eWyzR1e
R023g71FdbdmJ1yT7nRu0JSmnaPc/JVtWVfRF1bXdWz03lEsXagPYFSp1hdy
CfUJcN+kUx+BRW+tr0QR9RmMfKD1ndhDfQiPqS/FBOpTWE19K3yojyGD+lr8
QX0OO6jvhZoDMKa5EF/QnIAzzY3oSnMEl2iuhLH2XK6QTXMnUoRPTFGoG1x5
Pan6l501IoPmFtJojkWMZXHoICd3uPLva9l9q2qFC+kA/EC6IJa9Pm61bYoH
xD7ab7RifD2933QPSCKdEX8ObTxeG+MBa51HnCn8R73IIF0C7lNn0i14QDom
TEjXoAvpnKgi3YNK0kFRSLoIW02T+nmeaBK5YxYcLHXwgjzxdN6hwGYRRjoL
PYMTHAJ/fCkWPfdLiOvgDe9i+5zJ3/dK3CfdhlrScREavqqyxtYXSoNGzXp4
9Y1IJB+APPIFkXs97OD1MF/wOhLlfiSqVSwmHwGeAyOtnqMgjXxHrCUfAgvy
Jagl3wJ38jFwJl+DevI5mE6+B5vIB+GoVr8PIcZj+NnkCiPYTD4Jyjfp+z0A
HGPEqRuuxnCOfBZayXfBnXwYlC8D1WsMpJFvw03ycRhPvg7p5PPwIfk+UP3G
QRpxAYQQJ0AkcQMojoAM4gqgegbCReIOWEEcAjbEJXCKOAV4rpE4BmyJa0Bx
Dswj7oEfiYPgKXERdCBOAsVNaq5CQXGV4Sf/nv+Ov1evrsPXjVX34fvyc/Bz
8XOeVs/N78Hvxe/J78114LpEqDpx3VJVHbmuXGeuO58Dn8slq6bx5/d3Mpwb
nyOfK58znzv3AfcF9wn3DfcV9xn3Hfehm+rLR6pPy4iv4DviK0Mfc1+vVn3O
fc9zkKjmYriaE56bXDVHPFdn1Zzx3PEc8ly+VXPKc2ul5pjnOkfNOc896wDr
guIlg26wjrCulL64mle6vsGgO6xLrFOsY6xrO5TOse5dVjrIurhK6STr5mWl
o6yrB5TOsu6yDrMus06zbrOOs66zzrPusw+wL7BPsG+wj7CvsM+w77APsS+x
T7FvsY+xr3UBjW+k4huwJ76Re4lvDL7IPllLfCMV38D71RrfyBnEN9AWSj7L
vnvzgMY38jPiG4gnvpGKbwy+zT7Ovs4+z77PHMBcwJzA3MAcwVzBc87cwRzC
XHJXccoUxS3MMcw1zDnMPcxBzEU8F8xNzFHMVcxZzF1CcRhz2kTFbZ6K49gv
mfOWK+5jDlyguJA5kbmROZK5kjmTuZM5lLmUOZW5lTmWuZY5l7mXOZi5mDmZ
+4o5mrmaOZu5e+Ac/7mpFgPQv2CZ59SNRdJ1+9j8aQGOuLxkRaHTpXMGbmeO
Z65nzmfu5xzwTcDx+b5+zriwovycZc5tGRuZtObMbGcMgMgu71LvGHKEIVes
tIvNej0Im1qC/zt/zUPp+TQjcUeQC9r20XuUtz405JLdKqeoucarNOfyE9IB
LCRdMOQkzk3LSUdwEemKvE86g4mkO4acxn3NOY5zHec8vcp9nAM5F3JO3Ew6
aMiRnCs5Z3Lu5Bzag3TVkFN7qdzKObZR5VrOuZUq93IOrlS5mHMy52bO0QdU
ruacnaZyN+dwnjPO6ZzbOcdzruecz7mf9wC8F+A9QZ3aG/AegfcKvGcYpfYO
vIfoR75p2FPw3oL3GNPVXoP3HGXky4Y9CKi9CO9JQO1NeI/CexXes/Dehfcw
O9Rehvc0ZWpvw3sc3uvwnod1w7AHUnsh3hMpfjLskXivxHsm3jvxHsorK3rM
4QgL/D8lN7x2
   "], {{}, {}, 
    TagBox[
     TooltipBox[
      {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.003], 
       LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
         19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
        53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 
        70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 
        87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 
        103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 
        117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 
        131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 
        145, 146, 147, 148, 149, 150}], LineBox[CompressedData["
1:eJwN0ec6FQAAANB7i0QSWWnJynicHsED8DK+T6mobGVvSvZoShSFMjIaREVG
cn6cJzgpufk38oKBQKCAQm5yiyJuc4e7FFPCPe7zgFLKKKeCSqqopoaHPKKW
OuppoJEmmmmhlTba6aCTLrp5zBN6eEovffQzwCBDDDPCKGM84zkveMkrXjPO
GyZ4yyRTvOM908zwgY/MMsc8n/jMAossscwXVlhljXW+8o3v/GCDTX6yxTa/
+M0fdtjlL3vsc8Ah/zjiPwFZQU5wkhBCOUUYpwkngjNEcpYozhFNDOeJJY54
EkjkAklc5BKXucJVkrlGCqmkkU4G18kki2xyOAZBMVk9
        "]]},
      RowBox[{
        RowBox[{
          SuperscriptBox["x1", "2"], "-", 
          RowBox[{"12", " ", "x1", " ", "x2"}], "+", 
          SuperscriptBox["x2", "2"]}], "\[Equal]", "70"}]],
     Annotation[#, $CellContext`x1^2 - 
       12 $CellContext`x1 $CellContext`x2 + $CellContext`x2^2 == 70, 
      "Tooltip"]& ]}],
  AspectRatio->1,
  DisplayFunction->Identity,
  Frame->True,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{"DefaultBoundaryStyle" -> Automatic},
  PlotRange->{{-50, 50}, {-50, 50}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.675864074953103*^9, {3.675864131292006*^9, 3.675864153446095*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"23.", "  ", "-", 
   RowBox[{"11", 
    SuperscriptBox[
     SubscriptBox["x", "1"], "2"]}], "+", 
   RowBox[{"84", 
    SubscriptBox["x", "1"], 
    SubscriptBox["x", "2"]}], "+", 
   RowBox[{"24", 
    SuperscriptBox[
     SubscriptBox["x", "2"], "2"]}]}], "=", "156"}]], "Text",
 CellChangeTimes->{{3.76885950636069*^9, 3.768859569491165*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.675864729787774*^9, 3.675864731265205*^9}, 
   3.7688431814565067`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e1", "=", 
  RowBox[{"(", GridBox[{
     {
      RowBox[{"-", "11"}], "42"},
     {"42", "24"}
    }], ")"}]}]], "Input",
 CellChangeTimes->{{3.675865082640934*^9, 3.675865084164516*^9}, {
  3.675865123843245*^9, 3.6758651660257387`*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "11"}], ",", "42"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"42", ",", "24"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.675865167094693*^9, 3.7688599043103237`*^9}]
}, Open  ]],

Cell["\<\
Above: the matrix C is identified and agrees with the text. Here I see the \
important difference made when the coefficients of the two squared terms are \
not equal. They both occupy the diagonal in their own identity.\
\>", "Text",
 CellChangeTimes->{{3.768859667534169*^9, 3.76885978191321*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e2", "=", 
  RowBox[{"{", 
   RowBox[{"x1", ",", "x2"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6758651762531757`*^9, 3.675865184905211*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x1", ",", "x2"}], "}"}]], "Output",
 CellChangeTimes->{3.675865187542205*^9, 3.768859907095312*^9}]
}, Open  ]],

Cell["\<\
From this point down to the next green cell, the ground covered is not \
exactly by shortcut by way of example 6, as it was in the procedure in \
problem 21.\
\>", "Text",
 CellChangeTimes->{{3.768859813048203*^9, 3.76885987974214*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e3", "=", 
  RowBox[{"e2", ".", "e1", ".", "e2"}]}]], "Input",
 CellChangeTimes->{{3.675865190261579*^9, 3.6758651976248217`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"x2", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"42", " ", "x1"}], "+", 
     RowBox[{"24", " ", "x2"}]}], ")"}]}], "+", 
  RowBox[{"x1", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "11"}], " ", "x1"}], "+", 
     RowBox[{"42", " ", "x2"}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.675865200483921*^9, {3.768859886874187*^9, 3.768859909920328*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e4", "=", 
  RowBox[{"Expand", "[", "e3", "]"}]}]], "Input",
 CellChangeTimes->{{3.675865203670537*^9, 3.6758652097617893`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "11"}], " ", 
   SuperscriptBox["x1", "2"]}], "+", 
  RowBox[{"84", " ", "x1", " ", "x2"}], "+", 
  RowBox[{"24", " ", 
   SuperscriptBox["x2", "2"]}]}]], "Output",
 CellChangeTimes->{
  3.6758652115690947`*^9, {3.7688598897598877`*^9, 3.768859914370985*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e5", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"vals", ",", "vecs"}], "}"}], "=", 
   RowBox[{"Eigensystem", "[", "e1", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.675865215710239*^9, 3.675865231001173*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"52", ",", 
     RowBox[{"-", "39"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3"}], ",", "2"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6758652321784353`*^9, {3.768859893238553*^9, 3.768859917155287*^9}}]
}, Open  ]],

Cell["\<\
Below: According to example 6 on p. 344, expression (10), p. 343 becomes\
\>", "Text",
 CellChangeTimes->{{3.675865279071122*^9, 3.675865303325218*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e6", "=", 
  RowBox[{
   RowBox[{"52", " ", 
    SuperscriptBox["y1", "2"]}], "-", 
   RowBox[{"39", " ", 
    SuperscriptBox["y2", "2"]}]}]}]], "Input",
 CellChangeTimes->{{3.675865307001431*^9, 3.6758653321562757`*^9}, {
  3.675865461521772*^9, 3.6758654618160686`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"52", " ", 
   SuperscriptBox["y1", "2"]}], "-", 
  RowBox[{"39", " ", 
   SuperscriptBox["y2", "2"]}]}]], "Output",
 CellChangeTimes->{3.675865338020645*^9, 3.675865462481717*^9, 
  3.768859924903921*^9}]
}, Open  ]],

Cell["Below: and further,", "Text",
 CellChangeTimes->{{3.675865342251754*^9, 3.67586534608379*^9}, {
  3.768859931637388*^9, 3.768859933181485*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e7", "=", 
  RowBox[{"e6", "\[Equal]", "156"}]}]], "Input",
 CellChangeTimes->{{3.675865350376389*^9, 3.675865367355235*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"52", " ", 
    SuperscriptBox["y1", "2"]}], "-", 
   RowBox[{"39", " ", 
    SuperscriptBox["y2", "2"]}]}], "\[Equal]", "156"}]], "Output",
 CellChangeTimes->{3.67586536834168*^9, 3.675865469726111*^9, 
  3.7688599364806643`*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["\<\
Above: this is the line where the type of conic section is identified. The \
squared factors differ in sign, making it a hyperbola. It matches the \
equation in the text answer.\
\>", "Text",
 CellChangeTimes->{{3.675865379451641*^9, 3.675865400889866*^9}, {
  3.6758654750794907`*^9, 3.6758654914149017`*^9}, {3.7688599498277187`*^9, 
  3.768859958515419*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e8", "=", 
  RowBox[{"e1", "-", 
   RowBox[{"52", " ", 
    RowBox[{"IdentityMatrix", "[", "2", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.675865519953899*^9, 3.675865536567068*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "63"}], ",", "42"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"42", ",", 
     RowBox[{"-", "28"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.675865537720517*^9, 3.7688599636981497`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e9", "=", 
  RowBox[{"Thread", "[", 
   RowBox[{
    RowBox[{"e8", ".", "e2"}], "\[Equal]", "0"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.675865551481263*^9, 3.675865564620817*^9}, 
   3.675865603965087*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "63"}], " ", "x1"}], "+", 
     RowBox[{"42", " ", "x2"}]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"42", " ", "x1"}], "-", 
     RowBox[{"28", " ", "x2"}]}], "\[Equal]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{3.675865604605721*^9, 3.7688599667451277`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e10", "=", 
  RowBox[{"Solve", "[", "e9", "]"}]}]], "Input",
 CellChangeTimes->{{3.6758656091187067`*^9, 3.675865614348606*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x2", "\[Rule]", 
    FractionBox[
     RowBox[{"3", " ", "x1"}], "2"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.6758656152694407`*^9, 3.7688599698958*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e11", "=", 
  RowBox[{"{", 
   RowBox[{"1", ",", 
    RowBox[{"3", "/", "2"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6758656338257504`*^9, 3.675865644914195*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   FractionBox["3", "2"]}], "}"}]], "Output",
 CellChangeTimes->{3.6758656468650007`*^9, 3.768859973620818*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e12", "=", 
  RowBox[{"Normalize", "[", "e11", "]"}]}]], "Input",
 CellChangeTimes->{{3.6758656511937857`*^9, 3.675865657633601*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["2", 
    SqrtBox["13"]], ",", 
   FractionBox["3", 
    SqrtBox["13"]]}], "}"}]], "Output",
 CellChangeTimes->{3.675865658492193*^9, 3.768859977636259*^9}]
}, Open  ]],

Cell["Above: one normalized eigenvector down, one to go.", "Text",
 CellChangeTimes->{{3.675865666474271*^9, 3.675865676704988*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e13", "=", 
  RowBox[{"e1", "+", 
   RowBox[{"39", " ", 
    RowBox[{"IdentityMatrix", "[", "2", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.675865718811784*^9, 3.67586574138444*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"28", ",", "42"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"42", ",", "63"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6758657421686373`*^9, 3.768859982568717*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e14", "=", 
  RowBox[{"Thread", "[", 
   RowBox[{
    RowBox[{"e13", ".", "e2"}], "\[Equal]", "0"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6758657488639708`*^9, 3.675865763086216*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"28", " ", "x1"}], "+", 
     RowBox[{"42", " ", "x2"}]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"42", " ", "x1"}], "+", 
     RowBox[{"63", " ", "x2"}]}], "\[Equal]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{3.675865763837463*^9, 3.7688599852467422`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e15", "=", 
  RowBox[{"Solve", "[", "e14", "]"}]}]], "Input",
 CellChangeTimes->{{3.6758657672701883`*^9, 3.6758657724619837`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x2", "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"2", " ", "x1"}], "3"]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.675865773385128*^9, 3.768859987999331*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e16", "=", 
  RowBox[{"{", 
   RowBox[{"1", ",", 
    RowBox[{"-", 
     FractionBox["2", "3"]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.675865782514512*^9, 3.6758658043170347`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"-", 
    FractionBox["2", "3"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.6758658068942757`*^9, 3.7688599915570307`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e17", "=", 
  RowBox[{"Normalize", "[", "e16", "]"}]}]], "Input",
 CellChangeTimes->{{3.675865810444928*^9, 3.675865817156605*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["3", 
    SqrtBox["13"]], ",", 
   RowBox[{"-", 
    FractionBox["2", 
     SqrtBox["13"]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.675865818040007*^9, 3.7688599947368927`*^9}]
}, Open  ]],

Cell["Above: both normalized eigenvectors have been found.", "Text",
 CellChangeTimes->{{3.675865824045176*^9, 3.675865834539946*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e18", "=", 
  RowBox[{"(", GridBox[{
     {
      FractionBox["2", 
       SqrtBox["13"]], 
      FractionBox["3", 
       SqrtBox["13"]]},
     {
      FractionBox["3", 
       SqrtBox["13"]], 
      RowBox[{"-", 
       FractionBox["2", 
        SqrtBox["13"]]}]}
    }], ")"}]}]], "Input",
 CellChangeTimes->{{3.675865875726451*^9, 3.675865955961795*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["2", 
      SqrtBox["13"]], ",", 
     FractionBox["3", 
      SqrtBox["13"]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["3", 
      SqrtBox["13"]], ",", 
     RowBox[{"-", 
      FractionBox["2", 
       SqrtBox["13"]]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.675865956688212*^9, 3.768860035411297*^9}]
}, Open  ]],

Cell["\<\
Above: the matrix of eigenvectors is put together by hand. It matches the \
matrix shown in the text answer.\
\>", "Text",
 CellChangeTimes->{{3.675865971631195*^9, 3.675865984622879*^9}, {
  3.7688600159550467`*^9, 3.768860026545205*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e19", "=", 
  RowBox[{"{", 
   RowBox[{"y1", ",", "y2"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.675865987611457*^9, 3.6758659958323517`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"y1", ",", "y2"}], "}"}]], "Output",
 CellChangeTimes->{3.675865996692074*^9, 3.7688600379802647`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e20", "=", 
  RowBox[{"Thread", "[", 
   RowBox[{
    RowBox[{"e18", ".", "e19"}], "\[Equal]", "e2"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.675866000734652*^9, 3.6758660144075527`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", "y1"}], 
      SqrtBox["13"]], "+", 
     FractionBox[
      RowBox[{"3", " ", "y2"}], 
      SqrtBox["13"]]}], "\[Equal]", "x1"}], ",", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"3", " ", "y1"}], 
      SqrtBox["13"]], "-", 
     FractionBox[
      RowBox[{"2", " ", "y2"}], 
      SqrtBox["13"]]}], "\[Equal]", "x2"}]}], "}"}]], "Output",
 CellChangeTimes->{3.675866015421339*^9, 3.768860040993555*^9}]
}, Open  ]],

Cell[TextData[{
 "The parametric version of the hyperbola in e7 would be ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"x", "=", 
     RowBox[{
      SqrtBox[
       FractionBox["52", "156"]], "secant", " ", "t"}]}], ",", " ", 
    RowBox[{"y", "=", 
     RowBox[{
      SqrtBox[
       FractionBox["39", "156"]], " ", "tangent", " ", "t"}]}]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.6758660400861893`*^9, 3.675866160017235*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SqrtBox[
        FractionBox["52", "156"]], 
       RowBox[{"Sec", "[", "t", "]"}], 
       RowBox[{"Cos", "[", 
        FractionBox["2", 
         SqrtBox["13"]], "]"}]}], "-", 
      RowBox[{
       SqrtBox[
        FractionBox["39", "156"]], 
       RowBox[{"Tan", "[", "t", "]"}], 
       RowBox[{"Sin", "[", 
        FractionBox["3", 
         SqrtBox["13"]], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       SqrtBox[
        FractionBox["52", "156"]], 
       RowBox[{"Sec", "[", "t", "]"}], 
       RowBox[{"Sin", "[", 
        FractionBox["3", 
         SqrtBox["13"]], "]"}]}], "+", 
      RowBox[{
       SqrtBox[
        FractionBox["39", "156"]], 
       RowBox[{"Tan", "[", "t", "]"}], 
       RowBox[{"Cos", "[", 
        RowBox[{"-", 
         FractionBox["2", 
          SqrtBox["13"]]}], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"3", " ", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Thickness", "[", "0.003", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.675866269980626*^9, 3.675866378229764*^9}, {
  3.67586687969058*^9, 3.6758668801140203`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.003], Opacity[1.], 
    FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
gz1OnG5Ak4ecy8ZftqNLB8/n3YENuPxcie1x63acEfr7uoG7ERuCXnz+1deG
5WrKuWNijdjWus57c2MbrjF8oyyp0IjOn4O+xle0YdS1Xx2voRFPOkTvKEpu
ww3TmoK7bzRi3lGLAy9vtyHNyGvo6Wgj8pDNj26Kt6Hy962SHxYbsXsrf/w3
njbUSPXfkrmiCc3XbjjdOt2KJrS73qrqTZhtJ8ShWNSKDE/p0vILTSi7XUn1
p10rfppMl1jX14SVF5a27QtuQUunfUFPxppR/6DqVgmFZpQqZat8xtaCy9TF
BdJXNOPGN0ffBAu34NNPOeEXZ5owSHGf6OjGFjRcY57KVtmE/f1/Ph261oIe
Pts+Ttxowt0nmuRXzbbgNZWO83VUI/JdHDj0kbVOAcotePptAxrnSnFGCbeh
7VMtKe/7DfhU2uRTlnQbXloj5S3r3IBv016lLKi3oZ/qHeqWUQNudL3xZuRQ
G/bEBm1p/lePXYF7i3w/tmEBuWubzLl6rDO82LxCrx03s3t6iu6uQ0aH5WpV
w3Ys0uE+m7ahDo1nykMsLNrx2NGXPBek61h1SySl1LEdO09laU2O16LY7jAp
04B2dO7/UJoQWYutD8+5ZIy347oOv563wrUYcKXIqCy9A0XqCs8njbDqlMGI
UkBRB5Z5+H3tbaJjdvGxHuc/HVgkvc5MpYyOTd4bz5gPdaC43sbYykg6/rsn
Jl0q14m3vgyQIfasunGVb1e0byfWLG/3P8C6x/ibWTVPuXRh4bd+dudffzE7
W9eAutOFSff1mSuy/mLdtysFeb5dWDvuuj019i9eWXvoQkVUF556ZBgj8/wv
7r1j7xbTzsqjLNvmA+Z/0Wmuds1bq24Ukfx2TavuDzJPxAzymPUg2zG3gMTh
aiz+2tOsYNuDYk/Muw1aq/HLNbNBC6ce1jlreKirqhoVHr8YHX7RgzXXy07o
pFTjwPnAxlXVPbi3pcBE+WY1ykYs8/U82osHhhcY1rzV2HYmVev6zT48nGlz
InhDFe4LuvHl38s+zGb3uNkpW4Wa9w4Zh4b1oZ38d9woVIVnrekG+yr7sCdY
RqGk+zfupamFcSn0Y4YxR7Tuld94C/LbQv70o7/nSETEs0o8dMfTXo1Vhz1b
VrUJOVWii/1tsn6pH5UVR4gnhyqxT9P6XOiGAdS3DNH5JMlq35b1vuXZAM4s
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
+XPBf/su8pY=
     "]]}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-2.5413167282247864`, 
   2.5405379907263566`}, {-3.8947103263378224`, 3.893223436602766}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.675866380833823*^9, 3.675866881899087*^9, 
  3.768860050874999*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "11"}], " ", 
      SuperscriptBox["x1", "2"]}], "+", 
     RowBox[{"84", " ", "x1", " ", "x2"}], "+", 
     RowBox[{"24", " ", 
      SuperscriptBox["x2", "2"]}]}], "\[Equal]", "156"}], ",", 
   RowBox[{"{", 
    RowBox[{"x1", ",", 
     RowBox[{"-", "50"}], ",", "50"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x2", ",", 
     RowBox[{"-", "50"}], ",", "50"}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
   RowBox[{"ContourStyle", "\[Rule]", 
    RowBox[{"Thickness", "[", "0.003", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.675866453353331*^9, 3.675866491758773*^9}, {
  3.675866818078121*^9, 3.675866829411789*^9}, {3.675866860714958*^9, 
  3.67586687228999*^9}, {3.675875305426188*^9, 3.6758753169104137`*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
c7e6LlHF/wNQ2M6X
   "], {{}, {}, 
    TagBox[
     TooltipBox[
      {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.003], 
       LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
         19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
        53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 
        70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 
        87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 
        103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 
        117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 
        131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 
        145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 
        159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171}], 
       LineBox[CompressedData["
1:eJwN0OdajgEAAND3o2ioSIkiPtkho0FJkZHtcQkuoK7KPyRUUikrMhqKChkp
lJE0SKXOj3MDJ3yx/EJZKAiCS1zmClep4BqVXOcGN6mimhpuUctt6qingTs0
0sRd7nGfBzykmUc8poUnPOUZz2mljXY6eEEnXbzkFd300Mtr3vCWPt7xng98
pJ9PDDDIZ77wlSGG+cZ3fvCTEX4xym/GGGeCSf7wlyn+Mc0Ms/xnjkBsiAUs
JIJIFrGYKKKJIZYlxBFPAktZRiLLSSKZFaSwklWkksZq1pDOWtYRZj0ZbGAj
m9jMFrayjUy2s4OdZLGL3exhL9nkkEse+9hPPgUcoJCDFFHMIQ5TwhGOcozj
lHKCk5ziNGc4yznOMw/xTVVg
        "]]},
      RowBox[{
        RowBox[{
          RowBox[{
            RowBox[{"-", "11"}], " ", 
            SuperscriptBox["x1", "2"]}], "+", 
          RowBox[{"84", " ", "x1", " ", "x2"}], "+", 
          RowBox[{"24", " ", 
            SuperscriptBox["x2", "2"]}]}], "\[Equal]", "156"}]],
     Annotation[#, (-11) $CellContext`x1^2 + 
       84 $CellContext`x1 $CellContext`x2 + 24 $CellContext`x2^2 == 156, 
      "Tooltip"]& ]}],
  AspectRatio->1,
  DisplayFunction->Identity,
  Frame->True,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{"DefaultBoundaryStyle" -> Automatic},
  PlotRange->{{-50, 50}, {-50, 50}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.675866494184123*^9, 3.6758668303110847`*^9, 
  3.675866873286662*^9, 3.675875318101591*^9, 3.768860055619453*^9}]
}, Open  ]],

Cell["\<\
Above: evidently there is quite a way to go to understanding the principal \
axis theorem correctly.\
\>", "Text",
 CellChangeTimes->{{3.675866926905189*^9, 3.6758669484474697`*^9}}]
},
WindowSize->{1366, 843},
WindowMargins->{{3, Automatic}, {Automatic, 0}},
Magnification:>1.5 Inherited,
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 10, \
2015)",
StyleDefinitions->"Charter1.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 89, 2, 45, "Input",
 Evaluatable->False],
Cell[492, 17, 89, 2, 45, "Input",
 Evaluatable->False],
Cell[584, 21, 91, 2, 45, "Input",
 Evaluatable->False],
Cell[678, 25, 935, 35, 122, "Text"],
Cell[1616, 62, 444, 17, 100, "Text"],
Cell[2063, 81, 165, 3, 45, "Input"],
Cell[CellGroupData[{
Cell[2253, 88, 207, 7, 74, "Input"],
Cell[2463, 97, 234, 8, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2734, 110, 278, 9, 74, "Input"],
Cell[3015, 121, 281, 9, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3333, 135, 175, 4, 45, "Input"],
Cell[3511, 141, 309, 10, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3857, 156, 154, 3, 45, "Input"],
Cell[4014, 161, 283, 9, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4334, 175, 238, 6, 45, "Input"],
Cell[4575, 183, 340, 12, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4952, 200, 233, 6, 45, "Input"],
Cell[5188, 208, 944, 36, 76, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6169, 249, 236, 6, 45, "Input"],
Cell[6408, 257, 363, 13, 45, "Output"]
}, Open  ]],
Cell[6786, 273, 474, 10, 86, "Text"],
Cell[CellGroupData[{
Cell[7285, 287, 266, 7, 45, "Input"],
Cell[7554, 296, 208, 6, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7799, 307, 468, 15, 75, "Input"],
Cell[8270, 324, 125, 2, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8432, 331, 189, 5, 45, "Input"],
Cell[8624, 338, 117, 3, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8778, 346, 297, 9, 45, "Input"],
Cell[9078, 357, 73, 1, 45, "Output"]
}, Open  ]],
Cell[9166, 361, 685, 14, 120, "Text"],
Cell[CellGroupData[{
Cell[9876, 379, 190, 5, 45, "Input"],
Cell[10069, 386, 134, 4, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10240, 395, 219, 6, 45, "Input"],
Cell[10462, 403, 73, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10572, 409, 192, 5, 45, "Input"],
Cell[10767, 416, 115, 3, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10919, 424, 202, 5, 45, "Input"],
Cell[11124, 431, 72, 1, 45, "Output"]
}, Open  ]],
Cell[11211, 435, 377, 11, 86, "Text"],
Cell[11591, 448, 431, 16, 100, "Text"],
Cell[12025, 466, 167, 3, 45, "Input"],
Cell[CellGroupData[{
Cell[12217, 473, 207, 7, 74, "Input"],
Cell[12427, 482, 234, 8, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12698, 495, 219, 7, 74, "Input"],
Cell[12920, 504, 250, 8, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13207, 517, 151, 3, 45, "Input"],
Cell[13361, 522, 291, 8, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13689, 535, 188, 4, 69, "Input"],
Cell[13880, 541, 294, 9, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14211, 555, 274, 7, 69, "Input"],
Cell[14488, 564, 321, 11, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14846, 580, 275, 7, 69, "Input"],
Cell[15124, 589, 467, 14, 45, "Output"]
}, Open  ]],
Cell[15606, 606, 183, 6, 51, "Text"],
Cell[CellGroupData[{
Cell[15814, 616, 268, 7, 69, "Input"],
Cell[16085, 625, 948, 24, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17070, 654, 291, 7, 45, "Input"],
Cell[17364, 663, 227, 5, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17628, 673, 247, 6, 45, "Input"],
Cell[17878, 681, 97, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18012, 687, 189, 5, 45, "Input"],
Cell[18204, 694, 156, 4, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18397, 703, 199, 5, 45, "Input"],
Cell[18599, 710, 73, 1, 45, "Output"]
}, Open  ]],
Cell[18687, 714, 322, 10, 51, "Text"],
Cell[CellGroupData[{
Cell[19034, 728, 301, 7, 45, "Input"],
Cell[19338, 737, 191, 5, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19566, 747, 200, 5, 45, "Input"],
Cell[19769, 754, 99, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19905, 760, 255, 7, 45, "Input"],
Cell[20163, 769, 154, 4, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20354, 778, 202, 5, 45, "Input"],
Cell[20559, 785, 73, 1, 45, "Output"]
}, Open  ]],
Cell[20647, 789, 293, 10, 51, "Text"],
Cell[20943, 801, 510, 19, 130, "Text"],
Cell[21456, 822, 169, 3, 45, "Input"],
Cell[CellGroupData[{
Cell[21650, 829, 287, 10, 102, "Input"],
Cell[21940, 841, 367, 12, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22344, 858, 219, 7, 102, "Input"],
Cell[22566, 867, 302, 9, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22905, 881, 153, 3, 45, "Input"],
Cell[23061, 886, 302, 9, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23400, 900, 152, 3, 45, "Input"],
Cell[23555, 905, 369, 12, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23961, 922, 236, 6, 45, "Input"],
Cell[24200, 930, 481, 15, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24718, 950, 234, 6, 45, "Input"],
Cell[24955, 958, 507, 16, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25499, 979, 236, 6, 45, "Input"],
Cell[25738, 987, 484, 15, 69, "Output"]
}, Open  ]],
Cell[26237, 1005, 358, 12, 52, "Text"],
Cell[CellGroupData[{
Cell[26620, 1021, 273, 7, 45, "Input"],
Cell[26896, 1030, 165, 4, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27098, 1039, 248, 6, 45, "Input"],
Cell[27349, 1047, 97, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27483, 1053, 199, 5, 45, "Input"],
Cell[27685, 1060, 153, 3, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27875, 1068, 197, 5, 45, "Input"],
Cell[28075, 1075, 73, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28185, 1081, 200, 5, 45, "Input"],
Cell[28388, 1088, 125, 3, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28550, 1096, 201, 5, 45, "Input"],
Cell[28754, 1103, 75, 1, 45, "Output"]
}, Open  ]],
Cell[28844, 1107, 313, 9, 86, "Text"],
Cell[CellGroupData[{
Cell[29182, 1120, 221, 6, 45, "Input"],
Cell[29406, 1128, 144, 4, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29587, 1137, 202, 5, 45, "Input"],
Cell[29792, 1144, 99, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29928, 1150, 200, 5, 45, "Input"],
Cell[30131, 1157, 125, 3, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30293, 1165, 202, 5, 45, "Input"],
Cell[30498, 1172, 75, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30610, 1178, 202, 5, 45, "Input"],
Cell[30815, 1185, 125, 3, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30977, 1193, 199, 5, 45, "Input"],
Cell[31179, 1200, 73, 1, 45, "Output"]
}, Open  ]],
Cell[31267, 1204, 309, 10, 86, "Text"],
Cell[31579, 1216, 186, 4, 86, "Text"],
Cell[31768, 1222, 247, 8, 100, "Text"],
Cell[32018, 1232, 131, 1, 51, "Text"],
Cell[32152, 1235, 165, 3, 45, "Input"],
Cell[CellGroupData[{
Cell[32342, 1242, 184, 6, 74, "Input"],
Cell[32529, 1250, 237, 7, 45, "Output"]
}, Open  ]],
Cell[32781, 1260, 103, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[32909, 1265, 236, 6, 45, "Input"],
Cell[33148, 1273, 364, 12, 45, "Output"]
}, Open  ]],
Cell[33527, 1288, 219, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[33771, 1296, 260, 8, 74, "Input"],
Cell[34034, 1306, 280, 9, 45, "Output"]
}, Open  ]],
Cell[34329, 1318, 202, 3, 51, "Text"],
Cell[CellGroupData[{
Cell[34556, 1325, 202, 4, 45, "Input"],
Cell[34761, 1331, 353, 12, 76, "Output"]
}, Open  ]],
Cell[35129, 1346, 144, 2, 51, "Text"],
Cell[CellGroupData[{
Cell[35298, 1352, 130, 2, 45, "Input"],
Cell[35431, 1356, 253, 8, 69, "Output"]
}, Open  ]],
Cell[35699, 1367, 331, 6, 51, "Text"],
Cell[36033, 1375, 273, 9, 100, "Text"],
Cell[36309, 1386, 169, 3, 45, "Input"],
Cell[CellGroupData[{
Cell[36503, 1393, 234, 8, 74, "Input"],
Cell[36740, 1403, 280, 9, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37057, 1417, 238, 6, 45, "Input"],
Cell[37298, 1425, 362, 12, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37697, 1442, 185, 6, 74, "Input"],
Cell[37885, 1450, 234, 7, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38156, 1462, 202, 4, 45, "Input"],
Cell[38361, 1468, 279, 9, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38677, 1482, 203, 4, 45, "Input"],
Cell[38883, 1488, 323, 10, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39243, 1503, 127, 2, 45, "Input"],
Cell[39373, 1507, 88, 2, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39498, 1514, 287, 9, 45, "Input"],
Cell[39788, 1525, 233, 8, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40058, 1538, 125, 2, 45, "Input"],
Cell[40186, 1542, 88, 2, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40311, 1549, 131, 2, 45, "Input"],
Cell[40445, 1553, 136, 4, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40618, 1562, 131, 2, 45, "Input"],
Cell[40752, 1566, 136, 4, 45, "Output"]
}, Open  ]],
Cell[40903, 1573, 736, 16, 121, "Text"],
Cell[41642, 1591, 300, 10, 130, "Text"],
Cell[41945, 1603, 167, 3, 45, "Input"],
Cell[CellGroupData[{
Cell[42137, 1610, 264, 9, 102, "Input"],
Cell[42404, 1621, 370, 11, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42811, 1637, 234, 6, 45, "Input"],
Cell[43048, 1645, 465, 14, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43550, 1664, 217, 7, 102, "Input"],
Cell[43770, 1673, 323, 9, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44130, 1687, 150, 3, 45, "Input"],
Cell[44283, 1692, 344, 11, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44664, 1708, 154, 3, 45, "Input"],
Cell[44821, 1713, 363, 11, 69, "Output"]
}, Open  ]],
Cell[45199, 1727, 156, 3, 51, "Text"],
Cell[45358, 1732, 253, 8, 130, "Text"],
Cell[45614, 1742, 164, 3, 45, "Input"],
Cell[CellGroupData[{
Cell[45803, 1749, 219, 7, 102, "Input"],
Cell[46025, 1758, 324, 9, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46386, 1772, 236, 6, 45, "Input"],
Cell[46625, 1780, 494, 16, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47156, 1801, 262, 9, 102, "Input"],
Cell[47421, 1812, 366, 11, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47824, 1828, 153, 3, 45, "Input"],
Cell[47980, 1833, 537, 19, 76, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48554, 1857, 152, 3, 45, "Input"],
Cell[48709, 1862, 338, 10, 69, "Output"]
}, Open  ]],
Cell[49062, 1875, 332, 6, 51, "Text"],
Cell[CellGroupData[{
Cell[49419, 1885, 406, 11, 45, "Input"],
Cell[49828, 1898, 353, 10, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50218, 1913, 123, 2, 45, "Input"],
Cell[50344, 1917, 93, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50474, 1923, 122, 2, 45, "Input"],
Cell[50599, 1927, 144, 3, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50780, 1935, 131, 2, 45, "Input"],
Cell[50914, 1939, 126, 3, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51077, 1947, 131, 2, 45, "Input"],
Cell[51211, 1951, 128, 3, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51376, 1959, 124, 2, 45, "Input"],
Cell[51503, 1963, 71, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51611, 1969, 122, 2, 45, "Input"],
Cell[51736, 1973, 73, 1, 45, "Output"]
}, Open  ]],
Cell[51824, 1977, 265, 5, 51, "Text"],
Cell[52092, 1984, 960, 34, 122, "Text"],
Cell[53055, 2020, 584, 18, 75, "Text"],
Cell[53642, 2040, 165, 3, 45, "Input"],
Cell[CellGroupData[{
Cell[53832, 2047, 372, 10, 49, "Input"],
Cell[54207, 2059, 392, 10, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54636, 2074, 223, 7, 98, "Input"],
Cell[54862, 2083, 260, 8, 45, "Output"]
}, Open  ]],
Cell[55137, 2094, 131, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[55293, 2099, 172, 4, 45, "Input"],
Cell[55468, 2105, 166, 4, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55671, 2114, 255, 5, 45, "Input"],
Cell[55929, 2121, 465, 14, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56431, 2140, 202, 4, 45, "Input"],
Cell[56636, 2146, 306, 8, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56979, 2159, 238, 6, 45, "Input"],
Cell[57220, 2167, 390, 13, 45, "Output"]
}, Open  ]],
Cell[57625, 2183, 262, 5, 51, "Text"],
Cell[CellGroupData[{
Cell[57912, 2192, 237, 7, 49, "Input"],
Cell[58152, 2201, 238, 7, 49, "Output"]
}, Open  ]],
Cell[58405, 2211, 94, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[58524, 2216, 149, 3, 45, "Input"],
Cell[58676, 2221, 312, 9, 73, "Output"]
}, Open  ]],
Cell[59003, 2233, 184, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[59212, 2241, 774, 23, 86, "Input"],
Cell[59989, 2266, 313, 8, 80, "Output"]
}, Open  ]],
Cell[60317, 2277, 310, 6, 86, "Text"],
Cell[CellGroupData[{
Cell[60652, 2287, 209, 5, 45, "Input"],
Cell[60864, 2294, 306, 10, 45, "Output"]
}, Open  ]],
Cell[61185, 2307, 176, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[61386, 2315, 209, 5, 45, "Input"],
Cell[61598, 2322, 408, 13, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62043, 2340, 151, 3, 45, "Input"],
Cell[62197, 2345, 173, 4, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62407, 2354, 166, 4, 45, "Input"],
Cell[62576, 2360, 139, 3, 45, "Output"]
}, Open  ]],
Cell[62730, 2366, 183, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[62938, 2374, 208, 5, 45, "Input"],
Cell[63149, 2381, 235, 7, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63421, 2393, 211, 5, 45, "Input"],
Cell[63635, 2400, 359, 11, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64031, 2416, 152, 3, 45, "Input"],
Cell[64186, 2421, 187, 5, 45, "Output"]
}, Open  ]],
Cell[64388, 2429, 197, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[64610, 2437, 156, 3, 45, "Input"],
Cell[64769, 2442, 211, 7, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65017, 2454, 184, 5, 45, "Input"],
Cell[65204, 2461, 156, 4, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65397, 2470, 158, 3, 45, "Input"],
Cell[65558, 2475, 230, 8, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65825, 2488, 427, 16, 110, "Input"],
Cell[66255, 2506, 445, 17, 86, "Output"]
}, Open  ]],
Cell[66715, 2526, 140, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[66880, 2531, 204, 5, 75, "Input"],
Cell[67087, 2538, 141, 3, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67265, 2546, 259, 6, 45, "Input"],
Cell[67527, 2554, 461, 16, 86, "Output"]
}, Open  ]],
Cell[68003, 2573, 351, 7, 86, "Text"],
Cell[CellGroupData[{
Cell[68379, 2584, 1110, 33, 177, "Input"],
Cell[69492, 2619, 17671, 300, 322, "Output"]
}, Open  ]],
Cell[87178, 2922, 250, 5, 51, "Text"],
Cell[CellGroupData[{
Cell[87453, 2931, 685, 19, 90, "Input"],
Cell[88141, 2952, 4747, 94, 312, "Output"]
}, Open  ]],
Cell[92903, 3049, 104, 1, 51, "Text"],
Cell[93010, 3052, 409, 13, 73, "Text"],
Cell[93422, 3067, 169, 3, 45, "Input"],
Cell[CellGroupData[{
Cell[93616, 3074, 278, 8, 98, "Input"],
Cell[93897, 3084, 237, 7, 45, "Output"]
}, Open  ]],
Cell[94149, 3094, 132, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[94306, 3099, 169, 4, 45, "Input"],
Cell[94478, 3105, 141, 3, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94656, 3113, 153, 3, 45, "Input"],
Cell[94812, 3118, 370, 12, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95219, 3135, 152, 3, 45, "Input"],
Cell[95374, 3140, 262, 7, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95673, 3152, 236, 6, 45, "Input"],
Cell[95912, 3160, 388, 13, 45, "Output"]
}, Open  ]],
Cell[96315, 3176, 162, 3, 51, "Text"],
Cell[CellGroupData[{
Cell[96502, 3183, 246, 7, 49, "Input"],
Cell[96751, 3192, 215, 6, 49, "Output"]
}, Open  ]],
Cell[96981, 3201, 101, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[97107, 3206, 277, 8, 49, "Input"],
Cell[97387, 3216, 287, 8, 73, "Output"]
}, Open  ]],
Cell[97689, 3227, 480, 8, 120, "Text"],
Cell[CellGroupData[{
Cell[98194, 3239, 206, 5, 45, "Input"],
Cell[98403, 3246, 261, 9, 45, "Output"]
}, Open  ]],
Cell[98679, 3258, 174, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[98878, 3266, 207, 5, 45, "Input"],
Cell[99088, 3273, 361, 12, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[99486, 3290, 154, 3, 45, "Input"],
Cell[99643, 3295, 147, 4, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[99827, 3304, 164, 4, 45, "Input"],
Cell[99994, 3310, 115, 3, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[100146, 3318, 156, 3, 45, "Input"],
Cell[100305, 3323, 189, 7, 86, "Output"]
}, Open  ]],
Cell[100509, 3333, 127, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[100661, 3338, 210, 5, 45, "Input"],
Cell[100874, 3345, 217, 7, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101128, 3357, 258, 6, 45, "Input"],
Cell[101389, 3365, 361, 11, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101787, 3381, 151, 3, 45, "Input"],
Cell[101941, 3386, 193, 5, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[102171, 3396, 186, 5, 45, "Input"],
Cell[102360, 3403, 136, 4, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[102533, 3412, 157, 3, 45, "Input"],
Cell[102693, 3417, 208, 8, 86, "Output"]
}, Open  ]],
Cell[102916, 3428, 132, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[103073, 3433, 469, 17, 134, "Input"],
Cell[103545, 3452, 418, 16, 86, "Output"]
}, Open  ]],
Cell[103978, 3471, 233, 5, 51, "Text"],
Cell[CellGroupData[{
Cell[104236, 3480, 168, 4, 45, "Input"],
Cell[104407, 3486, 139, 3, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104583, 3494, 207, 5, 45, "Input"],
Cell[104793, 3501, 506, 18, 110, "Output"]
}, Open  ]],
Cell[105314, 3522, 503, 8, 86, "Text"],
Cell[CellGroupData[{
Cell[105842, 3534, 687, 19, 90, "Input"],
Cell[106532, 3555, 6294, 117, 312, "Output"]
}, Open  ]],
Cell[112841, 3675, 364, 8, 51, "Text"],
Cell[113208, 3685, 384, 12, 73, "Text"],
Cell[113595, 3699, 169, 3, 45, "Input"],
Cell[113767, 3704, 555, 13, 87, "Text"],
Cell[CellGroupData[{
Cell[114347, 3721, 267, 9, 98, "Input"],
Cell[114617, 3732, 302, 10, 45, "Output"]
}, Open  ]],
Cell[114934, 3745, 135, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[115094, 3750, 166, 4, 45, "Input"],
Cell[115263, 3756, 168, 4, 45, "Output"]
}, Open  ]],
Cell[115446, 3763, 205, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[115676, 3771, 400, 12, 54, "Input"],
Cell[116079, 3785, 313, 9, 45, "Output"]
}, Open  ]],
Cell[116407, 3797, 128, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[116560, 3802, 360, 11, 49, "Input"],
Cell[116923, 3815, 327, 9, 74, "Output"]
}, Open  ]],
Cell[117265, 3827, 382, 7, 86, "Text"],
Cell[117650, 3836, 590, 16, 87, "Text"],
Cell[118243, 3854, 85, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[118353, 3859, 256, 6, 45, "Input"],
Cell[118612, 3867, 344, 12, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[118993, 3884, 209, 5, 45, "Input"],
Cell[119205, 3891, 450, 14, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[119692, 3910, 150, 3, 45, "Input"],
Cell[119845, 3915, 214, 6, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[120096, 3926, 237, 6, 45, "Input"],
Cell[120336, 3934, 158, 4, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[120531, 3943, 157, 3, 45, "Input"],
Cell[120691, 3948, 232, 8, 86, "Output"]
}, Open  ]],
Cell[120938, 3959, 134, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[121097, 3964, 208, 5, 45, "Input"],
Cell[121308, 3971, 275, 9, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[121620, 3985, 209, 5, 45, "Input"],
Cell[121832, 3992, 379, 12, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122248, 4009, 151, 3, 45, "Input"],
Cell[122402, 4014, 171, 4, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122610, 4023, 164, 4, 45, "Input"],
Cell[122777, 4029, 167, 4, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122981, 4038, 155, 3, 45, "Input"],
Cell[123139, 4043, 209, 7, 86, "Output"]
}, Open  ]],
Cell[123363, 4053, 136, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[123524, 4058, 378, 15, 110, "Input"],
Cell[123905, 4075, 418, 16, 86, "Output"]
}, Open  ]],
Cell[124338, 4094, 141, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[124504, 4099, 166, 4, 45, "Input"],
Cell[124673, 4105, 140, 3, 45, "Output"]
}, Open  ]],
Cell[124828, 4111, 693, 25, 53, "Text"],
Cell[CellGroupData[{
Cell[125546, 4140, 211, 5, 45, "Input"],
Cell[125760, 4147, 476, 17, 110, "Output"]
}, Open  ]],
Cell[126251, 4167, 545, 18, 67, "Text"],
Cell[CellGroupData[{
Cell[126821, 4189, 1362, 41, 237, "Input"],
Cell[128186, 4232, 12838, 222, 329, "Output"]
}, Open  ]],
Cell[141039, 4457, 279, 5, 86, "Text"],
Cell[CellGroupData[{
Cell[141343, 4466, 1363, 44, 237, "Input"],
Cell[142709, 4512, 12828, 222, 314, "Output"]
}, Open  ]],
Cell[155552, 4737, 215, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[155792, 4745, 683, 18, 90, "Input"],
Cell[156478, 4765, 5796, 108, 312, "Output"]
}, Open  ]],
Cell[162289, 4876, 417, 13, 73, "Text"],
Cell[162709, 4891, 167, 3, 45, "Input"],
Cell[CellGroupData[{
Cell[162901, 4898, 300, 9, 98, "Input"],
Cell[163204, 4909, 262, 8, 45, "Output"]
}, Open  ]],
Cell[163481, 4920, 308, 5, 86, "Text"],
Cell[CellGroupData[{
Cell[163814, 4929, 167, 4, 45, "Input"],
Cell[163984, 4935, 139, 3, 45, "Output"]
}, Open  ]],
Cell[164138, 4941, 246, 5, 86, "Text"],
Cell[CellGroupData[{
Cell[164409, 4950, 154, 3, 45, "Input"],
Cell[164566, 4955, 421, 14, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[165024, 4974, 152, 3, 45, "Input"],
Cell[165179, 4979, 310, 9, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[165526, 4993, 234, 6, 45, "Input"],
Cell[165763, 5001, 416, 14, 45, "Output"]
}, Open  ]],
Cell[166194, 5018, 162, 3, 51, "Text"],
Cell[CellGroupData[{
Cell[166381, 5025, 296, 8, 49, "Input"],
Cell[166680, 5035, 239, 7, 49, "Output"]
}, Open  ]],
Cell[166934, 5045, 149, 2, 51, "Text"],
Cell[CellGroupData[{
Cell[167108, 5051, 149, 3, 45, "Input"],
Cell[167260, 5056, 314, 9, 73, "Output"]
}, Open  ]],
Cell[167589, 5068, 371, 7, 86, "Text"],
Cell[CellGroupData[{
Cell[167985, 5079, 208, 5, 45, "Input"],
Cell[168196, 5086, 283, 9, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168516, 5100, 233, 6, 45, "Input"],
Cell[168752, 5108, 385, 12, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[169174, 5125, 152, 3, 45, "Input"],
Cell[169329, 5130, 218, 6, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[169584, 5141, 191, 5, 45, "Input"],
Cell[169778, 5148, 161, 4, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[169976, 5157, 157, 3, 45, "Input"],
Cell[170136, 5162, 211, 7, 86, "Output"]
}, Open  ]],
Cell[170362, 5172, 132, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[170519, 5177, 208, 5, 45, "Input"],
Cell[170730, 5184, 241, 7, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171008, 5196, 211, 5, 45, "Input"],
Cell[171222, 5203, 363, 11, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171622, 5219, 155, 3, 45, "Input"],
Cell[171780, 5224, 240, 7, 76, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[172057, 5236, 210, 6, 76, "Input"],
Cell[172270, 5244, 183, 5, 76, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[172490, 5254, 155, 3, 45, "Input"],
Cell[172648, 5259, 234, 8, 86, "Output"]
}, Open  ]],
Cell[172897, 5270, 134, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[173056, 5275, 420, 16, 134, "Input"],
Cell[173479, 5293, 422, 16, 86, "Output"]
}, Open  ]],
Cell[173916, 5312, 249, 5, 51, "Text"],
Cell[CellGroupData[{
Cell[174190, 5321, 168, 4, 45, "Input"],
Cell[174361, 5327, 141, 3, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[174539, 5335, 213, 5, 45, "Input"],
Cell[174755, 5342, 527, 19, 86, "Output"]
}, Open  ]],
Cell[175297, 5364, 494, 17, 95, "Text"],
Cell[CellGroupData[{
Cell[175816, 5385, 1326, 43, 242, "Input"],
Cell[177145, 5430, 24189, 408, 480, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[201371, 5843, 858, 22, 90, "Input"],
Cell[202232, 5867, 7639, 139, 312, "Output"]
}, Open  ]],
Cell[209886, 6009, 192, 4, 51, "Text"]
}
]
*)


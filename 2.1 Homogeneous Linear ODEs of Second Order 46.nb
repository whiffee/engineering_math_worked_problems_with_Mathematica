(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    112876,       3209]
NotebookOptionsPosition[    105257,       2949]
NotebookOutlinePosition[    105645,       2966]
CellTagsIndexPosition[    105602,       2963]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
3 - 10 Reduction of order
Reduce to first order and solve, showing each step in detail.\
\>", "Text",
 CellChangeTimes->{{3.767705256315971*^9, 3.767705279001061*^9}},
 Background->RGBColor[
  0.9600061036087587, 0.9600061036087587, 0.9600061036087587]],

Cell[TextData[{
 "3. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"y", "'"}], " ", "'"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " + ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"y", "'"}], " "}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = 0"
}], "Text",
 CellChangeTimes->{{3.7677053092565403`*^9, 3.7677053651873093`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell["\<\
Reduction of order is something that Mathematica does not generally need to \
do.\
\>", "Text",
 CellChangeTimes->{{3.767705462222226*^9, 3.767705475636166*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqn", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"y", "''"}], "[", "x", "]"}], "+", 
    RowBox[{
     RowBox[{"y", "'"}], "[", "x", "]"}]}], "\[Equal]", "0"}]}]], "Input",
 CellChangeTimes->{{3.767705380974773*^9, 3.767705393601577*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    SuperscriptBox["y", "\[Prime]",
     MultilineFunction->None], "[", "x", "]"}], "+", 
   RowBox[{
    SuperscriptBox["y", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "x", "]"}]}], "\[Equal]", "0"}]], "Output",\

 CellChangeTimes->{3.767705395802147*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{"eqn", ",", "y", ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.767705399148946*^9, 3.7677054105765343`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "x", "}"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", "x"}]]}], " ", 
        RowBox[{"C", "[", "1", "]"}]}], "+", 
       RowBox[{"C", "[", "2", "]"}]}]}], "]"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.7677054132392073`*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eqn", "/.", "sol"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.767705422986617*^9, 3.767705431919156*^9}}],

Cell[BoxData[
 RowBox[{"{", "True", "}"}]], "Output",
 CellChangeTimes->{3.767705433075204*^9}]
}, Open  ]],

Cell[TextData[{
 "5.  y ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"y", "'"}], " ", "'"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = 3 ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"y", "'"}], ")"}], "2"], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.670283094322338*^9, 3.6702830957853622`*^9}, {
  3.76770548874895*^9, 3.767705535845483*^9}, {3.7677056418909616`*^9, 
  3.7677056449451933`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqn", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], 
    RowBox[{
     RowBox[{"y", "''"}], "[", "x", "]"}]}], "\[Equal]", 
   RowBox[{"3", 
    SuperscriptBox[
     RowBox[{
      RowBox[{"y", "'"}], "[", "x", "]"}], "2"]}]}]}]], "Input",
 CellChangeTimes->{{3.767705562741888*^9, 3.767705590324753*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"y", "[", "x", "]"}], " ", 
   RowBox[{
    SuperscriptBox["y", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "x", "]"}]}], "\[Equal]", 
  RowBox[{"3", " ", 
   SuperscriptBox[
    RowBox[{
     SuperscriptBox["y", "\[Prime]",
      MultilineFunction->None], "[", "x", "]"}], "2"]}]}]], "Output",
 CellChangeTimes->{3.767705593584482*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{"eqn", ",", "y", ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7677056058686647`*^9, 3.767705624242526*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "x", "}"}], ",", 
      FractionBox[
       RowBox[{"C", "[", "2", "]"}], 
       SqrtBox[
        RowBox[{
         RowBox[{"2", " ", "x"}], "+", 
         RowBox[{"C", "[", "1", "]"}]}]]]}], "]"}]}], "}"}], "}"}]], "Output",\

 CellChangeTimes->{3.7677056265467577`*^9},
 Background->RGBColor[1, 1, 0.85]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eqn", "/.", "sol"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.7677056546922827`*^9, 3.7677056608241243`*^9}}],

Cell[BoxData[
 RowBox[{"{", "True", "}"}]], "Output",
 CellChangeTimes->{3.767705663281*^9}]
}, Open  ]],

Cell[TextData[{
 "The text answer is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "/", 
    SqrtBox[
     RowBox[{
      RowBox[{
       SubscriptBox["c", "1"], "x"}], "+", 
      SubscriptBox["c", "2"]}]]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". So Mathematica and the text answer each have assigned a value to one of \
their three constants. This leaves leeway for the remaining assignments to be \
made in such a way that the two solutions become equivalent."
}], "Text",
 CellChangeTimes->{{3.7677057618506413`*^9, 3.767705800575151*^9}, {
  3.769897878597888*^9, 3.769898025895331*^9}, {3.769898057758259*^9, 
  3.769898068398003*^9}}],

Cell[TextData[{
 "7.  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"y", "'"}], " ", "'"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"+", 
    RowBox[{"y", "'"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["", "3"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "Sin[y] = 0"
}], "Text",
 CellChangeTimes->{{3.6702830705743628`*^9, 3.670283080153699*^9}, {
  3.7677058434535646`*^9, 3.767705910623784*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.772893611129431*^9, 3.772893611606765*^9}}],

Cell[TextData[{
 "This problem is a topsy-turvy little trip with an inverted domain. The \
substitution ",
 Cell[BoxData[
  FormBox[
   RowBox[{"z", "=", 
    RowBox[{"y", "'"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "[x] is made. Afterwards there is the form"
}], "Text",
 CellChangeTimes->{{3.767717706384063*^9, 3.7677177109104433`*^9}, {
  3.76771783246019*^9, 3.767717876075448*^9}, {3.7677179084909897`*^9, 
  3.767717926234973*^9}, {3.7677185037082987`*^9, 3.767718513207308*^9}, {
  3.7677185764345827`*^9, 3.76771857997849*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqn2", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"z", "'"}], "[", "y", "]"}], " ", 
    RowBox[{"z", "[", "y", "]"}]}], "\[Equal]", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox[
      RowBox[{"z", "[", "y", "]"}], "3"]}], 
    RowBox[{"Sin", "[", "y", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.767716966602297*^9, 3.767717031710882*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"z", "[", "y", "]"}], " ", 
   RowBox[{
    SuperscriptBox["z", "\[Prime]",
     MultilineFunction->None], "[", "y", "]"}]}], "\[Equal]", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"Sin", "[", "y", "]"}]}], " ", 
   SuperscriptBox[
    RowBox[{"z", "[", "y", "]"}], "3"]}]}]], "Output",
 CellChangeTimes->{3.767717033926278*^9}]
}, Open  ]],

Cell["Which can be processed by DSolve into the solution", "Text",
 CellChangeTimes->{{3.7677179666146812`*^9, 3.767717981970125*^9}, {
  3.76771855191671*^9, 3.767718568170376*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol2", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{"eqn2", ",", "z", ",", "y"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.767717051705967*^9, 3.767717067941676*^9}, {
  3.767717148661306*^9, 3.767717151298843*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", "y", "}"}], ",", "0"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", "y", "}"}], ",", 
       FractionBox["1", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"C", "[", "1", "]"}]}], "-", 
         RowBox[{"Cos", "[", "y", "]"}]}]]}], "]"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.767717068746036*^9, 3.767717151995226*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[TextData[{
 "The above green cell agrees with the text, though the text uses the \
inverted form of the fractional expression, calling it ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    FractionBox[
     RowBox[{"\[DifferentialD]", "x"}], 
     RowBox[{"\[DifferentialD]", "y"}]],
    FontSize->21], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " . Using the terms of the substitution, the solution checks out."
}], "Text",
 CellChangeTimes->{{3.767718056161131*^9, 3.767718150176132*^9}, {
  3.767718207240467*^9, 3.767718236462641*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eqn2", "/.", "sol2"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.767717155230225*^9, 3.767717167778061*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", "True"}], "}"}]], "Output",
 CellChangeTimes->{3.767717168980762*^9}]
}, Open  ]],

Cell["\<\
The next step is to reverse the substitution level by solving again.\
\>", "Text",
 CellChangeTimes->{{3.767718265007647*^9, 3.767718299829928*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqn3", "=", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{
     RowBox[{"x", "'"}], "[", "y", "]"}]}], "==", 
   RowBox[{
    RowBox[{"C", "[", "1", "]"}], "+", 
    RowBox[{"Cos", "[", "y", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7677174131422863`*^9, 3.767717443768229*^9}, {
  3.767717539742836*^9, 3.7677175821873293`*^9}, {3.7677176151544*^9, 
  3.767717615738328*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{
    SuperscriptBox["x", "\[Prime]",
     MultilineFunction->None], "[", "y", "]"}]}], "\[Equal]", 
  RowBox[{
   RowBox[{"C", "[", "1", "]"}], "+", 
   RowBox[{"Cos", "[", "y", "]"}]}]}]], "Output",
 CellChangeTimes->{3.767717472019184*^9, 3.767717617456315*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol3", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{"eqn3", ",", "x", ",", "y"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.767717479140126*^9, 3.767717494822339*^9}, {
  3.767717624810196*^9, 3.767717627897786*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "y", "}"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "y"}], " ", 
        RowBox[{"C", "[", "1", "]"}]}], "+", 
       RowBox[{"C", "[", "2", "]"}], "-", 
       RowBox[{"Sin", "[", "y", "]"}]}]}], "]"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.7677174957063303`*^9, 3.767717629502709*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[TextData[{
 "The green cell above matches the final answer in the text, with the \
provision that the sign on the constant -C[1] is opposite to the constant ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["c", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " in the text. The second use of DSolve also checks out true."
}], "Text",
 CellChangeTimes->{{3.767718375141946*^9, 3.7677184776836233`*^9}, {
  3.767718640121751*^9, 3.7677186418097563`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqn3", "/.", "sol3"}]], "Input",
 CellChangeTimes->{{3.767718319131056*^9, 3.7677183240538483`*^9}}],

Cell[BoxData[
 RowBox[{"{", "True", "}"}]], "Output",
 CellChangeTimes->{3.767718325584282*^9}]
}, Open  ]],

Cell[TextData[{
 "9.  ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"y", "'"}], " ", "'"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " -5x ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "'"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " +9 y = 0, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "3"], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.6702830552026787`*^9, 3.670283057122772*^9}, {
  3.767718939095562*^9, 3.7677189955299397`*^9}, {3.767719073763566*^9, 
  3.7677190755333147`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.767719031175353*^9, 3.767719047756295*^9}, 
   3.767719088228551*^9, {3.7728936189358683`*^9, 3.7728936193742228`*^9}}],

Cell[TextData[{
 "The substitution ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "3"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " works as advertised as a singular solution. If it is ignored,"
}], "Text",
 CellChangeTimes->{{3.76771948914357*^9, 3.76771954520577*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqn", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "2"], 
     RowBox[{
      RowBox[{"y", "''"}], "[", "x", "]"}]}], "-", 
    RowBox[{"5", " ", "x", " ", 
     RowBox[{
      RowBox[{"y", "'"}], "[", "x", "]"}]}], "+", 
    RowBox[{"9", " ", 
     RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", "0"}]}]], "Input",
 CellChangeTimes->{{3.767719093841851*^9, 3.767719137203183*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"9", " ", 
    RowBox[{"y", "[", "x", "]"}]}], "-", 
   RowBox[{"5", " ", "x", " ", 
    RowBox[{
     SuperscriptBox["y", "\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["x", "2"], " ", 
    RowBox[{
     SuperscriptBox["y", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}]}], "\[Equal]", 
  "0"}]], "Output",
 CellChangeTimes->{3.767719138481907*^9}]
}, Open  ]],

Cell[TextData[{
 "then Mathematica comes up with an equivalent solution, so long as C[1] is \
assigned the value 0 and C[2] is assigned the value ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", "3"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.767719568245216*^9, 3.767719613612603*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{"eqn", ",", "y", ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7677191468017073`*^9, 3.7677191613309813`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "x", "}"}], ",", 
      RowBox[{
       RowBox[{
        SuperscriptBox["x", "3"], " ", 
        RowBox[{"C", "[", "1", "]"}]}], "+", 
       RowBox[{"3", " ", 
        SuperscriptBox["x", "3"], " ", 
        RowBox[{"C", "[", "2", "]"}], " ", 
        RowBox[{"Log", "[", "x", "]"}]}]}]}], "]"}]}], "}"}], "}"}]], "Output",\

 CellChangeTimes->{3.767719162226584*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["\<\
The Mathematica solution, neither more nor less general than the text, checks \
out.\
\>", "Text",
 CellChangeTimes->{{3.767719665908094*^9, 3.767719677379951*^9}, {
  3.76771990228369*^9, 3.767719923360629*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eqn", "/.", "sol"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.7677192046634073`*^9, 3.767719212458015*^9}}],

Cell[BoxData[
 RowBox[{"{", "True", "}"}]], "Output",
 CellChangeTimes->{3.767719213487252*^9}]
}, Open  ]],

Cell["11 - 14 Applications of reducible ODEs", "Text",
 CellChangeTimes->{{3.767719957553499*^9, 3.7677199746082077`*^9}, {
  3.7677200956063747`*^9, 3.7677201014943047`*^9}},
 Background->RGBColor[
  0.9600061036087587, 0.9600061036087587, 0.9600061036087587]],

Cell[TextData[{
 "11. Curve. Find the curve through the origin in the xy-plane which \
satisfies ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"y", "'"}], " ", "'"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = 2 ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "'"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and whose tangent at the origin has slope 1."
}], "Text",
 CellChangeTimes->{{3.7677201097502337`*^9, 3.767720166405444*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.772893626087356*^9, 3.772893626533901*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqn", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "''"}], "[", "x", "]"}], "\[Equal]", 
   RowBox[{"2", 
    RowBox[{
     RowBox[{"y", "'"}], "[", "x", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.767720253299253*^9, 3.7677202735083227`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["y", "\[Prime]\[Prime]",
    MultilineFunction->None], "[", "x", "]"}], "\[Equal]", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox["y", "\[Prime]",
     MultilineFunction->None], "[", "x", "]"}]}]}]], "Output",
 CellChangeTimes->{3.767720277918056*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"eqn", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", "1"}], ",", 
      RowBox[{
       RowBox[{"y", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], ",", "y", 
    ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.767720279826494*^9, 3.767720306883731*^9}, {
  3.7677203812768908`*^9, 3.7677203858669147`*^9}, {3.767720953262211*^9, 
  3.767720954052404*^9}, {3.767721000308105*^9, 3.767721024067862*^9}, {
  3.767721073587422*^9, 3.7677211021547422`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "x", "}"}], ",", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "x"}]]}], ")"}]}]}], "]"}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.767720308935853*^9, 3.767720387599574*^9, 3.767720955770897*^9, {
   3.767721001636128*^9, 3.7677210252643423`*^9}, {3.767721075478765*^9, 
   3.76772110290453*^9}},
 Background->RGBColor[1, 1, 0.85]]
}, Open  ]],

Cell["\<\
The plot below shows that the text answer meets neither of the two \
requirements stated for the solution. The function in the yellow cell above \
meets both.\
\>", "Text",
 CellChangeTimes->{{3.767721246784482*^9, 3.7677212922807426`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "x"}]]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"-", "2"}], "+", 
      RowBox[{"25", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", "x"}]]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "250"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.767720457094915*^9, 3.7677205077453327`*^9}, {
   3.767720561090291*^9, 3.767720569640633*^9}, {3.767720659247837*^9, 
   3.7677207154470654`*^9}, 3.767720961940443*^9, {3.767721008916061*^9, 
   3.767721031891761*^9}, {3.767721079459413*^9, 3.7677212160581207`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwBsQJO/SFib1JlAgAAACoAAAACAAAALj8W6v///7/3+aNQ9Wnfv1RqJ4j5
+v+/p1Gi9JZp3796lTgm8/X/vyY/SV04ad+/x+taYubr/79Ufft7emjfv2CY
n9rM1/+/Ms3W6vtm37+R8SjLma//vzIiRW3zY9+/9KM7rDNf/78ryfP2s13f
v7oIYW5nvv6/AJ28W3JQ379/zdbrwWH9v9UbQ8zdL9+/6aUZFzcc/L9vo/f8
AQzfvyrfSAkP3fq/mrfllNzi3r+kE6P02YL5vzmBgqFYrt6/w1vKjb8/+L8e
fWrmpHTevxyfHCCY4fa/F/ipIe0q3r9LQ1t504n1v4E6lRgy1d2/H/tmgClJ
9L9kTLlgKHfdvy2unYBy7fK/+0KBXBf/3L/gdKEu1qjxv8BfoU4He9y/aZyR
o5xq8L+E/TL/kePbv1h+WSOsIu6/KDn4O04i278o6ylbVJ7rvw4FNDoXTtq/
a05QheLj6L8gEGpVCT/Zv1pzTz02Nua/HleCovgD2L+Tv+hQv7bjv0BMa8OZ
qta/PwLYVi4B4b98QmyavPHUv2rYwnCl89y/vB0pPiMN0788mYEYunjXv2j4
ybnxodC/aN3x21kX0r8gSxUVQKPLv0/gLK3IJMq/mOn0AmF2xb82v5vX6oS+
v9QsrM9PJ7u/OfBdY95jpL8YIOy6ZpmjvyuD7wrAdaM/UKzPSvw3pD+vx+6p
f1i/PyBOjnY1wsE/vUnKODrCyT+Ea1d0vbbPP+uqomlOWNI/sPeXfDrF2D+d
rS6b9LXXP3IKeoc1keE/vGGGFTC33D+49uCd/T/nP3oUmdVPEuE/AEl9U0aB
7j/M0NRE0prjP7hl6LHPPfM/ccs3Jo8W5j9UhB9au9D3P6TPRBVmyOg/7KdA
dbqm/T9XpoBoXLTpPwAAAAAAAABAXk555Q==
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwBYQGe/iFib1JlAgAAABUAAAACAAAALj8W6v///7+LtAFweqz4v1RqJ4j5
+v+/pPzs8d6n+L96lTgm8/X/v1yVE45Ao/i/x+taYubr/7+bnscN+5n4v2CY
n9rM1/+/8AR990yH+L+R8SjLma//v3Ir4NViYfi/9KM7rDNf/7+VUueOSRP4
v7oIYW5nvv6/haq1epVt979/zdbrwWH9v+XbRnlU1vW/6aUZFzcc/L/vehfa
GBb0vyrfSAkP3fq/Cnc3RcUT8r+kE6P02YL5v4yevsWnBu+/w1vKjb8/+L/y
N2aAGmTpvxyfHCCY4fa/SjqZSSgx4r9LQ1t504n1vyRtJc3Io9O/H/tmgClJ
9L9Atw5DLl6Uvy2unYBy7fK/COvA7m8t1j/gdKEu1qjxvzimPVJJ/Oc/aZyR
o5xq8L8OnwIKX2PzP1h+WSOsIu6/kjVhEi7T/D+NikSbPF3tvwAAAAAAAABA
I9e/8A==
     "]]}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->250,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-2, 2}, {-2, 2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.767720509026075*^9, 3.767720570510672*^9, {3.767720665606955*^9, 
   3.767720716245825*^9}, 3.767720963235754*^9, {3.7677210103083057`*^9, 
   3.7677210328394613`*^9}, 3.7677210813016033`*^9, {3.767721112658721*^9, 
   3.767721154397214*^9}, {3.767721194669722*^9, 3.767721216840382*^9}}]
}, Open  ]],

Cell["\<\
13.  Motion. If, in the motion of a small body on a straight line, the sum of \
the velocity and acceleration equals a positive constant, how will the \
distance y[t] depend on the initial velocity and position?\
\>", "Text",
 CellChangeTimes->{{3.670283221691799*^9, 3.670283223820225*^9}, {
  3.767721397112946*^9, 3.7677214729029913`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.772893634527357*^9, 3.772893634957665*^9}}],

Cell["\<\
First, there is an objection against the statement that the sum of velocity \
and acceleration equals a constant. The two quantities have different units, \
so they can\[CloseCurlyQuote]t be added. The problem must mean to stipulate \
that the sum of the coefficients of acceleration and velocity add to a \
constant. To try to understand this a little bit, I will plot the text answer.\
\>", "Text",
 CellChangeTimes->{{3.767721617573151*^9, 3.767721637949108*^9}, {
  3.7677244277284927`*^9, 3.767724523573811*^9}, {3.7677247647139187`*^9, 
  3.767724795169681*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"y", "[", "t_", "]"}], "=", 
  RowBox[{
   RowBox[{
    SubscriptBox["c", "1"], 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "t"}]]}], "+", 
   RowBox[{"k", " ", "t"}], "+", 
   SubscriptBox["c", "2"]}]}]], "Input",
 CellChangeTimes->{{3.767723307676867*^9, 3.767723386510799*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"k", " ", "t"}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", "t"}]], " ", 
   SubscriptBox["c", "1"]}], "+", 
  SubscriptBox["c", "2"]}]], "Output",
 CellChangeTimes->{3.767723387851788*^9}]
}, Open  ]],

Cell[TextData[{
 "The grid squares do not appear as squares, but the axes\[CloseCurlyQuote]s \
major ticks seem to be about equal. The problem is supposed to be about \
travel along a straight line; here the straight line must be the y-axis. With \
my choice of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["c", "1"], ",", " ", 
    SubscriptBox["c", "2"], ",", " ", 
    RowBox[{
     RowBox[{"and", " ", "k"}], " ", "=", " ", "1"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " , the starting point must be y = 2, and sum of acceleration and velocity \
must be 1, and the starting velocity must be 1."
}], "Text",
 CellChangeTimes->{{3.7677250512454348`*^9, 3.76772507301303*^9}, {
  3.767725120340427*^9, 3.7677251225164757`*^9}, {3.767725175363665*^9, 
  3.7677251981873503`*^9}, {3.767725295609942*^9, 3.767725378128738*^9}, {
  3.7677257213711987`*^9, 3.7677257573549137`*^9}, {3.767725802298271*^9, 
  3.767725833577437*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "t"}]], "+", "t", " ", "+", "1"}], ",", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "t"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "5"}], "}"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1.3"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7677248060048428`*^9, 3.767724976670949*^9}, {
  3.767725015958577*^9, 3.7677250163182583`*^9}, {3.7677255378483686`*^9, 
  3.7677255492622633`*^9}, {3.7677255823418694`*^9, 3.7677256877640667`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
EQNr2x1WjVYuQdVXt+5UKzPxzZjpz8/aMrjJpXwn8yoTj1YrK3yIl0Fuogy7
doKJXQkHPM1psqjKlQm3PiCNLzY3bCtwk8UdwgMr3pdI43ZfuzXGlbI43P61
tEqNxJ3lJ4fNNrDQOzGKvErlqrTT8ta/xcJamvKQxXUS6dqBP2Zvs1DN/WW1
RByJj9oN3IoSWPhV63tozE0SDwnrOuncY6HdWxy+lUTi2ytdRzTTWWg0Olb7
MJPExMGDZcq5LJQ123+57C2JhV1FEYvfsdA3a9jpchWJNrqwkVfPwnppzlaz
GhIr2OpdEe9ZGNGZO15TR+KBIV0degsLCV9Jl8ZmEm9WLZkS7GRhfxIXer6Q
GMoxeDXTz0JTQdvlab0kDvNGAwoHWJjmMTjp9p3EqA4hPf9fLHTcsCz7Rz+J
vgNQMj7CwqZKX7mRERLj5WitQ9Ms1NIQn34xRiL2xaZkz7LwWlxK46kJEtf/
7+xRrzkWmjvwwqenqTw0e+GfCyx8WOpy+OUsiWetrZue0NgotGbWMHiOxByj
W2kegmx0uhazwmCeOt9Ux2+1MBtLxlRmFhZI/FWhZv5NhI3/AoOs+5E=
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwVjX040wkcwL00RUv4RcjLUleRHFcq7vL9osh5LTltq5hFJeUxytVmFaLJ
lFSeeSl56+2Zi1QILbrKy9Z56ZwrjxJWMzZpkRbX/fF5Pn98/vgsjYjdHqml
oaHh/53/XciN0HHay3azubKhZXZWAVdoctdQChXyjCJ9WRMK6PXPYFEoB2Bl
pk3dh2EFJHpT9UmUY5DOuBgiFSvA6wnumrTmQUTNoQDLAgUIk9elKK0F8Dob
81kuCnjLqDAZtb4JP8X1RtxLHAP2toPhI9a1sP3gIot1WqOg+yW/JcahFTyK
XLzKF8kgrulEppzVBaka63kuhVJwKM3pqK7ohd8M+eAUMwRDAfst+je+gc99
zqRgr3eQa55meS38HVDzO+I1Et+CC6vmD+32YeDc17z9mNkPzT35QbErZcDz
crWI83wNTpkzbqY+o8DVLNs3VtQL3sOu/Y6hSqg1M3jKJPeAdM39LZ/k4yBx
6OEP9XcDW81bW398Ajap+fwd450w1/D9gR12KngQcppOJ3cASUzynt/wGWZd
/BQ0qQS+SoQxF+KmgH4iMfDSszYYCq0ws7KaBt/uzXVLSS3gfubwoefCr9Cc
zPURVj6FSzM1up5h38AjnJnqHv0E6BbNfq8nZiBwKin9DrcJyKLVcpsQDezx
otmbXhFBpHOximqviT+zrmseH2mARO7v2ykqTdT2rXTbQHkIp2U5XRKJFgou
Ll78jVkDfnYLb5DztDF1574jpib3gS9cL/JjzEHS0yLaiG41tAaXqBNcSNhO
4UiM5lWBSBybaa+tg6Q7xwQmoXegKvoUtvfpoIrJazYPE4KVL2w8XD0XlQnz
Db6yboHn7K6Uq5x5KL9hnBSrvg57/370sSZEF91TbYnuC2Xgdir5HoOihyv0
BV84GSVwIXb8IVmqhzE02zGt+mswcLJs+GrjfGzKs6O8lF+FkcjavU3pZNTT
VnXtUBaA8pDRXDFjAdru2ky1mZMHFT5t6qg1+riM+kNPHz8Xhvc7rtdW6aOj
mwlrcPclML/9b066eCEGUxZUU1xyICWcVSz2NcCQ0uD6xuhsmFSb8X1rDVDn
ZgPP0f8crHqYK2hdbohH18WFlzhkgjPzz0BDniFGxUgai/g8EBUYm7arDDHg
F/XZ4uk0WCUyzgigG+HgIsXRIy9SwZ8kt+xsNEKrj6/+MRlIBuWrweYWOwJZ
DZ1m1JmTEFvAJ3jnCAxijmcdFnOhXXO54tdsAgUq0c4Pj7hgt6+ulZxDYN2n
DsPoKi4MOklPnb9MYLbC3zsplws7n6Eyt5DA5fWkRBmDCx4fJ9rLbxM4EjV6
vW8yCUy20tKePCOw8wyNa7wqCeKFSkZaC4HxrB9dfZYkwV9G6Zu2thEY1bP4
YrJ+Epztu/upTULgHndvUx0VBzTiFzC7XhI4TaVZBjVxQFYogoF3BHLp5ZOj
uzngrR26pHSIwIYSu9jj2zhQun/0c6SUQM+SF7vJWzgQtta84oOMQHnQ4GW0
50D383iL8fHvXSvQWTbNBicHvamqCQIfub63KR5jQ1ZOUVeC6vsvOSshbIAN
PnvEGVNTBHp4ZbrKWthQ3syMqpsm8AB99a0HDWyYYzvtzlETmHI3KiGjkg2M
rPOWbjMEvqkcvBxRxobGiRVfZmcJbHvstxAFbPgPtw0+nQ==
     "]]}},
  AspectRatio->1.3,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->
   FrontEndValueCache[{
    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6, 6}]& , 
     Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6, 6}]& }, {{{0., 
       Directive[
        AbsoluteThickness[0.1]]}, {1., 
       Directive[
        AbsoluteThickness[0.1]]}, {2., 
       Directive[
        AbsoluteThickness[0.1]]}, {3., 
       Directive[
        AbsoluteThickness[0.1]]}, {4., 
       Directive[
        AbsoluteThickness[0.1]]}, {5., 
       Directive[
        AbsoluteThickness[0.1]]}, {-1., 
       Directive[
        AbsoluteThickness[0.1]]}, {-0.8, 
       Directive[
        AbsoluteThickness[0.1]]}, {-0.6, 
       Directive[
        AbsoluteThickness[0.1]]}, {-0.4, 
       Directive[
        AbsoluteThickness[0.1]]}, {-0.2, 
       Directive[
        AbsoluteThickness[0.1]]}, {0.2, 
       Directive[
        AbsoluteThickness[0.1]]}, {0.4, 
       Directive[
        AbsoluteThickness[0.1]]}, {0.6, 
       Directive[
        AbsoluteThickness[0.1]]}, {0.8, 
       Directive[
        AbsoluteThickness[0.1]]}, {1.2, 
       Directive[
        AbsoluteThickness[0.1]]}, {1.4, 
       Directive[
        AbsoluteThickness[0.1]]}, {1.6, 
       Directive[
        AbsoluteThickness[0.1]]}, {1.8, 
       Directive[
        AbsoluteThickness[0.1]]}, {2.2, 
       Directive[
        AbsoluteThickness[0.1]]}, {2.4, 
       Directive[
        AbsoluteThickness[0.1]]}, {2.6, 
       Directive[
        AbsoluteThickness[0.1]]}, {2.8, 
       Directive[
        AbsoluteThickness[0.1]]}, {3.2, 
       Directive[
        AbsoluteThickness[0.1]]}, {3.4, 
       Directive[
        AbsoluteThickness[0.1]]}, {3.6, 
       Directive[
        AbsoluteThickness[0.1]]}, {3.8, 
       Directive[
        AbsoluteThickness[0.1]]}, {4.2, 
       Directive[
        AbsoluteThickness[0.1]]}, {4.4, 
       Directive[
        AbsoluteThickness[0.1]]}, {4.6, 
       Directive[
        AbsoluteThickness[0.1]]}, {4.8, 
       Directive[
        AbsoluteThickness[0.1]]}, {5.2, 
       Directive[
        AbsoluteThickness[0.1]]}, {5.4, 
       Directive[
        AbsoluteThickness[0.1]]}, {5.6, 
       Directive[
        AbsoluteThickness[0.1]]}, {5.8, 
       Directive[
        AbsoluteThickness[0.1]]}, {6., 
       Directive[
        AbsoluteThickness[0.1]]}}, {{0., 
       Directive[
        AbsoluteThickness[0.1]]}, {2., 
       Directive[
        AbsoluteThickness[0.1]]}, {4., 
       Directive[
        AbsoluteThickness[0.1]]}, {6., 
       Directive[
        AbsoluteThickness[0.1]]}, {-2., 
       Directive[
        AbsoluteThickness[0.1]]}, {-1.5, 
       Directive[
        AbsoluteThickness[0.1]]}, {-1., 
       Directive[
        AbsoluteThickness[0.1]]}, {-0.5, 
       Directive[
        AbsoluteThickness[0.1]]}, {0.5, 
       Directive[
        AbsoluteThickness[0.1]]}, {1., 
       Directive[
        AbsoluteThickness[0.1]]}, {1.5, 
       Directive[
        AbsoluteThickness[0.1]]}, {2.5, 
       Directive[
        AbsoluteThickness[0.1]]}, {3., 
       Directive[
        AbsoluteThickness[0.1]]}, {3.5, 
       Directive[
        AbsoluteThickness[0.1]]}, {4.5, 
       Directive[
        AbsoluteThickness[0.1]]}, {5., 
       Directive[
        AbsoluteThickness[0.1]]}, {5.5, 
       Directive[
        AbsoluteThickness[0.1]]}, {6.5, 
       Directive[
        AbsoluteThickness[0.1]]}, {7., 
       Directive[
        AbsoluteThickness[0.1]]}, {7.5, 
       Directive[
        AbsoluteThickness[0.1]]}, {8., 
       Directive[
        AbsoluteThickness[0.1]]}}}],
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->300,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 5}, {0., 6.006737845645814}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7677248520480633`*^9, {3.767724888272911*^9, 3.767724977434264*^9}, 
   3.767725017006639*^9, 3.7677255506371517`*^9, {3.767725583675159*^9, 
   3.7677256886920652`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tid", "=", 
  RowBox[{"N", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", "t"}]], "+", "t", " ", "+", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "15"}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.767725975650754*^9, 3.7677260460621777`*^9}, 
   3.7677268772680483`*^9, {3.767726926953364*^9, 3.767726929631855*^9}, 
   3.7677271388844633`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.`", ",", "2.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "2.3678794411714423`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.`", ",", "3.135335283236613`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.`", ",", "4.049787068367864`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.`", ",", "5.018315638888734`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "6.006737946999086`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.`", ",", "7.002478752176667`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.`", ",", "8.000911881965555`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.`", ",", "9.000335462627902`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.`", ",", "10.000123409804086`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10.`", ",", "11.000045399929762`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11.`", ",", "12.00001670170079`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12.`", ",", "13.000006144212353`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13.`", ",", "14.000002260329406`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.`", ",", "15.00000083152872`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15.`", ",", "16.000000305902322`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.767726032892679*^9, 3.767726046563134*^9}, 
   3.767726879071268*^9, 3.767726931157329*^9, 3.7677271401047688`*^9}]
}, Open  ]],

Cell["\<\
What can be seen from the two cells below is that by the time t=14, \
acceleration has nearly disappeared, which means that added velocity is also \
nearly gone, and the travel velocity is at the rate of the starting velocity.\
\
\>", "Text",
 CellChangeTimes->{{3.767727437704253*^9, 3.7677275429333143`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tir", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"tid", "[", 
       RowBox[{"[", "n", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], "-", 
     RowBox[{
      RowBox[{"tid", "[", 
       RowBox[{"[", "n", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "15"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7677269349557323`*^9, 3.7677269771588907`*^9}, {
  3.76772701695189*^9, 3.767727073045416*^9}, {3.767727144292368*^9, 
  3.767727145068342*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2.`", ",", "1.3678794411714423`", ",", "1.1353352832366128`", ",", 
   "1.0497870683678636`", ",", "1.0183156388887342`", ",", 
   "1.0067379469990856`", ",", "1.0024787521766667`", ",", 
   "1.0009118819655551`", ",", "1.000335462627902`", ",", 
   "1.000123409804086`", ",", "1.0000453999297623`", ",", 
   "1.0000167017007904`", ",", "1.0000061442123531`", ",", 
   "1.0000022603294063`", ",", "1.0000008315287197`"}], "}"}]], "Output",
 CellChangeTimes->{3.767726978223012*^9, 3.767727074047453*^9, 
  3.767727145887084*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", "14"}]], "]"}]], "Input",
 CellChangeTimes->{{3.767727251178279*^9, 3.7677272700499973`*^9}}],

Cell[BoxData["8.315287191035679`*^-7"], "Output",
 CellChangeTimes->{{3.7677272578120213`*^9, 3.767727271179388*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"y", "'"}], "[", "t", "]"}]], "Input",
 CellChangeTimes->{{3.7677234163862247`*^9, 3.767723419054418*^9}}],

Cell[BoxData[
 RowBox[{"k", "-", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", "t"}]], " ", 
   SubscriptBox["c", "1"]}]}]], "Output",
 CellChangeTimes->{3.767723421311324*^9}]
}, Open  ]],

Cell["\<\
15 - 19 General solution. Initial value problem (IVP)
(More in the next set.) (a) Verify that the given functions are linearly \
independent and form a basis of solutions of the given ODE. (b) Solve the \
IVP. Graph or sketch the solution.\
\>", "Text",
 CellChangeTimes->{{3.7677276423234463`*^9, 3.767727645787603*^9}, {
  3.76772948873414*^9, 3.767729578668004*^9}},
 Background->RGBColor[
  0.9600061036087587, 0.9600061036087587, 0.9600061036087587]],

Cell[TextData[{
 "15.  4 ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "''"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " + 25 y = 0, y[0] = 3.0, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "'"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "[0] = -2.5, Cos[2.5 x], Sin[2.5 x]"
}], "Text",
 CellChangeTimes->{{3.767729592675511*^9, 3.767729666762582*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.772893646398424*^9, 3.772893646837006*^9}}],

Cell["\<\
By inspection, the two trig expressions are independent. To test whether they \
are solutions,\
\>", "Text",
 CellChangeTimes->{{3.670283687874646*^9, 3.670283717352463*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqn", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"4", " ", 
     RowBox[{
      RowBox[{"y", "''"}], "[", "x", "]"}]}], "+", 
    RowBox[{"25", " ", 
     RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", "0"}]}]], "Input",
 CellChangeTimes->{{3.767729804972857*^9, 3.7677298240803423`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"25", " ", 
    RowBox[{"y", "[", "x", "]"}]}], "+", 
   RowBox[{"4", " ", 
    RowBox[{
     SuperscriptBox["y", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}]}], "\[Equal]", 
  "0"}]], "Output",
 CellChangeTimes->{3.767729828723544*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"eqn", ",", 
      RowBox[{
       RowBox[{"y", "[", "0", "]"}], "\[Equal]", "3.0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", 
       RowBox[{"-", "2.5"}]}]}], "}"}], ",", "y", ",", "x"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.767729832299714*^9, 3.7677298769272947`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "x", "}"}], ",", 
      RowBox[{
       RowBox[{"3.`", " ", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"5", " ", "x"}], "2"], "]"}]}], "-", 
       RowBox[{"1.`", " ", 
        RowBox[{"Sin", "[", 
         FractionBox[
          RowBox[{"5", " ", "x"}], "2"], "]"}]}]}]}], "]"}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.767729880059228*^9}]
}, Open  ]],

Cell["The solution checks.", "Text",
 CellChangeTimes->{{3.767730177259493*^9, 3.7677301804503603`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eqn", "/.", "sol"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.767729904006917*^9, 3.767729928718329*^9}}],

Cell[BoxData[
 RowBox[{"{", "True", "}"}]], "Output",
 CellChangeTimes->{3.767729930327039*^9}]
}, Open  ]],

Cell["The two proposed solutions check.", "Text",
 CellChangeTimes->{{3.767730185050057*^9, 3.767730191225917*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eqn", "/.", 
   RowBox[{"Cos", "[", 
    RowBox[{"2.5", " ", "x"}], "]"}]}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.767729958245036*^9, 3.767729969277861*^9}, {
  3.767730022461317*^9, 3.767730033581513*^9}, {3.767730090980255*^9, 
  3.7677301246995373`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Cos\\\", \
\\\"[\\\", RowBox[{\\\"2.5`\\\", \\\" \\\", \\\"x\\\"}], \\\"]\\\"}], \\\"}\\\
\"}]\\)\[NoBreak] is neither a list of replacement rules nor a valid dispatch \
table, and so cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.767729970270317*^9, {3.7677300077108088`*^9, 3.767730035618475*^9}, {
   3.767730096026416*^9, 3.7677301256643476`*^9}}],

Cell[BoxData[
 RowBox[{"True", "/.", "\[VeryThinSpace]", 
  RowBox[{"Cos", "[", 
   RowBox[{"2.5`", " ", "x"}], "]"}]}]], "Output",
 CellChangeTimes->{
  3.767729970276778*^9, {3.76773000772104*^9, 3.7677300356272793`*^9}, {
   3.767730096035253*^9, 3.7677301256731033`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eqn", "/.", 
   RowBox[{"Sin", "[", 
    RowBox[{"2.5", " ", "x"}], "]"}]}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.767730141164426*^9, 3.76773014377244*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Sin\\\", \
\\\"[\\\", RowBox[{\\\"2.5`\\\", \\\" \\\", \\\"x\\\"}], \\\"]\\\"}], \\\"}\\\
\"}]\\)\[NoBreak] is neither a list of replacement rules nor a valid dispatch \
table, and so cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.767730145066078*^9}],

Cell[BoxData[
 RowBox[{"True", "/.", "\[VeryThinSpace]", 
  RowBox[{"Sin", "[", 
   RowBox[{"2.5`", " ", "x"}], "]"}]}]], "Output",
 CellChangeTimes->{3.767730145072715*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"3.`", " ", 
     RowBox[{"Cos", "[", 
      FractionBox[
       RowBox[{"5", " ", "x"}], "2"], "]"}]}], "-", 
    RowBox[{"1.`", " ", 
     RowBox[{"Sin", "[", 
      FractionBox[
       RowBox[{"5", " ", "x"}], "2"], "]"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7677302293409233`*^9, 3.7677302730251017`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
cNoP6lz+vnfo8sIMen53h3ZyDxPPe+9Y5JmaQW889l/dNM3EDUXFpqK9Mygv
xvPi/94Jf8N3PbBqBo3MWrQqUO/mhGmiVFjgDNrntVi9tJ6F2wdPl8rcmUH+
yhlznX9YuCZQ1v619wwCjdIXY0ZZ+NXXp3nYeQadlz7als/PxscPPNrfbz6D
ZtVg8r0dbFxxxOceFJtBdCUtvctZVF83v03tk8AMKnUqqrfFbBz3bK7BgphB
T0vUbupSfea135fl7Wem0QaGVpd/Nxurn76AHrdMoxM7jw+linFwlN3hyb8x
0+i3/8hrflcOduAbNvsWPo3cFHd9mKH6Zp0M38T3QdPoee9eXXSfg1snUywD
vKfRZmmqYY3jYJkbi+/WWk+j1Sq8aju+cPCIXOhyUctpdJAzk8po5uCiciX7
hd3TaOP3aDKyk4NPLTWX/KI7jRJFwkUPzHBwfHj8dWfpaZRfaV4wJ0NgV+0t
Pw6JTqO0dzZHbisT2PDX5/V6/NMou8PLsleDwN2rptoEF6bQrU2tytpGBFZK
MzbI+jWFWl/5vVpiS+DU0iEO9+kU0k7jKh9+SeDrNr4nWkOn0JaeVeIuaQTe
zbviXXnAFJocP/nwTA6BR/bo2YV7TSEVx5Hxr8UEVm95VK11dArx1fMermkh
MP260mrZA1PoyJmvTsntBP4mU3iNNJ1C0WfLC4/3UPGe617XvHUK3XYjWveM
ETh3VOuh539TqOrTRrifTWK/0M99p4WmkDpLSGGEl8SWm0/pmy6ZQod05eln
BUg87XV/XHKOi0Ty43waxEhcsVLGlDXORS82BIt8+4/ET4qz4wf/cpGzUubt
lytJrE20Wnxo5iJutsXvHwok5n19KS2xjotsRw8VaiiTuMWMwwmq4qLJpaHW
NmtJ7PVILc86n4uCbrv/tNAgsdmmsmU7M7lIUjYxddkmEks3WdmqJXPRlKKw
2gstEiNpXwlaJBetiL+utWcbidnBykKuIVyU5SdHNwIkNqXVLenx56LXJ2cS
xfVIHHLpKvOwLxc5Qjf5Kn0SN3bI/Kv25CIbqW3ultsp/xYVk8CVi0y7FJ8X
GZL4bLnTUKYDF0l4bIskdpA4ZbNYz+qzXFSXk3tGdSeJx5I+/I44RsXj8O+f
qjGJtSTONS45yEVFzilneE1I7H2fr/b6bi4SeBgUXkrh8vnsylEjLhKMfvH4
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
VIxut8AP4P//HwLdO9u/hojmg/8DnNMAlg==
     "]]}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->
   FrontEndValueCache[{
    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6, 6}]& , 
     Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6, 
      6}]& }, {{{-3., 
       Directive[
        AbsoluteThickness[0.1]]}, {-2., 
       Directive[
        AbsoluteThickness[0.1]]}, {-1., 
       Directive[
        AbsoluteThickness[0.1]]}, {0., 
       Directive[
        AbsoluteThickness[0.1]]}, {1., 
       Directive[
        AbsoluteThickness[0.1]]}, {2., 
       Directive[
        AbsoluteThickness[0.1]]}, {3., 
       Directive[
        AbsoluteThickness[0.1]]}, {-4., 
       Directive[
        AbsoluteThickness[0.1]]}, {-3.8, 
       Directive[
        AbsoluteThickness[0.1]]}, {-3.6, 
       Directive[
        AbsoluteThickness[0.1]]}, {-3.4, 
       Directive[
        AbsoluteThickness[0.1]]}, {-3.2, 
       Directive[
        AbsoluteThickness[0.1]]}, {-2.8, 
       Directive[
        AbsoluteThickness[0.1]]}, {-2.6, 
       Directive[
        AbsoluteThickness[0.1]]}, {-2.4, 
       Directive[
        AbsoluteThickness[0.1]]}, {-2.2, 
       Directive[
        AbsoluteThickness[0.1]]}, {-1.8, 
       Directive[
        AbsoluteThickness[0.1]]}, {-1.6, 
       Directive[
        AbsoluteThickness[0.1]]}, {-1.4, 
       Directive[
        AbsoluteThickness[0.1]]}, {-1.2, 
       Directive[
        AbsoluteThickness[0.1]]}, {-0.8, 
       Directive[
        AbsoluteThickness[0.1]]}, {-0.6, 
       Directive[
        AbsoluteThickness[0.1]]}, {-0.4, 
       Directive[
        AbsoluteThickness[0.1]]}, {-0.2, 
       Directive[
        AbsoluteThickness[0.1]]}, {0.2, 
       Directive[
        AbsoluteThickness[0.1]]}, {0.4, 
       Directive[
        AbsoluteThickness[0.1]]}, {0.6, 
       Directive[
        AbsoluteThickness[0.1]]}, {0.8, 
       Directive[
        AbsoluteThickness[0.1]]}, {1.2, 
       Directive[
        AbsoluteThickness[0.1]]}, {1.4, 
       Directive[
        AbsoluteThickness[0.1]]}, {1.6, 
       Directive[
        AbsoluteThickness[0.1]]}, {1.8, 
       Directive[
        AbsoluteThickness[0.1]]}, {2.2, 
       Directive[
        AbsoluteThickness[0.1]]}, {2.4, 
       Directive[
        AbsoluteThickness[0.1]]}, {2.6, 
       Directive[
        AbsoluteThickness[0.1]]}, {2.8, 
       Directive[
        AbsoluteThickness[0.1]]}, {3.2, 
       Directive[
        AbsoluteThickness[0.1]]}, {3.4, 
       Directive[
        AbsoluteThickness[0.1]]}, {3.6, 
       Directive[
        AbsoluteThickness[0.1]]}, {3.8, 
       Directive[
        AbsoluteThickness[0.1]]}, {4., 
       Directive[
        AbsoluteThickness[0.1]]}}, {{-3., 
       Directive[
        AbsoluteThickness[0.1]]}, {-2., 
       Directive[
        AbsoluteThickness[0.1]]}, {-1., 
       Directive[
        AbsoluteThickness[0.1]]}, {0., 
       Directive[
        AbsoluteThickness[0.1]]}, {1., 
       Directive[
        AbsoluteThickness[0.1]]}, {2., 
       Directive[
        AbsoluteThickness[0.1]]}, {3., 
       Directive[
        AbsoluteThickness[0.1]]}, {-4., 
       Directive[
        AbsoluteThickness[0.1]]}, {-3.8, 
       Directive[
        AbsoluteThickness[0.1]]}, {-3.6, 
       Directive[
        AbsoluteThickness[0.1]]}, {-3.4, 
       Directive[
        AbsoluteThickness[0.1]]}, {-3.2, 
       Directive[
        AbsoluteThickness[0.1]]}, {-2.8, 
       Directive[
        AbsoluteThickness[0.1]]}, {-2.6, 
       Directive[
        AbsoluteThickness[0.1]]}, {-2.4, 
       Directive[
        AbsoluteThickness[0.1]]}, {-2.2, 
       Directive[
        AbsoluteThickness[0.1]]}, {-1.8, 
       Directive[
        AbsoluteThickness[0.1]]}, {-1.6, 
       Directive[
        AbsoluteThickness[0.1]]}, {-1.4, 
       Directive[
        AbsoluteThickness[0.1]]}, {-1.2, 
       Directive[
        AbsoluteThickness[0.1]]}, {-0.8, 
       Directive[
        AbsoluteThickness[0.1]]}, {-0.6, 
       Directive[
        AbsoluteThickness[0.1]]}, {-0.4, 
       Directive[
        AbsoluteThickness[0.1]]}, {-0.2, 
       Directive[
        AbsoluteThickness[0.1]]}, {0.2, 
       Directive[
        AbsoluteThickness[0.1]]}, {0.4, 
       Directive[
        AbsoluteThickness[0.1]]}, {0.6, 
       Directive[
        AbsoluteThickness[0.1]]}, {0.8, 
       Directive[
        AbsoluteThickness[0.1]]}, {1.2, 
       Directive[
        AbsoluteThickness[0.1]]}, {1.4, 
       Directive[
        AbsoluteThickness[0.1]]}, {1.6, 
       Directive[
        AbsoluteThickness[0.1]]}, {1.8, 
       Directive[
        AbsoluteThickness[0.1]]}, {2.2, 
       Directive[
        AbsoluteThickness[0.1]]}, {2.4, 
       Directive[
        AbsoluteThickness[0.1]]}, {2.6, 
       Directive[
        AbsoluteThickness[0.1]]}, {2.8, 
       Directive[
        AbsoluteThickness[0.1]]}, {3.2, 
       Directive[
        AbsoluteThickness[0.1]]}, {3.4, 
       Directive[
        AbsoluteThickness[0.1]]}, {3.6, 
       Directive[
        AbsoluteThickness[0.1]]}, {3.8, 
       Directive[
        AbsoluteThickness[0.1]]}, {4., 
       Directive[
        AbsoluteThickness[0.1]]}}}],
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-3, 3}, {-3.162277243767382, 3.1622775260654623`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.767730231833543*^9, 3.767730273744751*^9}}]
}, Open  ]],

Cell[TextData[{
 "17.  4 ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"y", "'"}], " ", "'"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " -3 y =0, y(1) = -3, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "'"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "(1) = 0, ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", 
    RowBox[{"3", "/", "2"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " , ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", 
    RowBox[{
     RowBox[{"-", "1"}], "/", "2"}]], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.6702832336889753`*^9, 3.67028324374863*^9}, {
  3.767730493567801*^9, 3.7677305849613743`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7728936573582582`*^9, 3.772893657788623*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqn", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"4", " ", 
     SuperscriptBox["x", "2"], 
     RowBox[{
      RowBox[{"y", "''"}], "[", "x", "]"}]}], "-", 
    RowBox[{"3", " ", 
     RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", "0"}]}]], "Input",
 CellChangeTimes->{{3.6702809959856873`*^9, 3.6702810664348717`*^9}, {
   3.670281109442143*^9, 3.670281124968355*^9}, {3.670281159319583*^9, 
   3.6702811602151327`*^9}, {3.670281366880452*^9, 3.670281398046981*^9}, {
   3.670281433796584*^9, 3.6702814523312807`*^9}, {3.670281535562106*^9, 
   3.670281537784274*^9}, {3.767730673455089*^9, 3.767730679293703*^9}, 
   3.7677307144491663`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"-", "3"}], " ", 
    RowBox[{"y", "[", "x", "]"}]}], "+", 
   RowBox[{"4", " ", 
    SuperscriptBox["x", "2"], " ", 
    RowBox[{
     SuperscriptBox["y", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}]}], "\[Equal]", 
  "0"}]], "Output",
 CellChangeTimes->{3.7677307273388577`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"eqn", ",", 
      RowBox[{
       RowBox[{"y", "[", "1", "]"}], "\[Equal]", 
       RowBox[{"-", "3"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"y", "'"}], "[", "1", "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
    "y", ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.767730732038571*^9, 3.767730774837364*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "x", "}"}], ",", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{"3", "+", 
           SuperscriptBox["x", "2"]}], ")"}]}], 
        RowBox[{"4", " ", 
         SqrtBox["x"]}]]}]}], "]"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.767730765074813*^9, 3.767730775539275*^9}},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqn", "/.", "sol"}]], "Input",
 CellChangeTimes->{{3.7677307784768887`*^9, 3.7677307828865137`*^9}}],

Cell[BoxData[
 RowBox[{"{", "True", "}"}]], "Output",
 CellChangeTimes->{3.7677307838969717`*^9}]
}, Open  ]],

Cell["\<\
Although they look a little different due to their format, the green cell \
above and the text answer are equivalent.\
\>", "Text",
 CellChangeTimes->{{3.7677309878688593`*^9, 3.76773101618919*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PossibleZeroQ", "[", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"3", " ", 
      RowBox[{"(", 
       RowBox[{"3", "+", 
        SuperscriptBox["x", "2"]}], ")"}]}], 
     RowBox[{"4", " ", 
      SqrtBox["x"]}]]}], "-", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "0.75"}], 
      SuperscriptBox["x", 
       RowBox[{"3", "/", "2"}]]}], "-", 
     RowBox[{"2.25", 
      SuperscriptBox["x", 
       RowBox[{
        RowBox[{"-", "1"}], "/", "2"}]]}]}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.767730903411268*^9, 3.76773097028557*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.7677309712653923`*^9}]
}, Open  ]],

Cell["\<\
Checking the proposed solutions is a little more complicated than usual.\
\>", "Text",
 CellChangeTimes->{{3.7677312345342703`*^9, 3.767731248621027*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d2", "=", 
  RowBox[{"D", "[", 
   RowBox[{
    SuperscriptBox["x", 
     RowBox[{"3", "/", "2"}]], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.767731165490119*^9, 3.767731187237339*^9}}],

Cell[BoxData[
 FractionBox["3", 
  RowBox[{"4", " ", 
   SqrtBox["x"]}]]], "Output",
 CellChangeTimes->{3.767731188395561*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqn", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"y", "[", "x", "]"}], "->", 
     SuperscriptBox["x", 
      RowBox[{"3", "/", "2"}]]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"y", "''"}], "[", "x", "]"}], "\[Rule]", "d2"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.767730802491226*^9, 3.767730819237356*^9}, {
  3.767731090614771*^9, 3.767731097053574*^9}, {3.767731197326983*^9, 
  3.767731219885049*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.7677312212322598`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d22", "=", 
  RowBox[{"D", "[", 
   RowBox[{
    SuperscriptBox["x", 
     RowBox[{
      RowBox[{"-", "1"}], "/", "2"}]], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7677312639852657`*^9, 3.767731283373371*^9}}],

Cell[BoxData[
 FractionBox["3", 
  RowBox[{"4", " ", 
   SuperscriptBox["x", 
    RowBox[{"5", "/", "2"}]]}]]], "Output",
 CellChangeTimes->{3.7677312846155643`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqn", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"y", "[", "x", "]"}], "->", 
     SuperscriptBox["x", 
      RowBox[{
       RowBox[{"-", "1"}], "/", "2"}]]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"y", "''"}], "[", "x", "]"}], "\[Rule]", "d22"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.767730837037437*^9, 3.76773084656511*^9}, {
  3.767731302009255*^9, 3.767731310653184*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.7677308479162683`*^9, 3.767731311880981*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"3", " ", 
      RowBox[{"(", 
       RowBox[{"3", "+", 
        SuperscriptBox["x", "2"]}], ")"}]}], 
     RowBox[{"4", " ", 
      SqrtBox["x"]}]]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "4"}], "}"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "10"}], ",", 
        RowBox[{"-", "2"}]}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7677334015314503`*^9, 3.767733503982695*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
g1vzznH//GHTM6nZw3+OcPD/ABFOv9E=
     "]]}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, -10.},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->
   FrontEndValueCache[{
    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6, 6}]& , 
     Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6, 
      6}]& }, {{{-2., 
       Directive[
        AbsoluteThickness[0.1]]}, {-1., 
       Directive[
        AbsoluteThickness[0.1]]}, {0., 
       Directive[
        AbsoluteThickness[0.1]]}, {1., 
       Directive[
        AbsoluteThickness[0.1]]}, {2., 
       Directive[
        AbsoluteThickness[0.1]]}, {3., 
       Directive[
        AbsoluteThickness[0.1]]}, {4., 
       Directive[
        AbsoluteThickness[0.1]]}, {-1.8, 
       Directive[
        AbsoluteThickness[0.1]]}, {-1.6, 
       Directive[
        AbsoluteThickness[0.1]]}, {-1.4, 
       Directive[
        AbsoluteThickness[0.1]]}, {-1.2, 
       Directive[
        AbsoluteThickness[0.1]]}, {-0.8, 
       Directive[
        AbsoluteThickness[0.1]]}, {-0.6, 
       Directive[
        AbsoluteThickness[0.1]]}, {-0.4, 
       Directive[
        AbsoluteThickness[0.1]]}, {-0.2, 
       Directive[
        AbsoluteThickness[0.1]]}, {0.2, 
       Directive[
        AbsoluteThickness[0.1]]}, {0.4, 
       Directive[
        AbsoluteThickness[0.1]]}, {0.6, 
       Directive[
        AbsoluteThickness[0.1]]}, {0.8, 
       Directive[
        AbsoluteThickness[0.1]]}, {1.2, 
       Directive[
        AbsoluteThickness[0.1]]}, {1.4, 
       Directive[
        AbsoluteThickness[0.1]]}, {1.6, 
       Directive[
        AbsoluteThickness[0.1]]}, {1.8, 
       Directive[
        AbsoluteThickness[0.1]]}, {2.2, 
       Directive[
        AbsoluteThickness[0.1]]}, {2.4, 
       Directive[
        AbsoluteThickness[0.1]]}, {2.6, 
       Directive[
        AbsoluteThickness[0.1]]}, {2.8, 
       Directive[
        AbsoluteThickness[0.1]]}, {3.2, 
       Directive[
        AbsoluteThickness[0.1]]}, {3.4, 
       Directive[
        AbsoluteThickness[0.1]]}, {3.6, 
       Directive[
        AbsoluteThickness[0.1]]}, {3.8, 
       Directive[
        AbsoluteThickness[0.1]]}}, {{-10., 
       Directive[
        AbsoluteThickness[0.1]]}, {-8., 
       Directive[
        AbsoluteThickness[0.1]]}, {-6., 
       Directive[
        AbsoluteThickness[0.1]]}, {-4., 
       Directive[
        AbsoluteThickness[0.1]]}, {-2., 
       Directive[
        AbsoluteThickness[0.1]]}, {-9.5, 
       Directive[
        AbsoluteThickness[0.1]]}, {-9., 
       Directive[
        AbsoluteThickness[0.1]]}, {-8.5, 
       Directive[
        AbsoluteThickness[0.1]]}, {-7.5, 
       Directive[
        AbsoluteThickness[0.1]]}, {-7., 
       Directive[
        AbsoluteThickness[0.1]]}, {-6.5, 
       Directive[
        AbsoluteThickness[0.1]]}, {-5.5, 
       Directive[
        AbsoluteThickness[0.1]]}, {-5., 
       Directive[
        AbsoluteThickness[0.1]]}, {-4.5, 
       Directive[
        AbsoluteThickness[0.1]]}, {-3.5, 
       Directive[
        AbsoluteThickness[0.1]]}, {-3., 
       Directive[
        AbsoluteThickness[0.1]]}, {-2.5, 
       Directive[
        AbsoluteThickness[0.1]]}}}],
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-2, 4}, {-10, -2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.767733403138557*^9, {3.7677334394809933`*^9, 3.767733504552826*^9}}]
}, Open  ]],

Cell[TextData[{
 "19.  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "''"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " + 2 ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "'"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " +2 y = 0, y(0) = 0, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "'"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "(0) = 15, ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", "x"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " Cos[x], ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", "x"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " Sin[x] "
}], "Text",
 CellChangeTimes->{{3.670283256319827*^9, 3.670283263059828*^9}, {
  3.7677325520724497`*^9, 3.767732654517268*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{"eqn", ",", "sol"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eqn", " ", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"y", "''"}], "[", "x", "]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         RowBox[{"y", "'"}], "[", "x", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", "0"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"sol", "=", 
    RowBox[{"DSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"eqn", ",", 
        RowBox[{
         RowBox[{"y", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", "15"}]}], "}"}], 
      ",", "y", ",", "x"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.670281682974975*^9, 3.670281744847587*^9}, {
   3.6702818803151417`*^9, 3.67028188370781*^9}, {3.670281980055794*^9, 
   3.670282002279195*^9}, {3.670282060284692*^9, 3.670282079803864*^9}, {
   3.6702821963107357`*^9, 3.670282196661818*^9}, {3.670282318970604*^9, 
   3.670282347729233*^9}, 3.670282380430839*^9, {3.670282410773426*^9, 
   3.6702824114208717`*^9}, {3.67028332949792*^9, 3.6702833379605303`*^9}, {
   3.767732682493204*^9, 3.767732816746941*^9}, {3.7728936695257053`*^9, 
   3.772893670012013*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "x", "}"}], ",", 
      RowBox[{"15", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "x"}]], " ", 
       RowBox[{"Sin", "[", "x", "]"}]}]}], "]"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.767732737383094*^9, 3.767732747678976*^9}, {
  3.767732780824263*^9, 3.767732817339531*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eqn", "/.", "sol"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.7677328261425743`*^9, 3.7677328332570972`*^9}}],

Cell[BoxData[
 RowBox[{"{", "True", "}"}]], "Output",
 CellChangeTimes->{3.767732834528611*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f1", "[", "x_", "]"}], "=", 
  FormBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "x"}]], 
    RowBox[{"Cos", "[", "x", "]"}]}],
   TraditionalForm]}]], "Input",
 CellChangeTimes->{{3.7677328791875687`*^9, 3.76773290010419*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", "x"}]], " ", 
  RowBox[{"Cos", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{3.7677329019663353`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d1", "=", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"f1", "[", "x", "]"}], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.767732962095587*^9, 3.767732973175152*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "x"}]]}], " ", 
   RowBox[{"Cos", "[", "x", "]"}]}], "-", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", "x"}]], " ", 
   RowBox[{"Sin", "[", "x", "]"}]}]}]], "Output",
 CellChangeTimes->{3.767732973731683*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d2", "=", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"f1", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.767732975987571*^9, 3.767732986326831*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", "x"}]], " ", 
  RowBox[{"Sin", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{3.767732987256303*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eqn", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
      RowBox[{"f1", "[", "x", "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"y", "'"}], "[", "x", "]"}], "\[Rule]", "d1"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"y", "''"}], "[", "x", "]"}], "\[Rule]", "d2"}]}], "}"}]}], "//",
   "Simplify"}]], "Input",
 CellChangeTimes->{{3.767732994598177*^9, 3.767733056669752*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.767733030684211*^9, 3.767733057503991*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f2", "[", "x_", "]"}], "=", 
  FormBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "x"}]], 
    RowBox[{"Sin", "[", "x", "]"}]}],
   TraditionalForm]}]], "Input",
 CellChangeTimes->{{3.767733086062664*^9, 3.767733092958869*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", "x"}]], " ", 
  RowBox[{"Sin", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{3.767733094563558*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d11", "=", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"f2", "[", "x", "]"}], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.767733105670245*^9, 3.767733108782103*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", "x"}]], " ", 
   RowBox[{"Cos", "[", "x", "]"}]}], "-", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", "x"}]], " ", 
   RowBox[{"Sin", "[", "x", "]"}]}]}]], "Output",
 CellChangeTimes->{3.76773311054743*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d22", "=", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"f2", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.767733124869858*^9, 3.7677331277083483`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "2"}], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", "x"}]], " ", 
  RowBox[{"Cos", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{3.767733129991111*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eqn", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
      RowBox[{"f2", "[", "x", "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"y", "'"}], "[", "x", "]"}], "\[Rule]", "d11"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"y", "''"}], "[", "x", "]"}], "\[Rule]", "d22"}]}], "}"}]}], "//",
   "Simplify"}]], "Input",
 CellChangeTimes->{{3.767733144933695*^9, 3.767733150949478*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.767733152470961*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"15", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "x"}]], " ", 
    RowBox[{"Sin", "[", "x", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "150"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "5"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.767733187785655*^9, 3.7677332288604593`*^9}, {
  3.767733263570672*^9, 3.7677333504013157`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
Cf88mt2QtQS+pekTPB4PHLWcSW3JS/A/hYJHbQ==
     "]]}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->
   FrontEndValueCache[{
    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6, 6}]& , 
     Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6, 
      6}]& }, {{{-1., 
       Directive[
        AbsoluteThickness[0.1]]}, {-0.5, 
       Directive[
        AbsoluteThickness[0.1]]}, {0., 
       Directive[
        AbsoluteThickness[0.1]]}, {0.5, 
       Directive[
        AbsoluteThickness[0.1]]}, {1., 
       Directive[
        AbsoluteThickness[0.1]]}, {1.5, 
       Directive[
        AbsoluteThickness[0.1]]}, {2., 
       Directive[
        AbsoluteThickness[0.1]]}, {-0.9, 
       Directive[
        AbsoluteThickness[0.1]]}, {-0.8, 
       Directive[
        AbsoluteThickness[0.1]]}, {-0.7, 
       Directive[
        AbsoluteThickness[0.1]]}, {-0.6, 
       Directive[
        AbsoluteThickness[0.1]]}, {-0.4, 
       Directive[
        AbsoluteThickness[0.1]]}, {-0.3, 
       Directive[
        AbsoluteThickness[0.1]]}, {-0.2, 
       Directive[
        AbsoluteThickness[0.1]]}, {-0.1, 
       Directive[
        AbsoluteThickness[0.1]]}, {0.1, 
       Directive[
        AbsoluteThickness[0.1]]}, {0.2, 
       Directive[
        AbsoluteThickness[0.1]]}, {0.3, 
       Directive[
        AbsoluteThickness[0.1]]}, {0.4, 
       Directive[
        AbsoluteThickness[0.1]]}, {0.6, 
       Directive[
        AbsoluteThickness[0.1]]}, {0.7, 
       Directive[
        AbsoluteThickness[0.1]]}, {0.8, 
       Directive[
        AbsoluteThickness[0.1]]}, {0.9, 
       Directive[
        AbsoluteThickness[0.1]]}, {1.1, 
       Directive[
        AbsoluteThickness[0.1]]}, {1.2, 
       Directive[
        AbsoluteThickness[0.1]]}, {1.3, 
       Directive[
        AbsoluteThickness[0.1]]}, {1.4, 
       Directive[
        AbsoluteThickness[0.1]]}, {1.6, 
       Directive[
        AbsoluteThickness[0.1]]}, {1.7, 
       Directive[
        AbsoluteThickness[0.1]]}, {1.8, 
       Directive[
        AbsoluteThickness[0.1]]}, {1.9, 
       Directive[
        AbsoluteThickness[0.1]]}}, {{-1., 
       Directive[
        AbsoluteThickness[0.1]]}, {0., 
       Directive[
        AbsoluteThickness[0.1]]}, {1., 
       Directive[
        AbsoluteThickness[0.1]]}, {2., 
       Directive[
        AbsoluteThickness[0.1]]}, {3., 
       Directive[
        AbsoluteThickness[0.1]]}, {4., 
       Directive[
        AbsoluteThickness[0.1]]}, {5., 
       Directive[
        AbsoluteThickness[0.1]]}, {-0.8, 
       Directive[
        AbsoluteThickness[0.1]]}, {-0.6, 
       Directive[
        AbsoluteThickness[0.1]]}, {-0.4, 
       Directive[
        AbsoluteThickness[0.1]]}, {-0.2, 
       Directive[
        AbsoluteThickness[0.1]]}, {0.2, 
       Directive[
        AbsoluteThickness[0.1]]}, {0.4, 
       Directive[
        AbsoluteThickness[0.1]]}, {0.6, 
       Directive[
        AbsoluteThickness[0.1]]}, {0.8, 
       Directive[
        AbsoluteThickness[0.1]]}, {1.2, 
       Directive[
        AbsoluteThickness[0.1]]}, {1.4, 
       Directive[
        AbsoluteThickness[0.1]]}, {1.6, 
       Directive[
        AbsoluteThickness[0.1]]}, {1.8, 
       Directive[
        AbsoluteThickness[0.1]]}, {2.2, 
       Directive[
        AbsoluteThickness[0.1]]}, {2.4, 
       Directive[
        AbsoluteThickness[0.1]]}, {2.6, 
       Directive[
        AbsoluteThickness[0.1]]}, {2.8, 
       Directive[
        AbsoluteThickness[0.1]]}, {3.2, 
       Directive[
        AbsoluteThickness[0.1]]}, {3.4, 
       Directive[
        AbsoluteThickness[0.1]]}, {3.6, 
       Directive[
        AbsoluteThickness[0.1]]}, {3.8, 
       Directive[
        AbsoluteThickness[0.1]]}, {4.2, 
       Directive[
        AbsoluteThickness[0.1]]}, {4.4, 
       Directive[
        AbsoluteThickness[0.1]]}, {4.6, 
       Directive[
        AbsoluteThickness[0.1]]}, {4.8, 
       Directive[
        AbsoluteThickness[0.1]]}}}],
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->150,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-1, 2}, {-1, 5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.767733202239934*^9, 3.7677332301834383`*^9}, {
  3.7677332918070707`*^9, 3.7677333511479607`*^9}}]
}, Open  ]]
},
WindowSize->{1366, 843},
WindowMargins->{{4, Automatic}, {Automatic, 4}},
Magnification:>1.5 Inherited,
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 10, \
2015)",
StyleDefinitions->"Charter1.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 263, 6, 110, "Text"],
Cell[666, 21, 406, 16, 77, "Text"],
Cell[1075, 39, 171, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[1271, 47, 274, 8, 45, "Input"],
Cell[1548, 57, 316, 10, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1901, 72, 188, 4, 45, "Input"],
Cell[2092, 78, 492, 15, 78, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2621, 98, 151, 3, 45, "Input"],
Cell[2775, 103, 95, 2, 45, "Output"]
}, Open  ]],
Cell[2885, 108, 533, 18, 77, "Text"],
Cell[CellGroupData[{
Cell[3443, 130, 346, 11, 49, "Input"],
Cell[3792, 143, 394, 12, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4223, 160, 188, 4, 45, "Input"],
Cell[4414, 166, 443, 15, 111, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4894, 186, 155, 3, 45, "Input"],
Cell[5052, 191, 92, 2, 45, "Output"]
}, Open  ]],
Cell[5159, 196, 659, 17, 126, "Text"],
Cell[5821, 215, 573, 22, 77, "Text"],
Cell[6397, 239, 142, 2, 45, "Input"],
Cell[6542, 243, 555, 13, 88, "Text"],
Cell[CellGroupData[{
Cell[7122, 260, 383, 12, 49, "Input"],
Cell[7508, 274, 372, 12, 49, "Output"]
}, Open  ]],
Cell[7895, 289, 182, 2, 51, "Text"],
Cell[CellGroupData[{
Cell[8102, 295, 237, 5, 45, "Input"],
Cell[8342, 302, 627, 20, 104, "Output"]
}, Open  ]],
Cell[8984, 325, 550, 14, 107, "Text"],
Cell[CellGroupData[{
Cell[9559, 343, 153, 3, 45, "Input"],
Cell[9715, 348, 121, 3, 45, "Output"]
}, Open  ]],
Cell[9851, 354, 158, 3, 51, "Text"],
Cell[CellGroupData[{
Cell[10034, 361, 398, 11, 45, "Input"],
Cell[10435, 374, 314, 9, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10786, 388, 237, 5, 45, "Input"],
Cell[11026, 395, 488, 14, 69, "Output"]
}, Open  ]],
Cell[11529, 412, 465, 10, 87, "Text"],
Cell[CellGroupData[{
Cell[12019, 426, 124, 2, 45, "Input"],
Cell[12146, 430, 95, 2, 45, "Output"]
}, Open  ]],
Cell[12256, 435, 832, 31, 77, "Text"],
Cell[13091, 468, 218, 3, 45, "Input"],
Cell[13312, 473, 401, 13, 53, "Text"],
Cell[CellGroupData[{
Cell[13738, 490, 426, 13, 49, "Input"],
Cell[14167, 505, 471, 15, 49, "Output"]
}, Open  ]],
Cell[14653, 523, 336, 9, 93, "Text"],
Cell[CellGroupData[{
Cell[15014, 536, 190, 4, 45, "Input"],
Cell[15207, 542, 542, 17, 78, "Output"]
}, Open  ]],
Cell[15764, 562, 222, 5, 51, "Text"],
Cell[CellGroupData[{
Cell[16011, 571, 153, 3, 45, "Input"],
Cell[16167, 576, 95, 2, 45, "Output"]
}, Open  ]],
Cell[16277, 581, 261, 4, 75, "Text"],
Cell[16541, 587, 503, 16, 112, "Text"],
Cell[17047, 605, 142, 2, 45, "Input"],
Cell[CellGroupData[{
Cell[17214, 611, 269, 8, 45, "Input"],
Cell[17486, 621, 311, 9, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17834, 635, 609, 15, 45, "Input"],
Cell[18446, 652, 632, 19, 99, "Output"]
}, Open  ]],
Cell[19093, 674, 250, 5, 86, "Text"],
Cell[CellGroupData[{
Cell[19368, 683, 1211, 34, 125, "Input"],
Cell[20582, 719, 2672, 55, 401, "Output"]
}, Open  ]],
Cell[23269, 777, 388, 7, 110, "Text"],
Cell[23660, 786, 142, 2, 45, "Input"],
Cell[23805, 790, 578, 9, 155, "Text"],
Cell[CellGroupData[{
Cell[24408, 803, 328, 10, 50, "Input"],
Cell[24739, 815, 252, 8, 49, "Output"]
}, Open  ]],
Cell[25006, 826, 958, 20, 156, "Text"],
Cell[CellGroupData[{
Cell[25989, 850, 731, 17, 54, "Input"],
Cell[26723, 869, 9464, 229, 603, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36224, 1103, 536, 14, 54, "Input"],
Cell[36763, 1119, 1436, 36, 104, "Output"]
}, Open  ]],
Cell[38214, 1158, 320, 6, 86, "Text"],
Cell[CellGroupData[{
Cell[38559, 1168, 591, 17, 45, "Input"],
Cell[39153, 1187, 571, 11, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39761, 1203, 180, 4, 54, "Input"],
Cell[39944, 1209, 117, 1, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40098, 1215, 140, 3, 45, "Input"],
Cell[40241, 1220, 197, 6, 49, "Output"]
}, Open  ]],
Cell[40453, 1229, 465, 9, 144, "Text"],
Cell[40921, 1240, 414, 14, 77, "Text"],
Cell[41338, 1256, 142, 2, 45, "Input"],
Cell[41483, 1260, 184, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[41692, 1268, 309, 9, 45, "Input"],
Cell[42004, 1279, 307, 10, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42348, 1294, 438, 13, 45, "Input"],
Cell[42789, 1309, 515, 17, 74, "Output"]
}, Open  ]],
Cell[43319, 1329, 104, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[43448, 1334, 151, 3, 45, "Input"],
Cell[43602, 1339, 95, 2, 45, "Output"]
}, Open  ]],
Cell[43712, 1344, 115, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[43852, 1349, 307, 7, 45, "Input"],
Cell[44162, 1358, 755, 14, 34, "Message"],
Cell[44920, 1374, 275, 6, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45232, 1385, 206, 5, 45, "Input"],
Cell[45441, 1392, 652, 12, 34, "Message"],
Cell[46096, 1406, 173, 4, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46306, 1415, 638, 18, 124, "Input"],
Cell[46947, 1435, 22671, 469, 356, "Output"]
}, Open  ]],
Cell[69633, 1907, 870, 33, 77, "Text"],
Cell[70506, 1942, 144, 2, 45, "Input"],
Cell[CellGroupData[{
Cell[70675, 1948, 666, 15, 49, "Input"],
Cell[71344, 1965, 364, 12, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71745, 1982, 433, 13, 45, "Input"],
Cell[72181, 1997, 516, 16, 119, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72734, 2018, 124, 2, 45, "Input"],
Cell[72861, 2022, 97, 2, 45, "Output"]
}, Open  ]],
Cell[72973, 2027, 208, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[73206, 2035, 604, 21, 95, "Input"],
Cell[73813, 2058, 75, 1, 45, "Output"]
}, Open  ]],
Cell[73903, 2062, 164, 3, 51, "Text"],
Cell[CellGroupData[{
Cell[74092, 2069, 271, 8, 54, "Input"],
Cell[74366, 2079, 126, 4, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74529, 2088, 464, 14, 54, "Input"],
Cell[74996, 2104, 75, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75108, 2110, 296, 9, 54, "Input"],
Cell[75407, 2121, 165, 5, 77, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75609, 2131, 438, 14, 54, "Input"],
Cell[76050, 2147, 97, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76184, 2153, 863, 27, 146, "Input"],
Cell[77050, 2182, 10028, 225, 434, "Output"]
}, Open  ]],
Cell[87093, 2410, 858, 32, 77, "Text"],
Cell[CellGroupData[{
Cell[87976, 2446, 1406, 35, 133, "Input"],
Cell[89385, 2483, 448, 12, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89870, 2500, 155, 3, 45, "Input"],
Cell[90028, 2505, 95, 2, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90160, 2512, 290, 9, 48, "Input"],
Cell[90453, 2523, 181, 5, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90671, 2533, 199, 5, 45, "Input"],
Cell[90873, 2540, 339, 11, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91249, 2556, 250, 7, 45, "Input"],
Cell[91502, 2565, 189, 5, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91728, 2575, 485, 15, 45, "Input"],
Cell[92216, 2592, 97, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92350, 2598, 289, 9, 48, "Input"],
Cell[92642, 2609, 179, 5, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92858, 2619, 200, 5, 45, "Input"],
Cell[93061, 2626, 317, 10, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93415, 2641, 253, 7, 45, "Input"],
Cell[93671, 2650, 207, 6, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93915, 2661, 487, 15, 45, "Input"],
Cell[94405, 2678, 73, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94515, 2684, 822, 23, 90, "Input"],
Cell[95340, 2709, 9901, 237, 436, "Output"]
}, Open  ]]
}
]
*)


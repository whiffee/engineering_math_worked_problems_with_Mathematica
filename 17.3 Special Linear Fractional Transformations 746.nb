(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    245809,       5246]
NotebookOptionsPosition[    237927,       4973]
NotebookOutlinePosition[    238315,       4990]
CellTagsIndexPosition[    238272,       4987]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
Note: In this problem set, expressions in green cells match corresponding \
expressions in the text answers.\
\>", "Text",
 Evaluatable->False,
 CellChangeTimes->{
  3.760813750618361*^9, 3.760813813879916*^9, {3.769276952446467*^9, 
   3.769276954801737*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell["\<\
3.  Inverse. If w = f[z] is any transformation that has an inverse, prove the \
fact that f and its inverse have the same fixed points.\
\>", "Text",
 CellChangeTimes->{{3.760813942733727*^9, 3.760813989009822*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[TextData[{
 "This may be a pud proof, but... I assume that w=f[x] has at least one fixed \
point. However many it has, consider an arbitrary fixed point ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["z", "1"], " "}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "in z-plane which gets mapped to w-plane by w=f[z], to a point called ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["w", 
    RowBox[{"1.", " "}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "And the inverse of w,  ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["w", 
    RowBox[{"-", "1"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", a mapping in its own right, takes the point ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["w", 
    RowBox[{"1", " "}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "and operates on it to map it to the z-plane, to the exact point where it \
originated, that being the inverse function\[CloseCurlyQuote]s function. Now ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["w", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"=", 
    SubscriptBox["z", "1"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " because ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is a fixed point for w. By observing ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["w", 
    RowBox[{"-", "1"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " as it maps ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["w", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " to ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", with which it is equal, I can see that ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["w", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is a fixed point for ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["w", 
    RowBox[{"-", "1"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".  The establishment of the fixed point in ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["w", 
    RowBox[{"-", "1"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is separate and independent of the establishment of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " as a fixed point for w, yet, as if I didn\[CloseCurlyQuote]t already know, \
I can look at ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["w", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and see that they are equal. Therefore the mapping functions have a fixed \
point that is the same, and if they have this arbitrary one, they share all \
in common."
}], "Text",
 CellChangeTimes->{{3.760816034494555*^9, 3.760816095770096*^9}, {
  3.7608163492461348`*^9, 3.760816594983951*^9}, {3.760816636885807*^9, 
  3.760816706778407*^9}, {3.760816758607645*^9, 3.7608170532566357`*^9}, {
  3.760817128704484*^9, 3.760817133216378*^9}, {3.760826176546198*^9, 
  3.760826206720965*^9}, {3.760826633382674*^9, 3.76082666045933*^9}, {
  3.7608266951062202`*^9, 3.760826828957766*^9}, {3.760826871756424*^9, 
  3.7608270125995007`*^9}, {3.760827091541325*^9, 3.7608270918376226`*^9}, {
  3.760827125463292*^9, 3.760827130028751*^9}, {3.760828687916266*^9, 
  3.760828693684783*^9}, {3.760828758314707*^9, 3.760828780842126*^9}, {
  3.76082901559472*^9, 3.760829041494216*^9}, {3.760829102008295*^9, 
  3.760829265611768*^9}}],

Cell["\<\
5. Derive the mapping in Example 2 from numbered line (2) on p. 746.\
\>", "Text",
 CellChangeTimes->{{3.7608241145561666`*^9, 3.7608241604380617`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["z", "1"], "=", "0"}]], "Input",
 CellChangeTimes->{{3.760823199095387*^9, 3.760823205811304*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.760823211814384*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["z", "2"], "=", "1"}]], "Input",
 CellChangeTimes->{{3.760823214304208*^9, 3.760823220018964*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.7608232207257767`*^9}]
}, Open  ]],

Cell["\<\
Mathematica cannot swallow \[Infinity] assigned to a variable in this \
context. For now, it needs to be symbolic, as below. (Note: the w-z \
assignment formula has its own means of dealing with occurrences of \
\[Infinity], but with Mathematica I can take care of it a different way.)\
\>", "Text",
 CellChangeTimes->{{3.760825605795278*^9, 3.7608256658644857`*^9}, {
  3.7617767794576063`*^9, 3.7617768702122297`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["z", "3"], "=", "a"}]], "Input",
 CellChangeTimes->{{3.76082322221666*^9, 3.760823229169511*^9}, {
  3.7608234616054688`*^9, 3.760823464043419*^9}, {3.7608234975707684`*^9, 
  3.760823499754324*^9}}],

Cell[BoxData["a"], "Output",
 CellChangeTimes->{3.760823236683519*^9, 3.760823465236446*^9, 
  3.760823500556905*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["w", "1"], "=", 
  RowBox[{"-", "1"}]}]], "Input",
 CellChangeTimes->{{3.760823240868637*^9, 3.7608232500419483`*^9}}],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{3.760823251024064*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["w", "2"], "=", 
  RowBox[{"-", "\[ImaginaryI]"}]}]], "Input",
 CellChangeTimes->{{3.760823252872663*^9, 3.7608232595055943`*^9}}],

Cell[BoxData[
 RowBox[{"-", "\[ImaginaryI]"}]], "Output",
 CellChangeTimes->{3.760823261722821*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["w", "3"], "=", "1"}]], "Input",
 CellChangeTimes->{{3.760823262937541*^9, 3.76082326744131*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.760823268562014*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"w", "-", 
       SubscriptBox["w", "1"]}], 
      RowBox[{"w", "-", 
       SubscriptBox["w", "3"]}]], 
     RowBox[{"(", 
      FractionBox[
       RowBox[{
        SubscriptBox["w", "2"], "-", 
        SubscriptBox["w", "3"]}], 
       RowBox[{
        SubscriptBox["w", "2"], "-", 
        SubscriptBox["w", "1"]}]], ")"}]}], "\[Equal]", 
    RowBox[{
     FractionBox[
      RowBox[{"z", "-", 
       SubscriptBox["z", "1"]}], 
      RowBox[{"z", "-", 
       SubscriptBox["z", "3"]}]], 
     RowBox[{"(", 
      FractionBox[
       RowBox[{
        SubscriptBox["z", "2"], "-", 
        SubscriptBox["z", "3"]}], 
       RowBox[{
        SubscriptBox["z", "2"], "-", 
        SubscriptBox["z", "1"]}]], ")"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", "z"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.760823275184819*^9, 3.760823406085269*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "svars"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Equations may not give solutions for all \\\"solve\\\" \
variables. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Solve/svars\\\", \
ButtonNote -> \\\"Solve::svars\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.760823407379637*^9, 3.760823468803424*^9, 
  3.7608235041232243`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"w", "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "a"}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], " ", "z"}], "+", 
      RowBox[{"a", " ", "z"}]}], 
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", "a"}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", "z"}], "+", 
      RowBox[{"a", " ", "z"}]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.760823407385911*^9, 3.760823468812903*^9, 
  3.76082350413311*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "a"}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], " ", "z"}], "+", 
     RowBox[{"a", " ", "z"}]}], 
    RowBox[{
     RowBox[{"\[ImaginaryI]", " ", "a"}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", "z"}], "+", 
     RowBox[{"a", " ", "z"}]}]], ",", 
   RowBox[{"a", "\[Rule]", "\[Infinity]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7608235144238853`*^9, 3.760823539698613*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "\[ImaginaryI]"}], "+", "z"}], 
  RowBox[{"\[ImaginaryI]", "+", "z"}]]], "Output",
 CellChangeTimes->{3.760823541722805*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["\<\
The expression in the green cell above matches the answer to example 2 on p. \
748.\
\>", "Text",
 CellChangeTimes->{{3.760824298043027*^9, 3.760824331888711*^9}}],

Cell["\<\
8 - 16 LFTs from three points and images
Find the LFT that maps the given three points onto the three given points in \
the respective order.\
\>", "Text",
 CellChangeTimes->{{3.760814009121653*^9, 3.760814055718104*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"9.", "  ", "1"}], ",", "\[ImaginaryI]", ",", 
  RowBox[{
   RowBox[{"-", "1"}], "onto", " ", "\[ImaginaryI]"}], ",", 
  RowBox[{"-", "1"}], ",", 
  RowBox[{"-", "\[ImaginaryI]"}]}]], "Text",
 CellChangeTimes->{{3.760814069206788*^9, 3.7608140880601683`*^9}, 
   3.7608155801519423`*^9, {3.760824981798626*^9, 3.760825026203788*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["z", "1"], "=", "1"}]], "Input",
 CellChangeTimes->{{3.760824466889127*^9, 3.760824473996832*^9}, {
  3.7608250337335978`*^9, 3.760825033923588*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.7608244755264683`*^9, 3.760825077748947*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["z", "2"], "=", "\[ImaginaryI]"}]], "Input",
 CellChangeTimes->{{3.76082447713756*^9, 3.760824482068597*^9}, {
  3.76082503765158*^9, 3.760825038691304*^9}}],

Cell[BoxData["\[ImaginaryI]"], "Output",
 CellChangeTimes->{3.7608244827762327`*^9, 3.760825080515902*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["z", "3"], "=", 
  RowBox[{"-", "1"}]}]], "Input",
 CellChangeTimes->{{3.760824484288205*^9, 3.760824489868217*^9}, {
  3.760825042125037*^9, 3.7608250427954893`*^9}}],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{3.760824490805238*^9, 3.760825083433024*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["w", "1"], "=", "\[ImaginaryI]"}]], "Input",
 CellChangeTimes->{{3.760824492744525*^9, 3.760824499035931*^9}, {
  3.7608250467715883`*^9, 3.760825048043058*^9}}],

Cell[BoxData["\[ImaginaryI]"], "Output",
 CellChangeTimes->{3.7608245003594913`*^9, 3.760825086044096*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["w", "2"], "=", 
  RowBox[{"-", "1"}]}]], "Input",
 CellChangeTimes->{{3.760824502459186*^9, 3.760824511963525*^9}, {
  3.760825052100747*^9, 3.7608250547550707`*^9}}],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{3.760824514198955*^9, 3.760825088900543*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["w", "3"], "=", 
  RowBox[{"-", "\[ImaginaryI]"}]}]], "Input",
 CellChangeTimes->{{3.760824516440296*^9, 3.760824523730988*^9}, {
  3.760825061859013*^9, 3.7608250650513*^9}}],

Cell[BoxData[
 RowBox[{"-", "\[ImaginaryI]"}]], "Output",
 CellChangeTimes->{
  3.7608245255033407`*^9, {3.7608250667845383`*^9, 3.760825074313177*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"w", "-", 
       SubscriptBox["w", "1"]}], 
      RowBox[{"w", "-", 
       SubscriptBox["w", "3"]}]], 
     RowBox[{"(", 
      FractionBox[
       RowBox[{
        SubscriptBox["w", "2"], "-", 
        SubscriptBox["w", "3"]}], 
       RowBox[{
        SubscriptBox["w", "2"], "-", 
        SubscriptBox["w", "1"]}]], ")"}]}], "\[Equal]", 
    RowBox[{
     FractionBox[
      RowBox[{"z", "-", 
       SubscriptBox["z", "1"]}], 
      RowBox[{"z", "-", 
       SubscriptBox["z", "3"]}]], 
     RowBox[{"(", 
      FractionBox[
       RowBox[{
        SubscriptBox["z", "2"], "-", 
        SubscriptBox["z", "3"]}], 
       RowBox[{
        SubscriptBox["z", "2"], "-", 
        SubscriptBox["z", "1"]}]], ")"}]}]}], ",", 
   RowBox[{"{", "w", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.760823275184819*^9, 3.760823406085269*^9}, {
  3.760824618194808*^9, 3.7608246186002913`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"w", "\[Rule]", 
    RowBox[{"\[ImaginaryI]", " ", "z"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.7608245563507442`*^9, 3.760824619756468*^9, 
  3.7608250941727943`*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["11.  - 1, 0, 1 onto - \[ImaginaryI], -1, \[ImaginaryI]", "Text",
 CellChangeTimes->{{3.760814095557844*^9, 3.7608140972756367`*^9}, {
   3.760815082776184*^9, 3.760815105389337*^9}, 3.760815569848578*^9, {
   3.760815722598934*^9, 3.7608157286614122`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["z", "1"], "=", 
  RowBox[{"-", "1"}]}]], "Input",
 CellChangeTimes->{{3.7608252813530073`*^9, 3.760825297643615*^9}}],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{3.760825298765559*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["z", "2"], "=", "0"}]], "Input",
 CellChangeTimes->{{3.760825300807776*^9, 3.7608253058514633`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.760825306557489*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["z", "3"], "=", "1"}]], "Input",
 CellChangeTimes->{{3.76082530785596*^9, 3.760825312915357*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.760825314718655*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["w", "1"], "=", 
  RowBox[{"-", "\[ImaginaryI]"}]}]], "Input",
 CellChangeTimes->{{3.760825317919409*^9, 3.760825325572267*^9}}],

Cell[BoxData[
 RowBox[{"-", "\[ImaginaryI]"}]], "Output",
 CellChangeTimes->{3.7608253269418583`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["w", "2"], "=", 
  RowBox[{"-", "1"}]}]], "Input",
 CellChangeTimes->{{3.760825328544983*^9, 3.760825342634231*^9}}],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{3.760825343986718*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["w", "3"], "=", "\[ImaginaryI]"}]], "Input",
 CellChangeTimes->{{3.7608253461599693`*^9, 3.760825353289987*^9}}],

Cell[BoxData["\[ImaginaryI]"], "Output",
 CellChangeTimes->{3.7608253548940268`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"w", "-", 
       SubscriptBox["w", "1"]}], 
      RowBox[{"w", "-", 
       SubscriptBox["w", "3"]}]], 
     RowBox[{"(", 
      FractionBox[
       RowBox[{
        SubscriptBox["w", "2"], "-", 
        SubscriptBox["w", "3"]}], 
       RowBox[{
        SubscriptBox["w", "2"], "-", 
        SubscriptBox["w", "1"]}]], ")"}]}], "\[Equal]", 
    RowBox[{
     FractionBox[
      RowBox[{"z", "-", 
       SubscriptBox["z", "1"]}], 
      RowBox[{"z", "-", 
       SubscriptBox["z", "3"]}]], 
     RowBox[{"(", 
      FractionBox[
       RowBox[{
        SubscriptBox["z", "2"], "-", 
        SubscriptBox["z", "3"]}], 
       RowBox[{
        SubscriptBox["z", "2"], "-", 
        SubscriptBox["z", "1"]}]], ")"}]}]}], ",", 
   RowBox[{"{", "w", "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"w", "\[Rule]", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", "+", "z"}], 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], "+", "z"}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.760825368509122*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["13.  0, 1, \[Infinity] onto \[Infinity], 1, 0", "Text",
 CellChangeTimes->{{3.760815109471277*^9, 3.76081513904396*^9}, 
   3.760815556090239*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["z", "1"], "=", "0"}]], "Input",
 CellChangeTimes->{{3.7608254300693903`*^9, 3.7608254352635736`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.760825436197495*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["z", "2"], "=", "1"}]], "Input",
 CellChangeTimes->{{3.7608254376763973`*^9, 3.760825445951144*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.760825447051484*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["z", "3"], "=", "a"}]], "Input",
 CellChangeTimes->{{3.760825449780951*^9, 3.7608254547030373`*^9}}],

Cell[BoxData["a"], "Output",
 CellChangeTimes->{3.760825455550928*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["w", "1"], "=", "a"}]], "Input",
 CellChangeTimes->{{3.760825459284387*^9, 3.760825472718265*^9}}],

Cell[BoxData["a"], "Output",
 CellChangeTimes->{3.760825474409424*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["w", "2"], "=", "1"}]], "Input",
 CellChangeTimes->{{3.760825478227694*^9, 3.760825484222048*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.760825485271181*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["w", "3"], "=", "0"}]], "Input",
 CellChangeTimes->{{3.760825486971631*^9, 3.760825493157772*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.760825494063995*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"w", "-", 
       SubscriptBox["w", "1"]}], 
      RowBox[{"w", "-", 
       SubscriptBox["w", "3"]}]], 
     RowBox[{"(", 
      FractionBox[
       RowBox[{
        SubscriptBox["w", "2"], "-", 
        SubscriptBox["w", "3"]}], 
       RowBox[{
        SubscriptBox["w", "2"], "-", 
        SubscriptBox["w", "1"]}]], ")"}]}], "\[Equal]", 
    RowBox[{
     FractionBox[
      RowBox[{"z", "-", 
       SubscriptBox["z", "1"]}], 
      RowBox[{"z", "-", 
       SubscriptBox["z", "3"]}]], 
     RowBox[{"(", 
      FractionBox[
       RowBox[{
        SubscriptBox["z", "2"], "-", 
        SubscriptBox["z", "3"]}], 
       RowBox[{
        SubscriptBox["z", "2"], "-", 
        SubscriptBox["z", "1"]}]], ")"}]}]}], ",", 
   RowBox[{"{", "w", "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"w", "\[Rule]", 
    FractionBox[
     RowBox[{"a", "-", "z"}], 
     RowBox[{"1", "-", 
      RowBox[{"2", " ", "z"}], "+", 
      RowBox[{"a", " ", "z"}]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.760825508678953*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"a", "-", "z"}], 
    RowBox[{"1", "-", 
     RowBox[{"2", " ", "z"}], "+", 
     RowBox[{"a", " ", "z"}]}]], ",", 
   RowBox[{"a", "\[Rule]", "\[Infinity]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.760825519062314*^9, 3.7608255347499857`*^9}}],

Cell[BoxData[
 FractionBox["1", "z"]], "Output",
 CellChangeTimes->{3.760825536461733*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"15.", "  ", "1"}], ",", " ", "\[ImaginaryI]", ",", " ", 
  RowBox[{"2", " ", 
   StyleBox["onto",
    FontFamily->"Charter"], " ", "0"}], ",", " ", 
  RowBox[{
   RowBox[{"-", "\[ImaginaryI]"}], "-", "1"}], ",", " ", 
  RowBox[{"-", 
   FractionBox["1", "2"]}]}]], "Text",
 CellChangeTimes->{{3.760815142061191*^9, 3.760815172018107*^9}, 
   3.7608155462826557`*^9, {3.760825864675818*^9, 3.760825865234499*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["z", "1"], "=", "1"}]], "Input",
 CellChangeTimes->{{3.7608257007015057`*^9, 3.760825706055244*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.760825706918376*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["z", "2"], "=", "\[ImaginaryI]"}]], "Input",
 CellChangeTimes->{{3.7608257081408243`*^9, 3.76082571353513*^9}}],

Cell[BoxData["\[ImaginaryI]"], "Output",
 CellChangeTimes->{3.760825715394549*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["z", "3"], "=", "2"}]], "Input",
 CellChangeTimes->{{3.760825717501527*^9, 3.760825722438868*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.7608257235059967`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["w", "1"], "=", "0"}]], "Input",
 CellChangeTimes->{{3.760825725388204*^9, 3.760825731806532*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.760825735471558*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["w", "2"], "=", 
  RowBox[{
   RowBox[{"-", "\[ImaginaryI]"}], "-", "1"}]}]], "Input",
 CellChangeTimes->{{3.76082573754758*^9, 3.7608257435740747`*^9}, {
  3.760825879378496*^9, 3.760825880002221*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1"}], "-", "\[ImaginaryI]"}]], "Output",
 CellChangeTimes->{3.760825744984634*^9, 3.760825881620261*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["w", "3"], "=", 
  RowBox[{"-", 
   FractionBox["1", "2"]}]}]], "Input",
 CellChangeTimes->{{3.760825746348105*^9, 3.760825756173642*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["1", "2"]}]], "Output",
 CellChangeTimes->{3.760825765441001*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"w", "-", 
       SubscriptBox["w", "1"]}], 
      RowBox[{"w", "-", 
       SubscriptBox["w", "3"]}]], 
     RowBox[{"(", 
      FractionBox[
       RowBox[{
        SubscriptBox["w", "2"], "-", 
        SubscriptBox["w", "3"]}], 
       RowBox[{
        SubscriptBox["w", "2"], "-", 
        SubscriptBox["w", "1"]}]], ")"}]}], "\[Equal]", 
    RowBox[{
     FractionBox[
      RowBox[{"z", "-", 
       SubscriptBox["z", "1"]}], 
      RowBox[{"z", "-", 
       SubscriptBox["z", "3"]}]], 
     RowBox[{"(", 
      FractionBox[
       RowBox[{
        SubscriptBox["z", "2"], "-", 
        SubscriptBox["z", "3"]}], 
       RowBox[{
        SubscriptBox["z", "2"], "-", 
        SubscriptBox["z", "1"]}]], ")"}]}]}], ",", 
   RowBox[{"{", "w", "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"w", "\[Rule]", 
    FractionBox[
     RowBox[{"1", "-", "z"}], "z"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.760825786929641*^9, 3.7608258866064253`*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[TextData[{
 "17. Find an LFT that maps ",
 Cell[BoxData[
  FormBox[
   RowBox[{"|", "z", "|", 
    RowBox[{"\[LessEqual]", "1"}]}], TraditionalForm]]],
 " onto ",
 Cell[BoxData[
  FormBox[
   RowBox[{"|", "w", "|", 
    RowBox[{"\[LessEqual]", "1"}]}], TraditionalForm]]],
 " so that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"z", "=", 
    StyleBox[
     FractionBox["\[ImaginaryI]", "2"],
     FontSize->21]}], TraditionalForm]]],
 " is mapped onto ",
 Cell[BoxData[
  FormBox[
   RowBox[{"w", "=", "0"}], TraditionalForm]]],
 ". Sketch the images of the lines ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "const"}], TraditionalForm]]],
 " and y=const."
}], "Text",
 CellChangeTimes->{{3.760815176771368*^9, 3.760815242688924*^9}, {
  3.760815280041856*^9, 3.7608154055579433`*^9}, {3.760815631555862*^9, 
  3.7608156326386347`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[TextData[{
 "Numbered line (3) on p. 749 is part of an example that works this problem \
out for me, except it is left in general form, the z-plane point ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", "0"], TraditionalForm]]],
 " being mapped to the origin of the w-plane, while the z-unit-circle is \
mapped to the w-unit-circle."
}], "Text",
 CellChangeTimes->{{3.76082737365383*^9, 3.7608274656416197`*^9}, {
  3.760827931203135*^9, 3.760827948802958*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"w", "=", 
   FractionBox[
    RowBox[{"z", "-", 
     SubscriptBox["z", "0"]}], 
    RowBox[{
     RowBox[{"c", " ", "z"}], " ", "-", "1"}]]}], ",", " ", 
  RowBox[{"c", "=", 
   RowBox[{
    SubscriptBox["z", "0"], "\[Conjugate]"}]}], ",", " ", 
  RowBox[{
   RowBox[{"Abs", "[", 
    SubscriptBox["z", "0"], "]"}], "<", "1"}]}]], "Text",
 CellChangeTimes->{{3.7608275102689533`*^9, 3.760827511984077*^9}, {
  3.760827758800563*^9, 3.76082786162306*^9}}],

Cell[TextData[{
 "One caveat here is that of the need to tailor c, the conjugate of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", "0"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", to the specific ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", "0"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " chosen."
}], "Text",
 CellChangeTimes->{{3.760827874964671*^9, 3.760827924235338*^9}, {
  3.760827985953681*^9, 3.760828011136941*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["z", "0"], "=", 
  FractionBox["\[ImaginaryI]", "2"]}]], "Input",
 CellChangeTimes->{{3.760828044542097*^9, 3.760828056735198*^9}}],

Cell[BoxData[
 FractionBox["\[ImaginaryI]", "2"]], "Output",
 CellChangeTimes->{3.760828058651626*^9, 3.7608281946824903`*^9, 
  3.760830813061329*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"zcon", "=", 
  RowBox[{
   SubscriptBox["z", "0"], "\[Conjugate]"}]}]], "Input",
 CellChangeTimes->{{3.760828066813504*^9, 3.760828076847088*^9}, {
  3.760828134863117*^9, 3.760828140564896*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["\[ImaginaryI]", "2"]}]], "Output",
 CellChangeTimes->{3.7608280812998343`*^9, 3.760828141486904*^9, 
  3.7608281980894527`*^9, 3.760830816371056*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"w", "[", "z_", "]"}], "=", 
  FractionBox[
   RowBox[{"z", "-", 
    FractionBox["\[ImaginaryI]", "2"]}], 
   RowBox[{
    RowBox[{"zcon", " ", "z"}], "-", "1"}]]}]], "Input",
 CellChangeTimes->{{3.7608280951489763`*^9, 3.760828114479059*^9}, {
  3.7608281484604673`*^9, 3.760828183307831*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", 
    FractionBox["\[ImaginaryI]", "2"]}], "+", "z"}], 
  RowBox[{
   RowBox[{"-", "1"}], "-", 
   FractionBox[
    RowBox[{"\[ImaginaryI]", " ", "z"}], "2"]}]]], "Output",
 CellChangeTimes->{{3.7608281571284733`*^9, 3.760828201464983*^9}, 
   3.760830819665448*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.760828324243846*^9, 3.76082832888063*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"1", "+", 
   RowBox[{"2", " ", "\[ImaginaryI]", " ", "z"}]}], 
  RowBox[{
   RowBox[{
    RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "+", "z"}]]], "Output",
 CellChangeTimes->{3.7608283294675283`*^9, 3.760830823064848*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["\<\
The cell below demonstrates that the green cell agrees with the text answer \
in content.\
\>", "Text",
 CellChangeTimes->{{3.760828446884542*^9, 3.760828479378516*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PossibleZeroQ", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"1", "+", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "z"}]}], 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "+", "z"}]], "-", 
   FractionBox[
    RowBox[{
     RowBox[{"2", " ", "z"}], "-", "\[ImaginaryI]"}], 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[ImaginaryI]", " ", "z"}], "+", "2"}], ")"}]}]]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.760828356235303*^9, 3.76082841368439*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.760828414482648*^9}]
}, Open  ]],

Cell[TextData[{
 "The transformation w maps the point z=0+",
 Cell[BoxData[
  FormBox[
   FractionBox["\[ImaginaryI]", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " on the z-plane to w=0+0\[ImaginaryI] on the w-plane. In the z-plane plot \
its location is consistent with the vertical axis location, and in the \
w-plane plot it is shown correctly."
}], "Text",
 CellChangeTimes->{{3.7608308735209417`*^9, 3.760830954862694*^9}, {
  3.7608311697936287`*^9, 3.760831247453989*^9}, {3.7608345164041557`*^9, 
  3.7608345183062563`*^9}}],

Cell["\<\
As for the original and transformed circles, and constant lines, the mapping \
w is allowed to do its work directly wherever possible.  Two intersecting \
test lines demonstrate that intersection angles are preserved under conformal \
mapping.\
\>", "Text",
 CellChangeTimes->{{3.760833420307303*^9, 3.7608334641541967`*^9}, {
  3.760833559318606*^9, 3.760833594558117*^9}, {3.760833633980689*^9, 
  3.7608336466447687`*^9}, {3.760834535585479*^9, 3.7608345764004602`*^9}, {
  3.760869982558798*^9, 3.760869985392321*^9}, {3.761686565893338*^9, 
  3.761686616881444*^9}, {3.761768091476398*^9, 3.761768160771771*^9}, {
  3.761768270924008*^9, 3.761768319925351*^9}, {3.761768573137425*^9, 
  3.7617685843347*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Re", "[", 
         RowBox[{"(", " ", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "t"}]], "+", "0"}], ")"}], "]"}], 
        ",", 
        RowBox[{"Im", "[", 
         RowBox[{"(", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "t"}]], ")"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", 
        RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "250"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", " ", 
         RowBox[{"Thickness", "[", "0.003", "]"}]}], "}"}]}], ",", 
      RowBox[{"Epilog", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Orange", ",", 
           RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
           RowBox[{"Point", "[", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              FractionBox["1", "2"]}], "}"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Dashed", ",", "Green", ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0.4", ",", 
                RowBox[{"-", "1"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0.4", ",", "1.2"}], "}"}]}], "}"}], "]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"Dashed", ",", "Purple", ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "0.8"}], ",", "0.25"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0.8", ",", "0.25"}], "}"}]}], "}"}], "]"}]}], "}"}]}],
         "}"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x Re\>\"", ",", "\"\<y Im\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Framed", "[", "  ", "\"\<  z-plane \>\"", "]"}], ",", "10", 
         ",", "Blue", ",", 
         RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}]}], "]"}], ",", 
    
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Re", "[", 
         RowBox[{"(", " ", 
          FractionBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "t"}]]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "t"}]]}]], ")"}], "]"}], ",", 
        RowBox[{"Im", "[", 
         RowBox[{"(", " ", 
          FractionBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "t"}]]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "t"}]]}]], ")"}], "]"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", 
        RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "250"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Red", ",", " ", 
         RowBox[{"Thickness", "[", "0.003", "]"}]}], "}"}]}], ",", 
      RowBox[{"Epilog", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Orange", ",", 
           RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
           RowBox[{"Point", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Re", "[", 
               RowBox[{
                FractionBox[
                 RowBox[{"1", "+", 
                  RowBox[{"2", " ", "\[ImaginaryI]", " ", "z"}]}], 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "+", "z"}]], "/.", 
                RowBox[{"z", "\[Rule]", 
                 RowBox[{"(", 
                  RowBox[{"0", "+", 
                   FractionBox["\[ImaginaryI]", "2"]}], ")"}]}]}], "]"}], ",", 
              RowBox[{"Im", "[", 
               RowBox[{
                FractionBox[
                 RowBox[{"1", "+", 
                  RowBox[{"2", " ", "\[ImaginaryI]", " ", "z"}]}], 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "+", "z"}]], "/.", 
                RowBox[{"z", "\[Rule]", 
                 RowBox[{"(", 
                  RowBox[{"0", "+", 
                   FractionBox["\[ImaginaryI]", "2"]}], ")"}]}]}], "]"}]}], 
             "}"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Dashed", ",", "Green", ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Re", "[", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"1", "+", 
                    RowBox[{"2", " ", "\[ImaginaryI]", " ", "z"}]}], 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "+", "z"}]], "/.", 
                  RowBox[{"z", "\[Rule]", 
                   RowBox[{"(", 
                    RowBox[{"0.4", "-", "\[ImaginaryI]"}], ")"}]}]}], "]"}], 
                ",", 
                RowBox[{"Im", "[", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"1", "+", 
                    RowBox[{"2", " ", "\[ImaginaryI]", " ", "z"}]}], 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "+", "z"}]], "/.", 
                  RowBox[{"z", "\[Rule]", 
                   RowBox[{"(", 
                    RowBox[{"0.4", "-", "\[ImaginaryI]"}], ")"}]}]}], "]"}]}],
                "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Re", "[", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"1", "+", 
                    RowBox[{"2", " ", "\[ImaginaryI]", " ", "z"}]}], 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "+", "z"}]], "/.", 
                  RowBox[{"z", "\[Rule]", 
                   RowBox[{"(", 
                    RowBox[{"0.4", "-", 
                    RowBox[{"0.5", "\[ImaginaryI]"}]}], ")"}]}]}], "]"}], ",", 
                RowBox[{"Im", "[", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"1", "+", 
                    RowBox[{"2", " ", "\[ImaginaryI]", " ", "z"}]}], 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "+", "z"}]], "/.", 
                  RowBox[{"z", "\[Rule]", 
                   RowBox[{"(", 
                    RowBox[{"0.4", "-", 
                    RowBox[{"0.5", "\[ImaginaryI]"}]}], ")"}]}]}], "]"}]}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Re", "[", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"1", "+", 
                    RowBox[{"2", " ", "\[ImaginaryI]", " ", "z"}]}], 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "+", "z"}]], "/.", 
                  RowBox[{"z", "\[Rule]", 
                   RowBox[{"(", 
                    RowBox[{"0.4", "-", 
                    RowBox[{"0", "\[ImaginaryI]"}]}], ")"}]}]}], "]"}], ",", 
                RowBox[{"Im", "[", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"1", "+", 
                    RowBox[{"2", " ", "\[ImaginaryI]", " ", "z"}]}], 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "+", "z"}]], "/.", 
                  RowBox[{"z", "\[Rule]", 
                   RowBox[{"(", 
                    RowBox[{"0.4", "-", 
                    RowBox[{"0", "\[ImaginaryI]"}]}], ")"}]}]}], "]"}]}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Re", "[", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"1", "+", 
                    RowBox[{"2", " ", "\[ImaginaryI]", " ", "z"}]}], 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "+", "z"}]], "/.", 
                  RowBox[{"z", "\[Rule]", 
                   RowBox[{"(", 
                    RowBox[{"0.4", "+", 
                    RowBox[{"0.5", "\[ImaginaryI]"}]}], ")"}]}]}], "]"}], ",", 
                RowBox[{"Im", "[", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"1", "+", 
                    RowBox[{"2", " ", "\[ImaginaryI]", " ", "z"}]}], 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "+", "z"}]], "/.", 
                  RowBox[{"z", "\[Rule]", 
                   RowBox[{"(", 
                    RowBox[{"0.4", "+", 
                    RowBox[{"0.5", "\[ImaginaryI]"}]}], ")"}]}]}], "]"}]}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Re", "[", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"1", "+", 
                    RowBox[{"2", " ", "\[ImaginaryI]", " ", "z"}]}], 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "+", "z"}]], "/.", 
                  RowBox[{"z", "\[Rule]", 
                   RowBox[{"(", 
                    RowBox[{"0.4", "+", 
                    RowBox[{"1.2", "\[ImaginaryI]"}]}], ")"}]}]}], "]"}], ",", 
                RowBox[{"Im", "[", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"1", "+", 
                    RowBox[{"2", " ", "\[ImaginaryI]", " ", "z"}]}], 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "+", "z"}]], "/.", 
                  RowBox[{"z", "\[Rule]", 
                   RowBox[{"(", 
                    RowBox[{"0.4", "+", 
                    RowBox[{"1.2", "\[ImaginaryI]"}]}], ")"}]}]}], "]"}]}], 
               "}"}]}], "}"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Dashed", ",", "Purple", ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Re", "[", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"1", "+", 
                    RowBox[{"2", " ", "\[ImaginaryI]", " ", "z"}]}], 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "+", "z"}]], "/.", 
                  RowBox[{"z", "\[Rule]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.8"}], "+", 
                    RowBox[{"0.25", "\[ImaginaryI]"}]}], ")"}]}]}], "]"}], 
                ",", 
                RowBox[{"Im", "[", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"1", "+", 
                    RowBox[{"2", " ", "\[ImaginaryI]", " ", "z"}]}], 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "+", "z"}]], "/.", 
                  RowBox[{"z", "\[Rule]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.8"}], "+", 
                    RowBox[{"0.25", "\[ImaginaryI]"}]}], ")"}]}]}], "]"}]}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Re", "[", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"1", "+", 
                    RowBox[{"2", " ", "\[ImaginaryI]", " ", "z"}]}], 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "+", "z"}]], "/.", 
                  RowBox[{"z", "\[Rule]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.3"}], "+", 
                    RowBox[{"0.25", "\[ImaginaryI]"}]}], ")"}]}]}], "]"}], 
                ",", 
                RowBox[{"Im", "[", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"1", "+", 
                    RowBox[{"2", " ", "\[ImaginaryI]", " ", "z"}]}], 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "+", "z"}]], "/.", 
                  RowBox[{"z", "\[Rule]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.3"}], "+", 
                    RowBox[{"0.25", "\[ImaginaryI]"}]}], ")"}]}]}], "]"}]}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Re", "[", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"1", "+", 
                    RowBox[{"2", " ", "\[ImaginaryI]", " ", "z"}]}], 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "+", "z"}]], "/.", 
                  RowBox[{"z", "\[Rule]", 
                   RowBox[{"(", 
                    RowBox[{"0.2", "+", 
                    RowBox[{"0.25", "\[ImaginaryI]"}]}], ")"}]}]}], "]"}], 
                ",", 
                RowBox[{"Im", "[", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"1", "+", 
                    RowBox[{"2", " ", "\[ImaginaryI]", " ", "z"}]}], 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "+", "z"}]], "/.", 
                  RowBox[{"z", "\[Rule]", 
                   RowBox[{"(", 
                    RowBox[{"0.2", "+", 
                    RowBox[{"0.25", "\[ImaginaryI]"}]}], ")"}]}]}], "]"}]}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Re", "[", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"1", "+", 
                    RowBox[{"2", " ", "\[ImaginaryI]", " ", "z"}]}], 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "+", "z"}]], "/.", 
                  RowBox[{"z", "\[Rule]", 
                   RowBox[{"0.8", "+", 
                    RowBox[{"0.25", "\[ImaginaryI]"}]}]}]}], "]"}], ",", 
                RowBox[{"Im", "[", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"1", "+", 
                    RowBox[{"2", " ", "\[ImaginaryI]", " ", "z"}]}], 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "+", "z"}]], "/.", 
                  RowBox[{"z", "\[Rule]", 
                   RowBox[{"0.8", "+", 
                    RowBox[{
                    "0.25", "\[IndentingNewLine]", "\[ImaginaryI]"}]}]}]}], 
                 "]"}]}], "}"}]}], "}"}], "]"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<u Re\>\"", ",", "\"\<v Im\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Framed", "[", "  ", "\"\<  w-plane \>\"", "]"}], ",", "10", 
         ",", "Red", ",", 
         RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}]}], "]"}]}], 
   "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.760829425183619*^9, 3.760829531290999*^9}, {
   3.760829733620323*^9, 3.760829790866489*^9}, {3.760829896752986*^9, 
   3.760829897511447*^9}, {3.760829964502738*^9, 3.7608299956717987`*^9}, {
   3.760830040061481*^9, 3.7608300647965612`*^9}, {3.760830095419696*^9, 
   3.760830138088792*^9}, {3.760830442546883*^9, 3.760830466334998*^9}, {
   3.760830554183873*^9, 3.7608305866113367`*^9}, {3.760830619156142*^9, 
   3.7608306420168037`*^9}, {3.760830986482272*^9, 3.7608309939349403`*^9}, 
   3.760831088775758*^9, {3.760831341247316*^9, 3.7608314127154903`*^9}, {
   3.760831486915765*^9, 3.760831523063501*^9}, {3.760832180324809*^9, 
   3.760832197893167*^9}, {3.760832261700178*^9, 3.760832285336298*^9}, {
   3.760832357279278*^9, 3.760832384877266*^9}, {3.7608325125783567`*^9, 
   3.760832594630743*^9}, {3.760832628860928*^9, 3.760832807495287*^9}, {
   3.7608328724616117`*^9, 3.7608329225663767`*^9}, {3.76083297318242*^9, 
   3.7608330413938026`*^9}, {3.760833072097185*^9, 3.7608330992170763`*^9}, {
   3.760833156222148*^9, 3.760833227419859*^9}, {3.760834397379178*^9, 
   3.76083445291722*^9}, {3.761767765241358*^9, 3.761767770670735*^9}, 
   3.761767811248199*^9, {3.761767860981626*^9, 3.7617679077236233`*^9}, {
   3.761767965267356*^9, 3.761768037632161*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        FaceForm[
         Opacity[0.3]], 
        RGBColor[0, 0, 1], 
        Thickness[0.003]], 
       LineBox[CompressedData["
1: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
WHxm8f8DJChnmQ==
        "]]}}}, {
    DisplayFunction -> Identity, Axes -> {True, True}, AxesLabel -> {
       FormBox["\"x Re\"", TraditionalForm], 
       FormBox["\"y Im\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Epilog -> {{
        RGBColor[1, 0.5, 0], 
        PointSize[0.03], 
        PointBox[
         NCache[{0, 
           Rational[1, 2]}, {0, 0.5}]]}, {
        Dashing[{Small, Small}], 
        RGBColor[0, 1, 0], 
        LineBox[{{0.4, -1}, {0.4, 1.2}}]}, {
        Dashing[{Small, Small}], 
        RGBColor[0.5, 0, 0.5], 
        LineBox[{{-0.8, 0.25}, {0.8, 0.25}}]}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 250, 
     Method -> {"ScalingFunctions" -> None}, PlotLabel -> FormBox[
       StyleBox[
        FrameBox["\"  z-plane \"", StripOnInput -> False], 10, 
        RGBColor[0, 0, 1], Background -> GrayLevel[1], StripOnInput -> False],
        TraditionalForm], PlotRange -> {{-1.5, 1.5}, {-1.5, 1.5}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        FaceForm[
         Opacity[0.3]], 
        RGBColor[1, 0, 0], 
        Thickness[0.003]], 
       LineBox[CompressedData["
1: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
Vv0krHRRQc/E3hPCPtPvjRE2+2s96/HpDQTtUJtfTrx+l9+P4+umPMBo629d
ccI2soZctZ/cofPBGanjhLWexO1/p/YSbixy7j9HeNnnrA7h4Odgytt97z7h
Uy4JUtNqrlDg9zfPmfBYddqtoikXGB8KEPEmvMra9IpvsDP83oEJnwhfz9D/
fUP9KTDV3zkXT/jCPjH2o9NOEK6exJVOuPFct8C2E4/hyy13RgFh5oSnpSXv
HOFI+tJAJeETB62+3x+1g/SLGxYaCUfwdM0IKNjAxPoKsQ7Cz7mXcTf73wcm
TUHHf/egeiF22kuGFdzYLk4bIWx+65alk5sFTPF1W4wTtqvUCxw9ZAqDCSc2
TP9bX/Vyr17ndWhLOd8wR1j/4MeQDxv14UfulqR/96Zyd6XBx+ZngY/JM36R
cHzDlo636wA+qWcVLhGWt7kaFCQmiHYbP8z846ya1KMfdqijwr39Kv947/ca
10EpHfy7zTb1373sDP1W5lPLa7jG5D78ISyuuy6Cq9gYpbT4B2YIPzvbcz98
qzmm3nWO+U34lkne6e1plrhplc8LBuGGECi+ee0enps44zpI2FQrszVljTUW
fk779O9eN6G0ULjsmy3y6pU2thK2jqnNPm/ggE7oIFRL2H0V29+o1Y9QVab2
XSnhV0kpHY8uO6F6QyF/DuG4kqmaFlZnDHpn4RXxbz835I5cPOeCVj68af5L
//r5Z2RLyDMszTnI4k44fyevaaecG57TvrTyNuHY8caIG69e4I9iw0I9wjs2
/h4d/fUS9Y2TwtT/1Tvr0Zrldq+wzm5lw17Cavb2m3xLX+PRA0wCGwgruC58
51rjiV9Dd7//d+90XfHjcPQlL7xlmzlRRzjmNfL0TfvgvZ3ahlaEcfHEuGSQ
LwrLBPzUJizEJG7hruSHRxOzbGQIF8vUex71fYtt98x2sxBucfMfizvwHj0D
xUWekf7cd9XXal3re7SR3Fx2nXB7wAFWK6cAnK10ePnvHvtn06SP3I8P+DTz
ieO//p8KEGmcNA/Cc9nDGwwJj9/Nu2zC/Qk5a3Y1HCVcIaim35H1Cd1tLqVz
En54/QGb6bNgTJfxp2eReXPIf1+1eUMIWqoYsKwknOqO8geEQlFjY2tXC5lX
ZfefCc44hKLdQFlPNGG/LW7mz/nDkHE4T1OZsGZ3kGfm3XD002+rsybzzrx7
2sC9JBxD33ZUyBMu3a32S58nAjcvS+lfRXh/XOUgW0EEvhl57PyezMst9Vn8
Vuuj8KjPdv0vZN6ekBdeDEyIwWjOk/e+TFFwQKraJ3pNLNq9oxcYEQ4I2heU
ahyLKooua3kINx90PdS8PQ6Xsy14PCHzXu3QprNHX8RjrSkHKJK8aG3UH3Ey
/IpHZ44o+4+R9fe9bf6W8xW9X2jzyxF+Gq7VbbM2AWOaJ2d6SP44i9J1U28m
oOPQ8ufChLezvVqpsDMRr8QESsWOUsC+8/Tqz+5JuE5/W6YdyTue7tHFaxlJ
OC3RMcdOeG/BpfQttCTcYSIhHkbykSlp5qX7iWQcG0m5V0byM+wDv/DzuWS8
teGx+QqSt/n2J7b+vJmKgccs+s/0kn4oTLiyTjkdvRlCept/kX7MtX4/YZmO
W7c5CPuSPOdOVWtp/ZCOGa+us3ESbn932/LLeDrq3No6yUryP5BlxMIyMAPt
hMZf9jaR/bK5VnZ5KhPNF9Mc7tWRvOgv2dkTmYPZrazYRvyD4d9Qy16Xg0Ja
LftkCIvnSS0c+5uDe6XcQvyJrxw47Fwcdi4XpcNNIzWJz7yYHnzzigmxisWL
PbWQgkrtwPcWYnmYYDix9Uwu8U13ef5Ct3wc5M5bX5JEzhOT4hPt4HzM22H7
czLx3+8FO9+OpOXjLrX6B3yEG1TkJ3ho+VjRUsFnT/xLLsIu7rVSAd7RZ1bb
Fk/mteM5qUqWQhzc4XRbIILMa+sBhYRHRWg8Xduv8ZaCc9caBR+/LULx6W3C
F/0oSOYV4tD8UoR1+1wlrhA/rIlzH59pL0JW+5wXJsQfwy8bqhgcK0Z2qeCL
Fq9JP8ic1fFbKMZwS2HGMVcKlKckB0IcS3HpLp/K0H1Sn4xaZyXfUiweGdKo
Jn5b4ZmkNxJXitrCntxJxH+PsbuWH/tVij92yf18YEmBP+/Jmr9Hy3BYXA8Y
tygQ7WUPoM+UoaGCwFiIIQU3aAfu+j2owGEVg3xO4ueP9tbu8LetQtUqT/VB
fvK+f1I/ybypQkfmpglPPpLfLCvedkdUoTHD8coRXtL/BVm0w/VVWNHl6OS8
k4I38brac2LVGG043756K8kLOL/lT281rnlucLd9HfHjH2OLM0I12OV41/bV
NAMUU87psn2oxTNOp/QnChmw94nJ5rioWpyfvY98BQwQV55+o5lSi72SLXZa
eQzofx+VFVxVi6+rjv2OyWaARMdbXm2mOvw7VPlLOZUBbhG/VDcZ1+ErN7OA
/ZEMCPkUt2fqYD3KhnSeSCX3Kzf8ftK6rgHZNyY1aJ5gwOZXUkeaxppR04Fv
DD6PglrUXPLjXb9QWvXB4tQfOjRf1JohEY89zXEssevpwJY6JV7A243cmxT0
edhGgN11fXC9cDcav+G3/cNMuOxp+sCBbvQS3sTfsjAMBT7Hu9af6EZ54Rdb
XCaG4ThWcjoaduMJvr9rItuH4XJX+vbgsG4UONRwkT15GLzt3GIEBXvQaHWK
l9blYTB6dlvNYn8Pcm1NgY/nh2Hdk1C/b1I9mKY0yejWGIb2+XyRUyo9WH1v
/tgVhWFwOvT5tLtpD+YWnd7EIzoMcg+49C7F9+AVt41XAxaGYGNwgF9mSg+O
DgU1eE8PgZb0GZsdOT1o/47682xsCBK8NQ8OVvWgua6cul7fEAi9dH/sRfUg
a3L05bLvQzCce/330kwPbi+Mr/QrHoLnosfWWTL14s9X7iX6OAQGWiEHLqzv
xbyFO7LtSUOg+MpepmJrL5b5JX72jR+CqrnxIXm+XnxdrOSlHDkEzcaRshki
vUhjy+qe+DQEB///9+nv///36f8DVNh59Q==
        "]]}}}, {
    DisplayFunction -> Identity, Axes -> {True, True}, AxesLabel -> {
       FormBox["\"u Re\"", TraditionalForm], 
       FormBox["\"v Im\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Epilog -> {{
        RGBColor[1, 0.5, 0], 
        PointSize[0.03], 
        PointBox[{0, 0}]}, {
        Dashing[{Small, Small}], 
        RGBColor[0, 1, 0], 
        LineBox[{{-0.13100436681222707`, 
         1.017467248908297}, {-0.187207488299532, 
         0.8299531981279251}, {-0.28846153846153844`, 
         0.5576923076923077}, {-0.4979253112033195, 
         0.13278008298755187`}, {-1.5, -0.9999999999999999}}]}, {
        Dashing[{Small, Small}], 
        RGBColor[0.5, 0, 0.5], 
        LineBox[{{0.6482106684672518, 0.5820391627278867}, {
         0.2854877081681205, 0.33465503568596355`}, {-0.19339242546333602`, 
         0.30781627719580984`}, {-0.6482106684672518, 0.5820391627278867}}]}},
      FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 250, 
     Method -> {"ScalingFunctions" -> None}, PlotLabel -> FormBox[
       StyleBox[
        FrameBox["\"  w-plane \"", StripOnInput -> False], 10, 
        RGBColor[1, 0, 0], Background -> GrayLevel[1], StripOnInput -> False],
        TraditionalForm], PlotRange -> {{-1.5, 1.5}, {-1.5, 1.5}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{
  3.760829997473896*^9, {3.7608300421703777`*^9, 3.760830066104789*^9}, {
   3.760830099745264*^9, 3.7608301388353167`*^9}, 3.7608304679185867`*^9, {
   3.7608305706643753`*^9, 3.760830587538932*^9}, {3.760830626965303*^9, 
   3.760830643687769*^9}, 3.760830995072076*^9, 3.760831091328714*^9, 
   3.760831345440218*^9, {3.7608313861843967`*^9, 3.7608314142227907`*^9}, 
   3.760831525937706*^9, 3.760832199897838*^9, 3.7608322865069942`*^9, {
   3.760832360363912*^9, 3.7608323858333406`*^9}, 3.760832595750493*^9, 
   3.7608326328605757`*^9, 3.7608326866665487`*^9, {3.760832907277166*^9, 
   3.760832924026235*^9}, 3.7608330426984053`*^9, 3.7608331023353853`*^9, 
   3.760833229600037*^9, 3.760834454122129*^9, 3.761767908997295*^9, 
   3.761768038859659*^9}]
}, Open  ]],

Cell[TextData[{
 "19. Find an analytic function ",
 Cell[BoxData[
  FormBox[
   RowBox[{"w", "=", 
    RowBox[{"f", "[", "z", "]"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " that maps the region ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", "\[LessEqual]", 
    RowBox[{"Arg", "[", "z", "]"}], "\[LessEqual]", 
    StyleBox[
     FractionBox["\[Pi]", "4"],
     FontSize->21]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " onto the unit disk ",
 Cell[BoxData[
  FormBox[
   RowBox[{"|", "w", "|", "\[LessEqual]"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "1."
}], "Text",
 CellChangeTimes->{{3.760815411203045*^9, 3.760815526779923*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[TextData[{
 "A hint from s.m. points me to example 2 on p. 739. This explains how to map \
a wedge sector onto an upper half plane. The upshot is that a wedge sector 0 \
\[LessEqual]  \[LessEqual]",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{" ", 
     FractionBox["\[Pi]", 
      RowBox[{" ", "n"}]]}],
    FontSize->22], TraditionalForm]]],
 " can be mapped to the upper half plane v \[GreaterEqual] 0 using the \
transform ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["z", "n"], TraditionalForm]]],
 ". In this problem I have a sector from 0 to ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    FractionBox["\[Pi]", "4"],
    FontSize->22], TraditionalForm]]],
 " , so n =4. As far as the r value goes, it can be anything above about 2, \
but it can\[CloseCurlyQuote]t be \[Infinity]. I assume that setting it at 4 \
arbitrarily will not undermine the argument that the demo is general."
}], "Text",
 CellChangeTimes->{{3.760886357865149*^9, 3.760886404206584*^9}, {
  3.760886490797587*^9, 3.760886617272151*^9}, {3.760888901994186*^9, 
  3.76088893092791*^9}, {3.760895134346539*^9, 3.760895244076288*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Re", "[", 
         RowBox[{"r", 
          RowBox[{"(", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "t"}]], ")"}]}], "]"}], ",", 
        RowBox[{"Im", "[", 
         RowBox[{"(", 
          RowBox[{"r", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "t"}]]}], ")"}], "]"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", 
        FractionBox["\[Pi]", "4"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", "0", ",", "4"}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Green", ",", 
         RowBox[{"Thickness", "[", "0.004", "]"}]}], "}"}]}], ",", 
      RowBox[{"Epilog", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], "]"}], "}"}], "}"}]}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x Re\>\"", ",", "\"\<y Im\>\""}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", 
           RowBox[{"-", "2.5"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Framed", "[", "  ", "\"\<  z-plane \>\"", "]"}], ",", "10", 
         ",", "Blue", ",", 
         RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}]}], "]"}], " ", 
    ",", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Re", "[", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"r", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "t"}]]}], ")"}], "4"], "]"}], ",", 
        
        RowBox[{"Im", "[", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"r", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "t"}]]}], ")"}], "4"], "]"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", 
        FractionBox["\[Pi]", "4"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", "0", ",", "4"}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Green", ",", 
         RowBox[{"Thickness", "[", "0.004", "]"}]}], "}"}]}], ",", 
      RowBox[{"Epilog", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Re", "[", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"r", " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"\[ImaginaryI]", " ", "t"}]]}], ")"}], "4"], "/.", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"t", "\[Rule]", "0"}], ",", 
                RowBox[{"r", "\[Rule]", "0"}]}], "}"}]}], "]"}], ",", 
            RowBox[{"Im", "[", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"r", " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"\[ImaginaryI]", " ", "t"}]]}], ")"}], "4"], "/.", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"t", "\[Rule]", "0"}], ",", 
                RowBox[{"r", "\[Rule]", "0"}]}], "}"}]}], "]"}]}], "}"}], 
          "]"}], "}"}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<u Re\>\"", ",", "\"\<v Im\>\""}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", 
           RowBox[{"-", "3"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Framed", "[", "  ", "\"\<  Z-plane \>\"", "]"}], ",", "10", 
         ",", "Red", ",", 
         RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}]}], "]"}]}], 
   " ", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.760883215570435*^9, 3.760883247414547*^9}, {
   3.760883575134733*^9, 3.760883588772027*^9}, {3.760883806624886*^9, 
   3.7608838346222486`*^9}, {3.76088597791958*^9, 3.760885978303184*^9}, 
   3.760886034333674*^9, {3.760886684968328*^9, 3.760886742605587*^9}, {
   3.760886845788041*^9, 3.7608868787374372`*^9}, {3.760886956503173*^9, 
   3.760887041500114*^9}, {3.760887133253024*^9, 3.760887168576845*^9}, {
   3.76088724981551*^9, 3.760887250125705*^9}, {3.7608873792913113`*^9, 
   3.760887441752087*^9}, {3.760887472655764*^9, 3.760887481591154*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1:eJzll/lTVFcWx3uBZhNxjEsUAypuaBID6MT9ezUqCnFj1OAKxKiAoqAQJWpA
BXcMELdRUEQniIlKWkFcwQYFbVQaUUAQoQFll6btZochp2/4wVRq/oDp6qpT
Xa/6vfu933M+3/sGfbvRabVIIBCYCgWCP+r/2yd8yOzObxb+/G2AWfPSpmbB
a+6pn4+sDUX6Vrlv/Kgs1Coypza5RiHDO/KhwCALgaqQcm3gBfRVbyt88EyB
oeKN707NjMOOcHvtF+EKJIZIF0XhGsThaaWbpykQujDSf9GIRIhLBpQ+Lc2E
ODJt/tG2W2jYIXEL9c+E0LbXjtm3k7Di3sC7JsJMNDrGlCbE3cOtg2cHzGx4
gkjnI45Gfik4tmZ4yO5nj2HvueD0Fev7OD1Y+eTm8Qy8c9423OHxA8w99uuk
yulyxFodq96zMh3O02fdHVzwEIt51elVfqBXyfVGcb1KrjeO61VyvYlcbzHX
m8z1FnO9qVxvMdebzvUWcb1yrreI633K9RZxvQqut5Drfcb1vuJ6n3O9BVzv
C643n+vN5XrzuN485Cd4dX6ruvQeWFmtvfhtFc5r3F+tPHUBn461GR06tQpl
E24o/cISYWu9/vOdxlUY6Of5+Q1XGc5V35hz8U4lEoOGva3wSMetZet8Zi+r
xJHsg4HeLk+gv2xUzqWSCqzvGGvOLLIQvHDUiy+/qYAs/mjr6PZsqG/vD3NO
KEfg0KeffPk4ByaDbSLDhOV4r2pe3HP/S2SM8D/qO/4tqoNWqkJGv4Lq0KvY
6JVv4Gn5g9feu6/R8G9r8wyfMlzdFRHZ0K8Yt+ICL13ZXIqkk942ZTOVmGaX
0L3/6hJM5VXnb/0H/tZzf+O4v/Xc32Tubz33N537q+L+ZnJ/VdzfbO6vivub
y/2t4/7mc3/ruL+vub913N9i7m8t97eE+1vD/S3j/lZzf99wf6u4v+Xc3wru
bwXI3nxtl970uf2txmdpYTh4V6L/zmtoXtyuiE7QwkMyI/xL/1S0Z+i1Ju/T
4rXX79Fjzj5Bwbv+xxJnaVGb4lA1zTkbA7bk2d3RajDUxnLdvnl52P1906se
P2twNVYv19O2ECnmQ16JLTQYJNvutOPHYvh9Msv//fH3YGc+rb30vATXVBcu
zRW+h9ZCEVk64A0WNpQqDi5VI3WD/2lHp3JYRI0bZ3u+HrmpZcHmvpU4t2jO
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
     "], {{{
        EdgeForm[], 
        Directive[
         AbsoluteThickness[1.6], 
         FaceForm[
          Opacity[0.3]], 
         Opacity[0.3], 
         RGBColor[0, 1, 0], 
         Thickness[0.004]], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNl2t8j2Ucxp/NKUOlhGLV0LKmhqk5lGNapIXRVIuaSWXmVFaTDLWaHEM1
mWNarUSTqDksHWaKtkpnnUZCJ6+ciq6r5/vCi+/nufe7f4frup/7v8//H5Mx
bnB2ZBAE+0RtcUacExEEp/U8JBqKRqKlaCHqeV80E01FLeU2EJHiMHv1RXNy
GtDDtZeIKGJeXyyixaXiatGOOdGs4+kVRa571kWDZ1+EtnOpacn6PHpGU+dZ
caKtuEBcKFqJGNGEPm1Ea/aasHZOV9FN9Bf9xGXicpEgrqHWWq6gRzN0Xili
mW3vV6GhBTrjiTVHY1tqmtIjlp6dxLXiRtFHdBSJorfoJToQ87onde5zHXVt
zuqTiOdW1LVHRzs8dmWvNT070MvakugZh+4uorMYKAaJe8QIkSMeEU+JfGrj
yE2iNp5Z7nHc71B35189GzO7DVo7ctYxaE3Ak3X05UwS8daHM2mPbp9FD96R
67qLGziLWPp0opd13UTPzui6WSRzNr6b13NGCczoQc8kapLp0QVv/ejRjdpb
gvAOdac2RdwqRon7xMPiIXT34lxvY92bMx6IT/tOFYPp1ZPcFGZ41p3iDmr7
kDsIXf3ZG4Zu60wTt7Pux14aZ2JfQ8UQZvdlncpeMrXOGYCvdHEX8TQ8juId
dCdnALrty3dnOBqt9d4gvFMp5HjvbupSWKeTax0Z1AxBR6YYyWx7GY2GYXi/
n9hQNI6iJpUeI+mZK6aIWaKAWp/tA/RIR0uWGIMP6x4nsllb13hiGfSeKCbg
awS5Y+k1nHUWtRnkjmemZ/szloMn+5gchHdoNDk5xDLx5rs1idmZrCfyjtLR
/iCMwfej1LnvE2ImOu3jcTGVtXVNIzaBvtNFHj6yyX0MT2NZT6F2ArnTmJ3F
Xi6z7eNJNEzGWz6xSWi0thnMnsTaGirFLvGN+BpPubzLp8VOcrz3FTrtY46Y
zdq65hLLo+98MQ8fU8l9RjwvXhDF4mVq88idi27/b3xOLMaTfSwSC1nns7cI
H/b2rFjA7Bms5+OhgJmePQsdS0Qhde67SqzEg3UUiaXocp/lYpnYKN4WH4oP
8DWH3BfpPZv1EnrNo7aIXta2gp4L8bEaDTPxvBBti/D6EjkFeCjE0wLyVtLT
2jaJj9C4mLNcQ48N4i3xvtiBRmstEa+ytpfXiC1F9+vEivCyltgyfLxBbDk6
1hFbgbb1xFbi801iq/BVSmz1WTpLWa9B8wZ8L0HrK0F4h4rxvZGY9zZzDiXo
fle8w9q6y4itRedWsYXaEnI3k7uWvTJy7WMbNcXM3ISG9fgoF9t5R4XkFLNn
X++Rs46a7fQsxecOcvzZ/Fh8G4Sf0U3oquAdHwvC76P+XvoLmtxnt/gEzVvo
sYtae9tJD8/xXfhMVLPnc6kkZxva9tCzHF1V4lMRaHaUiIgIvw/7e3H9iDB+
iNpycvdQu4NZVcwqQ1slWrei3Zr9GfM9/kJ8Tsx733EmFej0/6Yvg/D/ov/n
+HM4i1zr/p6a3ejYR2wP2n4gVs1Z/Cx+YrbPeS8aToq6+D3AXgWz9+Kpmtof
6V3F2jPqRYS/CfxboI6efwfh74NTetYSfwbheZ7Q83zxOzXOrdH6CPNPhkf8
/9rv3mdtTbUjwu+LdZhxhpwj3I+/6Oe+kfT3/TnG39bmfef9yp5zani3/h3T
kDmH0WrNB5h/nPd/mpp/gjDfdQfxas8H6XWKmOd63gl62tx+Pf6gn/s2Zu3Y
fu5eI/ZqOE/POqr1b0Go0d+bG6HXsaPosS7/1vkPCBeZCQ==
           "]], 
          PolygonBox[{{5, 246, 6, 21, 20, 245}}], 
          
          PolygonBox[{{241, 18, 33, 32, 17, 253, 232}, {237, 17, 32, 31, 16, 
           249, 228}, {4, 244, 5, 245, 20, 19, 243}}], 
          
          PolygonBox[{{3, 242, 4, 243, 19, 18, 252, 231, 
           240}}]}]}, {}, {}, {}, {}}, {{
        Directive[
         RGBColor[0.368417, 0.506779, 0.709798]], 
        LineBox[{235, 1, 250, 229, 238, 16, 31, 46, 61, 76, 91, 106, 121, 136,
          151, 166, 181, 196, 211, 212, 213, 214, 215, 216, 217, 218, 219, 
         220, 221, 222, 223, 224, 225, 210, 195, 180, 165, 150, 135, 120, 105,
          90, 75, 60, 45, 30, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 246, 5, 244,
          4, 242, 3, 251, 230, 239, 2, 247, 226, 235}]}}}], {
    DisplayFunction -> Identity, Axes -> {True, True}, AxesLabel -> {
       FormBox["\"x Re\"", TraditionalForm], 
       FormBox["\"y Im\"", TraditionalForm]}, 
     AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, 
     Epilog -> {{
        PointBox[{0, 0}]}}, Frame -> True, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, 
     Method -> {
      "ScalingFunctions" -> None, "TransparentPolygonMesh" -> True, 
       "AxesInFront" -> True}, PlotLabel -> FormBox[
       StyleBox[
        FrameBox["\"  z-plane \"", StripOnInput -> False], 10, 
        RGBColor[0, 0, 1], Background -> GrayLevel[1], StripOnInput -> False],
        TraditionalForm], PlotRange -> {{-1, 5}, {3, -2.5}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],GraphicsBox[
    GraphicsComplexBox[CompressedData["
1:eJzlvPWfl8X3/093h6CwwNINu7AssTxnaClp6RIEJSWlpEsRWJGU7u6unaFD
lJISWaUVAelY6vN6zbnPvm7yvnH7/gHf/eW6Pa9r5jzO43GumDNzZoM/6V7/
03hx4sTZnCROnP8e///292Lw8xbTaw5U/veN9mV+6jBrgGo87Hi/cTWbqHrv
b0k9c1o/VTph7Zkz13ZUX3bMXzJ74z6qUNmuZn2CHqogx16cD9CuAf3qYOcK
dgPT6kdGjy+y6zm44JhrXC8p/U19+hcQ+6Y39vvI0eQHt660M2HgXhY7ph64
8DNb/pw1s9nVuhHye+dbfHfgx3T4boPvUvhuhu96+K6H72b4LoXvNvhOh+8O
+HaF706PA98d8F0K323wXQ/fzfDdDN/18N0G36Xw3QHf6fDdCd/IiOZXznQ6
W+VyLN8L9aJTPj/7h9ow98bIWSZKJet3Rf2R/Xc1c8D4ezrmJ3U/Z/zBleJd
VHPKV31y7+szscd7/jztUtDP2/F2PU4zcBfJdeOvT5X+Jgn9Z4l9cwf74BuP
i3/G454XO2YtuPAzmw5Pv7FsyCri++Kt+Mag+3ni+4z43iS+j4nvfeJ7n/g+
Jr43ie8z4nue+MYQ39XE94XHIb4xxPcm8X1GfO8T38fE9zHxvU98nxHfm8Q3
hvieJ74viO+JCFvNRF1dlkZ7vr9U2xv1uHwa3ab2cxu+7I7688jqw2kSptKX
Rqbvdemvl6pa/ULTLqRIpgefKRxT9mACPYhjZc5fo53v1wA7J7HrcaLAbSnX
jce9KP3NTfoPEfvW2/9QjnYouDeknb0M7imxYz8DF37W4zZx8Q6O9eOcux9y
6DXufnitErr7JbuW+yyl/sfdT1n0THc/ZdSzOd7m/BzaJabfCuycwe7buBvl
ujnL9UnS33rcGWLf3sS+3NdZLOd1AmlnfwAXHLsSXHDsGnc/34549ua/f8Vi
/Wj3V5OEs0KL6a+qxLsaOTCF/qzFj8t3/VJYb1/Zo7bdn0VXik7YZ1+CAvqn
O+OuzHuYS//MsQrnfbtO9BuEnbbYPVpuSIc5825EPAWX69Zf3yL97ef0B8dW
xH5VOdofwaWdpZ/+ROzYoeDGCI4V3CcRT9z9XS6Wr9z/ZXUDd/9n1jXd81Fa
l3DPRz4tz2mYzueenxCdl+MXnA+n3Uf0q4edaOx6nIfggmMvcb2I9Le16Z9b
7Nuu2O8uR+vx8c963N/Ejm0E7iPBsRvd8xunfN8NpVq3+61KrB/ftR4flr5u
FZ30/vspKvTJpR/U6fpnoQ2V9KQxZTK3fBaqM7/cvblbpgr68fV1TydXLBd7
zMT5KbR7SL+E2InE7oZKDc8d3Bhvd29wuW799Ujpb+/T/4nYt+9hHxz7FFz8
s96/iWLHJgEXHFv/r8jhW5JnLr/LPc91Y/nKe6Wubu6e9yL6snsffKQvuPdB
hK7o3hc19ED3vqis+3OswPk/aHeNfq2x4+3++31Vl/dZEeuvn5H+1uNin/dV
DY9jB4EbLe3sb+CeEDu2Bbjws6rc04GJBuco/177Pt+Xad8k1o+D5QfVXnmo
sU72UdtUVzaH6UdhWwr/+ryR/mFIr6RfF6yiU/7dePDdtA306TX5furc6aPY
oz/v2z2gX2LsHMKux8kELjh2P9enSH97n/7Yt8mxD471uA+lnZ0DLv7bVODC
z/YpsT/hyId5yjdy76+2//seufdbG73Mvd8COp57/7XmvVlb33Lvx+Z6uns/
Noo9/sn5GbSLS7/l2DmNXY/zMbhct/46OLyfW3v71tu/Lkc7BVz8s96/k2LH
Lga3oeDYle79XLj89jVl9vU/2jHWjwG6S/2DIR116E97RycpUkWX3lItrGH3
T/WerQ+igxY31F9mn2y3z/hE18m99daGFS11XY59OX+IdmXo5+0MxO6ZUVXv
LB1eYvc2cLlu/fXd0t+G0x8c2wf7HG0tcEtJO7sfXPy3xcDdITg2uESx9NeD
QssLyy9i+XZ27/PueqR7n9fSvdz7vove6973zXV19z34XJ9034N2+hTHmpzf
T7ue9BuCnU7YPea+C3l3e1yuW3/dSn/bg/7YtzWwD471uN2knfX+dRQ7dji4
4FjBLVU+zlt/Mp4syzgvs0q3quusZdkHqsszr1e80fNDxmfl1Nv9/J+MP0sz
/syntparNaT/vv4q9XvBX25J/Mn/6Sfj0zDGpyHqn7Vt/ojM+qXKOXfkZZW8
6/9pX5B2fBfVqKKdzj6v1Sv2+Hb7AH40wK9g7Hqct9vXgfcVdEiH3zvh8X/s
u/HxnZ3P0SUandKi29vt0ZXxc1l1XdqbNO9oL+PrfIyvS3sdzbZ3+CPj7xDG
32Eqh/A1997BV8bnYYzPQ7yOZvQ79JTxe2nG7/m8jibXO+LF+IbxfWZ/P5h0
77gfuL8Y/6eJyCi6mLvoKnnWPPKywdyfO7k/x5IvzY+1K/nVXPK/8eBvR8cF
5GMzyQOnwGcr99/q2PP3aCf6bIw9zsFuCnCC6efteD+93+nA3Ykf3s9m+B0N
j7TwkvxysPH95X4Zy/2yk3xzPPnmXM+L+2M7+ecU8s+Z3A+ruR+2ev7G84QX
8d9IfjrXeJ7wIt6ryVfnka8O9voaz5N4kL92IZ47iedYJXnVCSX53Gp1tcOr
DUkKXlbVZqzo0vn+GvKjE7E6Sd72s5J8b5f6sfyEKxtq/6H+/v3A3b0nD5L/
HVWS/+1Xq1vFNM+nL6lNtzd3ydb2lBrE+cq0u/pJqxJdup5Xlzlew67H8f1W
YqcBfp7E77vgHsMP72cUfn8Cj2vwknxytfG84Wn8dckvd5Ff/qzuiH1zFPuS
b+433v8N4p9Zjn+Sfx41Q+H5h/Aynp/koz+by/BcJf3MZnhKfnrCfAZPcM1t
eBIP43kSL9MSnvK9/EfJ9/IYz+cLns/D6HMvVif5nt5W8r26yP3znPv4ipLv
619Kvq9Xuf+e8nzeUac4X5N2cv8+jD3ux25PcILp5+0Mwc9O+J0O3J34Id/J
Jbu839HwSAsv+hvfX57PwzyfL5R8vy+aHuDDi+fzufff1MB/eT7v8Hw+9byM
5wkvns+HSr73t43XD148n3eUfP//McPhib7G84SXEZ5beD5f8HweVpNdvpNQ
p3T5zlVV5V7/5ekmpNEHPlyeoeL5S6q/y38Sah/Ppy5fiq+nuXzpgfpzwrXj
Qb1S625XO0d0ivdEZXH5VVz93OVXL9SBRDcutCqVQgeHfro7aEdc/Yzzvt2R
2RExfScmjj3OwK7HyUG/PdhJjp/f43dXcK/jxyaXH+7d1Q+/d8HD86K/mUr/
g3LdVOb694JvHoPfXeybq9iHl/kA/7OJf3Y//r0v5+0TeB4SXpajxq71+u2T
fjY7PImHTQFPeNnP4Uk87McuHz0cUVX8ttfgedjlN5l0CpffPFaX3fMbrCu7
5/euyuLyncyx8Xzm8qOMerbLjxLqw+59kEPfdO+DRDq1y6fS67Mun0qll7r3
SZBe794n6fR5zqelXbR7D2XWlzjOxe5TcHy/xdhJjp9H8fsWuEfx41m6bu2z
3vsx4gP8DoOH50V/4/tz3fjrswTfPgFfviOJrOf5q/hv0+A//lnvH7zsRXjC
z3p+kl9mtDPhKd+RILsOnkfEL5sAnkcE116DJ/GwA1z+eT1C3rfBtiU8v3L5
TD5dyuUzCXXD9O2//epYMd2ke5ESm5a/VLtcfpMvNp5lXT6UR+9z+VAGPVS1
PFGjZFEds/zzozVyZdQDXP6UUzdy+VOQVs1SNm2ZuZAe/VNwzs8SBeuGnO9P
u4OSv+gDHA9jtxw4vl8AOyXwczB+vwTX+3HW5X9XI3bid2t4fAwvydsS2iH0
/1CuG39d8tAM1vN8JvbtIOxLPhpk++H/KPHPlse/gXLe1oMn/KznKXlrHnsQ
nuhjR8JzkPhly8JziODap/CUfDMf+eaDiKbit+0Gz2tXuibsPKGkfrQ36MNe
+9PpZO59XE5fdO/jJPrH9zqVtxnDYuO57/mrOSXfhOr0zU7lfF0zp97o3u9l
dHL3fs+pU3davj54UHEdEjVv0ZUaBfVf7vsQrrO670MRXYLzaWg33H1XSuhh
HNNh14KTnX63sfMUP73fqcDdjB/eT+/3b/BIBS942uv0PyzXbVqug2/3gJ9S
7Nv12A8T/20q/IeXvYV/8Lee52DhZT1PeNm08ISXzQHPK+KXfQBP9LVeX3jZ
mBIh91f88iJCvvvl7N/wTDBjW50nj7Ru+XeFo62eZNMltoyNV2J7Ff3i0b6Y
A5PT6+HLk2Wd0b5CrE59L7d5VLux0sVHVI1aWKyoDkm0q8PHCyr/5zkI3TLg
cmH9fH3jiy1Cy+lDG258U2tdmL7ZveSf04dX1JFq6rBbFcP1Mc6/ol1Qn/j3
B90KxB5LYLcPOJPpdwM7TfAzLn63Abc4fng/h+H3G3iEwauB9LcJ6Z/osbtu
Q7heUPCt54l96+0fEf/tE/yfIP7ZK/j3Us7bw/DMKrxsMPx6il3reV6Xftbr
E0/8sq3hWUxwrdeXeNjfrlWN3lghQXniZdMKD12odff2rfrU0PeP7Vz+Z778
upL7vtbV1n1fg/TrbK9iJuSqGavTuvH7147t9aHetn3C6Evfhus/3Pe6jv7M
fa9L6aIdrv51MryK/uL+phY7/9bauO99LcYNFXQ3zhek3X43Tqim93Hcjd2N
4Ph+u7FzGz8L43dHcKPxY165vV3GnM2w+yV+b4dHRXjR3/r+++W6rcB1eFnP
E/vW28d/Wwj/PxD/bBT+wct6ngeEF+Ohap6X3QHPndLPZoVncfHLPoPn74Jr
u8OTeNi/6/Y5urVaivLwstHwXFfpk52Johrop92Xrg1JFKpL9vj8sycRTfTM
Lb8nT3khj37+3+Ub1TA2nv3X9Ww3N1Bfr7wbd/2wSRX0N80/jT6ZsLF+uurY
56uyal2na5Y2iVfU0U8yb5/TWFfXG2/suZFzaUMdOLR3WIVH1WPP16bd5h2B
no1UvdjjKuz2A6cC/TZhJwY/1+L3I3DH4kfsPAp+L4ZHKLzgadfQf7ZctyFc
Xyb49kvwsW+9/Yfiv/0Q/+FlN+BfTTlv78Nzi/Cy2+GHfnY1PNHHen1Wi1/2
CTzHCK59Dk/iYT1P/Lbz4Zlg3qXKtT5rofsHP0jZ+Z8yOtqNl9rqgBsvFdU/
1r4RWS9Xy1idgtpUzjNbN9OJt1bTjz6srg+68VcbLeOvqnrThCJBdw99rKfs
qZ3jeMH6eoEbv7XUa934rX7s+Y20u+DGfU30rxyTYzcbOL7fQuz0wc/4+H0D
3EP44f08ht9l4OF59ZT+1vNuKNft71xPIPjW40seX9UewD7+W+//GvHPLsI/
zttp8LwovOxv8PtA7NqE8EQfuwqeb+Y6v+yX8ISXvQXPn4WX3f3w57KFMxYo
/4f4bZvBc1n+FgMXnG6n+xQYm/j2+xV1tzrLMhRd1FHr67+ebVQnTKcd0iRe
wY/bx+rUL92gwdPqf6LPLB/0+e7F9XSOuomObejdQRevHv9emW519J9tk8xe
e6y1nraj3euY5k31e4k2vH6Yu70OH3A317K6TWPP36LdzGePfp19qk3s8Sx2
vwSnNP0yYKcffi7H7xBwvR8/fzY107mkOXd7vyvCw/OCp/W8a8l125Xrvwi+
7QN+EbFvs2Ef/+1N/A8T/2x6/IO/9TzhZefAr6/YtV4/+tmS8FwiftmB8AwS
XFsCnvCyv3ZP3ShdluLl4WWrwvP57YN1mjzvpDOeqdugw7wPdQs3/u3+n3HA
f8e/EfpqmWH776zoHBvPsKYFJw2585meeXzZqUbxmuhRbjzdTb924+lGOk2v
BNmWzf9Uj7m/u3JO3VZ/6MbjnfU3bjzeNvZ8Otr95MbxHVh36RBrtyQ4X9Ov
MnbS4OdT/Pa4o/Gj8LHABpUsz+4r+P0xPFrC6z3pbz3vT+S6bcX1HwTfhoKP
fevtfy3+29T4j3+2Cv7By9JO/yi8rOcZInbtdHjSz3p9nohfFj89Lxt3hfAk
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
/pvYP7LKeP3Iy43nKftH1rJ/5Fs/f0F8F/n5DvaP9CWeO4jnJPYbnFOy32Cz
WkIeOod8jXwuNp6y3+CMkv0GB2Lz2nXkf7Lf4LSS/QY/q2XkxSPJH89zPi3t
yD9j8+y52H0KTjfycp+/JsfPo/jdm7y+N/mv7DcYx36D82oy8wQHyZ/pb3x/
8m/j82/Zb3DAPAF/tfAynqfsN/jZpMF/eJkF8ISXuQjPtsLLeJ6y3+CMmQlP
GSf+ZjxP2W9wziSA55fCywz38xfCy8h+g8URzAuYxfD8y9VDP1LPXD30KZ7P
Fzyf25TPU308D7n66gcqk6uvvuLzv9g8N4Orz76nwl199v/y4i7kj2U4n552
BcmrC5F/ZsbuAXAykpf/Qv76GD//xG/yX57P5+ru1POz1j1fvus48wIB5gn8
vEGM9De36C/P5zaezxcqo+Abjy/PZzTPZ4znZdLiP7x4Pp8qzptS8IQXz+cj
z8t4/cjLjed5Q/wyL+HJ/AXP5zU/32HeuPr0nTyfMTyfp1SIq59Npp+4+tk/
Y/PQV+Sl5HPax3Ozq8dNQt3xU3WYvLYJ+V+oq+dNqHu5et44ugJ58VLyx56c
L0a7c+TVY8k/92B3KzhzyMt9/noXP73foeT1w8l/vZ9xmRfIwzyBz58fSX8T
6nkLT/MjvKXO+KnZAn4D4WUOwbO3+G+9/0uEl/U8OW89zzHCy56FJ/pZz7O2
8LIz4Ylf9j48RwkvWwKe8LK3XT3zsQjmQ6yfD0nm6kCz6kGu3vK5WkweOpN8
7TV5qtcpp6vf/EAnc/WbSWPz2lXkf9td/ed7erqr/0ynl5AXDyd/nMb5LbTz
eXUr8s+U2PU4ncnLp5O/9sXPxPjdi7z+C/Jf76efF1jFPMEh8md4mqT0J/82
Pv+WutSk1uOvEV7W84SX3Yb/5MV2Djy3ynk7FZ4thJdtA8/sYtcmhedk4WX9
/AO87EB4ktfbfvCEl/U8mRewU+EpdYcFdXpXn5dE+zy0NPka+VysTsVdvV9+
PdXV+2WOzWtfkf8ld/WCefRIVy8YrFuRF98mfxzN+TS0G0JeXZz8cxp2Pc5L
8nJD/poGPx/jd0vy+gjyX+9nNPMCfp6gFfkz/a3vHy48DXmq52VDwI8RXrYB
PEeJ/zYV/t8RXrYpPKWOMo/1PAsLL+t5FhW79gd47hJe1s8/PBC/bAZ4ktfb
5vBkvsNGu3rJRxHMC9ja8GyT9uOG97uH637bq404+mlG7fPQ1eRrPk/1Ok39
4NmVQ8vC9Cfhn0/s9VtunZm8diH5X5a//po++cdQPXbN1uelYorE5sUdyB/9
+Q9ol5O8Oi/5ZwfsTgInFXm5z18H4Gdb/PZ5/VXyX+9nE+YFSjJPsIX8ua/0
t63pf1B4mlXwbiX4NhL8FcLLkud6/633H152Jzzhb0fDM4/wsn7+YKLY/c/z
KjyPCS+bDJ7Ew34JT3jZVvBsLLzsqk/Gbcqz+XUE8wK2GDzle1qW9YV0fr97
gP3uAam3bMs+/6KMl8oxXnrG+nQZ1hty+/3ZAfaJB+T/G7ShDrQq46eyjJ+y
MR4oxXpEMb//O8D++ID8/4OW/B+D+oyvwhmHFGS9IpT1ipJ+f3nAH+X/IzTh
/yM0YfxVknFKKOsZBWPtsr8+4P3wuCvxIyN+/oLfnkd2eLEvPcD++8BdeB9D
B+ZfGL+VYT3kWWADurI/P8D+/MAn6H6NOASIk4+brJekY73E/z+Ww1Hs3w8Q
N+P7y/jvWdRG8PCH9RRf93wliv39Afn/DVX5/w1tGB9mY3xYlvWWYsbHkf3/
Uez/D8j/d6jP/3do6ePG+DGc9ZiSrMeE+vhF8f8BAvL/H5oYHz/ixviyJOs1
4azXFPT3TxT/PyAg/x+iJf8for6/34yPI/ej8XHk/o3ycYQ3/z+iKuPTMoxP
c/vngfWeZwH+/0DU3X8/P9QrF/VxY/yajvWD+UrWD76kzjiSeuaWSvbXrlUt
Xb3sIMZD85WMh1opWU+Yq2Q94RvqnydS/9xXjXT1t2vUC1fHO4X58XlKxkcj
lKw3zFLyvf+eeulvqZceRt3wSjXW1fPOZx13jpLxU6SS9YhpSsZNM6irHhN7
lPrgJeoIR9+uFf1GYGchdnOAuwc/xoBbAT864+d0/N4ED8+rK7yvo8MreI9A
h17o9AW6rUbHhei6C919HFqju4/DKuJ0iLhJ/vwl6yHzqQ9vSX14pGok/U0z
+oNnPJ6sl3xj+uCP1JP3pZ58opL95VPMUPyX8d8I4/kSNzMFPaT+fBj1598q
2R8+33j90NvMQW/Ju2eY9sRD6tTHUK8+Rh2SuBkfPxk/TjNtiKOsx8wxPo5S
3/4t9e3DlBZc4+8fGV/OMv5+g4dZQRyJG/XwfZXsP19j3hBHdDL9iCM6sn7e
ivr5SOrnY58f0404EiczlThK/nFCSf6xhHr0A0rq0b+nfvu8kvrtxeSXJ5Tk
l+NZn/1ZyfrsdurX9yupX19Fvfc5JfXelnzzhJJ8cwPrtz8qWb/dR737XiX1
7luV1GP/oqQO/IiSPO0nJfmoZX33IOugh6mPj6I+PkpJPflJtY3jOdqNpd8K
7FTC7hRw/8IPj+v9mIOfdfG7OTwOwqsDvEuiwxN4j0OHUHQajm6X0NHrKvX6
31NHf0AtQfdw4pCHOAURN1lfXmL8b6nv/576/gNK6uEXUw9/Xkm+PJ58+QTr
z9tZf/5ZyX6AVcbHUernrfkW/yWf3kA+fYL16X3G6yH7B7ayf2Cvknr7I2YL
+km+bY2PI3Ez44mH7DeIYr9BlJK6/JOGo5J8/KA5SxyJm/FxlP0Je820f98/
pjJxlHz9RzOTOBI304g4yn6G/aYzcYS3iSGOks//bEoQR1kfP2FkfXy8j5tJ
8vhfz49ZTBx53ox/3tq7/OIfVcflFwdUP1d/f1NVd/X3m1UWV6/+SKV29ep7
VQ2XR/2jtMurVqkPXf5yR7V3+ct5lc/V899QEa6e/7jq4erfH6oLrv79omrh
8qy7Kq5bNz2pDrj86JZ65fKjKyrI7Q+4piq4/QEXVG1XT39f9XX19DdUB5eH
3VaPXF4WrUq6/Ou6GuXyr5tqvttn8IdawHGzq8u/ozZxHEk73+8xdtphNwDu
B/jhcWvgxxv89H4ngEdTeJWGdwF0OAPvbujgdaqCbmXR0etaDd37EoeE6J6Z
ODQlTh2IWzX5bT71v6W/8XFMIf2Nj2NdwTM1wWsr/phq+FNG/Dd58f+8+G+6
4/8bly+fND6OL0QP4/VAP+Pj2FP0M9XR76nobdqi92iJhylFPBZK3AxHHzez
lfjJev11Qz8fN+Pvh6yCayKI44eCa3oTx73ip4lTXuLYTHgYeKn8wttUJ47w
NmeJI3EzHYhjddHR1COO6G4++vfzY4KJI8+b8c9b4jQ/5ag3PqF+kGBYgy9q
XlJfuf0TcfVPbv/EcRXi9hskY5/DebWvYvHhU04n1MsuVn+xctY+da//3V7t
QhPob5rer1Bj5z1Vyu3HiKOHuP0YN5Tsk0jKPoj7qm6Ha5NXxE2oB9Rsvjoo
7E8179aiZyG/xNX7Hswqe6/Wc/WD29/xSq1w+zseqCC3HyKR/sDth3ipTjyf
myxTzvh6Xd0rVfLnfaxKfLx6eeWcr1Tqdv0K3qwVR8s+kWcqlKPsq4ivD3BM
Sbvi9NuEnVPY9bjT8CMIXO/HAfxcgN8j4FEHXoPhXQIdksL7M3QYjU530G0h
Ou5F1zPo7uOQDN19HOIklDglJ25PJG7Gx3GX9De+fybpb0rSf6vgGR/HMeKP
8XGUfTQ3TEn8l/0u942PYx/ha+rBl7iZReixTPQzPo6yf+alyYp+G0Vv4+OY
RuJhSxKPkhI3E0L8ZD9OfOvjWFDamRTE8aTYseuJ43TBNSuJYzbBtVmI43zx
0/5EHGsJD9ubOBI3O4g4thfeFh3UXdHJ+vt9j+hoNxFHdLc3iGOY6G7zEkfi
ZO/wvDXZHJw5TorMuujNCepI43sqwu1/yaC/dPtfrqgv3H6RrHqk2y9ySyVf
V/vnDs0y6xZh3YIuXT6jDjQ80vKvse/p0zvb9cy+Mp4u5vbTpGdfTox64Paf
ZNEz3f6T+Pr7nh3TFfsikx5W427ewfFeqHxHKi8edy29np3u+Aeby6bQOdz+
nLQ62O3PSahvuv0smXUbt58lta45PMPoTE0z6pINTuS7MT2xznHrUNuTOo1O
mG3le4+LpdMr3D6fFHo5x3RuX0yG2GMi2gXTrwR2qmM3CNys+NEOXO/HLPz0
fo+CxyR45YR3CDrMgPd9dPgFnbxuCh0To+tQdA8Qh9Ho7uPg49T033Ez/vcA
6W8U/QdLf9OD/nUFz6QC74T4Y/fjT7D4b3wcZ4v/7D/KovsJXzMZvjNFD5sf
PbKJfuy/Sqtbin7W60fc7IfoTTxsLuIh+7VSWI7so8pg0xK/bNLOJiCO3A/W
3w/EzWYhjtcE1+KHzit+2rnE8TvhYYcSR3jb/MTxH+FtZxFH4mbPEcekoqMd
QhyJmx3x7+fHjiGOPG+2GHHcGveDT7v0zqcvPE7b7pvLb9Qxt38pt17u9i89
ULKvqBD7ip6p+3OW/XXN5tPvdx/V/G7j62p/tTsLL8Xk0evjPjE9w9LpcLcf
KpeW/VDJ9EW3f6gg+5DS6Uap5o7r8Vte3WN+aJvyTZLpfaM718/XMZdevP1R
3f1js+i5bn9VsF7j9ldl1LPcfqR8+gu3HylIT/5tybXRp3LrF9GlX+ZLkEk3
zm7Ddm3KrlcPHGPr7g5mX1hWPY1jNrevKZcO4riGdg3p9wY7U7G7DlzvR19w
5+LHMvw8iN+94VEPXu/DuxQ6DID3WXTwOll0y4uOXte16P4jcUiA7j8Qh8vE
aQdxi5bfxsdxifQ3Po6yP+yZ8XEEz3g8/LH78Cej+G/D8P8r8d+exv/Owtc2
hO9C0cN6PVaLfnYO+vUQ/ew89ENv6/VeJfGwDYiH7LfLajnqrBI36+NXR9pZ
+ukZYse+Jo7Eza4njnME1+KHj5tdQRwbCA/bkzhy/9pg4nhGeNvBxHGv6GR9
HNHRliOO6G43/vv5semII3GyV4hj3O9H9xt0pKR+FTd1tQoVUujB/yRsM7Nm
qE4bvfPy9q/i6M8qDN0x7mq4Pjr+r329xv5nvJHjXuuKKcP0L4vOpuh364FK
Xv9V8O8DSug2GXoMqpgrh5559sLHtk2IrlBt2aXd9TPrApVTJrq6rpReuqRb
mX57s+vU+967cLRiST1l24IM+Ztm0isW5TgUEhqiD+arniJFx/w6b82rhRcU
KaYXDWn/cci0XPpB2M2CD5qV1JkqXyw3fHIBXWrmd/cieofqnwLjn778NLd+
Mz7p5nHvF9ZzGvxxZnKPYvrUps8LjU1aUJ/kmLxn6983vSmuk3H8nnZP6Xca
O6WxuxjcXPgRBO4j/DiGn6vwezo8UsKrKrxnoIPnnQ8d2qJTMnTbi45e1wzo
PpQ4HEb3dsQhYTyJk4/bQ4mbjcfv1NLfDvt3f/sp/U8KnjkI3ifij02KP0r8
t9P/7b/1/kcKX+vjuE/0sD6O80U/6/UjbvYx+p0QvW04es+UeNgXxIO4WR+/
pBI3y1E/k3Z2BnEkbha7Pm52HnEE175HHPHTHiKOxM1+RxzhbSOIY17hbRcT
R3Sy6KYPiI72PnEkbjYvcUR3+ytxfDPJxcnG8LxR/xSg/on9hX7fZnSAeqYA
dT8B6pcC1PkEqOMJUK/E/sprAeqTAtQjsQ82JkD9EetPLwLUG0VRb+Rxoqgv
8jhR1BOxv/VJlMf9U3CiPgfXCk5USXBlXjGS+drazL9GMv/ak/nU8cynDmV+
dCzzo6OZ7xzBfOc45i/7M385gfnIDsxHRjK/WJv5xUjmC3syXxjJ/N9Q43Fl
Pm8083ljmZ8bx/zcCDVEcEwYuNkEx6QGV/K4A0ry8RHk1weU5NfLyJf3KcmX
NyvJf62S/He3knx2O/nsHiX56Try0/1K8s3Z5JsHlOSPI4zHlXxwGfngASX5
3WbjcSVf202+Zsm/9pifwL0tOOZbcJMIjrmWQHCfue/LTZXDfV8Wqxbue3VD
9XPfq6Nqtvv+XVPxf//v9++cWu++i5dVC/ed/F2tct+5i+qo++5dVZvcd+uU
OuS+Y9fVM/cdMmqP+y7dVAUExzwHFxzTBNx4gmNmgdtIcIzHBcesAxccsx3c
KMEx58AdeCD1tWkt4+p0N4tczRRmVOb8l3NM3hJH1+5xZ+K3Fa+q+j9982HS
nq9Vl5BhkbNO31N/Lfrl+Xv3nqt4HwV1e1DkqZqX+cIXRYMfqTHjC+7d0eql
alK39bPdc2+pg4k7JF+R9j/P/xfBbzZ+dE69OPjy+do8cXU9wTEDwK0uOCYj
uOCYeuC+ru1wzJ/gjhQcMx/cfYJjm4P7SnBsE3APDatV+nx4Bt34q75JNxc8
pbZX3FX60z7p9b1yN1P17fJEBVdNOSz/9rR6buXwb0KnxdcPEhTvcDI0lR5Y
OU7nNS+T6dACp18s755Yp/zus0zRI9LoVqke/1r/zWvV7lVQmfab/zP+KP51
t5M5/1Ydf63Ses+T9Lqu4JjD4N4SHLMFXHBsNnC/FBz7D7jJBceGgPuJ4NgO
4HYSHHsV3NQRo2o/r51bx6SOaDItcEWNSrmm//pvculUkeNyxB2VSB+ZuGDM
hGPBemD7zkcXrkqvh3999HF0g2x6Qqbvg0t/kEWve/X9nrpfZ9LLarWadn9K
Dl2n4yKtg1PrDtsf1Y8+klNf+PHRlZH6hXpdfk6pmSly62eCY1KBm0xw7Ehw
BwmOPQTuRMGxo8FdLDh2NbifCo5tBi44dge44ZELn51uG6qbN518rM3Ie2rd
xZ8/Sbo+RNfp+nGCwu0y6Kd58j3LFVRcl1lb9cb+48F67KIf3xzuXUjHTxy3
10df59e3u+liZz/Ko4f/suCL3xMX1cs7bquwrWhWPbhArkdfxgvR9eLnuhqz
MomeOPCjKkvyhurGgmPKgguOXQ9uOcGxj8F9k8jhWI8Ljr0H7iDBscvAnSQ4
VoPrv0vsrw3Ium5b9k+HU+/dlnrvbL4+NcD+2oDsn27N/uka1Hu3od67kq93
DbDfNiD7qVuwjt2A+u9W1EnX9ftvA+y/DUjdd2P2Vzdlvbap8ufZjxv7nR6F
nSXY7QbOTHD9d539uYFN+On97g2P3vBivy71KS8CkeiwFF0mo9NBdGP/bhT7
dwOyPzvceF3pb3x/xgtR7OcNyLpuDfZrt6a+vJLx/rG/N8rrKvu3GxjPDx2p
N2/l9/tGsd83gH7G6yf1542N15X9v1Hs/w3I+nYr1rfrUo/ewnhdGS9FeV3x
k/3elahPb019eg1fbx7F/uCArF+3Zf06G3UFbalXD2e9LJL16Q7qEzd/v1ZJ
Pd4oVcXN/69V5dz8fxfWoyewHt2f9YLVqo1bL5jOesMaFcetG33H+vM41p9H
KKmDXMG6ygIl6ySr1F23vjGH9ebRrFuOVaFuPWSxGubWQ5aq4RxDOL+CcVUl
xjsPsdMGu6/A2QNuc8ZlBxkvxcfPj/H7U3hUgNclP65jvBWODtXQpTE6tUE3
WS/uYPx4rZZcN225Tn/j+8v6cH/Whyeo1oJvKoIvdanfmcb4J+vBI4wfL8r+
yAXGwu+e8Det4Y+OrP+O9joar2sRORqvKzoarys6mgfoKvWeK8xLdEVH1nd7
KqmnXWPw2+to2qKrrOdGsp5bW0nd6lpTE12lHnSt8fdfYsaFDxivtXTza+dV
cTe/tk7JPOd51crNz01hvWi/+obx3iE3n3dWybzsXjXdzQeeU2PcfOBO1of2
qH2MFwu5+cPTaoGbPzymarv5xzOqlJt/PMR60G7Wg6zK7eYrT6gkbr7yVOzR
n9/EuPgU49Uy2PkIux7H445gXF2H8e44/JyK3+fg4XktZFy+l/HyR+iQAl1C
0akFusl6zmzjdS0k100rrg+Q/sbrKus364zXFXzj8b8S/4zXFR1Zr9mj5gs/
Uxh+ZYW/8brK+ow1JdEV/Uwu9JN5/BMmMbrKesw+sx5dsWO8ruhoFqOrrL8c
ML3RdYr4aUai61HhYfz9IestB8wmdJX1kPOmEbpy/xmvK+NtdZnxdiI3T/FI
yTzGMXXY5c+P1QWXP29QP5IXbGG8nsbl2w9Ve5dv/6HSu3z9kZrp8vVz6gh5
hc8z1rj8/r6SeZo/VVk3P/BAnXTzA9dUK/ISny8knvDf+YTbapGbT/hHzeEY
h/MJyGtmkm+cw0457J4CZx24g8mLmpKvzMHPdPjdAR6p4JWBvMrnWafQ4Qi6
pEEnr5vMkxvjdY0v142/flv6mx/pv1l0NEfRVebp/jCpwZd5uHPG6yrzkhfN
MXQ9IvyM1xX+pgz8N4iOxuu6QPQz8dHvtZuvuW3me31FR5MYXSPEjvkFXcEx
x9G1sehovkRX/DTT0DWl8DBt0RUdTRZ0PSQ6mAfoik4mLrr6vKwN+dLPhxKP
+XRPMv1n4ObwpMWuqKTlnjyclzm5nnkx+q9zTQ6rw+R1Dcm31pz6KuHmdEl1
06W6ebcDj9TmcseHJc6QTFd63Pti/ZR31TjywgXka41qpc+fP2ci/cfNLJM3
ffZGnf0o7sAVNrH+5uJPcxpWiFEJyCv/Jt/77k3aZgMzxtMX028Y0j4igb7E
cRLnu5KX1iVfHI+dM9i9Dk4TcOuQ175HvlkTP7fid0t4rIJXMfLiQeSr49Ah
Mbo8RKcT6IaO5iW6Xpbr5hjX50t/k4T+H4mO5gC6NhJ843WtKv6ZLfhHvm3G
oys6mqbw+1b4m9Pw/0d0NInQ9XfRz05Bv0g52l/RlXzf+Hz/nNixE9GV+Nkb
6JpJdLQ10ZX4Wx//1cLDNkPX/qKjLY2uCUUHuw1duf/sVXQl343Ns+t9GJz2
zvas+vh73S7dGfVQJctfrfuUTEG6aI3aaR/n+lV1IC9vS7585nX2hCP+/kDv
TDVsZFDtRPqzptkuHHmTRc/a+21IvJxxYvP64uTbzVr0rzRmXyY9qtfRZoN/
S6Orr+0Tf9LQ9/WF71aGdS2eQg9hXsDPE0x8vvjnrzql18PiPBnxYntGPYTj
BM4vYF7BzzP8jh1vdzQ4TcB9wLzENuYL5uFnB/zeDQ/PqzLzGkeZbwhDB6/L
MXSqg253REfjdT0i101drtPf+P4tREfzGbpuF3x7GvwZ4p/tiH/FREebGl3h
Zz0/dLSe/zPR0Y5E1xGin52EfuhoR6JrLtHRLkLXmmLHRqNrY8GxY9GV+R57
B12Jv/XxR0cLL31MdLTd0RUdbAl0RSd7Al1jmBc5wnxFjbEjVv9atZDOufhc
ht1fx9ODMhwofWRuIf2mf9IV1U/9qdozr1Kd+Y4Gp7ZHH5hYQNfr0+dF0iIZ
9aC0Pa5lmVpQjx7XcWKZhan0AuZlljJf8njbusDEyLx6Qb1MCdfFy6GL9+tZ
IE94fp2zW89nNfZ/4Odb9AjmW75Z17rX2u45dYuW9ruG83PHHsdxnvka7edr
vJ2i2J0PjsfNyLzSCOZ7xuBnf/xuDI/68EqaRualkjNf9AgdvC6F0Kkmuh0U
Hc1LdM0u1+2HXE8+wPU3X9EfHW07dK0j+LYe+IPEP+t1XSI6Wuah9FzhZ5/A
D/62EPzR0UaiK/pZrx/62pboio7Wz7cVEzs2N7qio12ErkNFR5sYXdHRjkJX
7g/rdU0iOtrk6DpQdLAJRBeFTjY3ukYyr1WL+aahp/okq7ExXK85k+KPwVnS
6HoHbo+aGKe0rrF2bv1c3z1WQ5gXW8R81crTm+sdCiulcydrdkp3yKm/b5zg
3Nb3w/XW4MDDC3M+iJ1X8/Nskzp8dTD/zBK6wPTwoO9OFdJlOy2q+XGyML1p
6uZt5yvki52X+5r5siadFu2+mKC4rpcjyZnfbofo2hwbcT6Ceb0nzLd5O+Ww
63EiwW3EvKCfJ9yFn5PxOwc8lsKL+T5Vmvm+muhQF102otNgdKshOtoJ6LpK
rlt/nf6mPv0Xio7W6xos+NbrukH8s17XW6Kj9brmF372O/itF/62NPyZd7QJ
0LWO6Gc/Rr8GcrSc18xbWj9fSnzsZnSdKDi2MLpuEB2tn29FR7sJXeFh86Ir
87W2Ibpyf9kG6IpOdiW6/j/AzjDh
     "], {{{
        EdgeForm[], 
        Directive[
         AbsoluteThickness[1.6], 
         FaceForm[
          Opacity[0.3]], 
         Opacity[0.3], 
         RGBColor[0, 1, 0], 
         Thickness[0.004]], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
PNvBP47yV3R+Nw5tysl2D/5FwykvOy/oriPJJ4+boMszovxXe98MeuBIjj95
HLncASMZD5Pj7TKS5chPrnLiSLZT+8jp9g181XDK69D9Al9d+Cddnjfha9ts
1x4j+ftqn7XkvV6efa0lG0fcfIGXCvqnWC/WDzqvNSnoPYGfiXRfDKU8irzp
hcLPtymfcg/3jXWy7uPIBb4P/E7JB/5dfOnIt98u/rslf3gu6OdDKc86vMly
vxxKeZfyybW+Cvxym/Ktl4r/YpvysBeL/0ph6b4eSnm69K8W/nfVT67RRP/e
a1O+QQ7yv6Fsl/box7dDed+uP2QvZDRkM2QwwuLIL8gz3DuTv5DDuH8WJrMh
qyGTmar40pF3vFn1qdf9JjkNeQG5AXmNu093/u763YG+Ue35T5tx2kB+M1x1
iP9uKNMeW/ICZZAnnVNl4L9Z9b1T/X+/fh9ypjbwB23Km8gp6CPQSyCv+Cho
r5fynZNL/kg+SV5EHvRp8T9pU/5DzjTUy3zSv1flf1jj/UHxP676vqryyD3J
n75oU75J3nRqk3IL8hdyGPILvC9qrpgzZDtkRpc2KeP5vPJ/Vu0jJyA/JUcl
L+gX74e5/GXxv6n6laVM8hHyDPnIV7+r/Mbm2/8zt74rvjjynG9r/L4vPKi6
j6y5TC7k/to9NvmQcYbFG+9+/X5dzbnhGpsjau6PVr/N0fXskbONXnPG790U
7lX5o1dd5rK5NHXN36lqPpI9Tl551S0sjryOfJGccaJKA5OrkV+RY11R8hhY
PPmYsDhjZWzI1ci/yMHI18gbyW/I08jjhMWdXr8VWSKZ5ck1t8jhxJEzXtzk
3Dc2x9WzO3bxpSOP81yQT45Wz8dY9awcX2sTOR35JjnnBU22Y/xqs/aTO5J3
jltzSnj8oZyL5pZ3TTol3kW9cwqLu8m5Kfi3dPl+7D15iSbDdJq8q3pnFhYn
3Vpt6j95/73Ne0ibd8N0xNz9uyMWFreGZ7TJtmiTdl5Sc368GkPjOV61/bR6
tsYt/oTVH+Uozz10v9YoY0Sue36T8lLPm+eOfHCkxmuM4pObkk+TU1/YpNxv
inoGPS9zFBZ/U5PhOaqt2jxXPV9zVvnkqeSt5InkfcIz1W/pN52k1lZ1a8P0
FUfuOkoeWHPLs+MZmqb409d6PGnN3ylqfZ2o1lrPhmfk5zXfp6z1fNZqDzkw
+Sa5JHkxuTH55KRV9wX/ZyzMpRNrLR294saqNOTE49Sc1qdxauxOqrVyzOL/
qMZz4npeJqnnq6v1flDrwYT17J1Za/V01b4ZazzITSerMTSek1XbL6y2zFD8
mas/xs4YTlbP59g1F06ovdK8Nr/dsyzepOyTzPOhJmWgwuJ2CPqvJuXv5Onk
xeTHwvNUX/SJXHmqisOfu7B46/vPa25cVs/mfFUeOT35Mzk1/QZ6DuTV6LT1
vgOTJ5Mfk587z0xbaa+qteyXlX/+Km/Byk+vwvvSNFXXlbU3K2vJGquZq61z
11phzZOPfsPClf/XQ6nfQM/h7sBLDKX8mhz73iZ5C9VcsxY7Z5Ffk2M7by1U
+ZVzV5PlTld54Bkrrbltji9a5S9R+aervlirze1lqg/k6vc12Q7y9qWqPTNV
266rub5U8Zes8fvNUMr7yf3vb7Ic+DdVHv0B75vk6+Tt9BjoA9ALeKBJSt9g
xcKzVFtuqGdtxeLTS3gw4pav/Mr5c5NhcTfVWjNblW2tsZbQVVip5o45pBz6
DitXeSsXXqnm7OxVl7XHGrdSlbHq/5nTsHtc97fucd3n0oOgLzBn8cxdc5Me
xi8jbsOh1MeYq9L+MFfpDfwi4tYZSv0BPGnWrPKM3Ro1d83FtWs8vcfTV1ir
8q9b+BfFu7Pmxu+G8rxOf4G+wppV/hr1e9BjmKeX6fDXKbxetWeeattdNXc3
qPK8B9CHmKHmsrOCM+wiNV8Xq/k9b5UtLG79Go+NKj99lvl7qf9BH2TbodRX
obfyzybj8TcfSv0Q4+h9ZJMaT7owG9dcNJc3Kb44+i10Z7auuWLObDWUcfRq
nmpS/4P+xh5Bn2syLb50TzYZj0/P4/km27JpzW1znO7IzjWWa1fdG9az41nR
Dm3crNqzWeFNq7/0Reib7BT06cC7DKV+ijKfbXIc6I9sV+OxUI3ND3PXump9
3b7y71xt2q3yL1K8H+bqbsXftfq7ZY33tjUeC9bYeBY9e9tV/dZx67e27Vhz
01zasdqr3c80OVa71lw0J3eq/u1YfLpadOLp9tDZEha3bKR5Nfj7DaX+Ej2m
l5rUv4HFv9ikLs6eNVfNxb2GUh9H3AtN/k7wXvV7LV6/3aM11w8aSv0jekiv
NFkPfagDqr45yU3IE7SxSd6+Ndc2qbz7/5/f8oDKL+7lJtu6d81tc1y7tHmf
at8+hfeu/uxfZR5U+enS0OGni0AnYaVe6vvQ++k1yZNm+QBvNKk7dWDNJc+K
cTSe9OK8ytG1YWNA94bOjbC4VSPdu01SmF4Oe4VDhrJMeln/bvJZ9czeU3vV
gcU/pMaP/YD2aefbTYbF0RWiQ6Sd2ktPaKhJWREdbLIbMiNhcTe4Z4wGX9el
/IccaNEm9evpA20ZuG2TwvSExojgoqU/Qo9knCbtI2DxrzepG8Omga4KHZYd
exlHb2bsJnV36OzT1RmlwzOcNhN0o+hIbdBLfR16OzEtRvGk+V3gz5rUhWLT
QTeHDo94fHpXxEp40qwd+OMm7SmUp9wvm2yrNtOFoQNDd4aNBl0WOi1bdSl/
JoeetEnZ8LklKyYjPqDL+0P3iDM0KSt/vmTjZOTC4g6LdDO0ORb6bxxGb7Ms
ZW4e/NHarFsbttP+Nsfab0A3i06WeHx6PmM1af9Bv2Yb86fNsDi6NXRsxIuj
hzNmk303BnSh6EAZe7/BZsH/X5MUplc1epO6P2xC6ALRAaLPRf51SrT3l23q
Rpxasno6EOwzyP83Cf5wmxSmF/CzJsPSkP3TAVC2OtaMdF83aS9CP2q5wO83
qds0ysZmKHWc6PawWaHLQ8cHT5plIv07TeZVBl0qOlXKEUfvarwmx9l4k/NP
0mTb9WHDiO+1SWF6Hz+1nnSlHxj4x03aA8Hi3zL+vdRfo8c2WpNhNjp01+i0
CYuT7psm8ypjlO5hP9ut/fS4xrVGdqkPQS9i4ibDJ9bdszto9jv059aJdN81
SWF6dRM1GZaGLhQdO3mVoVwL0h9KH4VeyqxN6jvD4mdqMyyObgqdFfPW/KUH
MnOT9h/0jXaJ+J+0SWF6SFM1GZaG7hAdon26vK93bz9dk/YxsPjJ2ww/VHf7
7vTpJrFZomtER+nSitvG79KmbhQbIbpSdKS26zKO3tQUTfJg8T9u89llE0U3
hM7INqX/RA9q8ibtc8hn9wo8aaTfr8v7e/f40zfJu79kCWQK7CbsT58Np37+
ApF+00Hip9o8JzmjOJvc3+TZyxnO2e3uOt85IzobOtM9W/erz9SdF3sg8oo9
tKPNsDi6LGQY2qlN5MrTRvrdutRvoecydZNhNjx0W+i4CIuTbuI2y1Umucg0
kX6HLvW56HVNaX3tUh+OXtz4TequsQGiO0aHbKcu4+i1/bxJfUn6R0eZT21S
mF7SbE2GpaFLRMfopC7l9+T4czVpbwWLn6fNsDi6E2T8dCvYQJG1kLk8WXEH
KadNXSk2UXSZ6Ewd0mUcPaqZmuTB4qdrc61m80UWQ8ajHOXR45ixSfss8vwT
In7uNtc56x25/9xN8qShi0Dmb26ZY/aJMducO2zMyILIgITFmVdTtjnWbNLo
stFpExbndxivzbZpo31lqjbtV+gjHBd4zjbD4uiu0VHQTm2ihzBntO+YLvXx
6OXN3mSYjQPdLzpjwuKkm73NcpVJ72GOJn9rv++o37lNez7zwbz4qMmwOLqT
dCYPqzV5teB/0aT9Fv29K8mB29QlYnNGF4lOkXh8en4LN2nfRZ/qcnLiNnnK
oDtFp+rqLvXz6Okt0mRZyrwg4hdvU3eJDR7dETpMZ3QZR69pnibTSU+v6VdN
6oqw4aMLQkfkrC71qehVzdtkWfIrZ4E226aNdL/ofGmnOHpgC0X6i7rUD6En
Mn+Tsm42Y2TxZN7sjdgnvRDp9m1TX4k8n1yf/pIwGzSyeTJ+YXHS0WFin0Q+
/WDgLdqkMLn1b5uURbO5Idsmk9YWNn10u+isjFdx2rlk5L+kS/0XejALNhlm
U0f3hU6MsDjplm7Tns/4GKeFAr9Z8n1yfvpQeNLQDaOTRheNTSBdMDppf+pS
nk+uv2ykv6NL/UR6iks1aW+EL93GUf79XfaJnH25JnnSkJ3TCdBXfOk2JUPo
8jelB/SLJu9p3dfSW1qySV1RNpF0P2eou1x3unSh6DSxj3Tede5dpc2wOLpR
dKCci52P6Vkt1qSuARsougV0DoTF3UPO2iaF6SUs06T9I324cyJ+kTbtNc1n
83qFNnnS0KWjMzdGjeF5wV+0TQrT85uvybzKoDtLZ/XaLvtIL/bXTfYVFr9S
m2PNRpJuFx0zYXF+h98F/64u5e/k8Es3GWYTRvZOJi8sTrr12+yHNtPz+2WT
79reUbyb3Nvk3PcM0OMjw6SLwqaSLgmdEraFbL7YXrEhfKJL/Qp6Fqs0yZPm
mYjfs03bQjZdbLnYGD7XpX0gO8E1mrTvgsXv3aauEpsxukh0kv7apX4UPSn6
g6Ps1TyvEb9Vm2nleTzwjm3G49PjWb5J+zf5lbNNmzxl0B2hw6Od2stucvUm
26rN/4r43du0V9M//dw58Mpd6rfTc5+gyXOv8y89+580aQ+NL92nTa6r1ld6
7RM2yZOGLjwdee813m/YhQQZtVc5o9Odo6NmrfN8eE5+FfU/1aX+DT2cVZts
mzbS5aLjwp4OX7pd2+yH/rDzXK1JnjR0Y3aosTFGdMfooPnd/f70ftaN9I92
qQ9GL4w+pXE23vTKVm5St4FNK9k3GfjbXeob0Ttav0meNB8EPr5N2T6bWrJ3
MvyPupTfk+Nv3KSuJyz+xDbXKja6dJXoJL3S5ZykJ7VOk/ai7E9fCrx/m2nl
sc79oc14fHaqazU5l+VXzoFt8pTBNoCNgHZqL72NjZpsqza/F/jYNu2D9U8/
j2xzbNhI0uXbsOayOc1WkQ3sY13q69HbW6nJMBtKun10+ITFSbd9m3uDPYPu
ER0k+479x+XCmk2G7UlsX9nMvtOl/hs9uA2abJs20uWi88XeGV+6o9vsh/7Q
s9iwSZ40dPno0OmLPvndfx/pX+5SH+q1mg/0bOk/0IPYpEmeNHSvtJeuE5tm
ujF0jr7qUp+JXtPmTdpL04/5LPCpbYbF0c2gsyFeHD2aTZssS5lfBD69Tftr
5Sn3zDZ1qdic0kWiE0V3kI0u3UM6hN91qb9Ej2mrJvMqgy4VHSt5lfFNpDu7
TQrT09qiyXrVT49rsybtb5Wn3HPbDIuja0VHaqif+of0ELdp0p6dvhVh4AVt
hsXRraJj1fVTP5Ke5LZN2vvKr5yL2rQfxpfuErL0fuoj0kv8fZN91ecR72Bt
1qMOel5bN5mWjTLdNDpqwuKUc1mb+eSnd7ldk3Wpk+4OnczR+6kfSU9y+ybb
po10Zej0sLfGl+6qNt+l2EB7t/JOxf6aftSYzvht6j6xeaZ7RAdJPD49qh2a
5EkztnfYNnnKoOtJx0o8Pj2qHd3n9FM/ip7UToHH76d+Ej2lXZrksammK0WH
SlicfNeT3/ZT/4oe1s5Nhtlo02WiUyUsTrob2/RHoHz13Bx4wn7qT9Gj2tX4
dGn/xg6OPdtE/RwT75m7NXmPx5/JIl3e58nLpwHdKjpW4vHd677a5FjKr5zb
2+Qp47UmbT1/3aW9p7A4tr6/7aUtr/thZatDO2+N/Mv1Mr187kOExb3epM2o
ez9lCItTFize/aDf2m9Od5bO7OJd+ktxr/pGk/essHhXjcLi3mz+vy3xir28
e2E7tlSX/lPcebr/xJNmiS7vU7autuqb+1z3NuLkVcavCy9Z/XEPqzzlxt+o
cthjLlPlLd2lPSa7TPaT0sojLG6VXvKlc9+0TOVnv+l+Ck8a4R9sPdWhf+5r
l+3SH417YvfD9ABg8X2/f5f2puxO2aet3kss3vu6sDh3Z2w/3X+x/xR+v9oP
L1ftU7Y6lKXMHart+uO+2rmCP5zfdnm+WL5L+1J2puxP8aQRFrdWL/nSOd/I
Jw09CfoReNJ4l2RL6b2SPaXwRzXefj+/9ZvVX/wVqn8rdum/x72u+1xhd71s
a9lqOjex52Sv6fyEJ418llG2nOv2kifNSl3GyftJ9U/+lav9u1Vf9M/98vq9
tO9dtcvz2s419saPPsgqXfr7cU/tftq9NSze/bWwOLanbIWVozxhcdqmPdrl
vGetsGbQvaQzKa02eNdesdrPnni1Sr96l/6C3PG633YvCYt3Pyksjq0t29g1
urSPFRa3US+xePeJe1ZbjI37eDxp3NWuWu1nn7tmjcdaXfoncu/pvnOfGit9
c9/sXhlfutHr/DsqTT/LxJPG2mcNXK36p6/67F6WP6At6n5WWBzbPL5O3Iey
R2Y/7H70d13aA7MLZs8sHyxe/v2rr/ruvnbdLv0HuRd3H75GlbdOjQce2Yey
frA1Vqa7VTbH63fpj8idPXnJpl36e3Kv7z7fPfwofpf38e5l2VfLqwxhe4D+
k4esXXzp3AerWxu0k/xFWcpkW8uWe4Mu7bmFxennKPvy6i/e1r2862bzvWHx
hcWRK4zyJ9WlfOHQGiv9JX/Ak4ZtMVvs3/fSHnvjLu/T2fZqg7rJH9R1SMW5
/ycPkIYdMPmAvMoYJSuo9o/iV3rlSqMudZIbGU/jSn6kndpE5kH+gScNW2y+
KNz3sndm9+z+mG+KHXopa2G7vEWX/rbIZchj8KTZrEt5z1HVN3WTB5EfiJNX
GRsX3rz6v1Mvy1Puj5q0W2O/5p3R++aWXdpvs+Meo8208giL27mXfOkma/Je
kf03e2/3i3jSCP9gG66t+ku+Rk5xXO3J9jNniU17+Sx4JnbtpX361l3elxub
3Xpp+03+JR6fHTt/CHjSGEf35XjKMJbG1H7LP9pOtZ/uXli8/dI9PH8L7M/d
x2ubNipbHdLKw3adrfrvu7RXFxa3Ry+xePfTwuKUpUx9H/V79XMMtq76tqv+
nVx9Vd8utT/z17Zb7cfbd+nvgd8H9vjq4e9hh6pPWrIjPGl2KD6/EO5r9+pl
fuW4DxcWh/eD7whljupLP30B7NPLu1W2/+7ZT689e/zaz+G9ar8WHnUX36Yv
AXmVsWOX8hYUxpPGvS1/AspWx/aFd6r2nVlt1R/yMfcQZ9WebL8b5butl7b3
bOV37tJeXljcfr3E4qduMiyOLGj/2v+VsV/t5+RD7PXxpDmn2q6t7o/da5xb
e/KEtf/BB9X+LSwNW36+AHas8nap/u/apX8APGkO6CUWP02Tv53f0O/uvIMn
DVnIwdU//gp2q/7YW/nDO6z2m4N66T9g9y7lLedX342F+xfx+PwM8I9wYOVf
v+5z8JRBlsMHAfkL/wnC4vjaI7vjC4Pvhd2qPdqmjbtW+j2qPxdV3/SV/NNe
rIwja/88uLB4+5W2aJO2aaO1YL/aY+wne3bp70Hd2iB8SC9lYUdV//ij2Kv6
f2mNhfKOrvL4Ezy29ttDC4tXvrA4tt18NexV5SlbHXt36b8BTxrhw3opG+TT
Qfv4MyMvnK5JCuNJIyyNtpN3yqsM5U5f+70zwom1v+rbJZVHecvVekkH4HXn
jy79pTlLOFOwhb+hl7IJNvHk2NfUHmp/EhbH1p3tOjkPeyF2Q1NW/+D9qj3K
/kMveSfV/qiMU2v/3b9L+3dlKVN7+BcgD6JfcGCX9urkWeRbeNJoK/n7kb3M
rxzyrAMqP3t68iQ8aYTFXV1jZexPrv2cf8Uza38+qrB4+xvfB0f3UvbGll97
xPGLwF4eDz6w2ndDtUVfyPvJ28TJO03tt/xHnlv7qTBdC7b+fAccUv1lp09+
py3apC51HttL/wIHdymfRmF5lSEsjbzKOKbqU6/9/eZqq/Loc+xf7Tuoxs9e
y5/mhbX/ntJL/x1HdilfO7RL/wP8EEzfZv38ExxW7ZH3uF7ypDms+PwV0Ac5
vpf5lTNLk2FxeD/4OlCmvpBf88VxYi9l9XxykHvfXnuy/W7XwpfWeUdYGr5E
+PKQVxmHdymfRWE8aegB8B+ibHUIn9RLXyHk8WzdTu/Sto18k69OsmO+QPg2
If/lz4RfE/JgvLtqz7afGjtjiCeNcRQnrzIOr/xHVfvuqbZqG3n/ab30h3J0
l/LKPar8K+t8Ye/l7/Pa2p9PLSze/icsji8WvlWUozxhccfV7+13d/7CUydZ
KV8k5Kb8kQiLO7LwMTUf6EHcX3u8/YkvmDN6Kbu9sfZv/Btqf8aT5tgu5bd4
yuDLhS8Z8fjC4shr+XNRljKP79J/Cz8u/Fs8UGOjLzdV/8QdV+Nlr+a/85ba
j4XpDsirjDOLL5398Kxelq8e8nphcWTjfMWQP/MXIyzu4eqLttL/sNfyJ3pH
7WdnFxZvPxMWxzaTb5sTu/RvIyzu2Cr/hBqfc3rJl448nt4Afx78etAfeOSH
trap/3B88U+q9tuL+Vu9p/ZfZSlTXmWcW3zp7HfC4tju8y1yXz375ir5/cld
+hvBk0b4vF7qRt1b/eEf5ZRqL1+wdGF+sF09pfjSyoP399qD7U+PVV+NBf2P
U7u0d5VXGRf0Eosn77b/8T/7UO2P2qJN2kk+Kq08ZEFsZcmF2MsKizu58GmV
/h+VV9/ovxxS7bu/9m9rgzXCukGf6MKqXzvsd9YK/g74PbBmCF/US9k6215y
dva9wuJOLXxG9eep6pu+0g+yd/Lf+0jtr8p6stYk8vuLiy+d/fLMLu192f2y
7xW+pJeybLa7wuKkI88k57bG4UmjLGXKq4zTi39W1aev+qxv+kiuyj8KPynk
q9pxVe3R2sPXMF0TvkLYBj9XdSufPor9k7/fJ2t/vKyX9sNndyn/FRZHlsym
WLw4ZSlTWco8p/pzeZWnXPsx3xRX9FK2zJaZb6FreqkbwLcPeTP7Zjxp5FUG
X0R8W8irjHO71KdAYTxpzqn6tU0bz67yzqv2v1h90Vb6POd36Y+IXyL+heiZ
vVR7tv1TWByeNPQ5+Eviv4j+x1W9zK+c+as9+BdU++yl/Ck/X/utvurzhcFf
oMl61PF0nS+kvTrilmjT99LVlV859mf55MeT5pUaC32nf0TPgn8kY2lMtU0b
tfWZ6i/+RdVevkfp3vA1wlcTvanXa4+3//EV9cde6mK8Uvs3/su1P+NJc3GX
+ih4yuALiq8p8fjC4uh18E+lLGVe1uUZl98n/rvwruulryr6f8Li5KMvYu/m
H++12t+F6RrJq4zriy+d/dDZWfnqoe9Df4a/KWdpZ2rPgmfCmdR5y15rTN6s
/fWmXvqvuqJL/Z+3q6/6Qp9MPL6xM4Y3Vn7l2O/wlEEXiQ8s+kf8ZwmL4xuY
7hTfLf+t8VLH5TWel1X6K6v971Zf9Jc+lf1bGe/Ufnxz4VF7fpO/td/c/KUP
fFWX/snUpc5beonF/7rJsDi6IT/4KtNHfaPvdU2X/oT4FeL/Bk+aq2t8+Ban
W4cnjb1a3Ae1P99aWLz98LZelqdc+t703D6pPdF+RY+E/x1+eOiTSCuP8IfV
H/xrq/3nVP5Paj/+uPqmr/Tl8NTBdw5fSn/s0p+SsLg7eonFL9akXg5/Svwq
0c+5pvB11d7Pqu36S1/Qfsff5Be1n95ZWLz9TNnqUJYy8aThO4jvobt66X/o
+i7t6ej/8FfEHxH9eDxphL+s9uPfUO2VTxplKfPL6ou+0cew9/If/03tt1fX
7+e39pvfXXzp7H83dum/iB8j/rmE7+mlLSufRvY//ue/r/0TTxr5lmjSF5I2
aQt9N/aC4uRVxr2VXzn2M2FxfIvxzaQc/sNuqfK0TRtHtSX4N3fpv0laef7U
Syx+ySbD4tjSEiDdUuUJi7u+2nNTjfeRtR7Qg/SO+r/qi/ro99E7+r72cPvb
rcEjWOGnjL+x+3uJxS/VZFgc291RPsy69KcmLO7mwrdVe5WtDmUpE08afaPf
Rg+LP3t7sP3s9i79tfHbxv8anjTC4h7oJV86+lWXVX46X/ZHPGmcFZwZLqn+
0alz/qArwUcZ3xF8RrjvdOfrXtj7q/2Y/316Y/ZrvvHpJvJNx7cVvTr+5vh7
o193d2Hx9PH4iruzS19v9DP5hnukl2nl+Wsvvw9g37RfKlsd9h3r4x8L0xu0
nzzUS39wyqT/pi518p1FH5EvvL/0UldulE+8LttwT6W/pzDehrVfq58eo/1U
WJs2atOXnbZq872R7zdN+lZ7pZe6V3yfCYv7Z5f6WeaC71nMX7//P7r0t0bf
iT6UsDi+09iDyyc/v238KcpLd1FY3MtVnnLNN+3QHm3TRnY0vsdgzbReCYvj
W43vyke69F8pvG09P76vMW89H8bSmNK942PvyS79q/Gzxh+b8ZOGHz6/oblA
11VY3G1VP71AazbfnA916euS/iA/d/xx/qVL/SzfkqBLyLcmX53i8YXFPdCl
v0N6cvTjlKVM+nH066RVJl05Pj59y4Hurvr4RvxrpceThnxkgmqT/MLiyEr4
UHy9l/6Anu1Sf+nhqn+KkqcIaxNfofSFtV0f7KH2I3NttJqD5jsK88toTg7q
2fS80lel5yjOWBvz2wvfVc+vb2fQ9ZVXGcLinPGc564qTE958drftYfOpvWd
3ir/ovzN0V/le+5vvQyLExZ3X5f6vSjsWfZMP1jPu+fe+dZcoetqLpgTL/Vy
fpgn9PWeqvnNHx99Pt/a4PvA/OZbkF4i/338+O1c+4c0/CbYH/j6e66XupF8
/v29yzh+APnzw4PF0998vvIrx37hWeK/UF3qtHf6/ge7M3so3gu9rFsbni2+
dPYDvKnrmfR84kmjbm2gT8gforZpo/DfuvSFyL7tb8WXjr4hX3GT9dOXHP0k
+4T3tTtqv8CTZsqgezf57QW6Uny38U00ZfH5J7pfff30R8cvHX9zvuVAF0pY
nLC4cbrUj/LtCbqEvnXhGxS9Lr9v8WWX+mJd7V32H/rAU/XTPxg/YQ+0WY7y
6GHRv5qknl3PJv1mZxvfe6HD7IyDJ82j9Xxba/7VS908vnFnrbXRekY/2HPm
eeOHiz81+q3S8A9JH9e3VugK89W1UO1v4hau991/Vvpnar31bQm60MpSprVM
3GL1fJmr5qy5aY7SN+Wv0tptDX+y8L9qPs9Uc9t8p7/9WpWnXPvHv6s92uV5
ZWfg+zHeQ5zfn+7S36W268OrvcTi6RObL/wV81tsDvGVaY22NtMHN7Z0wfGk
ebTG11ga06dr/P0OzoPyKoN+Jv3Nxwrzw0lfU13P9DIs7sVa/+0DziPT1LNl
vvNn4rf7WbVJeX+v5/eJev6UNVk9A+a7vumj385vaC6b02N3qf9nbIyR9ZOv
28d6uT5Zp+jfP97L76PQKWV/8N9e+uOjs0mfU1gcXVi+9ujL8mfI3x19Wumk
4cePjife81369qPPzzffO730pcd+QVgc/Vr6ub41wnZAer79xOOrS50vdulf
j5+9/doMv9XLurVBWJx0azdZtzZoJ31e663vlaxQ67Ew2wpt1eZPu/xeiO+G
+B6Nb5XQPRcW92GX38+h17pJk9/K+a6XvmR9M+eT4guLk3f1+k3Mt1cL71bP
l7TK9C0d+u5vV/u0037A9+cbXfrWpC/s9/Y9lY1rPn1aWLzf//0u/SvSh964
+s8/orE0pvTWfS/FOcnzaqyNuX1z2do/4aXqPKZubaC/TD/77cL8ktJn9q0X
usp8i65X81Xc+vV8fFxYvPnL9+hHvdS15oOUr9NPelmWMt/qMk5ZynS24J93
nTo/SIsv3QZN8uiaGx++TbVXHcLi2Anw186/IHsBdS9aY6o/9L75Y9UWbRLm
+5dvVfrtvo3zZi/nmjknLM451PmTvjX/lPxPsvd5o5fj/XzNN2FxeEvX+VX+
39T5XF5rsPVymVqPxb1Q55/Xq33ayf6Grzg+4/hFZk+EwvxS8j/q2WXLICzu
3XqePdfOb3PU2mctXKLOy+bDTrX+CpsjP3wLytw2xz/uUr/a2u37O9vV+eKb
XvrP/LCeh3e79CdLL36jmo/8x/Ijy/8nOwTf87HP29+FxeFJI68y+N5kn/B1
1ade+8F/u/Q/Sy99wybrVT8/np4hPGn4rmUPIq8y8KR5oerfus4/X/Wyfe/X
8/JBtZ+/W/YHeNIIixu3xtLayEe4s64zrzunRWr9lOaBOi9bW62xfA+ztxKP
b+21Bt9U+dnAuZ/iG98Z0NmP/ZmwuAfrfPh0zefnav+ydzszm9vm+Jd1vnDW
cOZwznbGdhZ3Jn+wypuk1nd6/vwP8x9M3/+twu/U88W38Ge95EljbMXxO2yM
6bv73pfvftG3d9ZZt+a8+d92+X2wz7vU59dW32faq55H88r3xT6r+SWtPMpS
pnKUt189X59WferdrMn85qe5as5+38v1+9PiC4tjO+AbUJ9VfcLi1qm01nf2
F2vWXFcWe6Ub6jzBJtD9JSXhtWrMPZ/C4nyLzDen2DX5fpVzsv35vZqv/CYf
W+dn/M3r/Gpsl645az4vU2ubtY+9B1/OX/QyrzKEf1PPyEb1vMH8PntmVq65
7Hlir/NR7Qf827KPsVfYM/x2fkPPjmcYTxpt0wdlKfPz+v30TR+n6Ke/Tmdj
Z+RZujwPOxfv67zWJV+6fZr8lsaXdf49pOanuG/q/Oss4ft7h9X+/nWX34vz
PbezAvcLi9+yyXzy+04H+ws8aYTF8Y38bZe+h9ljslvg7/i0Oj/zXexMLSzO
twDZNvJdzHeysDh+4K23KMxOk32mb811XbbtwBof36f7qub3V4V9t469yXo1
940d+xtt00bK3ewtvu/SvzM/z/w9sxP1/UHrvPV90OX3R+STnh0Jf838NrMn
kVaeH3xFj3rvMCb9fP9Qj/r4jWZPoq7RuwyL0xd9cm5yXkLhg+o8x67L7+N3
cv4THq7xPbT6o33C4kav/ugXexY8fdBWbfatRLZHfG/zJd2r38fv5HzqnMpf
da8wCvNjzR+1sDRsW/imZjfme4z2dfs5uxf+qvGkwZNGXmXgtf38vdmHWSu9
k/mt/GY/7fJ7euw+2HsIs/Xga5cv3XmKLx37j5/0078xP8e3RZopu/yeXb/m
q3Zpw4l1vtiqxsbvxf53zC79dWsTex4UNhe1cdBPf+r8qvNvO26XWDz7GmFx
bHn4Wree+F7lmbWeb19jqf/su/DYcilLmaPmyUj+Fn4TvB1qzbce9as/d9Tz
pm3azNaIj3F90Sf2R35vFMaTpq3fo6v+Ob+ZA6fW+dFcgMXbb6bvp7/hmYIe
4P6l5rt5zx5LWBxf5+xL2RHx78s/71U1XvDoNT6+xck2jy9lvnxH66c/X2Fx
eDvXGms93bXG1viwN5ywS3/CY/TTfgiF+RnmP1g++c+t9f1H/fQHzC/wdXW+
8P3OC+s8wW4RFu+8ISxOWcrUtvG77Is+CYvTbvZO6tYmtlF8CbOH4k9YWBw7
uz1rTXceQ+FLa/0XloYvYr6VJ+rSv/JY/bSHQmE8afaouo3VxfV86J9+mv/S
KoPtFd/Mvl3KFk/fr6jxVsaY1X7nSWnccXs/2rvGVv/5ZJYXXzrnAfZb0ihb
HWMUHrt+D+ukNZAdMvtjdlr8L19Vzy+7vEPrGbff8O08SZe2WXw8szP0PdW2
1m88aX7cT3uw/WpsjIX7ePH4/ETzz95W/hvq/HNgjY3+s08UFjdujRf7Od9D
8Kx6ZvuFR2q93qnWbs8i+8p9a63RF30at8rTdn0Yq/o7Tv1+zjq+L3ttnW+E
2SJqqzYLi5PO+cjYGCO+5fmO56t8si5t1W6s/vIHP36Nx/iF8aQ5pMZK+ew3
p+jS//wE/bRf69X431L7Id/14/XTVz17SmFx7M3YwxlLvwn+9cXXJmFx2nZw
lSH9hJWfv3v2aurWBmFx2iFO3/TR2mKN4UudPeFMtd7wc/63iJujn/7Q+T9/
ss21zvdUH6r1jO/vGSLuT236AJ+++NJZ3/CkmazuE/Gkcf/Id7h4fGFx7D6P
rT3Z+nlkjZ22sk/lW3/ifvref6D6I81ENb6jV/77a3/n23+aLn3vsy/FU4dv
W/DdP12X/vsn8Zw3SWE8afh+n7/LvhsDYXGz+92bPNs547kLdSdqrGbtp293
9kqz1vgZx4ObbKf28v/PHhGf/3d+4OXxrY05ory/tPmtDW3Rxnva/LbAdP38
/gaeNMbCmEwadM8m8ypj2sD7NxmPL68yft7l/myf3r3JsDht0SZnE9/HvafO
U8pRnu+A8M/v28BsTYXFOef6Xsk0dd71LZPZgv9Qm98ymab4wuLYwZ5Ze7T9
SFnn1BpvPZRWme6P2R87SztTu/t9vNZ/6Z+u/W2Kuh+eqs7XwuKcxdnr2qud
QZxFnEn8bn4/fv2fqPOD9jxZ64+268PU1pEo76f9nEO+B3Fnm9+GmLrLsDhz
C1+6PZq0GzZ+gzqfCoszX31bQl3GwLdSfPtFWUfXnPb7Td5Pf/+eJc+UdmiP
tA/W7y29spTp7Oc+85E6301S+Sev+XxSzW1zmb2xb4GztdV3Y8CXE5+DfDex
N56tn99D8D2Cf0TcDP38fozvxTxS88f3mT+p+evby2yHfVvBtzvwFgr8rza/
4cyPoTr4jXq6Td4NNefMv7m6/B7N9HW+8W3uhbtMKw+eNOrWBm31fQXfWdBm
e7/vUz9f+z3eghH3zza/vSB8XfXx0Ca/Hc22+YdvL0xdz9N09XvjXVF7ovV9
vi6fz1l/eH677PPLtf+aT77vMFetB3MVVrc2zF3p5bMfXV9rh/Fnr+y3uLr2
GOv3hfXser7Ya59Xc9Fvz17YOBkT3/GxZvutZu7nefzt2m983/2DWv8XKCze
+igsztgZw8mq/ndq//JtjHkj7u9tfiNj5poP5sVBTY6FMTE33iq+PN4FtGHO
+j38LjvW+cF4vln7s2+7/KLLvcUeIyxuRvt4kxQ2l8wpZSlTX/V57n7OEXPL
HNPWy2oMtG/amq8z1PpnLkkv32FNfhtEHcpmzz5LP+P0VZ9nLDxLtef/AVMR
e4w=
           "]], 
          PolygonBox[CompressedData["
1:eJwtkvtGRGEUxfc5s7+XSMmojDHGGGMkSe/QI/QA9Xf3e71UJEmSJEkpSZKM
JInut9+yzx+fvfY6397fWnuf8vjk2ERuZt2cxMlKZo+Z2Sq4CXECzuGeiGtw
LbhT8CtFF8QpuC64TfAH3BVxFq4MtwO+4XzC7xLrbjbPtx/yO/JFcJV7B+A/
uA5xGa4OdwS+LnqqT43aOYv+73DbxKrHW195vKPeA9Tugc8LjdLVz71pvl2C
3+C2iBW4Gbhv8lvyBXCF2n3wc+FZPke4t843I38gXwE2uHcMfuGU4M+Io9zb
sOglPdLQ8Ogr//Ii/X0pZiEd0ihdPSk0yZc0SldvCo+/cPfEJbga3GEWOjQv
zWjQQ5N2Jo3SNeSxP9Vp1ppvy6OH5i7P8tn02EGneEe92x470L71L2j/wx67
l1fNRvNop/D9DwgDWHc=
           "]]}]}, {}, {}, {}, {}}, {{
        Directive[
         RGBColor[0.368417, 0.506779, 0.709798]], 
        LineBox[CompressedData["
1:eJwt0j1IVlEcwOFjveZXpYPQECgOgYMGQWNGoBJWilYkqaG8kflq+VIiJhIS
9iFODqKLQxDV5BDk4BAEOTk4aJkfWSpkiIJghJEgPheCe+/v/3CXc869BfHk
1faUEMKY+9LhEKK5NBbCT63kHL3P2V50cT4PcBEP8Wl+yxX8jkt4kpt5mq/w
KvfxJtfzPr/kdG3lk6khfOBT3M2L5n7d1RHNPRTCGz2j41qlk9qms9qqn6N1
6hdN6pw+0K/aofPaqQvapYvarUvao9/0sS5rr37XJ/pD+3RFn+mqPtUZvauf
onPT91qsrzVHh/W39b/Qs/Y3Zz5vf4/4BE9wASf4n45yTOt4WXv5l/O6zB85
zlN8jl9xOY9xMT/nQh7kPE5wFndwNrdwJj/k43yH0zjJxzjOMb7HR7mRUzjB
WdzA+9rMmXqT9/Q2Z+gN/qtNnK7X+I/e4jSt5h2t4yPRf8XbWsup0fnxll5n
Y7josaE17AplvB59d3C04QKv/f9fDwCeOVOC
         "]]}}}], {
    DisplayFunction -> Identity, Axes -> {True, True}, AxesLabel -> {
       FormBox["\"u Re\"", TraditionalForm], 
       FormBox["\"v Im\"", TraditionalForm]}, 
     AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, 
     Epilog -> {{
        PointBox[{0, 0}]}}, Frame -> True, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, 
     Method -> {
      "ScalingFunctions" -> None, "TransparentPolygonMesh" -> True, 
       "AxesInFront" -> True}, PlotLabel -> FormBox[
       StyleBox[
        FrameBox["\"  Z-plane \"", StripOnInput -> False], 10, 
        RGBColor[1, 0, 0], Background -> GrayLevel[1], StripOnInput -> False],
        TraditionalForm], PlotRange -> {{-5, 5}, {3, -3}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.760883217188861*^9, 3.7608832482847757`*^9}, 
   3.760883589774736*^9, 3.760883835712985*^9, 3.760885979281369*^9, {
   3.760886713130156*^9, 3.760886748803129*^9}, 3.7608868480237217`*^9, 
   3.760886879791176*^9, {3.760886961854391*^9, 3.760887043339651*^9}, 
   3.7608871700333977`*^9, 3.7608872506853237`*^9, 3.760887443605986*^9, 
   3.7608874828042107`*^9}]
}, Open  ]],

Cell[TextData[{
 "As the plot windows above show, the mapping scheme is successful so far. \
The next phase is to figure out how to map the upper half plane to a unit \
circle on the w-plane. The strategy used by the s.m., which I will follow, \
will be to use the mapping formula advanced in problem 5 and following. To do \
this I need to pick three points on Z-plane and three others on w-plane and \
then calculate the expression to do it. As suggesed by s.m., I choose -1, 0, \
and 1 on the u axis of Z-plane, and intend to map them to (-1, ",
 Cell[BoxData[
  FormBox["-", TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\[ImaginaryI], and 1), on the unit circle, in the w-plane."
}], "Text",
 CellChangeTimes->{{3.760887578601946*^9, 3.760887683022954*^9}, {
  3.760887723293571*^9, 3.760887908384165*^9}, {3.7608889689028807`*^9, 
  3.760888986266362*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["Z", "1"], "=", 
  RowBox[{"-", "1"}]}]], "Input",
 CellChangeTimes->{{3.760887944146151*^9, 3.760887950422391*^9}, {
  3.7608879894132843`*^9, 3.760887989613387*^9}}],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{3.760887990600136*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["Z", "2"], "=", "0"}]], "Input",
 CellChangeTimes->{{3.760887993265073*^9, 3.760887999300956*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.7608880005274887`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["Z", "3"], "=", "1"}]], "Input",
 CellChangeTimes->{{3.760888003121921*^9, 3.7608880078448553`*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.7608880088953857`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["w", "1"], "=", 
  RowBox[{"-", "1"}]}]], "Input",
 CellChangeTimes->{{3.76088803683389*^9, 3.760888042979686*^9}}],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{3.760888043923173*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["w", "2"], "=", 
  RowBox[{"-", "\[ImaginaryI]"}]}]], "Input",
 CellChangeTimes->{{3.760888046121801*^9, 3.760888052826386*^9}, 
   3.760888396938405*^9}],

Cell[BoxData[
 RowBox[{"-", "\[ImaginaryI]"}]], "Output",
 CellChangeTimes->{3.76088805462374*^9, 3.7608883983385887`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["w", "3"], "=", "1"}]], "Input",
 CellChangeTimes->{{3.760888056595355*^9, 3.760888069674797*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.760888071446311*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exp1", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{"w", "-", 
         SubscriptBox["w", "1"]}], 
        RowBox[{"w", "-", 
         SubscriptBox["w", "3"]}]], 
       RowBox[{"(", 
        FractionBox[
         RowBox[{
          SubscriptBox["w", "2"], "-", 
          SubscriptBox["w", "3"]}], 
         RowBox[{
          SubscriptBox["w", "2"], "-", 
          SubscriptBox["w", "1"]}]], ")"}]}], "\[Equal]", 
      RowBox[{
       FractionBox[
        RowBox[{"Z", "-", 
         SubscriptBox["Z", "1"]}], 
        RowBox[{"Z", "-", 
         SubscriptBox["Z", "3"]}]], 
       RowBox[{"(", 
        FractionBox[
         RowBox[{
          SubscriptBox["Z", "2"], "-", 
          SubscriptBox["Z", "3"]}], 
         RowBox[{
          SubscriptBox["Z", "2"], "-", 
          SubscriptBox["Z", "1"]}]], ")"}]}]}], ",", 
     RowBox[{"{", "w", "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.760888081508037*^9, 3.760888163144329*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"w", "\[Rule]", 
    FractionBox[
     RowBox[{"1", "+", 
      RowBox[{"\[ImaginaryI]", " ", "Z"}]}], 
     RowBox[{"\[ImaginaryI]", "+", "Z"}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.760888116202572*^9, 3.7608881639104443`*^9}, 
   3.760888402856035*^9}]
}, Open  ]],

Cell["\<\
To re-wind this mapping back to the original sector, I make a substitution,\
\>", "Text",
 CellChangeTimes->{{3.760888510861917*^9, 3.760888532372143*^9}, {
  3.760894799009406*^9, 3.760894799642756*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exp2", "=", 
  RowBox[{"exp1", "/.", 
   RowBox[{"Z", "\[Rule]", 
    SuperscriptBox["z", "4"]}]}]}]], "Input",
 CellChangeTimes->{{3.7608881652406597`*^9, 3.760888206558372*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"w", "\[Rule]", 
    FractionBox[
     RowBox[{"1", "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       SuperscriptBox["z", "4"]}]}], 
     RowBox[{"\[ImaginaryI]", "+", 
      SuperscriptBox["z", "4"]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.760888210666491*^9, 3.760888410744258*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["\<\
Since this does not look exactly like the text answer, I check its \
equivalence, then confer the green.\
\>", "Text",
 CellChangeTimes->{{3.760888541435903*^9, 3.7608886080258703`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PossibleZeroQ", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"1", "+", 
     RowBox[{"\[ImaginaryI]", " ", 
      SuperscriptBox["z", "4"]}]}], 
    RowBox[{"\[ImaginaryI]", "+", 
     SuperscriptBox["z", "4"]}]], "-", 
   FractionBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["z", "4"], "-", "\[ImaginaryI]"}], ")"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", 
       SuperscriptBox["z", "4"]}], "+", "1"}], ")"}]]}], "]"}]], "Input",
 CellChangeTimes->{{3.760888268314747*^9, 3.76088832317892*^9}, 
   3.76088842142761*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.7608883246317244`*^9, 3.760888423173724*^9, 
  3.7608950569084797`*^9}]
}, Open  ]],

Cell["\<\
Time to set up the final mapping transit, taking points from the z-plane pie \
sector to the w-plane unit circle.\
\>", "Text",
 CellChangeTimes->{{3.760888680967413*^9, 3.760888715006592*^9}, {
  3.76088885030739*^9, 3.760888865129867*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Re", "[", 
       FractionBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"r", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "t"}]]}], ")"}], "4"], "-", 
         "\[ImaginaryI]"}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"r", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "t"}]]}], ")"}], "4"]}], "+", 
         "1"}]], "]"}], ",", 
      RowBox[{"Im", "[", 
       FractionBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"r", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "t"}]]}], ")"}], "4"], "-", 
         "\[ImaginaryI]"}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"r", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "t"}]]}], ")"}], "4"]}], "+", 
         "1"}]], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", 
      FractionBox["\[Pi]", "4"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "0", ",", "4"}], "}"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Green", ",", 
       RowBox[{"Thickness", "[", "0.004", "]"}]}], "}"}]}], ",", 
    RowBox[{"Epilog", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"Point", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Re", "[", 
           RowBox[{
            FractionBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"r", " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"\[ImaginaryI]", " ", "t"}]]}], ")"}], "4"], "-", 
              "\[ImaginaryI]"}], 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"r", " ", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"\[ImaginaryI]", " ", "t"}]]}], ")"}], "4"]}], "+",
               "1"}]], "/.", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"t", "\[Rule]", "0"}], ",", 
              RowBox[{"r", "\[Rule]", "0"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"Im", "[", 
           RowBox[{
            FractionBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"r", " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"\[ImaginaryI]", " ", "t"}]]}], ")"}], "4"], "-", 
              "\[ImaginaryI]"}], 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"r", " ", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"\[ImaginaryI]", " ", "t"}]]}], ")"}], "4"]}], "+",
               "1"}]], "/.", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"t", "\[Rule]", "0"}], ",", 
              RowBox[{"r", "\[Rule]", "0"}]}], "}"}]}], "]"}]}], "}"}], "]"}],
        "}"}], "}"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<u Re\>\"", ",", "\"\<v Im\>\""}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"Framed", "[", "  ", "\"\<  w-plane \>\"", "]"}], ",", "10", 
       ",", "Red", ",", 
       RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}]}], "]"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.760884198852717*^9, 3.760884260094954*^9}, {
  3.760885238970145*^9, 3.760885356305554*^9}, {3.760885414118517*^9, 
  3.760885503360833*^9}, {3.760885783803316*^9, 3.760885801370369*^9}, {
  3.7608859233870583`*^9, 3.760885939297162*^9}, {3.760886111113872*^9, 
  3.760886111439845*^9}, {3.7608886213387823`*^9, 3.760888649801764*^9}, {
  3.760888733978574*^9, 3.760888745647005*^9}, {3.760888785159384*^9, 
  3.76088879388827*^9}, {3.760895030276037*^9, 3.760895031661388*^9}, {
  3.76089526179226*^9, 3.760895272884534*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJzcnfkj1dsX96WRqJDSSJKpScMtlVoqISHNKpWkSSnNJeUUIklIQkIypUlS
yrQkQyEZI0kyT+ccNChRz6f23u5zv/e5/8DT/eF793fvtdd7vdf+cM55nfYd
Z7F/5XZRERGRAAkRkd//+88/rfj/+7jU8Adff9kF+GQrkrLklxBTzkV1fXZ2
haKXpXsk64XYT7pUUvGQC0yQyCifnCfEb4Nt55erOYGVcEx1WoIQO1fu3Xe5
hAffO/eeehXFxRv1fbF95zEYP6nOWjZQiIutnA/a/9gJVRdezP/LR4j1y+IW
DFCfnyi42CfM9bIQl5F5ZPOPSTyy+G9kf2T7fyX5keXvS/Qh05dI9CPTT+tD
Vt90k+uSkt1ZsGzUpHfFekLU2hSw6su4lyBp7qH8tZKP68M6BCP0MqA7z3Nf
RGQLdhoVeI8MT4UTU7/wrMOasQPmZ82oSYRnRs223mVN2LDQXWXNvYdQfvxR
3JGlTZhtmacyiH8T9un/LNnd3ogNip5akxSPJw58tLR6d3Ej5pN5ZPOVJB5Z
/BeyP7L9aX60pflNiT78SfXNIfpxCNU/jdSHBrS+D4c+HtmY0gRWe45aWl/6
iDtlpJcd7K6FSfap2ncC3mPzvQnTi+5/BCX7urcJ6W/xwqnddjvt30H8K5Rf
MqwEfzYXbt04qQh8F6nWKc8vxg/n3vhuPZkFS69VLNQdUISNqKv2VisenJRP
RXmvL+w5X6X1d+73H1eIFWQez9H5chKPy2n8L7I/BtD9aX5k+RuJPmT6dhD9
OJXqLyf14S5an9Tr0TmNzc0Q/9TbWULnA9i6v54bnl0Hp2V3ZkZOKQOd5WUz
T0MVqFyve9599w1YT1jhWqhbDoMHWNVWQRHonvlSFhpTBLd7jxJV8CmAQxax
JjvHZUPnUtsPM87kQ7vSkpP+7+JhhdTtU201eTBsw/fFYyZ4JIp0bDtmFZMH
38k8rqbzViQev9J4HbI/3qH725D8OJDlJ/pQmeo7RfTjMap/EKkPn9D6Es1u
6KYNeg+CtJqK72dbYPicNy7Z8W+hTmGS2pzaRtjJO+wz8kMxNOm4HEzJr4cj
1bJuCbH5gCbtE0I062CAqE9XdVIWhC2eofFavBa0VL7rKdU+g/3T7T720aqB
wYf0znnzH4CDzAjPg8+rgfW3oXn0sTfXqkGKzKMTnZ9N4nEfjR9I9sdwuv9B
kh9Z/h1EHzZSfcOIfqym+ml9yOqLdjDW+gyvIDpaymOBihCWr5d52qGYDSfv
nNRcE8aHqqtPvcu+Z8L7Q2qeb9a1wCzPuP1afdJAtUhLN0qnGaKfPgvpaksG
mYd6Spv3NcGTi2Oad0s8gmcaEvuvFTdCw1PVM74GYWDpKek03baxp149PI6Z
GxuhlczjDjofTeIxlcY/IfujNN2f5kdlmr+S6MMKqm8l0Y9MP60PWX2qlfLc
PwjaKcD9I4Ss9y/tJOcnQ97WgY9H1wrAzX5ZXw1IANPLX+tvyAvAMGT4VS2F
OCjSWSIVfZQPKSq5A3eNjgHvlJb4icIWMH05XrqkIhIeX3hdtsWNG2/kq7cb
+oFYgrnfRpMWkNP65jx54GGtuVq///TMI5s3IfHI4tPI/uhF9zch+ZHl9yD6
cB3VR/VjPtWvTOpDVt9x25AZHgkxoHTM851YkxDiZ+hG7Pn2AMZ9ebx3/E4h
VPb3PhKzMRrmlScVBgsE4DFFaviR3negr3bBXncnAeRBkdZmuXAofvbIpGWq
AFq3+1yV4wWCluUQtSetnB6lDzo2CpdA3bxBQySL39Nf35TvT78m8oFH5lGN
ztN4ZPEvyP7I9nch+bEPzU/1IdNH9SPTf4LUh6w+3yjDNb67IqBGU1x0f4cQ
SvGL3tmr4aAunbqyT5gQgo+7jpK/FwpaHaf2LTQVgvnElVam2Tdg+ZDdTkFD
haAwr2RWypQAWBX91E/0vQBMhk+1Onj2MnRJaqjdfSiAIftSRxq3O4CV+tK3
8/y5cYjZ9KvK2xINlvffEebZM49s3pzEYzeLJ/vjSrq/KcmPxjQ/1YdMXxHR
j0z/NVIfsvranWtWFz4NBLmNqo+WdwlhiHH7F3x2HWJWHd4okiGE1mVhyi9X
XQNp1wt1MpeFkDKrPeu191W4uarwhHC7EDSmjpR5G+cFGXk1kkHaQhBR2X5C
7Ot5GPbqp2iGEqenw1NsoZctGGUsNLoiI+zpr/1wnbR0Sc4/Mo9svlL5TzwO
pfEKZH9Mp/vT/BhM81N9OJTqo/qR6af1IasvXcVCfXS3N8gV2Fvr/RSCZmWa
XcBmb5C0a80f/pbTp95XYk2yFxxdaLNE9rEQ8r6nvH83wwOGaRU4C3w4PXGF
606mngc3E0feiFNC4E04NEWq6gyIp63xS9/NzT/dtLbA5CDcuLS9OX/T3/Uu
/RqckrGeq5fMI5s3J/HI4rXJ/sj2p/mR5W9V+6MPmT4Noh+Z/gxSH7L6IhK+
pLbfvAh31ruvV/ol5H6edWz7/MoNJjREFZbWcHo/t+SUnHcFpXOGKf1yuLGj
p8mBjnMQ7OjvWP2I68e3seIyumdhzLDRq0/f5OqJPViav+0EHLXPm/DoCtcP
yV9irb2t4FZtX5NJF/+uV0l620N915557Jkn8cji6f7I9jcn+ZHlp/qQ6Ush
+lGZ6o8k9eFtWp9FoeXMyU5O8LLqzGw3btyarrrYSeAIolfVDW1auH6ZTnss
ZeQADy3vpm0u485n6NZls+J4cDlUP2luFrd/n0Dlsuu2cO7wwks5idz4RP85
b+0Pgt0nEfmnMVx/rk9TqP9iAVlNVyVP3uHqiZg8p+PoikRj0+L3m6J65pHN
80g8nqTxdH90ZPuT/OjF8hN9yPSJZPzRj72o/q2kPmT1Vf6SF6n8ZQ8pv0Ak
hRsrLDrzNFjJHnxGKj12aeP0PPGoi06wg2jPTB8Zzq+U9vEvA2uPQ83qqqfi
pdy4dL3khaJDUBy/u6BPLpfP3I3/2WsPFCwP2XKae35EHhm8WqtjBtvr3KDo
GTe+fPJB8KFZiez3A51HNs8j8VhI43lkf3xD96f5sYrlJ/qQ6aP6kemn9SGr
73/fL/XeqG40/poBKCc6Btn+FOKQkVKGvWQvgGKv4VulPgnRwf+8pO+yZeBe
k7TkF/d+43/j30ld5K2+og8bQk77inUL0Xth+x698PNwYM20Xubv/r1+3Izx
Xfqrl8Dh1KlRyT+E+PnKB5Xw9nNwafXEJr/0f6/XWHLyzrteC+Hem7tbozqF
eDpN3PbGWAcYvW9OR07Mv9fPXCM3b/Dt2ZDx1fRi2XchfnHT+fg5zg78Ryy6
X3Hz3+v3ajfMstdVhYm6ku7rufU2EjbGE3MPwKojr4c4+P17fX7EFw0v5+6E
1X2HF03m1pfsLsrKVzAFh7eqWX95/3v9YbI/sv0ryHr8r/XqRD8y/XuJHvwv
PVOIP8j8+Uzqxf+qV574j8x/6if+l59lpL/I+kv7hf/Vr58b/pwnZOeJngf8
r/NAzxey8yVDzh+y86do0+/jQa9oUJ7guDLgMHc+J2xbrzMjC/ruPRusfEmA
tlOWuL3WfgDX36cXbeH/fj/9YNfDmfdg0tw+69T6ClF52YfwtLxM2LEtIcdu
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
B0+TDPlQGhMuFrSmFCM+W3vE+/Lh50G16b7FOdzriLm161MF0PnCMualYSYs
7OvqpikrgAvttf2Ov0iGUXMe8KeMFIL8N3FM2pUKgw701S/m3v98XRya2jsu
DeIVV4S/aW0BDdPWPbKjEyFjOSpeMhZAosWMyZoWzyCr/6hZBV3NIJG5KTwL
noD0YU2rT9f5YJg8zaP8RzwoJ1z73G9+M2gmDopw3v8Qcm5NsngsyQe5lBUn
5++KgeSPL4ZvfNgELqPinENzb8MjmRPDeDdaQGHPF9+68BA4adY786p5E2j8
0tM+cC4I7jw8+yx8Y0vP87mnPXdht04TmN7xKPtr/wnQHoFBp+e3gCqJRxZv
flzB8lHfy6iYHXfvkl4Ly48sv1xn5DDVj2Fo9Dx30d0TLaBP9CPTrxqjvv5J
cjRaj9qsKChogXhSP7L6zWTumW5tf4RbyuddclrBZ/4h82/AL/3js0ziMW11
a7x9O5/1A4H2I/7M06n8a0mYaqnSsPOBACIXJnlvF77ArdLdOwdtE4J93Gax
V/6IqmJx0rXOQjAYf0hm9/Z4yCr+uVx5iBCsbj+Qu7QgBnKNE/uM5uY3ti8+
W7joEXxTb/keUy0E3+rzfRaUx4HVXsNBuhYCaDizqKu4OBr2VK8otRsohKEa
/B8exrHQIuAphubw4bioQdFWk7vgqiz+dXygAPKenytbW3kfdqm1dfZdzYdo
3jeH9XciIOSrQGP1YgE8GV4r+aM5DPxfl8949qMFSt07A9QH3ABRU+3ZBj/5
sOvh9Ou+K33AucI49Wd6CwSHB408tvUyOKWlahjn//19srnqNw62P+TO2/bj
74JW7ofnSrK5mUl8sCHx6ELjW4139KrZ7YxLIzrkjNP4LD/60vwiznuKq9/5
44K9z4X3avhMPzL9HusDC12PhGJOvtTJljECkCP1I6vfZbZ0leTNKDRJez5p
2j4BeBP/kPm365du1a7b9zGo7INSUoEATEg/kPVjeuR96bDQB7javml9gZ4Q
ND5HxsyPT8Dx+i/u5r4WgtdphRWHg2PwnnyQc8QLIWi6eE5IKr0Pwt2G79Ns
hZCmMseoX304jJGu7dJ6KoSTq888OzU9CpRxb98lX4TwwrZ+Qh/xuyDpGd7u
OlgIcruOjNRaGAZFh+5YxFkJYYiB9uyGukhotz1WmMKdJ5vE8lEb/UJg//mU
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
IIsHGj+47N/4QRY/NN6wP403dcE74+crrsFSqfF1G5u4/O/nQAcFUU+YW/E1
x7iD4+fMZz8W/nKD0hHG0zw6BbAyOyTc3+EaDN72pqKti+OP/oZ7lrLu0Ogv
uG2QzdnnP+O6/J9rMN3z5vK5eZw/gqYsEtO6CttPD/MNKubOm8n7lZbvDhpj
vs8eUib8PM00CzN0haQCDznNKOH8bd+9p4e7Q96fBYueCeetF/ikrBjqAiJT
CvZ9fMbJjz0bE211Ffp7HezeJbwvwzoX4sc7QsH5r183+XLn/0mKzcy8DJdH
vLt5Xjh/azZ4ro+rAyTuG+qZFya8L+ZY3NcmZ2hTChRV4j7PrE7X756CVnBh
wuv8QHtu32CT7LpRdvADfiy+Z8npn9n/dkuHFRgXtn5axL2fYVf89mopOxBp
Sz+RcoXTZ4/oVVG50yDOV7wsOM+932I9r+tNZnD5zMZ9S024fe8xczJ+neF+
94hXizty+3Lew7LPm4PhmvMDf3Dvb5X0n2NQz3pYek5RveSM8POm/fDjKkOo
M1j6X6URZ5+bkUrpCQOwKD1b/cpKeF/N23jNaYfAKza057KpcN737xq96TqZ
yGM9lbci8niRytPzkJ2XTPTBPUwfoj86U/2tiP7Yqz+xFyWovdQf2OsP4j/s
pv6zIv7DI9R/wcTfaM78TfDAdooHxQ9d/8UPGX7BBG98TfGmfEDGB8offEX5
o074g4w/lG+YTPlG+YiMj5S/+H/8xW2Uv4qE78j4TuMBWTxYkPjB/4sfLKHx
Q+MNVWm86Wjk+memO8HNvD3WrnxOvzGD1/YZ7gKyfUbuGfyZi9d17fNmDHeE
UrGeuMFfue+r0fdGbhrvDC7Su2e9+C78f8HjmKNTHcHkvp3MgHfC+fdPR7Tu
OMOprXP7GHLxzXMPCvxdZQ+RpV2eFdWcP1d9mdlnnBO4Dh7s4y98ntvUaMuh
++zAODp6koNwntjnw7Q7nxzAfcvMVn/hekTeuYWetlA0rsNlpfA+k8x+jw2b
7GHsqTrZLuF6Toq/w00r7ndx1tKfwucjpIubh4y3hfHHF33Le8TpZ1cmHa5j
BWLybxcsTOL2B3RNuHzDBoyr960oTuTef429xP1RZqBhP9pOMZxbX9Gs+RJn
AQGjNaKrhPPV2rZHVWzNIDHRdtKZh8L52T6LW8q4/V/AG8rhZzXRYfbeK0fg
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
DpMaUH3Q/j5oQxSIVUefmGlXA+WknoditJ43ieyjKN1/TuTxPpUXI/VA9KT1
wLHkfGTnHyH6IdNPltQTsZPWEz8S+5DZZ0Dsx1RqP61H4hZajzQk/sMo6j/q
X2T+pfVMZPVMC4IPvqT4zCb4oT7FL5zUQ3EOrYdS/JHhT/mBjB8vSD0VRWk9
lfILRSm/PhL+oRjl3xZSz4NFtJ63rHp8c5JmARzRD3q32KIDZDpaFd26CsAm
5aSxww4++JB6IFyn9cCgDe7njtXlQebJZL+zgjbYuGuE8dCyVzB6T2ekdmQ7
dJN6IrB6ontucfVw3SyY+vmaYWx4K9Se0P4892kO+Ck/eT5/eRuYkXokONF6
ZNSZY1vsJ6fBnD7tVv3utcAgd7OntfkZwNtv/qifbCukknomyNJ6pmGjb/4B
3nPo+yD+8SFBM8gn9syYvDMZBg/ep+myvAXCSD0U8mk9VKTtZ1C9bhTEf/uU
o2PeDH1XTRg0e/JTMBFdqr4/ohlcST0Vomg9dYtf6pvNe50gc7+i9yHtZkjU
+b7fWyMUomf5l/ff1gyxpB6Lc2k9Np7sYwzdp/LI5LeQei7G0HouPR/Z+Z2t
f/XDOKqfDKkHI6sHU/uQ2adP7EcetX8qqScjn9aTxYn/kPkvgvgXZ1P/VpF6
NLJ6dBXBB30oPq4EP2T45ZB6NrJ6NsUfGf6BhB/I+LGA1MNRl9bDKb+Q8QsI
/5DxT5/UYyGK1mP5Z4Mul8enQDZv8kLZdj58evj1cTT3PWP8ddCKn4cFcIzU
c+EGreeO0ZuDVeOTIXXp7Sft/fhw8bOz37R+KSCmJm985AwfREg9GJ7TenDY
YdfFp+Ofg71ZZd8fSzrgycxLP9/IJkHjDoVhToEdYEjqyfCD1pMLZswS05OP
hR9RGQ/v+bfDsMCpPkZSCWCXoDe6oqGd1aOB1aM7pYpNR9yKhif6bXhOth1U
coYr3xv8GMb1ub45Xa8dTEg9G+RoPVt+4Gz/7uYQeO0c9vNSURuITRrp8fZD
OOzMnWn7+3MbmJB6OHjQeriOn/ae0bUW8DrO5n5jjPD/b5ll0oHeoGRvkTMu
sY37vvxbT0dWT1cn+8j2jYg8Mnlaj8cVtB5Pz0cDev44oh8y/Wg9HxfTej61
D8dT+6j9yOyn/QDkVZJ+APUfMv/lEf8i8y/tJyDrJ1B8kOFD8UM7il8a6Ucg
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
S5QfFWQeCtk8VDjhF66g/KL8Q1PKv/8BmD2apw==
   "], {{
     {RGBColor[0, 1, 0], Thickness[0.004], Opacity[0.3], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNnQfQFFXz9Wd2d3Z3dteccwIBERERFUEQUBRURFAQSYIgCAKiCCKigiKo
iIo5vuacc84Rc84RMGDOWf/nx2nq+6qeqntPd9808+z0hHO7Nxo+oc/4QpIk
GzaSpKRyXjlJ+teS5BSVs6Q4X+X+wuepnCN8scoDhC9SeaLwfJX7CZ+u8gTh
s1UOFj5L5Wzhy1QeKHypypOEb1I5QfhGlacI36byUOFbVc4TvkrlQcJXqjxZ
+DqVBwtfq3Ku8Kcqzxb+ROX5wp+pPE94scoLhB9SOU34QZWnCy9QebzwsyrP
FH6ReQm/oPIs4cdUHi38qMr5wnepPFz4TpWnCr/KvIVfYVzhD1WeIfwB4wrf
p/II4XtVnib8JusSfkPlOcLvIhd+R+W5wk+pnCH8JP0IL1F5ofCXlMKbVjRX
4aYqrxf+U/JrhP9QeYnwvyqvF/5H5aXCP6q8TPgHlRcL/6rySuFfVP5PuKB+
bhJOVV4mvLzKu4WXU3ml8Moq7xNeSeVVwmWVtwpnKi8Xrqm8QzhXeYVwV5Uf
CndReZvwt4wj/I3Ki4TXl/xx4fVUXiu8mcrnhVuovEF4C5UvCbdSeaPwxiqf
Et5I5XXCq6t8UHg1lVcLb6XyVeE2rEO4k8r3hHdgnsJrq3xEeC2V1whvo/IN
4XYqbxbeXuXbwu1V3iLcXeUnwjurvF24p8pFwj1YJ/8PKjvV9f/AuMK9VH4u
/R4q7xQer/I/4XHMU/hQlQXZT1T5kPBklZnw4SofFu6n8hvZ78NxF95P5ffC
A1TeI9xH5RLhvVTeJXygyj+ER6q8X3iMyr+FD1L5gPBwlb8KD+O88ftTubbG
O53jyO9V5YbC56l8RnimyuWFZ6h8jP+HqtYgnKr8VPiEXG3125+lsltR/+Oy
W0/6s1Q+Lf3RKuvC01U+ir3KlYRncZ6Fj1RZFZ7KeRCep3IN4VNUPil8kspV
hU9U+YTwEJU/af6DVd7L9UTlJtJfxP891wuVmwpfqnIBvy+V2wnfq/Jlrh8q
WwvfqPIFrh8qtxK+VeWLXC9Ubi58Lf93/J5VthO+k/87fv8qdxF+gf8Trhcq
Owg/qPIVfp8quwg/qfI1rh8qdxJ+VuXrXA9U9hR+ReWb/L5V9hZ+h/8zfo8q
hwv/wO+E64XKvsIfqHyH65fKfsKfqHyX653KFsJXqnyO64HKQcJfqnyf65vK
AcKL+b/n96ZyqPA3Kj/g965ypPAvKj/ieqFytPAfKj/meqRyD+E3VL7F9UPl
WOF/+B1wfnTez9T5P1HlTjr/Zf1fTJQ+U7mQ37/KScK5ykX8PlVOF15N5ef8
/lQeK7yWyi+4vqicIrycysVcX1QeKbySys+4Pqg8Tng9lV9yfVA5V7iFyq+5
Pqg8VbiVym+4Pqg8QXgjlUu4Pqo8Ubipyq/4f1J5u/BglX/w+1B5l/AwlX/y
+1d5rnB7ld/z+1d5qfDOKn/i96/yCuEeKn/m+qLyAuEdVP7A9UflfOE2Kr/l
eqDyauE9VP7C71nlLcIDVP7O9UflWcLtVH7H71vldcJ7qfyV64HKG4X3Ufkb
11OVFwt3Ufkjv3+V9wqPVPkXvweOG78HlTWdn8kqn+T6ovI/fn8qn+H3pzKR
frzKh4XHqfyH65PKx7g+qfyX37PK5/g9q0xlf5LK1/l9qiwJz1P5Fr9flZnw
TJUvcv1QWRA+QeUr/P5VFoUfYp78flSuJDxG5QPCB6n8m+uRyo+5HqmsSn8V
553/d5V14es47/xeVTaEL+b/juuBylx4vsp3ub6pLAvfxHHl969yOeH7OO5c
H1SuyPVL5Qdcv1RWhG/juHJ9ULm88F2cN64HKlcQfozjwvVe5crCT3Fc9Ht4
UuUqwgs4LsLPqlxV+F3GEX5H5ZrCLzKO8AsqVxN+lfMk/IrK1YV/VLmx8A8q
1xd+k3kLv6FyDeFvVW4g/I3K9YQ/ZFzhD1SuJfwZpfBilesIL1G5rvCXlMKf
Mo7wJyrXFv5VZVPhX+hXeHX9rncQXk1lM+F/JW8p/I/KjYQLkm8hnKrcmN+/
yjbCmcpNhP+UXXPhP1RuKFyTfGvhXGUT4ZVVbi+8kspNhZdXua3wciqbCq+t
ckfhtVQ2F14fPyO8nsoWwhur7C68kcrNhDdV2UO4qcqWwpup3F24hcrNhbdX
ua9we5VbCndSOVB4B+YtvJXKPsJtWJfwNir3EW6nsrVwV5VDhLuo3Eq4l8pR
wnuobCfcR+UY4b1UbiPcXeUw4Z1VthXuqXKEcA+Og/AWKvcUbqWylXA/leOE
9+E4CA9ReZjwYJXt+X2qPEZ4HOdFeLjKycLDOI7CB6qcKjxSZQd+TyqPEj5I
ZUfhQ1XOFJ6ospPwfioPER6gcjuuDypnCR+usrPwkSrnCE/lPAgfrfJk4ekq
u/D7VjlPeIbKrsInyy+srt/D3PDX8yQ/R/pTVO4s/bb4Efnv7eL+ar7k50t/
Ouex6OeGfaU/NZ4fdpfsHOnOFf488XPEMOkviOeJb/TQcZb0pwkvTvwcMVD6
M+J5gn4G1KynP54rhgifE88XlENr7h+8K9cAfJrwwsTjDJf+whiP54oxwlfH
8wXPMSOE/xfPM5QjhS8JvEam+2D194zwCqnOq/o/X/gK4e/V/57C5+buf0ni
55xRan95PO/0kf683P19k3jcsdJfE+NjN7rm/rBfpOOxD+vl/6Tg4zCo5vVw
PHgOGid8fTwP8Rx1iPDN8TxFOVH4lsADNf6F6usG4V8TP6dMlf7+eF7huesw
4dvj+YtykvAdgYeo/UW5+/tD7e9WOUX6e+L5aIT0/8uN/5N+X+ELcq/vJ+FR
wpcIPyBcSP3cM1Ptn47nH57TjhJ+OJ7XKKcLPxKYdY6vef6sd5z6u0z9PSFc
Tf3cdoz0j8fzG+WxNevBY2R/ae7+stTjHlfz+WR8jsORNc+P48Fz4izh5+J5
8VC1v0LtnxdeLvVz1VXS/xbPVzxHzhF+KZ4nKU8Ufjkwz32nC78Xz3+U84Xf
D8xz5cnCr8XzJeVc4dcDH67xr8zd34oa/y2Ou/Rvx/PlVOmvzo1XTf3cOa9m
O/TTpL8m93irS/+5yguk/6Ls5+WPmKfwx/E8O1321+bGa6Y+DifUvH6OB8/Z
59ein4Kfg8+suR/aL2RdwovKfj7nOf2cmuXgGer/+tzjr6v+j+EeILf92sJT
uEfIvf6VUz8XX6T2X8XzMeXFwl8H/knlFcI/x/PvdzwXC38fz6Oz1N+NufGG
qZ9TL6nZDj3PzZfX3A/tec6+Vvivsp+3Z3PPkbv/jVOf96ul/z3O/4nS35wb
N0nd7jrp/472PKffIPxf2c/rPFffJlyJ52vkNwonFeu31vXm1tx4c/V3nPq/
Ifd61xcu8hwr+1LFz/M8199csxx8Kvc8ufWbpR7ndumrMd586W/PjVtJf7Lw
Lbnnu2nq9x6Ta/6d8/vmOfrNmq/7XO+HcY+W+/rwt6ZZ57lV+kbF7wdW4LlO
eMWK3y+cLfs7c+M26r8lz2nSb17x+4B1eC4VXjee31fhOVd41YrfR5zLPVtu
3Db1e4r7a7ZDf770d0u/Js95qd8DPFpzv/S3Bs/hNet5n8B7iSeEN6j4/UQz
nruEm1f8vgX5k8Ibhv5i9X9vbtxe/e+m8jPpd6/4fQHvaRbU3A/tN+G5W7hJ
xe8zLuEeNTfukPo9x9M126G/TPr7c4+/g/QXCt+T+3hsy/kQfiL3eL1Tvxd5
qOZ1sZ4rpH8g9/HsLH1rnmOl37Li9ytXSf9gbtwl9XuXl2u2Q9+B51DhjhW/
H2nLc67w1hW/b7mGe/zcuFvq9zCv1WyHfi/9vz6c+36gR+r3LO/U3C/98d7n
hZrPO+eb9zbvC3eu+P3NLioXCu9a8fsY5B8I7xj6mzX+o7lxz9TvaRbXfB44
/rzH+bTmfmjfjede4Z0qfj91K/f4ufHuqd9bfVSzHfrbpX889/i9pL9B+JHc
x2OX1O99vpD9nhW//5misqL7oyMqfr/zkuxfyo3HyP4+4SeFewvvIzxQ5Y9q
P6ji9z2PSP9Mbjww9XuQn6UfWvH7EMb5sub2jMd7oa+E+1b8fojya+G9A/Me
6Yeax6H/B3iGya3vr/4fEn6ae2beIwiPUvmX7EdX/H6J90r/CI+t+P0S75V+
Ez6g4vdLvCe8p+bfNb/nM9XfHbl/763V3zid/+dy9zdS+DHpnxXeX3hw6n5+
V/sR0R/r/KVmPevlPdefNc+L+TzBM1du+6Fq31/ldzXPn/dnvEf7tmY5mHn/
K3xwzP85tX+Be2LhA1O/lyvqfB1W8fu5CSrTuvW8v3tF9i9zjy18sOxf4JlO
eJLw6NTv8cp1n3fON/2U6tbTH++9cuFpFb//oqzV3R/4GJXLCR9b8fuz2SpX
EZ5T8fuztzTea7nxoanf060g/XEVv6/jPWNS97yZ7zOyfz73eg+Q/WvCr+Tu
fzz+n2dQ4eOFD0ndz4p1Y/rjPdxqdd/nc3/Pe71G3fNkfrzXW7nueTI/3vve
WfN1nuv7ifhd3e/PVfmxpvaOxns99/PCJI13me5f23H95/mG+1fJ11V/Z1b8
fvIDnoFz4yNk/57wG9z/C09O/R5znbrbYc97yPWFz6n4fSTvNTcSvqDi95uU
GwtfGBi7DYTPDfuP1P9bufGR6v96lVtIf0PF7weXSP9+bjxL+v+pbCr9JRW/
j7xcZXPhKyp+H7mYdwC58bGyP0n//+/ktp8p/In0b+eez1Gp3+ttpvZXV/x+
j/eSreqeB+Pz3rNJ3eMyHnYtha8J+y/U33u58XGp34s2q3tezIf3oFsK31zx
+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
ri86nu8ewh0Tn2fON3tw8FHU+R/YOXXsX+ywp46MOn2w14KYwIxD/OBeMd6N
RceP3jPz/ovXYy6sh/09+GLyNbGnB/+JjvmyVmzQsTeIWLzEor4h7GmH/6Nf
+keHDXXGZK8IMau5bnP9po6sV8yPuTJnrvXcA3CuOedd4/fOb59rAG3xAcQ2
Zr8RuZ7Ym0GsX2LLEuv4lqL3ihDzmFxT7BUiVjGxkPtktqGOjNjDdxS994MY
xLRFjx37LdhX9F74XPwZ+1CIz0zfjPFuHEvW2jH8Nfadwp/vGfZ943ijo09i
HxN7mX1QHy7zoYljLTM2c2O/E7GZbyt6rwqxmNkPgg11ZOiw2Tvz/pY+od8n
5o8cPWMx5jkxXte4H6DOHIi1TCzmfpmPCXVk5Npi7xGxi4m9zLFCj12XxLrP
4xrJ9YdcXuxNIzY2saA/jrkxNvuv8MXYdA9/iw6b/jH/O0OPHf6PcYhHPSDG
2zdzfGn6ZgzqdxW9F4uY0wPCnjqy/tE/55ZzvDDmztrY70V/xA9nH0/XxLGs
7yl67w8xrclFdrdwn9SxrvfLbEMdGbpF4XPx77RFj123xHL0PcNfD4zx6Jsx
qDMH1sJ+s0vjePYKfzI0c7xrjj3n4MGiMfLuiWNZH5A5djX7ydBhw94iYlez
H4j41dSREbv64aL3bhK7mv1AxK+mjgzbwZljZfeO+wHyofUJ/zM4+qPfnTX+
sMx9EhebeNb0DUa+S+K27OVCh83QGG94zB8eOfGkiR89KPwH+dn6hT95JDBy
rvfs7yF+NXGs2Q9E7OlHi25LH1/HseFYsX+OY4MNcao5RvRFn9SRDYvxR8R8
6evbOKa7Jp77kvDJ+M/vYm2sZ9/wL+SP2y/8B/uWOCfE/2b/0sjM8cCJC078
7ceLxsh7JG7L3jx0y2KHY0Nb+iA3G3vxiL09ONZD/wfG/PAn2AwJ//JEYORc
70dljmdOW/qg/mTRe6GI/U3uuqeEh6WONc4+KeKBo9s/5g8eHfN9LNbLupf5
K/oYHtfvX2JtrIf9hE+FHjv82UGZ45kzFmM+XTRGvlviuTFH5t0z8W/70/iN
8PvkWs41nWcUnndoSx/8L/A/cUbo2QPKM8zYzPHMiWtOfG58Efn8Dgz/80xg
5FyfD8mSpR9qiPNNvHF02NCWPojVvqDo2OpL908W3T/jsD+MfWDYED+d/WDY
gpGz3wxb2qAbFf6GfIJjwp/8G30xHvsb2We2VFbxfrPxmePDEyeeeOrPF42R
s5+MvtgriG5ZLHlsaEsfz8V4jIt/GBv9T4j540/Ipzg+/MsLgZHvGNc38gse
GdcvdNhwrDhmxOI/NLM/PiL8BT760Lj+sv+NeO/ETz8o1gOeGPPn2L9YtG5Z
bHhsWA/7OYkd/3LRe+OI/f5S9M84+AfGxoZ7AeaAbTHmxP4z+mYMzjP77dhn
R/x4+qJPYsu/WvReOmLMT8osI+488ej5fySf5OTwL68ERs7/Zyn65niwHxUd
NrSlj0OWjRfjMxb9Mw7789gvxzFkbOZwaODDY/6vxfHnPOBfqCMj1jyx79nn
Rjx74sWz321y5nj46LB5vWiMnP2BR2SON0/ceeLTv1k0Rs5+PvYJEj+fOPrs
F5wUeErMl77oEx027FslP+W9Re9fpY6Mvhnj3tCz55X9sIzFmOwlJOb920XH
2z8y8/5A5km8/qkx3+Vi7qyF/bK/x7WCaxv7jWlHe+L2E79/arSnb8ZgXyz5
N+8v2n/dH5h9tOyfpS1zYO8isfrR0WZZLoBanCvOJ/t72edIPH9saXNE4Glx
/N4tOn7/UZn3L7Lvlnyd+Gj8H3VkxOon1v+DoT8h/DXtaI9uUvhX8neeFP4a
HWNwrmfH+jn/0+P4rRLHkvmz//e9aE8/+LujM+cfIA8B8f7xf+QLnRf++P2i
9dixH5M6MvZekrNgxfhf4fyyH5n5kq/smFjvMYGxpc3qcSxYC/ElPojxGBd/
Rh0ZuQiIXcpcmTNzY46jwv+PCf/AeyLeF2FLG+q8Q2JvJ7FOty05vvE7mfd3
4FvJzzo//PNHgZH3iONBfNQZsd61Yu2Mz/5lbGlD7oJluRE+LsZe0Yr3jZJf
gTqymZltsKUNtmDk7B/Fd5Ef9vy4n1kYGPkyf0j+17PDHx+fOf8CeRjIZ/Bp
0Rg5+0s/CXvaLTs+zId58T4NW9rwrWVZbgbmwtzYP71uvHvjWLJ/m+8y2GA7
PdYDnhXzZyzGZC7MibmzhqNT54Ygd8PnRediYD81+17JD0GeiGNiPeDZMf9F
ReeTOEF4v8R1ZNguyy1BG8Zjvzi5atmbTe4HcjfMyZy/gToyfC02F4c/XhwY
Of6OfbLkkyB/A/tlGZcxmTtrYJ8tayAfxIzwt+TDvSz88ReBkeO/WCv2tGP/
72dFz4d5sT8XW9r8/7kjvix6bOaALW0YizFPzmyDLW2wBSNnv/CcmP/c6L95
jMXa2X+OvyOf7VXhb78qOv/FKZn39y4JPXb4I+rIyL1Brgz2bW8ePhf/Qzva
o5sV/hX9deE/0TEGe4uvjvmTP2NezLdlzJ21sN9+XuixpQ19MSa5L8jNwb71
1uGT8TffFJ2v49TM+4upI2NvMjk82KdMPhHqyLDDhr7o85TQnxbrfzX6vyn8
7RZxbFgb++vRMQdyc5Db4/TM+T2oI/uuaIx8/8R1ZOxtJpcG+5zJp0EdGfvy
twqfiT+jjoxcHOT6aBNrY67sx3897G8L/3tG5nwg2NKGfdPkEyE/CPunTw98
Zsznh6LtaTcscR0ZtrQ5NeY3P47n1rEW1sb+f/b1twsfjT8j98hPRe+9JrcI
OmzI7UFukrMy21BHhi0YOfuf2bdNPhLazov7Dfq4K/zzGaE/O+a7bcydtd4T
9wfkn74v/O3PgZHj76gjI/cIuVHOyZwfhTqyX4rGyA9IPC/ypZwb89s+5src
iXeALW3YK05ulXPDnjoyfC/5qh+K+63zMucvIY8J+VB+KxojH5E4jkGH8Nn4
R+rIsKUNduRXuTDsd4y26J+I9ZCP5fyYP3ESOoVPxl9RR0ZuFHLP7BBrZe3E
R2AuzIm98ORYuSBzfhpsaXNhjE+eF/avnx/jYUubP4q2p93IxHVk2NLm/ZjP
Y+Hv8cXk7ybuAj6ZfezkmyHfC/vZ/yo6H8xFmfe/U0fG3nhyv9CW2AzkdiF3
DHbYUEfGPnryw2B7dvhX8oMvCP/7d2Dk+KsLwv7imH+3WAtrJ/7Ef0Xnj7k0
8/74P2P+rAP/+U/R+Wr+l3m//UWxnkti/t1jLcyNeB3Y0oa1smbmwpzINUPu
G3wx+c9fDP/KuIxPHhvy0zAOfWBLm3/Dnnb4S+rIsF2W+4Y1EDuA3DfEByD/
DfXzoz/wZTF/cqdDHL4gde6bHrE2xiKeBb4Xm1fDX+8ex4bxiE9B257ho/HX
6LC5Io7f5Znz6dA3Y1BPS441QC6dK8KeOjJ02NDuoPCf5Et/M/wvuXJKJefS
IZ4FOmJfkJuH3DtXZs6/Qx1ZsWSMfGxi2z3Cx+Iv0WHDXlZy8dA3Y7C/dUzi
Eozu4vC/5Jd/N+4XiNvRO3w4/o06MnLzkOvnmsz5fqgjK5eMkRPPoE/MjbkS
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
vnPynhNfdv2y87GTl53870eVjJETn5Y4scXIp068WHTY0JY+/q071jG50h+N
40X/G8R68cfYPBb+enpg5Pi7f+LYcLyIt7xh2fnc6Ys+04ZjIZN7ndzu+FZk
T4X/JM4tgafI675WrAe8Ucyfvo4uWbcs9zs2rJV4zeiwYdzrEo9F/4yDv9y4
7HzyjM0cji0ZI78+cR0Zx+bpmD/Ha5Por9ZwbGVyrZPrvdRw7GZyv5M7vknZ
+eOpI8MXY7Mg/O2MwMjxfzNLtqfdDTE/8s03jfmUY27MlXjR2NKGWLnkpm8a
9tSRMVfmzLF+Jvx/peG43fhP6sSWJtf8C1XH+SWfPXntife7qXC1YR02x5eM
kRPvlzoybF+K9dK+Wcz/uBiPcfGfeayNY/Fy3A9wDF8N/zsrMHL+/5tzrWz4
2HKMiaNL/njyyBNP94SS9dgRT5jr7+oNx4Dmekzc4Ybwa1XHH940cIuYP3GH
VxB+q+r4w80Dt4z+8M/LNRz3Gv87OzBy/F0jjgXHhnjbc7gWS7ZZ2fGpqSOj
b8ZAjuwN1TcueCzGZG1vh37lhuNb0p642is27Hfxd9SRNZH9O1X/9rkG8P/O
b7xVtH+v6viY46L9u+G/T+LaSf7wsuMfU4Lpiz5XjrkzN+J1o6MNfdEna+cY
oGcN+OZVGo77jY8+OTDyy6L/1RqOr8x4c7l2Cm9Rdjxm6siIvfxR1XJkH6i+
acHtaI8Omy2F1xD+RLh5wTrGYO7EMz8lzj//B0v9X8MybGkzr+T29EN8ZuI2
rym8sOr4zVvx2xJezLkoeD7o28R814y5Mzfii7NW1gxmzsQZX6thn4x/Oyzw
Z+F/qWND34xxWsnjMS7xn6kj43+b/3HmypyZG3Pkf53/ef6X+Z/mXol7JuL0
NEu8Ln4fbWN9xME9SviekuPh8l1hPeGty/6+cDrXqoZ9Jv6cOrLN1f+X6v8c
/ncla192PGja0R4dNvjmDRqOiY5/XS++XRBb+quq17V+w/GmWd/6sVbWT7z2
dqHHljZnRH/0iz/Ed27ccNxx/OVZrL3heNfEvz6Ta6/wNmXHx6aOjFjY31Ut
R/YN/1sFt6M9OmwYizHRYYOOMbYsOL772TE+88DfUUfWRvofqo6r3jJ8BNdn
jhPHC12b8Cfo/w3/Slz4pg37WPwX82vScPxt5t8k1sJ8iAe/feh/qjo+91HR
/tfw78Tlbib8W9XxudExRlvVf5HsPP43JetQdjxz6siwpQ1z5RzTN2O0j/46
xvkmTvZmwn9VHS/7Av4XhXcoO343ceebN+xn8YfUkbWT7R/hf5H9Gf6bdrRH
h02z+N/iWBHvHh1jMBZjdojxO8X8N4u1sD7yHXBsOQfbCv8j3Fm6zRuuI+sm
vE3D8baJ731RyXrsiEdOHRmxx/9Tm//xvyNZl7Ljh1NHRmzxYu75t2o4Xjnr
bxXHgrUQMHTH0NMXfW7RcCz99tzr5O6XPqkjQ7dF+HD8JXHMt2x4LMbcSvVL
S45dXsmtY+6sjfj9+N42Dcfcxwd3UP3qkmOJr5K7LX10i/V3jv67xvppS+z+
DrLPctfbhE/HPxI3vW3DY3eM40l/2NJmZsyfuP3cb3QJ+53i+LWNY8layQfQ
TvjykmOf14mz3nAugB2Ec+I+l21DHRm6reOahz+mLXrsiL9OHohtw8fiL7vH
+aZvxtgm1s5cyW8wJ+zJGYBPpk4fnVVfTrIr+V+QbJey472TJ2D78IH4L3TY
EOt9hdxx39s3XN8x7keYL3kPuEa3j7mylhVjfch2jfmfFP0T1xofS50xu6i+
ErHUyz6n1JExL+bAXJkzvwV+0/zW+U0cHtfzJfG8xf8C7emHePIDG451vy+/
RY5xw7kRuuFLOcexdvomnjq+GZulORA4/w3nKtiFa33utjuED8c/Mk7nhuPV
M95uKjs13DdjUL+25Fj2a+S2w546MnTY0O6RxDr6ZO3kX0DeteH49+i7qH59
ybHw1+EcNJx7YWd8LbHky7ahjgzdjuFT8Y+0RY/do4nl6MnRgM/tFePRN2N0
jbmxFvI34Ks5JuR5wGfvpvptku1RcL6FG0KPHf4PHTbEwX9CeOcYm7mRT2In
4RtLjs2/Qe44/dhQR4YOmz3Ljse/R+h7x/xv5twI7yX8ePh7+ATkfcC/Uodj
0EP1jXLbYU8dGf3SP+eWc4yOPon1v4lkt1KXrG/Z+QJ6NJybYjd8D3OMudGW
/BP4YmzIQdE6+semT8z/ltBjh//rE3rGYkzGYTz6ZgzqzIHcAs0inwDHkzoy
fNnuDee1wKfdHhg5/qyf6veVnFtg29w6bHoJtyB2vPrbo+E6sj0bzgXSW/VW
ku0rfe+G68iwvaPkXAktc+dN6NVwHRk6bOj3qcS+lz7JmYEPvjMwcvxbrzi2
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
Y84t+3/6DH6rBfeN/qSYL22ZEzps/g9XI9kB
         "]], 
        PolygonBox[{{927, 54, 954, 341, 1373, 69, 955, 342, 1374, 68, 53, 
         1346, 314}, {925, 53, 68, 953, 340, 1372, 67, 1370, 338, 951, 52, 
         1344, 312}}]}]}, {}, {}, {}, {}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], LineBox[CompressedData["
1:eJwt00tIFHEcB/C/7ab5qI08dIgKbx0sPHSIqG4RZgZFIShBDxJWbDVZZBNZ
ZJOSHgcP1aFDh6igg4co6NAhSDoUFGWbbWamYmb0IOlFkfQZC2bmOx+GYeb/
/c1UHWzbnSoKIYzbt8VCiM4/xkOYktt5qVy+MISEC2lezeu5mvt5He/iWh7g
zXyED/MD3sGnOMfT3MTX+BLHPaeFB/kOV/Gx6F24wFu4j+f4OzfxBV5RHELl
ghAyfJU3cA2f41u8l+v5Bg9yB7fwYx7io5zkR/yM09zKTzjPnZziIX7OGW7n
PA9zF3fwML/gbk5zgQuc5U4e4Zfcwxke5RHOcReP8Svu5W4e51E+wVme5Nfc
xz08xWNRn5zjaX7DZ7iXZ+L/5niaj/M7fsopbuaHfC+aF9fyAN+M5snV3M9X
onlzgtN8nn/pf1b/DXySRznPGznDd/k2r+QkX+aL0YfEjdF6OMuT5l/HST7A
93kT1/NWvs5ruYbX8FlexZVczu2c4GVcxm28hBNcwq28mCs4zkmu4FIu4mYu
52Kek4e4TMb4t9zPpTLwT7GPF8k/1vFNNnJJ1AfPygZWVfjBn+We2Pyt4St/
iHqOzVcQvjjMyJ1sC5/4rawDNYf3PPH///sLwYt0iA==
      "]]}}],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"u Re\"", TraditionalForm], 
    FormBox["\"v Im\"", TraditionalForm]},
  AxesOrigin->{Automatic, Automatic},
  DisplayFunction->Identity,
  Epilog->{{
     PointBox[{0, -1}]}},
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->300,
  Method->{
   "ScalingFunctions" -> None, "TransparentPolygonMesh" -> True, 
    "AxesInFront" -> True},
  PlotLabel->FormBox[
    StyleBox[
     FrameBox["\"  w-plane \"", StripOnInput -> False], 10, 
     RGBColor[1, 0, 0], Background -> GrayLevel[1], StripOnInput -> False], 
    TraditionalForm],
  PlotRange->{{-2, 2}, {-2, 2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.760884233798911*^9, 3.760884261093172*^9}, 
   3.760885357712017*^9, 3.760885468350301*^9, 3.760885504421753*^9, 
   3.7608858029148006`*^9, {3.760885924605406*^9, 3.760885940504178*^9}, 
   3.760886112129108*^9, {3.76088863819382*^9, 3.7608886504779*^9}, 
   3.760888796284542*^9, 3.760895060915983*^9, {3.760895264591271*^9, 
   3.7608952745166616`*^9}}]
}, Open  ]],

Cell["\<\
The origin point of the z-plane ends up at the bottom of the unit circle in \
the w-plane.\
\>", "Text",
 CellChangeTimes->{{3.760889052293063*^9, 3.760889077555356*^9}}]
},
WindowSize->{1366, 843},
WindowMargins->{{4, Automatic}, {Automatic, 4}},
Magnification:>1.5 Inherited,
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 10, \
2015)",
StyleDefinitions->"Charter1.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 270, 7, 51, "Text",
 Evaluatable->False],
Cell[673, 22, 73, 1, 45, "Input"],
Cell[749, 25, 261, 5, 110, "Text"],
Cell[1013, 32, 73, 1, 45, "Input"],
Cell[1089, 35, 3639, 106, 299, "Text"],
Cell[4731, 143, 198, 4, 75, "Text"],
Cell[4932, 149, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[5030, 154, 137, 3, 45, "Input"],
Cell[5170, 159, 70, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5277, 165, 137, 3, 45, "Input"],
Cell[5417, 170, 72, 1, 45, "Output"]
}, Open  ]],
Cell[5504, 174, 430, 7, 120, "Text"],
Cell[CellGroupData[{
Cell[5959, 185, 238, 5, 45, "Input"],
Cell[6200, 192, 117, 2, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6354, 199, 157, 4, 45, "Input"],
Cell[6514, 205, 87, 2, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6638, 212, 169, 4, 45, "Input"],
Cell[6810, 218, 99, 2, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6946, 225, 136, 3, 45, "Input"],
Cell[7085, 230, 70, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7192, 236, 969, 34, 79, "Input"],
Cell[8164, 272, 491, 10, 34, "Message"],
Cell[8658, 284, 633, 19, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9328, 308, 617, 18, 79, "Input"],
Cell[9948, 328, 217, 6, 99, "Output"]
}, Open  ]],
Cell[10180, 337, 173, 4, 51, "Text"],
Cell[10356, 343, 231, 5, 86, "Text"],
Cell[10590, 350, 403, 9, 70, "Text"],
Cell[10996, 361, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[11094, 366, 188, 4, 45, "Input"],
Cell[11285, 372, 94, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11416, 378, 196, 4, 45, "Input"],
Cell[11615, 384, 106, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11758, 390, 206, 5, 45, "Input"],
Cell[11967, 397, 109, 2, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12113, 404, 200, 4, 45, "Input"],
Cell[12316, 410, 106, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12459, 416, 206, 5, 45, "Input"],
Cell[12668, 423, 109, 2, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12814, 430, 214, 5, 45, "Input"],
Cell[13031, 437, 152, 3, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13220, 445, 995, 34, 79, "Input"],
Cell[14218, 481, 271, 7, 69, "Output"]
}, Open  ]],
Cell[14504, 491, 298, 4, 75, "Text"],
Cell[14805, 497, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[14903, 502, 157, 4, 45, "Input"],
Cell[15063, 508, 87, 2, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15187, 515, 139, 3, 45, "Input"],
Cell[15329, 520, 70, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15436, 526, 136, 3, 45, "Input"],
Cell[15575, 531, 70, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15682, 537, 167, 4, 45, "Input"],
Cell[15852, 543, 101, 2, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15990, 550, 155, 4, 45, "Input"],
Cell[16148, 556, 87, 2, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16272, 563, 151, 3, 45, "Input"],
Cell[16426, 568, 84, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16547, 574, 878, 32, 79, "Input"],
Cell[17428, 608, 304, 9, 99, "Output"]
}, Open  ]],
Cell[17747, 620, 188, 3, 75, "Text"],
Cell[17938, 625, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[18036, 630, 141, 3, 45, "Input"],
Cell[18180, 635, 70, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18287, 641, 139, 3, 45, "Input"],
Cell[18429, 646, 70, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18536, 652, 139, 3, 45, "Input"],
Cell[18678, 657, 70, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18785, 663, 137, 3, 45, "Input"],
Cell[18925, 668, 70, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19032, 674, 137, 3, 45, "Input"],
Cell[19172, 679, 70, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19279, 685, 137, 3, 45, "Input"],
Cell[19419, 690, 70, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19526, 696, 878, 32, 79, "Input"],
Cell[20407, 730, 284, 9, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20728, 744, 323, 9, 72, "Input"],
Cell[21054, 755, 128, 3, 99, "Output"]
}, Open  ]],
Cell[21197, 761, 483, 12, 93, "Text"],
Cell[21683, 775, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[21781, 780, 139, 3, 45, "Input"],
Cell[21923, 785, 70, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22030, 791, 150, 3, 45, "Input"],
Cell[22183, 796, 82, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22302, 802, 137, 3, 45, "Input"],
Cell[22442, 807, 72, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22551, 813, 137, 3, 45, "Input"],
Cell[22691, 818, 70, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22798, 824, 241, 6, 45, "Input"],
Cell[23042, 832, 144, 3, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23223, 840, 177, 5, 75, "Input"],
Cell[23403, 847, 108, 3, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23548, 855, 878, 32, 79, "Input"],
Cell[24429, 889, 256, 7, 99, "Output"]
}, Open  ]],
Cell[24700, 899, 879, 31, 124, "Text"],
Cell[25582, 932, 73, 1, 45, "Input"],
Cell[25658, 935, 467, 10, 122, "Text"],
Cell[26128, 947, 490, 15, 66, "Text"],
Cell[26621, 964, 460, 14, 53, "Text"],
Cell[CellGroupData[{
Cell[27106, 982, 170, 4, 75, "Input"],
Cell[27279, 988, 151, 3, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27467, 996, 219, 5, 45, "Input"],
Cell[27689, 1003, 193, 4, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27919, 1012, 329, 9, 89, "Input"],
Cell[28251, 1023, 320, 10, 104, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28608, 1038, 126, 2, 45, "Input"],
Cell[28737, 1042, 300, 8, 99, "Output"]
}, Open  ]],
Cell[29052, 1053, 179, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[29256, 1061, 535, 17, 79, "Input"],
Cell[29794, 1080, 73, 1, 45, "Output"]
}, Open  ]],
Cell[29882, 1084, 549, 12, 92, "Text"],
Cell[30434, 1098, 723, 12, 120, "Text"],
Cell[CellGroupData[{
Cell[31182, 1114, 18460, 444, 1308, "Input"],
Cell[49645, 1560, 37493, 637, 414, "Output"]
}, Open  ]],
Cell[87153, 2200, 715, 24, 83, "Text"],
Cell[87871, 2226, 73, 1, 45, "Input"],
Cell[87947, 2229, 1122, 28, 225, "Text"],
Cell[CellGroupData[{
Cell[89094, 2261, 5279, 138, 383, "Input"],
Cell[94376, 2401, 53348, 903, 463, "Output"]
}, Open  ]],
Cell[147739, 3307, 871, 15, 190, "Text"],
Cell[CellGroupData[{
Cell[148635, 3326, 206, 5, 45, "Input"],
Cell[148844, 3333, 87, 2, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[148968, 3340, 137, 3, 45, "Input"],
Cell[149108, 3345, 72, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149217, 3351, 139, 3, 45, "Input"],
Cell[149359, 3356, 72, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149468, 3362, 154, 4, 45, "Input"],
Cell[149625, 3368, 87, 2, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149749, 3375, 193, 5, 45, "Input"],
Cell[149945, 3382, 122, 2, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[150104, 3389, 137, 3, 45, "Input"],
Cell[150244, 3394, 70, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[150351, 3400, 1068, 35, 79, "Input"],
Cell[151422, 3437, 323, 9, 75, "Output"]
}, Open  ]],
Cell[151760, 3449, 214, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[151999, 3457, 203, 5, 49, "Input"],
Cell[152205, 3464, 388, 11, 105, "Output"]
}, Open  ]],
Cell[152608, 3478, 196, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[152829, 3486, 611, 19, 96, "Input"],
Cell[153443, 3507, 124, 2, 45, "Output"]
}, Open  ]],
Cell[153582, 3512, 251, 5, 51, "Text"],
Cell[CellGroupData[{
Cell[153858, 3521, 4832, 131, 339, "Input"],
Cell[158693, 3654, 79035, 1310, 490, "Output"]
}, Open  ]],
Cell[237743, 4967, 180, 4, 51, "Text"]
}
]
*)


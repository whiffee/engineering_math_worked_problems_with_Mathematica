(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[     92846,       1980]
NotebookOptionsPosition[     89211,       1857]
NotebookOutlinePosition[     89599,       1874]
CellTagsIndexPosition[     89556,       1871]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3U/rLsudGPYhCSFvItbE8w7MoEV2ycpCO2cjtLNNNMwq4EgIQzYzMEuh
oOUwMIsshECQhZGF8MILWcheeCGhRfAi0kBWxraubRJMbHKj77mU1LdPdXd1
d1V3VffnA33PPb/z/J6nn66uv9+uqv/m7/xPf+tr/9nv/d7v/c//1W/+87f+
9jf/u7/39/723/8f/ovf/OW///tf/x//zn/+m//5b3/z7//wv/y934sffgoA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwQv/1//6vVo+7Pvcf/l//b7PPBgAA
AAAAYDziWgAAAAAAAIxAXAsAnuN//T/+n0//xSf/6e7TAAAAAIAmxLXY61/9
h//vw7jp3/3n//7Tv/6PP/n0r/2Df/25tIufxfG//Pz//vR/+z//w92ny0Xi
voh8G0fcH5H+cfzNf/bvPtwP//Rf/se7TxE+Z+me/Rv/5N9+uGe3ROwoXh+v
/cIP/83nysEv/KNffygjr6zL4rPic9M5RN4T3wIAAADoy1ZsZO2IsZ8Y84mx
rBjbeitxLUrF+GjkmXkca+uI1xtfbSfyytr1Lxmf3yPKzDTuH0fpfSBPc7cU
iy+9Z5dEjHbP+0TMq+X9H22Y+G5rZYD8BwAAANCHM3Gt+bh7PHP9xviWuBYl
IpaxN56Vy2fUFWXWVrrUjmvtGc+Xp+nJ3nt2ScxDPZIHohytLWJs0zlaueOt
7RsAAACAHtWKa/32mep/9OvXrZUlrsWWGIutkb9qx1dai7HrmJfU83hwSYyp
9nU/Gt+Up7lT1O214lox9/RoOVgzthV5ai0/RvllniwAAABAX2rHteKIMaI3
xbbEtVhTK6Y1Slwr8n6s5zUdK+5VzMG447ofTX95mjut5Zel2NCa6e+kvbSm
e8otvWf8vEasaa1sjs+wtyEAAABAn1rEtT6MUf3w33Q9R6MmcS2WlKxxt+eI
uQM9iu8ZY9FLa3n1aGtPLXEt+LyI80Q+j3hQ3IvT+3EpP62J8izebylGFeVK
xLdy7xsxsDPWYlqR39/SfgEAAAAYUau4VhwxHvUG4losKZ0PVHrE+/Voay2/
3uyNN9aMa+2Jp8nTjOJIXKs0dpQrXyKGftRaTOtsvAwAAACA9lrGteJ4w74U
4losKYmdxGtiLDXmQqQ5EDHuGj+LeY/iWvWV7KklrgXljsS1SkXZWOu9Y53U
pXK55r5dAAAAALSzNY6aG0ePZ6xj/KdkzL7XcfiaxLXIifHTrTSKOQdbcxYi
Npz2q+p13HWkuNaROXQ141pxX6Q9hKbrucV9IE8zqpZxrVrvvTZPs9eyFQAA
AICPnYlLrT33nI5e9wOqSVyLnLW1rtKxZz5jvLbX+Y+jxLVKYo2t41pr5Oln
e/KeTVfHtaLtsVe0R8S0AAAAAMZ3Jq4VtuY+xDpq89cvHbHW0FSMAcbPYywq
5rUcHV9O88tiv6/c+Hv8LP4tXnNk3HHrGs4/N75L/D33nWt+7pkx8DSnJM5z
uhZejCXGz9K6eaXiuqZ5Kblj/tnx/vE507hpXLe4lmufu5bW6fevGsMsmRd0
pdppOjVCXCvujfm6juJa58zL8On5RQw2d7+l63nmfptauq9b5fk0f3JePqV8
NJ+HF98xrSl6ZP7y9Dp+rjz8zfulz+sh3t0yrhVpOH/fvc/MLJXH9tMCAAAA
GM/ZuFbJXjGlnzcdO47Pzc0Fm8fJ1qS4WMl6idOxyfidPfGtI+Pk8++09zNL
PvfIGHiMwaYYYum5l4xNb90nIcZmS/c9inOM8ewkrl1u7PPseZ9REte6Ik5R
O03P7A9VUka0sjRXI5U9a/eeuFbe/PxSjGXP/mVxvx2JO8Xv7IlTns3ze8uY
3LEnFhPl257rGOd2Z3yrVVxr6X33PleRawdcla8BAAAAqGtrrOyOuFaNuR+l
+38tHfG7peNmZ8Y5j35myefuGQOPcb89Y6i5MdW1uNzWfRLfe296xevTfIij
ad1y/7eSdQjjvKfxuZpapemIca2tGGPEA9buIXGtvNx1OpoX43dLY/tH9khL
x5H5OSVr7pYcpc9lHP1+e+uQmlrEtZbq8YjT75GLR8b7PnldSAAAAIAn2xon
2xr3jzHCPeN4W+OaW+9XMk529pn6vWOgtT5r77jr1vuUjoFXG7NdGWtsEQtJ
Y5Nn36PVuoR79nKKe7ZmfKtlmtZOyyP75Oy9Fmufn8q4tdeIa+XVzs9RX5Tk
g4jdXJXnt2Kee4+tOVU16q879ouqGdeK91qKye99FiCudy/XCAAAAIA6tsbH
1uJaJWPn83WXtsY0z44L1oxppWMrzlT78+KI73E27UrGwGuP2S5dq1ZxrRpH
y+f29+7nFHGks/vltE7T2mnZMma0tafW9LPvOsepGnn6SqXpG/dQ3NdpX6rV
PPCb9NrKj/HvubyTPicdS+tv7snzS+eb1o9N+2jFZy/lu/h5yR6Oa/VXvEfU
p+m7xWvXPu/qNQlrxLU+pNlKfj0yvzV3TSNNF/ctm+zJZj4XAAAAQJ+2xiRz
ca00HlQydj7//Rrj4EtjuyXrvh091tZ2avWZW8+TH71OU3v2XTqTPj3HtUqu
9VFn1kuLMewjcYzWaTpSXGttT615bOOuc5w6krfutHaua3sGpr0Pz1zvuM9L
9iZcqhdK1iBdmuu3FL//EEfN5L+SONpa/bW0Jmj8bOkev3rvqBpxrbX52nvW
qUxy8c9UtpaUTWm/TQAAAAD6Unv8e2ssr8b75sZ2l/aFb/ldWl/DrWfuj1yn
qdL9n2KssWROwnTMcK73uFbunGvYmi9UcmztXTZ1RZrWTsuSuYlHbMUU5/lj
7bXiWnm5c4y4TumcmrU5v1ux5rgWZ/bjKtmjKfd7W2XFUl209mzEWv21dR2W
YmlxXDlnq0Zca2t9yb1xpjPPFczvlavnvwEAAACwrOb49PzIjT8deZ8YU56u
95Qbyywdv4ox/On4VPx/6dqFS+NpJZ+ZxqPj3GPsrvR58bUx/63f3RoD34q3
LI3llaw/OU+jPbGQ6Vpbpdfp7O/P94GrqUYcKK732rh4ckWaxmsjT06Pzev7
m8+d/046WsyVK91Ta2rt9eJaeTXOcSmtaubJpT2WtuTu7ZL4Rq4+WovHLNVf
pTGcpe935VyjGnGtpe9RWo7N1Zy7esfajgAAAADk1RrzyY075eJPe94j7YFR
YmtMfmtfjhiTK3mPI9dwSYznl8wxOzpPbG18ueS5+CNrey19dkls50zMpcbv
t1Rrjcy1GNDVaTp15l6sbc+eWqXfQVwrr9Y5LsV1SmK5Z851a17ZPK61VAfM
5cq7tRhTrnwqmU82lYvhX7kWYY24VojvEee9FaPfKs+W1iCcv0d6biY9B7FW
Vyy1awAAAAC4Vo2x9txY0dJ4Yel77FmbbGs8P46SOSElsYfcOOvW75z9zKVz
PzMGvjVHbes5/60xw/nvl8S11s63ZD7e2d9vrSR2WnIsfc+r03TqTNrUtmdP
rdLvIK6VV+scl9bhq7lG5ZFznce1SueQ7YlrLZWNe+cx5uqS0jhcDbXiWlNp
L8+l/LAW+1trF6T1DJfKgrX9Q+23BQAAAHC/s2PsuXGmM3tCbY1V5aztNb93
THprTbX4rL3f6exnLu3ncmYMfOtZ+JJn0td+/0hca83dv19LXNcjayvOx2Rz
6XN1mpb+3ta9WNPePbVKv4O4Vl7Nc8yV42fXIoy6KM5nKcaxN65Vmo9yMaal
/LN0z+7VIq7Uy+fHczJLawouXdeldsHW3O3pZ+ZiW1vzxAAAAABo78z4+nys
p+Q55pL32jsuuhUX2vPc+9b8qdz49tb3OfuZS3G+M9exVrovHeJa6+J8zsS3
cvNYrk7TPZ99RTzmyJ5apd9BXCuv5jmeiYtEnCGtI1ey31vpueZiIyX1XC4G
s7SmYu58I56X1sYrPZbma16ldVxtaX3Rpdjn0n2wpz2wFA81ZwsAAADgXkfH
uNO+FDHut2cPlK333TtXK2yt7bZnr/etfetz6zptfactJfuA5Bwdsy2J8Zw9
juyvtebu328lrbO1Ndcqdx9O5wzckaZTZ363liuuQTpajWv3cB33qHmOS2Xv
2tyayANb62+euZ5L99TaOeXOZ22Oz9I8pBrHkfr0qCvmi+1ZszF3XY9cj1x8
7Mp9ywAAAAD42NXjt1ufl1vn7+x7tn6/Gp9/5D2Ojtm2Hv/PzSW6Oy7Va1xr
KuLDe+aaTMdy70jTqaP3Yk0l8eFah7jWZ2qf4573+7A23c548JFzXcqTcQ9M
41tr+XetXmt1j5aut1fLVesg5uJVpfNXj+TbpfnUAAAAANzn6vHbrc/bM/er
9D1bv1+Nzz/yHkfHbFvGQJbiH3fHpUaIayVb61Lm8uYdaTp19F6sbWvuZq1D
XOsztc+x9P2W9j7ae5Sc69nPitjb2n5MLe7Pq2Na4aq4Vm4/stL1gY/cm0vr
m+6ZBw4AAABAXVeP37YYt916z97XIdz6zKX9Q45ey63PO3qsxT/ujkuNFNcK
ubHbtbHcO9J0qkW+PmLPfLczh7jWZ2qe4551CNfSOf4t7TkVMeI4n6X8X3qu
pbHm+VESX8r9XpT58T2OHlfHtMJVca3Sz6l5b46QFwEAAADe5Orx2xbjtltj
2Xv2id8avyx9LnzPuN6Rzyz53DP7IUW6p/Hg0mPN3XGpq+NaZ8eVS9bUm98X
V6fpns++agw41nvbOpcah7jWZ2qeY8zVLcmXS3n5b/yTf7t7XtSec90b24r8
uXY+Sa7+anV/tdRbXCu3XuGetsDUCHkRAAAA4E2uHr9tMW4bc0r2jP+v2YqR
le7jsWdcLzf+VpIGZ67lke95xt1xqavjWpFmW+PsW0rGzaeuTtM953rVGHDJ
PLcah7jWZ2qeYy4mGWXjXK68Lynjz5zrnphW5Ps96+nmvk/ue/fuznUIc5+T
Kw+P7N9pHUIAAACA/lw9ftti3LZkzLFknHFpvsD0yD3vvfU7a0rG4ZfO/cy1
LPncmmPod8elro5rpc+LdciOzBEouRfnefPqNJ2663PnIo64d07a2jp16Yg4
w/S1a2Pa6RyOqHEdYxw+7oUrxt1rpXVcs9weVrk4RO45gK3yfWn+Y8m55u6N
ONc4t9J7Ys1S/TVa3OSquFbEDeefkYtr5srDpTV91yylDwAAAAD32Tt23vrz
ao6Jzsch19aGi38reY/c/Juj8ZKSOERuP6/Sz12Lp5Tsx1SyN0zuOubcHZe6
K641HU8tjTXENYzX703fq9N0autzW84Vq2Xt/EvnfEZ8JZUjEX/Ze63Plo/T
OU9HY6pnz/dIGb5UFuau35G8uxSbKDnXXBzlyLyfJUsxtz3zjHtwRVxrqYzL
lS9LzwbsvT9z875GSxsAAACAp9kaRx0hrhW21iKcfp9pbCH+v3RPnqWxzJLf
mz7XH+ewtfZgyfXfeo+tZ9NLrlnp2HiMP6f3y7k7LnV1XGstxhTpFvfEfL+r
+HvpfRxHLkZ2ZZpOlcTh5vfy2T3Ials795Jx7FzsZG8c8Uz5uLQOZcvY1t5z
zFla521pLb7c8wdblsrKknPNfV7KQ2fWGZ1ayrdn6t9a51bqirjW0j2+NF8v
Vy7Fz0qvzdJ3ah0vBgAAAGDd3rHo1p93NK5VMmfrzLE0V6vkO7X4zFASw1jb
4yniIqXXLMYCIxYT43nTOEz8bDpmvDT+f3dc6uq4Vmh1X6xd5yvTdCo3p6Xk
6MmR652srRsZ6VG6ptzW9VoqH7di83v2e9oje1/95t4pjRuszZNd+q652Mba
91ubF1u6ruNanop7/2yMa63+OjLXMc6n5pyyEnvjWnvWWYzrs1TfrT2/sZT2
JffoUrpv1csAAAAAtLc1jjpKXCuU7LN19Fh7PrvVZ26NRZfswZSOpTkjta+Z
uNbvtLovtvLJVWl69jOP7HXT0tFrUBJTj9jH2XNYSveS9SdbXeulz4vrEXXH
0vh//Hwt3rR2vXIxvNwcnPj7VryvNPZTsk5tOu+jMa61PBTfb2uOUHxmvCbN
Ubp6TtHeuFbkqYhVbc1nnH6n3LH2PeOaLP1u/HypHI33XErv2m0iAAAAAPbb
GqcbKa4V9qzjVnpsPS9f+/P2XPeS9d+2xm5rXrOla3V3XOqOuFbpWpN7j5Kx
+CvS9KPvW3AvTo/e9qg5eq4l99baPnml5xBHrnxcWsev9f1dcr7p2qV1N+PP
pbXk0rE1l2Ypjpdiab+dc1hwP5auExmv2TrvXL7ZW59t5ds43ziP9D3jiFha
rqzZMx+qhr1xrWlcM/e94u814sVb+TPNW03rwK7dN72VWQAAAABvtTU2N1pc
K1w9pl/rs45c85Ixu5K5A2tzJ2qc+91xqTviWnvHwWvdj0nrNJ0rucbTo7cx
4jPnuhXDLJ0XtHXNlsrHrXUgW13r2vd36RqGpXsizo+ldeXW7vGjn5WOtbVg
W3zeh+t4w1zIvXGtPfONz9wrocYc1j2fBwAAAEBbW2M5I8a1wto6QqXjn6Xr
ONUYh0xjkUe+/9qY3Z59deKz9865Kb1f7o5L3RHXivkSNWNbR/JiyzTN2TN+
3Nt6XmvnuhUXWlunbs94+NY1WyofPqy3thJba3Wta93bcUTMdk/cYO98yLTn
1NK/5dR6RqJ0XlgS5faZ+qt03cua9sa1Iq2Pfr8je4eduaaR/8W0AAAAAPqx
NZ4zalwrpL3m94xlxWv3jq+GiGGUrn01P+J31vaiKZEbszs6trm1n8na91ha
++ruuNQdca3pZ2/Np9m6H8+uKdYiTZfE+H3JZz0prhVysa29czzOlI9r+0m1
WpMu91lxr+8pc+PaHin3S/bPSnloGt+fx8OWYlpLMdrp+oJxDvHeJWV/nMee
dEh7kO2NxcT3q1mPltob1wp7y6S4t858t7j+e2KVJfuaAQAAAEALMT4YY1Mx
npWbP5P2r4/X1HgmO8a3074nuc+Lcce0l8ieZ/i3pHHQeP8YCz37Xda+R4z3
xc/i32p/j6dKY+Bp75iteyNeW3uOwJVpGuPPH/armcUR4nPOjk/3KsbNU1wn
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
rz68X7zvdM2F+Nxvffs7TZ9Pi8+NAzgm8k/sAXBXOcVx6v179FrnX3Vud9b5
Qb3PkrvvTahNG21M2mf36bWN9oZxmaCNxkjUsbQSZfB83vaeI8rvN4p6Kl2D
L33py3efzmtEWTi996IdG+2F+HPalri6fr/ivKL8n953a0e0paKdVcvPfv6L
D98jDvUQHBf5J/Jn1BuRrxiHev96vdb5V5zbnXV+UO+z5O57E1rRRhuT9tk9
em2jPX1cJmijMSJ1LK188Q+/eCqu9dbnAyI/pmsQdSRtpTIwXfOI8+fEz6dt
iNb1/FXnFW2h+X64W0fk7Rr1RTzzFu8VMXDtJqgjyoTIV+qPcaj3r9NrnX/V
ud1Z5wf1PkvuvjfhCtpoY9E+u1avbbQ3jMsEbTRGp46lpvlaxEeOtz6D55mg
a03nFcb/13rtCOcV7ZW4z6b5LtpS0Q6btt1atKHSug5L7ULeId1P1hSqK/Wr
tOnGoN6/Tq91/hXndmedH9T7LLn73iRPG60NbbRxaJ9dq9c22tPHZYI2Gk+h
jqWW6RzdI8db1yCM+ihdA/mwvfl9uhVLjX+fvr7VnMKrziu1kaIttLQedDy3
s9SWOrp3bmo32XsXYybtpH6VuqRv6v3r9FrnX3Vud9X5Qb3PmjvvTZZpo7Wj
jdY/7bNr9dpGe/q4TNBG42nUsdSwd/7s/HjrGoSpTvFMUHvzNkfpsynT+eUl
bZtezyvda6XP98zf/2hfd/q55rdjzKSd6XN/nmXvl3r/Gr3W+Ved2111/vyz
1fvM3Xlvss61bUcbrX/aZ9fptY329HGZ+Wdro/EU6ljOinvoTEyr1bjBCNIe
keLK7c3bA/H8S4l43ZH2TW/nFeX83jnr03n1R77/9Lm30u/FsxkzaSuVC5HX
31qv9k69f41e6/yrzu2OOj+o99ly173JNm20trTR+qZ9dp1e22hPHpcJ2mg8
mTqWM6bzWGPe1ZHjreKaeVaivVzsdY/579ZKr6vOK7Vh9ua1+TNLcZSuGTp9
ZsIcdxJjJu2l9Sreur5v79T77fVa5191bnfU+UG9z5a77k3KaKO1p43WL+2z
a/TaRnvyuEzQRuMN1LEclZ5r0AbeL567eHNc7yrzdZL31uXzdY1rpdlV5xXP
nx1tp+eeDSqRnnlTNjDlnmhv+syg+qU/6v32eq3zrzq3O+r89LnKeNbcdW9S
Rv5tTxutX9pn1+i1jfbkcZn0ucp4nk4dy1FRLscBvZq3M/bO2Z7PSa/1jMtV
5xXPKxwt1+dtvJL2U7SVPE9Ljvb0NdLzeObh80a91vlXndvVdX5Q71PijnuT
ctpo19BG4816baM9dVwmaKPxJupY9krzaOPZAejVvP7f25Zo1Ze+6rxirdCj
Zfq0HZTqhy3TdqHnJJgyZnKN6TN59iDhbXqt8686t6vr/KDep8Qd9ybltNGu
oY3Gm/XaRnvquEzQRuNN1LHslcrvuF+inI1jz/6H0Nq8/j/SX6vxHqOc19Zn
bD0TNd2PNA7PSDBlzOQa8iFv1XPd2vO5Lb1/yXPQyhuucOTeZB9ttGsoM3mr
XttBvZ7X1mdoo8HH3PPsFfNY5+X39PmBKGsj9jVarCvON56liHOP7xBzGUvr
jTTvMWJ9I+07muKSVx+tr1Hu2Zka7ZSzz7r0el5z0zVqS95/Ogc/8sKTvbGc
OGuEMZOnpOs038ZzSyx7Sprv9cR6v+e6tedzS/bW+aFlvf/WvMnH9t6b7p39
tNGuo41W7ilpvpc2Wp5xmT7aaG/Nl0/3lHRVx1Iq7tWlmFbuiPs88sfd9/ia
tThdHFvxuflejiPNe9yTljWP1n2n+VrHceyN2cfr5+9xNm17Pa+5eTtvKw9E
PDu99qnrk765nDir5zGTp6XrdM0J6zXlPS3N93pivd9z3drzuSV76/zQot5/
e97kY6X3pnvnOG2062ijbXtamu+ljZZnXObeNtrb8+VTPS1d1bGUijjukboy
7qt41qBHKeYWf0a9Ma0HSvLnPD+PlIee2HYK8z1A4zhi/h5n1z/p9bzWznNr
n9EjzxCN6M3lxFlX5fsjnpau875Pj9f8bk9L872eWO/3XLf2fG65cyzZW7xV
vf/2vMnHSu9N985xPbcXnpau2mjbnpbme2mjLavdDur1vNbO86422tvz5VM9
LV3VsZTKPdew5xhhzHueH7byZzynkeZfnqkTqSf37MER8/coaUuMeF5T8zmZ
W/Ho6R6NJa9/CuVEuZHaFqOn6/z8R6hz7zZ6mtN33drzuYW9dX64qt6XN9/t
yL2ZuHfKaaNdRxttv9HTnH7bQb2e11SvbTT58plGT1d1LKXm9+2RI+Z89W7+
PUvqgxTzq1mXcUzuvrvzfXo/r6lpfVDyvNH8WacR+sW1KCfKjHZvjJyuR/YW
Zuw0p++6tedzC3vr/HBlvS9vvteRe3PKvVNGG+062mjHjJzm9NsO6vW8pnpu
o8mXzzRyuqpjKRHra+bK7SNHybqwd5qvt1iyVmh6nuLudUXpt53S63lNTeuy
knw6P4+961Jvvd9Vx5E239vKiZHS5oyR03Xenqu5V/CTjZzm9F239nxuYW+d
nzuXs/X+mjflzbfUsaWO3JtTb7p3wlvun5HTVRvtmJHTnH7bQb2e11TPbbS3
5Ut17LJe0lUdS4mI1UbMM46z87Z6j53O5/yWrhUar33LOmw967Wd0ut5JdNn
gkrn7dY+j5HaDG8rJ0ZKmzNGT9cWZcPTjZ7mb9dz3drzuR2p83Pn0tKb8uZb
6tgSR+/NqTfdO+Et98/o6aqNtt/oaf52vbaDej2vpPc22tvypTp2XS/pqo7l
iIj/R16Lsjb2jZvvNbd29D5na+8c3sjHe/fKi3JjumcZdfTaTun1vELciyn/
Rl4uMX8mosZ5xHvecaR9M/d6Uzlx9NpO2+RXps0ZrdI1XhdpOV3TPX4vPi/W
Q69RL87z5B3Xb0Qjp/nb9Vy39npuR+r80KLe39K6nh29jr2r/dPK0Xsz503l
ujbasq10jd+PdIv3nY5lRPrGPRjXptacB220Y1rk5SvT/c16bQf1el5hlDaa
OvaZbbSRy1t1LLWkcihXxk+PuK97Nt93but84zuXzr2M/BXv39M+e0/S6z6g
vZ5XiPokvVdp+X/H+FZvlBPbSttEPamdrlEvls5zjvbemfb6/P1Guu53GjnN
367nurXXcztS54c76v1W9exT6tinOXpv5ijXt43YVqiVrpE+0zI60izeO454
/fx53fhZ7fXWR7rud6qZl+9I9zfrtR3U63mFUdpo6thnGrm8VcdS2/wezpVF
PZvvJ7ZWR6VnKpbyYOSnyLvxndeuydWe+tzB/BmDWu2Us/dsr+eV1tGNe7jn
tlOP3lBOnDViu6JmuqbnPOI1kb7TNnj8Tvxs3qaLvx+dy689d8zIab7HE+v9
XuvWXs/taJ0f7qj3a+XNp9axT3Lm3sx5S7l+xohthRrpGu8xTa/c+Oh8LmdK
U88eXa9WXr4r3Utpoy0zLrPt6jaaOvaZRi5v1bG0sjR3a+9aXHeYPy+wVLdE
/bNWh81j3r30pUvOqcXRunzJ3XN7zdeWjePsXog9nleqb47UH+Jan3l6OXHW
qO2KGuk6TdO1/DVv96U68sjzStpzx42a5ns8sd7vsW7t9dzO1Pnhrnq/dt58
Uh37FGfvzSVvKNfPGLWtcDZd03yIdMTrlszHv8/EXbXRjquRl+9K91LaaHnG
Zcrc0UZTxz7TqOWtOpaWlmJbvZuf99LzAJHv9+SZeG2tuc9nPLHtFHJjF3s/
M9cuOLp3da/nFXVF3LsjtZ169PRy4qxR2xU10nXa9l5ry4Vc+XCkb6Q9d9yo
ab7HE+v93urWXs/tbJ2/dC5XaFHPPqWOfYIa9+aSN5TrZ4zaVjibrvM0Whsb
jfeuVT9oox1XIy/fle6ltNHyjMscP5/W1LHPNGp5q46lpVROj9Z3TPOA05Fb
WzRec2Qd3cjTo12PUeTq9BrtlLPlYk/nFXky7tszbafcM0pvpJxYN2q74my6
zufwxxH14FJ+y6V1vH6v+XtYe7zcqGn+dj3Vrb2eW406P73PHXVSq3r2CXXs
6Grdm0uU6+ve2kabP/O/dQ3mrz261pg22nE16oG70v3NemkH9XxeI7fR1LHP
NGp5q46ltXneqLGnYmvzcjOXt6IcrbUPCnXk6vStZz/mcs+CnF17oKfzSnN9
z7YJa1+jESkn1o06ZnI2XXN9na02Wu71e41+v9xp1DR/u57q1l7PrVadH+6o
91vWs/LfvWremznK9XVvbaPNxyW21jyap2esr3TEKPdFj2rUA3el+5v10g7q
+bxGbqOpY59p1PLWfUFr87pjlPmi03lm8z3BtvbL2SLftTNfWyb3jMGaeP30
92vFYXs4rzSveG/bLWc+D3O0fnEtyollI98bZ9M195zSWp49206fP/M2wj6W
vRktzflMD3Vrr+dWs84Pd9X7repZ+e8+te/NJcr1ZW9uo8W4XbwuvvvaWFtu
fsCR9ZG00c6rUQ9cne7c3w7q+bye0EZTxz7TaOWtOparTO+zrbI77v2oKyJO
G/f0XfsBzve7S/kx/oy8cqauUB63M39+Zu94x3zvwlrt2LvP60zbKe75eT6c
548R+8U1KCeWjXxvnE3X+XNKa3k2157bWz7Mn3mzXsp+o6U5n7m7bu313GrX
+eGuer9VPTt6HTuqFvfmEuX6sje30UrNy/Cj+9lro513VZqHWulOv220u8/r
KW00dewzjVbeqmMpEWVI3G9xRNlzpF6f3qdr5vvUpd9p/TxfzjyPpfwbPz+b
V/Sl25nXeXvj9fPnRmq1Y+88r7PPA0Wcef678/zx1ufYlBPLRh4zqZGu07pz
7Rrk9kvdm1fn7/HW/HjGaGnOZ3qt8+88txZ1frir3m9Vz45ex46o1b25RLm+
7O1ttC25dZSO7tehjXbeFWkeaqY7/bbRnjYuE+5oo6ljn2m08lYdy5Zc+RH3
2557Zfoea7+X+6zpZ149b2se901zx+L/z56LvnRb8/hoafk4vwdrr5l5x3ml
eulo+R71Ta6tN5/vu3f+/lMoJ5aNPGbSMl3n5s/8HVnLYt7+3Cpb4t9TH+Ku
OdG9GS3N+Z1e6/w7zq1VnR/uqvdb5c3R69jRtLw3lyjXl2mjfV6MS8f7xnvN
1yiL8vfM/aKNdl6rvNwy3flMr220J43LhDvaaOrYZxqtvN1bx/I+83Va52VJ
yT2TyqCtsmd+b8+PO8bN558fczJrnIe+dFvzZ3BK2xvz9s1W2Rr3f/xO3Bcl
/cKrzitJz0AcbQemOmLp96flw5vn+yon8kYeMwmt0nVq3m48+pzSdL2AyJdr
cms+vDUuPTdSmvM7V9atPdf7rev8cFe93yJvjl7HjuSKe3OJcj1PGy3/XtNx
jqPr1Mxpo9VROy+3Tnc+02sb7WnjMuGONpo69plGKm/31LG8U+7+m5cpa88b
pHK/ZJ3Mrc+6Y9x8GmuL71BrfWV96famcfuSdIt/n6bJ1nM0UZfO56DH8zt3
n1eS6xcdPZbaDfNnI95KOZE3+phJq3RNoh80LUPOtNGn77PV5szt0Vtafj3d
SGnO511Rt/Zc719R58+/y5X1Uou8OXodO4qr7s0lyvU8bbTPxO+kuVEx1jB/
pjc+J/7tzD2jjVZHzbx8RbrzO7220Z40LjP/Ple1a9SxzzRSebunjuWd1uZr
TY94XZTX0TZOcwvT75bO69r6rBbrw2yZP49Raw1XfelrTOcrRxx/zTTOXxJD
ze0FV/p8QMvzCjXbTmvzLOdtu7f2uZQTeaOPmbRK1xB5Z95ePNpGn687sfXc
4FJe3yqL3mCUNCevdd3aa71/VZ0f7qr3W+TN0evYEVx5by5Rrudpoy2LdtT8
/ffuw5Boo9XTMs1DzXTnY7220Z4yLhPuaKOpY59plPJ2bx3LO63teVVyRLx0
7z7XS8cdY+bTZx5qzhfTl77GvC5cKifjPp22F0ru2fkav3vSsuV55Z5VOnNs
1WHTPHJH7LkHyom89JzDqM86tkrXef4vzdtLpuVESR5ce4bk7UZJc/Ja1q2h
x3r/6jo/3FHvt8ibyr+27rg3c5Tredpo23Lj0XvLPG20eq5I81Aj3flYr220
J43LhKvbaOrYZxqlvN1bx/JeaX/CPWXukX3f5mVXD22JtJZrfP+asV/t1GvN
y+X4e5pXOG0D7Xk+oEabt8V51Ww7lc7HT5+5dz/vp1BOPFOLdJ3XczXmyk/H
QErXno/nDdOaAtPff7tR0px1LerW0GO9f3WdH+6o91vkTXVsW3fcmznK9Wdq
1faem46ZpWPPs7baaPVclebhbLqzrNc22hPGZcLVbTR17DONUt7urWN5t7Qm
ZrSz5s8Rxb0eZX3cj2f3fYvfjfonlcVprc27pPlqtc9BX/p66R6OezXVk/Fn
arccuW/j91K/Y8/cxNbndbXpvM7ac5RHoJx4ptrpGmMVKY9HmVEjr0zz3tHz
TGtWHF3j6UlGSHPKtKpb1fufubreb1HPqmPfQbn+TK3a3nPzNY7iKF0TUBut
rqvSPJxJd7b12kZ7QvssXNlGU8c+0wjlbY06Ft4g6rAW8y71pXmatN506V4j
T6KceKaa6TpdhyLyyNba4NE2K2nHT/exPCqebdIe/MwIaQ69uLLeb1HPqmPf
Qbn+TEfTNca6UxrG75fsL5abO1FCG62uM3n5ynSHHlzVRlPHPtMI5W2NOhae
LuK/Z9a9WKONxNNM54u/qe+lnHimmuk6XRcj+hgl++WUPKeU1ss4uz5AerZx
lGcQWxkhzaEnV9X7repZdezzKdef6Wi65tY6imOrDXVkvE0bra4zefnKdIde
XNFGU8c+0wjlba06Fp4srUtbEls+QhuJJ0rP2LylflFOPFPNdJ2u1V66Nnhq
16/1QaZ5betZtjWpT/D2Z91GSHPoUet6v2U9q459NuX6M51J16W9btbaUbn1
kbaeDddGq+tsXr4q3aE3Ldto6thnGqG8rVXHwtOlNXRb0ZfmqVI9E3XR058t
VE48U410TXtFprTbMyaRnnNaOofp83dnxjpSXrUXb/9pDj1rWe+3rGfVsc+m
XH+mM+maG2vbagNNx1vTsfb52mj1nc3LV6Q79KpVG00d+0y9l7e16lh4uihb
W89n1ZfmyVL7KfLSUyknnqlGuk7bW3v3u41no9JzTrn2XHrvs8/HpfUF9AX6
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
n/ROZ/tJZ9fHm6+lZnz+Y63ypv7Y2PRxAOCYefvz7DND0aaK9/z6N775od3W
qp+nv/ZO4lrntMo3ubGetb6sfhRHTOcW97TeEwDPlusvHWmL6ifR0tl+0vy+
2TsPcb4GzAjPyl6tZd7UHxuXPg4AHBPzzWs9V5XbSznaVy3qZv21dxLXOqdV
vsnt0bfUl83NEe1t/R76NK1XAOAKsffNUkxrTx9HP4nWzvaT5m30ve2teVzF
GoQfa5k39cfGpY8DAPvl+mlHn6ta6/O1WJ8j93l72857X6+/dr+aca1Ybzzu
95bPy/amZb6Ja5iu51q65M7Bc2lsmfbVPf8LwBWirbi0/uCetot+Eleo0U+a
x1+X9meam99zJWup6YvVz5v6Y+PRxwGAY3LPDR59rmq+Hvf82Ls+95bc3qjR
PisV7YdYA2QP/bX71Ypr5Z5nq32P9uiOfDM3X6PE2vvvcrSOSXOL3S8AXGEp
phU/Kx3rT/STuEKNftJ8Hk/pXj/zcYWtOJW+2H19saA/Vp8+DgBcJ+rdeZvq
TBtpra8WR4t57fM1FEvb3dEePNIn1V+7V+6ePRrXWnr2dk+/YlRX55up+Z7G
Z9+PsUzHPOI+LH0uNK3Z0uKZdgCYi/Zgrq0YfaUjY5f6SbRWs580XSsv7oWt
e37+2SVzTvTF7umLBf2x+vRxAOBauWekzsw9n7fP5kdpe22P3PrUa22yaHPH
eRxtu+mv3avmPbt0n9Z4/q13V+ebJNrq0z6sPtT7LI3lrfXj4tld9wsAV4j6
KLeeRTxHf2bta/0kWqvdt5/O59nqH8W/743R6otd3xcL+mNt6OMAwLVy62Gc
2ds11we84tmr+ffI7b8c3yt+Fn3KeP3RdoP+2n1iLGFpLZgj4wxr4wtvcGW+
Se81/Uzt93daejY3fh59/GkdFHVGumeiX2jvcQBaiTZJri8T9U+NPWf0k2ip
dj8pzNvuS3Ow0th8iv+Wttf0xa7ti6X30x9rQx8HAK4zXze7xnOC83ZS62cQ
p587Xx86tSHi5+mccm2Kvd7Y5r5T9JNyabvUZozXlj4jGG34eB4wfi+Oad/q
Da7MN/OyYU+fl2dJ66eU5Ol0r7xhPRoArhfj/dFHmY+vR90TbZ+aa0LpJ1Fb
y37S1HRuUfx+/D3yTvw5/fyStQen9MWuy5vp8/TH2tHHAYDxTefIT/uFV0h9
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
8Dj29gvn6bjntTU9uQ4sEWMLMbcyPS87j1FfyfhpH9L+Frk1ZHuNa/Um8nfk
n8hH07nM8fdaz5m/xZPya0/lbSnlMqN4ap2iPvlMiqFaF5A7iGutW5vvGMfW
vhRRnk1fH+M3ozgSH69xtG4vvTlNR/T29HpiPnx7mh6lT1nGdWpPHh5P9K3T
fjxrR7wm+ufzNIz8FD+fp32MAbbco+2JdWCJuNbT2G+kX4q1xbmlf4u8dJX5
NWr9/nenQY+W1h9MaqZR6/S+Q5rTnNZUiv9PZdt0PPJNY5FnPSG/9ljellIu
M4qn1Snqk89LfYxengvjXcS11k33ypvuXVE6FjMfu4nfH8VTxxLenKYjent6
PTEfvj1Nj9KnLOM6tScPjynt57xW9m/1R6dr2tyxz/gT6sA1ESNMscP4cylm
OI0vXvVs7PwatX5/Zfjnxb0Q12VtfmTNNGqd3leLscVU/sU1nJd1EaNP3zW3
xiN5I+fXnsvbUsplRvGkOkV98nmxPnJ81x5j/7yDuNY+8++yNRYTeXy+xwV9
kaZjkV7PI03L6FOWcZ2uJw+PY6tNvvVcaYprRRp7JrOu6TO+MQ6ydH1TfCMd
NfcyWGP89F5p/cG1PdHFtfKmY4xL427zspEyo+bX3svbUsplRvGUOkV98rF0
TZQP3EVca7/5WEzJ3NJ4dvkt8foRSdOxSK/nkabb9CnLuE73kIfHsDVna2uu
Xeq7WjuyrhhjnY6brsUMc/2qKxg/vc/W+oOJuNbHUj2zFb+Yvq632EXPRsyv
I5S3pZTLjKLnfFRKffKx1K/Ql+NO4lr7TdtCpX37yO/GAfolTccivZ7nTWm6
Vh+2PEbriz7pOt31XY4eR7wpD49uq12+NsaX4pct99R6m3ne2bq2ETPem9dq
qFFO7Hn/0eqsVtIcybX1B5OaadQ6va8wHVtcy1vzeP8b66QntbnWjFLellIu
36u3fNPyM2tfq9GoT/JSmRp/wl3EtfZL4zDpKN0XIl77ln0DRyNNxyK9nudN
adpbH6hXT7pOd32Xo8cRb8rDo5un1fxYmhOS1mN6+rOnV4prOh3/iPlwJWL8
IOIckVZXrQdZo5zY8/6j1VktRNpGfttafzCpmUat07u1+fjD2ly3+WvfeO89
qc21ZKTytpRy+V695ZuWn1n7Wo1EfbIsrZEMdxLXOibaNnvKq7S34B7Rbpo+
F0BbLdI0XhNpON1vNn4nPiva0p53Pq5VHpRm92ldrvZSpsb3OnJM29JHfr+3
vvgW12k8yuVxzJ87nR5Lcau0BuHWWmiUm9/TrcqfGvWf8dPrpTxX+hx0zTQa
ub++Z0+ko7GOp3lDm6tleXtXO0W5fK+j+ebsMWJfZdQ6RX2yLM1N0y/gbuJa
x8y/01aZFe2c0jmoUT7E+9tT/Vo10zTatvP0WzqivWtMbr/aeVCa3a9VufqU
MlWfsozrdB/l8jjm/fSSsauUFiXzRtg2zy8t1qqpWf8ZP71Wihks7UufI671
mfn9vhQXnI9BPn29qBZGya+tytu72ynKZUYxap2iPlk3YoyV5xHXOmY+HrC2
T16KYy+NA0T7IK5RtHWmz/jcfZ3e9vxJrTRNz8OmZxem7dd4ffxsvmd7/N06
TPvUzIM9p9mb8mGtNO21TD1Ln7KM63Sft5TLTzGfX7c25pf2GNkzxl7DU+vA
+f4LcdQY72xZ/xk/vc50/cE996K41sfjDktzguP+euMYZG0j5NdW5W0P7RTl
MqMYsU5Rn8AYxLWOm8ful/odaU3mJVvX567rVHJOLY4720tn03Salmvt5fnz
HKme9Az0PjXyYO9p9rZ8WDtNeypTz7o7bUbxtuuUxj97ubffUC4/RdrrOXfM
x9PT+N3V+0I/tQ6cX/tae5a1rP9a16G9tEN6EPHjuAZ7x79rptGIbaZc/GI+
bzjqh+manJH3PA9x3Aj5tUV520s7RbnMGVf2IUarU9QnMA5xrePmexMslWFR
vu1pA8Rrc89YXu2pYwlrzqbptO7bGvvJ5QvPduxTIw/2nmZvy4ctytVeytSz
7k6bUbztOvV2b7+hXH6SeZ99ekyvfbzujn2hn1oHzvNtqz0YatZ/rcuZXtoh
Pejh3u6pXimVi9WnmEPURSleGEfUQVF/WEPpnBHya4vytpd2inKZM67sQ4xW
p6hPYBziWsfNy7pcGyles7YOz5KI/T/lOo3kTJrm9qqIOm7pGa5cGtd6Xvct
zuZBadafVuXqE8pUfcoyb7pO8xhSD/e2cnkskT5L7fOURmkNQvHCOmLcY36t
Wz7fW6v+M356nbV+89njyXGt+RhtxB6m661G3RBlnufp6+k9v7Yob3tqpyiX
OerqPsRodYr6BMYhrnXcvI2SW0/nzFzUp1ynkZxJ02jn5e7vtTUon5Qf7nA2
D0qz/rQsV0dPN33KMm+5Tmttqzspl8eSG2+bHjFOl55Jrb3f/Vvl7vGr1zS+
6z32vP/Ty/A1a3ny7PHUuFYufhH1RtSV8Z2tT9tG7/m1RXnbUztFucwRd/Qh
RqpT1CcwFnGtc6br0c7XZ9naV2vLk67TSM6kaW49n7V5JU/LD3c4mwelWX9a
laujp5s+ZZk3XKc0fyaO6ToYvdzbyuWxTJ8/nR/p/jqy9gB5uX5RazU+z/jp
deK7Hzly13B+lK6TNFqZmvv+nqNvr/f82qq87aWdolxmr7v6ECPVKeoTGMuo
ca0oa2LeZ5TF8f53xczndUHqK6R9Bs/U/SOV/U9yJk1z6/DG/ZmTe0b6TBz0
rc7mQWnWn1bl6uhlqj5lmadfp+ke5DGGknum8G7K5bFMxziWjqXrz37iWmXv
/9QyvKWaadRbvbIll6/sddJe7/m1VXnbSztFucwed/YhRqpT1CcwlhHjWrm1
YKN83tqzs4X5d0t1ffz8bHtlpLL/Sc6mabRd47VpnvKS3DjSHffw6GrkQWnW
l1bl6uhlqj5lmSdfp+hTpblQ0e5Jz/T0dm8rl8cznWOXO/Tn6xHXKnv/J5bh
rdVMo97qlS135Cv6b3O1vC96aKcolyl1dx9ipPJZfQJjGS2utfZM6bR8vsp8
jmqaOxb/f/ZclKX3aJmmU/N1f0rW+IlnbFL72bq+n7kqvcKRNGO/Vmk6epmq
T1nmyddpuofxdK+j3u7t3stldenH1trqMf+OenJ9mb1xw72vr1FGGD/tX800
6q1e2VJjHFL8fr/e8+sd5e1cy/6jcplSd/chRqpT1CcwltHiWtPyOHfE2oRX
m39+9P9rnMdIZf/TtErTZD7mFzHZrf3Yc+sd3HG/96h1eoUjacZxLdJ09DJV
n7LMU6/TdK76/DnfHu/tXstldWlebp2kdNhToK64R89c47iH98Yaa5QRxk/7
VzONeqxX1uT2Qyltp8f4Y9rbgH16z693lLdTrfuPymVK9NCHGKlOUZ/AWLbi
RDXqrpqfsfY+cdyxp8L0+0VbJY4a8fmRyv6naZWmIcaOpnvNlrZvc/vTGm/6
TMv0CkfTjONapOnoZao+ZZknXqfp80HRN53r8d7utVxWly7L7R8e14v65us+
5vJ1ToxHHWmD9B7Xyu3x8aQy/Cpvjmvl7qGSfBV5KeqrKP88X7/fCPn16vI2
uaL/qFxmSy99iJHqFPUJjCP3zGouTnQmT9b+jK31/0vbKTXN9/saZb1klrVK
07jP52N9pe3bpXve+kDt0iucSTOOa5Gmo5ep+pRlnnadpmvoLD270+O93Wu5
rC5dlns+1Vy2NnJrWazdw3HPR5462gapUUa0LGdy/UX75O1XM416rFe25Pbg
XntmPv4t8tQd4wdPMUKb6+ryNr3HFf1H5TJreupDjFanqE+gP/G8SLQ34og8
tzWHanpELCnthxnH0l4EV3xGrnyZHnc8bzttK9WcLzZa2f8kLdJ03r6N/98T
M16L6b5dqzx4Ns04rkWajp5vUv3oHlz3pOsUYyDpWd+18qfHe7vXclldum5+
fTzH0c68nxR5fT5mGPd2/CzSJV5/ND16jmtFeZ2bRxk/63msvEdvj2tFfsnd
S1EHpXGGGCuIeH3kqXitubrnjNLmurK8vbL/qFxmSW99iNHqFPUJ9Gdrj6s9
x1Kc+orPmLcTpsddsfH0fGuUZTX3Hx+t7H+S2mk6v2+PPP8cbZN4njyt5zQd
e3q7FnmwRppxXIs0VaYykiiDUjm/9Zxvj/d2r+WyunTdtC1fc297Phb3c4yP
5MYN4+fpXo+/R7qcGRftLa4VeTf33XNHuh53rDU/mppp1GO9UiLK+K31XdIz
9b3HYqjnqvL26v6jcpmcHvsQI9Yp6hOglenc8NTvvnNfvjS/t/Y5jFj2P0XN
NE3r7KZ6r+aahsadPlM7D7ZKM8q1KFeVqYxkOi6y9Wxsj/f2KOWyuvTzpnsK
2PP6GpG/o18zHU9M+zPEfd7Lnr09ljO0M3p6R96JPJXGC+LPyFNnY8SMrWV5
e0f/cfR8Shs99iFGvlfVJ8DTtXpWZeSyf3S10nQ6/zue9dhazyDqxtI2cDz/
btzpMzXzYMs0o1yLclWZykjSfVpSvvR4b49SLqtLP5aeTdVXfw5xLfaS3lDu
rv6jfEpOj30I9ypAn+J55GjDtOj7K/vvUStNp3utxvMcW+8X7d/02hJpb8q3
jzvVzIOt04wyrcpVZSojWVvzYu9x9V4II5XL6tLPU689k7gWe0lvKHNn/1E+
JafHPoR7FaA/aS/BVuNFyv7r1UrT6f4UpetqpzZxyTPjqT389nlCNfNg6zSj
TMtyVZnKSHrsk5YYqVx+Y10a6RLH0p5ncZ3jmtj7+lnEtdhLesO2u/uP8ik5
PfYh3KsA/Yn1dVqOZyv7r3c2TdPebynN9oyVpbGkrc9P6xy03od2BDXy4BVp
RrmW5aoylZH02CctMUq5/La6NOJY0/0Wlq5rrJ8UB88irsVe0huW9dJ/lE/J
6bEP4V4F6Eu0Y1qv0aLsv9bZNI327dG9YqO9kNbkXmvjprWdxFHq5MEr0oxy
rctVZSpP1cu9PUq5/Ma6NNIlN14xXS/JHOTnahHXunp9U64T5UIv9Qr0pqf+
o3KZs64o69UpAPeIZ3lz67RE2yXaMi33YpjOaU+HcYbzWqZpLs2OHEvpHOcW
z1C/aW2g1nmwdZrxsbvKVWUqT3ZlX3H0cvmNdWnYeg43XRd7jT1Prfpv/h5p
PDetbTk9GEMu7aJsnM/tNAYJv9NT/1G5zFk1y3p1CkA/0vzwOKb7f0b7o/bY
a4wPxfumI1fupyP+bfrapf0R+FjrNK3VxtXu/MwVeVCaXeuqclWZyttc1VdU
Lo9r6TpFnHL67Ll4///f3ruk8LIsddtDUXinIGcOBycgDkCxr9hWsCmCTRFs
imBXxLaIbcW+OgKdwfm+396EO3ecyKq8V2bV80Cx117rX5VVmRmXjMjL2cy0
fzXyB2dAmwLUs5OfggxDLyP7Cf0RAGAfvN7V3BeN/2asJ5BPQ9xmPrPbdCcf
9w2skEHabC2r9Co6Fb7GqrEievlccvsQptfsvQhgPtg/AIC54KfAm1g1hgAA
gLVoLxav49O5yXAetOlZ0F7vgzYFGI+diZRes9bcIMPnorU4dqZHdKlttXYL
AAAAAN7PyjEEAACsRWN7m9uq+atfO4fhjdCmZ0F7vQ/aFKCflj3GRu2viQyf
jfKPf/Knf/az/KT1E3KTAAAAAO/lyTEEAAAAAAAAfBv2ugEAAAAAgBoYQwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAKzhf/73f3/1y1/+9q/+32/85v9dAJDnb//u73/1J3/6Z7/6
nd/53Z/Jjf5ff69/BwAAAAAAAAAAAACA8fjYfGteS/mxf/6Xf/3hvwBvRPmq
X/zWL/5PTpQPVh7rr/76b364UlnSv/3bv/9H1fORIQAAAAAAAAAAAACAPIrJ
+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
6KO76jbsUR7k/Vz82Ejy7+VWcqK/kwzo960xstb2VPmRXlJfs7GaxkLa70fv
WHveMcTYGHhnH3Bl/+2xIfRhOI1eu47PlGdXPxf6mNWuAPBt7s7RqrmiOVXy
N2vjP8pR1c578zbKP+8JbM9eff/IsxDxe55jdJv6ftuyv7DGnsoH21ru1Ef+
OjNkcESbQZ6R+YKRexvM0LvYiDPZoY/uqtuwR3mQ93ORbPiz5a0t9fcmN/p/
jYV67E5Pe0r+7vavsLmExPG+w6r+O8qG0IfhFHrtOj5Tnl39XOhjli8MALAC
zQGTD+r9atlv/Z3sinJgPT5quneCni279eQZsrZebfQ7EMN4jpFtanvCm20f
uaeh9f+vM1oGZ7UZfBNsBLRyim7DHv0E8n4+isf4sYyd7SOZ2eW8NL2L3tHG
Q/qv3rE35wZnM7P/jrYh9GE4gdF2HZ/pJ07xc6GOWb4wAADMQf74jPW1xDCe
Y1SbpvtYKbd7t9+HbH+p/6W5L/gLPzJSBme2GXwTbAS0copuwx79BPIOJdCe
cBr4x/BVRtt1fKafOMXPhTpm+cIAADAe239xxpwyxrzPMKpN5SdZ22nu4d3z
5HvZb0uwc5S/Pp9xpAzObjP4HtgIaOUk3YY9+hHkHUqhPeEk8I/hq8yw6/hM
P3KSnwvlzPSFAQBgLHbube0ZYaUw5l3PqDZNz7Mr3dPZ/LGSuVvmi319jtFI
GZzdZvA9sBHQykm6DXv0I8g71EB7wingH8NXmWHX8Zl+5CQ/F8qZ7QsDAMBY
tLZ2pi1kzLue3ja1s9+szWp8VvlhJf6VrbHnDNQxMriizeCbYCOglVN0G/bo
J5B3qIH2hN3BP4avM9qu4zP9xCl+LtQx2xcGAIBxyIbOXrfMmHctvW0q36r1
nFLNabH9oK98AVvXjb8wRgZXtBl8E2wEtHKKbsMe/QTyDrXQnrAz+MfwdUbb
dXymnzjFz4U6VvjCAABQh+bU6FxPj+ym7OjMPWPT9dR2YXf7mdmmUZu1XLl2
1rvpDFT5xV9htgzObjN4N9gIaOV03YY9+gnkHWqhPWF38I/hC6yy6/hMP3GK
nwsxT/rCAABQh61N1pWePSnbN1pnyzbouXbZ3JPo0r+lv43sCsTMbtNR/hX7
Ef/IChmkzaAVbAS0gm47D+QdWqE94USwIfB2Vtr1r4Gf+06QGQCAs/A2T2uV
pa9n6GzZU2zxfGa3Kf7VWFbIIG0GrWAjoBV023kg79AK7Qkngg2Bt7PSrn8N
/Nx3gswAAJyF1op73Z3OS4DzoE3PgvaCnaF/Qiv0nfOgzQAAAN4Ddn0e1O07
oV0BAM5Ce8dKT0tfaw7Cl/ZDfiu06VnQXrAz9E9ohb5zHrQZAADAe8Cuz4O6
fSe0KwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AADszl/99d/8cK0u82//7u+XlgkAAAAAAAAAAPBELCx6B2JjAADf5Z//5V9/
9Xu//we/+n+/8ZtPv8pR/Nu//8evfud3fvdXv/itX/zqH/7xn5aWrfLUXmq3
//yv/15aNgDsi/TSn//FX/6gm6TboRzVl8ZFf/hHf/yDbv3lL3/7Bz1rulaX
jZtUzyn6O9U7jMd8lFH9+X/+939/aEc9U3Ki9tV/1e76e/075ZyBvs38V32z
l0uAO+RDm943+TGdL53+pB2Vr/8nf/pn/9fHU9mWzRkl23qWykm/P62DEeOM
FWWsLGdV20CeXW3f22z/U/U82vcrxWyC9IX5/hoPwK/zZCzMQ2xsHDv7RVfo
3exdT2NXewawO5IN+d1p3K5XB0ju0mfVXpLdU1DdPR1HedqXkI7tae/aCwB+
HfmeFseRLkhlZle/cydUf1Hd6ZJ9tDFt9O/m45sd1XNgHOmcm1H9ObVbsp+S
HT1X/03Hbr3zTt9Wzq54v1NyClCCxkFpDOTqWh0nk0/vx2fRpd/0+P9pOZId
2TCbdy/ZSu2e/r8lrrKijKfKmdk2cM2utu9ttv+Jep7h+90h/S57kMq2dEhJ
jlr3fjHecRULe+pbn46Nnc7OftEd0hMnypHY1Z4B7IzZ7VyMrofcM0uvU2RV
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
Z3ReK4od2mXjdZV5Wq4r2ru9ZWyicZOfV6g6scuv7U79hla/K2rjVWe/RN9S
q2ut7kvv0+/TMa5yAqoDXarHtI71Z/19aYzHYmWpX2fvpXIjf3nmfBWVmeY/
9N2RDOq9rmRO3xTFBSL5NWwP5ui3d+UJ9UGrL/1X7WC5cP9stVtNHC5to/Sd
fd+IvtG/t+SupG5KdZqva+s/+m/Uf9KrNk/aI3uj+tYORPMzT/T7TD5WX7vE
wHvaL7KDI8YO3g94WzkzSN89tc/R3IZaX0W6yNv5XL1c+avpO+TI2UD93V1O
aoZ+lZyabdGz9A45m0oMp4/dzudIz2wvjTNGfk2Lro/67MoyVpbTQkvbQJ5d
bd/bbP9O9TzKd4/GArvsL5TGhnbVEyNiYSV5rWj9beSb9YxNnoyNvZUn/CL5
urkYTNS3dmMnPQtwOiPzWtFct6vLYtm7xMyuiGxsrf3Td6Zxi5welt+Vi5W0
xI+jPeNX+UxRu9fqa+ujJfelPqvqOsoFqh38PJ3cb+33tr4n9z3RGbQjfPCS
b43mo+t9/DeW9Fn1r+g7JKs5OU37tOqoJP+atlMubujf5a7P2jon//72/FSu
9M5XcUT71vQe/b3ln6P809U54Ll3s76Ry7tEV40eaO2HM/rWk9S2167U2NeR
1y75v573ivps7VyRND6Z00tvK2ck3geK2i/6rujy3xHlxUr6SYvNu3pnfd/d
fbP0q9VtqU2FdvzY6cm5Halc1cQyolzQiLUUad9aUcbKcmppbRvIs6vte5vt
36meR/mk0ZjP5qDk1pCPXCN0Req/7DqeGhELu8trWb+zMfdVbKU1LiaejI29
ldV+UW7/QWOkLZ/FTnoW4HRG5rVqYrPeLu1qw43IF6r1cfwzrsY4uXZpOds0
8iFWzdWNvqGm3jQmNF/v7j6f07qLLXlbkjs3VH0zN5/c3kvl6bLf9tqoO9K4
2NV3+lxcSf+J4nxXa86sTkptqO+PV+3qfejcb20fp9xec9bWUR49kg/Vr7Vj
LlcX6btIj9kasdyaL/tG1WO676ju0ztEPn1J/xYtsjezbz1BNHa507+70mJf
R1xvyGuN2KcqeocZ+2HtVM5IUp1xJX9362P9t5p9vrLRV0Q2oKYe0vvvdOAs
/Zr6HVexhPRdoZ20jz45R0J9wvye2j03oxjliP2O0761ooyV5dTQ0zaQZ1fb
9zbbv1M9j/BJo9ivPat0Po3efcY4J10HtcNZjTlGxMLu8lqRf3gVq6yZg3T3
Hqxj72OlX2Qyc6VPRtnymeykZwFOZ2Req9QvKLVju5Bbh1Zjy6MY+JUtvlr7
VrtmPudDrIhBt9ab3i2331+EXxtfOkfE+2h3diCKkdvan5R0T7nR/Tr91ru6
bJ3DEemF6DvsdzX+i4/XXX2D77slZ3hHeuhuTpePiVjb3cVF/H13spnLsVy1
SW49QUm/qpW9FX1rNTm7tGMODq7pscHReHzEO3jd97ZyRuF1eWnupdamRzq2
pJ/4sWVNbCmdA3HFTP2a+kp32LdCG94/f2peXm7ei/phSZwvGpeMWEuR9q0V
Zawsp5TetoE8u9q+t9n+neq5x/czruZe653SvfBt797c2QKj16GcsAfhiFiY
uMtr5ca2V3sTttTZk7GxN7LaL7L9B6/aa4T+ms1OehbgdEbmte7Ohim5Ws/J
nknO9tWQi61e2eJR7ZJ71oqxeG9/KPWd0phU6zzr0j4Y+bgrx6np+RklRDaz
5H2jOF96n8Xoan38Uh9W+PYpadsornn3flE/KMmh+ftKYqG+nJI8dbSneUtZ
d+OPVX1rJbn1bnAetf356t4WO1rynLeVMwo/n+EOr1tK9LHR0k8iu1HqI9m3
PaVffQ7sTgfbt0Ib6bhp9ZzY6IzX6Crxy6LcaYs/e+WbrChjZTlXjGwbyLOr
7Xub7d+pnltsuic35/HOzkf3ta4RynHCHoQjYmFXz7Erl6fIrbe7u++K6Dm7
1v/urPSL7vYfNEbq91nspGcBTmdUXiuKu7Zeu/n7uTqqIbevztWY6aqOan26
6Bkr1seN6hNX3+x9pNrcqI8d3a1Df6IejfRbS8uN+m9JHUVnhqU5mNYzA/yY
/+pdWvJGkc9cQquM1ZbVWk7LmSs1Za3sW6vI2aWaGDnsQ48d7LXhpc95Wzmj
qC3Dz82tGSe39hNvm0rmHNgc1Tu/YaZ+bfGBZrVzrqwnrln7vqX9ZOV4Rfb+
6qwRf5XkdaKxSa1P5+8v2c9sdBkry4mY0TZPs6vcRveM+r4eVr3X28ppeUaL
bo/0Q+l4JRp/jRr7+3HKrnphRCxM3OW1rsidc66rZVwXPee02NhI3drDKr/I
+k+JbR6p32exk54FOJ1ReS359HaGTO+6rd32BB1hy3PrtZ7Ma61Y69767vpN
6T6E3s+ptadR+16940o/wZP2o9Jye/ZniepGsm4xx9o9MUW6r96dH9qSo3o6
r1U7Ji8tJ5qrdld/NWWt7lsryOnunXJvUE6P7l01dnhbOSOI8st3tOpx0dpP
In1Wel7WXSxkpn71tqHkrMOVuf2oj624ZvhmqU15eu90fZ/e4eo8ujsfLZKz
mvVEkY31Za4oY2U5JYxom6fZVW6je0Z9Xw+r3utt5bQ8o0W3R+9RmkPS76Jz
p0fkoNI5PDvrhB3yWnfnbNUSPeep2NgOurWVVX6R5E3tXHqe90j9Poud9CzA
6Yzch9AjnWO+vWx1zVy2ndZs5cYlNeTs+JX+H2mbomesyB/2vnvqS+bu6+2z
Ub6gpl1W5rVqZOjqqmn7aD9C++/seWXR3lB3vDWvJfycgbt2rCnrib41m9x+
7JzffiY97dhrw0uf87ZyRtByXlZ0lkMprf0kil3djdFt3fLdGHu2fvW2oWR/
pVWkZ5asvEb7J2n/2C3+mJ7p6q+SHKe/R995JTd6Zm7ufCQzK8pYWU4NPW3z
JLvK7a627222f6d6brXpV8+ozYPM2p8i1Q07z7kbEQsTPXmtu3tr9WmNjzWS
XXVrCyv9IrPvpXIyUr/PYic9C3A6M/NaERpn59YupddO+0SNsuW2pk1xEP23
9hynHp/uKds94t2tj0b3teYwPD7mdFU3I/zrFvycd1sf2XqVEu1HqGtmzMxk
pUXu3pzX8rqzds/MXFlP9a3Z5PrQrvt8wDU9svO2s9ZPOms40skl9qP1+3r6
iY+LX+lY05t3Y/kV+jXny+v3O8fOT8JyH5KRHW2I3inSCyW5mdy4TN+ssYrF
xWyeov5NfmGUR8rlrFeUsbKcGnraBn7OrrbvbbZ/p3rusem5Z9SOVaJ1571r
e07Zg1DskNe6O/PklNjYm1jlF1m/qcmdjdBfs9lJzwKczuq8liHbFMnyjnZl
lC0vQXpbY6u7vRxPsd0j3t1sWXRftE9PC76Nr2JZI/zrFrwvuJLavRpbkD+k
clT3uvTnlvZ9c14raocRZT3Zt2ayUnev4E1z/FrokZ2oL4x4h5KzZE4uZxS+
nJK5S63v1dNPovXbuRycxcHvcnQr9Gsubm6XbMcucnwi5ovsfi5SFPcrlZ27
8WB6KZ6reqjJA68qY2U5NfS0DfzErrbvbbZ/p3rusekj36NmDmwJqZ7abQ2w
Z4e8lri6t/c8RXRyHav8onT/wZpyRuiv2eykZwFO56m8ltFy7tRqZsdGNdbR
eCr1l8hr/fpzovtq4/w5onmaV+/S+z0t+G9dvVdnlPsb4cdYPkv9X89M1zG2
5KjenNeq/bbSsp7uW7N4W17ryibMvFbpuDt63ivyNWqJ9sbz83XfVs4o/D5f
dzFjn1+qiVf09l//rrl4k9msO1bp1/TsyujSu+6yN+FJWL3WnNX0JLXrulMk
d3YuVNqXlDO19U6p3+fHKiX6Y0UZK8upoadt4Ed2tX1vs/071fMIn7R2H/eI
UTFoI52LsvvaTfJakLLSLzKfvNZ/HSmrs9hJzwKcztN5LZHLbe1Cbt/1XjSm
8vNrVZb5a1ftMiKvtcKHGvHuV0T9t2XPnZr82MzvqXnH1bHmSA569wu1fJY9
y+fJyGv9nFV5rV3yGL2Q1xpz7dIfet5rxJrTSP68HX1bOaOI1ipc7cWcrtWt
nUMxo168X2HvV1JfK/Wr3vNq3ZYu2fKd1xztRDpP+ISclohkbQbR+aej97xc
UcbKcla1zZvZ1fa9zfbvVM8jfFI/HmjJX4yIQRt+7s7u+wWPioXtntfaPb+4
A6v9oqs2772eHt/upGcBTmeHvJbpx119/VwdtaJ4SMkZ3yP18FO2e7YNGbU/
3ol5rZU2K9oPsOf7fewtF98kr/Vz/Lfd7Z9cWtaTfWsmo3U3PMtI2Rk1dvDP
eFs5I/F2JDcmTn3ClnHziG/yPprXiRYjK4lFPaFf0zkj0bXrGVE7YXs7npTT
Mnzbz2BEnHiHMlaWI1a0zZvZ1fa9zfbvVM8jnuHzMi3nz4zaI8Y/64SzcEaN
p8hrnc0TftFVm/deT+e1dtKzAKezQ15L+HjHTjY+F9OvRbYgN98l0j8j9fBT
unx2udEcyxafxMvB1Zj2Kdvh33HVXtyK29lac32rH5PX7qNizytpL/JaP8d/
210fKC3rqb41m5zuxt87k552jPZpuFovFBH5Sz438LZyRqN3TPW//pzuB5ae
vSrb0jJuHiHvvm5SO2fzrEv15JO2O+dz6trJz94Ry3WcaC/SPM2Mve4i2zp6
vcGKMlaWY8xum7ezq+17m+3fqZ5n2HRdvc/okd+T9iAUo2JhM/Nap8TGTuYJ
v+iqzXuvp9t7Jz0LcDq75LW8XO+0L2i0b4SumnjL1Zneub3cRunhnA+xYs37
bBsStU1L3/FycPWMp2xilMPrsVul95oPY353pDNqfPJUDu7GBOS1fo4fV9zV
e2lZT/Wt2fh9Plr6K+xDr+71Nrh2H1V/DmMuL/C2ckYj/ZDbI9Teo3ZclzLC
Rusd/RwOe47VW+le/0/rV713rr7RhTG231RPP3yStL1Hrz2KZGN0P1pRxspy
Uma2zVfY1fa9zfbvUs8jbHrJ/sJ31MyBveK0PQjFiFiYmJnXqqnHJ2Njp/KU
X6S2arkiveGvHeIVu+hZgNPZJa8l0nLvdKZ0keRYc1H1DbPtULSfS41flTtD
7MonuGqX3rzWqjmCve9eQu/6IeHnNF/Fq2Z/T46oHVt9C31fid0z/eB99yhG
VuLb+rzMXQ6SvNbP8fr6rs5Ly3qib60i2uN2xryJp+d8fYFe3dsbk/B6Lxf/
fFs5o7G9mK395L/ZGHMEo2y099tMb8jnqPEzVujXlnO+WvrMF+iJ3ShGskNc
bOZagBH7ee1QxspyUk5bp7Eju9q+t9n+Xep5lE338YLSuSnGqD2FT9uD0OiN
hYmevFYut6arNvbzZGzsRE70i2r61pPsomcBTmdUXkv6Ss/Sle4pU4OVKbt5
RZQjsr1sZhHt5VJqy3NrBu7q+Oqe3rzWqvVwve9eQtQfaucPpePMu/43+3tq
ym7xwWx+6p28pPsF+vqM+nSJb15re8lr/ZxUD5W0fU1ZK/vWSiIbp3ccOUdL
Omj0M+HX6dW9Xm/d6XqPH9Pn2vtt5YzE9iGcWdYoGx3FUGxuRu18ytn6Vc8s
iRtEewnBT/TOR1a/2MH+pe07Mp7k7ekMWV5RxspyPLPa5kvsavveZvt3qedR
Nt3HC2rtuI8FtZ4vlMYcat/hSXpiYUZPXuvq3tp6fDI2dhqn+kWn+Lq76FmA
0xmR14r2WJGM1eSL02dc3ReVlZY5a4wQxQJKvy+3J/FdHV/d07PGQ1ftHKVW
et+9hMg3qel7fg/MUXu7zSDyKWvnZSi3VBJTM7+7dB5fybvU7vdCXuvnlJ5L
1lLWir6lMaDNf1gVz4n2GWr5ttyz9c0rz8/9MiN0r49rlLab9z3uxr9vK2cE
5gvNtpkjbbTfH8R0Sa3+mq1f9bzSuIH/JvgR82labYPlbJ8mle2Rcu3HMjPs
3ooyVpbjqW2bJ3ymU9jV9r3N9u9Qz6Nsuh8f1urrdP+H1rU9PoZ90tihJxZm
9OS1rmKWvXtK6loVGzuJk/2imr7lWW17d9CzAKczIq8V7fNkl8bPJbJp6zju
1nzkzqiya9a8l5492O/qOLKjV/m7Wp/O77u60r70vnspfh2Q+mTpfIXUTyuZ
r7nie3Lk+kVJPEvfZbG1O9/N+uyd3x7F/K7sf6QfrmiZW/7WvFZtP60ta3bf
itpy1TzF3NyLnvGk7lX/Jae1jhG618cUSscAfsxxN855Wzm9pHp5NiNtdKS3
Wvbum61f9W/6TQmn7oE0E2vn1piA1enV/bIT+ne100y/0fzhkeuP/DhGvuFo
u7eijJXlRNS0zZM+0wmssn21cvs227+DjzHSpvt4Qel8EF8PretPUv3Tu+/d
KptijDiPsCevFc0ParXbT8bGTmG2XzS7/9b0rZQnbO+u9gzgJO7yRCV9/up+
sxVXds9ksiWnMCLeUIrXHaVl3a3XUhuk332XB6v16bwPt2pclNsHeca+r+me
ebXlpHnZkrk6/ntWz+/Jyay+Nyc/6i/2nXe2Mm23u36m3/p6v5KLmr259ffR
7+8Yldcqbdda2WyVh9p+2vJuM/tW1JYr5Sfar1Tf2zLWVn3oe8hprcOvq621
gympjS3xO2rX9L61nB5S3SIbIb9oxpnNI/uJPc/rrtZ41kz9as8q0Wdpf2Fu
572PXnPl7EHkK13ZPv1ecQddNf0t9X9G2KY0p5rK70i5XVHGyHJWtc3TPtMJ
zLZ9tXK76r3eWk7Js3ptuo8XlM6DHTUfJNVBPfGY1r7ZS2sszLjLa+V8mNze
G63zN56KjZ3CbL9oRf/171HKU7Z3V3sGcAIlOqvE579ar5Ve+p3FMnRJ/uze
0nVdd2XNHKO37n96d76W1Y3q2uIe+u/Vt+o7pYtKvtfrsFV7WeTyc7Nyj9F8
6Ls+VRvfiXJ1q+NCV+em6pLPbGun9W5pP/I5VI/+zfpg61yRK/+w5Gw8taP5
/X4+VWq31Y+jcqJ7SuavtLRr7vyVK6Lvv+unab2VtkskDyU+z6y+dfXMVfSc
zahv0+/sm2fE3SBP5K/07Neejmnv+mAah+g5z/cN5bRy5wN5H8EuyWzNma2R
3uuNV6R6o2dO7wr9WtKeZuNn7t19CiNjN1exzsj2XM3V9/6//r90ntGo+Ra2
f1Da90fnwFeUMbqcVW2zg890AjNtX63crnqvN5fjGe37Rc+sme/Zo199HLpH
T/f0zR56zwK6y2vVnH3Q0xZPxcZOYIVftKL/+ue33rfS9u5qzwB2Qvo6zSfd
rdPyfV732P1e99/tmXd3KeZQGrOIZDK9Zuedfcy81J7m1k5Hl8VL777VfLGr
uvNxlBXzstVHotyCtw1qq9FxYT3Tj11zfSL1kUriXvquq/nWK2nxOVTnV/Ut
uW45y/ZqXwBf3l1cL203G7fk5s1E7xjNRbF3yWFnJEXvcBWr8PWV6suavRjT
PuTrS89J67c0p5XrqyVjgBl9S1zl6Vfi41tpu9nZtmbrpDvULnaGltXhann/
Orm1m3cyekWaw7/S4aktu8stfKGcVkr8mVKbkCOnk3v6iUjtVm+ObJZ+LbV3
aflPnOO9Ezl/ofW6qs/Ix7iyfbn3Utt6G65+b/6syumJz/n5G6nNG6UrVpQx
s5xVbbOLz7Q7M21frdyueq83l5Myw/czvC3O2VnJtMli75wBv598Dz19s5fW
WJjweS19h8ZaV3Uc+U09bfFEbOwUVvlFK/pv67OftL272jOAnSjZ2670imQs
Fyu8ujQGqB1/eXn3z5uNXwddagtzsXNvo9PnRXvrpVdJfKV2TWsPrX1s9Hxx
1Zuva/UZmwetejObVTLP8i5H579lVawo9bVr+lVErm9efY/+/i4/rrJ9P72L
6/mxf67+U3nXb0reRc82P1j/vZNJ6yNpH/Vxktyl94lk1P9O/rzfoytdu1na
htaOJXrY6iLHyL6VPlPjRpuznD5/NdKDapsam2XzO1ijtQa1T4l8pv25xZak
dkv32xwey2fav/WOe99WTi0mc6Xylrsie6TvKtVXrf6G6eMRc3pn6NecvrIc
va50z2/2HrmeM1N73fnXkd9Tmn/M2aO03/eclWDno0d79NWslXy6jFXlrGqb
nXymE5hh+2rldtV7vbmcVb6fsHNy0+epfS1e4NdD9Nr/lnmKOUb0zVZaY2Ei
zWul9/l9YtUufiycfmePLl8ZGzuNVX7Riv7rn1/KDrZ3V3sG8BWku8wP8GN2
8z1sPnyPDbG1TKZ7LWexinR9Wu36TX17qo/0DbZHe26eUGrn7felY6SWM3ne
guou8o/VX2wfxzdg+1Gmvp/a/apfPU3qM9j76huifu3XLuo7T55n7n0K++Yo
T2i+zFNtOLNv2X4cPfvUj0DfaHoi1ZcWm1L9v0VXQIz5Ln4v4NHy97ZyWt7L
YkPpWsjSfLz5QE8gfTd6/DdDv/q63cmefB3VvcVJSvapsLU+3jaZLI8YT9l4
xuTQ7N3IPrKijJXliBVt49nFZ9qZGbavVm5XvdcXyllFZItNl6jNR51VmD57
xLhiRN9spTUWZmeG5urU5uD4dbbWt0bMLfpybGwnnuy/NTxle3e1ZwDwLtJ5
x7vaxHRODOdhAuxBLq/1NWyPdvZ/AHg/tkdwrb6zPbRtLLazzwUAMAt8JgDY
iRNiYR5iY1ALthcA3o7NhdW8jx3z3WluHwD2gLzWj1icekfdCQDjsL0vemMI
diYCY0sA+Br4TACwG7vHwjzExqAWbC8AvJ30rK/d9ie1OTQrz4UHgHvIa/0U
nz55P0kAuCfdz33E/jHoDQD4GvhMALAjO8fCPMTGoBZsLwB8BTsvYid7bmcN
YrcB9uPreS35iLavMwC8F3+2eC+2f8yI/BgAwAngMwHAzuwYC/MQG4NasL0A
8EVsDojs+ZNnsqv8p98DAPJ8Oa9lZ+ywjxjA+7E4wghdZ3OCGV8CwFfAZwKA
U9ghFuYhNgYtYHsB4MuYDtQew8rxr0TlKeaDDgbYm6/mtTSWkG485WxhAOjD
57Xkn7ToO90j3cE8WwD4CvhMAHAaT8bCPMTGoAVsLwDAT/NCVttPlac14OzP
A7A3X81rAcC3kD/i9Z0u+Sraqz4X89B90ovyazS2tHvIaQEAAADsy1OxMA+x
MQAAgD5Wx1+I9wDsj50/ml7sqwUAb0X5qyi3VXppni3nNQMAAACcw9OxqafL
BwAAAAB4E1rPrv0QcnFb/G8AeCPK59uZ4qWXdCX5LAAAAAAAAAAAAID1+DNm
7i7FfwEA3obyW7YvjO0vmOaxbN8a9owBAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeB//7zd+k+v/vwAAAAAAAAAAAAAA
AGBf/vO//vvxfNIuFwAAAAAAAAAAAAAAAOzLn/zpn/2Q09F/AQAAAAAAAAAA
AAAAAHYkXaulPwMAAAAAAAAAAAAAAADsyO/9/h/8kNP6q7/+m6dfBQAAAAAA
AAAAAAAAACDkn//lX3/Iaf3it37xq//53/99+nUAAAAAAAAAAAAAAAAAQn7n
d36XtVoAAAAAAAAAAAAAAACwNX/7d3//Q07rl7/87adfBQAAAAAAAAAAADZG
8+KfnBuvshXPBACA76J8lvJa2AOAPWAvUAAAAAAAgGdgPAaQ59/+/T9+2PNJ
55j8wz/+02PvobIVy/y93/+DX/3nf/33Y+8BAL/On//FX/4gn7pgLtJ/yvP/
4R/98f/tx2e6Ue2gs6feir5b36rvHo3Vq+pQdalrhzVhyNazSJ7UF56UK41T
1Df1Hibz+q90gP7+qXGMyv2TP/2z6hyzfq/7Uv2V6rBVPt4KmX+z/Kr9VWfW
HzVegPNQu6mf7mDv4NdZLWdflWuTA33zm/1o2Bf1OxvfmT+S+ke6bJ63l0v9
nfrvKehbsTvnset4JGLG+M3GDWYj7VI/bhkPjaJlPLZTW+4ag4H3YPs9jfBr
vfxfXTn9s0uODQB+QvKayi/MQf5FGiO9ut6Y/9f3S/df2YhaVEc2rrK6M79w
B98c2XoOGw/d+SWzsVyu+WLqm3oX/TfNC41YT5/KWOml35fKivw2kzXdJ1mz
vQA0jkrL1v/PkMGVMv92+VUb+b4A+6N+LllUv0/l4I199A2slrOvyLVsgc2x
8HaPvBasQv0w6oMWK7cYb843S/Nfes6upHbHfwucwcrxSA8zxm+WN0rHKDZ+
0ZV+v+SxN049ezy2Q1vuHoOB92CyOyq2oJyUzUO5k9Mr/aN3MXl7Wm8CfB3J
I3GR+cj2+7UNJf7Nm+bZmg8mX7UXG0emdbXbPDNk6xn8eOipOFc6Z/4qXpH2
Y/2+pw+n45zSq3R+cPqe+nP0npLLNKY6UoetlvkvyG+t/w7PY/MVcxfsx2o5
+4Jce9389u+F/fA+SeofKSae85Gu4mi7xsXufEvYmyfGIy3MGr9pHGIyd7XW
Q+WkstmzdmvWeGyHtjwhBgPvwfraiPhhhJ/DWqt/0tzWznNTAN6On9d5kn96
yvg1io9K/9kcvitd+pbclnwg+6ae74nWvKkP77i27WTZOhGfU3k6zpW+i/48
6rc5WuYG6iqRHT8+qvl9rw57Sua/IL/RXAvGpWegdvpCH30Dq+XsS3Lt5+Cf
Mi6As4li1rn5PhFpHOykfovdOZPV45FaZo7f0pxWyXoo/b637JnjsSfb8qQY
DLwD8+9q1jK2cCWXJTpAMmAyf9J+wgBvwc68O9U/PWUcYLmrq/ksaotcjmvU
/ITWs3RGYHapZx6DfE2fH9x1buPpsnUS1q8VI1B/UN1H46OVesLHPO58/jTv
29qv79ZxtOqW2m8RfkzX6o8+JfNfkd90vK/rqXMFoI1ojiHsx2o5+5pce/t5
wrgAzsSvlTD/pjX27f2bE/LP2J2zeGI8UsqK8VvLnnxp7qbljKhdxmMj2/Kk
GAy8g1SOZvuxvXktkcrn2/1ugJ2wuGM0X+wUThi/mk4uXbMQzTvt/UY7V9Ti
HKvP8UzHQK1zelSPPk6+a7u/QbZOQn3K96sn41y+7NJcrpf9Wlmx8cbI7/T5
qZocux9/1c4VfErmvya/+l7V6wnxtK9QOh4ivngOvXJWO0b+mlyT14LZRHHd
3vXoqQ5fPTZrBbvTz6qY51PjkZr3mzl+83219Dv8mq1aGZ8xHnuyLU+KwcA7
8OssZzMir5XGTN6y3xbACdh8GG+7T/JPTxi/yrep1W3RXKXWdU7yRaJzCFbO
I7C5ja3zeqJ5Tzu3+Rtk6w081Wf8GKL07GG/RqhG5k1GRu897XNTNTIs/661
DZ6UeeQXnsT6XQnEF79BTZ/4Kif5iHAefg2kxa1GxPttDs2ss0NGg93pY6U+
f2I8MoJR+tzvmdf6DjVjn1njsafa8rQYDLyDdG7pin39RuS1RCqn+gYAmIvZ
KLPTp/qnu9tX811r8znRXKVa3ag6MZugsZcfj62aF2jjn9Z9yKLx087r3t8i
W2/gCT88yuXU4O8tlRnLHY/OV/uceG0d+v16StZsPSnzyC88jdntEogvfoOa
PvFViLvBLHJn5Yyai23zh3Ye26Rgd/pYpc+fGo+MYJQ+92OQ1neokc0Z47Gn
2vK0GAy8A59LXeHPjcpr+Twy8gIwDzvXLs2TnOqf7j5+1fyC1nxO67m8at/U
j9O8Af1ddMbxijVbFhdv0evpGYw1cfGneJNsvYEn4lxezmrn6/kxWInc2Lhj
dK46Wq9Uq8sivXP1jCdlHvmFp0nnFpdAfPH91PaJr0JeC2YR7Uk8MlZlerx0
/cXTYHfaWanPnxiPjGJWXqtUxnweqfTbZ43HnmjL02Iw8A6ieSQrGJXX8s9q
jQMDwD1m29J5Zqf6p7uPX+0c1BaiePAdqS1QO6f1EtmJ2Wu2bL5FaznR2cyz
9vgewZtk6w08EefyfbZ2vwe/z0TJ2MXK1H8lc6PnEPf0Xz9v6W5c+aTMI7/w
JH5+YgnEF99NS5/4KuS1YAZ+H7OWmHIJ3vfYGexOG6v1+RPjkVGM0ud+jnDp
N/ixS+k4ZNZ47Mmx5SkxGHgHvTncVkbmtZ6cEwDwFXJ7HZzqn+4+fpVP0+oD
+HFD6ZmJ8sVyceOVa7aUR7O1Wi1lRPs572wX3iZbb+CJOFdvn63NJUV7lpq+
0HhOz2vVQVE8p5Yo/pHbJ/tJmUd+4Ulaz3IjvvheON+vDvJaMJpIv87qWzuP
bzzYnXqe0OerxyMjGSVz0TeUrNlK80ClcfWZ47HVbXlaDAbegz//oPdsP8Uj
1Xclx3Yui/6sv0vXUUWy26p/fB551dkvAF8h2mPJONU/ffP41Y8bRsxXWLlm
y3yo1ud7u6Zr13lCb5StN7A6zhWN9WvLrH2G951yl8ZUvfONWvpvtCd8Tpc9
JfOnyK/tJ+vbxfzznrpSO2kcqzrY2Z7q3dTnrQ5sfKK/a52jYc9M+5/qQflX
m2s7cw8JxViis1tK3/3uPtWL5D/9PptL3MOMthiF2k3tN1JW9L3ROng9z+pW
/eZqfnapnPX0iZbycsyoRxH1SXuuymt519X2PuKk+hKzdN/OuqGGaP/BlWtW
RjKyD93ZHfVzPTOtP/3Z9sVvReVG8qVn69v0jTvu9zRKn9fwxHhkJKPKjXJN
aosrO+3vKS171njsibY8KQYD7yHK//fkU3VvpHtTXWA+yZXM1spbaz59NnoH
6Z+0TvT/pg/T/N+pvs5I1O5PXDv6Mbshvy9ny1f6WiN5cvw6m1nnDq5Ys5Xm
z1raJpontPOezjvL1pd18urxWCRbI8YeOdnPzQ28G0+Vtk2U12ppV/+MKNf9
pMzvLL9G2rds3mcaT7dLbVbjO+ubNRZPfdyrPhvF+fx15QvbmZNXY4vce1rZ
5m9H76L6KN33RX3Z+riepfJNf/n3nD3/o/TybXMVX9S/RbGJ9NJ318r0jLYY
hcpLY+nq2yYrUa7h7tstL5TWo7WByorqN1pbXyNnvX2itrwV9WhIN1md6b96
Xk7mVGZN31xt71NOq69Zum9n3VBL5JOs7lcjmNGHruxOtM7fX7k1+zlS+fI+
kNdz+rOfh++xXH/u/SIif7ikX4zQ5y2sHo+MZmS9RH0y5/Or36R9o/R7Z47H
VrflaTEYeA+RrLbmg67yzLKFqZzn7H2rvEVnMPSuO+vhyg+w3J8f07A+8zrX
OfM6zc9cTW6PJaPEp9uRN7e/92NGjgF9LGZ0zM5sSWuuPxpvWMwzt2bB5gKu
7gu7y9aXdfLqd4p8qNr5bdHYKOcL1Y6XU3kv0SfROH7EPPpIDp6S+d3l14+x
o28tnSNqWH3mch539am+E+Wm9LzSuGr6zne5FRtvRGtO9C3R95eMg6xec3bK
f+doLLaci/3av6WXl9tcfDEdo13Fl3XVxCtmtcUI0m/OybMfM0d9z3JZ/lyO
VD6i89Sj39TKWU+f6JXr0fV49dxSmauJA4ywVS2cWF8zdN/OuqGFSI6iNd07
M6sP5exOybyX2rpMv0H3RD61ZMn3r9xv/bdH7Xx3T/Sdo/V5L6vHI6MZqc+9
H536RqkOas1piZnjsdVteVIMBt5FqW69Izculsynz1N/zvn6Pe8Q2cgn9iL0
tjGn0yKZRpa/HUPdFVvTeZVjqPHpduLN7Z/ql9FjqWhewqg1W6nv1NIuuTlP
elZp/FZ1t2K9/Amy9WWdvPqdRuzbJ6L+fIf6osZn8k1KYgt3+3CIaN5Ui56I
yk95SuZPkN/U374aY9/NJU7f3eY552LgJXIS+ew18xjS+6/aLY2VXsWB/bjk
7nzrNAZxJQfpe87kav577X138eVIP5TE0ma1xQjS9rxb9+e/3cd2TI9eyYfq
QJf91v/GYj89clbbJ0bI9ch6vPqWq3fxdqfUbrd8by8n1tcM3bezbmghmmt9
Z4N3Y2YfinSTPSOaC57Ltd+t2/I5rbtcsPcX1b/u7mk5QyryWUfr816eHI+M
YLQ+z83Hsn5odt36TU/OffR4bGVbnhSDgXcRnVvQIvs5+33lp7Wux80R6Xtd
K+XC5+mvfNRI7gF2xPZYupKlU/vyKH9nN7xunzGncdaaLRu3ts7puloLrL6c
jpdsH43cXkCz9zl5s2y9gdHjojui8UsLUb+v5W7ufslzI1lskeuo7LtyVsj8
7vLr/eLSGGTJ743I/y+VEz8OiPZfy2GxpKu1Qmks+O6daucVp/3nDvvOmYzM
a9k+aDmiczbv4osz26KXtA+X7G9VMz8/kg/pDR8PSvd8jGLfLXLWEwdtKW9m
Pfp8xtW7+O8u3bNstb0/tb5G676ddUMrufjtSbHamX0oF7O7yvvl6jTnp/hc
cKlv5/3wuzxMq55dqc9b2Gk8MqLcEfr8KreV6qPR++j3jsdWtuVJMRh4Fzm7
UktOzq7inHf7iI7aq2bVGvWWtac1dhPgCe72WDJW+lojGenv7EQ6f2yWbpmx
Zqt0Dv4V0dinZO5UdF/Nvli1vF223sCMcVFNeaPGHj39Rv3/6tzUq/6bO2+5
VqaiZ6Q8IfMnyK+PS93hx76z48FR7LzUZ7dvuyorPf+lhGjsH/UF36/v+ot9
50xG5rVKxi9edu78jFlt0YvP0ZWUEemNq/jLCB0YPWd2HLSmvNn1WNNH/XeX
+sAr7f2p9TVD9+2qG3qI/KXT9iCcKXOtdifa7yk3tyWdN9O6Ftyuq7HtW/Na
vqzW8kY9p7fcUfr8LrdVc/5hLa3jsZVteUoMBt5Hbi/PGq7ysndj4tx9rfqn
RsZH4nNapXvNr35P2Iervj/zqpEr86FK/MEnfJar8nesz5Wkcw1mzncZvWbL
xiG1ZwJHz0iv0nxb5FfN0M0nydaXWS3vvf7Y6Oek5M4EuIvRRvJYK1P+fi83
q2X+FPmtLdvvJbQiHuxtSIn/bOuRr+xNGgMq7W/RmCjqRz6+VNLXZrf9yLxW
CdHYr6SM0W3RS9rnS9d9+LOx7uLVo3yKWjlbmdeaXY9eT9TEmUvXga6096fW
12jdt7NuaCXaM1JXz7jmCWbKXKSbSuYy5s4l9Pe29NMU7+uW+ho1ena1Pq8l
6sNPPqe33JH6PLcfc9pfZsZeasdjK9vyhBgMvJMRea2rs7LucrO5+1r1T/Sc
FevTUzksnYfn/Z5d4+Mwh6u+P/Mq7Wfqw7LLpXuXP+GzXJW/W32uJNXrs/2B
2nltV9i8zta5zEbUTqXPi/ZX6n2fqIyTZOvLrJb3Xn9s9HM8ubOTa+bxmkyV
jvkiP9XnPlbK/CnyG8XW7lgVn0mJ8iN39Wr3lO5ZVPo+pftm+jULJX1hdkxz
dV6r5r6ZbdFLKvs1vou+Q3pI7Xqna0bZkdrnrMxrza7HdI58yx5nJay096fW
12jdt7NuaCUXW9sp91bCTJnr0U0lsW8fm6zNMURtmOuf5LXWPKe33JH6XM+6
24+w94ytO2rGYyvbMvrNTjEYeC+5M65quJLpOx3Sc2/p82bv7+f3USmNI/v7
Sn4vW57qMMm6vk/+Ruu8gFnPhWvSvWVXXqW2weYSlvrhT/gsKa31kcrtzPpc
ReoTlK4b7cXbkdY1W1dnS9Tg+2Lt+8yeC3qabH2ZmeOikvJ2HEdGe3Dc6Rq/
Dsj8jKv6VKwsN2/K64iVMn+K/EYxkDt/Ljpzt4QeOYnGsXc2wPzVq3jqXcyh
9MqNIfxc9tkxjDt2zmvNbotW/Dhs1nhnlB2pfc6qvNaqeiwl2t+0hFHtVPt+
p9XXSN23q27oIfJ3ZvanHajtQz26KbrX5zV79J6I9tDO+SXktdY8p7fcUfKX
5tX156t9Ae03sygdj61sS//vu8Vg4L305rVya63tqp3D1qt/Vvs6fjxeI7up
33P1jvIVrs4J9N9a6h/Pei6cj/lONXmRJ3yWEbxtvGFxYMX9VuXcRqzZMj9x
xF7KvTYgsmuj5oJ+SbbewKxxUY5Tzmn2446S5+fO/JYsSP5troCebXpM/lUU
I/L+yCqZP0l+I71cEntsed9eOfFtfOVLW1tdtYFvT/WHnisiNydfv289G7KH
XfNaK9qiFd/vZjHKjtQ+Z1Vea1U93iH91hPXWGXvT6+vUbpvZ93QQ65Od5sH
OYLWPjRaN6XtPyr/4/MFuT721rzWKeOR0nJH6PNUd6dxjty+gLNtiSgZj61s
yyvZLGFmDAbeTW9eK9KxNc+5uveEvJb3TWtiuWlOKTcHxOJAsq36TRrLke8Y
zRGoOZtv9HNHsPs6preT7rFUUycrfa2RrPA5VmG5oSfWbPes2UrnB4yYkzPC
BpSOZ2o4Vba+rJNXjk1E5JO1MNsPiuaylpCLh0WX/BT1gZKcxwqZP1F+fdkl
e+G11GOvnET9KedvWn+48kf92GQGuT1gUr9+pQ7bNa+1oi1a8fp2FqPsSO1z
VuW1VtVjhGRMsibdrEt/rjn7LWWVvT+9vkbpvp11Qw8j9kLamRF9qFc3XfnK
rfJ/V0ZuXPvWvNYp45HScnv1eTo3L/KlJRe5+Xul+5a3UDIeW9mWI9p7RgwG
3k+v7b2LUdxxde/uea1oj+nSMWzJ2Vpp3V6tlYrWoF7pz1nPHcVVn5h5vSGv
MQKbJ1+bw1zpa43kLe1v8lpzbs1IetZsmU5q3b/Q49ehttiAUT5gyqmy9WWd
vPqdojFRLdFecjPmurXG5mzujO5PfQzFyWztVupLeXmOvmWFzJ8ov34fxzsd
6/3a0j1hR8iJf9fceiz1mbvv8GOTWTYx8pN9fa/am3DXvNaqtmjBt90sRtmR
2uesymutqscUi62bPkj9zVVx5lbeUF8jdN/OuqGHt+a1RvahXt105StHsckW
or0CRn7Lan1ey0njkYiR+jzNld7Fe6O8qq6ZuZm78djKttw1BgPvJ3d2QSkn
5LV6z2rJ4e1djZ4u2YOg5kzZqB1y7zPruaO46hMzrx1iqDvwtTre+d1KSdcR
PDkurI2hCsVRTSeNagPvD7X4VCN8QM+psvVlnbz6nWrOqs4RjX1n+EEr9lKK
zmyI5taskPkT+3q0n8eV35eOx2v2hB3xPVG/9W1t73fXn70czZRbvePV2gVd
so2z126dktfaQa8bLd89opy35bVW1aOR7ikiO+Rla/e81lvqq1f37awbenhj
Xmt0H+rVTVe5q+jfWuZkl+bH3prXOmk8EjFKn/szZ0r2PcjltmbFaO7GYyvb
ctcYDLyfXF6q9/7S51zdu3tey89TKp2T6fVjJO9RLEIxhpw+jNagRjHlWc+F
93Alk73XjmOWnd+tBNsP5Omclqg5Z9cw32XkPCafX2vZy3vUfL+Ur8nWG1hd
z9G4YcTYY8Z7exmZQen4aIXMnyq/fnydsxU2P+LqNzlGfY+f5+nth/WHuxiV
b8sVcZS7s8Nnn3l5Sl5rVUyrBP/+s3yoUfJR+5yn8lqz6tHnUXI5+tPyWqfW
l9Gq+3bWDT30xtZ2YlYfGp3XSn2+ETH83HNGfstqfV7LSeORiFHltubfo9xW
SU5sxDt6VrblrjEYeD+5fHIpJ+S1ZuhPP4dY/lwpvs4jPy7SHbquYr8l9T/r
ufAermSy99ox9r7zu5Vgcb5d3t/Psblar5/mwUa+/wh/yD9jRD7/a7L1BlbX
c7TPQ+2Zc1H/nxFPT8uZcQ505J+W7K88S+ZPll/VZRp31J/T/R7TM6+v5jrl
GPU9V21g9iK3P+HVc0ruGYHeMbcPxiw5MU7Ja61qixL8+8+Kq4+Sj9rnPJXX
mlGP6dr+uzJOy2udWl++vFrdt7Nu6CEXWzvNT5/Zh0bntdK+E63zb5ExX0Yu
VvbWvNZJ45GIUfLn59fVvP+ItUsl3I3HVrblrjEYeD/R+h1dpWPaXJ6ktB9f
3Tsij6xrxnlQfr1nqS+Wzoe1K7fOK5r7dDUmLq3/Wc+FdyA5arki+fXXyjPU
Szl1vCEsh1Trm8ykZs2W+Xuj9zYt2c/qjtLxTO17fUm23sCocVENfl+f2vl9
3j+ZFUtPyxktw35d+5UeEStk/nT5VRm5/ZGsn7TaklFyErW7Pcv6W8neCFFc
q6eOa+/VO+fqelbuZNe81tNtcYVvo1lx9VHyUfucVXmtFfWY2sW7GNfuea23
1FfuWaW6b2fd0EM0Dpqp+2cxsw+NzmuldRvFNlt8VF9G7hlvzWuJU8YjEaP0
ec95iJGOm0HJeGxVW+4ag4FvEOU5SmU/Z7vtusuPXd07Iq81K7/rfbZSX6Vm
3kI03ydXTtQOOR0w67nwbVb7WqPo9XeeoienJZ0zI99vlKzZSvX1jHdp3SfW
2Gl/lFNl6w2MGhfV0OvPt/ontaTljM6tt+xjsavM7yK/aiP5xNaHpXctr9bL
SDnx9sPG6HZWfQnReKC1j6of5dYa3BH5/LN86F3zWivaopXoDIcWf0T+zVV/
GCUftc9ZldeaXY9+3HoXo949r3V6fY3SfTvrhl78HOaSdmhhVh+d3Yd6dZP3
c738eH+wJR7o/dCcT/nmvNYp45GIWXa3hmid1AxKxmMr23LX8Ri8n2jdeI3s
R7a79Dm5+1r0T6TvZ/gQokVebY/iNF9+54PpHsmyrqv6iOYDXPmGs54L32W1
rzWK2ePXGfSu09Kcm5ly7PeuiHwS849m7TXt4wa15Xi7+OTZZafK1hsYNS6q
wc8nqdnnWHjZmzWHufX97vDjmau9TFN2lfkd5Nf2IZzdF0bISTTX2mJsNW3q
n9ES17L1Y5G91DNLYtHRXLIZ7JrXErPbopUo9t6ydkb3fDmvNbsea2Oju+e1
Tq+vkbpvV93QS9TGo22wfJ5Zdn12H+rVTWnsMYrPR7njWp8ujddd+blvzmud
Mh6JGKXPe7+hV7/VlHHVPivbctfxGLyfmvU7EX5dYs1zcve16J/Ih6jND5fS
8q6yu3687uW8Vd97/2PUnKVZz4X3sdrXGsXs8etoTM+1zl2x+OZsrmLTZnNm
xlm9/1/7zemY6el9nU+VrTcwalxUix8TlPr0fi7KrLk9qd84ch6d90clt637
Yu8i80/Lr9XpzL47Wk78fik2nq5Z0xDN2avtq/KBc31BzyuNo/rvmcHOea3Z
bdFKbs+Rmvi4vuPOlxklH7XPWZXXml2PNXvSit3zWqfX10jdt6tu6CXaU3eU
v2R7Ctf4R7XM7kM9usnLTxTri55fU/d+nc0O5/k9kdcSu49HcozS5z4WWvuc
9N4Ze87WjMdWteWu4zF4P7XnGHiu9iK8yoPkztVs1Rs+vzYzdlv7rpJ/WxuV
82HVDqqv3nVqo/ycWc+Fd/KErzWC2ePXkZjObPUNLde0wre8sivmr8xeV+59
0dJxuLdpd/dJL6pO5a/O6EenytYbGDUuqu0jvg+Wyqwfs9zlAVrzyibDI+e6
ROcE1/ocq2S+hiflN/XjZjJKToxofFC7Z0q030Bp20ouLN6amx9XE6O4O9N7
BFHMq0S+V+S1ZrdFD9G8fvkuJWVZP62dw/lkXqtG59eUN7Me/XPvZKh1jeRo
PXbFyfU1Uvet0A2zffQc0bf1xlJ0r+pxdkxmdh/qydGkferKL/D+oHzKUv2X
fs/dvIVojfmdHEf1NVuft7JqPCJGyuoofV67J2eK7xtXem3FeGxlW74lBgPn
4ftr7fjxas1W1MfUB6N5LOnVMl8nvX/W/lbC7714VZbJmvBxG/NJLKdV+81+
v69Rfs6s58J7afVPn2bF+HUEd/MAaq5Vshyt2TJbUTO+aMXrsdIya2KQkS0b
HXs7VbZOJ9oXvUVPtPaRtB+WrG2smV8qUr9PslE65rD30juNOBsvjU2lPmiL
flgh87U8Kb/pXHnVqdpYfXik7h0lJ/6ZXmZaco1+rUAqG7k60Lubj3815q8Z
36f9a9a8kqgdcvPY029vjZXVnoc+sy16iPZNTtsqal/pdNNZJePlkna5o0XO
WvtES3kz67HmHHD9ffT7EkbrsStOrq/Rum+mbljho18R5S/1vS2+k63RWxGT
md2HWvNaqW9w54OW7ImfI43zlfQXX86VfOp51o7pPXe54h593svs8YgYKauj
/dK0P9SMfdL4+NW6o5XjsRVtKd4Sg4Hz6N1zU/00d86Wt7+p/bvLbUkflOpn
/6wR8ZYc3k+JfAyL1Ugm7f39ffY7/aZ2zGb3Xb1DC7OeC++mxT/dgRXj115G
5rRW7iWa24dD16p98GvnWaVzq0p0XzRmHb1m/lTZOp1I7lr6bU8fSefr3I15
09xQS6zV7rvynWyMNsovsH1RU5nrXcc5W+ZreVJ+a2yD2t4u1ZnqsTW/MWJe
WSo3rfsvRPOo08vOp9Gl8tJxTOq7R9TImvnUo3LBOby99d9g8bS0j0fzEkvi
AtF9V37UzLbo5c7HUvkmG35/nLv3ir67JUfXKmctfaK1vFn1mFvblNpjva/Z
wKhvml2R/EXfEX3v7D0FTq2v0bpvpm5Y4aPfUdIeOfRt+p19c+ucnxnv3NOH
orxWie9l5ZX6apFc393XMg8lqi+9a1qW3sV8etWjn49v32VzkCJa9fkIZo5H
xEhZHTV+M7yOKvFJfM7lqk0ivTdzPDa7LY03xGDgTLxNqpWRuzVY0gGpL5LT
6dF1F3P2+ma2LxrZY5NX87sivee/1/yz3pzWqDHfrOfC+/GycAqS5Rlzm0ZR
sra15lp9rnJ07uFqn8P7VfLRovZWXZuNKvUTczZsJKfK1snk5p/q72pz4D19
xNvknG+T+m+ldjunVyy35MfK9h69cRUfp8mV2cNMma/lSfmNxnw1113sTWPu
aK59i5x4Ur++J0/WMi8k119SvC9fUv5s+xvFFtW/JbPWTuk75PTc3XqC3Bjo
7r5ZbTGC2ncr2SdV9XS1FqWUHjmr7RO95c2ox7u8R6SvrvzmKMae+97Z8zpP
rK8Zum+Wbljho5fg5/Ck7an6tbXUuuRvST/YGVrWVrNjWymz+5CIztHM+YF6
H2vLWrm0XE9aTm7uRjpmrfE7rtZf+svqK9on0ebz52jR56OYOR4Ro2R15Pgt
xcuwvi3XD/0ajrs2WT0em92WKafHYOBM/Nz6FvspvX6Xq0rtSfpbm6Ngc3LM
vpdQu6ZyBFd7L5o99O8RnY/am9Matd/irOfCN8CmzGFkTmuVbvT4tbxPrI2z
PenTurB5CLr8fKTSOfXRWHz0fknI1hpk80rn2pi/UjJ3bUQf8ecJmI9ksY8W
vy0XZ8ldkp/W/R0kf17O7FtK1wW1lDlD5mt5Un5Vr3e+asnlx+R+/cCdnLRi
7dfbNul4+e59S2XI36vnp2MXXZZXLD03p5erNdJpbKVU9v1+OOpLpfflmNEW
o1AblbzbXTy9Ruau5uaPkLPSPjGqvJH1mHKX9/A6PNcGqe1N8wYz9dgdp9SX
MUv3zdANK3z0Uswe1/hdVrdPjN1m9iGhb7K9Ff09ubWKelbrHtXev7fzP3Tp
3a0c/XfUnuO+36ayYO+j/5aWV6PPZzFjPCJ6ZHXW+M2T5ld9Hdjl9/8uyc+s
HI+lzGpLz8kxGDiXdL1uz5x682nSs+xMXlJ7JD2kv+sds9bugzuKdE2x1Zm+
O6fDUrnWfbXvmt4/0n7Nei4AQOp3zIwNlCCdKx3t5wnqvWSPWubmpnveR/MZ
AEb0EYsBpPMyc75VKfK9/Lzg1J+xZ/fMWTe/0saRep7+bpWczJD5k1A92zgx
nQdeGtM1v/AJZDtGjlGjvqB+rjF1a37V12sU71hpE/Q++kZrW5sDPnP/wxZm
tMUoVL7ew8/NPlVfPNUnRtejnS+Vfoe+K4oJq/+k61VV7u5j29Pqa5buG60b
dvTR9Y0Wi/d7TKZ+0tOskrm0PnJ+6Ah9pe+JyrHzQHrr3HKXPrcRyUKuHu/Y
wcbPGI+IHWU1wuLcV/21VmevGI9FzGrLCGIwsJp0vsUONvWOdD+MN68xSueB
lOxDIDkv8SdmPRcAwLBx287nmAEAvAnbf6dW72p8bXM2zT88YTwAAAAAAAAA
YPnnkjNxnybNLb+VdL1DyT4Eti/y3VmAs54LAJCiGCn5cACANZh/1zvfy/y+
1XvCAQAAAAAAALSQnrW08z6Vtras9Sy7E2g5w9LiGVdxiFnPBQAAAIBnSOcs
jdibRs9hXgIAAAAAAACcgu3Jv2tuy/Iyb81p+X2Ka2IKlu+L8k+zngsAAAAA
z+HPFe/F9vre7XwmAAAAAAAAgDssl6FcyA75ozQvs8s7jSZdL6f4RE3uSTEI
i2n4/NOs5wIAAADAs6Rr8XvPNDSf8c1n1wIAAAAAAMC7sbOndd6W9tp/CpWt
Mbbe5c25FR+XaL18Hc16LgAAAAA8i/fz5C+35LZ0j3z+t+6JAAAAAAAAAN/B
1kk9mdNQ2dob8e37oYzKP/lYxqznAgAAAMCzyD+O/Db5zlqjn5ubpvvk28lP
VD7L7iGnBQAAAAAAAG/hyTHuV8bX5LUAAAAAoBblr3p8vNp9qgEAAAAAAAAA
AAAAAABa0bosrbeqyWdpz0HyWQAAAAAAAAAAAAAAAPAEym/ZHt62v2Cax7L9
xd++vzcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKzj/wNlm9nd

    "], {{0, 570}, {1718, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{335.92395833333273`, Automatic},
  ImageSizeRaw->{1718, 570},
  PlotRange->{{0, 1718}, {0, 570}}]], "Input",
 Evaluatable->False],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell["1 - 6 Mixing problems.", "Text",
 CellChangeTimes->{{3.768345428547975*^9, 3.7683454408824177`*^9}}],

Cell["\<\
1. Find out, without calculation, whether doubling the flow rate in example 1 \
has the same effect as halfing the tank sizes. (Give a reason.)\
\>", "Text",
 CellChangeTimes->{{3.7683454458267097`*^9, 3.768345494896777*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell["I see the answer to this problem is yes, which surprised me.", "Text",
 CellChangeTimes->{{3.7683995166551332`*^9, 3.768399529157428*^9}}],

Cell["\<\
3. Derive the eigenvectors in example 1 without consulting this book.\
\>", "Text",
 CellChangeTimes->{{3.76834550146437*^9, 3.7683455245276203`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"A", "=", 
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "0.02"}], "0.02"},
     {"0.02", 
      RowBox[{"-", "0.02"}]}
    }], "\[NoBreak]", ")"}]}]], "Input",
 CellChangeTimes->{{3.768346487793861*^9, 3.7683465254447603`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.02`"}], ",", "0.02`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.02`", ",", 
     RowBox[{"-", "0.02`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.768346528573914*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigensystem", "[", "A", "]"}]], "Input",
 CellChangeTimes->{{3.768346531151037*^9, 3.7683465398216667`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.04`"}], ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.7071067811865475`", ",", 
       RowBox[{"-", "0.7071067811865475`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.7071067811865475`", ",", "0.7071067811865475`"}], "}"}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.768346541147915*^9}]
}, Open  ]],

Cell["\<\
As there is no text answer to this problem, I can\[CloseCurlyQuote]t \
determine whether my guess is right or wrong.\
\>", "Text",
 CellChangeTimes->{{3.76834672788665*^9, 3.7683467481806192`*^9}}],

Cell[TextData[{
 "5. If you extend example 1 by a tank ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["T", "3"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " of the same size as the others, and connected to ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["T", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " by two tubes with flow rates as between ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["T", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["T", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", what system of ODEs will you get?"
}], "Text",
 CellChangeTimes->{{3.768345553487734*^9, 3.768345625371917*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell["\<\
7 - 9 Electrical network
In example 2, find the currents:\
\>", "Text",
 CellChangeTimes->{{3.768345658027602*^9, 3.768345678426136*^9}}],

Cell[TextData[{
 "7. If the initial currents are 0 A and -3 A (minus meaning the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "(0) flows against the direction of the arrow)."
}], "Text",
 CellChangeTimes->{{3.768345683793892*^9, 3.768345720536763*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell["In example 2 the applicable matrix is found as", "Text",
 CellChangeTimes->{{3.768395912047408*^9, 3.768395926693445*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(", "\[NoBreak]", GridBox[{
    {
     RowBox[{"-", "4"}], "4"},
    {
     RowBox[{"-", "1.6"}], "1.2"}
   }], "\[NoBreak]", ")"}]], "Input",
 CellChangeTimes->{{3.768398817851923*^9, 3.768398835025996*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.6`"}], ",", "1.2`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.768398839799447*^9}]
}, Open  ]],

Cell["\<\
Mathematica , in calculating eigenvectors, always normalizes any which have \
any entries, in the parent matrix, which are floats. In this case I can pull \
the following into agreement with the text (which does not normalize the \
eigenvectors here) by rationalizing.\
\>", "Text",
 CellChangeTimes->{{3.7683986018733473`*^9, 3.7683986741551743`*^9}, {
  3.768398851344864*^9, 3.768398860776326*^9}, {3.768400236470941*^9, 
  3.768400241348895*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rationalize", "[", 
  RowBox[{"-", "1.6"}], "]"}]], "Input",
 CellChangeTimes->{{3.768398445878625*^9, 3.7683984522570333`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["8", "5"]}]], "Output",
 CellChangeTimes->{3.768398453332837*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rationalize", "[", "1.2", "]"}]], "Input",
 CellChangeTimes->{{3.768398461165234*^9, 3.76839846634433*^9}}],

Cell[BoxData[
 FractionBox["6", "5"]], "Output",
 CellChangeTimes->{3.768398466929571*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"A", "=", 
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "4"}], "4"},
     {
      RowBox[{"-", 
       FractionBox["8", "5"]}], 
      FractionBox["6", "5"]}
    }], "\[NoBreak]", ")"}]}]], "Input",
 CellChangeTimes->{{3.768398479651848*^9, 3.768398528476491*^9}, 
   3.768398681435104*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["8", "5"]}], ",", 
     FractionBox["6", "5"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7683985315223827`*^9, 3.7683986831830072`*^9}]
}, Open  ]],

Cell["\<\
For which the applicable eigenvalues and eigenvectors can be found as\
\>", "Text",
 CellChangeTimes->{{3.768395938764555*^9, 3.76839595861957*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"vals", ",", "vecs"}], "}"}], "=", 
  RowBox[{"Eigensystem", "[", "A", "]"}]}]], "Input",
 CellChangeTimes->{{3.768391978371512*^9, 3.7683919872964773`*^9}, {
  3.76839269282994*^9, 3.76839270077153*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", 
      FractionBox["4", "5"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["5", "4"], ",", "1"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.768391991075283*^9, 3.7683925533699703`*^9, 
  3.768392702132175*^9, 3.768398696909021*^9}]
}, Open  ]],

Cell["which I can then decimalize", "Text",
 CellChangeTimes->{{3.768399310349093*^9, 3.768399315988743*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NumberForm", "[", 
  RowBox[{
   RowBox[{"N", "[", 
    RowBox[{"{", 
     RowBox[{"vals", ",", "vecs"}], "}"}], "]"}], ",", "3"}], "]"}]], "Input",\

 CellChangeTimes->{{3.768399250028096*^9, 3.768399282462768*^9}, {
  3.768399380649193*^9, 3.768399382312769*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      InterpretationBox["\<\"-2.\"\>",
       -2.,
       AutoDelete->True], ",", 
      InterpretationBox["\<\"-0.8\"\>",
       -0.8,
       AutoDelete->True]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        InterpretationBox["\<\"2.\"\>",
         2.,
         AutoDelete->True], ",", 
        InterpretationBox["\<\"1.\"\>",
         1.,
         AutoDelete->True]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        InterpretationBox["\<\"1.25\"\>",
         1.25,
         AutoDelete->True], ",", 
        InterpretationBox["\<\"1.\"\>",
         1.,
         AutoDelete->True]}], "}"}]}], "}"}]}], "}"}],
  NumberForm[#, 3]& ]], "Output",
 CellChangeTimes->{{3.768399266228739*^9, 3.768399283164315*^9}, 
   3.768399383478702*^9}]
}, Open  ]],

Cell[TextData[{
 "Scooping up at a later stage in the example, there will be two equations \
for the two circuit loops. \n\n",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["I", "1"], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"2", 
      SubscriptBox["c", "1"], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], "t"}]]}], "+", 
     RowBox[{
      SubscriptBox["c", "2"], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "0.8"}], "t"}]]}], "+", 
     RowBox[{"3", "  ", "and", " ", 
      SubscriptBox["I", "2"]}]}], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["c", "1"], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], "t"}]]}], "+", 
     RowBox[{"0.8", 
      SubscriptBox["c", "2"], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "0.8"}], "t"}]]}]}]}]}]], "Input",
  CellChangeTimes->{{3.7683964862302*^9, 3.768396606158642*^9}}],
 "\n\nFor the case where t=0, the example, at top of p. 134, states these as\n\
\n",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SubscriptBox["I", "1"], "[", "0", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"2", 
      SubscriptBox["c", "1"]}], "+", 
     SubscriptBox["c", "2"], "+", "3"}], "=", 
    RowBox[{
     RowBox[{"0", "  ", "and", " ", 
      RowBox[{
       SubscriptBox["I", "2"], "[", "0", "]"}]}], "=", 
     RowBox[{
      RowBox[{
       SubscriptBox["c", "1"], "+", 
       RowBox[{"0.8", 
        SubscriptBox["c", "2"]}]}], "=", 
      RowBox[{"-", "3"}]}]}]}]}]], "Input",
  CellChangeTimes->{{3.768396070633768*^9, 3.76839614332903*^9}}]
}], "Text",
 CellChangeTimes->{{3.768395968914962*^9, 3.768396061669674*^9}, {
   3.768396161465362*^9, 3.768396194605937*^9}, {3.768396625553453*^9, 
   3.768396646403885*^9}, {3.7683966851860743`*^9, 3.7683966993690653`*^9}, {
   3.768398739073151*^9, 3.768398757894788*^9}, 3.768399325284474*^9, {
   3.768399428582391*^9, 3.7683994432705517`*^9}, {3.768407658189612*^9, 
   3.768407667142737*^9}, {3.768407702972686*^9, 3.768407706276086*^9}}],

Cell["\<\
The alteration, from example 2, for this problem is that at t=0 the two \
current values are 0 and -3 Amp respectively, so the above equations can be \
solved by\
\>", "Text",
 CellChangeTimes->{{3.7683946478706417`*^9, 3.76839465573295*^9}, {
  3.768396225372169*^9, 3.768396286544732*^9}, {3.768396712888064*^9, 
  3.76839671327216*^9}, {3.768407720739625*^9, 3.768407726979279*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"2", 
       SubscriptBox["c", "1"]}], "+", 
      SubscriptBox["c", "2"], "+", "3"}], "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      SubscriptBox["c", "1"], "+", 
      RowBox[{"0.8", 
       SubscriptBox["c", "2"]}]}], "\[Equal]", 
     RowBox[{"-", "3"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["c", "1"], ",", 
     SubscriptBox["c", "2"]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.768394304540818*^9, 3.76839435463797*^9}, {
  3.7683949105687943`*^9, 3.768394920814476*^9}, {3.7683950294419413`*^9, 
  3.768395123002829*^9}, {3.76840009149187*^9, 3.768400096354046*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["c", "1"], "\[Rule]", "0.9999999999999997`"}], ",", 
    RowBox[{
     SubscriptBox["c", "2"], "\[Rule]", 
     RowBox[{"-", "4.999999999999999`"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.768394356331377*^9, 3.768394922690632*^9, {3.7683950517558117`*^9, 
   3.768395124298875*^9}, 3.7684000979373302`*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["Then I will have", "Text",
 CellChangeTimes->{{3.7683963071206303`*^9, 3.7683963121030293`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["I", "1"], "[", "t", "]"}], "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", 
      SubscriptBox["c", "1"], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], "t"}]]}], "+", 
     RowBox[{
      SubscriptBox["c", "2"], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "0.8"}], "t"}]]}], "+", "3"}], " ", ")"}], "/.", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["c", "1"], "\[Rule]", "0.9999999999999997`"}], ",", 
     RowBox[{
      SubscriptBox["c", "2"], "\[Rule]", 
      RowBox[{"-", "4.999999999999999`"}]}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.7683964862302*^9, 3.768396606158642*^9}, {
  3.768396759697116*^9, 3.7683968179971933`*^9}, {3.768396874392035*^9, 
  3.768396875222858*^9}}],

Cell[BoxData[
 RowBox[{"3", "+", 
  RowBox[{"1.9999999999999993`", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "2"}], " ", "t"}]]}], "-", 
  RowBox[{"4.999999999999999`", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "0.8`"}], " ", "t"}]]}]}]], "Output",
 CellChangeTimes->{3.768396819695849*^9, 3.768396885317638*^9}]
}, Open  ]],

Cell["and", "Text",
 CellChangeTimes->{
  3.768396777604272*^9, {3.768396829218356*^9, 3.768396830177178*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["I", "2"], "[", "t", "]"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["c", "1"], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], "t"}]]}], "+", 
    RowBox[{"0.8", 
     SubscriptBox["c", "2"], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "0.8"}], "t"}]]}]}], "/.", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["c", "1"], "\[Rule]", "0.9999999999999997`"}], ",", 
     RowBox[{
      SubscriptBox["c", "2"], "\[Rule]", 
      RowBox[{"-", "4.999999999999999`"}]}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.768396786165668*^9, 3.768396786756007*^9}, 
   3.7683968398030863`*^9, {3.7683968787905483`*^9, 3.768396879510751*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"0.9999999999999997`", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "2"}], " ", "t"}]]}], "-", 
  RowBox[{"3.9999999999999996`", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "0.8`"}], " ", "t"}]]}]}]], "Output",
 CellChangeTimes->{3.768396841459268*^9, 3.7683968972860394`*^9}]
}, Open  ]],

Cell["\<\
The text answer only encompasses the constant values in green above, not the \
actual resulting current equations.\
\>", "Text",
 CellChangeTimes->{{3.76839895445994*^9, 3.7683989877608557`*^9}}],

Cell["9. If the initial currents in example 2 are 28 A and 14 A.", "Text",
 CellChangeTimes->{{3.768345725184484*^9, 3.768345741072001*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell["\<\
The use of example 2 on p. 132 is not finished, there is this additional \
problem concerning it. Using the last problem, and jumping down to the \
pertinent expressions\
\>", "Text",
 CellChangeTimes->{{3.76839970713513*^9, 3.768399748637927*^9}, {
  3.768400412774643*^9, 3.768400439261874*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"2", 
       SubscriptBox["c", "1"]}], "+", 
      SubscriptBox["c", "2"], "+", "3"}], "\[Equal]", "28"}], "&&", 
    RowBox[{
     RowBox[{
      SubscriptBox["c", "1"], "+", 
      RowBox[{"0.8", 
       SubscriptBox["c", "2"]}]}], "\[Equal]", "14"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["c", "1"], ",", 
     SubscriptBox["c", "2"]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.768399777934499*^9, 3.768399789300579*^9}, {
  3.768399830067687*^9, 3.768399835555245*^9}, {3.768399871618091*^9, 
  3.768399886521368*^9}, {3.768399935944021*^9, 3.768399943079245*^9}, {
  3.768400127833181*^9, 3.768400145056403*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["c", "1"], "\[Rule]", "10.`"}], ",", 
    RowBox[{
     SubscriptBox["c", "2"], "\[Rule]", "4.999999999999999`"}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.768399791268433*^9, 3.768399836953586*^9, 
  3.768399887644166*^9, 3.768399944435815*^9, 3.768400146593774*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["\<\
The above green cell matches the text answer. The text answer skips the final \
equations, so I will also.\
\>", "Text",
 CellChangeTimes->{{3.768400177558826*^9, 3.768400207997869*^9}}],

Cell["\<\
10 - 13 Conversion to systems
Find a general solution of the given ODE (a) by first converting it to a \
system, (b), as given. \
\>", "Text",
 CellChangeTimes->{{3.7683457774879827`*^9, 3.768345818669207*^9}}],

Cell["11.  4 y'' - 15 y' - 4 y = 0", "Text",
 CellChangeTimes->{{3.7683458346874723`*^9, 3.7683458543177443`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell["\<\
Converting to a system is set out in example 3 on p. 135. It does not look \
that difficult, but my initial effort did not come up with the desired \
outcome. I will defer it for now.\
\>", "Text",
 CellChangeTimes->{{3.768401192460704*^9, 3.76840120733101*^9}, {
  3.768402067222674*^9, 3.768402104556181*^9}, {3.768402258824046*^9, 
  3.768402280613965*^9}, {3.768402329799019*^9, 3.768402385722424*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqn", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"4", 
     RowBox[{
      RowBox[{"y", "''"}], "[", "x", "]"}]}], "-", 
    RowBox[{"15", 
     RowBox[{
      RowBox[{"y", "'"}], "[", "x", "]"}]}], "-", 
    RowBox[{"4", 
     RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", "0"}]}]], "Input",
 CellChangeTimes->{{3.7684006357542267`*^9, 3.768400665982263*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"-", "4"}], " ", 
    RowBox[{"y", "[", "x", "]"}]}], "-", 
   RowBox[{"15", " ", 
    RowBox[{
     SuperscriptBox["y", "\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}], "+", 
   RowBox[{"4", " ", 
    RowBox[{
     SuperscriptBox["y", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}]}], "\[Equal]", 
  "0"}]], "Output",
 CellChangeTimes->{3.768400670514032*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{"eqn", ",", "y", ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.768400672697032*^9, 3.768400689965199*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "x", "}"}], ",", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "x"}], "/", "4"}]], " ", 
        RowBox[{"C", "[", "1", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"4", " ", "x"}]], " ", 
        RowBox[{"C", "[", "2", "]"}]}]}]}], "]"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.768400691461533*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eqn", "/.", "sol"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.768400695641241*^9, 3.7684007036525393`*^9}}],

Cell[BoxData[
 RowBox[{"{", "True", "}"}]], "Output",
 CellChangeTimes->{3.7684007048008947`*^9}]
}, Open  ]],

Cell["13.  y'' + 2 y' - 24 y = 0", "Text",
 CellChangeTimes->{{3.768345864997538*^9, 3.768345882188697*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqn", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"y", "''"}], "[", "x", "]"}], "+", 
    RowBox[{"2", 
     RowBox[{
      RowBox[{"y", "'"}], "[", "x", "]"}]}], "-", 
    RowBox[{"24", 
     RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", "0"}]}]], "Input",
 CellChangeTimes->{{3.768402121207749*^9, 3.768402146858912*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"-", "24"}], " ", 
    RowBox[{"y", "[", "x", "]"}]}], "+", 
   RowBox[{"2", " ", 
    RowBox[{
     SuperscriptBox["y", "\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["y", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "x", "]"}]}], "\[Equal]", "0"}]], "Output",\

 CellChangeTimes->{3.768402148485119*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{"eqn", ",", "y", ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.768402150665204*^9, 3.768402160338337*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "x", "}"}], ",", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "6"}], " ", "x"}]], " ", 
        RowBox[{"C", "[", "1", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"4", " ", "x"}]], " ", 
        RowBox[{"C", "[", "2", "]"}]}]}]}], "]"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.768402163483782*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eqn", "/.", "sol"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.7684021698212547`*^9, 3.7684021789375753`*^9}}],

Cell[BoxData[
 RowBox[{"{", "True", "}"}]], "Output",
 CellChangeTimes->{3.7684021800550327`*^9}]
}, Open  ]]
},
WindowSize->{1366, 843},
WindowMargins->{{4, Automatic}, {Automatic, 4}},
Magnification:>1.5 Inherited,
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 10, \
2015)",
StyleDefinitions->"Charter1.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 67201, 1107, 189, "Input",
 Evaluatable->False],
Cell[67604, 1122, 73, 1, 45, "Input"],
Cell[67680, 1125, 106, 1, 51, "Text"],
Cell[67789, 1128, 271, 5, 110, "Text"],
Cell[68063, 1135, 144, 1, 51, "Text"],
Cell[68210, 1138, 196, 4, 75, "Text"],
Cell[CellGroupData[{
Cell[68431, 1146, 270, 8, 74, "Input"],
Cell[68704, 1156, 271, 9, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69012, 1170, 132, 2, 45, "Input"],
Cell[69147, 1174, 446, 14, 45, "Output"]
}, Open  ]],
Cell[69608, 1191, 207, 4, 51, "Text"],
Cell[69818, 1197, 745, 24, 113, "Text"],
Cell[70566, 1223, 147, 4, 86, "Text"],
Cell[70716, 1229, 353, 9, 76, "Text"],
Cell[71072, 1240, 73, 1, 45, "Input"],
Cell[71148, 1243, 128, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[71301, 1248, 232, 7, 74, "Input"],
Cell[71536, 1257, 261, 9, 45, "Output"]
}, Open  ]],
Cell[71812, 1269, 460, 8, 120, "Text"],
Cell[CellGroupData[{
Cell[72297, 1281, 152, 3, 45, "Input"],
Cell[72452, 1286, 108, 3, 76, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72597, 1294, 131, 2, 45, "Input"],
Cell[72731, 1298, 90, 2, 76, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72858, 1305, 333, 11, 86, "Input"],
Cell[73194, 1318, 330, 11, 76, "Output"]
}, Open  ]],
Cell[73539, 1332, 158, 3, 51, "Text"],
Cell[CellGroupData[{
Cell[73722, 1339, 255, 6, 45, "Input"],
Cell[73980, 1347, 483, 16, 76, "Output"]
}, Open  ]],
Cell[74478, 1366, 109, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[74612, 1371, 289, 8, 45, "Input"],
Cell[74904, 1381, 871, 32, 45, "Output"]
}, Open  ]],
Cell[75790, 1416, 2089, 60, 238, "Text"],
Cell[77882, 1478, 395, 7, 86, "Text"],
Cell[CellGroupData[{
Cell[78302, 1489, 716, 21, 45, "Input"],
Cell[79021, 1512, 446, 12, 69, "Output"]
}, Open  ]],
Cell[79482, 1527, 102, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[79609, 1532, 858, 26, 54, "Input"],
Cell[80470, 1560, 378, 10, 49, "Output"]
}, Open  ]],
Cell[80863, 1573, 110, 2, 51, "Text"],
Cell[CellGroupData[{
Cell[80998, 1579, 788, 24, 49, "Input"],
Cell[81789, 1605, 371, 10, 49, "Output"]
}, Open  ]],
Cell[82175, 1618, 205, 4, 51, "Text"],
Cell[82383, 1624, 176, 2, 75, "Text"],
Cell[82562, 1628, 307, 6, 86, "Text"],
Cell[CellGroupData[{
Cell[82894, 1638, 744, 21, 45, "Input"],
Cell[83641, 1661, 403, 11, 69, "Output"]
}, Open  ]],
Cell[84059, 1675, 196, 4, 51, "Text"],
Cell[84258, 1681, 220, 5, 86, "Text"],
Cell[84481, 1688, 150, 2, 75, "Text"],
Cell[84634, 1692, 416, 7, 86, "Text"],
Cell[85053, 1701, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[85151, 1706, 382, 12, 45, "Input"],
Cell[85536, 1720, 456, 15, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86029, 1740, 186, 4, 45, "Input"],
Cell[86218, 1746, 560, 17, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86815, 1768, 153, 3, 45, "Input"],
Cell[86971, 1773, 97, 2, 45, "Output"]
}, Open  ]],
Cell[87083, 1778, 144, 2, 75, "Text"],
Cell[87230, 1782, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[87328, 1787, 358, 11, 45, "Input"],
Cell[87689, 1800, 428, 14, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88154, 1819, 186, 4, 45, "Input"],
Cell[88343, 1825, 560, 17, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88940, 1847, 155, 3, 45, "Input"],
Cell[89098, 1852, 97, 2, 45, "Output"]
}, Open  ]]
}
]
*)


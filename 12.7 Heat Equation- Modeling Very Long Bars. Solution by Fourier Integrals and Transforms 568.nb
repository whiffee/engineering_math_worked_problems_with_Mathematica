(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    233581,       4623]
NotebookOptionsPosition[    229112,       4478]
NotebookOutlinePosition[    229500,       4495]
CellTagsIndexPosition[    229457,       4492]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
Note: In this problem set, expressions in green cells match corresponding \
expressions in the text answers.\
\>", "Text",
 Evaluatable->False,
 CellChangeTimes->{{3.7691029458826513`*^9, 3.769102972246056*^9}}],

Cell["1. CAS Project. Heat flow.", "Text",
 CellChangeTimes->{{3.756145135686735*^9, 3.756145137029237*^9}, {
  3.7561451679746313`*^9, 3.7561451786678133`*^9}},
 Background->RGBColor[
  0.9600061036087587, 0.9600061036087587, 0.9600061036087587]],

Cell["(a) Graph the basic fig. 299.", "Text",
 CellChangeTimes->{{3.756145191139473*^9, 3.756145203738902*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"u", "[", 
   RowBox[{"x_", ",", "t_"}], "]"}], "=", 
  RowBox[{
   FractionBox[
    SubscriptBox["U", "0"], 
    RowBox[{"2", " ", "c", 
     SqrtBox[
      RowBox[{"\[Pi]", " ", "t"}]]}]], 
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{"-", "1"}], "1"], 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", "v"}], ")"}], "2"], 
        RowBox[{"4", " ", 
         SuperscriptBox["c", "2"], "t"}]]}], "]"}], 
     RowBox[{"\[DifferentialD]", "v"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.7561341292183247`*^9, 3.756134242338935*^9}, {
   3.7561361789408913`*^9, 3.756136179331856*^9}, {3.756136778897621*^9, 
   3.756136783720294*^9}, 3.756136826071271*^9, {3.7561368621340637`*^9, 
   3.756136862861845*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Erf", "[", 
     FractionBox[
      RowBox[{"1", "-", "x"}], 
      RowBox[{"2", " ", "c", " ", 
       SqrtBox["t"]}]], "]"}], "+", 
    RowBox[{"Erf", "[", 
     FractionBox[
      RowBox[{"1", "+", "x"}], 
      RowBox[{"2", " ", "c", " ", 
       SqrtBox["t"]}]], "]"}]}], ")"}], " ", 
  SubscriptBox["U", "0"]}]], "Output",
 CellChangeTimes->{3.7561342522401867`*^9, 3.756136180619299*^9, 
  3.756136790081702*^9, 3.7561368645986433`*^9, 3.756137458150467*^9, 
  3.756143665157559*^9, 3.756220617011664*^9, 3.769102759155519*^9, 
  3.7700405308807287`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"u2", "[", 
   RowBox[{"x_", ",", "t_"}], "]"}], "=", 
  RowBox[{
   RowBox[{"u", "[", 
    RowBox[{"x", ",", "t"}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"c", "\[Rule]", "1"}], ",", 
     RowBox[{
      SubscriptBox["U", "0"], "\[Rule]", "100"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.7561366529046783`*^9, 3.756136665820065*^9}, {
  3.756136699556037*^9, 3.756136716682199*^9}, {3.7561367945602283`*^9, 
  3.756136810727552*^9}}],

Cell[BoxData[
 RowBox[{"50", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Erf", "[", 
     FractionBox[
      RowBox[{"1", "-", "x"}], 
      RowBox[{"2", " ", 
       SqrtBox["t"]}]], "]"}], "+", 
    RowBox[{"Erf", "[", 
     FractionBox[
      RowBox[{"1", "+", "x"}], 
      RowBox[{"2", " ", 
       SqrtBox["t"]}]], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.7561366752008142`*^9, 3.7561367193077803`*^9, 
  3.75613681256492*^9, 3.7561368719260283`*^9, 3.756137460942848*^9, 
  3.756143667492786*^9, 3.756220619639214*^9, 3.769102761792633*^9, 
  3.770040533783969*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"u2", "[", 
       RowBox[{"x", ",", "t"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Thickness", "[", "0.003", "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7561366105361013`*^9, 3.7561366251173763`*^9}, 
   3.756136687541472*^9, {3.7561370099308233`*^9, 3.75613702305665*^9}, {
   3.769102746441663*^9, 3.7691027527848253`*^9}, {3.770040495994965*^9, 
   3.770040550927825*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6], 
        Thickness[0.003]], 
       LineBox[CompressedData["
1:eJw113k0Vl0XAHDzg4rKXK8poSLJ8JKGsxGeKzQSkikyVEJkijJUwpuhSIYS
GSuaEHmdJyQkQ2ZPZIiiZAwhvvOt9X1/3HXXb+2zzr3r3nP23kfa/vwRRzYW
FpY/5Prv/VRBzPjKCo0hK5vrp3lNAhjR4nK7l2gMurZUaHOiBPzlnmd1cZ7G
SDh0ucvzkQS0K1fV/pigMQI3xnk2NEkA/flcRlc/jeHr++fSyEZJUCq0Nn9R
SWPYP7WVffpCEuZLFd+cvk5j1G9eDq7ykoKo6pq4D3w0xpsfpv+aFUuD1IZ+
98M8XAy6vnDvuvzN4L7n6OGtQpyMX5WyZiz/yoNt9qz+e1kOxmVdu+IcNgUo
M/H3kdnEzqBzbeoI+6QELVXH8xp3sDGET5RulT+5E0x9hERVtrIyJtQ45KYS
VcHXkyPZWp6F8brbe/OtUXXI902C8nPLeElUpW5CURN0rv5gKDgsYds1VizW
hVpgsmNKTztwAV9oPW2cKrUXkl0tf43en8cBj3sf6F1DgCVCN7AmzeIbWkaz
b/i1wdLdZj8umsGeTrHe7do68F5raXAkbwr70gsSVcJ0IShh8UlOzgSWft0j
q/Z8PxyWPPlbIm4M98fJbI8q1YOj7PtD3gaP4N0HBhOevdGH/ZviBMuKhjDf
rdVjIqkGcM36xpEDWUP42JXffrFpBlCbdCWmO34IS4+sHeJ+aAAmAudX//Ya
wuqCXocn8wzAnMOI42/VIcxtJe6Y88oAzgxzzhQUfMHrwT4iv8UA4vL8WjJy
BnH50O4gAW469KvYxUUm9eOKY39iaa50yA995OEU0Y9HBsR4Bs/Swb/11yFd
/35s4GCvVnaeDgIXI/gXLfpxq+OfDCdvOuiVvIhyFevH4sLbGtOv0CEXcV2n
Evvwksd4fG4CHQYSzeb4FD/jmqMLq6YZdAjQ+l5Yveozfmhf7xhaSQfBT5e9
gr73Yt5vuyzWVdNBXzJ3ciyvF3vIVfDIvadDXubi9/qtvZjvVW6AShsdPJ+n
9UXI9+Dzpkqz7d/owF4/Wsslw8QxuJKT4qPAK7uOe4SDiT8HPXNwWEvBl5A8
g/fD3fjxhEZi4HoK3u5yfRud143NP9T55wpTcD17hCGq0o0n6gwlvkpQsCr0
W/E27S7ccCPV/rcSBQJaw5kmNh04hpYgftGYgjCh6i/K2h3YeBmxHjhIwcxE
poyATAdO+uKdI36YgrZsxwcdw+34e0AEKjtGwR2hoRRbt3YcdisppPcEBRsn
B295BrbhHy6nJopcKJDJ6Q9OSG7BH9n/3vYylAKpSPHwcf8WbFv3gWl3lQIJ
N4ubdMsW/CRWhrn6OgUb1JqTFkRb8LLAEMMygoL1DMYL64SPuGZwSqw9hgLW
zvtDcrHNuEQh+aZhKgXLpczvl92bscTG5J76exQspYpMdR5sxvLuCp5GaRTM
n4pejuBrxts6+V11MyiYGA8SGY9swj11d6+vzaUA85fFua1pxF29G9bLv6Sg
tE31vlR9A9ZSFA0JLKSgKPnRo48RDZj39jHl5iIK8uWTq/7mbsBKfa167iUU
3EP+s8tsH3BevQL1TzkFl85rWkbP1+FdUV2mOjUUaDa+lH46WI2dtYa747so
GOSuVCrOqsa+3m7xId0U3NRp3l3uUo0lZox6zzJJvHDMtH78LR4t4tig1UPi
KXIR3xarcEq0sUpxH4m7JE5JCVbi3zZzBbu/knhG1op8RwW257VRYf1Gntfz
cvWOpAqckmCEqohvHmqW2ytVgTOteuZ0RinYpcF7wkLxDVZLmu/ZNEaBOM/8
NZkb5VhfyOvw2SkKPC8JPtjJX46Piw+c4p2moGZc+TWK/xf7JRX9yST2bHcZ
P/GgDDufH6xumyHxDObx2yWlOOBXVp7IHPmfIvMe6agUc2vcm35AfCFCMOrp
2xKsx1tQsXWexD2MGfXNr3CnVtjUzt9kPe/DWzhHizCqnb69eZGCumdMHQH3
Iuz4Kpc3mVhSdt5KerYQ14lYcPIvkfiqnbF72QpxtpP0jXFiya70394bXuCh
Ez+q45bJfEZYICztOUlZS7a/iOswc3ucHDEWuGy6QuJZgvb5Ks+wTPZXfT4W
Q7j9dXX8h/h8zLbXks2e1RD6hH16X2Q9wbcYymoFxAr6/fJJxY8xywgv2wJx
xcPC0tNdeXha388jnM0Q+FolOYxHc7HZ4+H19cSW7BHGqos52FGY99AadkOY
tLPuW/krGyuEKKaGE++Jrdk6vD0L54/wPKkgDmeoXKjfl4mvSFuaLxBLSdK4
7tpm4M554WB7DkM4a+Jx8LJHOuZSd1qOIy4OZCY6hjzAbf6Twm+IU1/ZHHeg
38fL4SFiwpyGoCaiNqrsmoozZT3Z9xLXe3MH/olMxlFe58LtiE+1fuKve3IX
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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6], 
        Thickness[0.003]], 
       LineBox[CompressedData["
1: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
/9//B4JtY2w=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6], 
        Thickness[0.003]], 
       LineBox[CompressedData["
1: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
3pAk
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6], 
        Thickness[0.003]], 
       LineBox[CompressedData["
1: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
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 6.}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 350, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{-3, 3}, {7.63107481093292, 52.04998544005355}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"50", " ", 
         RowBox[{"(", 
           RowBox[{
             RowBox[{"erf", "(", 
               FractionBox[
                RowBox[{"1", "-", "x"}], "2"], ")"}], "+", 
             RowBox[{"erf", "(", 
               FractionBox[
                RowBox[{"1", "+", "x"}], "2"], ")"}]}], ")"}]}], 
       RowBox[{"50", " ", 
         RowBox[{"(", 
           RowBox[{
             RowBox[{"erf", "(", 
               FractionBox[
                RowBox[{"1", "-", "x"}], 
                RowBox[{"2", " ", 
                  SqrtBox["2"]}]], ")"}], "+", 
             RowBox[{"erf", "(", 
               FractionBox[
                RowBox[{"1", "+", "x"}], 
                RowBox[{"2", " ", 
                  SqrtBox["2"]}]], ")"}]}], ")"}]}], 
       RowBox[{"50", " ", 
         RowBox[{"(", 
           RowBox[{
             RowBox[{"erf", "(", 
               FractionBox[
                RowBox[{"1", "-", "x"}], 
                RowBox[{"2", " ", 
                  SqrtBox["3"]}]], ")"}], "+", 
             RowBox[{"erf", "(", 
               FractionBox[
                RowBox[{"1", "+", "x"}], 
                RowBox[{"2", " ", 
                  SqrtBox["3"]}]], ")"}]}], ")"}]}], 
       RowBox[{"50", " ", 
         RowBox[{"(", 
           RowBox[{
             RowBox[{"erf", "(", 
               FractionBox[
                RowBox[{"1", "-", "x"}], "4"], ")"}], "+", 
             RowBox[{"erf", "(", 
               FractionBox[
                RowBox[{"1", "+", "x"}], "4"], ")"}]}], ")"}]}]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.003`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.003`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.003`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.003`", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.756136579134633*^9, 3.756136627325758*^9, 3.7561366883407907`*^9, 
   3.756136725042213*^9, 3.756136815858779*^9, 3.7561368784279327`*^9, {
   3.7561370141910763`*^9, 3.7561370246644278`*^9}, 3.756137464799209*^9, 
   3.756143670233795*^9, 3.75622062229027*^9, 3.7691027646064777`*^9, {
   3.770040521478571*^9, 3.770040551866296*^9}}]
}, Open  ]],

Cell["(b) animate.", "Text",
 CellChangeTimes->{{3.756145234211248*^9, 3.756145248889599*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"u2", "[", 
        RowBox[{"x", ",", "t"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "60"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", ".1", ",", "50"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.75614442895012*^9, 3.756144445203807*^9}, {
  3.756144670430374*^9, 3.756144670932584*^9}, {3.756144712789093*^9, 
  3.756144764603074*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 2.9000000000000004`, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0.1, 50}}, Typeset`size$$ = {
    540., {176., 187.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`t$5409$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0.1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$5409$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        Evaluate[
         $CellContext`u2[$CellContext`x, $CellContext`t$$], {$CellContext`x, \
-3, 3}], PlotRange -> {0, 60}], 
      "Specifications" :> {{$CellContext`t$$, 0.1, 50}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{608., {239., 249.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.75614444709803*^9, 3.756144672932193*^9, {3.756144714988133*^9, 
   3.7561447657167053`*^9}, 3.756220627530031*^9, 3.769102774936615*^9}]
}, Open  ]],

Cell["(c) 3D plot.", "Text",
 CellChangeTimes->{{3.756145273184638*^9, 3.756145277408634*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"u2", "[", 
      RowBox[{"x", ",", "t"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0.01", ",", "30"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "80"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7561453123933992`*^9, 3.756145356598037*^9}, {
   3.756145403941226*^9, 3.756145459947031*^9}, 3.756145500338101*^9}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
RymmNlHZ13k8gPg5lvwt+kd70X9i/hoh+G3Eh91o3kF7zGviPIU4B/Mafhft
q5inJHGeQns9mqcwH4F3pfkInPUzwtYiM1ib6YN5SmN10xPeaubs/oKbZuaV
GP62X+gnW+wH81ozkxH3Vwzg4wrzxV7SH9eF+WvcyaYFO1Ps2XWBe048PPqI
Ep93wJvtHGgTPceStcd8sVz6oGHmzucFcK25M600/fm8AD60qKnDgY7cz4Bv
HdR7b+8FXGf47fmqxR7zrLh/AN9R7hrd8gnvH7xbu4/hbnt5/+BjrFcWPWjE
4x/UjXfufuw+0sub6QM+TpoR0tWe+yvw7pWvLpld4PYwPqt4kacr91fgJQtO
rDV9y+0BX3TKsud8yZz9LuqrfoNDviZt478L3m9DpMerCv674OdeaDTp35//
Lnj9jmn3D1bjeSX8T9s3RnplG3mcCb/xvM71dXN03Vl7+I2P9R017GrZsHGF
57GJMN4w/tVpPAvxm4T4DXEa2htQnAZ7MB6KyR5wXNfxa8GZQR18GEe9dJtw
H8HHCvcRvJtwH1kdmO4j+oH/1xDiB3BxfILvpPGJ9tA5lp6XAWsqJm27/00W
+0eHz/JTyxbvtteQGH//5/l9L/9c+9b4pEXujGf+uS+P5QlqY58O8fBg3PXP
72bKBxwKeh3Z0JPx3n9+N18298nBva8v8vYP/tyXYllOQbW5b2Z3lKwCTgW/
VWsggfcvaOayf4qTtHH03Mp565szvlqlPHPVIG6/YjyUy2q8iLMKG+wmHdIc
l6g6+bHM9sletTgd5ezW6kN8Nr5UZbzkrtru9PBa2RFjO15ctbAp463PSKN0
fJSyfw5b9vLwWTPGk6f71YjT+Sn3cdtpF+Fsw7hmeFPzovRv8sv6jYLejXZi
HHrqjp1uq9PWjdlZU2GnvBbsXL5lyYDZtSTorOTceP7IM66sn3zF9cqHpj44
9HSwH+sHPJd0Qz+4LymhB/J7dZJYP2cUXOal0S87VrUL6wd8Ld1HtIfOg+l3
0T/aJ1P/uF/gr741Glv9oxNrj37KhrhdCD8rk+4uLmt2onsT1r7Ie61Dr0f2
7P6CL2l+xbd8my1rj37quU+7YR1jz+z/qtBN9pHGJ+wB92tpNsv9liPrH7z3
bl+HWBXeP8aP24kGtV79jsNh/xrFfZTt/hRXvtvYmemzXzEeZJI4HhTjRyoV
xk+ZYrxJYcJ4o/EpYXwiHsC4RTwAezCuUsgetMc4VFpnqlb+xl+G/pHXeGRt
KW9y1pX5K4wfNfmFoikLOzH/ifFzUWfnsM3lfNy6K55fOZ5f9I/nfU9aelf1
ad2Ybnjex/ZOXZgdw8fhckV72W5qj/7B4TfQHv0smtO5TtLHrsxOjIdFX7IP
rxnN42TwhnRd0AfjCnEy+sd81Cd6R9nWS/5ScJcmL32ftmL9dzrk1+L1EWvW
vr1CZ1mu8Lxjftmo0+WFhmFtkWeD43pxfw3GbyhabWPEdANfeCI1o2sDc8bR
z+ywTv7XQkzZuEV7mfG4G7IN5tLVST9/vYhwYXzElbwmj7pps9/dczPCtSi9
Rna8RovGZo0tmT4YVzMGanpfX3Bdht/FOPlIzy+uC+PEn/wJ4grkNcjX0D/u
I/RneR/p70X5LO4v7hfGIfqB/hjnuK7Qy0X5lZXVpDSPbJNGedbsevHcNThZ
4dzpu6movwT9heeOxeGCnhL0RJyM662dXJjXZYcj8z+4XscJJdXaeDuzeAbt
DS+X3B722ob5JbRfenNOfOkVW1YHZnnoVOVm/etbSQ01Al7WaabF2j9tkrp2
71YrZj/icOY36H6FKPTJ1oj3f1L4UY+1Rx2jXlZ/5f77+LyD+Simzs1eAabe
7HrRHnkfrhfz2iHn6MxZDR1Z/4jfsjP/7h/+1tn8Tt+h+z1Ye8R1ov0pinEr
5V5cPbFHNS12H/FcJG3W0dz1U59xzO/qdN/hH8CXPbS6e1LLgNmD5+Ii9Y/2
4N1eVUtXaWbKrhfPV7Hu8bJ6R83Z70LnDBqH6Af8TbPma06PsGTtEW98HRI/
+eAeO8YRbyjvzsz7udyR9QM+813g7Ldqjqw9/L+kHTh+cDjPo3Ef9QOWb8sr
434b9Zxg8nvg8PPwt/AzGG8LZx8JatbKgflJ8CiDxX5X6vJ5EPPsfBo/sAdc
h+zBOIcfCGuXv2L0XUs2zuEH5rpOfLprvhW7XvgBZ+F6wbNHHHLsaOLK2mO+
rkl6wk7M75oUp4GjnuBI8ybTmeb3z3S/8LvgPfe/vbe9tS3rB36pMT13rH5L
vFgYDxjnceSf0R68E41D9r6D/NtCjOe/5xEJ8wj8GJ6XhKYrz6y35fkO/Lma
e/GTpAtejGM8qK8ZLFUm8/uI59dkS4dPXdt2ZPZDTznlEfDnsKeZ+tSRbzRM
Wf4F3uD0uMYlRtpi+2y0xziE/ZHOBkGtm5uL/WSjH+RNeC+wym5wTL8blkwf
PNfjLzQpW7WV16PA/RuPfLTOg3PMg9EUb8BfQTfMa5gHkSe2M5o8dUE3czbf
Ib9DPg47UY+qXivWftttG2YnxknL7L0zUsfx/Be8Qu31Y6XpNqwf1KNihevF
ODmS5zWr4AafZ8H3nm2b8bi1hehXJfhV+H/ky+ZUFxL8oQR/CI5+Do8b4jD/
3+NQwjjE84L5yzymzco2bpxjHvFb/y7w18ROwjxSXdKj9sLvZuN3MW7hb/vR
c8qeX/KfZ8lv4P5i/OP+Ir+Gf+hI7zvAkV+j7oT+4X8mk99G/3heNIS4C/og
3gPH/JUq3Efw/XQfMR7wXqmGMK4wH7WmcQU7YU/XojobOunw/BT+Z5zwvID7
0PMixKUS4lLh+ZXw/KJ/3HeTXrfSL0fzOhLuO97XYL4AH+Ep29w+gs8X8EsZ
qmv2XXpoyfrB/fKk90HoBzxzVbXgdU8tWD/QYceMVqvCVvD+MX8lLFZ5nKfN
6yqwv7Bm9n6zPXx9Bbjmsy698mKt2PiE/uFlUd1qb+PXi7oN6oel0euDRzu2
Z787eteg70sb8uvCeAuleibaw/7eF/a2mLSKP6fwb7e1SgY5BXL74Se3lpzq
seOiBbtfaF/nce65GVt5vtDr9cyFZ3/wddp1Gp+XKZfL/7V+u8sF9bjkZXn/
eq+0+1yYTttq9/71vgZcfD+S3UjRv7j+0If6F9+DTNsW9+yVT9G/1jk3Wrr7
Rl+3e/9alzuV2ovrSN8uez0q6ka6zK7LTPmvN69ZP4/GTzx8tPk1WZusR6nV
G71g/PwU+6Ateddlepf02gXdf8D6sdSYKlsee1225O2rPg8fPWG8DvXfSdE/
4wXUv56if8abLfg6wESeL+swvdDUtvlB9rtDLnfp9T9uFd1uYauQHMbVqf0M
RXuef1H7YEV7xh0b5zw23n5TtrzL1prvt95mvOdm6w+Tf/OBShFHDs+7zviO
WVdzPS5d/1d+fZl0aKzQgdljTzrMVujA+K1pKjkTf/cv5onOQV/rB9gfke0q
KF064A4fVxiHgYpx+C/7pynsl4v2+ynsZ3xqP0X/exX9s3520XWJ8zvsFOeF
qp6Lquyv6nn5/463qp6vqnSu6rqqul9VPUdV6VyVPlXpX5UfqGo8VzX+q3qu
/7/jvyr/U9X4r2rcVvUcVeVnqvIbVT1fVfmTqvxhVf6kKv9Tlb+t6nmp6nnU
nLq0/wi9X2x9zqyD7o/KqvP5CHyNlbpV9jZLycR6gGdAdDPGXzRyKivbZCG5
UnyFuK6NSsW8m/1NGUd7/+T91wLGm0sGiXsdFuS0Z+0/eIa2bP7AhHG0b+2w
wfXtqd/xVZixp9U8Pda+T9upz7uONWYc7Zc1mDJZ+42J5Gie3O2xuxFr/67T
oOg37Y0YR/v9JRmfjPoYSzlVfD+bdP/mEc3H5oz7Fl04FPpJn7UXvwNFe/Al
nQIax+UZSGHSqmOfsi1ZP/67VJb7qeozjvZz83dFql3Ql0x3BMgvb7Vm7efd
fb2sob0e42i/6a7p/K4P9KTyWo3P7Jhty9qXzVm3Yd1UXcbRftIy1Z7HVPWk
9BHXL04bZM+/5zUY3NP9og7jaD/eNPfjps660rRLsXndJUfWvvuphNfXjHQY
R/tpBifbVm7VkVxNuxUYaPH30e9S92i8W6vNOBsP7ZMmj6qhw8Yh4uHtN2p9
zlCyZeMQPOXstxemMhs2DsELp83pfr6TFRtv4G5Rr9OC1lqwcQUeenlR37aO
5mz8gNfpONR0s7MpGyfgF+pNtG063ITdd/G7VNx38K+dbpTrxhqy+wv+rpdT
n1FjDNh9BH9y6MWS82P02f0C7x3/ZavfEn6/wLsmtUz0l/P7Aq6Xsn5Ta2Vd
pjP4jgk/xl4YyHVm32O+m/njpKcT0xn8vPLZVXF77JjO4GcyQnan7LFmOovv
/aEz+MS8Q2ZnP3Kdwbt6DSizCTZjOoNbOS00DevcgeksfpcKncGL3tp1trAw
YjqDl9wxuVPvG9cZvNgiJ21nMdcZ3Neh3dbrn7jO4MsTXvRvoqnHdAbv3m6J
WrtgrjP482sODRL2cp3xnjr8Y9LRawb8fRz4arNva1MyHZjO4KMfWf2cUmjD
dBbXS0A38BNGHmXra5ky3cTvTKEb+67ze+JR80NcN3ClnTodlYYbMt3ANYMW
nOrpZcB0A681PuaVsq8+0w285OT5Bi9HcN3Ap+hN2GC6hesGntbvbeO2r7hu
iLtWj8nSG+rJ3xuCe9/oW6jUw4npBl7u0thA94Qt001cBwLdwMf7nzArXcJ1
E78bhW7gy7OaaLVpYMx0Y9+rXrPyPpzOdQPv6hCftm4p1w18UnTMxzcLuW7g
89zDpn/ezHUDrxc5Lm71Na4beI2b+kln1XWZbogDW9xc9cR7P39fD755TGDA
xh7OTDfw2fV+jbf0tWO6ietVoBv4/n3TTZPvc93E70ChG/jxqdFzIjtx3di6
mo5FOytecN3AQxop3VmYznUD99m+sOOpFK4b+MWhn/V2yrlu4P0yJi698Zbr
Bl6vltVRbTOuG+LSz7n9De07eDDdwE1Nzle6pXDdwA9HZFp+i+S6gWO9DXQD
z/I1Pa3xjesGju86oRv49PW6av37ct3AP5l19DT4wnUDL8wOuhGby3UDH7hV
z6JpBtcNfNgoc+tVF7lu4JdVKuPXf+a6sf6j2hz/aMd1Q5ysIYw3cHG8gUcJ
401cV4P5ArzxSB/dK3vMmZ7ge4VxKH6/CT3BxXEIniiMQ/AhwjgEF8chuDgO
wYOEcQiuIoxDxPNxgt9j3zkKfg9c9Hvi+iLoCR5WI8bHIYLrCT5B8Ifid5rQ
E3yp4A/BOwr+EFz0h+CiPwQX/SG46A/BRX+I+tsoYf4FjxPmX/BwYf4V68bQ
E7yzwfyIpHZcT/CTwrwsfo8JPcE/CfMyuDgvg7cV5mVwcV4Gfy/My+BThXkZ
PF2Yl7Hu10+IG8HftXLwMjrB40Zwu9Wpt/ee4XEj+KGE+esnruVxI7gYN4KL
cSO4GDeK32NCZ3AxbgR/L8SN4C+EuBHcR4gbwcW4EVyMG8HFuBHvm7YIeRB4
spAHgd8R8iBwmZAHgYcIeRC4spAHgYt5kPg9JnRm34EKeRD4ayEPAn8k5EHs
+00hD2LfpQp5ELi+kAeB7xTyILyPmyHUPcBXCXUP8IvHb+QFJvC6B7iPUN8A
1xDqGOw9oFCvAD8o1CXE7zGhM/u+UqgzgM8R6gngG4W6AbhYHwAX6wDgkUK+
D+4n5PV4r2QfN+54/QZGTE/wtg5+XX1yzcQ6koQ6klAvklAvEupCEupCQv1H
Qv0np4rvLoU6j4Q6j1C3kVC3EeozEuozQh1GQh1GqLdIqLcIdRUJdRXoptki
5UplZc3sgKyf6zJv8fe2eJ8YrGZ2qf8DC6Zn9sapc8OLamUv+bnuRUCZOdMT
3wuUXNzRe+EIM56na3WyK0qvnd3c2/vo0kkdmJ429L7eQ+WAk/1JrqfyziZv
veOUs8ce+3rupzvX804VdbM2ZH/d/GM3og7y8VlK9scXLKq+cRXXM5fs/+pe
6qO/nuu5huw/UDu/VHaC6xlG9s8973Dx8heupwvZb/OqnvVrT67nSpXJ373j
qmXXqjPsbe9U7j+tl7sfSA+vnq21z+3KxQ2WTLda9H5w27B+C2e84s/1bbVG
oTo+NbI/uIWEFXiZMd120/u4fha3Cy6Yd2C6TYu/rxGnUzP7e9z2x10m8ufa
r4r6YSzZmbLjZe3qk7j/HELvJSfP76t2TMb9py3Z/7KwfvYkK+4/Vcj+wyFT
b3fw4s/1fbJfvuGGUsUk/lwfJPuj82YuCMngz/Vcsn980v0l7+pzPZW/zuyi
4/NDbhm3+UfcWb6+DuugWrZ/atv+my3TuXOlRkZl5U+5vvuRpl/a8HigVPhu
ETqvqp3arii9Uj7NZdP4jhP5PNWK1gl8m1tnZeIUPk+9W7jLsyhdKXtEkW+v
vFl8njpZRb0O9rtoDjKNaMHjgX1kv07dCX2vX+c69yD7/e7sSi1L4zp/I/uX
t3z3/GkW13kL2V/7yBHlpo+4ztpk/yPlvv6xLfk89Yns771ki9H8EVznd3+e
l0/yWnpX5VPWypjOWBfqPqCfrL8ej2Ot/oz/L3Kzb07m54fzOLZA+A6U1TlL
nzzzjvsuT3k/qVqPQTyOCqmi/gZ7Zngdfea1meu2iuy5/iXc+ZYXj1cdyJ69
l0JXlLbl8epDsufK6W1jfrXm8eqCV17Tw4u+ylWa7K5XasfjKGNaBzLLqsRl
8iiuWx7Z36TV8ilTj3Dddv+5j+/kD9N+JDhed2O6Yd3dI63UlilPHZluLf7c
l1L5NefD43PDeD6VJXzHCt0S/zwvH+TDK+ZXBjXhcb53FfW3JLLn6ZsbasFK
PG8qJ3t0vuptbLKV69aW7HFpqF634Tiu2xmyR//MzPe9h/0jb/rjH8rkfQrt
01ZN57qp0fpPJ49YT5dkrls62V8QdjKgyXuu2+s/9jyQh0d+DNCz4Xk93ks+
Oa9+IqfxP+ohf/p/Iv8R/3BN01Y8r+8kfCcL3TT+3MdX8qiX9WN8V3PdBlRR
fysme/beszNo68p1yyZ7AsryrD0KuW71yJ6gqEOPXRK5boFkz8RNdd/VXcd1
2/ln3L6QL/HrfdA1metWSuvKfJM2tHcv4Lo5kP2HX2xwzW3O883Wf+xPkas8
u3f253muG9bhS/18PtbazHWz/mNPrrzo4II7Y8Zx3fzpfSu+b4VuF//Yc1s+
emRr3ymPuG69q6i/1SF7TjyY/2lFb65bKNmzaHbByhXlXLcQsmd4+wdFZ09y
3eLInqCvk1ZPP8R1e/xH/+vyvKjaXcNyuG6R9H45u+CBZ4MSrlu9YQr7p8Tr
HdI257o9UVyX7PHg+KMjp3Zk1/tUYb/s1/JlSX6f+fV+mXfcrXxY3r/qZs+p
n6nWhps6+fDr7Uzvf9U/eAWufsOvN01hvyx//8yr3bL49TrS++XOvvaP+h3m
16ui0Ec2qLtWvStn+fWmTlR8HzHs7ap7Az7y6702QWH/2BLD7I+2/Hp1FONH
dqZNk/b3O7uz+95T+P4X8905er9s/nBubvctvM5Qfd6f50K2Wc34VtdbXJ+I
KupgevS7GwJDI6c04/rcpe8p4tu5ZozM5fosVzwXsj4Xn6Y83sT1cSc7fZfV
9tuxnuvzueuf5052OlilPCiV65NM9rdZ4v1D5wXXJ1vxXMuCy05q6plwfRTr
1j7ItGWjEnuO43UbrB/rJ0tKdZRxvz1M4fdkc45eHN7M2Zbp9p3WZY1ofXFJ
ZSjXLVXhh2UXps9oZzaL6zaminrXXrJn86UXZ8pO8vmuNtmjNd2iZPNMrtsg
ssdiQe0xD4Zw3Y7Turju1vElG8O4buoKPy9rZfA933cp1+0e2e8TFPByQS7X
bRXZ//R0r2E3GnLdzijmQdnla28v59o4M92w7lqj5UqH553tmW6zFfOsbNao
DRs1DHmccF9YPwk9sW7taNslL+qqcD0/KuIBWacpvTQPl/P4oTvVkfKEeRB2
9tiqp9XSg+upRXa2XvD0gZ0G13Ma2Rl46mlxnYZcz3yyc25xnVZF7bmepop4
QzbRU3mQaleuZzTZ76veYOzdFVzPp2R/TMN1e2RP+DxYoojHpB1r8xrpt7Nj
emI9+eEThYHZX3kekaCI92Q96tape+w6r8N8pu/WX5ZK126b8fiW4klZ/4Eb
m2/P5PHtQVqPOkA5c7lpO17vqq+IV2WrR+9veMCG6xxGdaT6QpxWSvavbpqs
9ngXzyPakP1pup9vJcXz+JbibdlM1erLpm/l8e07sr9RqnGQQy6Pb73I/ttL
O1f4/uTx7Tayf03u5ZB93lznH18U9lseXdPjwQ6u8wxFfiE17Xspzk3LkumM
9atRrV2j9odaMZ3vKvIXqVFw/d7jw3m+hvXGr067Vlq05fUuyo+kkhXei3q+
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
HX3JpL3O9qy6vI7kFVLQudxYT6q/anQzLVNeR2o729fD4Hec+b5G2uJ5AbyO
dG3Ryo6PfseTV2i/UPDpzdovcyjSlpK/RDV71KItq4c8c14+Lua1hbTmft6H
9FvajLco6O40oKO51Ec++N5MTQPGlbdsDk+pZippbCvP9Rhuwvi5oNsppyuM
JTNa9wWO73EaqW+wMj9jy/iv/d/kO5P1pLL5T3etemXPeITrEes9cl3pxifj
1l/q83pO25LP6pXvdaRDwybF9rPk9ZwHRgd9Nax1pEfzHxUbPzBmdYkJMTb6
9g9MpI+03gz8Mn3Pciuin4Nyoj3j5VtufS7X1pPSi7fvC7vgyHjw7ZQaT710
pXg6xwfc6FWk57p5OtKuEVdVmvQyZvn76fLVYS93d5AysF8N8d703UdCYQvZ
g/mOjC+dEbcuOF5XivQNOeK2x5nxLtXLCrPO60hj/bM6fL9kxPJZxwT9fha9
TaWZWIdM3Ie+g+jvXOiRFurMuJPdes8V1XWlF3+dn56RlUnnp38S8tlmlM9O
EfJWOeWtM4T8dBblp65CHtqB8tBfTf7ONxtRvpkt5JVzKa88JeSP9Sl/3C7k
ie8pT5wn5IOVlA+GCnnfScr7PIX8bibld3pV5HHutJ4EeVwEfR9Rs4o8bgH5
W+Q10cqN288LcpKUyd+CX6vxYEZ8Z1vJg/wt+LRR446O7Wwl1SJ/C659psZZ
DQ8L6Sz5W3AP1zmvSueaSYvI34In6oxfd6RDB+Zvwd/kbi2dkWEoDSd/C77G
4na/tKEGkjf5W/CzDeOfhbnrS4bkb8GfZGsMn+ShJ6mQvwVPju09YEqorvSS
/C3LT0uC61ds1JHqkV9FvnPEaVKv7yFW0hXyq+CepWN0U7pZSMvJr4LvDu26
W3ubmdSV/Cr4snN23olSB8mX/Cprn+/ZYvVYA8mY/Cr4xLvKWqd89aV65FfB
Xw5X/bXRT096R34V/GqxceThMF3pMvlV8PnmtQdO2a4jxZP/RP6i3rTNWksn
C6k3+U9w743nx/nGmEnNyX+CX1uy6Vzw7/vF9ikSvlNoSP4TvLHy1PcLJH2p
lPwnuMbN9fI4dz3pOvlP1s+JTKftIbrSQfKf4Ocn27az2/B7Xv/7PEdZQJNL
n8udzKQH5FfBi+8PaKVcZiJ9IL8KPofW+eeTXwWfvmiPxU4DPSmN/Cp4Rc9Y
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
+j8AkoOC
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
+BaL2vizg+up8AUP5b1H13Xh9x0UXMNxn+hn0bWe+IBlXX91yfYndQbYll2D
82i8a/JxLZJdR+0rORfsuKyK80TEcKkH4TsR6i2o73gour6fuNCowjE49B15
NOxt7G7s05uSzUnsDhtsKvfJ/Y0SNjNxYHI45KyoAWaf/ivehuBvoLC9+ZaM
vG/HwjlN5v5PdG0Wz4s/hR2JPUkMjBga54VzQx0PebcZyX7FjqUG7aXkBxGj
mBH8fQd68OHo7wGIfQ1McQPk+5bJPuecEq8kbjkguDYJ3d1C+Ino2CixEeqv
8DMWircs+HsTfIoXov07YjXUeNySua6S76Q4u/NFJwXnDpD55FvJ5VAbQp3V
7yX7Py9G+27EaojrYuMdU7ieGRvy2MLx4v/iEKLvBNeEoxeuzh3DRAe9G1xP
ju5YH73/yNl9Hl3LS9xgSnCdOb7wF9F1vcQQJkXX/OF3/64+rUv2pwZH50jI
TfDNFGf36+jvFYmpUPtHrJv9+1G0/UCNxrfROQtyI+QPyZ8uT+u8Te5v3/CL
yT8uSfuc72rIlfKtE3lMYiLoU/Li5Fjxl6jL6ZL0PrXr5FT5FmdqcI09NuTq
4G/f8LWfjI5rE8t6PzjGS6z3+Whfnvge3/tRY8C3i3z71ilzbe1MZHLJNu1T
0fF34mZrgr+zw8dE5hDXIz9JrfUP+NHB3zkyX/y8MdHftBBr5dtA+lJrzLdJ
WyVZ2jZ33SZ2wtjo2DqxuMFlvy/8mv8BKL5wtw==
          "]], 
         Polygon3DBox[CompressedData["
1:eJxNm3fgV9P/x+/7nnvuzS4SmWWU0TDztWeijK+QUEYqERktpKEoGSlbdlJm
QuVLRikKUfZIykgJGVmZv+fD8/zx++N83ud5z933nNfr+Xq+Xp/GXc5r3yvP
suy5kGWFfqfoT9RvW+HmVZb1LrOsRy3LumqnV9X/TuPHa/wKjd+l8TbaeZLw
fOGnhS/QfiO0f3O1C9U/WMecqP5r6j+s8T91/Bnaf4z2Hy/cT+Nnabynxl9T
/2ON76LxDfX7pcbP1PbtNT5OrYf6i7V9d4330/HtNH66tm2qsbvUuqi/js6x
ofrPqn+vxv/Q/sdq/9Hav4Pww7rf3sIfa/xU4Wka1092hMZbqnOPxrsIz9P4
8cKPCvcV/kT4dOFHhPsILxI+TXimjt9QuKOO31P4MY33F16i8TOE/6P7OUr3
M1n4duFJGu+n8cXCXYSfFh4m/LVwT+H/CQ8VXiF8tvB66X7u1Pk7CW8lfIHw
ROGzhF/Q9TcQ7iC8h/C+ut6xut7zOv4+4cO0/2MaX6DxZ4Rf1P4NhE8U3kv4
cI1PFn5TeLrwg+n8H+r4k4X30fna63zPCY8TvlvjJ2l8jvBxwncJnyj8svCx
vF/tX1/9h3Sd/wmv1O9xGr9c579T+Drtv6vwfdrnQOFuwm8If6fxV4X31PFH
63qPa/wO4ac0PkTjy4R7CM/Q+eoLn6D9/yM8S3gj4ZOE9xY+UMefoONf0f4P
Cl8a/bwDhVtwPu1fR/hI7b+T8GUa30z4ao3vJjxIuCHzW3hn4cHCmwiPEN5F
eED09x6Qe33soesdyfwUvkX4kuj7u1i4mfCaaq8L76brvav+wOj7HZx7vrXW
8Sfr+NO1bRP1Z6q14NmFn1b/cd1vS+aO8GTeqbZty7Opv4Ye5BfhhzRWV+d/
XudbW9tznW8T7TNG7RCNnyR8mvZpqP4stZ21fX3hn3Uvs7V/U/VP1vE36vjV
pedLA+GZwp2075M6voNaZ/XXqvy9dtf4e+qP1Dm2Fx6rsX2ErxLeQfh24X2F
rxFuxvwV3l/4OV1vXeE19btE+FqNNxe+S+MHCF8tvKPwHcL7CY8Q3lb4ptzr
q4vur9C9fMGa1NgValurf0Pu+T9ceBvhG3PPj6HCmwtfK7y78O+l5/tGuv8X
eV9q84VbCb+v/m+l7dmGwjOEO+q4obreQrUT1a+07VWN76Txt9RfQ22e8K7C
76i/jtoC4T2EP1B/iK6/qfBIHbur8BI9d2vh/hq/VfggXa+jzv0qa6ayzcR2
Llbrrf7ROv4p7f++9l+s8ek6fm3h9sHztVvp++M+X1H/b413431ofILG/xHu
zvsQnljZzmJvr1A7R/1nNL6Wxo8Jvr/ndI5MY49q+6eV7T72/x61bur/rfFn
tEsj7T8Hw8kx+tlG+BXsF/NS+Ojg9XOv7r+H8Ns69gThccJnCb8j3JHn0fm2
x9Zq/1bC7aPP/1Gaz8/qfOsIHxv8/Z4WXlP4v8Hr8S/hrsLXC98vfIyOfxr7
Jfwc46XxlsIvC1+p8SbCN+e2f6PxOXq2U4Tn8mxqTdN6O1j7ltrnFfVb6vg3
8Selv8fmwrOFfxZ+UHi9dL23dT97CPcUvln4U+FDhS8Svk34LeFWwmcL34S/
EG6u612jbZPUf0CtSe41/Zr2+Uy4DfZE/bHaf2Lh9f9wWvM5PkD9Juq/pv7l
uueteB+532dN7XnhbZN9xdnz7Seonad+wKZqvKnG56kf1eYKtxBewPfV+c5k
/Qk/gP/W8/5PeAvhl4QLtTnCzYXnq/9kYR5xeLD9e1ttl+A1coHONVWDTLF2
wfaY9TxQ99KC59XYVOGt8V34Zdm32ziZ8DTtc4H6Y+AP6m+hbXerP037b6P+
/dh17b+ZzlsTXpXWDOfhfLzje9R/sbQ9nZDsZ3v9XqDzLdX+66v/s9pfwrfA
gzQ+Sr9LhfdQW1vnW6Jn+FD9kdhZjd+q33+Ep/A+1b+y8HhQu1vXWao2UOf+
TPgajbXT9ccmvrVIz9+q8NinalcV/r58+ybJxg9j/misofBd6nfS9YP6Y3mP
uv6uhfnRvWpnqX+qzv8t9kf9hTp/B/32rXkf9j1R7SL1r9Y+P8LPuL76D2MP
1D9Zx3+NfVf/Ix3fo/C5sQHvav/NNX6f+mdr+58aP7SwLX5P24arf0Xhfk1t
tPbvqv2HqH+ytn+l/XeEZ+IbtO1LOJNaJTxd+Cf1j9d+fWrmdM3Vv0/P2zPz
tX/R8W10vs7cKz4KrqN9LuRcrEm4hlpv4eXYJN6d9ulU8znqq3+uttVT/09t
u1n9O7TtN+E23JfeZ0/ha/kWzPHSa/aB3GuatQwnqY8Pq5mrsCYfxNdkXqsX
a9vE9H7bqn9R6bW2QnipnqVTMLeAY7zEHNL42vAVfJrGjxA+s+Z39lk0Z9wA
G1gzl7wlzc9NsFnq36T2a81zhO93jfbfDt8Nx9Px5+iYMRq7TXjr0jbpNl1/
u8y26lrh7fGFcChsc2n+Do9fUJrT1GOt1Mx1ehaeK2+oDWU9wnGxjTq+R/S8
YH6MFH5M27/QeS5V/xo4DnMPe63+z2o3Mh91/A76bSx8uM6/ldpP6t+gbaGO
r0d8wjPyrIdp/BT1z9W2jdW/vvD+p6v9rR1v1LZzar7mDYxzz8IDhMeo31ft
bOFLhPuUjj/GpfVxlPrd+Mbqd4IT6v4v4BsLr6V2hvqjKvt+OMDp0fHRXWm+
Hqn+6Mq+Hw5wpsa75/adnJ9Yhuvfrf62aker31rX+xxuJ9yLuVyaa83Vvn9U
XgOc+06OL8wZ4Y5wWmKX07X/AI0tYP1E21S4LhwVWwvf+1P9w3RPa+p9TtM+
g4W/1D5nVuZocDU43MuFfeqIND/xtU9Ev7vPte3Xyj6d+btxZl8PB4YLw3mJ
HYkJiA2ICVYJtxd+Cd8v/EPhGIFYoSP2p3AMQCxAzPdGmh/Ygl/gJKxltaeE
m8FhC/sUuDUxD75mVfKd2+ETC8dsxG7w6d8LrzfmOxwXrgunhFvCUecU5ohw
RTgksQWcilgAzjY92d/5NdtIbCUcBC5JzAA3wcfiaxtn5jJwULgoPpjYbHJp
Lr6p2m96l4PwQXxrje+MvdT4S8JbCj9fmOPCdbfJHFteqfHX8EfY5GiOBpck
JoG7wanh1nDmucKXqc1lLgsPDubUcGs4+CuFOfrYtP6xP3AguBAcm9hwRGlb
tL/wcuGrK3MDOELHaP/7DesXDlaY08Ht4AhwhVMLry2+Gd9up8LPyjMP5HyF
fR0+EX/esvBansGaLHxOzv20cN/Cc4C58Ixwf/VbFLb9zwtfXNies3ZWa1tf
+IzwaOEurC/sG+tL/V3U9kr+AdvJGmetYx8Wqd9E7b+lfSK2m3N01fhpufkh
axCtAb+Kfx2FPVB/kI7ZT/0d9I7+gs8UHoPDf5/s0SfqN1U7pjTnhfvCiWt6
X6NK+0/86Ica27PwXIazjFP/YG27n9hU+ywQbp38zR7Jfh8kPD53TD1f+Cg4
svDhwl/wPuGHwu2Fv+HdqC3XvfwovI/6t+r6y/AtzLHSNhnb/E5mf3yojn8o
+bd3NNZG+GFiMXyy8M2l+RE86WuNtVV7Al6h8U+07WjhZ4Tb4v+EjxB+Kjen
xV8eScwgfBg2RrgWzL3h4GgIh2n8Ebg6HEP4cOFHhfeG3xWOkYiVXmXO59YI
0AqwcY2jbRy2bhAcuDJvh7//pPaB+gO1rY5+7xXeG/+rNp5n07YRGmstfKfw
68JDhY/X855fs09dER2vwMUXavxKjR8r/Ijwx8Ijhfuq/a7rX69tO2msndp9
vEuND9fYpWqV+vdo214au1g4D47/W0XbZNb6KcG2uq22jePbwyMq2zBs1anB
tg09h2d5S/hy4UvUQvAz7BFtI7BdpwXbjkOirzVP+LLKcQzxzAa54w+OGYUt
Cz4X74hnmZ3e3b7CN+I7hAcL7yN8A7ZFeBD+QvhyfIVwv8o25HG+fbBtYZ81
gp+JYy8iZtO1bxLeVXi/6P4c7TNEY/2JQXJfcxeNrUNcq/732Lfgd3Yt9iH4
XXKO4diP4HNzzBXYl+Bz9VFbrfON0baW0ff4R+5n4N7zwtzlNOYXvI84CF+m
9mrwN+PYWcHfcpLmx8a5OSXc8qGkh8H5m5S2T9+p3yvZl1Oj463lKZ46JTqe
Wpbiywk6Zp3cNme5xu6HL+bmDIuEO0THd4uTXnFCdDy4JOk3d5eOh4iLZgl3
jdajVqZ4/Yzo2Oxb4bmVOQ3cZkWK74/XsXN0r/XVOqh/nNrLNW9jDE0EbQSN
6KQUh22T4mfW8vHR+sAn6r+Qvj++5NOkv5wWHV9/leLz23V8mZsjYu+ZU2sG
rxnmGpwd7n544kt8n28yczz45eOlfW0j1lvp+LoZ/jjFf3vqHHfjW3XOacSr
2qcxBLNm/4z93V3982rmE4sK29aG+l1WeY7wvafq+KmVvz9r90XsSuWYlNj0
Jeydtm2t8cvUf0D9JzXeQni08BThKZXjOOK5M5K/Ix7cqWYOS7yIj4aLdQ72
3fg/uCMxzXu559vvNcc0j5b2t/gaOPIHuf0rvo2Y6f3ca2itYBvH2sJGNRae
ntl2YcPQdtBgsG3c/4XqPxisR5+n9l3uNbWdxs4XvrBwfP4C8ZXwt7nXfBON
9xJemXvNNUWbi9bfHwrWu7HR5wtPCLbdW/O8NWuiRxR+30M1Pi14rWLz4TLn
B/sCfCBc5pxg34iPgsuem3wXPgjf2TfYN20iXA9frHaY+g3U1sP3q7Xh3Ubr
+w9r/3Mq+zi4Yq9g34cPgmudF+ybuql9mlvz3yz6mckXPBL8LtrzTnTuq9S+
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
Fk7Lu789mOsS46J3Tw4eR3NEeyQ/vGXlGufluWuAqX2el2KrM4JjJfJ75xeO
KYktX0+xUdfgWIv6LrgINuaC4JogaoNY09TPwKmZG2ODufZGlWMhODHcmPoi
1jaaxKAUo+2v348SH4DTw+3/1RxKc2i4NJoC+sS/ml7umki0vk2DuSg52Pfo
l9ai0VDQH4bxTrX9UeFDo2OkIthGETstKp07Zc2ydsk3U2vD+iEf/XFpXzdN
43dXnpfMT+wf+THy4diaiZnnCzXxr6f1Q608nOkTfEUwl6JG8dbc9RP/1i6W
5uq8Y/gcGjNaMzn+zdR/r/S+1FzcnOYgWiA15cxN9ES0a2KgLSrXHA/LrYFS
nwGnh9sTr6Lf7FY6duCb44+v0/47Jz7WRbi38C+5Y8rm0TFjo8yaAbHkLqVj
B2II1u9V2n8rYkf2idaMiL3GF9aSiJmwNbcFx1LESNQmbV84dpoQ/azEaMzf
z0vrUdggbNGapbUkYmpi680r62HEbMRum1bmyu3S+Zal+dWpsFb1ZWnbh43E
Vt4fXR9BDMj8fLu0LUIjYP7XKa29EeMT629bWFvrnOwTNZcL+bbBtZjUJFKb
CH/sEjyHmcurg7nus9G5HXI26PVflbbtcBK4yaeluQQcYmLibmh1+EDqTT4r
zS2w+dj+5aV9AT4CX7G0NDfCxmPrn4nOFZGjIFexpDTXgbPAXeD4H/Ptg7n/
9Ny5SGr+WI+LS3NtOBJcCR+5BF9T2HfiIxfBnYJ9Jz5yMXM32HcSQ6Nt75i+
D5z/Q43/FhwLECO9L/xLcOyEDcQWUjOKPUEDIL+Gpoo2gCZH/cv9wfZ9L/12
qzk++Jm4qbS22CBpN2hKaEu3Bmu5P5Xmlvg4fB2aA/k8NNB/0lpDO0ATpn7o
sdzciZiLuIwaOGrhiAemB9sAbAE24/vCNhvtf3LipsSI1GPC8eH61OigHc9K
1/y2NJeEo8JVx0fX36AxsD6o8aTWE32ONbdDZftCrQ31e8R0H2j/X4NjvR9K
cws4M9yZmh/01ZnpHRKzEBvDkeBKxAhwmx+CY4fXo3OX5ITJDa8q7evh5HDz
laW1bmImYqfvSufbiXmIfd4pze3R4PAPxFRom88G77+sNDeBw8BlqJfBX07L
bK+pb8W+wAmod71P+8fcOeuzo/FLmd/pePVHwa1qjj+JQ7FZ2J5vgm3Z9Ojc
KDlT8oXPlo4/dkzx6djo/Ac1PeQzPoq2fcSk5LtuF26XucaG/Af1+xxLzRm1
Z7dF51OosSH/cWs018N/kP/4oHTsSY0rta7MB7SDmO4fzRjtmJpm9NB7Sr8L
agruLR2LofUQHxEnEVuhvRDj9wn2h2j1WyV/ypxgbqDZUuv5MTF25hpS8nFo
GGgZeTr/wmjuCwcm//Zh6donaqCovd2mNJeH85PfoJ5uds01EtRKoPf3KXzP
ndL9c25y7uA3o7UNNA5yhR9E5wepoSW/h55NbpCcJ7nPWdG1IdT0kC+iXphY
AE2V/Cn1v9SKwGnIr5LfIVaippr878xoX0WOklzlDdH5KWqsyFfjw+A6Twb7
thnRuUxylOQqD03xyhvBXOENYsTMOX1y+9T7ohUw56lPWhDNJchJkpucG10L
RI0R9THzo3OV5BzJPfI/VLfk/h8J/rdqdHT+nBoz8q1jorVeatLI5xEzYO9H
BPORlzV+c+YaHuptsDn4i+HJFs2Ort2hxoZaG2J8tJrvg2P/F6Pri6jJId9/
RzQ3pYaNfBwaNdxg0+Rf0Zy517OCtejro/N7zA/qAW4RPiRzTRr5/zujYxH8
E/lLOC/jw4K58EvR9UbUGFEfBL8jl9Uo8W34D/y8WzAf5/8V0JupeXmq9PpF
W0LjpB70uPT+FwVzj/fS+qfmgtoLagSpFSQnQ730hxqflbkmm3zyg6W1Amwi
tpGYl9iXmrvvozVqtGpqjqj/aKrWIHfOg3o+cshoifzPCP9PRj0/tfDkj/h/
gec0PiJzTQf5e/RxcpPMeWqpuD5aUv2kV5C/vLfwM/Ps1Nug1VNDQy0N/1PB
/y3w/wvo7+RcyL38lNY7dhf7i42jbrZ5ae2cnAW5C+pP0WbJ8ZDreT9aK0Iz
ol7s3WitDs2OWhVyi2i/1KRSb/OOxqdkzpmTO6d+ltpAaqiopYJfkhvcKMUr
/A/pk7nnAP9bivaF9oxGPCRYE0Ibwreifb4dnYsnx06unRwHuQ5qcKj3mpti
R/4HgfpxtDy0czSUy4LzueTGqLGg1uKB6FwYNR3k17evHK+QgyIXRb61c+H4
g3zYW9G5fXL+5P7RUA/IbHvRqtAgX86sEaNN/h88Koze
          "]], 
         Polygon3DBox[CompressedData["
1:eJwt1wm8VtMexvG33nPe06CJSoM0qIhCk8st5F5jGUoaaaCBTIUQleaZSpqu
ylBRF1GaSNGA5DYPKkoDIhpIJE33+//s8/n09K7nt5619t5rr73WOhXv63rn
o3lTqdQWyqa1/luZTqVOgeP5a/lvM6nUaGwptoym56RSu7GXsPV8R7lTWalU
K+xn5TrKLag1/5v2M7BCshnsCN8c75YHxLKxQ9hebBy/UX+dVZ3Bq2B15M5g
WfwBuT3YWLkNWCe50/hsfDq2GeuCleO/pBXYcWwMVo//inZgZ9Ms7C5+NX3G
n5Abi13N73KNMdg6rAN20jXew6dh73v2ssrn0Tdyg7DlcnfJHZJbg3+OncTG
Ydfwr9Eo7BOsKXZC7nVsPPY51grLw3+tv4HpZIxjrJvkJGP/IraWX0PNsRHY
d9rcoJ+B9Dz/P+0/lftb5iV19fkpNBT7ALsFOyK7VfYp7E1sBk3U3ytyw7AP
+YZyv8u1kWvp93Zq7x205bfQg+mkXbS/XtuNWGusPz8gxhDbEmODFaN39Nc0
xl7uIX6mzBXYRv1uwG5PJ+2i/eXRn+wmLD9Nk2vEfy83JZ08f4zDLLnt2DPY
Av5GuT362yH7O1aNVmBd4j7oCH9RvCfsgRhn+oWvSIux+/ht+uvBz9ffDdju
3LF6GpuHzaVGrlsDa6Duypircpdmkvc2IJ1kIjtFboM+N2L5aKpcw7gGfceX
jizWmp9KE/iV2rXG8mYnY3o3NhGbQPX0l4/+xmpSLdrEvyo7XHlR3Ju2R2MM
tB0cz481ww5jO7Eh2Kcxf7BfsU3absYK0HTsVv7duB9+jr5LK5eht+lV7F3s
HOXi9IH+3tTHHLo01gR+a3zDcqXiG9FfK/6/NDnmgLZFlIvSLHodm42dq1wq
7oO2YAXpDW1v49+J74Z/T66EcknaHnMBKxPvRO5uPo/6w3ydmB9YR2w9reHT
9Ap2I1+YCsX4Z5J7ulu7P91/OXO7it88VBjrpL5FjBMVV9eZb4Pfk5PMw1e0
bauc0Vc2lcDKy5X0ezZfjH7IJGPWTm6RclV9zdT/FLoEu5heUh5DE91fg9xx
jfHdl0meu73MMeWdyudQ8Vg/sAPYPOVj+vyTnsAWYNP1NZUuwBZmkvGKcfsx
k4z3vXJHlNcqZ8W6G997TvKO413vzyTrW4ec5J3Eu/kpk8yH+7ACymX1fzM1
8bz1+AoyXd1/V6xbrNdyaewC9ffznalyzFvZPfqpGs8g30KmQiZ59o+w1nHf
MSb4I/wkz3Bx7EkxRtjD2MtYNWwztgr7BPsDG4Vdyc+lXsrfY71k+sd+Etd1
LyP4x6mqa4zHRinXj70ovgXtemP15Mrqszvei8+H58Q4xHOqK+V3Bl9RubRy
QeWz6JDy4nSyR8VeVZmfiVdSLpNJ5lzMvQHKy7Hn9F+LyruXXyKr7X5tf4q9
C/sZewPbG16+JV+XblV+HSui7Wn9DaRm8W3x53iOT/z+LrceKxHfK3ZTfDf6
rKCuIrXD/vK7NJN8t7NjH6J5/DG/bdW/oO35ysW1G6l9J75ovJ84G8T6Qtcp
d4/1Xbmo3Mdys/nhWcl4x7ifi1eKdrF/yB+PPSX2RuV9slfzFWR+i3GJswG9
qu6q7GSOz00nYxJjM09uAH6++lF8QW3/5A/KzZf7Cxsda3GsN9Q/1qDYn7CD
Wck4z8C+xr6JtVx/D8eepP4P/FqZStivcstyv434RnpiR7ENyiVjLZK/Ob4V
+TuU+8a3qVws3pvfxli/+FaVz8b+0nYXX5mWqGum7XFsN1+FPsaaY39g22Pc
Y6/GGmNnsAN8JbqAvsj9ftflrgWxJgzANmEdlF+LPcDY18ok++ptWF+sX5wH
5DZjHdPJHIq5VCeTrC/f5vYf1xkea3ysy+6/VO7zxHM9435ujr1M2b/U3Kxk
HsV8GomXVy6h3YNyGf1P4p+iC7GarnFZ7LFyQ7CLYt2NPTPaxRqkrol2D1E+
bSfLXBPzVW5crC8yU/Dqclvxsdij2GTsEuyrrORc0iWd7JWxZ47TtpdcI6wX
z6YWyBVUOI39m3ZiT8Q3jJ3hr6dvY17HPhEN5G/Adik+iT1Lt/A98ibn5Hnq
eyvcij2H5cMWYs9hd2ADsQLYh9hgrEXMJ6wEtgwbhDXHnol9BluKjce6xZ6F
1cC2YX2wxtjgmPfYIqwn1hB7FvPoqflYX6wJNhQ7K9bVWAOxptjzWGFsCVbA
s53C/kU7sMezk/kW824bliNTRGYI1pLvrW1JdcvxZdj72I9YX6wGvyTODdge
rAdWjf+MPsQOYYOx2vHd0yLsMDYk/kbgv6CPsaPYSOwf/DpajeWN9x5nXP6t
7GTfjXNf7K+xzy6Ks0m8M22flKsa14xsvFusO1aF/yjOEvEesaewC+NZ42wS
zx/7J1aZX0ELsQPYQKwm/2lksYPYIKwWv5wWYL/EeRe7nF9Kc7B9WB+sOl/N
vQ4zZkOzkvm/3e9C/E257XKPYZX4xXEmwnZjT2MX8T3oppiT2tzkW73MS+6H
3RnfqFwhucXqclzjOHZN9Bn7cJxJZEuomyZXG8vwD2SSs8xHWBt198daQPfE
+Yf2ye3VdlLshTHOcvVjnVaX3zVOYtfRN9hjMl3i7zeZrvF3gH578LUzyfoT
61Ah7U7IvUD3ppM1O9buL+NvFaw99gJWDluFvYg9gI3HqmIbsNHY/dg4rAq2
HvsP1hN7G/tn7PXYKKwzNharjK3DhmNtsWFYWWwlNgJrh43AzsO+wIZhbWJd
wspgn8d5LL517C3sKuw77OU4W8ReG2dx7AdsAvYk9gZWF9uVlazZB9PJ+TzO
6aOM3TS5icrNspJzUdk4W1BpfnqcGbTNz5+gH+Wqp5M9MvbKU9h+/tJY/7F2
2On4G5u/jFZh7bGT2E98DVqJtcXyxn7G16W1WKdYtLBDfG1azXaI+RLnTL4+
bcUewdKxL/NX0DqsMzaUWvF93PO52Ar3f9h1l2Dxd3z8Pd8szqYxh2KMYo2I
v0+xTOyFsefTNnWPZid77dJ0coaNs+yC3L9xTmANYk+mMXxW7BfK9dLJfh37
9v8BkLcwsw==
          "]], 
         Polygon3DBox[{{1292, 1291, 1821, 1067, 1068, 1822}, {1445, 922, 1063,
           1817, 1287, 1288}, {1446, 923, 1064, 1818, 1289, 1290}, {1290, 
          1289, 1819, 1065, 1066, 1820}, {1444, 921, 1062, 1816, 1285, 
          1286}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, 
     {GrayLevel[1], EdgeForm[None], 
      StyleBox[
       GraphicsGroup3DBox[{
         Polygon3DBox[{{584, 299, 567}, {587, 284, 565}, {593, 136, 568}, {
          565, 284, 574}, {1704, 91, 1734}, {1732, 579, 1742}, {1733, 583, 
          1743}, {1741, 591, 1734}, {564, 76, 589}, {580, 292, 566}, {1732, 
          106, 1284}, {589, 76, 563}, {567, 299, 582}, {581, 106, 571}, {573, 
          76, 564}, {566, 292, 592}, {570, 91, 586}, {578, 302, 569}, {628, 
          136, 593}, {1733, 121, 1311}, {569, 302, 576}, {568, 136, 577}, {
          575, 121, 572}}], 
         Polygon3DBox[{{576, 302, 421, 585}, {1735, 577, 136, 1322}, {594, 
          510, 284, 587}, {1554, 76, 573, 1740}, {585, 421, 121, 575}, {1322, 
          302, 578, 1735}, {1742, 571, 106, 1732}, {1743, 572, 121, 1733}, {
          582, 299, 106, 581}, {1740, 574, 284, 1554}, {586, 91, 510, 594}, {
          588, 437, 299, 584}, {1734, 91, 570, 1741}, {592, 292, 530, 595}}], 
         Polygon3DBox[{{1734, 591, 595, 530, 1704}, {1284, 292, 580, 579, 
          1732}, {1311, 437, 588, 583, 1733}}]}],
       Lighting->{{"Ambient", 
          GrayLevel[0.8]}}]}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0s1LVFEcBuCTWqZT2cpWWq5CIlcFaaOpJQiRi6g0PzLNtKnU1IUSERWh
FtFS6Q9QUGiRJLYIN0mUikSfpn1uXLcITSPyueDinef9nXO5596ZyWlsP9m2
KYQwIaNK1Ad9rHEsJYSdnDJP6rv1FH1Gz9MfRddvCSHGJ1Jordf8Uj+VFMJp
OSOV8tp6Fc9KtdRIrdTJK3vnWC/npUEa5YJM22viRWmWFrkkCbksM/av8Kq0
Spu0yzV5Y6+DndIlFdH9PNvBzd7Rs2aa97rmkLVnMmwt1xzXx/V7+qw+pe/T
S/Tn8s48wmJJdY/85BDeW9ull1pL5wfznui5zQX2P5oP8xPjnGchP7OICzzC
YlnUS/iFpfzKo/zGY/zOMv6I9v0WZc6IOeuneVlvlm7v+Nac4AvW8ClPcCg6
iwM8wL7ovdnDbGZJQk9iNX874ziXGOc893Oa2Vxx3X+uOjeDv1guDz3TDvMD
bud9bmM/Y9F/hem8yzTe5i3Zqt9kKm/QVx+u0zGhh44NaT7+8Y9zfBUhw/pf
Pjar4Y79OX1l43+9Dm3cVcs=
       "]], 
      Line3DBox[{563, 76, 1554, 284, 510, 91, 1704, 530, 292, 1284, 106, 299, 
       437, 1311, 121, 421, 302, 1322, 136, 628, 593, 568, 577, 1735, 578, 
       569, 576, 585, 575, 572, 1743, 583, 588, 584, 567, 582, 581, 571, 1742,
        579, 580, 566, 592, 595, 591, 1741, 570, 586, 594, 587, 565, 574, 
       1740, 573, 564, 589, 563}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1202, 1632, 1633, 1524, 1674, 838, 1711, 1709, 1710, 1692, 
       2052, 1400, 1583, 1525, 1731, 2058, 1401, 1203, 1836, 1402, 1204, 1837,
        1403, 1205, 1838, 1404, 1206, 1839, 1405, 1207, 1840, 1745, 1939, 
       1208, 1841, 1406, 1209, 1842, 1407, 1210, 1843, 1408, 1211, 1844, 1409,
        1212, 1845, 1410, 1213, 2016, 1526, 1411, 1527}], 
      Line3DBox[{1214, 1669, 1701, 1501, 1677, 1675, 1676, 2049, 1584, 1713, 
       1715, 1528, 1712, 1725, 2017, 1726, 1724, 1723, 1846, 1412, 1215, 1847,
        1413, 1216, 1848, 1414, 1217, 1849, 1415, 1218, 1850, 1416, 1219, 
       1851, 1746, 1940, 1220, 860, 1221, 1852, 1417, 1222, 1853, 1418, 1223, 
       1854, 1419, 1224, 1855, 1420, 1225, 1856, 1421, 1226}], 
      Line3DBox[{1227, 1634, 1502, 1679, 1678, 2009, 1832, 1585, 1529, 1586, 
       1747, 2018, 1228, 1532, 1588, 1748, 2020, 1229, 1535, 1590, 2029, 1422,
        1230, 1857, 1423, 1231, 1858, 1424, 1232, 1859, 1425, 1233, 1860, 
       1749, 1941, 1234, 1750, 1942, 1235, 1861, 1426, 1236, 1862, 1427, 1237,
        1863, 1428, 1238, 1864, 1429, 1239, 1865, 1430, 1240}], 
      Line3DBox[{1254, 1435, 1871, 1253, 1434, 1870, 1252, 1433, 1869, 1251, 
       1432, 1868, 1250, 1946, 1753, 1249, 1945, 1752, 1248, 1944, 1751, 1867,
        1247, 1431, 1866, 1246, 1545, 1544, 2023, 1245, 1542, 1541, 2022, 
       1244, 1808, 1943, 1591, 1536, 1243, 2021, 1534, 1589, 1533, 1242, 2019,
        1531, 1587, 1530, 1241, 1833, 2050, 1504, 1703, 1503, 1649, 1635, 
       1537}], Line3DBox[{1268, 1439, 1876, 1267, 1438, 1875, 1266, 1437, 
       1874, 1265, 1952, 1757, 1264, 1951, 1756, 1263, 1950, 1755, 1262, 1949,
        1754, 1873, 1261, 1436, 1872, 1260, 1547, 1595, 1546, 2024, 1259, 
       1543, 1594, 2030, 1811, 1258, 1810, 1948, 1593, 1540, 1257, 1809, 1947,
        1592, 1539, 1256, 1671, 2048, 1508, 1538, 1507, 1255, 2025, 1636, 
       1506, 1612, 1505, 1670}], 
      Line3DBox[{1282, 1442, 1880, 1281, 1441, 1879, 1280, 1960, 1762, 1279, 
       1959, 1761, 1278, 1958, 1760, 1277, 1957, 1759, 1276, 1956, 1758, 1878,
        1275, 1440, 1877, 1274, 1553, 1599, 2032, 1815, 1273, 1552, 1598, 
       2031, 1814, 1272, 1813, 1955, 1597, 1551, 1271, 1812, 1954, 1596, 1550,
        1270, 1806, 1953, 1549, 1659, 1658, 1269, 2053, 1639, 1640, 1548, 
       1638, 1637, 1737}], 
      Line3DBox[{1309, 1456, 1892, 1307, 1970, 1769, 1305, 1969, 1768, 1303, 
       1968, 1767, 1301, 1967, 1766, 1299, 1966, 1765, 1297, 1965, 1764, 1884,
        1295, 1964, 1763, 1293, 1562, 1605, 2034, 1821, 1291, 1561, 1604, 
       2033, 1819, 1289, 1818, 1963, 1603, 1559, 1287, 1817, 1962, 1602, 1557,
        1285, 1816, 1961, 1601, 1555, 1283, 1828, 2043, 1650, 1600, 1680, 
       1736}], Line3DBox[{1321, 1469, 1903, 1320, 1468, 1902, 1319, 1467, 
       1901, 1318, 1466, 1900, 1317, 1465, 1899, 1316, 1464, 1898, 1315, 1971,
        1771, 1897, 1314, 1463, 1896, 1313, 1462, 1895, 1829, 1312, 1461, 
       1694, 1894, 1823, 1667, 1460, 1668, 2047, 1617, 1684, 1683, 1665, 1459,
        1666, 2046, 1616, 1682, 1681, 1663, 1458, 2039, 1664, 1615, 1653, 
       1652, 1564, 2041, 1770, 1624, 1614, 1654, 1739}], 
      Line3DBox[{1332, 1478, 1912, 1331, 1477, 1911, 1330, 1476, 1910, 1329, 
       1475, 1909, 1328, 1474, 1908, 1327, 1973, 1773, 1326, 1972, 1772, 1907,
        1325, 1473, 1906, 1324, 1472, 1905, 1323, 1471, 1727, 1904, 1830, 
       1685, 1470, 2040, 1620, 1567, 1657, 1610, 1630, 1629, 2042, 1619, 1511,
        1643, 1566, 1628, 2010, 1627, 1618, 1510, 1642, 1565, 2044, 1626, 
       1625, 1655, 1509, 1656, 1641, 1744}], 
      Line3DBox[{1333, 1672, 1702, 1512, 1691, 1631, 2011, 1827, 1568, 1513, 
       1572, 1774, 2012, 1571, 1644, 1514, 1621, 1775, 2013, 1611, 1574, 1706,
        2056, 1718, 1719, 1717, 2055, 1716, 1728, 1479, 1334, 1913, 1480, 
       1335, 1914, 1481, 1336, 1915, 1776, 1974, 1337, 1777, 1975, 1338, 1916,
        1482, 1339, 1917, 1483, 1340, 1918, 1484, 1341, 1919, 1485, 1342, 
       1920, 1486, 1343}], 
      Line3DBox[{1357, 1492, 1927, 1356, 1491, 1926, 1355, 1490, 1925, 1354, 
       1489, 1924, 1353, 1979, 1780, 1352, 1978, 1779, 1351, 1977, 1778, 1923,
        1350, 1488, 1922, 1349, 1487, 1921, 1348, 1721, 1729, 1720, 2057, 
       1730, 1347, 1722, 1835, 1976, 1707, 1705, 1346, 2014, 1518, 1622, 1517,
        1345, 2026, 1516, 1573, 1515, 1645, 1344, 1834, 2051, 1570, 1714, 
       1569, 1688, 1687, 1575}], 
      Line3DBox[{1371, 1497, 1933, 1370, 1496, 1932, 1369, 1495, 1931, 1368, 
       1986, 1786, 1367, 1985, 1785, 1366, 1984, 1784, 1365, 1983, 1783, 1930,
        1364, 1494, 1929, 1363, 1493, 1928, 1362, 1982, 1782, 1361, 1981, 
       1781, 1360, 1807, 1980, 1523, 1359, 2015, 1522, 1521, 1358, 2027, 1686,
        1520, 1708, 1519, 1646, 1577}], 
      Line3DBox[{1385, 1500, 1937, 1384, 1499, 1936, 1383, 1996, 1795, 1382, 
       1995, 1794, 1381, 1994, 1793, 1380, 1993, 1792, 1379, 1992, 1791, 1935,
        1378, 1498, 1934, 1377, 1991, 1790, 1376, 1990, 1789, 1375, 1989, 
       1788, 1374, 1988, 1787, 1373, 1824, 1987, 1695, 1697, 1696, 1372, 2054,
        1660, 1661, 1576, 1690, 1689, 1673}], 
      Line3DBox[{1399, 1582, 1581, 2028, 1398, 2008, 1805, 1397, 2007, 1804, 
       1396, 2006, 1803, 1395, 2005, 1802, 1394, 2004, 1801, 1393, 2003, 1800,
        1938, 1392, 2002, 1799, 1391, 2001, 1798, 1390, 2000, 1797, 1389, 
       1999, 1796, 1388, 1826, 1998, 1580, 1387, 1825, 1997, 1698, 1700, 1699,
        1386, 1831, 2045, 1662, 1578, 1648, 1647, 1579}], 
      Line3DBox[{1738, 1651, 1613, 1623, 2038, 1443, 1563, 1556, 1606, 2035, 
       1444, 1286, 1558, 1607, 2036, 1445, 1288, 1560, 1608, 2037, 1446, 1290,
        1820, 1881, 1609, 1447, 1292, 1822, 1882, 1693, 1448, 1294, 1883, 
       1449, 1296, 1885, 1886, 1450, 1298, 1887, 1451, 1300, 1888, 1452, 1302,
        1889, 1453, 1304, 1890, 1454, 1306, 1891, 1455, 1308, 1893, 1457, 
       1310}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{632, 841, 1836, 633, 854, 1847, 659, 1040, 869, 2029, 674, 
       1943, 1041, 884, 689, 1948, 1044, 897, 702, 1955, 1055, 910, 715, 1963,
        1064, 923, 2037, 728, 1072, 1149, 1151, 2047, 1152, 741, 1164, 1078, 
       1162, 944, 2040, 755, 1195, 1081, 1186, 1188, 2056, 1189, 769, 1194, 
       1976, 1181, 1192, 971, 783, 1981, 985, 798, 1989, 1000, 813, 1999, 
       1014, 827}], 
      Line3DBox[{634, 842, 1837, 635, 855, 1848, 660, 870, 1857, 675, 1045, 
       2022, 1046, 1095, 2030, 1047, 1048, 1097, 2031, 1056, 1057, 1099, 2033,
        1065, 1066, 1881, 1101, 1073, 1150, 1074, 1894, 1177, 1137, 1163, 
       1138, 1904, 1198, 1199, 1184, 1187, 2055, 1185, 1200, 1201, 1190, 2057,
        1193, 1191, 784, 1982, 986, 799, 1990, 1001, 814, 2000, 1015, 828}], 
      Line3DBox[{636, 843, 1838, 637, 856, 1849, 661, 871, 1858, 676, 1049, 
       2023, 1050, 1096, 1051, 2024, 1052, 1098, 2032, 1058, 1059, 1100, 2034,
        1067, 1068, 1882, 1176, 1135, 1136, 1895, 742, 945, 1905, 756, 958, 
       1913, 770, 972, 1921, 785, 987, 1928, 800, 1991, 1002, 815, 2001, 1016,
        829}], Line3DBox[{638, 844, 1839, 639, 857, 1850, 662, 872, 1859, 677,
        885, 1866, 690, 898, 1872, 703, 911, 1877, 716, 1964, 924, 1883, 729, 
       934, 1896, 743, 946, 1906, 757, 959, 1914, 771, 973, 1922, 786, 988, 
       1929, 801, 1003, 1934, 816, 2002, 1017, 830}], 
      Line3DBox[{640, 845, 1840, 642, 858, 1851, 663, 873, 1860, 678, 886, 
       1867, 691, 899, 1873, 704, 912, 1878, 717, 925, 1884, 1885, 730, 935, 
       1897, 744, 947, 1907, 758, 960, 1915, 772, 974, 1923, 787, 989, 1930, 
       802, 1004, 1935, 817, 1018, 1938, 831}], 
      Line3DBox[{644, 847, 1841, 645, 860, 665, 1942, 875, 680, 1945, 888, 
       693, 1950, 901, 706, 1957, 914, 719, 1966, 927, 1887, 732, 937, 1898, 
       746, 1973, 949, 760, 1975, 962, 774, 1978, 976, 789, 1984, 991, 804, 
       1993, 1006, 819, 2004, 1020, 833}], 
      Line3DBox[{646, 848, 1842, 647, 861, 1852, 666, 876, 1861, 681, 1946, 
       889, 694, 1951, 902, 707, 1958, 915, 720, 1967, 928, 1888, 733, 938, 
       1899, 747, 950, 1908, 761, 963, 1916, 775, 1979, 977, 790, 1985, 992, 
       805, 1994, 1007, 820, 2005, 1021, 834}], 
      Line3DBox[{648, 849, 1843, 649, 862, 1853, 667, 877, 1862, 682, 890, 
       1868, 695, 1952, 903, 708, 1959, 916, 721, 1968, 929, 1889, 734, 939, 
       1900, 748, 951, 1909, 762, 964, 1917, 776, 978, 1924, 791, 1986, 993, 
       806, 1995, 1008, 821, 2006, 1022, 835}], 
      Line3DBox[{650, 850, 1844, 651, 863, 1854, 668, 878, 1863, 683, 891, 
       1869, 696, 904, 1874, 709, 1960, 917, 722, 1969, 930, 1890, 735, 940, 
       1901, 749, 952, 1910, 763, 965, 1918, 777, 979, 1925, 792, 994, 1931, 
       807, 1996, 1009, 822, 2007, 1023, 836}], 
      Line3DBox[{652, 851, 1845, 653, 864, 1855, 669, 879, 1864, 684, 892, 
       1870, 697, 905, 1875, 710, 918, 1879, 723, 1970, 931, 1891, 736, 941, 
       1902, 750, 953, 1911, 764, 966, 1919, 778, 980, 1926, 793, 995, 1932, 
       808, 1010, 1936, 823, 2008, 1024, 837}], 
      Line3DBox[{654, 1034, 2016, 1035, 655, 865, 1856, 670, 880, 1865, 685, 
       893, 1871, 698, 906, 1876, 711, 919, 1880, 724, 932, 1892, 1893, 737, 
       942, 1903, 751, 954, 1912, 765, 967, 1920, 779, 981, 1927, 794, 996, 
       1933, 809, 1011, 1937, 824, 1088, 2028, 1089, 1090}], 
      Line3DBox[CompressedData["
1:eJwV0EsrxGEUB+B3ZtwWVrayUFbKihLZyawZt3Jv5M5IrisLdwnjLsqsbPkA
8wXmC1CyUxaysZCSSx6Lp3PO+zun/v3Lk9OJVCSEkKIuFsI7x3khLNHCIpcs
8FMYQqX8mYz5gGbmuaCgKIQ5tVR+T1rfwD6vbvfUYu85dvX1xNwcqYf8RkPI
yrr0j/Zr1UGSvMluZeP6b1mnWsMAs/TzZOfazqe8w1zNGKPcyT68n8vbzVWM
MMyX95x8RzZkbqOCPs7I9429atbOsp1WfRk9vLjtVm9kM7KEvoSom211i4ws
KdvUP9iPqxusk5a1ySL218xNpDhl6v/fyuPyK/0qjUxywgQr/AEtmzkJ
       "]], 
      Line3DBox[{522, 521, 1180, 1086, 1997, 811, 998, 1085, 1987, 796, 983, 
       2015, 1030, 781, 969, 1083, 2026, 1028, 767, 956, 2012, 1080, 399, 753,
        375, 2010, 1077, 393, 739, 2039, 447, 1145, 1070, 726, 2035, 921, 
       1062, 1961, 713, 908, 1061, 1025, 1953, 700, 895, 1153, 2048, 457, 687,
        882, 2019, 1037, 672, 867, 2018, 1036, 657, 555, 2017, 1197, 560, 630,
        2052, 839, 1092, 467, 527}], 
      Line3DBox[{826, 1013, 1087, 1998, 812, 999, 1988, 797, 984, 1031, 1980, 
       782, 970, 2014, 1029, 768, 957, 2013, 1103, 1027, 1124, 754, 1113, 
       2042, 1112, 1102, 1026, 1121, 740, 1148, 2046, 1147, 1146, 1071, 727, 
       2036, 922, 1063, 1962, 714, 909, 1054, 1954, 701, 896, 1043, 1947, 688,
        883, 2021, 1039, 673, 868, 2020, 1038, 658, 1846, 853, 1196, 631, 
       2058, 840, 1032, 1033}], 
      Line3DBox[{832, 1019, 2003, 818, 1005, 1992, 803, 990, 1983, 788, 975, 
       1977, 773, 961, 1974, 759, 948, 1972, 745, 936, 1971, 731, 1886, 926, 
       1965, 718, 913, 1956, 705, 900, 1949, 692, 887, 1944, 679, 874, 1941, 
       664, 859, 1940, 643, 846, 1939, 641}]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJzsfGlYje//LZmJMs+aEEoRDUhLIg1KFGXKVGYRSSEkEhWKVGYJaaRJA93N
8zzPc+1qt/fOlIiczve5t9+p39f1f3fOm+ON63qu53r6PPdn3euz1tr73mJ7
j28yFRgwYMDI4QMGDOr9vzjTcaCfYcm7SUkjEy7UH3s34J9/HVB/a1D6gZ1P
rGwihhbv5ZLb9W5LkuOiEHFzvZu8jgkprNycOdmKR5ZNeZhoo5iCe6fmeguN
icLEOksNz+dc8qE49cnRdXkQ8M7JDh+dgCLpwNuHjnHItgx3qR1rSoBlXayR
1UnI7SDsLZ/ZZOOq9Bk6MlW4cyJ1wWxuMuSkNy5IXtNG7h70FJm9rQ4yvF1J
6R+TUde81tHPsoUs3yU8/kluA25cmTJSQT8ZmmWG9248aSZLNuYdiOU2IV1Q
e0iEYRKmXjxw91l+I7kwj2V2O5QF2fLAsAMLExE1VNrk7swGol0jdtZjfisc
47MWLfgUj5m2+y23O9SRuWLZ5tVGbVB7bD/ickQcLMt4lvsm1RJvPbtbU3XZ
mHylR36hYyzy21Ifc29VkWAjwW+zJ7RjZPeTO141MVi5SXbiN4UKcvbFjzFG
oe0wtHlyzqxrTbSI6Gte4sS6KP46f1U9JXzNIZHMlMoN0jDjESEjlQkyPyMg
+uvHEUftSOxdOk1PRptH1NfOCE26nYK6ypIKlcMp4Io+38QT5RKfBaOl1s/I
h9T6lxvEEzKQNFYn48ybdrLtfGU0710pFg+TntOsnIXrgQ9+7v3VRs4W3+io
nlUDS/FxJnFiWVghB5MxU1rJL63RpyZa1+PKzKToZzMyIW68O1h9OovoBfvt
mN3TCJOpSyPsPNLhMnKMW6FYE2kZ6hp+ejILryJOq+6oSMWYEewVU1Y1kGbz
Q64eGS24sm3Fpy1jU+D6e3jAvst15LKJv9mEeW1o/vJd/ahBEjbtT/TaUVlD
NKpU27YrszHH/p3AruAEmLQ5HTcdXkVyNQXHfJzUjiIb8QIsjsdZwVMe5Eo5
uS0w1HNJYjv2J5caueTHIlPk/hk7rVIi8mnWlzm6HITJvhh3d3/Vh6nkTlja
mUsf+Os8dt+9N/GO5zB9ZLju5nIeEb7n/7X5dAQWqwZ5eadkoOvwSLH0x1zS
ZTdsulR4KqK2GBhOis/Di+WlyW/mcci9TQlNcucL8Hrys/EJrflQWHRhrKU1
m7Q2xTb9zinHx+znlpGZ+SiybF051r6ViG3pEHCrqMXAwDvRS3ry0Bi/4f7L
/SySOyFCuLS+ASUThudxCnJxXG+HmLNKE/FQUXGbfqAZgc+Pv/s6MgczAvWy
J0g3EKcSsWmZh1vQ+SpY7NThTEQJyizeu7qO2H1cU6He0wrlEc2Nx9rTELtQ
omv+hBoy59kkwWMKbKj73x8d4ZUCoSnpGp3DK8mP5r12MpLtUCNvYn64JmEi
78lYy51lZKgdd9vGunYUGlj8Wv0+AUdfDVZYMLyExLw/Ii90koOkRL9bx6bF
IyN81frzPYWkLPnTzPMNHMyoYtvsK3tEYroalknGapHEpYckrvzkocZH/PKp
0nQ0Db1401eMR9zrFxdWDI1Ez8TGiCG5xSiI2vJER4JDvmu8L+7MSMfHtno1
56ZSiGYEvjloziZW7fG37RyKEBtzd4pafCkE38dus7FtJRNvWLu8DaiClbXo
TQ+7EnxNqTU6sZ5FNj1+/KngSj1iA8QDO8KLMOG6Q8iWH41klsAV+1v3mhB/
Pz81I6IAVydbKTq9qydk8/IefYEWXF276xJ6+3swuoUl6lVL9AP1ItnlrQj1
s5s/qD4HnqczN1zo3dfi9zSOHFrJxpOd2bUnn2Wi237gqm8G5eTI5NUW0urt
qFHYV5WRlIYPBxxktjuVkBFphrHughzslNYpVdNIQbLp3iT1eUXk+tDmJCsv
DriTVzlumJWEhhsdx/ZOKyAj7o/bWT6Bi/CgocPClRNwT/TyxQ2b88ivrWGR
4se4+Fpok/GDzSPEIvOdVt1bYhKR5LdJYRea5liPenurEoW/J2m7mLcTw8SN
M/1uRSHIy9Uj/1UtzNpe/Lyp3kZCo2ptL3dnYW2ebKf2i1qYTPBxmdvLn9PO
P9U+tLsUKbqDjy82r8HE5mHS2zc1E62Lw9Ia39Sibtrh6R9fVyK9e5NyUEcD
ES3Q0HG/0ogP82+rmN0pw+1poepTb9aRtgzdB0svsZBr5Xvs9t1iLC/LSNoY
Wk002PdffwltRYyowJL1tQVIa9NQHlZcTjxvn5Pesp4N+6kfFY/b56Hg8AAV
aYcSkvdhj7PpiXZwI/PN2obnIMN5gYpvTCFxabrYWLGaA+ub15XqnmbgZcc+
h/L9+WRttN+p5ZUc7DGWaDD4kAr72CtLo47lkqFLs7NcdLjo+qXlOEcjGdvl
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
TWC6SwnI1vvcat3YD1M35NBPcOyzVrWyeqFUMcyPe1jGX9UDEYLOqScUGXBz
8jkySsB5CW6djyiu52nF9TzcPp+fcP4kEudP6HNnJ3nkk+HMxrmdQcJUCHsp
5VT1voq33zVw40XRwdeiB0g9ALbF3xubaDD/uHqLdFgzjASM3O8MbITo9M9n
pm9nwQbDWR3WXmUwhOsYpXG99wdcx5jMc47miM/RSJOfg9bh5yw/6uIl97sL
2D8CvNtOMpAvsqrYZlwBJTznL9y+5SV4nprEPBF3nqVsFE+y7AYHiZFFN9Uo
iD3Lc2DdVhI06y8W3ObdCaboWaSh/DC6skxgm/WRITheJluumNcLUv2XOt7F
kdDLOqEQPw7OLJvcZ/Vv31Qa7jOshPsMm+A+wzE85/5xeL3o2D4iuM7zM7bP
v9VJ8vTNQ5twHpKL8+8ROB9xcb4Nzis64bziNJxXdMQ8KJ3gQYjLgxi98y6Y
HiJD0+Gu0e6KamTTd+H0Vn0q/MK61QS/i8o/y6NbTYwHqAfz6FYT/Ksyn6tb
zdXFJsYT8mdgXeyQuC1hCcMMiFtp+pVvdhs89pwfoGPf8Le+rgHX12nguD8F
n7Pw43MWKZz30+6RSryygQIJW885NamTQYdiZvGzqONvnnA2zhNyf38O911U
xv1aZXHfxV08fUrDcD7wIq7PicD1OYm4Poe3nrABx3edTutItXQy3BT4Jrd6
ERXd/bmkjFxcBQ7zfbecTclDcn5/ctLS2MhuM3PTNnom5EzuX/23/3w5Hn/F
09c6YbKfRLOxn+TpQ4uk8Xuxvf97f0hZvK9m4XN87r6ahfHhSlzPcAbjQxnc
/zAS9z/ci/sf5srupC/hxKnVfmvRnkQWsjbh79qtWQ//DyEVx+g=
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{357.3553006450231, 250.9642164971905},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0.01, 30}, {-3, 3}, {0, 80}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.34970786060130826`, -2.044040503500319, 2.673874124240673},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.7561453282279587`*^9, 3.7561453585623817`*^9, {3.7561454253938293`*^9, 
   3.756145460984831*^9}, 3.756145501790307*^9}]
}, Open  ]],

Cell["", "Text",
 CellChangeTimes->{{3.756145702868099*^9, 3.756145711786623*^9}, {
   3.7561459761545477`*^9, 3.756145978995899*^9}, {3.75614881457692*^9, 
   3.756148821486766*^9}, 3.770040734644631*^9}],

Cell[BoxData[{
 RowBox[{"2", "-", 
  RowBox[{
  "8", " ", "Solution", " ", "in", " ", "Integral", " ", 
   "Form"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"(", "1", ")"}], "   ", 
   FractionBox[
    RowBox[{"\[PartialD]", "u"}], 
    RowBox[{"\[PartialD]", "t"}]]}], "=", 
  RowBox[{
   SuperscriptBox["c", "2"], 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[PartialD]", "2"], "u"}], 
    RowBox[{"\[PartialD]", 
     SuperscriptBox["x", "2"]}]]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"(", "6", ")"}], "   ", "u", 
   RowBox[{"(", 
    RowBox[{"x", ",", "t"}], ")"}]}], "=", 
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
    RowBox[{"u", 
     RowBox[{"(", 
      RowBox[{"x", ",", 
       RowBox[{"t", ";", " ", "p"}]}], ")"}], 
     RowBox[{"\[DifferentialD]", "p"}]}]}], "=", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
    RowBox[{
     RowBox[{"[", 
      RowBox[{
       RowBox[{"A", 
        RowBox[{"(", "p", ")"}], "cos", " ", "px"}], "+", 
       RowBox[{"B", 
        RowBox[{"(", "p", ")"}], "sin", " ", "px"}]}], "]"}], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["c", "2"]}], 
       SuperscriptBox["p", "2"], "t"}]], 
     RowBox[{"\[DifferentialD]", "p"}]}]}]}]}]}], "Text",
 CellChangeTimes->{{3.756148883908228*^9, 3.7561491344204473`*^9}, {
  3.75614918946706*^9, 3.756149206120906*^9}, {3.770040740523169*^9, 
  3.770040749902894*^9}},
 Background->RGBColor[
  0.9600061036087587, 0.9600061036087587, 0.9600061036087587]],

Cell["\<\
Using numbered line (6), p. 569, obtain the solution of numbered line (1), p. \
568, in integral form satisfying the initial condition u(x,0)=f(x), where\
\>", "Text",
 CellChangeTimes->{{3.756148826705*^9, 3.756148874987612*^9}, {
  3.770040664564673*^9, 3.770040700778501*^9}},
 Background->RGBColor[
  0.9600061036087587, 0.9600061036087587, 0.9600061036087587]],

Cell[TextData[{
 "3. f(x) = 1/(1+",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ")"
}], "Text",
 CellChangeTimes->{{3.7561457804008493`*^9, 3.756145824318879*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], "=", 
  FractionBox["1", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox["x", "2"]}], ")"}]]}]], "Input",
 CellChangeTimes->{{3.756151267311655*^9, 3.7561513056988792`*^9}, {
  3.756166361329597*^9, 3.7561663819929028`*^9}}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"1", "+", 
   SuperscriptBox["x", "2"]}]]], "Output",
 CellChangeTimes->{{3.756166384759325*^9, 3.756166411606978*^9}, 
   3.756213980197824*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
HQeLc3zFLcT58X/nS/j/+fI/mevK9w==
     "]]}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.16},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-2, 2}, {0.20000001306122506`, 0.9999999052729539}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.75616641511482*^9, 3.756213983906699*^9}]
}, Open  ]],

Cell["\<\
This function is even. From the procedure of the s.m. in problem 5, I assume \
this makes the B(p) term in (6) equal to zero, leaving the A(p) term.\
\>", "Text",
 CellChangeTimes->{{3.7561664520235643`*^9, 3.756166512068418*^9}, {
  3.7561671630154333`*^9, 3.756167177247333*^9}, {3.7561679761841803`*^9, 
  3.756167991685975*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"aip", "=", 
  RowBox[{
   FractionBox["2", "\[Pi]"], 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
    RowBox[{
     FractionBox["1", 
      RowBox[{"1", "+", 
       SuperscriptBox["v", "2"]}]], " ", 
     RowBox[{"Cos", "[", " ", 
      RowBox[{"p", " ", "v"}], "]"}], 
     RowBox[{"\[DifferentialD]", "v"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.7561665527649*^9, 3.756166563195188*^9}, {
   3.756166622084646*^9, 3.756166666031741*^9}, {3.756166801325171*^9, 
   3.75616680420333*^9}, {3.756166836195999*^9, 3.7561668535853777`*^9}, {
   3.756166979399167*^9, 3.756167050107182*^9}, {3.756167084003954*^9, 
   3.756167085635439*^9}, {3.756167116635141*^9, 3.756167119114656*^9}, {
   3.756167204904553*^9, 3.75616720549468*^9}, {3.756213841855514*^9, 
   3.7562138420523*^9}, {3.756213936483938*^9, 3.756213952038741*^9}, {
   3.756214024097259*^9, 3.7562140253025503`*^9}, {3.7562142318896513`*^9, 
   3.7562142685988617`*^9}, 3.756215462295339*^9, {3.756215560202777*^9, 
   3.756215567651651*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     RowBox[{"Abs", "[", "p", "]"}]}]], ",", 
   RowBox[{"p", "\[Element]", "Reals"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.756215571567067*^9, 3.756215593895183*^9}}]
}, Open  ]],

Cell["\<\
The above (green) answer matches the text for the factor A(p). The limits are \
altered, because the integral does not converge when the original limits are \
used. However, since the function is even, the limits problem is remedied by \
using a factor of 2 to mirror the domain around zero. As for the solution \
form, the absolute value requirement is not observed by the text.\
\>", "Text",
 CellChangeTimes->{{3.756214317717826*^9, 3.7562143354681396`*^9}, {
  3.7562152554472513`*^9, 3.75621540841684*^9}, {3.756215686952697*^9, 
  3.756215751669277*^9}, {3.7562158008598127`*^9, 3.756215820347207*^9}, {
  3.7562158557701483`*^9, 3.7562158779534597`*^9}, {3.7562162346647243`*^9, 
  3.756216243693508*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"u", "[", 
   RowBox[{"x_", ",", "t_"}], "]"}], "=", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "p"}], "-", 
      RowBox[{
       SuperscriptBox["c", "2"], 
       SuperscriptBox["p", "2"], "t"}]}]], 
    RowBox[{"\[DifferentialD]", "p"}]}]}]}]], "Input",
 CellChangeTimes->{{3.756215912266012*^9, 3.756215959175013*^9}, {
  3.7562160094613028`*^9, 3.756216009853303*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      FractionBox["1", 
       RowBox[{"4", " ", 
        SuperscriptBox["c", "2"], " ", "t"}]]], " ", 
     SqrtBox["\[Pi]"], " ", 
     RowBox[{"Erfc", "[", 
      FractionBox["1", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["c", "2"], " ", "t"}]]}]], "]"}]}], 
    RowBox[{"2", " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["c", "2"], " ", "t"}]]}]], ",", 
   RowBox[{
    RowBox[{"Re", "[", 
     RowBox[{
      SuperscriptBox["c", "2"], " ", "t"}], "]"}], "\[GreaterEqual]", "0"}]}],
   "]"}]], "Output",
 CellChangeTimes->{3.75621602059111*^9}]
}, Open  ]],

Cell["\<\
The green cell above matches the text answer for u. Considering the limits of \
the integral, I dropped the absolute value restriction that was on -p. It is \
interesting to look at the solution form of u, which looks a little congested \
but still usable.\
\>", "Text",
 CellChangeTimes->{{3.756216044955694*^9, 3.756216181654972*^9}, {
  3.7562162728364887`*^9, 3.756216276612565*^9}}],

Cell["5. f(x)=|x| if |x|<1 and 0 otherwise", "Text",
 CellChangeTimes->{{3.756145833351469*^9, 3.756145885117186*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell["\<\
The solution of this problem is included in the s.m., therefore it is the \
first one worked.\
\>", "Text",
 CellChangeTimes->{{3.7561587915213614`*^9, 3.756158818696588*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], "=", 
  RowBox[{"Piecewise", "[", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Abs", "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"-", "1"}], "<", "x", "<", "1"}]}], "}"}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.756151324133562*^9, 3.7561513699047413`*^9}, {
  3.756151483294406*^9, 3.756151503516412*^9}, {3.7561517227104387`*^9, 
  3.756151744572236*^9}, {3.7561517924843388`*^9, 3.7561517939868793`*^9}, {
  3.75615192372808*^9, 3.756151923998303*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        RowBox[{"Abs", "[", "x", "]"}], 
        RowBox[{
         RowBox[{"-", "1"}], "<", "x", "<", "1"}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.756151799590287*^9, {3.756151907204404*^9, 3.756151925738654*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.756151832575233*^9, 3.756151849456916*^9}, {
  3.7561519415036716`*^9, 3.756151982828422*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGDQBmIQrWcv9ur////7GaAgJEu94+cvBL9qqoXa568I/vHX
UUnPXiP4CTPm3zpzHcGf+FHj9Mz1CP6XxdZrjOMR/F0ciXnp+/7B+fVnr70+
mPgXzn+5VFLcXOYPnK9134OT/+4vOH+J8OIvN5t+wvmHo0/17rf/AefLzJdR
mPHwG5zv7RxdebnzK5wv/zutQdPzC5yvu25uQ9HbT3D+g5KFetdWfITz60xL
Pe4uRvBlvnkkPZmH4EeUf5j6aQqCf7HS/i9fI4J/qO7uafdIBH9Jh2TmTk4E
38nzbdMBFgT/AefBOcf/f0DY151x4epXBH9q73bzTw8R/LZJoWzauxD8zDkT
F8/JQvC/cHh1mqci+A2lTPmX4hH8aX7FVhyhCP4hhtCLxfYIvm8u73Y+KwT/
xs2jc1aaIPjvNpll3NdE8Cvl3/tWqSD4LD3LjUXlEXypVIn/XiII/tKLF548
5UPwDew6TzVwIvgHT2tWWLIi+AD42M2P
      "]], LineBox[CompressedData["
1:eJxlx30s1AEcx3FPqy0pbU3SalxOSmtrtRuLPmuTVRJDDZdajCzMxZpSGZO1
wm4jhuw2T1FTalTy9LmEkqmxifVgF+XZ/aTJdltbtX3/64/3Xnu7xaSExtlY
WVkd+Ns/ryc0rC9YViiianXcStWSQhEtpuGu0SmFIr4VPo/0H1IowpLoqc54
rVCE4+GyxcZ2hSJ8VzJubqlTKKJYe/Dp0lWFIhr2N2Z5XlQoosvB9fiZeIUi
zLSe6AtRKCLAvcexUq1QxK/5wKTg92aKiMiM3N6gMlOEvdG7u9zZTBGd1s5x
t9aZKUKd++FevGWBIpbywna5DS1QRH5Z0N6S7AWKMDYfQpZpniI853Zqww1z
FJF4IiR3fGKaIqLSgv00mkmKKOJ0CJ9NUARsRk/tsf5KERdGu3S1Pz9ThG9Z
tnPr5RGKSPjy41PkpiGKCDbtfvjG/S1FaHh3ZPZGJ0W4rLWbMezrpIjfEUmW
0PEOiuhe8t3ahg6KCPMYi8mztFGErsDV7KV7QRH3tbV2ydpmisivd3ByW9NM
EbrlSzuGW5oowlsfcMzPqYkierum9A6DTyiiNyxcc7rgEUX4LEbHjsXWUERS
a81Menc1RRhuzKVsUFdThO3mK9f8JyspoizH0+vkoIEijB7F+oWPdyhC3aaq
cK0ooojbwY/rw6ILKaJusSQnjXqKeFdkO23fl0sRpe3brFMDcygi5ruPy+hA
FkXMJptKj9SmU0Qmnfo3PkilCJWq3PIyOpEijvasOht1/hxFGCsHHPpfBVH8
7/8AO9L2hA==
      "]], LineBox[CompressedData["
1:eJxFxVtMUgEYAOCjG+RyjqbRQ7nMtmymo7bUrCy2dsZGmm4pQk6XYEG2yEup
i8pmIc0F2mBkUvoArKgUCih9EGW2KJANYzC3jK5KTfO4knI7m3R56P8fvn2Z
koajJxMJgjjw17+VRumXkRUR9/+brDwW2SyFFQx5WJDXCEcdBaaunS1wuYRo
cu1QwLfe81XadVdh/zOOPLdbCSd2p1V4kq/DDUWRTJqphs0lI+8ex7VwzrWl
te4WE1y9Py1paKsZVi8XMAwBnKpr/30u+x5sJ1Ni2yMWuJCZE+khrbCRdEzb
upyw7SX14IpoHHbxfYX7JrzwwkNjfakoCPcPce7Enk7Do2IVe9fwW1ixvi9c
lvoR9k+FyKDhM9w0uSerZ0MUNgdItvTVV1g9OGxZU7IAZ20p6qUqcbfO3RkW
48sKr8TUhlfxZ9K5Jjw7Gr/ZSuOeDN6FOcs3uFbnk/kdOM0sq3SM4RxKuLsj
hOtH6xfTiUX4xDGNuEKIJ+hC/OcMCo73z0u+s3DaQlzK2IjHxnKtFzl4dF6Z
mifE/YfyZ8wW3HukOBa04x6ROCXBhY+f1XBrXuN2w5yJTeO3f+jPqIqXYP3q
o06nANcmTQx8Oo7f2ExNHTyPtx/m5a/cxRWC6tJt9/G22mZZ+RO8sXWgz/YC
l3c47ZEAflrtm0x+g0t7P8zuncXrjL9WZRR++dQgS/MT/wNC9vso
      "]], 
     LineBox[CompressedData["
1:eJxFx1koA3AAx/HlLJOkEHKMYSaKLA1rImwiGZKjYQgh8uCKzJkkR7K0EZm5
JiEPaHMkR+TFylFa4sWVm8w1lP6/X3379aGJSgS5BhQKxe+3v1/b9apkG99z
Kf+byuqnV5nA3nmefl1UeLJojjNmCTPKONHL1jC9NiH7xhkebtCWGLrDtNaC
Gnsm7NRT18sLgG0nlFsjPNjqy54/HAubx7ftDApgA13+njQdvuV5aLpK4c2L
IW1NH1zOkLwkXsAHY2I349YH4jQls6Xs7JE4RGYavOH+THzeufhKb3ohnner
u6advBKfyiv8jRzfiPcZEeKnSh2xszTCZVv9TiyZTNGxPz+INSthxwtJX8SF
a0KqY983sWjwWKIagFNrE13T5TCPHc2WTcP0WVae3QZ8MmS+bv0Ix4iXqi1i
9MThQpbJdDwcFDLTHZsMM94U4+0i2Ki0+8CsClZn5PubjsLznHP1qBKechDy
I2dh6WFCZrMKLo/jdhhq4GKfJTv5EZxDZSnCtLBgi6mqv4T5CkUU7Q4ObXTR
rD7DgVkyYeY77Mu1udLr4R9KvMZY
      "]]}, {}}, {{}, {}, {}}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-2, 2}, {0., 0.9987244897959183}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.756151850600683*^9, {3.7561519294268723`*^9, 3.756151984697035*^9}}]
}, Open  ]],

Cell[TextData[{
 "By inspection, f(x) is even. According to the s.m., this makes the B(p) \
term in (6) above equal to zero. I didn\[CloseCurlyQuote]",
 StyleBox["t ",
  FontSlant->"Italic"],
 "see assumptions which make this necessary, but I did find a resource on \
line ",
 StyleBox["(http://site.iugaza.edu.ps/asakka/files/2014/01/Ch_VI_S.pdf) ",
  FontSlant->"Italic"],
 "which says the same thing, so I will accept it."
}], "Text",
 CellChangeTimes->{{3.7561523994479027`*^9, 3.756152408550125*^9}, 
   3.756158751592566*^9, 3.7561587832110653`*^9, {3.756158835279572*^9, 
   3.7561589630119257`*^9}}],

Cell["\<\
Numbered line (8) on p. 569 of text allows to calculate A(p):\
\>", "Text",
 CellChangeTimes->{{3.756159443196802*^9, 3.756159461459375*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"A", "[", "p_", "]"}], "=", 
  RowBox[{
   FractionBox["1", "\[Pi]"], 
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
    RowBox[{
     RowBox[{"f", "[", "v", "]"}], 
     RowBox[{"Cos", "[", 
      RowBox[{"p", " ", "v"}], "]"}], 
     RowBox[{"\[DifferentialD]", "v"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.756159110336545*^9, 3.75615918261269*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"Cos", "[", "p", "]"}], "+", 
     RowBox[{"p", " ", 
      RowBox[{"Sin", "[", "p", "]"}]}]}], ")"}]}], 
  RowBox[{
   SuperscriptBox["p", "2"], " ", "\[Pi]"}]]], "Output",
 CellChangeTimes->{3.756159186699213*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plug", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "1"], 
    RowBox[{
     RowBox[{"(", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"Cos", "[", "p", "]"}], "+", 
          RowBox[{"p", " ", 
           RowBox[{"Sin", "[", "p", "]"}]}]}], ")"}]}], 
       RowBox[{
        SuperscriptBox["p", "2"], " ", "\[Pi]"}]], ")"}], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["c", "2"]}], 
       SuperscriptBox["p", "2"], "t"}]], 
     RowBox[{"\[DifferentialD]", "p"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.756159396008747*^9, 3.756159407156708*^9}, {
  3.756159472627308*^9, 3.756159477074729*^9}, {3.756159604825015*^9, 
  3.756159622510548*^9}, {3.756160298072542*^9, 3.756160299455461*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"c", " ", 
    SqrtBox["t"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", 
       RowBox[{"Erf", "[", 
        RowBox[{"c", " ", 
         SqrtBox["t"]}], "]"}]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox["1", 
          RowBox[{"4", " ", 
           SuperscriptBox["c", "2"], " ", "t"}]]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Erfi", "[", 
          FractionBox[
           RowBox[{"1", "-", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", 
             SuperscriptBox["c", "2"], " ", "t"}]}], 
           RowBox[{"2", " ", "c", " ", 
            SqrtBox["t"]}]], "]"}], "-", 
         RowBox[{"Erfi", "[", 
          FractionBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", 
             SuperscriptBox["c", "2"], " ", "t"}]}], 
           RowBox[{"2", " ", "c", " ", 
            SqrtBox["t"]}]], "]"}]}], ")"}]}]}], ")"}]}], 
   SqrtBox["\[Pi]"]], "+", 
  FractionBox[
   RowBox[{"4", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["c", "2"]}], " ", "t"}]], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", 
      FractionBox["1", "2"], "]"}], "2"]}], "\[Pi]"]}]], "Output",
 CellChangeTimes->{
  3.756159485360025*^9, {3.75615961482071*^9, 3.75615962735821*^9}, 
   3.7561603152541723`*^9}]
}, Open  ]],

Cell["\<\
The s.m. announces that the green cell expression is the sought-for answer. \
It does not quite match the text answer though, which for some reason leaves \
out the integral sign. The s.m. ignores this omission.\
\>", "Text",
 CellChangeTimes->{{3.756160178468382*^9, 3.756160198562661*^9}, {
  3.756160506633936*^9, 3.7561605507910023`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plugn", "=", 
  RowBox[{"N", "[", 
   RowBox[{"plug", "/.", 
    RowBox[{"{", 
     RowBox[{"c", "\[Rule]", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7561596536443233`*^9, 3.7561596851321077`*^9}, {
  3.756159948628861*^9, 3.756159949114958*^9}, {3.756159980202959*^9, 
  3.756159983106185*^9}, {3.756160955851346*^9, 3.756160956633703*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"0.29265264139612696`", " ", 
   SuperscriptBox["2.718281828459045`", 
    RowBox[{
     RowBox[{"-", "1.`"}], " ", "t"}]]}], "+", 
  RowBox[{"0.5641895835477563`", " ", 
   SqrtBox["t"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2.`", " ", 
      RowBox[{"Erf", "[", 
       SqrtBox["t"], "]"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"0.`", "\[VeryThinSpace]", "+", 
        RowBox[{"1.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      SuperscriptBox["2.718281828459045`", 
       RowBox[{
        RowBox[{"-", "0.25`"}], "/", "t"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Erfi", "[", 
         FractionBox[
          RowBox[{"0.5`", " ", 
           RowBox[{"(", 
            RowBox[{"1.`", "\[VeryThinSpace]", "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                RowBox[{"2.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", "t"}]}], 
            ")"}]}], 
          SqrtBox["t"]], "]"}], "-", 
        RowBox[{"1.`", " ", 
         RowBox[{"Erfi", "[", 
          FractionBox[
           RowBox[{"0.5`", " ", 
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                 RowBox[{"2.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", "t"}]}],
              ")"}]}], 
           SqrtBox["t"]], "]"}]}]}], ")"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.756159687009232*^9, 3.756159950740587*^9, 
  3.756159984569325*^9, 3.7561603280643377`*^9, 3.756160957997431*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"0.29265264139612696`", " ", 
     SuperscriptBox["2.718281828459045`", 
      RowBox[{
       RowBox[{"-", "1.`"}], " ", "t"}]]}], "+", 
    RowBox[{"0.5641895835477563`", " ", 
     SqrtBox["t"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2.`", " ", 
        RowBox[{"Erf", "[", 
         SqrtBox["t"], "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"0.`", "\[VeryThinSpace]", "+", 
          RowBox[{"1.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
        SuperscriptBox["2.718281828459045`", 
         RowBox[{
          RowBox[{"-", "0.25`"}], "/", "t"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Erfi", "[", 
           FractionBox[
            RowBox[{"0.5`", " ", 
             RowBox[{"(", 
              RowBox[{"1.`", "\[VeryThinSpace]", "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                  RowBox[{"2.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                "t"}]}], ")"}]}], 
            SqrtBox["t"]], "]"}], "-", 
          RowBox[{"1.`", " ", 
           RowBox[{"Erfi", "[", 
            FractionBox[
             RowBox[{"0.5`", " ", 
              RowBox[{"(", 
               RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                   RowBox[{"2.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                 "t"}]}], ")"}]}], 
             SqrtBox["t"]], "]"}]}]}], ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0.1", ",", "5"}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "150"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.75615996408855*^9, 3.7561600351162853`*^9}, {
   3.756160105951659*^9, 3.7561601075583153`*^9}, 3.756160358488202*^9, {
   3.7561608389038143`*^9, 3.7561608558213663`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwVzn8803kcwHG/xcZm34jq0UViqegudaH1/qhlD6rLOU0/PEycq6iMrnMr
ph6VsGN5aF3DRNwRE/oh5Hz3w374OUPikSsdTT8cJdH8vO6P1+P179MxIjYo
ysjAwGDfl/6/n9yekSusg5jrzhvpbl0gKXUPt5+rg45LPFcqtQu8M+kcQVg9
NPRQhUSXLnA/xC7nr3kMAbqUl72OXWA3riJdrmiAlKFg4ziHLhhZntB3UopD
hiYh9vGSLqDXvfW8NSmDkM8NVqUjWhgm+yvZK5vhdGP4rf4/tUCxmRfc8O6G
/FYTa7RaC0Wjuc8az/aDJifAnnOnE5LrR2rzsl5AvoVhEcWnE+4O9OYaOwxB
rp8xLyBbAwJT0bBokw6C48mn77V0wJzfai43/Q0MCTuYt+faIc3w3FBdzyik
X2okEmjtwH+1Neiwbhx+sRiWMbLbwDKuL3W16ANQyMePModbwcKEcUrp9hE+
Zb4ot/FvhZzugkfCqklwNb1eOf6oBWI8DrldC5mCBXHb6BvHFtB/JXf0+mca
/Cqpncl5zaDK4/maZuqBaqlvz6E0gysTVAtfz0Ik1aI6P0sN9OJibVndHOTz
3e2qVqmhkHvc5FzEAgRsJvinlqig/t+/H8+OLQK+zifQnaaCtMm+fYEdBsiZ
xw4a61BC8rVatlehIerc+nJX3DEldE+9fzIbZYRGlewdOkslMIoOavb7GKPt
37kMVJQpwGG5AyHJyASFrTdfzw1WwBYPjV6iMEG6p9JPPsYKiEt/kHhDaIpo
Vjt7Lt5tAkLVhO9ulhli8jdREyOaQLEiPPfKFnPE3jin9caaQL1WXjJgvgS5
GJ6HU2o5rJvhThHblqBBmBV9c0UOZUuj+zsKLNBrr2niux1ySNNXLJw4ZonC
Y4nZJYsyuJc40rvCjYCYkwYFtXIZzO4O3MWaJ6CaBvH8yGUZ3O63mTgvIyKO
+Rk+Y68MTtw32uJ20wrNNnjrP5BlkBmyt76aZY2sx1jjrGdSmBfyJvavISF7
Z6E+qVQKvznNNCZPkxDJ6eEU4YwU/qof/KkpjIx8WYs99TulQDcPrbVpIaNl
iHZ7gSSF905BkdGbbVDcoo4heSGB1qKfKysFNuiZm8rX9oEEalR3FTQDCqpe
9hb/KkUCnYG2SbWRFKTeNk5OCJWA9Z2pjB0KCuK9Trve6CmB0OLx41YeGBqv
piX0W0qg38T2lToLQ/ElU2fLm3Ho7ouSXszGUASxMytUjUO7uEbkLcBQRlX0
EysVDtLgg0zxTQzJ9iq72U043CnOVfFvYYi7zV+8DceBQ3cqY1ZgKEBlp9Q8
wMHhskfssBpDq3omTqwowAE7eGGPqAVDRzf0xGrzcbDaoHVltmGosjQz76oI
B8Oe+EGVBkMPOfHRkzk4vFlT8315L4ZsX298qhHgUCff7hk/jKFI8faxDB4O
93/PIK/XYaiw5nCYXzoOFTHPR4dGvngiBicXUnEoxC78ceAdhlI5ZgJ2Cg5p
kXI7rwkMnZ75XHDgIg6Xvl368cPHL74j/F2kCzgkEaI0ZZ8wJPQ5QGzm4hB3
3yx1pR5Dztd+INMScYi5GvLjkxkMUUjcPdPncIg6Uooy5zA0sLZBXM3BgeWh
X8lYwJDhczPPk7/icMg4QL+4iCE2PeSlSwIO/wGsYlJ9
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.12},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->150,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0.1, 5}, {0.12291186334120296`, 0.28382973106847115`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.756160007915368*^9, 3.756160037414905*^9}, 
   3.756160109108265*^9, 3.756160360206471*^9, 3.756160857277813*^9}]
}, Open  ]],

Cell[TextData[{
 "7. f(x)=(sin x)/x  ",
 StyleBox["Hint",
  FontSlant->"Italic"],
 ". Use problem 4 in section 11.7."
}], "Text",
 CellChangeTimes->{{3.7561458916124887`*^9, 3.7561459308834333`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], "=", 
  FractionBox[
   RowBox[{"Sin", "[", "x", "]"}], "x"]}]], "Input",
 CellChangeTimes->{{3.756217392155444*^9, 3.756217408200983*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"Sin", "[", "x", "]"}], "x"]], "Output",
 CellChangeTimes->{3.756217410067643*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "0.25"}], ",", " ", 
   RowBox[{"ImageSize", "\[Rule]", "250"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.756217416501149*^9, 3.756217531789287*^9}, {
  3.756217574892157*^9, 3.7562175754199553`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
k7mR3JVCJPi//wPw//8H/gcC/tin
     "]]}},
  AspectRatio->0.25,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.44},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->250,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-2, 2}, {0.4546487489555164, 0.9999999842121575}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.756217442107283*^9, 3.756217532660378*^9}, 
   3.756217576471587*^9}]
}, Open  ]],

Cell["\<\
This function is even. From the procedure of the s.m. in problem 5, I assume \
this makes the B(p) term in (6) equal to zero, leaving the A(p) term.\
\>", "Text",
 CellChangeTimes->{3.7562176241850224`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"aip", "=", 
  RowBox[{
   FractionBox["2", "\[Pi]"], 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
    RowBox[{
     FractionBox[
      RowBox[{"Sin", "[", "v", "]"}], "v"], " ", 
     RowBox[{"Cos", "[", " ", 
      RowBox[{"p", " ", "v"}], "]"}], 
     RowBox[{"\[DifferentialD]", "v"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.756217669786188*^9, 3.7562176803522463`*^9}, {
  3.756217794038846*^9, 3.756217804490624*^9}, {3.7562183669401503`*^9, 
  3.756218373706174*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Sign", "[", 
       RowBox[{"1", "-", "p"}], "]"}], "+", 
      RowBox[{"Sign", "[", 
       RowBox[{"1", "+", "p"}], "]"}]}], ")"}]}], ",", 
   RowBox[{"p", "\[Element]", "Reals"}]}], "]"}]], "Output",
 CellChangeTimes->{3.756217698321714*^9, 3.756217809233234*^9, 
  3.7562183781698112`*^9, 3.756218479123397*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[TextData[{
 "The above (upper green) cell matches the text answer for A(p). Even though \
the integral exists and converges for the original domain, -\[Infinity] to \
\[Infinity], the text prefers to mirror around zero. The above (lower green) \
cell matches the intent of the text answer, though the text does not have the \
",
 StyleBox["Sign", "Input"],
 " function available to express it."
}], "Text",
 CellChangeTimes->{{3.756218408184442*^9, 3.7562184927183647`*^9}, {
  3.756219225032289*^9, 3.756219282029223*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"gen", "=", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
    RowBox[{"aip", " ", 
     RowBox[{"Cos", "[", " ", 
      RowBox[{"p", " ", "x"}], "]"}], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["c", "2"]}], 
       SuperscriptBox["p", "2"], "t"}]], 
     RowBox[{"\[DifferentialD]", "p"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.756219322252068*^9, 3.75621937499437*^9}, 
   3.75621944984971*^9},
 Background->RGBColor[1, 1, 0.85]],

Cell["\<\
The above yellow cell expresses the general form of u(x,t). However, if the \
domain extends above 1, aip equals zero, so the whole expression disappears. \
For p between 0 and 1, aip equals 1. Therefore\
\>", "Text",
 CellChangeTimes->{{3.75621946794668*^9, 3.756219625353899*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"u", "[", 
    RowBox[{"x", ",", "y"}], "]"}], "=", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "1"], " ", 
    RowBox[{
     RowBox[{"Cos", "[", " ", 
      RowBox[{"p", " ", "x"}], "]"}], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["c", "2"]}], 
       SuperscriptBox["p", "2"], "t"}]], 
     RowBox[{"\[DifferentialD]", "p"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.756219635808745*^9, 3.756219653473557*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell["\<\
The above green cell matches the answer in the text. As for the hint in the \
problem description, it is interesting, though not really necessary. \
Repeating it here:\
\>", "Text",
 CellChangeTimes->{{3.756219668440538*^9, 3.7562197302306623`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
   RowBox[{
    FractionBox[
     RowBox[{"Cos", "[", 
      RowBox[{
       FractionBox["1", "2"], "\[Pi]", " ", "w"}], "]"}], 
     RowBox[{"1", "-", 
      SuperscriptBox["w", "2"]}]], 
    RowBox[{"Cos", "[", 
     RowBox[{"x", " ", "w"}], "]"}], 
    RowBox[{"\[DifferentialD]", "w"}]}]}], "=", 
  TagBox[GridBox[{
     {"\[Piecewise]", GridBox[{
        {
         RowBox[{
          FractionBox["1", "2"], "\[Pi]", " ", 
          RowBox[{"Cos", "[", "x", "]"}]}], 
         RowBox[{
          RowBox[{"if", " ", "0"}], "<", 
          RowBox[{"Abs", "[", "x", "]"}], "<", 
          RowBox[{
           FractionBox["1", "2"], "\[Pi]"}]}]},
        {"0", 
         RowBox[{
          RowBox[{"if", " ", 
           RowBox[{"Abs", "[", "x", "]"}]}], "\[GreaterEqual]", 
          RowBox[{
           FractionBox["1", "2"], "\[Pi]"}]}]}
       },
       AllowedDimensions->{2, Automatic},
       Editable->True,
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.84]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}},
       Selectable->True]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxItemSize->{
     "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.35]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   "Piecewise",
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True,
   Selectable->False]}]], "Text",
 CellChangeTimes->{{3.756219763714596*^9, 3.7562199247837543`*^9}}],

Cell[TextData[StyleBox["9 - 12 CAS project. Error Function.",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.7561460671607533`*^9, 3.756146091262224*^9}},
 Background->RGBColor[
  0.9600061036087587, 0.9600061036087587, 0.9600061036087587]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", "21", ")"}], "     ", "erf"}], "=", 
  RowBox[{
   FractionBox["2", 
    SqrtBox["\[Pi]"]], 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "x"], 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       SuperscriptBox["w", "2"]}]], 
     RowBox[{"\[DifferentialD]", "w"}]}]}]}]}]], "Text",
 CellChangeTimes->{{3.756146116228817*^9, 3.756146215778369*^9}, {
  3.756146305199074*^9, 3.756146305703261*^9}},
 FontWeight->"Bold",
 Background->RGBColor[
  0.9600061036087587, 0.9600061036087587, 0.9600061036087587]],

Cell["\<\
This function is important in applied mathematics and physics (probability \
theory and statistics, thermodynamics, etc.) and fits our present discussion. \
Regarding it as a typical case of a special function defined by in integral \
that cannot be evaluated as elementary calculus, do the following.\
\>", "Text",
 CellChangeTimes->{{3.756146221769643*^9, 3.756146292519766*^9}},
 Background->RGBColor[
  0.9600061036087587, 0.9600061036087587, 0.9600061036087587]],

Cell["\<\
9. Graph the bell-shaped curve (the curve of the integrand in (21)). Show \
that erf is odd. Show that\
\>", "Text",
 CellChangeTimes->{{3.756146342096158*^9, 3.7561463807566147`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubsuperscriptBox["\[Integral]", "a", "b"], 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      SuperscriptBox["w", "2"]}]], 
    RowBox[{"\[DifferentialD]", "w"}]}]}], " ", "=", " ", 
  RowBox[{
   FractionBox[
    SqrtBox["\[Pi]"], "2"], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"erf", " ", "b"}], " ", "-", " ", 
     RowBox[{"erf", " ", "a"}]}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubsuperscriptBox["\[Integral]", 
    RowBox[{"-", "b"}], "b"], 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      SuperscriptBox["w", "2"]}]], 
    RowBox[{"\[DifferentialD]", "w"}]}]}], "=", 
  RowBox[{
   SqrtBox["\[Pi]"], "erf", " ", "b"}]}]}], "Text",
 CellChangeTimes->{{3.7561463951522417`*^9, 3.756146534360736*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Erf", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", " ", 
   RowBox[{"ImageSize", "\[Rule]", "220"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.756164312671123*^9, 3.756164387986178*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwt2nk8VN//B/Axg2HMyJolSvYoqdBCnZOKpKJEEdklLaRNfUraiChbK1Kp
iMqeJbmHki0lJEvZd2bGvi+/c/t9/TEez8fMnHPn3HPe59zH47XcyXO/K5VC
obThF/L/le49wwsL4qindAH/cQkfo1emflHiaNep//fZV7MvKevF0V/f+X8e
9l4zwCwTQzFfZ/7ZE7qtk7ETQwfcRv9ZRLm/0m5CFE2Vt/1zKt3r1IswUeTY
nvXP90uX9nWuEkXrzA7888U7Fa4rykTQTM6pedLNH61/TNqJoAmmyizpoLry
06Hti9D98uxx0j9mcvZJpC5Cqp9fjZKWWJaw5pHvIjSrozBM+pDhA1G53YvQ
SScRLukY15tDsTKLEKPWup80vPBfqyNlEVJ+qdtLuu2290+lbmF04mpDF+mb
T44VdFYIo+sy2zpIq751SI3PEEbKr4+1ki75dPD5sShhJFFp3ET6+I+9YZrX
hRH1XW0DaeHWHdfY7sLovxTh36RThg1OJ5sJIyKmu4r0/hWjXTyGwsgj83Il
6RH7JNsDOsKI/+NQBWm9CpmdU9LCyETyXAnpOtrPT6ZCwujJ9NWif+O16fa6
p3MsZMt2LiSdFz++dFsbC4WuTP5I+kjTu8j7NSxEtxLLJr0g4cro+cpCFduN
MkgbXq8eC05ioTaW1FvS4fLJ2h9eshB1qvcN6fbsoOPNMSxUw3kf/288uFtb
14SyUHksK450sW3Kt9qzLJS5QuIxaenJO3TKKRayCTr5gLR7xFHDFUdZ6K/g
hwjSjLKl2f9Zs9DZIrG7pHevD4lT2MJCq4251/7dnyr3JpP1uL+vmb6kOSe3
y5zRZqGsjqP/kb73cuZukSILdQuEnCVdJepxyYPOQoGp31xJK73bkRlBYaGH
o62O/+brzuWDeVNMdO9lkx1pyat1rosGmEhv4o7lv/kxYLQvo5KJ7GxfbSP9
JkAx+G8pE1HEOreQnlac/8r/mYni19A3kY6yzjSwzmQi2M1dTbrpq5L6/GMm
Ol+9RZa0OKXN3DiCiY6XPZIgvXPjs4uhwUykfKVSmHRakly54lUmchv5RSXt
Hyp5ytiFiRZvUuydx/5YWv0g1I6J5LdZtJEepIYT9VZMpL7ncCNpm3PCoidM
mGg8aeAb6VU29IxQLSYadZt6R9opouhPvRoT5ZwofkX6wbcbfErLmcjRxyWG
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
4hDa/st7g//lweH/8uDg/wAZNE34
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->220,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-5, 5}, {-0.9999999999984626, 0.9999999999984626}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.756164362480043*^9, 3.7561643887667713`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"erff", "[", 
   RowBox[{"x_", ",", "w_"}], "]"}], "=", 
  RowBox[{
   FractionBox["2", 
    SqrtBox["\[Pi]"]], 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "x"], 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       SuperscriptBox["w", "2"]}]], 
     RowBox[{"\[DifferentialD]", "w"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.756164462760812*^9, 3.756164503622809*^9}}],

Cell[BoxData[
 RowBox[{"Erf", "[", "x", "]"}]], "Output",
 CellChangeTimes->{{3.756164478118005*^9, 3.756164504816744*^9}},
 Background->RGBColor[1, 1, 0.85]]
}, Open  ]],

Cell["\<\
The yellow cell above shows that Mathematica has recognized the erf function \
when entered as an anonymous function. By inspection of the plot, the \
function is odd. I have skipped doing the identities.\
\>", "Text",
 CellChangeTimes->{{3.7561646408103743`*^9, 3.756164691903956*^9}, {
  3.756164745231543*^9, 3.756164745613976*^9}, {3.756216337332766*^9, 
  3.756216337762446*^9}, {3.7562163850755157`*^9, 3.756216393728631*^9}, {
  3.756220225342368*^9, 3.7562202261100273`*^9}}],

Cell["\<\
10. Obtain the Maclaurin series of erf x from that of the integrand. Use that \
series to compute a table of erf x for x=0(0.01)3 (meaning x \
=0,0.01,0.02,...,3).\
\>", "Text",
 CellChangeTimes->{{3.7561465852565823`*^9, 3.756146659523573*^9}}],

Cell["\<\
11. Obtain the values required by problem 10 by in integration command of \
your CAS. Compare accuracy.\
\>", "Text",
 CellChangeTimes->{{3.756146663772661*^9, 3.756146694714373*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Erf", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1", ",", "0.01000000"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7561649989206057`*^9, 3.7561650248451653`*^9}, {
  3.756165551621806*^9, 3.7561655585639477`*^9}, {3.7561656270514307`*^9, 
  3.756165631993527*^9}, {3.7561657268882523`*^9, 3.7561657290305023`*^9}, {
  3.756165774324711*^9, 3.756165774620976*^9}, {3.7561658422999153`*^9, 
  3.756165871057769*^9}, {3.7561659961112823`*^9, 3.7561660141891317`*^9}, {
  3.756220105437578*^9, 3.756220106458515*^9}, {3.756220161900158*^9, 
  3.756220178392219*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.`", ",", "0.01128341555584962`", ",", "0.022564574691844943`", ",", 
   "0.03384122234173543`", ",", "0.04511110614512475`", ",", 
   "0.05637197779701663`", ",", "0.06762159439330845`", ",", 
   "0.07885771977089076`", ",", "0.09007812584101815`", ",", 
   "0.10128059391462689`", ",", "0.1124629160182849`", ",", 
   "0.12362289619947432`", ",", "0.13475835181992007`", ",", 
   "0.14586711483569575`", ",", "0.15694703306285585`", ",", 
   "0.1679959714273635`", ",", "0.1790118131981057`", ",", 
   "0.18999246120180882`", ",", "0.20093583901869577`", ",", 
   "0.2118398921577497`", ",", "0.22270258921047847`", ",", 
   "0.2335219229821036`", ",", "0.24429591159912867`", ",", 
   "0.2550225995922732`", ",", "0.26570005895379206`", ",", 
   "0.27632639016823696`", ",", "0.2868997232157492`", ",", 
   "0.2974182185470128`", ",", "0.30788006802903406`", ",", 
   "0.3182834958609523`", ",", "0.32862675945912745`", ",", 
   "0.33890815031079025`", ",", "0.34912599479558276`", ",", 
   "0.359278654974359`", ",", "0.3693645293446587`", ",", 
   "0.3793820535623104`", ",", "0.3893297011286642`", ",", 
   "0.39920598404299923`", ",", "0.40900945341969414`", ",", 
   "0.41873870006979613`", ",", "0.42839235504666856`", ",", 
   "0.43796909015543967`", ",", "0.4474676184260253`", ",", 
   "0.4568866945495403`", ",", "0.46622511527795757`", ",", 
   "0.4754817197869237`", ",", "0.4846553900016797`", ",", 
   "0.4937450508860821`", ",", "0.502749670694765`", ",", 
   "0.5116682611885232`", ",", "0.5204998778130466`", ",", 
   "0.5292436198411705`", ",", "0.5378986304788544`", ",", 
   "0.5464640969351418`", ",", "0.5549392504563903`", ",", 
   "0.563323366325109`", ",", "0.5716157638237684`", ",", 
   "0.5798158061639961`", ",", "0.5879229003816007`", ",", 
   "0.5959364971979085`", ",", "0.603856090847926`", ",", 
   "0.6116812188758802`", ",", "0.6194114618987213`", ",", 
   "0.6270464433381957`", ",", "0.6345858291221413`", ",", 
   "0.6420293273556719`", ",", "0.6493766879629542`", ",", 
   "0.6566277023003051`", ",", "0.663782202741358`", ",", 
   "0.6708400622350777`", ",", "0.6778011938374184`", ",", 
   "0.6846655502174444`", ",", "0.6914331231387512`", ",", 
   "0.6981039429170446`", ",", "0.7046780778547458`", ",", 
   "0.7111556336535152`", ",", "0.7175367528055909`", ",", 
   "0.7238216139648592`", ",", "0.7300104312985789`", ",", 
   "0.7361034538206912`", ",", "0.7421009647076605`", ",", 
   "0.7480032805977896`", ",", "0.7538107508749625`", ",", 
   "0.7595237569377731`", ",", "0.7651427114549945`", ",", 
   "0.7706680576083526`", ",", "0.7761002683235567`", ",", 
   "0.7814398454905507`", ",", "0.7866873191739325`", ",", 
   "0.7918432468144954`", ",", "0.7969082124228322`", ",", 
   "0.8018828257659413`", ",", "0.8067677215477618`", ",", 
   "0.8115635585845578`", ",", "0.8162710189760625`", ",", 
   "0.8208908072732779`", ",", "0.8254236496438183`", ",", 
   "0.8298702930356671`", ",", "0.8342315043402079`", ",", 
   "0.8385080695553698`", ",", "0.8427007929497149`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.756165028090489*^9, 3.7561655747885447`*^9, 3.756165633314911*^9, 
   3.756165730082419*^9, 3.756165790239704*^9, {3.756165857863874*^9, 
   3.7561658719434853`*^9}, 3.7561660163502817`*^9, 3.756220110279696*^9, {
   3.756220163764412*^9, 3.756220179146805*^9}}]
}, Open  ]],

Cell["\<\
Accuracy is per-digit-identical compared to an online table. I did not really \
see the point in going all the way to 3.\
\>", "Text",
 CellChangeTimes->{{3.756166179824504*^9, 3.756166193463048*^9}, {
  3.756216416792*^9, 3.75621644455919*^9}, {3.756217057404634*^9, 
  3.756217080499118*^9}, {3.756220054037508*^9, 3.7562200770433617`*^9}, {
  3.7562201843917093`*^9, 3.7562201912877197`*^9}, {3.756220258671954*^9, 
  3.75622026094907*^9}, {3.769102980188726*^9, 3.7691029828911133`*^9}}]
},
WindowSize->{1366, 843},
WindowMargins->{{4, Automatic}, {Automatic, 4}},
Magnification:>1.5 Inherited,
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 10, \
2015)",
StyleDefinitions->"Charter1.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 221, 5, 51, "Text",
 Evaluatable->False],
Cell[624, 20, 247, 4, 75, "Text"],
Cell[874, 26, 147, 2, 75, "Text"],
Cell[1024, 30, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[1122, 35, 864, 26, 90, "Input"],
Cell[1989, 63, 657, 19, 90, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2683, 87, 491, 14, 47, "Input"],
Cell[3177, 103, 584, 17, 90, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3798, 125, 825, 20, 75, "Input"],
Cell[4626, 147, 41048, 778, 365, "Output"]
}, Open  ]],
Cell[45689, 928, 130, 2, 75, "Text"],
Cell[CellGroupData[{
Cell[45844, 934, 683, 19, 45, "Input"],
Cell[46530, 955, 1804, 37, 512, "Output"]
}, Open  ]],
Cell[48349, 995, 130, 2, 75, "Text"],
Cell[CellGroupData[{
Cell[48504, 1001, 589, 16, 45, "Input"],
Cell[49096, 1019, 110825, 1809, 398, "Output"]
}, Open  ]],
Cell[159936, 2831, 205, 3, 51, "Text"],
Cell[160144, 2836, 1612, 50, 203, "Text"],
Cell[161759, 2888, 375, 7, 110, "Text"],
Cell[162137, 2897, 264, 9, 76, "Text"],
Cell[162404, 2908, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[162502, 2913, 294, 8, 87, "Input"],
Cell[162799, 2923, 188, 5, 77, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[163024, 2933, 247, 7, 45, "Input"],
Cell[163274, 2942, 5727, 105, 161, "Output"]
}, Open  ]],
Cell[169016, 3050, 342, 6, 86, "Text"],
Cell[CellGroupData[{
Cell[169383, 3060, 1095, 23, 103, "Input"],
Cell[170481, 3085, 293, 7, 55, "Output"]
}, Open  ]],
Cell[170789, 3095, 722, 11, 155, "Text"],
Cell[CellGroupData[{
Cell[171536, 3110, 556, 16, 100, "Input"],
Cell[172095, 3128, 738, 25, 138, "Output"]
}, Open  ]],
Cell[172848, 3156, 397, 7, 120, "Text"],
Cell[173248, 3165, 154, 2, 75, "Text"],
Cell[173405, 3169, 185, 4, 51, "Text"],
Cell[173593, 3175, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[173691, 3180, 553, 14, 47, "Input"],
Cell[174247, 3196, 1654, 48, 74, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[175938, 3249, 364, 9, 45, "Input"],
Cell[176305, 3260, 3717, 76, 182, "Output"]
}, Open  ]],
Cell[180037, 3339, 607, 13, 120, "Text"],
Cell[180647, 3354, 151, 3, 51, "Text"],
Cell[CellGroupData[{
Cell[180823, 3361, 443, 13, 78, "Input"],
Cell[181269, 3376, 338, 11, 82, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[181644, 3392, 957, 26, 108, "Input"],
Cell[182604, 3420, 1475, 45, 118, "Output"]
}, Open  ]],
Cell[184094, 3468, 352, 6, 86, "Text"],
Cell[CellGroupData[{
Cell[184471, 3478, 380, 8, 45, "Input"],
Cell[184854, 3488, 1657, 46, 168, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[186548, 3539, 1972, 52, 309, "Input"],
Cell[188523, 3593, 2783, 57, 159, "Output"]
}, Open  ]],
Cell[191321, 3653, 235, 7, 75, "Text"],
Cell[191559, 3662, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[191657, 3667, 196, 5, 75, "Input"],
Cell[191856, 3674, 120, 3, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[192013, 3682, 414, 10, 45, "Input"],
Cell[192430, 3694, 6277, 116, 139, "Output"]
}, Open  ]],
Cell[198722, 3813, 216, 4, 86, "Text"],
Cell[CellGroupData[{
Cell[198963, 3821, 563, 15, 103, "Input"],
Cell[199529, 3838, 510, 14, 99, "Output"]
}, Open  ]],
Cell[200054, 3855, 528, 10, 120, "Text"],
Cell[200585, 3867, 560, 16, 100, "Input"],
Cell[201148, 3885, 292, 5, 86, "Text"],
Cell[201443, 3892, 574, 17, 103, "Input"],
Cell[202020, 3911, 259, 5, 86, "Text"],
Cell[202282, 3918, 2326, 67, 94, "Text"],
Cell[204611, 3987, 246, 4, 75, "Text"],
Cell[204860, 3993, 593, 18, 113, "Text"],
Cell[205456, 4013, 477, 8, 144, "Text"],
Cell[205936, 4023, 230, 5, 75, "Text"],
Cell[206169, 4030, 862, 28, 181, "Text"],
Cell[207034, 4060, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[207132, 4065, 312, 8, 45, "Input"],
Cell[207447, 4075, 15441, 265, 227, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[222925, 4345, 441, 14, 86, "Input"],
Cell[223369, 4361, 158, 3, 69, "Output"]
}, Open  ]],
Cell[223542, 4367, 493, 8, 86, "Text"],
Cell[224038, 4377, 255, 5, 86, "Text"],
Cell[224296, 4384, 229, 5, 75, "Text"],
Cell[CellGroupData[{
Cell[224550, 4393, 663, 13, 45, "Input"],
Cell[225216, 4408, 3376, 57, 365, "Output"]
}, Open  ]],
Cell[228607, 4468, 501, 8, 51, "Text"]
}
]
*)


(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    310355,       6675]
NotebookOptionsPosition[    302325,       6415]
NotebookOutlinePosition[    302713,       6432]
CellTagsIndexPosition[    302670,       6429]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
Some extracurricular practice junk up at the top of this section. For the \
first actual problem, see the orange cell below, numbered 1.\
\>", "Text",
 CellChangeTimes->{{3.767970478168593*^9, 3.7679705182857857`*^9}, {
  3.767971116721219*^9, 3.7679711173184*^9}, {3.76989906383985*^9, 
  3.769899068389008*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"grating", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["x", 
        RowBox[{"2", " "}]], " ", 
       RowBox[{
        RowBox[{"y", "''"}], "[", "x", "]"}]}], "+", 
      RowBox[{"1.5", " ", "x", " ", 
       RowBox[{
        RowBox[{"y", "'"}], "[", "x", "]"}]}], "-", 
      RowBox[{"0.5", " ", 
       RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", "0"}], ",", 
    RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.673124235864311*^9, 3.673124288900853*^9}, {
  3.673124352620675*^9, 3.673124354674817*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", 
       RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
        RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], " ", 
      RowBox[{"C", "[", "1", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["x", 
       RowBox[{
        RowBox[{"-", "1.`"}], "+", 
        RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], " ", 
      RowBox[{"C", "[", "2", "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.6731242911586447`*^9, 3.67312435816537*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"grid", "=", 
  RowBox[{"Simplify", "[", "grating", "]"}]}]], "Input",
 CellChangeTimes->{{3.6731243636433277`*^9, 3.673124369513997*^9}, {
  3.673124411354035*^9, 3.673124412776328*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "1.5`"], " ", 
       RowBox[{"C", "[", "1", "]"}]}], "+", 
      RowBox[{"C", "[", "2", "]"}]}], 
     SuperscriptBox["x", "1.`"]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.673124370851439*^9, 3.673124413517969*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Apart", "[", "grid", "]"}]], "Input",
 CellChangeTimes->{{3.673124417473971*^9, 3.6731244207360888`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "0.5`"], " ", 
      RowBox[{"C", "[", "1", "]"}]}], "+", 
     FractionBox[
      RowBox[{"C", "[", "2", "]"}], 
      SuperscriptBox["x", "1.`"]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.673124421634287*^9}]
}, Open  ]],

Cell[TextData[{
 "Cauchy-Euler equation. The auxilary equation is ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SuperscriptBox["m", "2"], "+", 
    RowBox[{"0.5", " ", "m"}], "-", "0.5"}], "\[Equal]", "0"}]],
  CellChangeTimes->{{3.6731328633823547`*^9, 3.673132890658338*^9}}]
}], "Text",
 CellChangeTimes->{{3.673132822994461*^9, 3.6731328544448338`*^9}, {
  3.673132910482191*^9, 3.673132911005641*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["m", "2"], "+", 
     RowBox[{"0.5", " ", "m"}], "-", "0.5"}], "\[Equal]", "0"}], ",", "m"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6731328633823547`*^9, 3.673132890658338*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"m", "\[Rule]", 
     RowBox[{"-", "1.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"m", "\[Rule]", "0.5`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.673132891433942*^9}]
}, Open  ]],

Cell[TextData[{
 "Numbered line (1) on p. 71 goes like this: ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "2"], 
     RowBox[{"y", "''"}]}], "+", 
    RowBox[{"a", " ", "x", " ", 
     RowBox[{"y", "'"}]}], "+", 
    RowBox[{"b", " ", "y"}]}], "=", "0"}]]]
}], "Text",
 CellChangeTimes->{{3.7679707206020937`*^9, 3.767970732936606*^9}, {
   3.767970780992777*^9, 3.767970781562242*^9}, 3.7679708134143867`*^9}],

Cell[TextData[{
 "Numbered line (2) on p. 71 goes like this: ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SuperscriptBox["m", "2"], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"a", "-", "1"}], ")"}], "m"}], "+", "b"}], "=", "0"}]]]
}], "Text",
 CellChangeTimes->{{3.767970737083034*^9, 3.7679708082386417`*^9}, 
   3.767970846545641*^9}],

Cell[TextData[{
 "1. Double root. Verify directly by substitution that ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "1"}], ")"}], "/", "2"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "Log[x] is a solution of (1) if (2) has a double root, but ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", 
    SubscriptBox["m", "1"]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "Log[x] and ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", 
    SubscriptBox["m", "2"]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "Log[x] are not solutions of (1) if the roots ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["m", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["m", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " of (2) are different."
}], "Text",
 CellChangeTimes->{{3.673128546680211*^9, 3.67312855375871*^9}, {
  3.767971145167095*^9, 3.767971269322521*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.673128827690556*^9, 3.67312882955002*^9}, 
   3.767970948318083*^9, {3.772894166799323*^9, 3.772894167276204*^9}}],

Cell["Solve[ing (2) might be recommended.", "Text",
 CellChangeTimes->{{3.673133064254919*^9, 3.6731330716691437`*^9}, {
  3.76989909545184*^9, 3.769899109051626*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["m", "2"], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"a", "-", "1"}], ")"}], " ", "m"}], "+", "b"}], "\[Equal]", 
    "0"}], ",", "m"}], "]"}]], "Input",
 CellChangeTimes->{{3.673133074880219*^9, 3.6731331039951267`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"m", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "a", "-", 
        SqrtBox[
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "a"}], "+", 
          SuperscriptBox["a", "2"], "-", 
          RowBox[{"4", " ", "b"}]}]]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"m", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "a", "+", 
        SqrtBox[
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "a"}], "+", 
          SuperscriptBox["a", "2"], "-", 
          RowBox[{"4", " ", "b"}]}]]}], ")"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.67313310571264*^9}]
}, Open  ]],

Cell["\<\
The above lists the two possible roots to (2). A double root would mean they\
\[CloseCurlyQuote]re equal.\
\>", "Text",
 CellChangeTimes->{{3.673134368002122*^9, 3.673134382137237*^9}, {
  3.673134419582612*^9, 3.6731344296379147`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"-", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", "a"}], ")"}], "2"], "-", 
        RowBox[{"4", " ", "b"}]}]]}], ")"}], "\[Equal]", 
    RowBox[{"(", 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "a"}], ")"}], "2"], "-", 
       RowBox[{"4", " ", "b"}]}]], ")"}]}], ",", "a"}], "]"}]], "Input",
 CellChangeTimes->{{3.673133241127222*^9, 3.6731333284828367`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", "\[Rule]", 
     RowBox[{"1", "-", 
      RowBox[{"2", " ", 
       SqrtBox["b"]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", "\[Rule]", 
     RowBox[{"1", "+", 
      RowBox[{"2", " ", 
       SqrtBox["b"]}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.673133329785811*^9}]
}, Open  ]],

Cell["\<\
So it looks like (2) has a double root under two circumstances. And the \
relationship between a and b has also been established (call it \
\[OpenCurlyQuote]Rel\[CloseCurlyQuote]). Now it is time to look at the \
problem\[CloseCurlyQuote]s proposed sol\[CloseCurlyQuote]n.\
\>", "Text",
 CellChangeTimes->{{3.673133384334496*^9, 3.673133413980191*^9}, 
   3.6731334967261877`*^9, {3.673133734238902*^9, 3.6731337630196447`*^9}, {
   3.673133796930615*^9, 3.673133817975819*^9}, {3.673138200536615*^9, 
   3.6731382156632433`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"y", "[", "x_", "]"}], ":=", 
  RowBox[{
   SuperscriptBox["x", 
    FractionBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "a"}], ")"}], "2"]], " ", 
   RowBox[{"Log", "[", "x", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.673128727251813*^9, 3.6731287779439573`*^9}, {
  3.67312881551124*^9, 3.673128818934533*^9}, {3.673131020718216*^9, 
  3.673131021539044*^9}, {3.673131676947019*^9, 3.673131677250738*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cran", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "2"], " ", 
     RowBox[{
      RowBox[{"y", "''"}], "[", "x", "]"}]}], "+", 
    RowBox[{"a", " ", "x", " ", 
     RowBox[{
      RowBox[{"y", "'"}], "[", "x", "]"}]}], "+", 
    RowBox[{"b", " ", 
     RowBox[{"y", "[", "x", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.673129099149351*^9, 3.673129144250626*^9}, {
  3.6731292500707293`*^9, 3.6731292508772182`*^9}, {3.673129802834888*^9, 
  3.673129827527595*^9}, {3.67313009399152*^9, 3.6731300983254633`*^9}, {
  3.6731302132266407`*^9, 3.673130221346389*^9}, {3.673131057779681*^9, 
  3.673131065473507*^9}, {3.673131706672739*^9, 3.673131781156663*^9}, {
  3.673133599729164*^9, 3.673133601254917*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "4"]}], " ", 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "a"}], ")"}], "2"], "-", 
    RowBox[{"4", " ", "b"}]}], ")"}], " ", 
  SuperscriptBox["x", 
   RowBox[{
    FractionBox["1", "2"], "-", 
    FractionBox["a", "2"]}]], " ", 
  RowBox[{"Log", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{{3.6731291166155767`*^9, 3.6731291448321047`*^9}, 
   3.673129195025133*^9, 3.67312925249761*^9, 3.673129364705687*^9, 
   3.673129527947708*^9, {3.67312980540035*^9, 3.6731298290041113`*^9}, 
   3.673129973668339*^9, 3.673130099805298*^9, 3.6731302238041897`*^9, 
   3.6731302841053057`*^9, 3.673130475302256*^9, 3.673130704420032*^9, 
   3.673131067719996*^9, 3.673131143131311*^9, 3.673131401648079*^9, {
   3.673131717479896*^9, 3.673131782094904*^9}, 3.6731318254001837`*^9, 
   3.673131855457858*^9, 3.673133602533491*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"cran", "/.", 
   RowBox[{"a", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"2", 
       SqrtBox["b"]}]}], ")"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6731336243064003`*^9, 3.673133676089876*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.673133678090169*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"cran", "/.", 
   RowBox[{"a", "->", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"2", 
       SqrtBox["b"]}]}], ")"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.673133686829064*^9, 3.673133718270926*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.6731337203273993`*^9}]
}, Open  ]],

Cell["\<\
I think I have done what the first part of the problem asked: if (2) has a \
double root, a certain relationship \[OpenCurlyQuote]Rel\[CloseCurlyQuote] \
exists between the coefficients a and b in the double root. The proposed sol\
\[CloseCurlyQuote]n only incorporates one of the coefficients, but the \
candidate equation does have both, and after substituting the proposed sol\
\[CloseCurlyQuote]n into the candidate equation and analyzing the resulting \
wreckage, the relationship \[OpenCurlyQuote]Rel\[CloseCurlyQuote] is found to \
be present. In other words, invoking \[OpenCurlyQuote]Rel\[CloseCurlyQuote] \
proves the proposed sol\[CloseCurlyQuote]n to be an actual sol\
\[CloseCurlyQuote]n.\
\>", "Text",
 CellChangeTimes->{{3.67313383885429*^9, 3.673133858844821*^9}, {
  3.6731338918425922`*^9, 3.673133927391952*^9}, {3.673133976524679*^9, 
  3.67313415639253*^9}, {3.673134192822187*^9, 3.673134225643908*^9}, {
  3.673134270249036*^9, 3.6731343067184896`*^9}}],

Cell[TextData[{
 "For the second part of the problem. If the roots of (2) are not equal, it \
would imply that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["m", "1"], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], 
       RowBox[{"(", 
        RowBox[{"1", "-", "a", "-", 
         SqrtBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", "a"}], ")"}], "2"], "-", 
           RowBox[{"4", " ", "b"}]}]]}], ")"}]}], " ", "!=", 
      SubscriptBox["m", "2"]}], "=", 
     RowBox[{
      FractionBox["1", "2"], 
      RowBox[{"(", 
       RowBox[{"1", "-", "a", "+", 
        SqrtBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a"}], ")"}], "2"], "-", 
          RowBox[{"4", " ", "b"}]}]]}], ")"}]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". It seems obvious that the exclamation point cannot be removed by squaring \
both sides! However, I don\[CloseCurlyQuote]t see what is wrong with \
multiplying both sides (of the pertinent sub-expressions) by the same \
quantity, e.g. ",
 Cell[BoxData[
  FormBox[
   SqrtBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "a"}], ")"}], "2"], "-", 
     RowBox[{"4", " ", "b"}]}]], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.673135995209646*^9, 3.673136171020927*^9}, {
   3.673136618219615*^9, 3.6731367032861347`*^9}, 3.6731367730746183`*^9, {
   3.673137711270624*^9, 3.673137721934104*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "a"}], ")"}], "2"], "-", 
     RowBox[{"4", " ", "b"}]}], ")"}]}], "!=", 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "a"}], ")"}], "2"], "-", 
    RowBox[{"4", " ", "b"}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.673136194631212*^9, 3.67313627712866*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "a"}], ")"}], "2"]}], "+", 
   RowBox[{"4", " ", "b"}]}], "\[NotEqual]", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", "a"}], ")"}], "2"], "-", 
   RowBox[{"4", " ", "b"}]}]}]], "Output",
 CellChangeTimes->{3.673136282463962*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"8", " ", "b"}], "\[NotEqual]", 
  RowBox[{"2", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", "a"}], ")"}], "2"]}]}]], "Input",
 CellChangeTimes->{{3.673136335709947*^9, 3.673136356392747*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"4", " ", "b"}], "\[NotEqual]", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "-", "a"}], ")"}], "2"]}]], "Input",
 CellChangeTimes->{{3.6731368195184813`*^9, 3.67313683625686*^9}}],

Cell[TextData[{
 "But in the expansion of ",
 StyleBox["cran", "Input"],
 " something very much like this came up.  What if I look at"
}], "Text",
 CellChangeTimes->{{3.673137111526228*^9, 3.673137141468445*^9}}],

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", "a"}], ")"}], "2"], "\[Equal]", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"a", "-", "1"}], ")"}], "2"]}], "]"}]], "Input",
 CellChangeTimes->{{3.6731371612701063`*^9, 3.673137182681868*^9}, {
  3.673137222975971*^9, 3.673137230096189*^9}}],

Cell[BoxData["True"], "Input",
 CellChangeTimes->{{3.673137259100471*^9, 3.673137261284647*^9}, {
  3.673137612702743*^9, 3.673137613613399*^9}}],

Cell[TextData[{
 "Let me bring ",
 StyleBox["cran", "Input"],
 " back."
}], "Text",
 CellChangeTimes->{{3.6731376189086523`*^9, 3.673137624428339*^9}}],

Cell[CellGroupData[{

Cell[BoxData["cran"], "Input",
 CellChangeTimes->{{3.673137631143291*^9, 3.673137631691823*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "4"]}], " ", 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "a"}], ")"}], "2"], "-", 
    RowBox[{"4", " ", "b"}]}], ")"}], " ", 
  SuperscriptBox["x", 
   RowBox[{
    FractionBox["1", "2"], "-", 
    FractionBox["a", "2"]}]], " ", 
  RowBox[{"Log", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{3.673137632863092*^9}]
}, Open  ]],

Cell[TextData[{
 "I contend that having the expression inside parentheses above, i.e. ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "a"}], ")"}], "2"], "-", 
     RowBox[{"4", " ", "b"}]}], ")"}], TraditionalForm]]],
 ", equal to zero is necessary for ",
 StyleBox["cran", "Input"],
 " to go to zero, and, backtracking a few steps, this only happens if the \
roots are equal. This line of reasoning does not manipulate the specific \
proposed sol\[CloseCurlyQuote]ns, however. Incidentally, there is no text \
answer for this problem."
}], "Text",
 CellChangeTimes->{{3.673137388117207*^9, 3.673137529850634*^9}, 
   3.673137653939727*^9, {3.673137899857917*^9, 3.673137924640258*^9}, {
   3.673138017754077*^9, 3.673138032385268*^9}, {3.6731380660004396`*^9, 
   3.673138068910535*^9}, {3.673138359558029*^9, 3.673138394472911*^9}, {
   3.769899256137591*^9, 3.769899274702444*^9}}],

Cell[TextData[{
 "3.  5 ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "2"], 
     RowBox[{"y", "''"}]}], "+", 
    RowBox[{"23", " ", "x", " ", 
     RowBox[{"y", "'"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "+16.2 y = 0"
}], "Text",
 CellChangeTimes->{{3.767971378672673*^9, 3.767971419046504*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6731724059663963`*^9, 3.6731724075204563`*^9}, 
   3.7679709652774878`*^9, {3.772894180555533*^9, 3.772894181059566*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"doxy", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"5", " ", 
      SuperscriptBox["x", "2"], " ", 
      RowBox[{
       RowBox[{"y", "''"}], "[", "x", "]"}]}], "+", 
     RowBox[{"23", " ", "x", " ", 
      RowBox[{
       RowBox[{"y", "'"}], "[", "x", "]"}]}], "+", 
     RowBox[{"16.2", " ", 
      RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", "0"}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"plat", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{"doxy", ",", "y", ",", "x"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.673172428832691*^9, 3.67317248754552*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"16.2`", " ", 
     RowBox[{"y", "[", "x", "]"}]}], "+", 
    RowBox[{"23", " ", "x", " ", 
     RowBox[{
      SuperscriptBox["y", "\[Prime]",
       MultilineFunction->None], "[", "x", "]"}]}], "+", 
    RowBox[{"5", " ", 
     SuperscriptBox["x", "2"], " ", 
     RowBox[{
      SuperscriptBox["y", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "x", "]"}]}]}], "\[Equal]", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.673172491225939*^9, 3.6731728588898973`*^9, 
  3.6731730004555883`*^9, 3.673173634479207*^9, 3.673183206109364*^9, 
  3.6731871261393747`*^9, 3.6731878532767897`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "x", "}"}], ",", 
      RowBox[{
       FractionBox[
        RowBox[{"C", "[", "1", "]"}], 
        SuperscriptBox["x", "1.8000000000000007`"]], "+", 
       FractionBox[
        RowBox[{"1.7999999999999998`", " ", 
         RowBox[{"C", "[", "2", "]"}], " ", 
         RowBox[{"Log", "[", "x", "]"}]}], 
        SuperscriptBox["x", "1.8000000000000007`"]]}]}], "]"}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.673172491225939*^9, 3.6731728588898973`*^9, 
  3.6731730004555883`*^9, 3.673173634479207*^9, 3.673183206109364*^9, 
  3.6731871261393747`*^9, 3.673187853329439*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gerz", "=", 
  RowBox[{"plat", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "1", ",", "2", ",", "2"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.673184311755892*^9, 3.673184343230648*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"C", "[", "1", "]"}], 
   SuperscriptBox["x", "1.8000000000000007`"]], "+", 
  FractionBox[
   RowBox[{"1.7999999999999998`", " ", 
    RowBox[{"C", "[", "2", "]"}], " ", 
    RowBox[{"Log", "[", "x", "]"}]}], 
   SuperscriptBox["x", "1.8000000000000007`"]]}]], "Output",
 CellChangeTimes->{{3.673184325832576*^9, 3.673184344413724*^9}, 
   3.6731871286105337`*^9, 3.67318785553756*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"derz", "=", 
  RowBox[{"gerz", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"C", "[", "1", "]"}], "\[Rule]", "c1"}], ",", 
     RowBox[{
      RowBox[{"C", "[", "2", "]"}], "\[Rule]", "c2"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.673184564787074*^9, 3.6731845960536127`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["c1", 
   SuperscriptBox["x", "1.8000000000000007`"]], "+", 
  FractionBox[
   RowBox[{"1.7999999999999998`", " ", "c2", " ", 
    RowBox[{"Log", "[", "x", "]"}]}], 
   SuperscriptBox["x", "1.8000000000000007`"]]}]], "Output",
 CellChangeTimes->{3.6731845998913317`*^9, 3.673184637252784*^9, 
  3.673187132109646*^9, 3.673187858665471*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[TextData[{
 "The above answer matches the text. Here 1.8*c2 equals the text answer \
constant ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["c", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.769899356947359*^9, 3.769899414953559*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"lint", "[", 
   RowBox[{"x_", ",", "c1_", ",", "c2_"}], "]"}], ":=", "derz"}]], "Input",
 CellChangeTimes->{{3.6731844420950737`*^9, 3.673184475645026*^9}, {
  3.673184604879168*^9, 3.673184626132587*^9}, {3.673184805319994*^9, 
  3.673184806309864*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "c1", ",", "c2", ",", "derz"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c1", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c2", ",", 
       RowBox[{"-", "3"}], ",", "3", ",", ".25"}], "}"}]}], "]"}], ",", 
   RowBox[{"TableHeadings", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<c1=-1\>\"", ",", "\"\<c1=0 \>\"", ",", "\"\<c1=1\>\""}], 
       "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.67318336059781*^9, 3.673183371338683*^9}, {
  3.673184272378563*^9, 3.673184296112554*^9}, {3.6731843313036013`*^9, 
  3.673184333534821*^9}, {3.673184501722934*^9, 3.673184539735746*^9}, {
  3.673184646422027*^9, 3.673184653627993*^9}, {3.6731848127438507`*^9, 
  3.6731848144460783`*^9}, {3.6731849359874487`*^9, 3.6731849399616613`*^9}, {
  3.673185043479649*^9, 3.6731850465513067`*^9}, {3.673185170531208*^9, 
  3.673185201896246*^9}, {3.673185261078198*^9, 3.6731852696056356`*^9}, {
  3.673185344899632*^9, 3.6731853451153793`*^9}, {3.6731854249931927`*^9, 
  3.673185429959993*^9}, {3.673185476040235*^9, 3.673185485805985*^9}, {
  3.673185589874668*^9, 3.673185604401763*^9}, {3.673188359592799*^9, 
  3.6731883827739887`*^9}, {3.673189641706561*^9, 3.673189663431608*^9}, {
  3.673189941071554*^9, 3.673189958205305*^9}, {3.673190030469183*^9, 
  3.673190037866308*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"c1=-1\"\>",
       HoldForm], 
      TagBox["\<\"c1=0 \"\>",
       HoldForm], 
      TagBox["\<\"c1=1\"\>",
       HoldForm]},
     {
      TagBox[
       StyleBox["\<\"\[Null]\"\>",
        ShowStringCharacters->False],
       StyleForm[#, ShowStringCharacters -> False]& ], GridBox[{
        {"1", 
         RowBox[{"-", "1"}], 
         RowBox[{"-", "3.`"}], 
         RowBox[{"-", "1.`"}]},
        {"1", 
         RowBox[{"-", "1"}], 
         RowBox[{"-", "2.75`"}], 
         RowBox[{"-", "1.`"}]},
        {"1", 
         RowBox[{"-", "1"}], 
         RowBox[{"-", "2.5`"}], 
         RowBox[{"-", "1.`"}]},
        {"1", 
         RowBox[{"-", "1"}], 
         RowBox[{"-", "2.25`"}], 
         RowBox[{"-", "1.`"}]},
        {"1", 
         RowBox[{"-", "1"}], 
         RowBox[{"-", "2.`"}], 
         RowBox[{"-", "1.`"}]},
        {"1", 
         RowBox[{"-", "1"}], 
         RowBox[{"-", "1.75`"}], 
         RowBox[{"-", "1.`"}]},
        {"1", 
         RowBox[{"-", "1"}], 
         RowBox[{"-", "1.5`"}], 
         RowBox[{"-", "1.`"}]},
        {"1", 
         RowBox[{"-", "1"}], 
         RowBox[{"-", "1.25`"}], 
         RowBox[{"-", "1.`"}]},
        {"1", 
         RowBox[{"-", "1"}], 
         RowBox[{"-", "1.`"}], 
         RowBox[{"-", "1.`"}]},
        {"1", 
         RowBox[{"-", "1"}], 
         RowBox[{"-", "0.75`"}], 
         RowBox[{"-", "1.`"}]},
        {"1", 
         RowBox[{"-", "1"}], 
         RowBox[{"-", "0.5`"}], 
         RowBox[{"-", "1.`"}]},
        {"1", 
         RowBox[{"-", "1"}], 
         RowBox[{"-", "0.25`"}], 
         RowBox[{"-", "1.`"}]},
        {"1", 
         RowBox[{"-", "1"}], "0.`", 
         RowBox[{"-", "1.`"}]},
        {"1", 
         RowBox[{"-", "1"}], "0.25`", 
         RowBox[{"-", "1.`"}]},
        {"1", 
         RowBox[{"-", "1"}], "0.5`", 
         RowBox[{"-", "1.`"}]},
        {"1", 
         RowBox[{"-", "1"}], "0.75`", 
         RowBox[{"-", "1.`"}]},
        {"1", 
         RowBox[{"-", "1"}], "1.`", 
         RowBox[{"-", "1.`"}]},
        {"1", 
         RowBox[{"-", "1"}], "1.25`", 
         RowBox[{"-", "1.`"}]},
        {"1", 
         RowBox[{"-", "1"}], "1.5`", 
         RowBox[{"-", "1.`"}]},
        {"1", 
         RowBox[{"-", "1"}], "1.75`", 
         RowBox[{"-", "1.`"}]},
        {"1", 
         RowBox[{"-", "1"}], "2.`", 
         RowBox[{"-", "1.`"}]},
        {"1", 
         RowBox[{"-", "1"}], "2.25`", 
         RowBox[{"-", "1.`"}]},
        {"1", 
         RowBox[{"-", "1"}], "2.5`", 
         RowBox[{"-", "1.`"}]},
        {"1", 
         RowBox[{"-", "1"}], "2.75`", 
         RowBox[{"-", "1.`"}]},
        {"1", 
         RowBox[{"-", "1"}], "3.`", 
         RowBox[{"-", "1.`"}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{
            Offset[0.2]}}, "RowsIndexed" -> {}}], GridBox[{
        {"1", "0", 
         RowBox[{"-", "3.`"}], "0.`"},
        {"1", "0", 
         RowBox[{"-", "2.75`"}], "0.`"},
        {"1", "0", 
         RowBox[{"-", "2.5`"}], "0.`"},
        {"1", "0", 
         RowBox[{"-", "2.25`"}], "0.`"},
        {"1", "0", 
         RowBox[{"-", "2.`"}], "0.`"},
        {"1", "0", 
         RowBox[{"-", "1.75`"}], "0.`"},
        {"1", "0", 
         RowBox[{"-", "1.5`"}], "0.`"},
        {"1", "0", 
         RowBox[{"-", "1.25`"}], "0.`"},
        {"1", "0", 
         RowBox[{"-", "1.`"}], "0.`"},
        {"1", "0", 
         RowBox[{"-", "0.75`"}], "0.`"},
        {"1", "0", 
         RowBox[{"-", "0.5`"}], "0.`"},
        {"1", "0", 
         RowBox[{"-", "0.25`"}], "0.`"},
        {"1", "0", "0.`", "0.`"},
        {"1", "0", "0.25`", "0.`"},
        {"1", "0", "0.5`", "0.`"},
        {"1", "0", "0.75`", "0.`"},
        {"1", "0", "1.`", "0.`"},
        {"1", "0", "1.25`", "0.`"},
        {"1", "0", "1.5`", "0.`"},
        {"1", "0", "1.75`", "0.`"},
        {"1", "0", "2.`", "0.`"},
        {"1", "0", "2.25`", "0.`"},
        {"1", "0", "2.5`", "0.`"},
        {"1", "0", "2.75`", "0.`"},
        {"1", "0", "3.`", "0.`"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{
            Offset[0.2]}}, "RowsIndexed" -> {}}], GridBox[{
        {"1", "1", 
         RowBox[{"-", "3.`"}], "1.`"},
        {"1", "1", 
         RowBox[{"-", "2.75`"}], "1.`"},
        {"1", "1", 
         RowBox[{"-", "2.5`"}], "1.`"},
        {"1", "1", 
         RowBox[{"-", "2.25`"}], "1.`"},
        {"1", "1", 
         RowBox[{"-", "2.`"}], "1.`"},
        {"1", "1", 
         RowBox[{"-", "1.75`"}], "1.`"},
        {"1", "1", 
         RowBox[{"-", "1.5`"}], "1.`"},
        {"1", "1", 
         RowBox[{"-", "1.25`"}], "1.`"},
        {"1", "1", 
         RowBox[{"-", "1.`"}], "1.`"},
        {"1", "1", 
         RowBox[{"-", "0.75`"}], "1.`"},
        {"1", "1", 
         RowBox[{"-", "0.5`"}], "1.`"},
        {"1", "1", 
         RowBox[{"-", "0.25`"}], "1.`"},
        {"1", "1", "0.`", "1.`"},
        {"1", "1", "0.25`", "1.`"},
        {"1", "1", "0.5`", "1.`"},
        {"1", "1", "0.75`", "1.`"},
        {"1", "1", "1.`", "1.`"},
        {"1", "1", "1.25`", "1.`"},
        {"1", "1", "1.5`", "1.`"},
        {"1", "1", "1.75`", "1.`"},
        {"1", "1", "2.`", "1.`"},
        {"1", "1", "2.25`", "1.`"},
        {"1", "1", "2.5`", "1.`"},
        {"1", "1", "2.75`", "1.`"},
        {"1", "1", "3.`", "1.`"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{
            Offset[0.2]}}, "RowsIndexed" -> {}}]},
     {
      TagBox[
       StyleBox["\<\"\[Null]\"\>",
        ShowStringCharacters->False],
       StyleForm[#, ShowStringCharacters -> False]& ], GridBox[{
        {"2", 
         RowBox[{"-", "1"}], 
         RowBox[{"-", "3.`"}], 
         RowBox[{"-", "1.3620675739573147`"}]},
        {"2", 
         RowBox[{"-", "1"}], 
         RowBox[{"-", "2.75`"}], 
         RowBox[{"-", "1.27249315852331`"}]},
        {"2", 
         RowBox[{"-", "1"}], 
         RowBox[{"-", "2.5`"}], 
         RowBox[{"-", "1.1829187430893053`"}]},
        {"2", 
         RowBox[{"-", "1"}], 
         RowBox[{"-", "2.25`"}], 
         RowBox[{"-", "1.0933443276553008`"}]},
        {"2", 
         RowBox[{"-", "1"}], 
         RowBox[{"-", "2.`"}], 
         RowBox[{"-", "1.003769912221296`"}]},
        {"2", 
         RowBox[{"-", "1"}], 
         RowBox[{"-", "1.75`"}], 
         RowBox[{"-", "0.9141954967872913`"}]},
        {"2", 
         RowBox[{"-", "1"}], 
         RowBox[{"-", "1.5`"}], 
         RowBox[{"-", "0.8246210813532866`"}]},
        {"2", 
         RowBox[{"-", "1"}], 
         RowBox[{"-", "1.25`"}], 
         RowBox[{"-", "0.735046665919282`"}]},
        {"2", 
         RowBox[{"-", "1"}], 
         RowBox[{"-", "1.`"}], 
         RowBox[{"-", "0.6454722504852772`"}]},
        {"2", 
         RowBox[{"-", "1"}], 
         RowBox[{"-", "0.75`"}], 
         RowBox[{"-", "0.5558978350512727`"}]},
        {"2", 
         RowBox[{"-", "1"}], 
         RowBox[{"-", "0.5`"}], 
         RowBox[{"-", "0.466323419617268`"}]},
        {"2", 
         RowBox[{"-", "1"}], 
         RowBox[{"-", "0.25`"}], 
         RowBox[{"-", "0.3767490041832633`"}]},
        {"2", 
         RowBox[{"-", "1"}], "0.`", 
         RowBox[{"-", "0.2871745887492586`"}]},
        {"2", 
         RowBox[{"-", "1"}], "0.25`", 
         RowBox[{"-", "0.19760017331525392`"}]},
        {"2", 
         RowBox[{"-", "1"}], "0.5`", 
         RowBox[{"-", "0.10802575788124927`"}]},
        {"2", 
         RowBox[{"-", "1"}], "0.75`", 
         RowBox[{"-", "0.018451342447244612`"}]},
        {"2", 
         RowBox[{"-", "1"}], "1.`", "0.07112307298676007`"},
        {"2", 
         RowBox[{"-", "1"}], "1.25`", "0.16069748842076476`"},
        {"2", 
         RowBox[{"-", "1"}], "1.5`", "0.2502719038547694`"},
        {"2", 
         RowBox[{"-", "1"}], "1.75`", "0.33984631928877407`"},
        {"2", 
         RowBox[{"-", "1"}], "2.`", "0.42942073472277875`"},
        {"2", 
         RowBox[{"-", "1"}], "2.25`", "0.5189951501567835`"},
        {"2", 
         RowBox[{"-", "1"}], "2.5`", "0.6085695655907881`"},
        {"2", 
         RowBox[{"-", "1"}], "2.75`", "0.6981439810247927`"},
        {"2", 
         RowBox[{"-", "1"}], "3.`", "0.7877183964587974`"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{
            Offset[0.2]}}, "RowsIndexed" -> {}}], GridBox[{
        {"2", "0", 
         RowBox[{"-", "3.`"}], 
         RowBox[{"-", "1.074892985208056`"}]},
        {"2", "0", 
         RowBox[{"-", "2.75`"}], 
         RowBox[{"-", "0.9853185697740513`"}]},
        {"2", "0", 
         RowBox[{"-", "2.5`"}], 
         RowBox[{"-", "0.8957441543400467`"}]},
        {"2", "0", 
         RowBox[{"-", "2.25`"}], 
         RowBox[{"-", "0.8061697389060422`"}]},
        {"2", "0", 
         RowBox[{"-", "2.`"}], 
         RowBox[{"-", "0.7165953234720374`"}]},
        {"2", "0", 
         RowBox[{"-", "1.75`"}], 
         RowBox[{"-", "0.6270209080380327`"}]},
        {"2", "0", 
         RowBox[{"-", "1.5`"}], 
         RowBox[{"-", "0.537446492604028`"}]},
        {"2", "0", 
         RowBox[{"-", "1.25`"}], 
         RowBox[{"-", "0.44787207717002336`"}]},
        {"2", "0", 
         RowBox[{"-", "1.`"}], 
         RowBox[{"-", "0.3582976617360187`"}]},
        {"2", "0", 
         RowBox[{"-", "0.75`"}], 
         RowBox[{"-", "0.268723246302014`"}]},
        {"2", "0", 
         RowBox[{"-", "0.5`"}], 
         RowBox[{"-", "0.17914883086800934`"}]},
        {"2", "0", 
         RowBox[{"-", "0.25`"}], 
         RowBox[{"-", "0.08957441543400467`"}]},
        {"2", "0", "0.`", "0.`"},
        {"2", "0", "0.25`", "0.08957441543400467`"},
        {"2", "0", "0.5`", "0.17914883086800934`"},
        {"2", "0", "0.75`", "0.268723246302014`"},
        {"2", "0", "1.`", "0.3582976617360187`"},
        {"2", "0", "1.25`", "0.44787207717002336`"},
        {"2", "0", "1.5`", "0.537446492604028`"},
        {"2", "0", "1.75`", "0.6270209080380327`"},
        {"2", "0", "2.`", "0.7165953234720374`"},
        {"2", "0", "2.25`", "0.8061697389060422`"},
        {"2", "0", "2.5`", "0.8957441543400467`"},
        {"2", "0", "2.75`", "0.9853185697740513`"},
        {"2", "0", "3.`", "1.074892985208056`"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{
            Offset[0.2]}}, "RowsIndexed" -> {}}], GridBox[{
        {"2", "1", 
         RowBox[{"-", "3.`"}], 
         RowBox[{"-", "0.7877183964587974`"}]},
        {"2", "1", 
         RowBox[{"-", "2.75`"}], 
         RowBox[{"-", "0.6981439810247927`"}]},
        {"2", "1", 
         RowBox[{"-", "2.5`"}], 
         RowBox[{"-", "0.6085695655907881`"}]},
        {"2", "1", 
         RowBox[{"-", "2.25`"}], 
         RowBox[{"-", "0.5189951501567835`"}]},
        {"2", "1", 
         RowBox[{"-", "2.`"}], 
         RowBox[{"-", "0.42942073472277875`"}]},
        {"2", "1", 
         RowBox[{"-", "1.75`"}], 
         RowBox[{"-", "0.33984631928877407`"}]},
        {"2", "1", 
         RowBox[{"-", "1.5`"}], 
         RowBox[{"-", "0.2502719038547694`"}]},
        {"2", "1", 
         RowBox[{"-", "1.25`"}], 
         RowBox[{"-", "0.16069748842076476`"}]},
        {"2", "1", 
         RowBox[{"-", "1.`"}], 
         RowBox[{"-", "0.07112307298676007`"}]},
        {"2", "1", 
         RowBox[{"-", "0.75`"}], "0.018451342447244612`"},
        {"2", "1", 
         RowBox[{"-", "0.5`"}], "0.10802575788124927`"},
        {"2", "1", 
         RowBox[{"-", "0.25`"}], "0.19760017331525392`"},
        {"2", "1", "0.`", "0.2871745887492586`"},
        {"2", "1", "0.25`", "0.3767490041832633`"},
        {"2", "1", "0.5`", "0.466323419617268`"},
        {"2", "1", "0.75`", "0.5558978350512727`"},
        {"2", "1", "1.`", "0.6454722504852772`"},
        {"2", "1", "1.25`", "0.735046665919282`"},
        {"2", "1", "1.5`", "0.8246210813532866`"},
        {"2", "1", "1.75`", "0.9141954967872913`"},
        {"2", "1", "2.`", "1.003769912221296`"},
        {"2", "1", "2.25`", "1.0933443276553008`"},
        {"2", "1", "2.5`", "1.1829187430893053`"},
        {"2", "1", "2.75`", "1.27249315852331`"},
        {"2", "1", "3.`", "1.3620675739573147`"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{
            Offset[0.2]}}, "RowsIndexed" -> {}}]},
     {
      TagBox[
       StyleBox["\<\"\[Null]\"\>",
        ShowStringCharacters->False],
       StyleForm[#, ShowStringCharacters -> False]& ], GridBox[{
        {"3", 
         RowBox[{"-", "1"}], 
         RowBox[{"-", "3.`"}], 
         RowBox[{"-", "0.9595597400275748`"}]},
        {"3", 
         RowBox[{"-", "1"}], 
         RowBox[{"-", "2.75`"}], 
         RowBox[{"-", "0.8911309740957909`"}]},
        {"3", 
         RowBox[{"-", "1"}], 
         RowBox[{"-", "2.5`"}], 
         RowBox[{"-", "0.8227022081640072`"}]},
        {"3", 
         RowBox[{"-", "1"}], 
         RowBox[{"-", "2.25`"}], 
         RowBox[{"-", "0.7542734422322233`"}]},
        {"3", 
         RowBox[{"-", "1"}], 
         RowBox[{"-", "2.`"}], 
         RowBox[{"-", "0.6858446763004393`"}]},
        {"3", 
         RowBox[{"-", "1"}], 
         RowBox[{"-", "1.75`"}], 
         RowBox[{"-", "0.6174159103686555`"}]},
        {"3", 
         RowBox[{"-", "1"}], 
         RowBox[{"-", "1.5`"}], 
         RowBox[{"-", "0.5489871444368717`"}]},
        {"3", 
         RowBox[{"-", "1"}], 
         RowBox[{"-", "1.25`"}], 
         RowBox[{"-", "0.48055837850508787`"}]},
        {"3", 
         RowBox[{"-", "1"}], 
         RowBox[{"-", "1.`"}], 
         RowBox[{"-", "0.41212961257330394`"}]},
        {"3", 
         RowBox[{"-", "1"}], 
         RowBox[{"-", "0.75`"}], 
         RowBox[{"-", "0.3437008466415201`"}]},
        {"3", 
         RowBox[{"-", "1"}], 
         RowBox[{"-", "0.5`"}], 
         RowBox[{"-", "0.2752720807097362`"}]},
        {"3", 
         RowBox[{"-", "1"}], 
         RowBox[{"-", "0.25`"}], 
         RowBox[{"-", "0.20684331477795237`"}]},
        {"3", 
         RowBox[{"-", "1"}], "0.`", 
         RowBox[{"-", "0.1384145488461685`"}]},
        {"3", 
         RowBox[{"-", "1"}], "0.25`", 
         RowBox[{"-", "0.06998578291438463`"}]},
        {"3", 
         RowBox[{"-", "1"}], "0.5`", 
         RowBox[{"-", "0.001557016982600773`"}]},
        {"3", 
         RowBox[{"-", "1"}], "0.75`", "0.0668717489491831`"},
        {"3", 
         RowBox[{"-", "1"}], "1.`", "0.13530051488096695`"},
        {"3", 
         RowBox[{"-", "1"}], "1.25`", "0.20372928081275088`"},
        {"3", 
         RowBox[{"-", "1"}], "1.5`", "0.2721580467445347`"},
        {"3", 
         RowBox[{"-", "1"}], "1.75`", "0.3405868126763185`"},
        {"3", 
         RowBox[{"-", "1"}], "2.`", "0.4090155786081024`"},
        {"3", 
         RowBox[{"-", "1"}], "2.25`", "0.4774443445398863`"},
        {"3", 
         RowBox[{"-", "1"}], "2.5`", "0.5458731104716703`"},
        {"3", 
         RowBox[{"-", "1"}], "2.75`", "0.614301876403454`"},
        {"3", 
         RowBox[{"-", "1"}], "3.`", "0.682730642335238`"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{
            Offset[0.2]}}, "RowsIndexed" -> {}}], GridBox[{
        {"3", "0", 
         RowBox[{"-", "3.`"}], 
         RowBox[{"-", "0.8211451911814064`"}]},
        {"3", "0", 
         RowBox[{"-", "2.75`"}], 
         RowBox[{"-", "0.7527164252496225`"}]},
        {"3", "0", 
         RowBox[{"-", "2.5`"}], 
         RowBox[{"-", "0.6842876593178387`"}]},
        {"3", "0", 
         RowBox[{"-", "2.25`"}], 
         RowBox[{"-", "0.6158588933860548`"}]},
        {"3", "0", 
         RowBox[{"-", "2.`"}], 
         RowBox[{"-", "0.5474301274542709`"}]},
        {"3", "0", 
         RowBox[{"-", "1.75`"}], 
         RowBox[{"-", "0.479001361522487`"}]},
        {"3", "0", 
         RowBox[{"-", "1.5`"}], 
         RowBox[{"-", "0.4105725955907032`"}]},
        {"3", "0", 
         RowBox[{"-", "1.25`"}], 
         RowBox[{"-", "0.3421438296589194`"}]},
        {"3", "0", 
         RowBox[{"-", "1.`"}], 
         RowBox[{"-", "0.27371506372713544`"}]},
        {"3", "0", 
         RowBox[{"-", "0.75`"}], 
         RowBox[{"-", "0.2052862977953516`"}]},
        {"3", "0", 
         RowBox[{"-", "0.5`"}], 
         RowBox[{"-", "0.13685753186356772`"}]},
        {"3", "0", 
         RowBox[{"-", "0.25`"}], 
         RowBox[{"-", "0.06842876593178386`"}]},
        {"3", "0", "0.`", "0.`"},
        {"3", "0", "0.25`", "0.06842876593178386`"},
        {"3", "0", "0.5`", "0.13685753186356772`"},
        {"3", "0", "0.75`", "0.2052862977953516`"},
        {"3", "0", "1.`", "0.27371506372713544`"},
        {"3", "0", "1.25`", "0.3421438296589194`"},
        {"3", "0", "1.5`", "0.4105725955907032`"},
        {"3", "0", "1.75`", "0.479001361522487`"},
        {"3", "0", "2.`", "0.5474301274542709`"},
        {"3", "0", "2.25`", "0.6158588933860548`"},
        {"3", "0", "2.5`", "0.6842876593178387`"},
        {"3", "0", "2.75`", "0.7527164252496225`"},
        {"3", "0", "3.`", "0.8211451911814064`"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{
            Offset[0.2]}}, "RowsIndexed" -> {}}], GridBox[{
        {"3", "1", 
         RowBox[{"-", "3.`"}], 
         RowBox[{"-", "0.682730642335238`"}]},
        {"3", "1", 
         RowBox[{"-", "2.75`"}], 
         RowBox[{"-", "0.614301876403454`"}]},
        {"3", "1", 
         RowBox[{"-", "2.5`"}], 
         RowBox[{"-", "0.5458731104716703`"}]},
        {"3", "1", 
         RowBox[{"-", "2.25`"}], 
         RowBox[{"-", "0.4774443445398863`"}]},
        {"3", "1", 
         RowBox[{"-", "2.`"}], 
         RowBox[{"-", "0.4090155786081024`"}]},
        {"3", "1", 
         RowBox[{"-", "1.75`"}], 
         RowBox[{"-", "0.3405868126763185`"}]},
        {"3", "1", 
         RowBox[{"-", "1.5`"}], 
         RowBox[{"-", "0.2721580467445347`"}]},
        {"3", "1", 
         RowBox[{"-", "1.25`"}], 
         RowBox[{"-", "0.20372928081275088`"}]},
        {"3", "1", 
         RowBox[{"-", "1.`"}], 
         RowBox[{"-", "0.13530051488096695`"}]},
        {"3", "1", 
         RowBox[{"-", "0.75`"}], 
         RowBox[{"-", "0.0668717489491831`"}]},
        {"3", "1", 
         RowBox[{"-", "0.5`"}], "0.001557016982600773`"},
        {"3", "1", 
         RowBox[{"-", "0.25`"}], "0.06998578291438463`"},
        {"3", "1", "0.`", "0.1384145488461685`"},
        {"3", "1", "0.25`", "0.20684331477795237`"},
        {"3", "1", "0.5`", "0.2752720807097362`"},
        {"3", "1", "0.75`", "0.3437008466415201`"},
        {"3", "1", "1.`", "0.41212961257330394`"},
        {"3", "1", "1.25`", "0.48055837850508787`"},
        {"3", "1", "1.5`", "0.5489871444368717`"},
        {"3", "1", "1.75`", "0.6174159103686555`"},
        {"3", "1", "2.`", "0.6858446763004393`"},
        {"3", "1", "2.25`", "0.7542734422322233`"},
        {"3", "1", "2.5`", "0.8227022081640072`"},
        {"3", "1", "2.75`", "0.8911309740957909`"},
        {"3", "1", "3.`", "0.9595597400275748`"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{
            Offset[0.2]}}, "RowsIndexed" -> {}}]},
     {
      TagBox[
       StyleBox["\<\"\[Null]\"\>",
        ShowStringCharacters->False],
       StyleForm[#, ShowStringCharacters -> False]& ], GridBox[{
        {"4", 
         RowBox[{"-", "1"}], 
         RowBox[{"-", "3.`"}], 
         RowBox[{"-", "0.6998331463764786`"}]},
        {"4", 
         RowBox[{"-", "1"}], 
         RowBox[{"-", "2.75`"}], 
         RowBox[{"-", "0.6483861545470475`"}]},
        {"4", 
         RowBox[{"-", "1"}], 
         RowBox[{"-", "2.5`"}], 
         RowBox[{"-", "0.5969391627176165`"}]},
        {"4", 
         RowBox[{"-", "1"}], 
         RowBox[{"-", "2.25`"}], 
         RowBox[{"-", "0.5454921708881854`"}]},
        {"4", 
         RowBox[{"-", "1"}], 
         RowBox[{"-", "2.`"}], 
         RowBox[{"-", "0.49404517905875434`"}]},
        {"4", 
         RowBox[{"-", "1"}], 
         RowBox[{"-", "1.75`"}], 
         RowBox[{"-", "0.4425981872293232`"}]},
        {"4", 
         RowBox[{"-", "1"}], 
         RowBox[{"-", "1.5`"}], 
         RowBox[{"-", "0.3911511953998922`"}]},
        {"4", 
         RowBox[{"-", "1"}], 
         RowBox[{"-", "1.25`"}], 
         RowBox[{"-", "0.33970420357046116`"}]},
        {"4", 
         RowBox[{"-", "1"}], 
         RowBox[{"-", "1.`"}], 
         RowBox[{"-", "0.28825721174103003`"}]},
        {"4", 
         RowBox[{"-", "1"}], 
         RowBox[{"-", "0.75`"}], 
         RowBox[{"-", "0.236810219911599`"}]},
        {"4", 
         RowBox[{"-", "1"}], 
         RowBox[{"-", "0.5`"}], 
         RowBox[{"-", "0.18536322808216793`"}]},
        {"4", 
         RowBox[{"-", "1"}], 
         RowBox[{"-", "0.25`"}], 
         RowBox[{"-", "0.13391623625273685`"}]},
        {"4", 
         RowBox[{"-", "1"}], "0.`", 
         RowBox[{"-", "0.0824692444233058`"}]},
        {"4", 
         RowBox[{"-", "1"}], "0.25`", 
         RowBox[{"-", "0.03102225259387474`"}]},
        {"4", 
         RowBox[{"-", "1"}], "0.5`", "0.020424739235556322`"},
        {"4", 
         RowBox[{"-", "1"}], "0.75`", "0.0718717310649874`"},
        {"4", 
         RowBox[{"-", "1"}], "1.`", "0.12331872289441845`"},
        {"4", 
         RowBox[{"-", "1"}], "1.25`", "0.17476571472384952`"},
        {"4", 
         RowBox[{"-", "1"}], "1.5`", "0.2262127065532806`"},
        {"4", 
         RowBox[{"-", "1"}], "1.75`", "0.27765969838271165`"},
        {"4", 
         RowBox[{"-", "1"}], "2.`", "0.32910669021214267`"},
        {"4", 
         RowBox[{"-", "1"}], "2.25`", "0.3805536820415738`"},
        {"4", 
         RowBox[{"-", "1"}], "2.5`", "0.4320006738710048`"},
        {"4", 
         RowBox[{"-", "1"}], "2.75`", "0.48344766570043585`"},
        {"4", 
         RowBox[{"-", "1"}], "3.`", "0.534894657529867`"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{
            Offset[0.2]}}, "RowsIndexed" -> {}}], GridBox[{
        {"4", "0", 
         RowBox[{"-", "3.`"}], 
         RowBox[{"-", "0.6173639019531728`"}]},
        {"4", "0", 
         RowBox[{"-", "2.75`"}], 
         RowBox[{"-", "0.5659169101237417`"}]},
        {"4", "0", 
         RowBox[{"-", "2.5`"}], 
         RowBox[{"-", "0.5144699182943107`"}]},
        {"4", "0", 
         RowBox[{"-", "2.25`"}], 
         RowBox[{"-", "0.4630229264648796`"}]},
        {"4", "0", 
         RowBox[{"-", "2.`"}], 
         RowBox[{"-", "0.4115759346354485`"}]},
        {"4", "0", 
         RowBox[{"-", "1.75`"}], 
         RowBox[{"-", "0.3601289428060174`"}]},
        {"4", "0", 
         RowBox[{"-", "1.5`"}], 
         RowBox[{"-", "0.3086819509765864`"}]},
        {"4", "0", 
         RowBox[{"-", "1.25`"}], 
         RowBox[{"-", "0.25723495914715533`"}]},
        {"4", "0", 
         RowBox[{"-", "1.`"}], 
         RowBox[{"-", "0.20578796731772425`"}]},
        {"4", "0", 
         RowBox[{"-", "0.75`"}], 
         RowBox[{"-", "0.1543409754882932`"}]},
        {"4", "0", 
         RowBox[{"-", "0.5`"}], 
         RowBox[{"-", "0.10289398365886213`"}]},
        {"4", "0", 
         RowBox[{"-", "0.25`"}], 
         RowBox[{"-", "0.05144699182943106`"}]},
        {"4", "0", "0.`", "0.`"},
        {"4", "0", "0.25`", "0.05144699182943106`"},
        {"4", "0", "0.5`", "0.10289398365886213`"},
        {"4", "0", "0.75`", "0.1543409754882932`"},
        {"4", "0", "1.`", "0.20578796731772425`"},
        {"4", "0", "1.25`", "0.25723495914715533`"},
        {"4", "0", "1.5`", "0.3086819509765864`"},
        {"4", "0", "1.75`", "0.3601289428060174`"},
        {"4", "0", "2.`", "0.4115759346354485`"},
        {"4", "0", "2.25`", "0.4630229264648796`"},
        {"4", "0", "2.5`", "0.5144699182943107`"},
        {"4", "0", "2.75`", "0.5659169101237417`"},
        {"4", "0", "3.`", "0.6173639019531728`"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{
            Offset[0.2]}}, "RowsIndexed" -> {}}], GridBox[{
        {"4", "1", 
         RowBox[{"-", "3.`"}], 
         RowBox[{"-", "0.534894657529867`"}]},
        {"4", "1", 
         RowBox[{"-", "2.75`"}], 
         RowBox[{"-", "0.48344766570043585`"}]},
        {"4", "1", 
         RowBox[{"-", "2.5`"}], 
         RowBox[{"-", "0.4320006738710048`"}]},
        {"4", "1", 
         RowBox[{"-", "2.25`"}], 
         RowBox[{"-", "0.3805536820415738`"}]},
        {"4", "1", 
         RowBox[{"-", "2.`"}], 
         RowBox[{"-", "0.32910669021214267`"}]},
        {"4", "1", 
         RowBox[{"-", "1.75`"}], 
         RowBox[{"-", "0.27765969838271165`"}]},
        {"4", "1", 
         RowBox[{"-", "1.5`"}], 
         RowBox[{"-", "0.2262127065532806`"}]},
        {"4", "1", 
         RowBox[{"-", "1.25`"}], 
         RowBox[{"-", "0.17476571472384952`"}]},
        {"4", "1", 
         RowBox[{"-", "1.`"}], 
         RowBox[{"-", "0.12331872289441845`"}]},
        {"4", "1", 
         RowBox[{"-", "0.75`"}], 
         RowBox[{"-", "0.0718717310649874`"}]},
        {"4", "1", 
         RowBox[{"-", "0.5`"}], 
         RowBox[{"-", "0.020424739235556322`"}]},
        {"4", "1", 
         RowBox[{"-", "0.25`"}], "0.03102225259387474`"},
        {"4", "1", "0.`", "0.0824692444233058`"},
        {"4", "1", "0.25`", "0.13391623625273685`"},
        {"4", "1", "0.5`", "0.18536322808216793`"},
        {"4", "1", "0.75`", "0.236810219911599`"},
        {"4", "1", "1.`", "0.28825721174103003`"},
        {"4", "1", "1.25`", "0.33970420357046116`"},
        {"4", "1", "1.5`", "0.3911511953998922`"},
        {"4", "1", "1.75`", "0.4425981872293232`"},
        {"4", "1", "2.`", "0.49404517905875434`"},
        {"4", "1", "2.25`", "0.5454921708881854`"},
        {"4", "1", "2.5`", "0.5969391627176165`"},
        {"4", "1", "2.75`", "0.6483861545470475`"},
        {"4", "1", "3.`", "0.6998331463764786`"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{
            Offset[0.2]}}, "RowsIndexed" -> {}}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, TableHeadings -> {{}, {"c1=-1", "c1=0 ", "c1=1"}}]]]], "Output",\

 CellChangeTimes->{
  3.673184297563876*^9, {3.673184334977078*^9, 3.673184349897184*^9}, 
   3.673184541344509*^9, {3.673184630419546*^9, 3.673184655130934*^9}, 
   3.673184816010387*^9, 3.673184941316832*^9, 3.673185048265703*^9, 
   3.673185203595189*^9, 3.673185271448992*^9, 3.6731853497972507`*^9, 
   3.673185430959841*^9, 3.673185488107313*^9, 3.673185605496969*^9, 
   3.6731871383097486`*^9, 3.673187864036538*^9, {3.6731883618487062`*^9, 
   3.67318838363562*^9}, {3.6731896565801067`*^9, 3.6731896644231987`*^9}, 
   3.673189960245212*^9, 3.673190038973802*^9}]
}, Open  ]],

Cell[TextData[{
 "According to above table, the general sol\[CloseCurlyQuote]n is a specific \
sol\[CloseCurlyQuote]n only when ",
 Cell[BoxData[
  FormBox[
   RowBox[{"c1", "=", "0"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". There are a number of instances shown for various values of c2. The plot \
below shows these functions, each of which is a particular sol\
\[CloseCurlyQuote]n (when x =1)."
}], "Text",
 CellChangeTimes->{{3.673172511441366*^9, 3.6731725246310263`*^9}, {
  3.673185847944409*^9, 3.673185933292943*^9}, {3.673188462587302*^9, 
  3.673188490738063*^9}, {3.6731901161668777`*^9, 3.6731902134034758`*^9}, {
  3.673190316263709*^9, 3.673190326663363*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"plot3", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"lint", "[", 
         RowBox[{"x", ",", "c1", ",", "c2"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"c1", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"c2", ",", 
          RowBox[{"-", "3"}], ",", "3", ",", ".25"}], "}"}]}], "]"}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "2"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", "2"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Thickness", "[", "0.003", "]"}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6731892529083567`*^9, 3.673189380835517*^9}, {
   3.673189429953251*^9, 3.673189435000148*^9}, {3.673189495159895*^9, 
   3.673189502565959*^9}, {3.673189581092717*^9, 3.673189589954485*^9}, {
   3.673189700216416*^9, 3.6731897377170563`*^9}, {3.673189783469179*^9, 
   3.673189823937908*^9}, 3.673189861552705*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.003], Opacity[1.], 
    LineBox[CompressedData["
1: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
bDJ+b1cXCXdXuJ+MFFknJqy/m4RU9xrnaJEV5xj59JGg0az9KEbkuTncgX4S
zkST+WexaQKNV/sGSKjwDJsfh02fqE74OUjC2KIOmXiRf1hu3/+LhCarfen/
86d2mT+/SZB0PlD4Pzfu+RQ4QsK8sNUm/3M1JfPvKAlVjeM+ovGI4qjdh8ZI
iF4vkIrFZmTOVhkbx+tLyrc8I3JS5lAInYRje2TFT4scqV4+wSChTzff5ZTI
B6uOhLFImL31ovZJkb0s9BlsEqzfLE0Lw2bafZw8wSNBoSY9NgR70tT7OYtP
wsFhE/KgyLqjZ08JSTgt5SERILJS5FbuDD7ol67O2yvyPAnJGAk+zFSaqt8l
8nR6K382H9aUSYS6YrNoK67GzuFDrUdOhT32VKeZQoIsH9rvenWYYYuF9rFN
FvAhee8acQNsaakTvcRCPlSl33ukja1iUZHhr8AHucPi8YuxtfqtwxWU+HBS
7GKhNPaGk79cOlX4ME7KbBbierWuWCa7RYMPASh0bATb2bqGytHkA3QxBaJ6
9/q5o7VKG8//Z9uVj9ghSy4mq+rxYdXWds0q7MwE1kwxUz40y6zefhz7lnL6
r6fmfFB0j3Dyw77zbE3DMcDjkdWfnbHrJwLO/rDig7WVjb+O6Hx6d7Ff7eCD
wYO3l77h8z3BCu2NdONDwZbL199ic67OqV3nwYe2t23aj7DnvrMMv+XNh2/6
cj2J2AYGD6lnA/nA8PPapYlt3m7fahTMh270LWEets2hkbvjh/mwfqmvwSS+
j7wLlA/uDeNDhWSxRgN2gkzqL/MYPujcaXJxw+76HdxLXuXDRF7fQj98/w3E
StQ+zuDDCzvNGsAeUSjMOJLNB1aA+6AKNm9Hn8u3fD7MXR/f+Q3ft2r11q11
ZXyg2AaauWCHZao3RNfzwRJZ+67E97db1v5D4ogPHGVW4PRtnK+yi+SvNPKh
5GHDnH5sXo56YOFb/HxGvvYV7KR8del3n/B8poc+0XH/yCtSd180jH8vt48o
xf2luUp99ME8ASQTXnLvcf8qe7Q/fZOcAM6eouhex75UXWTaJC8A02edY0HY
zjXqV3qWCiB2Ufxucez+p+ob+GoCmGYdYRjjfjjxSv2M3UYB/HPJsb+ai/Nd
m7rcn30C+Fl5Q1aYhfMAq5vp5y8AvirVsRnbS/li3/cAAXzckGtyCTsvdOxW
X7AAAvM7VOSxVWRr1raGC+C/ZKGyKu7XmjusHaovCMCCVaywFvdzo86DF+If
CGAo1c1tLs4HO3sq+UrTAmANxPb9w/kltjyE1yE2DXW6YvFZ2Hei13ASxKfh
zfefPZbYfOVK5qjUNGi+yE3JPo/XH3SPUrNwGm6d+qxskYD3k333i6P2NHg2
Oi+PjSNQ0fLymjPu02AtpzvQhPMTw/d2yEDFNGi3upYexvkM+T1MknUUwtEX
Lv7ndxKoriPEYdBZCI/X5YxKYj+x0FnwwFUIGy3n6KXi/FipVHrDaZcQkn5o
8TJc8fq/5D1O3S8ErteetEKcNyNcLvySjhbCd5cjvfcdcH623LtZskwItFBr
lbxteD8eLhfvuyME9XmBQ0uw1VW+tJTdEwJbfcuRjK047/Dd3G0eCWH35/7W
y1sINPuZ7ZGkeiF8SjRqi8Z5+JeeYa74ZyFcJ86z7M1wvd4i9n3uEUJzwTaF
ZlMCfZn3UKP4ixC23/eT2IzdPqZdtXVQCGqVu9avM8HnsXzFu3P/hJCyoZYy
z5hAz5Z8T3WlCkExccApaSOBHifluanRhJBnfieaj/N5RcDiwYZJIdRda9el
GBKotKur+CpbCP+1Rlf7YRduuXrIjyeEb7cPz+zD+f5GlZOevgDvj+Z7RSfs
nBUyLKFQCI5uL6eb8P+B/wN917gX
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], Thickness[0.003], Opacity[1.], 
    LineBox[CompressedData["
1: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
2qqjCfR/MoKhJQ==
     "]]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], Thickness[0.003], Opacity[1.], 
    LineBox[CompressedData["
1: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
BLg+3uBKQdduocqk6Fl4yBgx3nGXgpSoWyhL2mfh12urC+IcChIWaHn8tnMW
UhV+ux/hoSK6or9bcPcstMjommXwUVGtc1n3WN8sNCZdZosJUpFT285PLWOz
wNsTYzGwjopuvoFHDxZmQbrpwmGqBhUx422ddVVZsNyU/vynCxX1PpqRpKuz
YGrU0vTdSSqqr7vdWaLBgmN88atzPcjn8U5LWW0W+Fzis3U9Q0XK55z0lhuy
4L7go4x3IVR03MF9fedhFowyQ6YZiVTUoBjc5h/FgngDvV3ulVR0taD6CHGV
Bb7XBSOb3lDRPlWegfg4Fuz1qb6mVkNFdRo3qNk3yPHLDMcotVT0fncu//c7
LFCNdJiz/kJFlTbfd6oUsaBoQvPOs14qKorYdH+wjQW1YZ0SzVwq8ub6yPl1
suD1noM6E0swpBxdWjDXxYJ/qxWMhPkx9CRer3xVHwtMVk4q7hPAUH6q7Xf9
URZM3IvRuiOKoazCS9wMnAXCL45l9chi6FZHp7ud4hz8Ig6qDgOGEi8nKbYq
zcGKqpXd1XsxdF3Z5N9BlTk4budVcssIQ7ER5Z5WW+eAh370+w4zDIUr3vbe
v2sO/mQLrPK0xpBXkM05A8s52Nf4JDbwOIZA/GuYatAcxDtovtO9gKE976P1
nobMwZvYt4e7LmJo9+ndxObQOUjUn90ZGIYh7ZqnlzZdnoOInOSux5cwpHYq
IVI2YQ7WL7Q+m72KIYlyk7h1WXNgBXrJZskYmjxUm8LbQN6PfCX5rABDswWx
vpWNc5Df/URD6ymGFvADZr6f5+DGwl+PN0UYEn7USXQ2z0H/M5Fd75+R68eg
eD3tmQM3w3dpL19hyDVtrYHN5BzUWWbpGiIM/ejwoTyQmof3liuOLu3EUJey
5ke7DfOQcfsssvuJof4I5sPlsvPAeaV9JrsLQ5hi5OHzm+Zh0PfoXc1fGBII
vlNrrDkPTuxeV8MBDO1dW5tONZkH1/HcZyLjGCo7vNZI9/w8pBL05344hlJX
XRlDgfMgoRGgE0hgKODzWJJpyDxYUVYdv8DB0Db9mu5D4fMQY05EhHMxVKro
fvZs7DzM76/RCuSjoef00oz8jHlwbLfaISdEQ0UpllMr6+ehP89I5JIkDV23
eH0nrWEebJ2lnjlK0ZDPUlm9/z7NQ5BL6ZJt/9GQSig9VvnbPNz9uKVlQJqG
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
     "]]}, 
   {RGBColor[0.922526, 0.385626, 0.209179], Thickness[0.003], Opacity[1.], 
    LineBox[CompressedData["
1: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
s2Tef7JVhMHn8+EKsTlEnvT/ARQ8+SE=
     "]]}, 
   {RGBColor[0.528488, 0.470624, 0.701351], Thickness[0.003], Opacity[1.], 
    LineBox[CompressedData["
1:eJwl13k4lc37AHAtb4ryhmSXpFKptChb7kpIIWsJZZd9l1CSsqSUNVmSkpQQ
RYtXhlaUNWsh63lkPbazPYfzm/P9nX/O9bmu55l5Zuaeue/ZaO9t4rSUh4fH
ZgkPD/c/0Euj6KEVATz//zvct5jU6nKVgEZJY+P2ZRxYPd50K+gGAQvFy2W0
BhZBpWuNVtRNAu5efuz3o2oR4l9Hl+QkEVAe+vjo/rBFOOwSeqc3j4ATU+u8
zFkL8KjZ/rhZEwFJH7X6vtDZYP9kTwVsHIHRViuB3BUkDOs15qz/NAK/M6ZW
jXvRQf7W1rsJNSMgMfmT6mpMB8cfV0NWN4zAu1knqaX76TBgqGS8tGsE8jVr
2sKZNOg1TVicmByBZ8tEKaWRNOg8Z3r2i8RfOH0fYvsez0Odb4dAgN9fcLx+
81Hy1CwUp/0Jbt44Ckt4vg4eq6eCxzapX3u3jsJ7w85xnjdUUHhvoZasOAru
smZPm7Ko8LCzmXX64ChklxT25vtQ4Y7o59Bu/VG4v+XB6eMiVPBMeXaFCBqF
5oQzHrs+T8L2BN9rC/WjMPT49IyA8Djkxiy7uS1kDAIvPtcQECNAaCgmbNfV
MUhl2ju3zlEgHAQC9t0Yg+NH47LKmilgSROzOXRnDIqIzu6aWxT413GXsvHj
Mbh0d2al0hIKBMPZ/kt1Y2BrcUFhgjoEBrQi1RqJcZA+WO0RPTgA8w6Wo87/
jcMkr7KPycZeuChMCndWjcOqi5qWigM9QPuYcUjv6zjwX80sVs3B3tgTv6N5
HAIffB+Z2NwDjD82B6mUcWjd2BT2dmc3sKycbgQLTYDjmlsP8nR+AY+Zj8xt
1wngee8oVJPZDvzHokxKRCfB631aHetRI2ggb8GvUpPw3ux0ftqRRvBSO9v0
a+MkVDBnLcP7G6BFSdFwueIkfNW8rC0v1wDp0i16Zw5Pgm7khVH09Aco0KWP
LLhMglHrzZB1H2rhWH7Zbr3ySTjQt6KiUOozXF47vLrfegqU3Ffnqam8hu2/
Xh3utpsC/UGv7bszXkFXTnhAh/MUrFCyyE9eLIEDB6W6632mwN5DUqvkazFQ
z5m+KL8xBcJm1dWG7wrA4UW1XnLBFCyr5hUPPpgDJ3SyonTZUzD5kPcB2WQJ
qyt38HQYUOE3gxIY+aUYTejLlsYaUcHIcoY1bVqCGn6vc9E0pUJ37Kcsan8J
ustcaMy1oELI+7a8XPYrJKTc9DDAgQpmbHNfhmIZEisIAKFgKugE89vFBb9H
8ukfwgyeUOGm+6Ss40AVOnTx1MInFhUKKsE/Mb0G0dxGQvUWqPAswGaNS3MN
Kra5xmrgUEFfa/zq+pW1SE7vNb1r+TQUZ6fbLQbUopVSojNTAtMgTEioLujX
odbqXorkpmk4EZnCaJz/jjzWeDX5n5wG9VyD8dgdjSjzye2cTZnTsOdQ8sVb
91qQjdY+jT9Z01AaFcV74WULkhvoak1/NA3reHO8dte0oGcbtq4QypuGxmQq
K4rZgkrTq114Xk3DC7P1+SZWP9GPeNrOnm/T8Ox+4TZXyVa0cNn23b3ZabjL
725Ai2tD58331686OQMnc4fCoqAT2UoaZL8zmIHWAL3AXNNOZNfv5H/BaAYk
pA7uKrvQiRw9U8W/mM+A5GYekby7ncg1kuUUbjsDckEh0229nSigrGqRFjgD
ImmV2a4hXShWxEBpKHsGlr25+b306S9U1uaUVEmbgX1nVWSk27tR/JJNe4A5
A0nRhbKPh7uR286+BkTOQMvu3ZJS891IJtKSr5pnFm5sVV8/JdyDovafuvaJ
bxaWz3nOCRr3oNNJKt41MrOQ3xNXaVzbg+hG/CdbdGah1U7q51hJL1L9UbyU
cm8WzneSwZF7+5DU49DyzLRZsFHvrb2j2od4Lun4mWbOwimPY1mJh/tQzabu
/qpHs2B62WHopmEfOh3KW51RMAsNTYWmB936kN/281eNP87C3hIVuYTsPlQQ
w8+umJgFl+AItuWqfiSr7TyfdGwOXJ1o04I/+lF3eFuQlO4cGN9V1Qtq7kf3
K46xnujNwVS34qPO9n4kuH8Tp8xwDrIYz8/d7e9HSzf1rey0mIMnJw+Z1NP6
0TCPpZSU5xzoZER6xskOoPwKA60nKXOg8eCbgpLvAFLer5xQSpmDY3XWpdG8
g0gpdb2h0t85kHQ7eGyUfxBtZ9H5Csbm4GHWSLze2kEkW1V+I4c6B7xCIq6L
YoOIT//wpUTWHGy22WN4ZPsg6nM4aeMjMA9zr7Nf79QfRLFJdjsVD8yDX+HS
waK4QfRnJq42J3IemgKG5Cp5h9AQ53K2ecw8UGZGdIr4h9DIao8g3lvzoOAj
uynj3yFE3XJis3v8PIgW8q9xFx1CPFYrru3NmAfj5UVDg1uGkNynMJXq4nn4
avj4trr2EHJO8s7r/T0Pep733yZcHULj+4wjxffSwH6yUFl/bAjVPh3a8mA/
Db4f0fQ8NjmEnopfqpE9SIMdH6fU1KaHkC0ni19BgwaCzHdZMvQh9LNuPOGA
Dg3EDSpL6pYOo3K7mCxTSxp0zIkbl4gPo5t30du4CBqExUc++Kg9jLaM7Rxd
8pMGuolPErVSh9HqlY25/7XRoDti4FRf2jCalfexC+ykge+w7cOQzGFUdf5V
50gPDdx975N5j4aRZcuBb40jNKjvW9Y+/GIY3XkPTx4s0uDKiqSgKTSM5qON
z6tup4N71kcLbcow6n4yIz6rSIfb733cU0eG0cfqpLaC3XQ4nvnPUWIUv0+2
6csq0yE6tfFw+NQwUvC2VOc9TAfdNqmiVMYwsj7tINZmTod3nxlx5/go6LN8
YIvPNTqoOO22PaVIQdfzyi3Y1+lQ4bWSR20XBR3dzvMnOooO9RtTWuWUKKh6
962xrFt0OPtxn+zUPgqqVHu0vD6FDub7tG391CnorVH9gW35dIixsAySP0FB
+Zc3Z/S30MEpJShY05mCXDluGz3b6HB+ofPL9AUKUogozmN00OHv7xGXHFcK
ehqtXvpvDx0OPNn8doknBeUkGtcfIugwLewWn+9PQZnPrnDSSDrOUy/XF4VT
0N3WNgcTeQbo1q02v55GQbfD4uSbtzAgm8nXR6ZTUKyC9vCpbQzQe2ZC9cuk
oMjLpc4GuxiQPq/7xPohBYXKJ7keV2EA5aSnn0wuBV0IMPLW1GdAQ/OYm3Ux
BcG67yHbAxjwj1Bc3bcvFKRRGaH+/CIDmG7sfKFvFKTmosbeGswAjT2MHdY1
FKRc8fzK5jAGsMV/CY3VUdAOx5hw2RgG9DkK3GI0UpBoqXbU+kwG+HBqulq6
KGjKtCph6WcGCPPQQmLHKYiWF+nx9isDCB2Ts58mKGiRPKHrUcsA7/t/37Im
KWj1kzZ2WwMDhs7kMh2n8fzNjV543sUAA549+VtpFGSbLKJpNMWA/XxXkp05
FNTU6jb6QIIJqT6865rXEqhDQemLiTQThC9a/PgtSKDey/MPeWWZUGedIDcs
RKBx+XBz381MMIjVLZhdR6CVgSlVx5SYIJJyxYBHnEBHRKrujWkzgTJBxHbK
EuiVuYiWqi8TBOqsZ2J3Eyjx36sjyJ8JvRZWitZKBPKrHYnTucgEPvOneop7
CLTnUEWnaSgTXFtrlWr3EqhY3sHLK5IJrJ+1n+aVCVQ0W5yWk8aEP4G+dyU0
CJSfoE9d85EJJyIyNVN1CRR78k1K8mcmgJiIvM5xArn9I6su+Y0JtOGzS+aw
twXPRir8YELBwcpc/RMEemabLqnVzgT1zaJ50/oEerp7ROfSKBMC6xaE+U0I
lFN//cGAEAtGr675dNWKQLf3kNYPRVhgY175TsKaQBdT/KSsxViQ5B9zpxT7
+Dm7jDZpFrAdT/UMnSPQ5LhmWo0CCzIjeyRVbAmkspqVXKTJghfSkh+eOxJo
o4+vmfsRFqy6EMC3z4lAfK0jwgrHWJA6c1LrP+yejI7ER3osMOnTDKlxJlDE
jrL4ZDMW/COXvrbdhUD1J3xuh7ixgCPdc6nSg0BvioiTBz1Z0Pj+v6YDngTK
FrLhn/NmAaV+5YYibL9fBrGegSx4M5f+KM2LQGJuO2Jsw1lQIgDGjj4Esr9J
ua5zjwUfxKUma/wJRP9mHSr0kQXdG148+RlMIBlTncCPn1mw0yDFf3sIgXR6
d3v7fWOBaYfl6XDse3NLHVp+sEA2tP7stlAC7d/4/ERiBwvyCxNdfC7j/kPm
xYUm8Hgsgrb8DCNQ+j9/hD9OsWDx+tlLklcJVB1fs8ZvhgXaT44S9thr8zKW
tNDx/K5zkZnCfvnzyN+EpSTYKGUvWQjH8ah4552gGAnGfjmiUxEEWvcu6FW1
BAnln2Iub7tOIHUtuwJfaRKsmrV5HbBjz+7PbpYj4b2ud/xP7G1Rv6ITdpLw
z6fI8PwbBDIS/HztiBIJiSF7NvViX8osDJ3eS8KTYPbU2kgC1bwK9zZWIaHi
/Rq+AGznP1vOCGqR4FrYaagURaA7bmuNq7VJ2GCvYXwOu2yeecL3OAmHcqav
3cRevrpes9mAhOAyB58/2Dkq/lsSLEg47tx591o0geo+WcsesSJBTviQ8DPs
GUMdielzJPxXuba2Hvuok7iAsQMJXmVrGtbHEKgvAc2v9SLB7HfMyYdcRxiU
J/qQ8O3GLsMP2P3+v8PW+ZOQ7ef16Bf2gDmdV+wSCRmFVurCNwk0KL5bYkME
CQcu7T9+GXuI70Nv9g0STn+m/UrmmjyRIxdNwg772OoCrnucFbfcJmG2sOLW
L2zKoyzNnfdIsDxvv2FXLHai4rKX90kQKP5idYTr6+XflDJIMEqQmzLFJpza
jfZnkyD1w0IqCHvktKPIm8ckVAUz30RzrTvTdTCXhEs2cvmpXG8TcFDPJ6Ft
SVpGGdcSmVs/FJCQqlOQ/gn7L//2cc2XJIz9bJltwh6d0A48WorH4zRQ9pfr
3p+qn9+Q0LLt7oZ5rhvtFrXfk3DrXfsQB3us5Eq0XiUJN47/d134Fo6nx/z6
36tIcNGVOC/FdVLaWoNPJLD576fIc31ja1vDFxIOr0rZrsh1YFmaUQ0JkSG+
0vu4dtY631KH48chzksVe+JMs5xZPQlf4o/LAPbkcRuirRF/X+rSnce4Vp14
caaFhP5WiYzjXG8P9elqxevtQ3XR51pylbJVBwm/LQfuneJ6dSqzu4uEXP1T
m02wpxbkK893kzBYk7LODJs6+Sqir5eEIcl1TuZc/zmsa99PQqGVguhprpsa
+IcGSeBzUdrxP1dbNzlRcH+jNx/97/lXo8nECAkpZxJDuO1N51w66zpGwqPx
p2+4/c0kr5AZmyBB45X8aSOuI5MHPKh4PkJdzhpwfVEub3IGx/9wQ5Ue1xeK
3X3mSVhlUXpbm2sLTaUZOgkreAM/HMae1fsx58/C8U71MFXHnlOzfD/PJuFm
N91QmesdI1eCOCQ8tvUt3sW11MWjzCVsgO79l7ZyvWY5b+hyNhSFPHi6gevF
hO/sFWwY3rtCQxR7fmpDfNgqNmR+q1URwKY1q4tHCLBBKO67KwuvP49nB11V
kA38LcNFk9h8K/3bp4XZkCKqdnQAW0YzP8lOnA3VA2fNv2ErdGn7iUuxgWq+
qv0d9t6AfqNmGTa+b5U/fY6tnS8mcESeDV3PCdWb2IbapeOMLWwwE9Ne4Ma7
Rd+p78XbcPttF4ScsT3WR8fI7mZDdOGHfYexkyPml/KoscGyvPf8ON5fWdIJ
/W812CDvk1nRhv3snWKVN7CBY5jmXYldMelw5c8xNvBareyI4+5PyxZ65Sk2
TCW+fiuPPTnv2X7RhA1Xzzh+X4nNiF9VtsucDYKrPhwcx+fB6m+H/bIs2RBy
T0SqBHvfvpfjV5zYoHVNdsM+bI2GE9+VXdjgnd+4TAhbx5XyfMKNDam1Yceo
+DyyfCh94ZwPG1T4bvzOx47gv92vEcqGO8pF7mLYLYMu7WQ8G0Y21Xm34fOy
O2x52eskNpyyj9HOx6aIZye538Pr8+vLlTBs1qkOo98ZbPjvnrnoZuyNFdrf
y5/i9u26mW74PPZJlqsKrmDDEo51axc+701S7F2XITacuDId/Qxb+d5jobhq
NvxKfvH2IjYrVc4p+ysbhrwbbwtiR2bI8X1rYkPS4vX1R67h/PNYzmzdMBsi
3a+MR+P88rlYbqRozQLYpl6seoPz19MS+wSVtQtA6g3eDcS++eqx2kehBTDM
Fh3eh21YKhfXJroAJpI8ci9x/ut6K7eXvXEBFnWHJx7ifDlZKXdZ78AC3Fq/
QcA9iECi9XJrh84vQDilyeW5H64H5ltnbe0WILddTdAK20I6uqPHYQHKtX7o
r8ZO9xzL6nBZgGh5tzBPXxyPAqU7v/stgBt/fst2nK+3nNI++SoK96cTGZSA
87ty84Wo8KIFuO78yXMtrg9M2wrYUosLkLnlecAArl/C8jxYjTyLYKDGw+OH
/SxYkRGxbBGsWnZIL8FmSxfMjqxchF5DOQEZSzx+5xejpcKLoHDCu8XEAs8n
/Xmn/rZF8C8Q3vTMjECPJfJKL5stwgp31aZlBnh/2zzy6M5fhAOOH/fcwfUZ
sn0ZKaDPAYJZdW25BIHKGz1O9hpyID2pts8G14tvNLcLFhlzYDbf7m+5GIEK
pHIzDc5w4NzVAwxvUTz+zvTXt+05QPu+Wbgd15uBRlH9fMEc2Fqt6p/4L4F2
HD53iPcpB/4SJVfql+P5eCmxrOMZB7qc91yXwZaT6ax5+oIDD3cVqHovw/UO
28RMp4QDQZ+Dyv9dSqAV7467R1ZwQKQkU9AA18P9u/enLfvJgcBUS933TArq
zpo+/7ONA8vblgf9g9255qV8TicHyhJ2WBkzKKhhbFvx0V4OtKvVHRnB9XVF
3oZv1/5yQGBS547QHAW9W99z23icA/LFTResZynodWS6ycYp3D8ZS8+dwfcf
B5HeqjkO5HxyUVPB9XpuS0tOPB1/Tzl9IpxKQdlH4l1tWfj9nXcsaqfw/abY
YLfSAgdexdiFCGKnbuCf53A44CSWZ3oW1///Bx7REPc=
     "]]}, 
   {RGBColor[0.772079, 0.431554, 0.102387], Thickness[0.003], Opacity[1.], 
    LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.363898, 0.618501, 0.782349], Thickness[0.003], Opacity[1.], 
    LineBox[CompressedData["
1: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
wnQejweWdh/na/D/wP8BPONUdw==
     "]]}, 
   {RGBColor[1, 0.75, 0], Thickness[0.003], Opacity[1.], 
    LineBox[CompressedData["
1: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
xP/A/wEhOEAD
     "]]}, 
   {RGBColor[0.647624, 0.37816, 0.614037], Thickness[0.003], Opacity[1.], 
    LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.571589, 0.586483, 0.], Thickness[0.003], Opacity[1.], 
    LineBox[CompressedData["
1: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
YYWdtEGQxuVywdL283wl/h74P9pb8L4=
     "]]}, 
   {RGBColor[0.915, 0.3325, 0.2125], Thickness[0.003], Opacity[1.], 
    LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], Thickness[
    0.003], Opacity[1.], LineBox[CompressedData["
1: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
4vX//wHmCFe4
     "]]}, 
   {RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
    Thickness[0.003], Opacity[1.], LineBox[CompressedData["
1:eJxF0X0s1AEcBvDDVnmdLKefGZFsmJiXNhWppKSr3BE1yXCWUbRoXbU16Sx5
iVhFp9E5lYwTlRXudDcvKx3nLje7nNN5vzkuR4m7aqvv99mePfv8/TgnZlDp
xiQSifKnf/cofXqQP0MPJv3LVOOpRAURuu+/yebS4hYiCrwzcAunikgG7x7w
494nssD8x4KAIuI2ODen4OpdohycnKUh8ola8Kby8JqFxVbw2wHfw4cdeeDY
XPmIoEAIzmi+7PVoqQ+sLfnSa2QkAvd2dfNEe8XgVEa45Wm1BNxl6mtouDAM
rmML9fY7RsAh5I6ntEY52KtH3tbtoQBLQmjzL+bHwOlmaWKpzzj4oyymw6r4
G5gWFqtUqVTgXdUFMdWuk+AxfZnk/M0p8ES4iE0WTIO5FQrGoPMsmHPHJN/9
2hxYl3RmNuW9GmwemkdttpsH37CesFDGacAWnZ6kYcoCOOjKiXXBKppVW8je
zloEx0f795tGaMGvpfSyzmV04Ceu8eSD7+Bth1J0ZaFL4AD/gNLWSbRCW9TH
ZurAar9IJuG7DHab85o1GkILXbPFmTkr4HsSaRLV9QdYQ+OXGgvRr6JtDwZe
+glm9+dWjdusgld64q7bfECPlfJ01hd/gZcH9xC3rNbAmeUufEY72q7fxVoV
v47/ShvWHPRo7bmadHm9HsxLaGJaHTOA34nSI0aPo98Ee2xujEQ3OHBYlBh0
payypTARnX0yT2nGQHuGnA3aWId2a7I3GX6OdnGU9da9RG9do0aFNaM3tB1J
Y7ajld7+FSZDaPmTxfghKVpm2eTKlqE/z7lzD4yi25859eTMoNvIXwsj1egW
ZiXVWYOuT7Id5S+hOWIxu2QFXb2/JDVhFc3iUrx91tEPncx1BgP6N4LfSLs=

     "]]}, 
   {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], Thickness[0.003], 
    Opacity[1.], LineBox[CompressedData["
1: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
ATg=
     "]]}, 
   {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], Thickness[
    0.003], Opacity[1.], LineBox[CompressedData["
1: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
WnCCx+PBWizZ8DRV//8fF3AMWw==
     "]]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.003], Opacity[1.], 
    LineBox[CompressedData["
1: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
fvVj67/wyRSMlTcWfkqk9+PKsPcz51P4FJW7a10SidnvL2QVLqRQfs9lsQNt
ve2HM84spvDfwfOGwbSD92olkkoUyjx3ZzTTVr3x82b4KgoG1kdbfZNJWM0s
vrZVk8LAIufYNNoX41/4DK+loLdf8KacdmmW3+ldGylYmAWLzUsh4dKyfM/M
7RSk/ZX0UmiHnZDZVWhIIdqkn19CO4fFNT1jTOGUrqdiF21RyQp90oLColLT
yBWp9P7aeG55uD2Ft+bt6o9pf/98QGHrfgr7Kt2l8mmPWBotHD5IQfJOud1P
2tucF0jtcqIgaxy8cGYaidZwgiVzioJvStrFCxP2t8i950Hh/p8k3m3abed+
XZ19jgKnVpabTLvdli02/yIF7aIAt0rafxZoLFziT0F134r1i9NJdIh/ak4M
oLB1lk6KxoQp02SlmxQSv60I3zrh3y4rl4dS8PKv6Hai3fn4kf6q+xQ+f7kV
nTTheyunvHpAQdygRvT1hK/nftWMo8Dv28vMp93lXGellUhhTsw220ba3XZH
57xNomC1SO/b3wnvGGnckEoh9msMMTxhVSknvWcUHAqztKY9ob0wfsWnDArD
WpOyZWn/k1Dr039FYVC++a0c7Z5+Q89t2RS6y44ba0y4+YdO8VsKBx2e12+Y
cNXhccMPFFzFH/eCdu/rKzdN8ikc8SpPsqTdlyRhXlZAISwnwsh2whExMhaf
KQimrfXYP+GAFbWVJRSGvgwuOTxhz5wYq1IKHYvm2LlM2GX7oervFF6I98ie
pN2/h1SyqaAQ6fbW7jTtAWOHrtoqCseHCxXPTVin//meagpPl9ic95qwmo9H
Yw2FUJtsS+8JL5quvb+egnKx6mufCUtGc5saKVz2puKu0B4UKOcfaqLwzM5D
2pf20ECWf2szhd7ZVRJ+E27ZsuNIG4Uig0Ph/zOjUqLjDwUxy6OJ/3PhAYZz
J4UZHit0/uesnsiubgqZhf37J8YbTr6493gvBe81gmlXaY9ETpXv7afrC4zb
cnnCgZHtbkMUTh+QmnJpwl5K6QMjFOrV46wuTPhY5kkPFoWp226qnp+wvb7m
CJuCYcm8MA/aTJPy0XM8Cguyw6+60R7V3feBxadw7K8OdWzC6t1XLggpXJpm
K+o0YTmvbdxJfGimrog9OOEZomI+onxMlhvL2zPh8fAy/lQ+VqaJuu+izRpc
cvfqdD5ybKOfmdIeI/UW+EvxUfnUvkqPtoh7PVtnJh9BB1dOWUdbfNq5uuFZ
fGSGP3+tSlte/1nE4QV8yJyY4jeHtkqj4dkFcnycF7mZKE577fk2K1Kej35K
YrOQ3q+Gz+ZLbVXmw4lw7+2kbWmY3cdZzgeqmYKJ/W7furMsU5Wef2vF7XLa
bnNvBilo8LFsW+XyTNqR/qzJIrp8FEus2HGG9qPF4W3vNvGxyMbTwpH2k/cr
C06DHo/K+mFJO2/A6UqLAR+GBkaH1SbO575qdv5OPta9/HLrF32+B1judV7W
fCRsDXnwhTbn7vSc1bZ8VHypUH1NW/LrlrOP9vHxS1OmNoD2unWv+q448zHi
aL9nOe1NlaZl2q581BC//GfQNjre+bT/BB9r5jmsG6Xvo30Ji48d9ODjmViy
cgFtf4nQtk0+fKg9KbKypl39x7WOusvHQGz9LEf6/mu6KprzJoKPjybLs0G7
c0FixMn7fLCcbJrlafN21lv9iuNDco0f+Yu+bxXzDMty0/joMXbWs6LtEalU
4J3HxxbC0GEpfX9bRx05PoXgg7OY5Tz+mM5X95NkbxfykfKqYHojbV60knPi
F/r5iDjV27QD45TEvzLo+Yy3M4bo/hGbpGQz+y/9e5lDw6l0fynOVOp+OUOA
oGF7mW90/0p7fSR8o4wAVy70qD+gfSsrSbdIVgDd92SvC23LbKXbtfMEuDrb
b+8U2o3vlNbyFQUYZ50c2UD3w4F8pcsm6wX4ZxVtejeGzncVSjIdhwRozYiX
EkbReYBVw3Q8LABfoc+8mLb94pv1v50EKF8bo3OLdqx776N6VwGc46rkZWnL
S2WvKjsrwJ0g4WIFul8v32lolnVDAH1W8oJVdD/XJo/d8HspQHuotbUknQ92
12bw5cYFYDVdrf9H55er6W68KpFx5KqL+EXRfuK9kuM/ZRwlv1trt9DmL85g
dk8bx/KPMcH3r9P1uzzvyZ41jkcXfizW96fXk/20wVx1HHaFlguv+pJIWpie
fdlmHIYy6k1FdH4acXjs1vRsHKplu1JP0PmMcHwVKGUuxKmPVoev7yaRW+Vm
1mwpxJvV0d1itN/qq818uUuI9Vuma4TS+TFDLjXeYo8QgS0qvIhddP0NsW9C
jwjBtT8QlkjnTU+rG23i3kL8tjpZ98KMzs9bDm4WSxNi0N1QPnY7vR6vFk6p
fyKE0gzn9rm0leQbStOeC8FW2noyYhudd/jWNkavhdj7o7EsZCuJqe+NTwbm
CcEI0K7wpvNwm4ZWzJQfQjwYvs4y1aP366PhQz9qhShO2L6gWJdEw4xXyskN
Qux44Si6mXZlr2rmtmYhFDP2rFmtQ5/H9CVfr/0TInhtTs+MDSTez/0duqtP
iEUBTRaB60m8CYy1VhwUInbTE28+nc+fOc1pLhgVIvdepXqPFonU6urku2wh
7pR5ZznSTtx697gjT4hfj09MrqfzfXymhYamgF6f5d8WWdCOXiLBEgqFMLf+
NF5E/x/4P+CjgT4=
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], Thickness[0.003], Opacity[1.], 
    LineBox[CompressedData["
1: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
wgH7hjuXg0mUf7CS22NJQV58l/gT2sMGWlJDxyi8K1rwtYL2XjtJESNbCm65
8yoXh5BoiSDGFrhRMP0ZcvDhlK/oF9z1oPDl2gaD97Rbz/wMWHiGQpKXW/IP
2n/MWIJLzlOIf265Q/wGib+SylLLrlDYdn7LgQu024TeNyddo3D44/iPqClT
uqnywRQUbUJLMqf8y15p1S0KI88Lb/6g3ZGcqLH+HgWL4zbLNoTSvqs048V9
CiLZnyz3TPlqwReVeAqGEfIDJrQ77ZiGW5IoyHw3l/Gh3XX41KI3KRSKfTlv
gqesPdy4PY3C+RPyGTFTXitiuyODAmNabHzulKUSVr/PpBCjlRn3gfY/4XW9
Gi8o9NTVjlTT7u7T9N6bQ4/H7k/uvyk316l9fEOhdu2dZWNTrjo5qZlP4WYe
s41Pu+flxWCdIgrXDry7Kn6TjqcUYb1vxRQctaWOy0w5MnaB/gcKPOH70QpT
vraaUfmJwu450euUpuydG2tYRiHIz3Pp5inb7zteW07Hj22YmxrtviM18qYV
FD6FH5AF7f4DJzoZVfT3xUxfv3/Kan3PjtRSaK2Xij8w5XX+Ho319Hp7DDrq
TVl6zlZLksJPiz/3Dk15bgynqZFCmt6hlca0ByYUio43UfhbFr3QlPZg/6sr
Lc0U2qQX2plN+fdubZtWCs8t10gcnnJ1pXDbXwpCjiqK/3OJVbVdB91f943k
/z3/qjuqs4tC9JG7flPtDaWeP+rUQyG59/Gbqf6Go2bJ9vRR2PlK4bDhlIOi
/pwepOfD3/Go/pTPyaf3D9Px315ZrDNlh2wXjzEKc8xzbmlO2VxDZZhFYZag
9/vdtEd0vo+e4dLxPnjaZAftUXWL/DEehRtNLIOtU1bsuujDp5Bi7Zm9Ycoy
5/ZypvGApi3nV0953kxB/5k8ZPk9eLxsypMR33izeGjfNGunBO2xgWXhAXN4
SPjyVVWE9njNDskrIjyIhX1z4tLrL+BKstREeRCubc/qpy00+wxzSJyHaAn1
vX9oy2pkRJ6U5KHkz1GzL7TXNGp6ScrwMGg2h5lHe9PZVsMaWR593yp4/JS2
ZsYSkT0KPDQ+7VS7QdtAM6eXvYoH0yWaE1Pxbt5y6Fv2Wrp9hoOYPe3Ti4ND
5JR5CH7+fvNu2lFXxqYLqPNgUdB8vJfeX4lLI1rf7uRBwSOhkEH7SZ5SsTt4
4BvEuhfRLuy3vfh7Pw+ClrPJsKn9aVHLKjrEw8Dd128VaPePuTLPGfNw6cip
b7Nps8Pn5G4w40F0zvvtvfR5MPfLbq9ECx787i2SeUl78+YXvRfteNh3WW7Z
Zto7K3W/bXXkwT2jaoYYbS2njqd9zjzEfA3YP0ifRxYPlzoc8+BBVejazwza
V4Rvte705+H21iyXJbRr/zoyqXAeulaUuzPo87IpYGbu60geDtmEaGbQ7pBM
inS5R6/Pj08XA2hzD5GGP+N5eHfPTGIl7eWFmt8KHtPtn2ziONPnsUeUfLFv
IQ/T+Fb1jfR5bxxt4zSD4EH34lDwE9pb76WIhZXw8CPq2dtztLkx8nZJn3lo
c6+6JUo7KF5e6Es1D5GTVxfvuUznnxR504XtPAS5XOwNpvPLx2z5rqx5E7CO
OVf8hs5fj1/aRKgumACl8/eON+0br1LUS8UmYJAk0b6ZtkGOfBhDYgLG0gLy
L+j81/hWfhNv+QQmtdv7HtL5sr9I/oLOtgncXLxMxMWHhESF/IK24xMI7Kh2
fOpF1wNj9SPWJyeQxlQXtaRtvjSY/GU7gYJ93/Xm0o5z7UkkHScQrOAc4OpJ
x6NIzvpvXhNwFs6oXUfn61WHNA++uk73pxXkE0Hn9601DtcDsyZw1f6D6wK6
PjBhZPJkJieQsOrp2T90/RKQfppbJTAJfXUBAS/aT3yV2FdmTMKyVnHpNNq8
pZkjXbMn0WwgLyJrQY/f/ll3jvgk1ui61xqb0/PJetqgt3YSZzLFVzwxJZEi
lZ5zwXQSs1zUqmfo0/v7RPLppoxJbDtVuvE2XZ8R1i+CRPT46OQUX54pRaKg
6vTBZgM+4iK/tpyg68U3GutEs4z4GMk4+a9gCYlMmbQE/SN8HLu0je0uQY+/
Ie71LRs+xr+tFGfS9aa34fVWIV8+Vpeonbk7n4Ti7mO7BB/z8a/z5cWKmfR8
vJCaQT7ho9F+41VZ2vKyDWWPn/HxcEOmmvsMut7hGZtqveTD56NPwfzpJGbl
HXAJKuRj0csEUX26Hm5V3hI7o44P7xgL7XwOE02JQ8frGHzMZMz0+Y92w7wX
CqkNfORGKFoasZmo7FmbvbeZD6Z6+Z4uur4uTF/25fI/PkT6tW6LjTKRt/jX
LaNePhSyqx2sRph4HRRnvHyA7p8KZaUN0/cf20XNxaN8pH5wVFel6/W02trU
cBb9PQWsvsBBJpL2hDtZc+n31982/zpA32+y9ZVVJvh4FXLST5R2zDLhMT6f
D7sl6SZH6fr//wAE0wNv
     "]]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], Thickness[0.003], Opacity[1.], 
    LineBox[CompressedData["
1:eJwl13k4Fe3/B3BRT4VEaeFRSZKtqLSoeCtbsiQVpRJJKEq2EoUeSwuFpCwV
qZRUklKSsRVt5CAOc0jZsnNwnDPnOL/x/c0/c72uuWbuue/rns/nPUuPnLJx
ERUREXGbIiIyeS59dFIxXaodIv9/FH1TaC+s0WlHup2JxfhsIWHEPp1SEtaO
s1udLGxWCYj1qVftUpU70NYqLdaSxyWyi4MDJNQ78M3v8KzQZC6h8ccn2V+r
A9u7nnD1grmEosrBFotNHRA7tVlkhimXkMjSdOXu7IB0waYIZv048Svvu79N
YAd0XAL4+yY4xNWq2QlTGR14ek3Ff5rDGPFr4katW3AnnF4yhl2OsAnJ3h9X
z4R14m5/ybC7JZvYyJxlGHG5E43RD8uDN7KJmFeRL9NvdGJv9MMnv6TYhIFb
4LXmjE5cm/f9qF/BMJFWfWT7nh+dSNmvntUkP0wcebC6AEu7MNeFq7qibZBo
N6tKn1/ahZqLJyQzdvQRyldXXI+t6EL63xmeZcv7iKPfgs9JVnYhwys4XXRK
H/HbSnuXKLMLdlabJFrzeonm3bETff1diCtLWaK0opdoOLR7/0f5v/C4UJV1
W6KH+HK6XsrX+y/02no+B/R0EdmJLQHVS7shFpKnkCDSTnioKTSuWdEN1yNS
qqF/2gjVd/s2xWt2I1L1b1XYpzbiXkM1z3ZDN2Yu3p9QF9VGXFtQFkhadANe
Rh5J8m2E583H5zvPdGPZ+zdidzb9IdRjT4cKvnejarm/3d+rrcTDS2KX1c71
YE5tzVeZZpKY03bpwqrgHgjzqOCZOSQRAinftWE9YMZp/7MsgiTsxxYe1rvW
g+Sls2XfryKJ2UdXrdt1vwe2a7UkgkKbiADsbz37pQfnVoV6q65sJCzHnutW
yPeiPWzI1D2lnhh1tu8+9r4Xo8pLI2pqGYT/XGpuQ1Evyme6vj3wjEGMlSTr
mX3qhWuVk9TUCNpLWTEa1b1w3xb8MncDgxhvObxhsKMXyvO2vYhLqSZ4B1zC
Aub0waHLv0TV4wchssdrcZR7H7Z2CubzDL8REkYRNi8X9KNtbmrhlo+lxBbi
lMwnhX6MjviJi1wuJU5u2v+jcWk/5gc1bBy0KCUY2ppWUzX7oZfh+dS2roRI
WsQwszPoh+WrkOENXcWEKmfRVoFbP3KUE75pzi8ijDJfa5nl98P49gwN5rJ3
RJB0u2TrwQHww6uszf55TKg35hiQTgNYkiI+ytuaQTDTQ3zrjw1gxpb+Wt0L
j4j1GxTI714DCDT9fePQ+ANi8NDup/lhA4iuXai7mp1GOD8tNovPGoDxS7PD
dtNuEztM7kaY8gcwVqq87U6JNSFZqCFSbzmIuXmONR1jD9BnoZh7xXoQfwaf
B/Q/fojKJlk3/d2DiPf0/eRh/wjXuYKqh/sG0bDiq0zV+wzMWffjnq/zINwD
n0avP5uJhVm+mBMwiEQ7q3eD9S+gnPThguWDQXj8o64mkH8NPf+dglLeIOye
z5beUFyIseNdgWaCQTB25UmXTCOQfTiUVykchOKeziUKOwgomb3iMKcOgbV9
Ck+PQWCGwoLhAakhePzINlzsVYTa4uaOf5cNwcrnEJUWUAyPWSd/+JgPwTgy
u2Z9YClSHkSlL0sZQrCF7p5VW8px2HDtlpa7Q3BSdftscKAcSr+ZtUlpQ2is
MN+x+Vw5Hi9Z8c+cjCGI5We968orR25SsZtIzhB+/k3es2JNBb7FjK1klQ+h
ZmKhr6HSZwiCHN8msIfgW/nxl8/QFzjs1fk+03wY9yrvLHbbWQnHfy1T31oO
Q5yRzLjmVgmnVhcfV+thLP1TFnA/tBJHPW/Jfdw7jKOrDBpjXlXCPZznEuI4
jB5ZpufV+VXwfV00MeY3DHv0z5jKrMKVeZbabanDKJFZL9R+/AOv61xuFI4N
o2jDnzWMaQzETFm2GtxhfPD12BM+m4HjK39VEtQw/pwXxKyWY2BxuL14sQgb
r8bbPP00GYjQ2RlaKs7GxbdlG5/aMGB7Y+OpisVsXM1cuKDmDgMcawlzhgkb
yz8MOa/VqoHut2zRjgQ2zlSea1BBLRTuB+anJLKx4cveoGHTWoicNfHencKG
c2SdcZ51LSqWka1FaWy4HQg6pHmkFraB04uTs9gQNU5U/RhWC291h+BdJWyE
sD4df11Ri6xLEvyCPjZKF6S/f2leB0XjY6M3jEZQNuFzcj5+ggypO6NgOgIV
duS/dcY/cbvAiPfAbAQasmc/X7P4CRmdZcLXViP45C+7jr3/J0SX/ZrRsG8E
1+9+exTi+xPtIvYKCp4jkBPtrMh+/BOZBZaGD26OICqMuyZoVj3W6ayLze0Y
wU++T5r753po35pvpf13BPeNjOvaKuuhzuOIZ/WMwPST0uiB2nooFuWHpQ+O
4IqtvZh+Sz3ELQzOxvFGMPDmQ1r1SD1+OZsf9pIaxfCvS4q6Sxpw5YbTSs31
o/ixrzRZ/nQDWoajP6eHj2Jq3J2nz2Yy0SYMSt17aRSpWukNiVJMdEl6nJl+
dRRrorp6QucyMaiyY/mJmFEcum31w3gREyIH/gldkzwKl3AmK0WbCaXSCxuL
s0dx9veXU1dsmTh241RGc9MoUi5dWO5/j4netbvC5daMgXKXM1yi0ojPj9pU
7uiMQZ8RfalOrRGP5M5WKG4Yw5ucp58vrWyEo/CuhOqWMdhtcDXp0GlEzZfe
2PUmY3D8tdLhvGEj8p0u3d1tPwYpb8eHixwbcfk6kRd9cQz3RjqM1t5qhErP
yu4pNWNofGN5RlbQCMkZVQ/f140hblmT8z6RJrCVvZz8GsZQtVjXNFGsCUUO
OQ1drDF8ir7AkxFvgj1jfXlV1xhEmWHmLfObcO0dHtyZGINCxZm9PVpNGI3c
5aCrzsF0E/bzn4ebQD4YlmNrcjDYaWHy4UgTSopv1GVpcXBALHJOmgt9P1Vn
obiOg+PnxXY5nmiC6in7zdMNOEgWf5D4wb8JB22dF9bt5aBz1H9oJKoJZcp+
DK9QDiL1N290zmvCfxn5+/j/ceBxRTyk4l0TtqmLtERGcLD1eP5ljYImFGtd
7bl7lR4/x6Cru6gJhZvSpn6/yYF6iO241Zcm5Fl/X6+WyUFmv/bNZ2QTMoOW
J7cyOCg6V7egUtgEd+HxpZ51HLzZsnND/xQSqhezM8brOWifs8xQciqJR5Gb
c2ezODCeNaC8bQaJ9Lhd3/U6Oei/HaZzU5pEyuPzwkSKA8kXB1KYiiSu19Y5
2yiPo5G/U70NJKIuRCtXq4xj5ttZDflbSVxRNW7fqTaOgzauWdcNSYQH5R6z
XDUOEfb+72tNSQQq33DfvnEcv+7OmH3MioSrr/UpfYtxbPv0KNznIAnIfj2n
7juOSFvtD7pnSGwpvLj5if843oW/31t/lsQmt038FQHjiNIbW+9zjsS6gifn
l18YR1BqTP3D8yQ0jl4KUbw0joUT1c/G/iOxINc4Yn7KOCyxOcY0hsTA7qJY
0TL6esgruWcZJMYywj3yPo0jveGRls4TEhPUDlOPz+O4OvHH5V0mCckHdfy6
ynE0P5PaWPiMXr+RbtcnzHE4GXyIf/mKhGP8PH3rgXEUW6ToGhAkftQe774j
z0Whxcz90+pI1Ktqf7RZxEXijZOEzU8SzUGj96YrciF4te7E3XoSvcohe08v
56LVY/8t7UYSM/xuFhlpc2HPIx0NWkhsnVeU0GPMhePftGdSf0nk7J1nqHua
izg++7knRSJudnAX4cPFAi3vDT58Et6fu6JN/Lmw7J598IyAxGq9gobdgVyE
mfGDAoUkspWdT54M54K7vUDHR4yF5+zsxPRELuxqLNculWAhM9ZicFYJF833
DaXOy7FwxfzNzfgyLnY5yD+zk2fh+DTFzf+Wc+F7OHvK6n9ZUAtgh6t+4+LW
x5VVLQosPHZM+tfwJxdX+0npVYosPNLqMjnbzYWsnqAhWoWF9O//3fk9h4f2
lh+vDq9hIWo1dfDePB7yuvuOLV3Lgv9Nb4WDC3k4G6Oe00p7+yGn5LpFPGzW
T5d1WMdCf69+YoUqD1M7a5VMNrKwUZIX/1yfh/ntTpq1eiws9Tq958RWHr6F
yHwP1mdBvLZrrqoRD3oDi2XVwQIruT4uzYwHt9uVt88ZsHBR43VM/B4eIjKL
4iUMWfi+wyvq3HEeQlxkF/SbsvDmeaf5Bk8ejB53h4VtZyF1zmGJkVM8HJ7y
9ZGcGQvejZZXPP3o+bycIm6wg4WFxzUuOYbQ1xnXXM5bsHDkcsd/Jgk8rFRM
V3tvzQKn/GDgnBIeajrrorfvY2HxbhO/kjIeAlLPSb+mbdKsdcq7nAe16KET
ivtZSBgRdWZ84+Ev0yCbTVtn6ZMdcfX0fPfnXYw6QI9/blRuTh89n1XzBiMd
WEia1jK3ZIAHQdsp29+0i2MqZnkP82BrOTdt82EWpDOSpzA4PLyTE+3opv2i
ZuvfWFEKZ7fM2LbFiYVezWtvZRZS6LCKYmU6syD79kxOsTyFzJHMJjbtzYZO
WacXUXhlvODz5qP0/tivk1qtROGx3FXfCtpqEY2RsSsplK/NUKxzYcFapix0
qzaFDUzB03nHWDib8ixwaA0FqduUxl7aFTkhp3ZtpKCpGitZTftYi4qdjCGF
soZrRwpcWbh2XHpXsTGFjHNXH47Qfj3K3XF6O32/5MnfGm4sTJX8rl9tSYF5
P8jiFu30jT4qsfsoNAVXsp3cWfhSelBx6wEKPXaSC+NoD1uZyA8donC8f8/m
YtrbXOSkdjlT+KwUG6pwnIVfscSo9EkKanNOLC6f9EXL/DgvCrzl+Wm9tFt9
mi7I+lDYPvuLmcwJFn7v5UxfeJbC1MQ14vto/5HTkl9ykYJxwlb7Jtpt4h+a
U8MoePrlyvAmTe1IV4qk8IbXO7TAgzbrmKZKFAUv5tNVu2h3pN3VX5lAYXh0
U8a7Scdpir24TUFGIS+netL/5ZdrJ1N4uK6nu4t2p8tPa51UCsuEJ//IerLQ
ZXt03pv7FLQb8h6oTdp0mLnhIQVbTma83qTVpJw3Z1Iw3xYs6jxp+ZQVH7Io
6O+zC/Wl/VdCvVf/BYX2S+Xa4bS7+4z9tuVSCJuwX/Zg0s01umVvKJiOeLvm
TLrKacL4HYUXxySbCdo9L89HmhXS7yefebSBdu99CYuvRRQMmal+fyZ9I1Ha
spQCX2oiv2/SYSvqKj9SiDPftI4zab/XidYVFFSZ39uEkz5m6MD4Qu/PAu0v
00+y0GdXrbTnOwVObmO7FO3+7Yc766ooTNMz3Dhv0rp9T+0YFOSvtBbLT1o9
0ItZS+FvlOZ/Syb978x1B+rp8YaSgpZNWvIWl2RSqFqS/lyF9oBAudCBpKCw
+b2cGu3B/pyLv5opNCvtL1SfdIuB6ZFWCknewykak/5RKdH2h8Ksi/zX/3Px
wR8uHRROuPTO/J9zuuM7uygE9q1PnHzeUPrZ/e49FL5kWB9dQXs4/p/FPX0U
vjU/O6E86fD43x6DFKSTSl4oTtpfKaN/mMKxu6KrFSbtmn3Ca5SC5MnWgfmT
3qevPcyh9+92Rq80bbbZtxEfHgUNze2q4rRHNtm/G+VTyKp5fV900hpd588I
6fHeRh/k0es7ouC/jTuFD+u522yHJj1r6vTAqXzsZxrFdE56IvYr/x8+7hHT
JVi0RweWxFyYyUe4Lv9TNe2x6s1yF6X42OelP/UdbRHPeo6uDB/RJvfsM2mL
z/D5OTSXj8A7FYwk2ov1M284yfHhfSBbPYC2KtPYW06BD8+nVyVcaa/xbbWu
XsxHlJW79B7axpkLpbYq0+8X73RJg7aVcW7vuAofxx0S+PNo7/u182u2Gh/8
L1NuCenvwWN+5CVFLT66Fz4z+EE7/uKoqMgmPobcEvxdad9dFNuat4WPlVGl
Gua0H7/VLDoFPoruB0usol3Q73y+xYiPz6e/WAxNfq/2DE7hTj6enklt96Td
P+r509+GDwdPvYkdtMdjZr5etZcPW/Ms4xW0JcsNvO/a8yHHl3dm0fVi7doX
vedd+IhP6+oA7S2VO76uc+ND8mZp2HzaJu4dT/qO8zEReHdvL12P7O8tcj3k
xUe5pEvcTdoXJaJatwTyMVySGNFM1zfGH7efVAwff7IKvu6g6yF5YerrVzf4
aDvX/VOWdodc6o0TCXwY79qwqJmup7yd9dZNyXyc4KsfOkl7aYHx1/xHfEQG
7H4bTtdnr3ilooACPkr0fc1i6Ppuc/OIuxjBxx2y74kN7XUJ9+dEF/Mhcy7B
RZY275aSS+onPprNxQZvHmEhPFlJvPwHH7oTygdj6f6RdF9pj2w7H66fUjrd
6f5Slq3U9XyWALp68V4P7Ok88PJI7EZpAQIVSLYN7cs59zeVzBHgyKVDzSK0
rXKVousWCLBCKaTbnu53zDylNfylAkwkOvydTvfH/kKlILP1AmiRj6qN97Kw
4LuSdJuDAIqK00p376TzwGgt29FJgJ1Rl+uGrOj9sSiynuUsQOYe4eHrtJM8
e+7Wuwnw5NnU5gpLej9K5a786i2A8bU9kevofq2y09g8J0KAwtvH6kbpfr+u
2jUi5LkAyw10LstuY2F3XRZfYUIAI68amSY6v1zI8OBViUzg13aRECvajwM0
xy+KTWD4k//R4tUs8BdlsbtmTCDhd2bsQ216/seedufOncArBYlI11X0enKe
NFioTSDmVoMGQ42F+/IZuUF7JvD5o2mZEZ2fhg+neZCZEzASrCl8SeczwvFF
uJSFEM4bV98P/0Uiv8rDvNlKiNBxqiGPzotv9NVlnu8SIntefvrfZhJZCg9T
LO2E0FliNGbOIpHUkPQq6ogQo/oDtyTovOlnHdEqHiCE9+oZ0mdq6PxscEhv
+iMh2p0Ws0Q+kVB5IS9W/1iI60WCZSofSSgtbqh49FSI7ZsWzDAvI7GQb7PH
5KUQN1/Pe3KjhMQ/b7efCC8Q4gBLzFaRzsOtWjqJYjVC2OitTlzxlgR5d8ih
pk4IE/FPtSZ5JBpmvVBObxBCyX/spcsbEpU9atnbmoWI+rzF5n4uiYKMJeWh
f4WIfdKwesFLEm/ns6J29QqhSZaFrs0m8So8yWbpgBC2+Z5+O1+QyHSe11w0
IkT0iKhZBJ3XHzIY6TEcIZIe+6mlZZFI3Rrj7sgT4uTbl8/fP6X/b7IttbQF
QrR0cxvq6Lx/a4nEqFAoxIXmmMcD9P/A/wH5HMb0
     "]]}, 
   {RGBColor[0.922526, 0.385626, 0.209179], Thickness[0.003], Opacity[1.], 
    LineBox[CompressedData["
1:eJwl13k4lN3/B3CVJ4Uk7VlCKktFoUL1ViF7EhIVJVJRWigpJEpICRUqskYq
iRZPdSPtlshaYu6eQvZtzJh7xvyO72/+met1XXOf+3zOdc75vEdp31Fb94ki
IiIeE0RExr/b/jT11nP/QOT/P8WrUyJ3pKi0QXo6vTqjeYzKKwnyl1BvQ8lQ
Y3Ni0Ril8d+JJD/NNvSbrXqXd2uMUlyyq9VSvw1VCrMq1tmPURK5yw6Mbm2D
SYBJbXWVgGI9r/CzDWiD5EzuiurPfCqyavoN0Zo23JrBFOs18CjWWGytZ1A7
ftTyX7E2cSjJ7q+Rp0Lb8Tr0gkO+Goda2zRt88XL7fD6OWqfIM2hrj299CQt
th3lzaMrs1pGKEPPgOiWrHacenpVpjhghLpXvc/U7ms7+qpXeda+ZFP70le+
glIH8lrLPjNGw9Qfs6q0OW878KfghNjK2AFKJXLp1ZiPHYgbvHty+rkBan95
0BnJyg589rOMn3BggPplrbVtYlMHRDQdUhQNBqiW7TFjPb0deLMpJnfL736q
cff2ne8W/IVh/uMDqvr91OdjDVInj//FHGPrwT3tPVReQqt/tVInJolk27dr
/6W81OS+r1raiVl+Rm4TZvylVF866sct60SKVuDo2t4OKrmxmuewphM+EaLW
ItkdVPTcsoBmy078ftl1vnthB+Udf/9c+6lO7H64sVp5ZjulHnPsvKCiExq8
Yl0LqT9URviky2pnutA4L+ihuC1NyfwOD1wR1IVVBp8tk9fQVDCkTmqHdqFw
4O9qU3machqZ57I+ugtvH6Zm1HewqOn7V+huS+1CQlfh5N/BLMofO+nTn7sQ
I5r0yu1gK2U18kjv44Ju5NYoLbKwb6bYbk6dHv92Y/Dd0lrBrXrKbyYzs7G4
G5caH22+d7CeGilNWm/2vhumLr5Gh/WJlX5e06juxtxnt44cb66juK0ua/rb
uuEyXy7ZTLmO4jm7h/rL9EDcXPWZoOAbJWLnoxB1sAfFEV+m3WB/pSSMLto+
mdsLGYuhuWdffqDWUUdnvJfrRRRVDO1jH6gj+ju/flfqhSWz2khR7QNVo7XM
WnRZL2ZryuskJbynEuVrzHYY9oKdVtE3/dw7SpUjv1Hg2Yt1Lu3OVVZvKaOc
Qk2zol7Y2ognimq8oc5K/5Gkd/XhY8p13o7aXEr9e75h894+DNplUu87HlBN
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

     "]]}, 
   {RGBColor[0.528488, 0.470624, 0.701351], Thickness[0.003], Opacity[1.], 
    LineBox[CompressedData["
1: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
7k6gXFfKde6jTsh/CtYszZvAwCyRZfHFnTgR55nZ9mcCDxzSQx4MdaJffX/Y
UjUmbqtO5nSZduFrBqF4bzMTsYEJ7UHmXchYGlCxcisTf7/GjolbdsGRf19Y
aQcTQ02d37Zbd+Hnt/7YLQZM+F0Ot/M+2oUip8j7lrZMaL1iKgb5d+HqTdrr
G6FMeLb9MhS61wXFvg29M34yMcU3W2lHdGHBvB/p7+qZCFHr1k/r7sKYgpeT
XyMTnyp8jfsYXSixz29ktDKx03k112egC7Z1W778YDDx8pjuspPMLkS/Rdq9
KSaep6dGjsylYyJiv/22tSzcM8p6fl6Zjpa00aVj61mweyQYfGUdHR9L4+qz
VVigMcpsojbQEU3Wm6zUYCEhrVAzZhMdSp62WnN1WLi/3ebNlW10HD7oLFV/
gAW57G0tiwzpKFPwq/O6xEJsgLLv5xN0XM4ssuZeZoFwnFvi40rH7rUC7RHh
LMRdEDwn60ZHqcq1vvvXWBAx2rDD24OOD9sfzqq6zcK/6zsWz/Kl47V51Rbl
LBb8F3oy2kPoyDq/+m5nHQtvHu3N8k+i4yTfTc6jnoX81uU3xpKp+YXmZU42
sOBeUkmeTqEjI0KrQLSVhdwhnRCnB3Q8vrW/amcPCz61h7U10ulIeXKBn0Sy
YPWlyfJOHh03f9U7WyhMgqd6qteinI7rwTcUahUn4Z48/1jKFzqilPT/milP
Qsdy7y2igo6w8wUnTDdOopv5QdS7ko4ghbiTezUn4fpoRdq5GjpcfM09tU0m
EX8outW8mQ4srjy31ncSZZ5atSIDdOz4EKr11H8Sya0pB1QH6djuup27JnAS
i9cFZpgP0aFR/PTC6uBJFP8OzrsxQse6Y5EhKyMnoXcnO5A9QceSAv3w/1Im
Edp+M/jOFB1DliWxgmWTENVJXMcWIcDMDHN/XT4Joak1g0JiBKZIoz3uXyfh
dLzfcdkiAgvS6rn11ZPoyfay1ZQgoDTe6/K0aRK6Hb0FR5cQcIyX1DYfmsSA
60Bp4AoCNb/ceu9Js3ElNHzk1UYCDUqqny2Ws2HuUmWRqkKg7fzEg7kr2VDd
hOBIVQL9CiEHvFezMTPpw5YDagTm+d0u0VNlw7urSrdDg8AuyZKEPn02lIej
At/vIJB/QFJ3mzcblaqL4pMMCdwSvcignWHj48CPDHMjAj5fGTcM/NlwjfIu
mWNMYNPO4kbLIDZakvKEvEwI5Ck4nz4dxkZQkrnwVjMCOWN5SY+T2Fi15/LO
RCsCWbEmwws/sjFjtOJgmj2BKONXt+PL2Njqd8thpwMBt9krtZZ9ofx046V6
ysqBY2FK39l45TVn0UwnAk8ck5fp/mYjXmezj6UzgQwVhkFALxuKi4JffHUh
8Ljq8r0ucQ76fzz7JupF4Pom8vADSQ7yozKcEin73/aROSzFgdzx19zl3gT2
HnG6W7+cg8MB6buUfAgM9msnVShxwPjlJLXJl4DmAk58jjYHzLdnwxYHEJDz
8rY6tYuDNc2rn16nLPSLIaGkx4Geb1fzzEACrXcbbj005GDvLJbbEOXQdYUx
8VYclLWG73sXRKDKyOv6OTcOcK70qeJFAq9yeoy3enAQvzuNeZNyqriD8Lgn
B0oFa+wmKfs0m0Z5+HGwIsHFozyEgJTbukjHEA6a1y/5ciiUwNGr3ZcNEjgI
S7CuMQsjwPpyOEj8Iwcd7yRVk6IIyFoa+H0s4yDisfzqv5QN2lQ8fb5w4Hr+
prHqNQIJ44LOdd85KK6M21hGebPcU6NbDRyMHwqx67pOXf/cxFLxAQ72eDwp
nYwmkDy7XeLjEAcXLPfN17xJoDSmYqHPKAfvzGyj/CmLZd6dUcfiQED87vYR
yrk/d/2LFSRhudbdqTWGqsf10W8WSZGYMyt3c+wtAovfnM0vlSah+4xlUkZZ
S9cp23s5CZUlRzKYlKNsNqfWypP4aO8kaxNH1UN4c0TsBhJpQn6qkvEEzBeV
XdqlSkLHuNJ+N+WAlOdBI2okvHq5tacpV+SHeO7XJBEm+D3yM+UT7YqHFumS
eJfI03O7TSDaTWx/qT6J5vrFmbGUCyfYRt57Sfw+/XL/G8qzFlRp15qS+KZ9
KHRmAlVfmmcUY61JXLRpPRJL+dunwyt32ZF471Uv9pLy6D4D6ZEjJOgZg6K/
KO8+vlRkvzMJ2pTxuEQigY5Y2oTYaRIM2pKj16Ydalp0y4vEhgLXtHTKnWf+
BC8+Q8IkTceURrnrAGuuVACJnq3DP4cp05eqSK8Ipdbn3waayR0ChND7ttQr
JCr7EnF02qTRY/kIEn8lbZTPTrv1xHrF6yQ2S+lvf0C5++F97Q0JJG6K+9sx
pn1r/czcOyQWcExU2dO+XPRF9S4JRWh7z08i0HP8t/nmVBJ38qs0lSgzDh6T
fPWIRISRdMmWae8ZbdqaTuKqRFuB3rSVRZy1skgkd65m2E9bOmXN+2wSZe8P
rjlF+Z/w2n7tXBIegdb1/pR7B/T9dhdQ85FSvHh92m0/t5W9IpGody8oYdo/
nKb035II7NRiPKDc9+JChOEHEmfadSVeUO5/JGxSWULi3NTBujfTjksSM/1E
4rzQX8GSaV9ZU1/9mYSU6+708mn7FSaZV1DrYfzp7fdpn9C1r/tGYsXrdzp1
lAcO1cpbVZHIDr64vYHy4F6HnvofJMz1jmb+mfa2gWeH6kjon3sd0T7ttUFe
Tb9IPDpa96dr2svma9g1UPUhOift77QXJLJbmkiIOqd39FAe4il8sG8hUS46
89Y/ysOD+aEdbSRc7ni/6Z12u86eo50ktprrWvVNu6ZamKCTmGf37fj/XHq4
5ng3iWPPrQf+9/v83vgeBnX9BTp90+ONPA6wOdlHPU/ROgcG5dH4ObJ9AyQm
ljkad087LL7LfZhEwymtHPq0/eUzB0dJBM0rjOyYtkveKa8JEnOrlv9pmba1
tuooi6qHE+XpjZTHDL+Pn+GQWG7BZ/ykPL7d9u0ElwSrQyq9etrrGBfO8klE
b3Zurpi2jP9u9gwu3uhsvPpx2gtnzQ2axcWhyq8v3k17KraSO4eLSPcwqwLK
E0MrYoLnc/E0Os87mzKzVmtpqAgXnstuydylLODRwNq2iIuvS+Y3xVAWmnfm
94gEFw9/jbLDKMtqZ8U5LeXCNSPH7TRlpSZ9n6UyXKit2/vOibKab6d5rSwX
8eZ0byvK+llSIrsUuLhXkCWuSXmffkH/pCIXRn4pvOl6t+4wq8xT5qKrWdp8
KWX3/yIiV6pw8Zulv2GS2i/xoROCAtu5EKUL/syhfH95bOfrHVys6Jo3+y7l
J2/Wl3iC8uqMh+GUiwedL7TrcZFhtkbm8PT+tK1jfTDjImbl+5UClAcnPH77
W3AR/Z31oofa75Mx8ws3HuBi0OVzXjXlBV90fO7bcpFFvzWZTFldPbf/wnEu
pL13vFtPeUe1UaWGKxfyhQc+iVI2ONn9dMCNi2PDg1qj1Hlk+2C5yxEvLoYj
JUIKKYcKX+/cEcTFn9Oa9hqU6+iuv8kYLk6115RKU+dfS/CswpdxXMw+2MAd
p87P7qWpcacSuDBcsTCnmjLHrMH8z10u6HQ33xDKcsX6lUUZXIjVpya3Uue1
V7x8SWAxF3IOtUnB1HlucfvoyZk06nmZjvlbUtZIeCR+o5QLyL/qWEOZkyh/
PLWci55LGnY/YgmE3ZUX+lLDRUnwyzEpysmP5K0W/+Vi8YeBwQSqv5TlyTNy
FvLgW+bCANWvMl4cjdUU46G4o7t1DuWr+Y+2fxTnQTfb17WK6m/7CuRv1C/h
oWdJyU4byk2v5dW4cjzw7isNn6L64+AH+fOGW3h4q26XfSGSwJIqeTHCnofc
r6+0rK5QeWDi15ijEw81QRK5opStl0c0tDrzsPud2qdvl6n5efTdb3DlYaI9
pRqUZUUKNlT68MD9ahWwmurXimb6xvnhPMjej9/bTvV3jVqX8JAcHvLZQo4i
VD6wrM/mykzxUDFjseIJKq8EZ7pzfghMQVBdoGQm5SeB6ydDZ05B1DqcnepJ
gLs8e4wxbwozZtubNJ+m7v/Es94CiSnQHeUC9npQ68l62miiTHnLC1kJNwKP
pDMLzltNIX2n2kFnKj+NOjx0b8maQu6SqFNcKp/RHHPDREz4yGqOHPm0hUDR
D3fjtn18KDrlEeqUX2mvXZSzn494P43rj6n8mC2TnmJ6iA+vXBX2pc3U/Tcm
v7x+lI+z4qXmWlTe9DMP7xQK5EPwap1C6gYC63SO7JybwUdfFlmlrkCtR670
zIYnfPC2VeYnryIgL9tYkfGMj8on/hYzKEtxLawMXvDRU6n0qUqOwJw3e0+F
FfMxKn3S05nKw50qm5Nm/uQjXM9TNlSaqtf7I/Y/6/k4tl2hglhKoHFhrsLj
Rj4urChX2UO5uk85b3cbH0FjMduEpaj9mLniy6V/fBiLBe+IkSTw5r/W6/v7
+ZBN/t08vJjAy7BkC7khPuanJGnup5zlLNlWMs7HxmfL1BdReT29ru5xDIuP
2o+aNV7iVH7bFXPSkcPHRZfzG2qofJ+SZ6qiyuPj7iFJYxXKiSuEJ/h8Pg5p
qClHU+8D/wdhUZ7F
     "]]}, 
   {RGBColor[0.772079, 0.431554, 0.102387], Thickness[0.003], Opacity[1.], 
    LineBox[CompressedData["
1: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
Vf//HxRok2g=
     "]]}, 
   {RGBColor[0.363898, 0.618501, 0.782349], Thickness[0.003], Opacity[1.], 
    LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[1, 0.75, 0], Thickness[0.003], Opacity[1.], 
    LineBox[CompressedData["
1:eJwl13k4Fe/7B3DRikRp4SNJkq1okVS8laVkCZVKJZKkKCFlqRBRUUjKkiyV
kkoipeUgSRvZQlkiWc6ZYz3H4cwc5ze+v/lnrtc118wzz3M9c9/vWXzopJ2r
qIiIyJ5JIiIT5wTpAl6gcw9E/v8o/mdelTnvQw9qQ49LZm0TMFSuLrseW9GD
zN7pnmVLBYzD3y4ESFb2IMvrQqboJAGjw1rHVrSpB7ut10u0F1KM1h2x4+y+
HsSVpSxSXkYxGg/s2PtRvhce56tybkuQjC+nGqR8vXth0Mn67M8aZeQmtvlX
L2ZCLLhQIUGEy/BQV/i1ahkTboek1EL+chhqr/esj9diIkKttyqsnMO421jN
t9djYobi3oT6KA7j2vyywGZLJuBl4pEkz2F43nx4rvsME0vevBS7s36YoRF7
KkTwnYmqpX67e68OMu5Hil1WD2Bhdl3tV5lWgjG7M/L8igssCAvJCzPyCEYw
pHxXh7HQFKczdcklguEwsuCgwTUWkhfPkn2zgmDMOrxC1zaDBfvV2hJBISyG
P/a2n/3CQsCKEG+15UyG1chT/Qp5Av/CBre4p3QzuC4OzCNvCHBVFl+qretg
+M0h5zQWE/g0w+3VvicdjJHSZAPzcgJuVc5Sky/RXtwSo1lNwH3zhef5eh2M
0baDegNdBFTmbn4Wl9LO4O9zDfOfzYZjj1+pmscfhshOL8UodzY2dQvm8Y2b
GRIml+yez+9D55y09xs/1jI2Mk7KlCv0gcs5LS5yuZZxYv3eH78W92FeUOO6
ActaRo2OlvVkrT4YZHk+tq+vYSQtrDHfbdQHqxfBQ3o91Qw13sJNgqN9yFNJ
+KY17wfDJLtA27yoD6a3p2s2LfnMCJL+J9m+vx9UeJWN+dRXDI1feUbNzv1Y
lCLO5W8qZDRlBvs2HOnH9I19dfrnXzLW6ik0f/fqR+CWjhsHRvMZAwd2PC4K
60d03QL9lcPPGS6PS8zjc/ph+tz84O4pDxnbzFIvbaH6MfJBZfOdUieG5HtN
kQarAcwpdKrtGskH21Ip/4rNAP4OPPXve1iAyt+yRw13DCDe07fcw+Elro8J
qu7vGUDjsq8yVW8KMVv3x11flwG4Bz6OXnu2CAtyfDHbfwCJu61fDzQwoJL0
7rzVvQF4TNVQF8h/hIHfdsEH/gB2P50lrVdSiZFjPYHmggHU2BZKl06pQu7B
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

     "]]}, 
   {RGBColor[0.647624, 0.37816, 0.614037], Thickness[0.003], Opacity[1.], 
    LineBox[CompressedData["
1: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
MDzPcloByfuxCyRGBAIBrpf+U1MYQuH/AM3bHyU=
     "]]}, 
   {RGBColor[0.571589, 0.586483, 0.], Thickness[0.003], Opacity[1.], 
    LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0., 1.9999999591836735`}, {-2, 2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.67318959174931*^9, {3.673189690461419*^9, 3.67318970940277*^9}, 
   3.673189740290345*^9, {3.673189787274754*^9, 3.673189825396976*^9}, 
   3.673189863260548*^9}]
}, Open  ]],

Cell[TextData[{
 "What happened? The sol\[CloseCurlyQuote]n found by DSolve matches the text\
\[CloseCurlyQuote]s answer. However, the original DE only vanishes when ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    RowBox[{
     RowBox[{"1", "&&", "c1"}], "=", "0"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". "
}], "Text",
 CellChangeTimes->{{3.673173510808416*^9, 3.673173557323694*^9}, {
  3.673173690003632*^9, 3.673173697049749*^9}, {3.6731737341353207`*^9, 
  3.673173740430687*^9}, {3.673190525337388*^9, 3.673190634716247*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"5.", "  ", "4", " ", 
    SuperscriptBox["x", "2"], 
    RowBox[{"y", "''"}]}], "+", 
   RowBox[{"5", "y"}]}], "=", "0"}]], "Text",
 CellChangeTimes->{{3.767971474441745*^9, 3.7679715015176897`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6731948758385344`*^9, 3.673194883547394*^9}, 
   3.7679709884369183`*^9, {3.772894197468184*^9, 3.772894198002574*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tier", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"4", " ", 
      SuperscriptBox["x", "2"], " ", 
      RowBox[{
       RowBox[{"y", "''"}], "[", "x", "]"}]}], "+", 
     RowBox[{"5", " ", 
      RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", "0"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.673194889206749*^9, 3.673194917960918*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"5", " ", 
     RowBox[{"y", "[", "x", "]"}]}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["x", "2"], " ", 
     RowBox[{
      SuperscriptBox["y", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "x", "]"}]}]}], "\[Equal]", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6731949689435177`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cins", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{"tier", ",", "y", ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6731949233397303`*^9, 3.673194938519765*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "x", "}"}], ",", 
      RowBox[{
       RowBox[{
        SqrtBox["x"], " ", 
        RowBox[{"C", "[", "2", "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"Log", "[", "x", "]"}], "]"}]}], "+", 
       RowBox[{
        SqrtBox["x"], " ", 
        RowBox[{"C", "[", "1", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"Log", "[", "x", "]"}], "]"}]}]}]}], "]"}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.673194940579775*^9, 3.673194986497629*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["The above cell matches the text answer.", "Text",
 CellChangeTimes->{{3.769899459808057*^9, 3.769899469359706*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"tier", "/.", "cins"}], "]"}]], "Input",
 CellChangeTimes->{{3.673195025999648*^9, 3.6731950440360518`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "True", "}"}], "}"}]], "Output",
 CellChangeTimes->{3.673195046026684*^9}]
}, Open  ]],

Cell["\<\
In the above case the sol\[CloseCurlyQuote]n checks out with Mathematica as \
well as matching the text\[CloseCurlyQuote]s answer.\
\>", "Text",
 CellChangeTimes->{{3.673195193039752*^9, 3.673195215493803*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"7.", "  ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], 
      SuperscriptBox["D", "2"]}], "-", 
     RowBox[{"4", "x", " ", "D"}], " ", "+", 
     RowBox[{"6", " ", "I"}]}], ")"}], "y"}], "=", "C"}]], "Text",
 CellChangeTimes->{{3.767971529855536*^9, 3.7679715655079813`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.673195240985776*^9, 3.673195247086009*^9}, 
   3.7679709962846746`*^9, {3.772894204547791*^9, 3.772894204994369*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"hol", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], " ", 
      RowBox[{
       RowBox[{"y", "''"}], "[", "x", "]"}]}], "-", 
     RowBox[{"4", " ", "x", " ", 
      RowBox[{
       RowBox[{"y", "'"}], "[", "x", "]"}]}], "+", 
     RowBox[{"6", " ", 
      RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", "c"}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"dea", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{"hol", ",", "y", ",", "x"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.673195251896747*^9, 3.673195265963985*^9}, {
  3.673195326097774*^9, 3.6731953741041594`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"6", " ", 
     RowBox[{"y", "[", "x", "]"}]}], "-", 
    RowBox[{"4", " ", "x", " ", 
     RowBox[{
      SuperscriptBox["y", "\[Prime]",
       MultilineFunction->None], "[", "x", "]"}]}], "+", 
    RowBox[{
     SuperscriptBox["x", "2"], " ", 
     RowBox[{
      SuperscriptBox["y", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "x", "]"}]}]}], "\[Equal]", "c"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6731953767352324`*^9, 3.673197803601972*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "x", "}"}], ",", 
      RowBox[{
       FractionBox["c", "6"], "+", 
       RowBox[{
        SuperscriptBox["x", "2"], " ", 
        RowBox[{"C", "[", "1", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["x", "3"], " ", 
        RowBox[{"C", "[", "2", "]"}]}]}]}], "]"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.6731953767352324`*^9, 3.673197803660368*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"hol", "/.", "dea"}], "]"}]], "Input",
 CellChangeTimes->{{3.673197783152763*^9, 3.673197790720647*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "True", "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.673197791756248*^9, 3.673197806839054*^9}}]
}, Open  ]],

Cell["\<\
The above answer matches the text\[CloseCurlyQuote]s, with the original rhs c \
constant equaling zero in the text answer.\
\>", "Text",
 CellChangeTimes->{{3.673197500932328*^9, 3.673197568576614*^9}, {
  3.7698995311976233`*^9, 3.769899566108592*^9}}],

Cell[TextData[{
 "9.  (",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        SuperscriptBox["x", "2"], "D"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"0.2", " ", "x", " ", "D"}], " ", "+", " ", 
        RowBox[{"0.36", " ", "I"}]}]}], ")"}], "y"}], " ", "=", " ", "0"}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.7679716158904123`*^9, 3.767971642883857*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.673197575052287*^9, 3.673197576593837*^9}, 
   3.767971006532515*^9, {3.772894211371579*^9, 3.7728942118180523`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"reg", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], " ", 
      RowBox[{
       RowBox[{"y", "''"}], "[", "x", "]"}]}], "-", 
     RowBox[{"0.2", " ", "x", " ", 
      RowBox[{
       RowBox[{"y", "'"}], "[", "x", "]"}]}], "+", 
     RowBox[{"0.36", " ", 
      RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", "0"}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"dirk", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{"reg", ",", "y", ",", "x"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.673197639106757*^9, 3.6731977178994217`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"0.36`", " ", 
     RowBox[{"y", "[", "x", "]"}]}], "-", 
    RowBox[{"0.2`", " ", "x", " ", 
     RowBox[{
      SuperscriptBox["y", "\[Prime]",
       MultilineFunction->None], "[", "x", "]"}]}], "+", 
    RowBox[{
     SuperscriptBox["x", "2"], " ", 
     RowBox[{
      SuperscriptBox["y", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "x", "]"}]}]}], "\[Equal]", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.673197720260651*^9, 3.673197815846472*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "x", "}"}], ",", 
      RowBox[{
       RowBox[{
        SuperscriptBox["x", "0.6`"], " ", 
        RowBox[{"C", "[", "1", "]"}]}], "+", 
       RowBox[{"0.6`", " ", 
        SuperscriptBox["x", "0.6`"], " ", 
        RowBox[{"C", "[", "2", "]"}], " ", 
        RowBox[{"Log", "[", "x", "]"}]}]}]}], "]"}]}], "}"}], "}"}]], "Output",\

 CellChangeTimes->{3.673197720260651*^9, 3.6731978159277363`*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Chop", "[", 
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{"reg", "/.", "dirk"}], "]"}], ",", 
   RowBox[{"10", "^", 
    RowBox[{"-", "16"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.673197737831266*^9, 3.673197763577403*^9}, {
  3.673198035607983*^9, 3.673198036471693*^9}, {3.6731981582130117`*^9, 
  3.67319815879532*^9}, {3.673198989518504*^9, 3.673198994318013*^9}, {
  3.673199214149157*^9, 3.673199250659301*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "True", "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.673197765371532*^9, 3.67319781954462*^9, 3.6731980382107687`*^9, 
   3.673198161003673*^9, 3.673198995063858*^9, {3.673199241376989*^9, 
   3.673199251684991*^9}}]
}, Open  ]],

Cell[TextData[{
 "The above answer matches the text\[CloseCurlyQuote]s. However, the checking \
step does not work cleanly. The default tolerance for Chop is 1",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["0", 
    RowBox[{"-", "10"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", and in this case ",
 Cell[BoxData[
  FormBox[
   RowBox[{"10", "^", 
    RowBox[{"-", "16"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " will work. But an exact answer would be preferred."
}], "Text",
 CellChangeTimes->{{3.673198886257625*^9, 3.673198909231769*^9}, {
  3.673199162775682*^9, 3.673199198660973*^9}, {3.673199259074216*^9, 
  3.673199304537175*^9}, {3.6732042917780743`*^9, 3.673204293773679*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"11.", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], 
      SuperscriptBox["D", "2"]}], "-", 
     RowBox[{"3", " ", "x", " ", "D"}], "+", 
     RowBox[{"10", " ", "I"}]}], ")"}], "y"}], "=", "0"}]], "Text",
 CellChangeTimes->{{3.7679716643562326`*^9, 3.767971699256443*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6731993187575274`*^9, 3.6731993206741543`*^9}, 
   3.767971013460277*^9, {3.772894218731168*^9, 3.772894219137583*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"deam", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], " ", 
      RowBox[{
       RowBox[{"y", "''"}], "[", "x", "]"}]}], "-", 
     RowBox[{"3", " ", "x", " ", 
      RowBox[{
       RowBox[{"y", "'"}], "[", "x", "]"}]}], "+", 
     RowBox[{"10", " ", 
      RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", "0"}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"vre", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{"deam", ",", "y", ",", "x"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.673199328645903*^9, 3.673199403069669*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"10", " ", 
     RowBox[{"y", "[", "x", "]"}]}], "-", 
    RowBox[{"3", " ", "x", " ", 
     RowBox[{
      SuperscriptBox["y", "\[Prime]",
       MultilineFunction->None], "[", "x", "]"}]}], "+", 
    RowBox[{
     SuperscriptBox["x", "2"], " ", 
     RowBox[{
      SuperscriptBox["y", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "x", "]"}]}]}], "\[Equal]", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.673199405538225*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "x", "}"}], ",", 
      RowBox[{
       RowBox[{
        SuperscriptBox["x", "2"], " ", 
        RowBox[{"C", "[", "2", "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          SqrtBox["6"], " ", 
          RowBox[{"Log", "[", "x", "]"}]}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["x", "2"], " ", 
        RowBox[{"C", "[", "1", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          SqrtBox["6"], " ", 
          RowBox[{"Log", "[", "x", "]"}]}], "]"}]}]}]}], "]"}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.673199405638021*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"deam", "/.", "vre"}], "]"}]], "Input",
 CellChangeTimes->{{3.6731994348332663`*^9, 3.673199443828068*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "True", "}"}], "}"}]], "Output",
 CellChangeTimes->{3.673199445126088*^9}]
}, Open  ]],

Cell["\<\
In this case the substitution worked cleanly. The answer also matches the \
text\[CloseCurlyQuote]s.\
\>", "Text",
 CellChangeTimes->{{3.6731994573885517`*^9, 3.673199480074888*^9}}],

Cell["\<\
12 - 19 Initial value problem
Solve and graph the solution. \
\>", "Text",
 CellChangeTimes->{{3.767971746519146*^9, 3.767971769397492*^9}},
 Background->RGBColor[
  0.9600061036087587, 0.9600061036087587, 0.9600061036087587]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"13.", " ", 
     SuperscriptBox["x", "2"], 
     RowBox[{"y", "''"}]}], "+", 
    RowBox[{"3", " ", "x", " ", 
     RowBox[{"y", "'"}]}], "+", 
    RowBox[{"0.75", "y"}]}], "=", "0"}], ",", " ", 
  RowBox[{
   RowBox[{"y", "[", "1", "]"}], "=", "1"}], ",", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "'"}], "[", "1", "]"}], "=", 
   RowBox[{"-", "1.5"}]}]}]], "Text",
 CellChangeTimes->{{3.7679717782007217`*^9, 3.7679718556684847`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.673199576939015*^9, 3.6731995807845297`*^9}, 
   3.767971021907832*^9, {3.7728942255307617`*^9, 3.772894225985416*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"non", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "2"], " ", 
       RowBox[{
        RowBox[{"y", "''"}], "[", "x", "]"}]}], "+", 
      RowBox[{"3", " ", "x", " ", 
       RowBox[{
        RowBox[{"y", "'"}], "[", "x", "]"}]}], "+", 
      RowBox[{"0.75", " ", 
       RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", "0"}], ",", 
    RowBox[{
     RowBox[{"y", "[", "1", "]"}], "\[Equal]", "1"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"y", "'"}], "[", "1", "]"}], "\[Equal]", 
     RowBox[{"-", "1.5"}]}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"by", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{"non", ",", "y", ",", "x"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.673199794778859*^9, 3.673199885435903*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"0.75`", " ", 
      RowBox[{"y", "[", "x", "]"}]}], "+", 
     RowBox[{"3", " ", "x", " ", 
      RowBox[{
       SuperscriptBox["y", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["x", "2"], " ", 
      RowBox[{
       SuperscriptBox["y", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "x", "]"}]}]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{"y", "[", "1", "]"}], "\[Equal]", "1"}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["y", "\[Prime]",
      MultilineFunction->None], "[", "1", "]"}], "\[Equal]", 
    RowBox[{"-", "1.5`"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.6731998879866047`*^9, 3.673199945520426*^9, 
  3.673200169846553*^9, 3.673201970295863*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "x", "}"}], ",", 
      FractionBox[
       RowBox[{
        RowBox[{"0.9999999999999991`", " ", 
         SuperscriptBox["x", "0.49999999999999967`"]}], "+", 
        RowBox[{"8.881784197001258`*^-16", " ", 
         SuperscriptBox["x", "1.5000000000000009`"]}]}], 
       SuperscriptBox["x", "2.0000000000000004`"]]}], "]"}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6731998879866047`*^9, 3.673199945520426*^9, 
  3.673200169846553*^9, 3.67320197034091*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rek", "=", 
  RowBox[{"Chop", "[", 
   RowBox[{"by", ",", 
    RowBox[{"10", "^", 
     RowBox[{"-", "15"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6732008591967907`*^9, 3.673200880776264*^9}, {
  3.673200926134128*^9, 3.6732009273826647`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "x", "}"}], ",", 
      FractionBox[
       RowBox[{
        RowBox[{"0.9999999999999991`", " ", 
         SuperscriptBox["x", "0.49999999999999967`"]}], "+", 
        RowBox[{"0", " ", 
         SuperscriptBox["x", "1.5000000000000009`"]}]}], 
       SuperscriptBox["x", "2.0000000000000004`"]]}], "]"}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.673200863347439*^9, 3.673200882991097*^9}, 
   3.673200928231247*^9, 3.673201972527911*^9}]
}, Open  ]],

Cell["\<\
The posed floating point format in the problem created a slight haze which \
made Chop necessary. Allowing this, the answer matches the text\
\[CloseCurlyQuote]s.\
\>", "Text",
 CellChangeTimes->{{3.673201099537381*^9, 3.673201136118923*^9}, {
  3.673201196740899*^9, 3.6732012153402367`*^9}, {3.673201324128296*^9, 
  3.673201344655656*^9}, {3.769899795575881*^9, 3.769899865282716*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"non", "/.", "rek"}], "]"}]], "Input",
 CellChangeTimes->{{3.673199959133497*^9, 3.6731999698424873`*^9}, {
  3.673201040748083*^9, 3.6732010426358232`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"True", ",", "True", ",", "True"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.6731999714431267`*^9, 3.6732001736028757`*^9, 
  3.673201043541494*^9, 3.6732019753055162`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "/.", "rek"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "100"}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.673201977854066*^9, 3.6732020523583717`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
gzMvVdkYGOjwP8TL3rg=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->300,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0., 0.9999999795918367}, {0, 100}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6732020042843523`*^9, 3.673202053237315*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"15.", " ", 
     SuperscriptBox["x", "2"], 
     RowBox[{"y", "''"}]}], "+", 
    RowBox[{"3", " ", "x", " ", "y"}], "+", "y"}], "=", "0"}], ",", " ", 
  RowBox[{
   RowBox[{"y", "[", "1", "]"}], "=", "3.6"}], ",", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "'"}], "[", "1", "]"}], "=", "0.4"}]}]], "Text",
 CellChangeTimes->{{3.76797188651836*^9, 3.767971928666256*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.673201379298362*^9, 3.673201381095586*^9}, 
   3.767971032083547*^9, {3.7728942333944902`*^9, 3.772894233849069*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"hote", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "2"], " ", 
       RowBox[{
        RowBox[{"y", "''"}], "[", "x", "]"}]}], "+", 
      RowBox[{"3", " ", "x", " ", 
       RowBox[{
        RowBox[{"y", "'"}], "[", "x", "]"}]}], "+", 
      RowBox[{"y", "[", "x", "]"}]}], "\[Equal]", "0"}], ",", 
    RowBox[{
     RowBox[{"y", "[", "1", "]"}], "\[Equal]", "3.6"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"y", "'"}], "[", "1", "]"}], "\[Equal]", "0.4"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"deli", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{"hote", ",", "y", ",", "x"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.673201396505642*^9, 3.673201477122924*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"y", "[", "x", "]"}], "+", 
     RowBox[{"3", " ", "x", " ", 
      RowBox[{
       SuperscriptBox["y", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["x", "2"], " ", 
      RowBox[{
       SuperscriptBox["y", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "x", "]"}]}]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{"y", "[", "1", "]"}], "\[Equal]", "3.6`"}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["y", "\[Prime]",
      MultilineFunction->None], "[", "1", "]"}], "\[Equal]", "0.4`"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.67320147959603*^9, 3.673201832412373*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "x", "}"}], ",", 
      FractionBox[
       RowBox[{"4.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.9`", "\[VeryThinSpace]", "+", 
          RowBox[{"1.`", " ", 
           RowBox[{"Log", "[", "x", "]"}]}]}], ")"}]}], "x"]}], "]"}]}], 
   "}"}], "}"}]], "Output",
 CellChangeTimes->{3.67320147959603*^9, 3.673201832458427*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"hote", "/.", "deli"}], "]"}]], "Input",
 CellChangeTimes->{{3.67320150391813*^9, 3.673201512425728*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"True", ",", "True", ",", "True"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.673201513824608*^9, 3.6732018342995777`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "/.", "deli"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "100"}], ",", "10"}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6732018367551413`*^9, 3.673201920891271*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
Ys2Pt2+YW12lYMaiqImx5v8CawnqaQ==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->300,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0., 0.9999999795918367}, {-100, 10}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.673201870581175*^9, 3.6732019221736717`*^9}}]
}, Open  ]],

Cell["The answer matches the text\[CloseCurlyQuote]s.", "Text",
 CellChangeTimes->{{3.673201520058359*^9, 3.673201525913059*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"17.", "  ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "2"], 
       SuperscriptBox["D", "2"]}], "+", 
      RowBox[{"x", " ", "D"}], " ", "+", " ", "I"}], ")"}], "y"}], "=", "0"}],
   ",", " ", 
  RowBox[{
   RowBox[{"y", "[", "1", "]"}], "=", "1"}], ",", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "'"}], "[", "1", "]"}], "=", "1"}]}]], "Text",
 CellChangeTimes->{{3.767971946828926*^9, 3.7679719906008883`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.673201534372809*^9, 3.673201545512393*^9}, 
   3.7679710431312447`*^9, {3.7728942420740833`*^9, 3.7728942425206833`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"zog", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "2"], " ", 
       RowBox[{
        RowBox[{"y", "''"}], "[", "x", "]"}]}], "+", " ", 
      RowBox[{"x", " ", 
       RowBox[{
        RowBox[{"y", "'"}], "[", "x", "]"}]}], "+", 
      RowBox[{"y", "[", "x", "]"}]}], "\[Equal]", "0"}], ",", 
    RowBox[{
     RowBox[{"y", "[", "1", "]"}], "\[Equal]", "1"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"y", "'"}], "[", "1", "]"}], "\[Equal]", "1"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"nilt", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{"zog", ",", "y", ",", "x"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.673201562739973*^9, 3.673201614213969*^9}, {
  3.673201662620181*^9, 3.673201676939557*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"y", "[", "x", "]"}], "+", 
     RowBox[{"x", " ", 
      RowBox[{
       SuperscriptBox["y", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["x", "2"], " ", 
      RowBox[{
       SuperscriptBox["y", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "x", "]"}]}]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{"y", "[", "1", "]"}], "\[Equal]", "1"}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["y", "\[Prime]",
      MultilineFunction->None], "[", "1", "]"}], "\[Equal]", "1"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.673201679849935*^9, 3.673201947346444*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "x", "}"}], ",", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"Log", "[", "x", "]"}], "]"}], "+", 
       RowBox[{"Sin", "[", 
        RowBox[{"Log", "[", "x", "]"}], "]"}]}]}], "]"}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.673201679849935*^9, 3.673201947394992*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"zog", "/.", "nilt"}], "]"}]], "Input",
 CellChangeTimes->{{3.673201703888171*^9, 3.673201712642115*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"True", ",", "True", ",", "True"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.673201713863723*^9, 3.673201949198834*^9}]
}, Open  ]],

Cell["The answer matches the text\[CloseCurlyQuote]s.", "Text",
 CellChangeTimes->{{3.6732017201231833`*^9, 3.673201733409519*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "/.", "nilt"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.673201740909169*^9, 3.6732017824957933`*^9}, {
  3.673201930610827*^9, 3.673201935698598*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
DMiLwS5OAmqD7MSfPxgo/p//AyIML2o=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->300,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.673201767537794*^9, 3.673201783685758*^9}, {
  3.673201936783043*^9, 3.673201952702941*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"19.", "  ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "2"], 
       SuperscriptBox["D", "2"]}], "-", 
      RowBox[{"x", " ", "D"}], " ", "-", 
      RowBox[{"15", " ", "I"}]}], ")"}], "y"}], "=", "0"}], ",", " ", 
  RowBox[{
   RowBox[{"y", "[", "1", "]"}], "=", "0.1"}], ",", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "'"}], "[", "1", "]"}], "=", 
   RowBox[{"-", "4.5"}]}]}]], "Text",
 CellChangeTimes->{{3.7679720129470463`*^9, 3.767972082934431*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.67320207319188*^9, 3.673202075079567*^9}, 
   3.7679710535389843`*^9, {3.7728942504016323`*^9, 3.7728942508640633`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"wer", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "2"], " ", 
       RowBox[{
        RowBox[{"y", "''"}], "[", "x", "]"}]}], "-", 
      RowBox[{"x", " ", 
       RowBox[{
        RowBox[{"y", "'"}], "[", "x", "]"}]}], "-", 
      RowBox[{"15", " ", 
       RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", "0"}], ",", 
    RowBox[{
     RowBox[{"y", "[", "1", "]"}], "\[Equal]", "0.1"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"y", "'"}], "[", "1", "]"}], "\[Equal]", 
     RowBox[{"-", "4.5"}]}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"jip", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{"wer", ",", "y", ",", "x"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.673202115823841*^9, 3.673202194113419*^9}, {
  3.673202228362186*^9, 3.673202241695794*^9}, {3.6732029263765383`*^9, 
  3.673202947263814*^9}, {3.67320298824689*^9, 3.673202999092596*^9}, {
  3.673203058628393*^9, 3.6732030733780613`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "15"}], " ", 
      RowBox[{"y", "[", "x", "]"}]}], "-", 
     RowBox[{"x", " ", 
      RowBox[{
       SuperscriptBox["y", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["x", "2"], " ", 
      RowBox[{
       SuperscriptBox["y", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "x", "]"}]}]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{"y", "[", "1", "]"}], "\[Equal]", "0.1`"}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["y", "\[Prime]",
      MultilineFunction->None], "[", "1", "]"}], "\[Equal]", 
    RowBox[{"-", "4.5`"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6732021963883343`*^9, {3.673202233683242*^9, 3.673202242711887*^9}, 
   3.673202948766088*^9, 3.673203000150285*^9, {3.673203064599387*^9, 
   3.673203075157874*^9}, 3.67320441982489*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "x", "}"}], ",", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"0.5249999999999999`", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.1904761904761907`"}], "+", 
           RowBox[{"1.`", " ", 
            SuperscriptBox["x", "8"]}]}], ")"}]}], 
        SuperscriptBox["x", "3"]]}]}], "]"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6732021963883343`*^9, {3.673202233683242*^9, 3.673202242711887*^9}, 
   3.673202948766088*^9, 3.673203000150285*^9, {3.673203064599387*^9, 
   3.673203075157874*^9}, 3.673204419885002*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"wer", "/.", "jip"}], "]"}]], "Input",
 CellChangeTimes->{{3.673202675572836*^9, 3.673202683279436*^9}, {
  3.6732028546912518`*^9, 3.67320290789701*^9}, {3.673203141897107*^9, 
  3.673203177645521*^9}, {3.673204426307083*^9, 3.673204428106818*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Equal]", "0"}], ",", "True", ",", "True"}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.67320268433985*^9, {3.673202868443811*^9, 3.67320290868963*^9}, {
   3.673203144642798*^9, 3.6732031794447002`*^9}, {3.673204423068589*^9, 
   3.673204428901433*^9}}]
}, Open  ]],

Cell["\<\
The initial value points are verified.  However, the general sol\
\[CloseCurlyQuote]n is still under a shadow.\
\>", "Text",
 CellChangeTimes->{{3.673203992048593*^9, 3.6732040193036947`*^9}, {
  3.673204073997798*^9, 3.673204084629472*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ard", "=", 
  RowBox[{"jip", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "1", ",", "2", ",", "2"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.673202329952264*^9, 3.673202354915552*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"0.5249999999999999`", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1.1904761904761907`"}], "+", 
      RowBox[{"1.`", " ", 
       SuperscriptBox["x", "8"]}]}], ")"}]}], 
   SuperscriptBox["x", "3"]]}]], "Output",
 CellChangeTimes->{{3.673202347406826*^9, 3.673202356366065*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"poi", "=", 
  RowBox[{"ExpandNumerator", "[", "ard", "]"}]}]], "Input",
 CellChangeTimes->{{3.673202363774453*^9, 3.673202371362659*^9}, {
  3.673202415906796*^9, 3.673202418513288*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"0.625`", "\[VeryThinSpace]", "-", 
   RowBox[{"0.5249999999999999`", " ", 
    SuperscriptBox["x", "8"]}]}], 
  SuperscriptBox["x", "3"]]], "Output",
 CellChangeTimes->{3.673202372033605*^9, 3.673202419851841*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"deke", "=", 
  RowBox[{"Expand", "[", "poi", "]"}]}]], "Input",
 CellChangeTimes->{{3.673202423964863*^9, 3.673202427720636*^9}, {
  3.673203250796818*^9, 3.673203252667337*^9}, {3.673203350847773*^9, 
  3.67320337003123*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["0.625`", 
   SuperscriptBox["x", "3"]], "-", 
  RowBox[{"0.5249999999999999`", " ", 
   SuperscriptBox["x", "5"]}]}]], "Output",
 CellChangeTimes->{
  3.673202428907524*^9, 3.673203254043043*^9, {3.6732033644048347`*^9, 
   3.673203371170599*^9}}]
}, Open  ]],

Cell["\<\
The above form matches the text\[CloseCurlyQuote]s answer. Below is a series \
of steps to check the sol\[CloseCurlyQuote]n \[OpenCurlyQuote]by hand\
\[CloseCurlyQuote].\
\>", "Text",
 CellChangeTimes->{{3.673203821374667*^9, 3.673203837214404*^9}, {
  3.673204092733068*^9, 3.6732041068525963`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"mot", "[", "x_", "]"}], ":=", 
  RowBox[{
   FractionBox["0.625`", 
    SuperscriptBox["x", "3"]], "-", 
   RowBox[{"0.5249999999999999`", " ", 
    SuperscriptBox["x", "5"]}]}]}]], "Input",
 CellChangeTimes->{{3.673203381115945*^9, 3.673203397865161*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mot1", "=", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"mot", "[", "x", "]"}], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.673203471493821*^9, 3.673203523001587*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1.875`", 
    SuperscriptBox["x", "4"]]}], "-", 
  RowBox[{"2.6249999999999996`", " ", 
   SuperscriptBox["x", "4"]}]}]], "Output",
 CellChangeTimes->{3.673203591643046*^9, 3.673203735416044*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"mot2", "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"mot", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "2"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.673203552295994*^9, 3.673203584279674*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["7.5`", 
   SuperscriptBox["x", "5"]], "-", 
  RowBox[{"10.499999999999998`", " ", 
   SuperscriptBox["x", "3"]}]}]], "Output",
 CellChangeTimes->{{3.673203566757003*^9, 3.673203587554565*^9}, 
   3.6732037398444653`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "15"}], " ", 
    RowBox[{"mot", "[", "x", "]"}]}], "-", 
   RowBox[{"x", " ", 
    RowBox[{
     SuperscriptBox["mot", "\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["x", "2"], " ", 
    RowBox[{
     SuperscriptBox["mot", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.673203769762442*^9, 3.673203793121448*^9}}],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{
  3.6732036968474627`*^9, {3.673203754727028*^9, 3.673203793904859*^9}}]
}, Open  ]],

Cell["The sol\[CloseCurlyQuote]n is checked \[OpenCurlyQuote]by hand\
\[CloseCurlyQuote] and found to be correct.", "Text",
 CellChangeTimes->{{3.673203866006236*^9, 3.673203882068491*^9}, {
  3.6732041503496532`*^9, 3.6732041593545227`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"poi", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1000"}], ",", "1000"}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.673202478811294*^9, 3.673202536724844*^9}, {
  3.673202601794794*^9, 3.6732026068185472`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]], LineBox[CompressedData["
1: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
Lgl8i/zepTwvgf8BJv3LtQ==
     "]], 
    LineBox[{{-0.00043140697934079586`, -1000.}, {-0.0004314069725151078, 
     1000.}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->300,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-0.9999999591836735, 0.9999999591836735}, {-1000, 1000}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.673202501161449*^9, 3.673202537995839*^9}, 
   3.673202607775819*^9}]
}, Open  ]],

Cell[TextData[{
 "The vertical line in the plot is an artifact, as the function is undefined \
at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "0"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.673204171395381*^9, 3.6732041980650263`*^9}}]
},
WindowSize->{1366, 843},
WindowMargins->{{4, Automatic}, {Automatic, 4}},
Magnification:>1.5 Inherited,
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 10, \
2015)",
StyleDefinitions->"Charter1.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 358, 7, 110, "Text"],
Cell[CellGroupData[{
Cell[783, 24, 631, 18, 54, "Input"],
Cell[1417, 44, 586, 17, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2040, 66, 210, 4, 45, "Input"],
Cell[2253, 72, 399, 12, 81, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2689, 89, 129, 2, 45, "Input"],
Cell[2821, 93, 375, 12, 77, "Output"]
}, Open  ]],
Cell[3211, 108, 405, 10, 51, "Text"],
Cell[CellGroupData[{
Cell[3641, 122, 275, 8, 54, "Input"],
Cell[3919, 132, 251, 8, 45, "Output"]
}, Open  ]],
Cell[4185, 143, 444, 13, 51, "Text"],
Cell[4632, 158, 345, 11, 51, "Text"],
Cell[4980, 171, 1062, 35, 112, "Text"],
Cell[6045, 208, 213, 3, 45, "Input"],
Cell[6261, 213, 167, 2, 51, "Text"],
Cell[CellGroupData[{
Cell[6453, 219, 328, 10, 54, "Input"],
Cell[6784, 231, 780, 25, 76, "Output"]
}, Open  ]],
Cell[7579, 259, 246, 5, 51, "Text"],
Cell[CellGroupData[{
Cell[7850, 268, 573, 19, 76, "Input"],
Cell[8426, 289, 365, 13, 63, "Output"]
}, Open  ]],
Cell[8806, 305, 540, 9, 86, "Text"],
Cell[9349, 316, 445, 11, 58, "Input"],
Cell[CellGroupData[{
Cell[9819, 331, 785, 18, 54, "Input"],
Cell[10607, 351, 956, 23, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11600, 379, 276, 8, 63, "Input"],
Cell[11879, 389, 70, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11986, 395, 269, 8, 63, "Input"],
Cell[12258, 405, 72, 1, 45, "Output"]
}, Open  ]],
Cell[12345, 409, 986, 15, 189, "Text"],
Cell[13334, 426, 1557, 47, 193, "Text"],
Cell[CellGroupData[{
Cell[14916, 477, 441, 15, 54, "Input"],
Cell[15360, 494, 370, 13, 49, "Output"]
}, Open  ]],
Cell[15745, 510, 247, 7, 49, "Input"],
Cell[15995, 519, 222, 6, 49, "Input"],
Cell[16220, 527, 212, 5, 51, "Text"],
Cell[16435, 534, 360, 10, 54, "Input"],
Cell[16798, 546, 145, 2, 45, "Input"],
Cell[16946, 550, 151, 5, 51, "Text"],
Cell[CellGroupData[{
Cell[17122, 559, 96, 1, 45, "Input"],
Cell[17221, 562, 450, 16, 75, "Output"]
}, Open  ]],
Cell[17686, 581, 986, 22, 124, "Text"],
Cell[18675, 605, 388, 14, 77, "Text"],
Cell[19066, 621, 220, 3, 45, "Input"],
Cell[CellGroupData[{
Cell[19311, 628, 608, 18, 83, "Input"],
Cell[19922, 648, 667, 18, 54, "Output"],
Cell[20592, 668, 720, 19, 77, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21349, 692, 218, 5, 45, "Input"],
Cell[21570, 699, 436, 11, 77, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22043, 715, 326, 9, 45, "Input"],
Cell[22372, 726, 415, 10, 101, "Output"]
}, Open  ]],
Cell[22802, 739, 290, 9, 52, "Text"],
Cell[23095, 750, 289, 6, 47, "Input"],
Cell[CellGroupData[{
Cell[23409, 760, 1601, 34, 75, "Input"],
Cell[25013, 796, 30738, 859, 2566, "Output"]
}, Open  ]],
Cell[55766, 1658, 692, 14, 121, "Text"],
Cell[CellGroupData[{
Cell[56483, 1676, 1148, 29, 104, "Input"],
Cell[57634, 1707, 181353, 3022, 365, "Output"]
}, Open  ]],
Cell[239002, 4732, 558, 13, 87, "Text"],
Cell[239563, 4747, 282, 8, 73, "Text"],
Cell[239848, 4757, 218, 3, 45, "Input"],
Cell[CellGroupData[{
Cell[240091, 4764, 375, 11, 54, "Input"],
Cell[240469, 4777, 375, 12, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[240881, 4794, 190, 4, 45, "Input"],
Cell[241074, 4800, 651, 20, 88, "Output"]
}, Open  ]],
Cell[241740, 4823, 121, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[241886, 4828, 159, 3, 45, "Input"],
Cell[242048, 4833, 118, 3, 45, "Output"]
}, Open  ]],
Cell[242181, 4839, 220, 4, 51, "Text"],
Cell[242404, 4845, 380, 11, 78, "Text"],
Cell[242787, 4858, 216, 3, 45, "Input"],
Cell[CellGroupData[{
Cell[243028, 4865, 643, 19, 83, "Input"],
Cell[243674, 4886, 530, 16, 54, "Output"],
Cell[244207, 4904, 544, 16, 96, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[244788, 4925, 155, 3, 45, "Input"],
Cell[244946, 4930, 142, 3, 45, "Output"]
}, Open  ]],
Cell[245103, 4936, 263, 5, 51, "Text"],
Cell[245369, 4943, 503, 17, 79, "Text"],
Cell[245875, 4962, 216, 3, 45, "Input"],
Cell[CellGroupData[{
Cell[246116, 4969, 600, 18, 83, "Input"],
Cell[246719, 4989, 535, 16, 54, "Output"],
Cell[247257, 5007, 575, 17, 78, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[247869, 5029, 453, 10, 45, "Input"],
Cell[248325, 5041, 264, 6, 45, "Output"]
}, Open  ]],
Cell[248604, 5050, 722, 18, 87, "Text"],
Cell[249329, 5070, 381, 11, 78, "Text"],
Cell[249713, 5083, 218, 3, 45, "Input"],
Cell[CellGroupData[{
Cell[249956, 5090, 595, 18, 83, "Input"],
Cell[250554, 5110, 507, 16, 54, "Output"],
Cell[251064, 5128, 755, 24, 87, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[251856, 5157, 158, 3, 45, "Input"],
Cell[252017, 5162, 118, 3, 45, "Output"]
}, Open  ]],
Cell[252150, 5168, 192, 4, 51, "Text"],
Cell[252345, 5174, 236, 6, 110, "Text"],
Cell[252584, 5182, 531, 17, 73, "Text"],
Cell[253118, 5201, 218, 3, 45, "Input"],
Cell[CellGroupData[{
Cell[253361, 5208, 806, 24, 83, "Input"],
Cell[254170, 5234, 834, 24, 54, "Output"],
Cell[255007, 5260, 643, 17, 105, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[255687, 5282, 274, 7, 45, "Input"],
Cell[255964, 5291, 585, 16, 81, "Output"]
}, Open  ]],
Cell[256564, 5310, 398, 7, 86, "Text"],
Cell[CellGroupData[{
Cell[256987, 5321, 208, 4, 45, "Input"],
Cell[257198, 5327, 233, 5, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[257468, 5337, 415, 11, 45, "Input"],
Cell[257886, 5350, 5135, 95, 316, "Output"]
}, Open  ]],
Cell[263036, 5448, 470, 14, 73, "Text"],
Cell[263509, 5464, 216, 3, 45, "Input"],
Cell[CellGroupData[{
Cell[263750, 5471, 764, 23, 83, "Input"],
Cell[264517, 5496, 739, 22, 54, "Output"],
Cell[265259, 5520, 507, 15, 99, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[265803, 5540, 156, 3, 45, "Input"],
Cell[265962, 5545, 182, 4, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[266181, 5554, 439, 12, 45, "Input"],
Cell[266623, 5568, 5027, 93, 289, "Output"]
}, Open  ]],
Cell[271665, 5664, 129, 1, 51, "Text"],
Cell[271797, 5667, 527, 17, 78, "Text"],
Cell[272327, 5686, 220, 3, 45, "Input"],
Cell[CellGroupData[{
Cell[272572, 5693, 802, 24, 83, "Input"],
Cell[273377, 5719, 724, 22, 54, "Output"],
Cell[274104, 5743, 467, 14, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[274608, 5762, 156, 3, 45, "Input"],
Cell[274767, 5767, 180, 4, 45, "Output"]
}, Open  ]],
Cell[274962, 5774, 131, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[275118, 5779, 435, 11, 45, "Input"],
Cell[275556, 5792, 4958, 94, 288, "Output"]
}, Open  ]],
Cell[280529, 5889, 575, 18, 78, "Text"],
Cell[281107, 5909, 219, 3, 45, "Input"],
Cell[CellGroupData[{
Cell[281351, 5916, 993, 27, 83, "Input"],
Cell[282347, 5945, 945, 27, 54, "Output"],
Cell[283295, 5974, 743, 20, 110, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[284075, 5999, 300, 5, 45, "Input"],
Cell[284378, 6006, 339, 9, 45, "Output"]
}, Open  ]],
Cell[284732, 6018, 251, 5, 51, "Text"],
Cell[CellGroupData[{
Cell[285008, 6027, 216, 5, 45, "Input"],
Cell[285227, 6034, 348, 10, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[285612, 6049, 210, 4, 45, "Input"],
Cell[285825, 6055, 252, 6, 81, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[286114, 6066, 250, 5, 45, "Input"],
Cell[286367, 6073, 286, 8, 77, "Output"]
}, Open  ]],
Cell[286668, 6084, 310, 6, 51, "Text"],
Cell[286981, 6092, 291, 8, 77, "Input"],
Cell[CellGroupData[{
Cell[287297, 6104, 202, 5, 45, "Input"],
Cell[287502, 6111, 251, 7, 77, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[287790, 6123, 294, 8, 75, "Input"],
Cell[288087, 6133, 259, 7, 76, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[288383, 6145, 513, 15, 54, "Input"],
Cell[288899, 6162, 123, 2, 45, "Output"]
}, Open  ]],
Cell[289037, 6167, 242, 3, 51, "Text"],
Cell[CellGroupData[{
Cell[289304, 6174, 456, 12, 45, "Input"],
Cell[289763, 6188, 12251, 213, 312, "Output"]
}, Open  ]],
Cell[302029, 6404, 292, 9, 52, "Text"]
}
]
*)


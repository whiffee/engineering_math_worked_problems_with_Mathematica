(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    285039,       6696]
NotebookOptionsPosition[    271438,       6269]
NotebookOutlinePosition[    271880,       6288]
CellTagsIndexPosition[    271837,       6285]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
Note: In this problem set, expressions in green cells match corresponding \
expressions in the text answers.\
\>", "Text",
 Evaluatable->False,
 CellChangeTimes->{{3.7693377435788183`*^9, 3.7693377677636147`*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[TextData[{
 "Intro. The standard way to get an interpolating function in Mathematica is \
to ask for it. However, as I discuss in problem 7, there may be a better way, \
since the nonavailability of the equation for the interpolated function is a \
decided disadvantage. What I do here is to call an interpolated function, \
then use it to manufacture a list of 200 points, then employ the ",
 StyleBox["Fit", "Input"],
 " command to design a function which mimics the interpolated function, \
giving it the assignment of developing a curve from the 200 sample points, \
leveraging the advantage of its 20-exponent variable span in creating the \
curve. I thought this was smart when I did it, but I now think it is junk."
}], "Text",
 CellChangeTimes->{{3.763559198257246*^9, 3.763559251458461*^9}, {
  3.7635710442958107`*^9, 3.763571272024436*^9}, {3.763572345849709*^9, 
  3.763572366174361*^9}, {3.763572396628824*^9, 3.763572535384069*^9}, {
  3.763572585684556*^9, 3.763572631105082*^9}, {3.763648799452444*^9, 
  3.76364881798812*^9}, {3.763649887196129*^9, 3.763649890372324*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", " ", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.1", ",", ".3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.5", ",", ".6"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"-", ".2"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.763559261118595*^9, 3.763559274979682*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1`", ",", "0.3`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "0.6`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "0.2`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.763559277020618*^9, 3.763559289032749*^9}, 
   3.763569153933209*^9, 3.763633454955822*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "=", 
  RowBox[{"Interpolation", "[", "data", "]"}]}]], "Input",
 CellChangeTimes->{{3.763505379434452*^9, 3.763505380351564*^9}, {
  3.763563376046751*^9, 3.763563378868878*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["InterpolatingFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{{}, {}, {
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAotpLlPIyYj4AAEBRWCCAPnzLgjFp
saA/yNQGWEgRvD8zeMj4ImWxP53IXGYTk8s/TO2n0Q/YuT+B+zqhw1nTP/lc
W4xHEME/jv0nuaQe2D/5Y1FcZI7FP+ouNX78jdw/S5yzaMC/yT9xQt34gAPg
P0p1hKH5Ss4/9OclpySM4T8IfbYIfmDRP6zElRdjt+I/FNjg3h510z8m/bXj
+4TjP3aDQkuuttU/vLY9VYEX5D+BR9pV3dHXPz24z5kFXOQ/b+H9+3Di2T+n
6kWvd2LkP7TLWDjzH9w/Y3D+ohsp5D+izukSFTfeP+1sI5WZuuM/8xDZwZI9
4D9E5QkShQjjP4YlA0hNWuE/powmTpYi4j9uRkid12PiP24IB6BmHuE/gQ+p
PdmD4z9vGZaSGKzfP+nkJK2qkOQ/r+Ihnmf33D98Yrxn87PlP5cst56zudk/
AMsZcO7R5j/bKiYr6ELWP9k/kke53Oc/LKNnqx/O0j/dXCZq+/3oP7B5VrGE
r80/NobVWw0M6j8CD5pe9+/FP4CaSpvRFOs/lHCDF2UhvD/1VtslDTTsP5Ti
0K/pF6U/vx+HfxhA7T+AstK4KOmYv7SQTiSbYu4/7/d0r4KvuL+b7NsW0H/v
P7bOHSKWe8W/bCpCbOpE8D9g3sfSu9TMv58ypHIo1fA/ABdofXuT0b/9wJNg
zlvxP3DtZjBDONS/00Rmdc3f8T8gMeqnk3vWv7+cxi8Ib/I/kJreciyG2L/V
erTRqvTyP1jS3Y46/9m/AS0wGYmF8z+IdKCqCBPbv1dlOUjPDPQ/YB7j1USM
278mkyWebpH0P3BMZH2keNu/C5WfmUkh9T9wKLzVYrzavxodp3yMp/U/gBol
xr5k2b8+eTwFCzn2P3iDw7y3LNe/28q0tOLH9j+4qcygYyzUv6KiuksiTfc/
cBEXcTKY0L9/Tk6Ind33PwAad/jJoce/hoBvrIBk+D8gWJ0zcN65vwaoc/e8
6Pg/AD57fxtqdr+cowXoNHj5P4AA0CgfPr0/XCUlwBT++T9g0MlAle3OPzJ7
0j0wj/o/YCfuoRxy2T+AxmLipB37P7R/tL3eOeI/+ZeAboGi+z80hjT1Xuvn
P4c9LKCZMvw/jGKGe9W67j9AaWW5Gbn8P7WBuxlR2vI/DmkseNVK/T8qTXUm
R/v2P1Ve1l3q2f0/7e9pTb9m+z/G2Q0rZ1/+P8+10sjv3P8/TSnTnR/w/j/Q
RT75YYoCQP7+Jfg/d/8/0cmokT0pBUC2hub2////P8oyAs7//wdAQg749w==

                   "]]}}}, {
               DisplayFunction -> Identity, AspectRatio -> 1, 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                  AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                PlotRange -> {{0., 2.}, {-0.43043633353634014`, 
                 2.999999627534952}}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "2.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{{}, {}, {
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAotpLlPIyYj4AAEBRWCCAPnzLgjFp
saA/yNQGWEgRvD8zeMj4ImWxP53IXGYTk8s/TO2n0Q/YuT+B+zqhw1nTP/lc
W4xHEME/jv0nuaQe2D/5Y1FcZI7FP+ouNX78jdw/S5yzaMC/yT9xQt34gAPg
P0p1hKH5Ss4/9OclpySM4T8IfbYIfmDRP6zElRdjt+I/FNjg3h510z8m/bXj
+4TjP3aDQkuuttU/vLY9VYEX5D+BR9pV3dHXPz24z5kFXOQ/b+H9+3Di2T+n
6kWvd2LkP7TLWDjzH9w/Y3D+ohsp5D+izukSFTfeP+1sI5WZuuM/8xDZwZI9
4D9E5QkShQjjP4YlA0hNWuE/powmTpYi4j9uRkid12PiP24IB6BmHuE/gQ+p
PdmD4z9vGZaSGKzfP+nkJK2qkOQ/r+Ihnmf33D98Yrxn87PlP5cst56zudk/
AMsZcO7R5j/bKiYr6ELWP9k/kke53Oc/LKNnqx/O0j/dXCZq+/3oP7B5VrGE
r80/NobVWw0M6j8CD5pe9+/FP4CaSpvRFOs/lHCDF2UhvD/1VtslDTTsP5Ti
0K/pF6U/vx+HfxhA7T+AstK4KOmYv7SQTiSbYu4/7/d0r4KvuL+b7NsW0H/v
P7bOHSKWe8W/bCpCbOpE8D9g3sfSu9TMv58ypHIo1fA/ABdofXuT0b/9wJNg
zlvxP3DtZjBDONS/00Rmdc3f8T8gMeqnk3vWv7+cxi8Ib/I/kJreciyG2L/V
erTRqvTyP1jS3Y46/9m/AS0wGYmF8z+IdKCqCBPbv1dlOUjPDPQ/YB7j1USM
278mkyWebpH0P3BMZH2keNu/C5WfmUkh9T9wKLzVYrzavxodp3yMp/U/gBol
xr5k2b8+eTwFCzn2P3iDw7y3LNe/28q0tOLH9j+4qcygYyzUv6KiuksiTfc/
cBEXcTKY0L9/Tk6Ind33PwAad/jJoce/hoBvrIBk+D8gWJ0zcN65vwaoc/e8
6Pg/AD57fxtqdr+cowXoNHj5P4AA0CgfPr0/XCUlwBT++T9g0MlAle3OPzJ7
0j0wj/o/YCfuoRxy2T+AxmLipB37P7R/tL3eOeI/+ZeAboGi+z80hjT1Xuvn
P4c9LKCZMvw/jGKGe9W67j9AaWW5Gbn8P7WBuxlR2vI/DmkseNVK/T8qTXUm
R/v2P1Ve1l3q2f0/7e9pTb9m+z/G2Q0rZ1/+P8+10sjv3P8/TSnTnR/w/j/Q
RT75YYoCQP7+Jfg/d/8/0cmokT0pBUC2hub2////P8oyAs7//wdAQg749w==

                   "]]}}}, {
               DisplayFunction -> Identity, AspectRatio -> 1, 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                  AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                PlotRange -> {{0., 2.}, {-0.43043633353634014`, 
                 2.999999627534952}}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "2.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("InterpolatingFunction[{{0., 2.}}, <>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7635053819184723`*^9, 3.763559285943666*^9, 
  3.763561458257362*^9, 3.76356337990812*^9, 3.763569156727229*^9, 
  3.7636334670547867`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"datai", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", 
       RowBox[{"f", "[", "n", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "2", ",", "0.01"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.76356910486843*^9, 3.763569199777355*^9}, {
  3.763569564101989*^9, 3.7635695652917833`*^9}, {3.763569612737462*^9, 
  3.763569617216836*^9}}],

Cell["\<\
The interpolating polynomial is extremely long and cumbersome-looking. Just \
sticking it in here.\
\>", "Text",
 CellChangeTimes->{{3.763577398793985*^9, 3.763577431327365*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ip", "=", 
   RowBox[{"InterpolatingPolynomial", "[", 
    RowBox[{"datai", ",", "x"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.763576623583115*^9, 3.763576625189681*^9}, {
  3.763576676429261*^9, 3.763576677978985*^9}, {3.763576728114472*^9, 
  3.7635767298887997`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tf", "=", 
  RowBox[{"Fit", "[", 
   RowBox[{"datai", ",", 
    RowBox[{"{", 
     RowBox[{
      SuperscriptBox["x", "20"], ",", 
      SuperscriptBox["x", "19"], ",", 
      SuperscriptBox["x", "18"], ",", 
      SuperscriptBox["x", "17"], ",", 
      SuperscriptBox["x", "16"], ",", 
      SuperscriptBox["x", "15"], ",", 
      SuperscriptBox["x", "14"], ",", 
      SuperscriptBox["x", "13"], ",", 
      SuperscriptBox["x", "12"], ",", 
      SuperscriptBox["x", "11"], ",", 
      SuperscriptBox["x", "10"], ",", 
      SuperscriptBox["x", "9"], ",", 
      SuperscriptBox["x", "8"], ",", 
      SuperscriptBox["x", "7"], ",", 
      SuperscriptBox["x", "6"], ",", 
      SuperscriptBox["x", "5"], ",", 
      SuperscriptBox["x", "4"], ",", 
      SuperscriptBox["x", "3"], ",", 
      SuperscriptBox["x", "2"], ",", "x", ",", 
      SuperscriptBox["x", "0"]}], "}"}], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.763559516563356*^9, 3.7635595186572*^9}, {
   3.763562875814414*^9, 3.76356289314815*^9}, {3.7635632605863657`*^9, 
   3.763563264280426*^9}, {3.7635703287230043`*^9, 3.7635703343046207`*^9}, {
   3.763570442075769*^9, 3.763570448856518*^9}, {3.7635704878961763`*^9, 
   3.763570506197322*^9}, {3.763570577305479*^9, 3.7635706430454817`*^9}, 
   3.763570818917412*^9, 3.7635729932314987`*^9}],

Cell[BoxData[
 RowBox[{"0.0010151534457266637`", "\[VeryThinSpace]", "+", 
  RowBox[{"3.2200142438378037`", " ", "x"}], "+", 
  RowBox[{"11.112868205648208`", " ", 
   SuperscriptBox["x", "2"]}], "-", 
  RowBox[{"346.6536524869744`", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"3852.282718818384`", " ", 
   SuperscriptBox["x", "4"]}], "-", 
  RowBox[{"25880.484458356383`", " ", 
   SuperscriptBox["x", "5"]}], "+", 
  RowBox[{"114305.07846230593`", " ", 
   SuperscriptBox["x", "6"]}], "-", 
  RowBox[{"348454.8390760811`", " ", 
   SuperscriptBox["x", "7"]}], "+", 
  RowBox[{"755491.2969986838`", " ", 
   SuperscriptBox["x", "8"]}], "-", 
  RowBox[{"1.1832292771194556`*^6", " ", 
   SuperscriptBox["x", "9"]}], "+", 
  RowBox[{"1.3399308409093544`*^6", " ", 
   SuperscriptBox["x", "10"]}], "-", 
  RowBox[{"1.0748577390493772`*^6", " ", 
   SuperscriptBox["x", "11"]}], "+", 
  RowBox[{"569043.2315851868`", " ", 
   SuperscriptBox["x", "12"]}], "-", 
  RowBox[{"147154.54824809238`", " ", 
   SuperscriptBox["x", "13"]}], "-", 
  RowBox[{"37781.8793613799`", " ", 
   SuperscriptBox["x", "14"]}], "+", 
  RowBox[{"55021.65541433386`", " ", 
   SuperscriptBox["x", "15"]}], "-", 
  RowBox[{"25820.53031254499`", " ", 
   SuperscriptBox["x", "16"]}], "+", 
  RowBox[{"6817.261313475153`", " ", 
   SuperscriptBox["x", "17"]}], "-", 
  RowBox[{"1021.2907118840234`", " ", 
   SuperscriptBox["x", "18"]}], "+", 
  RowBox[{"71.97047357263213`", " ", 
   SuperscriptBox["x", "19"]}], "-", 
  RowBox[{"0.9013071455169982`", " ", 
   SuperscriptBox["x", "20"]}]}]], "Output",
 CellChangeTimes->{3.763572994057014*^9, 3.763633476718625*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"lm", "=", 
   RowBox[{"LinearModelFit", "[", 
    RowBox[{"data", ",", 
     RowBox[{"{", 
      RowBox[{
       SuperscriptBox["x", "4"], ",", 
       SuperscriptBox["x", "3"], ",", 
       SuperscriptBox["x", "2"], ",", "x", ",", 
       SuperscriptBox["x", "0"]}], "}"}], ",", "x"}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.7635714359023046`*^9, 3.7635714583361588`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p1", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"data", ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
     RowBox[{"Filling", "\[Rule]", "Bottom"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.763559634004703*^9, 3.7635596704045267`*^9}, {
  3.763562010394039*^9, 3.763562010632408*^9}, {3.763570532283533*^9, 
  3.763570532843511*^9}, {3.7635715268433104`*^9, 3.763571527065593*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p2", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"lm", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "2"}], "}"}], ",", " ", 
     RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Thickness", "[", "0.002", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7635595324800253`*^9, 3.763559569479851*^9}, {
   3.763559611472583*^9, 3.763559627246084*^9}, 3.763559674022376*^9, 
   3.763561746489723*^9, {3.7635617889928617`*^9, 3.763561828623865*^9}, {
   3.763561880660686*^9, 3.7635619504423637`*^9}, {3.763562017232544*^9, 
   3.763562017704382*^9}, {3.763562108263294*^9, 3.76356211672513*^9}, {
   3.7635713013190203`*^9, 3.7635713015347643`*^9}, {3.763571484085763*^9, 
   3.763571484252124*^9}, {3.763571531473497*^9, 3.763571550424074*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p3", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "2"}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Orange", ",", 
        RowBox[{"Thickness", "[", "0.002", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.76356183273199*^9, 3.763561865165361*^9}, {
  3.763561934469966*^9, 3.763561943786805*^9}, {3.763562020032621*^9, 
  3.7635620428898983`*^9}, {3.763562090671607*^9, 3.76356212018089*^9}, {
  3.7635713042868567`*^9, 3.763571304470463*^9}, {3.763571487228237*^9, 
  3.763571487347769*^9}, {3.7635715351054153`*^9, 3.763571555879963*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p4", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{"tf", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "2"}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Green", ",", 
        RowBox[{"Thickness", "[", "0.002", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.763562910155005*^9, 3.763562949467865*^9}, {
  3.76356300299457*^9, 3.7635631135429373`*^9}, {3.763563150004655*^9, 
  3.763563211026273*^9}, {3.763570385053968*^9, 3.7635704039630327`*^9}, {
  3.7635705459149218`*^9, 3.76357054623462*^9}, {3.763570905311531*^9, 
  3.763570908037657*^9}, {3.763570964715963*^9, 3.763570966306329*^9}, {
  3.7635712909435673`*^9, 3.763571308606269*^9}, {3.7635714897400503`*^9, 
  3.7635714898596687`*^9}, {3.763571539057019*^9, 3.7635715594398003`*^9}, {
  3.763571634741021*^9, 3.7635716374751053`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p5", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{"tf", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0.8", ",", "1.2"}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Green", ",", 
        RowBox[{"Thickness", "[", "0.002", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.763571730679186*^9, 3.763571753420574*^9}, {
  3.763571993608704*^9, 3.763572000392179*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p6", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0.8", ",", "1.2"}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Orange", ",", 
        RowBox[{"Thickness", "[", "0.002", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.763571784708138*^9, 3.763571804034152*^9}, {
  3.763572006073649*^9, 3.763572011495638*^9}}],

Cell["\<\
The blue of the unsophisticated linear model fit, lm, takes a different path \
than the interpolated function f, as shown on the left plot. The ornate fit \
function tf, with all its exponents, is not seen in the left chart, where at \
the presentation scale it is totally hidden by the interpolating curve f, and \
only peeks out in the right chart, where it emerges to smooth a visible \
corner in f. That visible orange corner, I believe, is evidence that the \
interpolation function assembles a sequence of piecewise functions to do the \
job, using as many as it finds necessary.\
\>", "Text",
 CellChangeTimes->{{3.7635715847818823`*^9, 3.763571620979732*^9}, {
  3.7635720763639593`*^9, 3.763572084875795*^9}, {3.763572184232432*^9, 
  3.7635723180322866`*^9}, {3.763572660848586*^9, 3.7635727608985577`*^9}, {
  3.763572792864621*^9, 3.763572794664691*^9}, {3.7635728292095757`*^9, 
  3.763572836110187*^9}, {3.763572941716111*^9, 3.763572959080538*^9}, {
  3.763648850730502*^9, 3.7636489219688807`*^9}, {3.7636491988029957`*^9, 
  3.763649199736471*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{"{", 
      RowBox[{"p2", ",", "p4", ",", "p3", ",", "p1"}], "}"}], "]"}], ",", 
    RowBox[{"Show", "[", 
     RowBox[{"{", 
      RowBox[{"p5", ",", "p6"}], "}"}], "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.763569482339224*^9, 3.76356950723993*^9}, {
  3.763570373694585*^9, 3.763570373996665*^9}, {3.7635707683592587`*^9, 
  3.763570769839129*^9}, {3.763570934109784*^9, 3.763570946699292*^9}, {
  3.7635718236747627`*^9, 3.763571978625287*^9}, {3.763576800647348*^9, 
  3.763576835075891*^9}, {3.763633501939608*^9, 3.7636335863659067`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Thickness[0.002]], 
        LineBox[CompressedData["
1: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
mobDEuTbaxYIhEJ8/7xnb4VCCfL/APJKTBY=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Thickness[0.002]], 
        LineBox[CompressedData["
1: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
tXaxMmuI0913M9CHXIFyli7xtXEbBsqVCauW1yfenmjGQO4T12eoGBN/D9Bg
oOaavlQ9c2KB73greu0Rf91hF7G2bFYrOnsevUw6TUzZWEdH3kIOO+fFEhs/
QnRkGtw1ln6GOEyskI7+7pplcu0csUvMJToKUN5dmXeJOD7XlY6cS4Ybq/KI
/8Z/xd+7XzV6pzUTF+WNNKOZ4g05b+hT9U90NaOfSgEewUxiSz16MypzLWR2
fyIO9y1sRrtoelUN3cRXmnybUfIruJM1TiybwKahX2fsXA3VRsj/OfVuE6pU
CqYFnCIuiBuvQ9F3Xzv/jSb+rtRSh0zVKB1n4ojdr96vQ+VaiV+vJxLPXbi9
DpUa3RSpu0jcqHm3Fr20rdNTzZuKS5h/RHnhK69yacQBut7V6HwL3dNe6fek
yyK13qJzJ5OUmpSJv//3txwlqGz6bKNK3NlSXY5iw595W2kSU897lKMTSmkH
LAym1q9NLUP7g2z9TSyJ3f1pJQgWfjyuFkQsL/n7BRpwKEsVqiSOMnuYjQod
pTYaHhkl63nv38Dtuugs3vyxSWevqW+EkSqXE/PfTvml9ifoTEW/5h7+Q/av
cOUzDDetlzk9+++kbZeN9kFAukLZsWLi7ANDg7CoTmGuwPUf6c9KGwEHev5f
2fEpr039C4NuNw+15Y2Teh/MplGR++PY2ZYT5P6VWotQXzcc2tZuTfyd5iJC
fWGiNu+RHbFt30ERar5szjWrHVPx1WdEqJnMzKfn9hJTeEiEGmwbx5U8Ruyu
tWY6dTV1z39iuVP595aIUpUfLxFm3JvK36sqSlVYzqzOfTAVX2EgSl381367
+RPiqGeOolTRIgvf2GLiMo1UUSpXSzdDuHnKFyXEqG3Xf7g204mzPywWozJn
PVa6zZyqL6YiRq3/qlpg2k6cct1cjFp8V67qVM/U/rbGiFGLpD+ds+ub6t+Y
JkZ9Gptpv2Jgar3nbTFqnqdUe9kQsXz+WzFqDo12O2Vk6n540sSo2RtSDriP
EWur8MSo1wqstLT/EVNHf4hRL8vN+DUxMbVf1jRx6v9/maPW
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         Thickness[0.002]], 
        LineBox[CompressedData["
1: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
         "]]}}}, {{}, 
      GraphicsComplexBox[{{0., 0.}, {0.1, 0.3}, {0.5, 0.6}, {1., -0.2}, {2., 
       3.}, {0., -0.2}, {0.1, -0.2}, {0.5, -0.2}, {2., -0.2}, {0., 0.}, {0.1, 
       0.3}, {0.5, 0.6}, {1., -0.2}, {2., 3.}}, {{{}, {}, {}, {}, {
          Directive[
           RGBColor[1, 0, 0], 
           Opacity[0.3]], 
          LineBox[{6, 1}], 
          LineBox[{7, 2}], 
          LineBox[{8, 3}], 
          LineBox[{9, 5}]}}, {{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          PointBox[{10, 11, 12, 13, 14}]}, {}}}], {}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 2}, {-0.5453577361959692, 2.9999994834944665`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],
   GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Thickness[0.002]], 
        LineBox[CompressedData["
1:eJwlz3881HccB/BvZMqjjbI9hsdWZ4wO8+MssQf7kuJqKbE8ZqjLb9X8CF1D
7Yb8WJJrxvw43SbEjIflUjJvnHN3y4wOdz7SabV5+HF+pFLYD5+PPz6Pz+P5
eL0+78/nYxoa5xehRVGUz9rC+1LeiqCkZJKmqELf66fkdNtU95PSUmxZ4bvh
cjqdnW9dXoZtzi0KltNbNpreqRBg27+d7SOnGaleg5U/YDdLwuzk9IEYvl5D
LTZvRm9RRpfvs+R23SFWG6TI6D3/+vlOj2BHJ/yXJaUPuW3aWL1jas0FzE2J
Evq1bbayTg62ipebJqZ7XNqLi4TYMsWjbzppb7v66MG/sBlbxxXtdFKr3oFE
i2l8/gPb+610qKHUJvU0dodn6ZlbdCBoTFybsBksMeMXepW6aHxsAZva4s2s
pzkGKcaTTjNrdmccCaqk40Vq5hAXm1o5QRfROT837ktpId7+8clz9InEsdCc
VeKOSz1Z8HdfasGSqwb/7/vlG2Vg85ILf6RjU001ZdWQmvTwFUdKnMuyboTk
LNFef91Z7FH/SzfBIXKqoOEgdsdz3d4WKBm9ojl5GdtdHnb7LnRt//aTAgU2
r29pEmCxmRLFGs2tWXi5eqUT+scf2jZ8ht2hZCvFEItM6gIqsKlB+wEJ3I6R
7uKoSc6vuSYFHYu4SL7+PPZxZpAc9C/UsixZ2O7qcvt7MMd4J/sLP5J72I/2
QmOdW3B0MjaliSnvg2chb7ZAMTanRGnWD28Em5VKW0jfWfKkHzZ7PPonA2Hz
Nkw0DACKV07OLxM73Au/D3a/pQe1mizg+3hCAwVE6I35OLth88rbxApI+C5O
FhmCTUU+DhuEEN0m8X7eAnnPg81DsKPbyntMSNz1o2AIIuoCfX/vIPNqwXIY
8ri7UcJjMm9pVTQMuVd8Znq0n2KzqxyVEJW/7at+C2xKadKsBPmtvGKn/SQf
OGOlgg1WtLNPDPFhDV8FxpnCQKM80qcEyyrQZX6kXVhP8sXDR0fgy6Uc1ule
kkuqakagtz7rz5ezJLcVvBqB5/VtJk76i9h8WxrBTvFb+j3ElFaAO4LPR2K1
AwyI59M8ELTrmM4kbyX93XJPBFnHLv4qMiR5RhAbgZHBIc4uI2L9qCMIXBPV
VR+aEk8YhyGIzXUu7V73dftwBMJr/PxP3yN+4BWBQKfXk5tkRixKiELQZ36D
3fw+8c7OUwg4w/HTjlbEc15JCK7OyNXidR88moygW8ts0N+a2DzsLAKm3VBb
og3xnvPnEDzNdsm/aUvs+FMaAvOKq+medsThovMIApqnzyrWrQcXENwdFxxf
tCeW9PMQzL544Z/hQKxSfY2A8bov25BFHD2ejsDPrNa1ct2xExkIMl20HBwd
iZ9pMhH8DygrMmM=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         Thickness[0.002]], 
        LineBox[CompressedData["
1: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
h2KWU0n8P+9EZH4=
         "]]}}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.8, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0.8, 1.2}, {-0.4143633730709553, 0.19859746870497474`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.7635719581621733`*^9, 3.7635719796325903`*^9}, 
   3.7635720175199947`*^9, {3.763576808436277*^9, 3.76357683747104*^9}, {
   3.763633511084538*^9, 3.763633587285302*^9}}]
}, Open  ]],

Cell[TextData[{
 "1. Linear interpolation. Calculate ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["p", "1"], "[", "x", "]"}], " ", "in", " ", "example", " ", 
    "1", " ", "and", " ", "from", " "}], TraditionalForm]]],
 "it Log[9.3]."
}], "Text",
 CellChangeTimes->{{3.763492709150886*^9, 3.7634927578362627`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell["\<\
The real substance of problem 1 is just a log, worked out by hand according \
to the very similar example 1 on p. 810 and amounting to\
\>", "Text",
 CellChangeTimes->{{3.7636489370155277`*^9, 3.763648957207151*^9}, {
  3.763648987374564*^9, 3.76364900157346*^9}, {3.763649046133964*^9, 
  3.763649068683814*^9}}],

Cell["0.4(Log[9.0]) + 0.6(Log[9.5]) =", "Text",
 CellChangeTimes->{{3.763575151169256*^9, 3.763575187614503*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{".4", 
   RowBox[{"(", "2.1972", ")"}]}], "+", 
  RowBox[{".6", 
   RowBox[{"(", "2.2513", ")"}]}]}]], "Input",
 CellChangeTimes->{{3.763575038764327*^9, 3.763575064676219*^9}}],

Cell[BoxData["2.22966`"], "Output",
 CellChangeTimes->{3.7635750665056343`*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"Log", "[", "9.3", "]"}], "-", "%"}], "]"}]], "Input",
 CellChangeTimes->{{3.763575197037004*^9, 3.763575211766337*^9}}],

Cell[BoxData["0.0003544001592103996`"], "Output",
 CellChangeTimes->{3.763575212518635*^9}]
}, Open  ]],

Cell["The error, noted above, is not listed in the text answer.", "Text",
 CellChangeTimes->{{3.76364911770757*^9, 3.7636491303702393`*^9}}],

Cell[TextData[{
 "3.  Quadratic interpolation. Gamma function. Calculate the Lagrange \
polynomial ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["p", "2"], "(", "x", ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " for the values \[CapitalGamma][1.00]=1.0000, \[CapitalGamma][1.02]=0.9888, \
\[CapitalGamma][1.04]=0.9784 of the gamma function ((24) in appendix A3.1) \
and from it approximations of \[CapitalGamma][1.01] and \[CapitalGamma][1.03]."
}], "Text",
 CellChangeTimes->{{3.763492760581215*^9, 3.763492940590745*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[TextData[{
 "As can be seen, I elected to use an ",
 StyleBox["InterpolatingPolynomial", "Input"],
 " instead of a Lagrange method."
}], "Text",
 CellChangeTimes->{{3.7636492311602793`*^9, 3.763649256590481*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"inpp", "[", "x_", "]"}], "=", 
  RowBox[{"InterpolatingPolynomial", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1.00", ",", "1.000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.02", ",", "0.9888"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.04", ",", "0.9784"}], "}"}]}], "}"}], ",", "x"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.763578727985923*^9, 3.763578772166581*^9}, {
  3.7635788341798077`*^9, 3.763578835491536*^9}}],

Cell[BoxData[
 RowBox[{"0.9784`", "\[VeryThinSpace]", "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "0.5399999999999984`"}], "+", 
     RowBox[{"1.0000000000000278`", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1.`"}], "+", "x"}], ")"}]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1.04`"}], "+", "x"}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.763578774299239*^9, {3.763578836682209*^9, 3.763578842421362*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"inpp", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0.96", ",", "1.05"}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"Thickness", "[", "0.006", "]"}]}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"1.00", ",", "1.000"}], "}"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"1.02", ",", "0.9888"}], "}"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"1.04", ",", "0.9784"}], "}"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Orange", ",", 
        RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"1.01", ",", "0.9943"}], "}"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Orange", ",", 
        RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"1.03", ",", "0.9835"}], "}"}], "]"}]}], "}"}]}], "}"}]}]}],
   "]"}]], "Input",
 CellChangeTimes->{{3.763578801870565*^9, 3.763578825211968*^9}, {
  3.763578937144168*^9, 3.763578965269068*^9}, {3.763578997117099*^9, 
  3.7635790407295*^9}, {3.763579071448056*^9, 3.763579380072613*^9}, {
  3.76357951578631*^9, 3.763579566463318*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0, 0], Thickness[0.006], Opacity[1.], LineBox[CompressedData["

1:eJwV03tQDVgcB/CetLIeqY3QTrupGxK9EPXVuttGD4+SdYUUpTKyTazEnUKq
2ex1bVtdr15rUzc1m6IuuXroJWxbm/a22/SUrvaeHy5FO2aPP86c+cyZOef8
vud3rEJjtu7X09HR8ePj4zxHkjS2pUqDBOVkacZ+wsSs/Cc/cE8T9mUkcfde
qCt/wG2UaJ9wiLs4Uz9+dbUGgZZ6G7y5v7qabGil0GCJ9qfRyX2E2BtplnRH
gw4DkUcY9x8PpZt/VGowUxHj6hhGOG+UX9HaqIFTXG1IewhB6Tp7YUKXBsEt
spHSnYRLZ8ODrYY1qNDrSlAHEWzsLIzFrzWwDN9yWriVEJa4QGSiz+CjbZ1Y
50fwe2eQeHk2w8YKN43MmzBqs9ZrtxXDgrS6vMz1BKfC9oSu5Qyrr6q9yz0I
Szb4pQrBUPm34V8CN0JnjrmL2p/hgvW2FqELYfHc5qrkXQxlTYIOxXKCw2CX
/Gk0Q88M5Qr/pYRnoc7Ym8Dwj6N/aqotYaPBsaK+NIYXRSYH539JCBFNq8iS
8fvtep8ZZElYpD9pb1jE8MinOLNsHiHrUbv4wG0GEwf5uT1mhDu+4zH6TQw7
0hsOVs8ipP+rtyrjT4aK+YFxkdMJM9fvyg0eZpBYFFc0TCWse2F2rEfLsPNu
6lJ3fYJEJJpzXZcgrN4aZfqB4em8djfxJ4QI4weORm8Y3o4q/J7wff9T2pws
GGM4OBiQPWnO15MPjx8ZYliz0vRm/eeEet/+Hdd6GPoufVM9hdc1PNPTOr6D
oVeULxleRnhSLDxa0srgvL7kSo4rwf9KyYR5HUPIWrusTndC5bHuSmsFw7Dk
Uci1rwkK+uCe8RuDp3bI7KUvQffxidACnoM2Sa43N5CQMZl8fCSPQSdKplTx
d4/2dkyX8twGQ99HzOV9Yv089otuKYPlrVN9L6MIv0doN6XwnJdbiIVesYQL
eff2ticxyAoFfUfiCaralQ6bjvNcJO99PJMII5MBjati+XkpKEhJJZg4Bdko
ohieqeStkecJVYdzqSiUwWF7k51tNgHas98/FjFsGtoWtyeHcM+4MTslgKH5
obHEqZCgt2pWZLkPg3mD88+nSgmBRyXOh4UMNcPTO0oqCfK3YeI97gx3907v
j60h9G//trDehfeVRqy62UA4ERpcfnsZw2J7L49ObtMUxx3Z3HXRn+ZruVUv
Z+jGc79+finS5QFBLVMFuHEHDlZN3OJe5FxjWGPPYNb96jNFI8FAWnaxbilD
dm14wP1mwr4x77THi3k+Ostu93FndY1sLuNu9nhjodtCGJ9ybt557nd3Tg94
cru7qW9s4Rbdyv2unntQzQY67fi/kaskja0EWZxA3CPgfTia9/rZR9cuCbrL
7SuI3D71IaEp0MXhCvfJa+OW3tzX/XYO7ebuzTEtbeE+k/ZKNGDLcLS3Z7aa
+8VUwZp67hkLC45MayMktoUt+IXb4+IKdx9uB4Gmfz93V/dEbjT3BuXaRi/u
Q+b3DdK5pZelclvuKUEpB0q4De+PSY24czL829q4f7Xzjx+1YfgfSiGCmw==

     "]]}},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.96, 0.972},
  DisplayFunction->Identity,
  Epilog->{{
     RGBColor[0, 0, 1], 
     PointSize[0.02], 
     PointBox[{1., 1.}]}, {
     RGBColor[0, 0, 1], 
     PointSize[0.02], 
     PointBox[{1.02, 0.9888}]}, {
     RGBColor[0, 0, 1], 
     PointSize[0.02], 
     PointBox[{1.04, 0.9784}]}, {
     RGBColor[1, 0.5, 0], 
     PointSize[0.03], 
     PointBox[{1.01, 0.9943}]}, {
     RGBColor[1, 0.5, 0], 
     PointSize[0.03], 
     PointBox[{1.03, 0.9835}]}},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0.96, 1.05}, {0.9735000008816328, 1.0247999987877552`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.763579130290814*^9, {3.763579173041082*^9, 3.763579201740733*^9}, {
   3.7635792409159327`*^9, 3.763579288860545*^9}, 3.76357938206931*^9, {
   3.7635795312855377`*^9, 3.763579567113387*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"inpp", "[", "1.01", "]"}]], "Input",
 CellChangeTimes->{{3.763578883442133*^9, 3.763578888968589*^9}}],

Cell[BoxData["0.9943`"], "Output",
 CellChangeTimes->{3.7635788895440702`*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"inpp", "[", "1.03", "]"}]], "Input",
 CellChangeTimes->{{3.7635788982804728`*^9, 3.763578910215251*^9}}],

Cell[BoxData["0.9835`"], "Output",
 CellChangeTimes->{3.763578910786027*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["\<\
The green cells above match the answers in the text. The function plot looks \
almost linear in the small interval.\
\>", "Text",
 CellChangeTimes->{{3.763579468524787*^9, 3.763579480475274*^9}, {
  3.763579591149664*^9, 3.763579640731277*^9}}],

Cell[TextData[{
 "5.  Linear and quadratic interpolation. Find ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", "0.25"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", "0.75"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " by linear interpolation of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", "x"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " with ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "0"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "=0, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "=0.5, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "2"], "=", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and from it ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", "0.25"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", "0.75"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". Compare the errors. Use 4S-values of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", "x"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.7634929439115667`*^9, 3.763493087842155*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell["First look at the answers I will be looking for.", "Text",
 CellChangeTimes->{{3.7635922612773657`*^9, 3.7635922712999*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], "=", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", "x"}]]}]], "Input",
 CellChangeTimes->{{3.763586954007042*^9, 3.763586965776635*^9}, {
  3.763587177731641*^9, 3.7635871799701777`*^9}}],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  RowBox[{"-", "x"}]]], "Output",
 CellChangeTimes->{3.7635869670624247`*^9, 3.763587182121434*^9, 
  3.7733245950851*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "0.25", "]"}]], "Input",
 CellChangeTimes->{{3.763588972608398*^9, 3.763588975834341*^9}}],

Cell[BoxData["0.7788007830714049`"], "Output",
 CellChangeTimes->{3.763588976453412*^9, 3.773324597584715*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "0.75", "]"}]], "Input",
 CellChangeTimes->{{3.763588984434708*^9, 3.7635889909620667`*^9}}],

Cell[BoxData["0.4723665527410147`"], "Output",
 CellChangeTimes->{3.763588991348378*^9, 3.773324600329811*^9}]
}, Open  ]],

Cell["\<\
I\[CloseCurlyQuote]m only working with the three points. Just to take a look \
at their range,\
\>", "Text",
 CellChangeTimes->{{3.7635922960908117`*^9, 3.763592304995001*^9}, {
  3.773324906492927*^9, 3.773324918403207*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"f", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0.5", ",", "1"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.763586970989785*^9, 3.76358701072038*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "0.6065306597126334`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     FractionBox["1", "\[ExponentialE]"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.763587012801334*^9, 3.763587185579339*^9, 
  3.773324604021434*^9}]
}, Open  ]],

Cell["\<\
I can create the IP. Preserving values expressed in function form makes it \
much more accurate than pasting in the above output.\
\>", "Text",
 CellChangeTimes->{{3.763592314050169*^9, 3.763592321698242*^9}, {
  3.773324790872508*^9, 3.773324802126718*^9}, {3.773324882693617*^9, 
  3.7733248916440887`*^9}, {3.7733249287467833`*^9, 3.7733249442185087`*^9}, {
  3.7733251309198217`*^9, 3.773325131404974*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"inpp2", "[", "x_", "]"}], "=", 
  RowBox[{"InterpolatingPolynomial", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", 
        RowBox[{"f", "[", "0.5", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        FractionBox["1", "\[ExponentialE]"]}], "}"}]}], "}"}], ",", "x"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.773324609064321*^9, 3.773324627874053*^9}, {
  3.7733246721109247`*^9, 3.773324687858255*^9}, {3.773324841158208*^9, 
  3.7733248476857643`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "\[ExponentialE]"], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     FractionBox["1", "\[ExponentialE]"], "+", 
     RowBox[{"0.30963624349235097`", " ", "x"}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "x"}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.7733246914741993`*^9, 3.77332484893235*^9}]
}, Open  ]],

Cell["\<\
And plot it. Thankfully it is interpolation, not extrapolation, and the \
values sought are bracketed, so the flaky curve match should not be a problem \
within the interval of interest, which is 0 to 1. The text uses both linear \
and quadratic interpolation, with much better numbers produced by the \
quadratic.\
\>", "Text",
 CellChangeTimes->{{3.7635923304533987`*^9, 3.763592400167947*^9}, {
  3.763593304638444*^9, 3.7635933577704268`*^9}, {3.7636560686347427`*^9, 
  3.7636560938971157`*^9}, {3.769337125770883*^9, 3.769337138729385*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p1", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"inpp2", "[", "x", "]"}], ",", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "x"}]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "2"}], ",", "3"}], "}"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Blue", ",", 
         RowBox[{"Thickness", "[", "0.008", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Orange", ",", 
         RowBox[{"Thickness", "[", "0.004", "]"}]}], "}"}]}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7635870951340637`*^9, 3.7635871384913607`*^9}, {
   3.763587212186936*^9, 3.763587215945088*^9}, {3.763587415748741*^9, 
   3.7635874170910177`*^9}, 3.773324961042612*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 0, 1], Thickness[0.008], Opacity[1.], LineBox[CompressedData["

1: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
xOPhEfRr6UfLRgr8D4aPhwY=
     "]]}, 
   {RGBColor[1, 0.5, 0], Thickness[0.004], Opacity[1.], 
    LineBox[CompressedData["
1:eJwB4QQe+yFib1JlAgAAAE0AAAACAAAA+s6b5P///79dfzuGZI4dQOpEMeq3
+f+/WbDTcMyCHUDausbvb/P/v7qkt+c4dx1Auabx+t/m/7/fqEBzH2AdQHh+
RxHAzf+/0viOzyIyHUD2LfM9gJv/v8SfIxEB1xxA8YxKlwA3/79+h418DyQc
QOhK+UkBbv6/zZYfTxTLGkDegMxmMrr8v/Stp2jEFhhAYg/g3EQj+7/pvGIn
kM8VQPIWm8tSlPm/pFz4KWDJE0CK2MtxkOP3vz/1N/h/zRFAsPI8ca9P9r/O
wLlzjyEQQN7GIyj+mfS/QwNs+xT+DEAZFLJXSOzyv61Xg73iGgpA4rmA4HNb
8b/2T8ra4qsHQGYzikGeUe+/H9kV8slJBUAlpJN0Fybsv18McEfLRwNA/Abs
mIcK6b8ztQ4n/34BQOPdLyxXq+W/MtHZkh5+/z/mZfRx6YXiv0AA31Eui/w/
8sNITbY53r8v67tmfKj5P0igRpmHh9e/HkkGF/wb9z/X3kVK3kjRvz3o4ukA
9vQ/Cws4sucFxb/6C60kI9vyP7E5zjM7wrC/4I3eYBwV8T9pBPAKu0ilP7OB
+4Jvsu4/rVYjWp/Fwj9/YJWriaLrP87nhycFUs8/jzFRZ+YN6T9XVJ+cdnbW
Pw/uW9Ulh+Y/j1J5QGXQ3D+qCY27TWbkP0y22gAzheE/3a1BYSiC4j9AT43y
0+XkP0vo9Z+Np+A/Fze/MbIM6D9azs67RC/eP9+qBQIxd+s/qRLSuuIg2z+O
LP3guNHuP3g7twDlbdg/kf65Bj/58D+jJ363gCfWP9Osf+Vxq/I/iCnlpQ/t
0z+HAgVrw0D0P2kja051DNI/L9/idxnO9T/wgs7GTGHQP88BS80/ffc/ZYVl
k7B8zT/hy3LJhA/5P7cYsm6Suso/69skDprD+j/iPoJcgwfIP2eTlvnNWvw/
aDnGtmDBxT/X0WBsBur9PyZT8u0qvMM/P1a1Jw+b/z/WbdmlT8HBPwzB5ESb
lwBAIjE9Wz0WwD/1+TMal3IBQHTYOgo96bw/WHYvM5VJAkDLvui4qwe6P3TG
ip8iEgNA/HFolA6atz+MOSswmOsDQJC9H9RjObU/XYArFJ22BEBn1YqNnDiz
P6gK2DukfQVABamCaetwsT/vt8mHk1UGQBEdj889ZK8/7jgbJxIfB0C3sQjA
PHOsP6gDSN6VIgdAI/Y93b9mrD9iznSVGSYHQIHlrnVIWqw/12POAyEtB0B2
GaUOakGsP8COgeAvOwdABS/Hne4PrD+S5OeZTVcHQJCTdRv7ras/NpC0DImP
B0CXV44fEe6qP/Ba4cMMkwdAbYsQDz/iqj+qJQ57kJYHQOeL0y5y1qo/H7tn
6ZedB0Ad3gD2576qPwjmGsamqwdATxlzYxGQqj/aO4F/xMcHQBAmysFZM6o/
lAauNkjLB0DibDum2SeqP07R2u3LzgdA0i70ll4cqj/DZjRc09UHQLAxYJR3
Bao/rJHnOOLjB0AH8lTB5depP2ZcFPBl5wdAhfstyo3MqT8gJ0Gn6eoHQArN
r806wak/lLyaFfHxB0AWwvC7o6qpP06Hx8x09QdAHshTol+fqT8IUvSD+PgH
QFdap3oglKk/whwhO3z8B0Cozb9C5oipP33nTfL//wdA2Wpy+LB9qT+5S2lJ

     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->300,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-2, 3}, {0., 7.3890553449453735`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7635871215106573`*^9, 3.763587142153769*^9}, {
   3.7635872036485443`*^9, 3.763587217047668*^9}, 3.7635874182468567`*^9, 
   3.773324962312146*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"inpp2", "[", "0.25", "]"}]], "Input",
 CellChangeTimes->{3.773324709610862*^9}],

Cell[BoxData["0.7839130646380448`"], "Output",
 CellChangeTimes->{3.773324712137315*^9, 3.773324856491095*^9, 
  3.7733249749305058`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"0.7839130646380448`", "-", "0.7788007830714049`"}]], "Input",
 CellChangeTimes->{{3.7733247434818707`*^9, 3.7733247588827353`*^9}}],

Cell[BoxData["0.005112281566639898`"], "Output",
 CellChangeTimes->{{3.7733247520789824`*^9, 3.773324760226185*^9}, 
   3.773324977724409*^9},
 Background->RGBColor[1, 1, 0.85]]
}, Open  ]],

Cell["\<\
text error reported for above is 0.0245, greater than yellow. So in this case \
the Mathematica method is superior.\
\>", "Text",
 CellChangeTimes->{{3.763592573331603*^9, 3.763592602929577*^9}, {
  3.7693371580243263`*^9, 3.769337165839657*^9}, {3.773325006578189*^9, 
  3.773325023192503*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"inpp2", "[", "0.75", "]"}]], "Input",
 CellChangeTimes->{{3.7635873098952208`*^9, 3.763587310373746*^9}, {
   3.7635888967810993`*^9, 3.7635889002528763`*^9}, 3.773325031944203*^9}],

Cell[BoxData["0.46785278522376594`"], "Output",
 CellChangeTimes->{3.763587311260662*^9, 3.7635889013451157`*^9, 
  3.773325032946516*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "-", "0.4723665527410147`"}]], "Input",
 CellChangeTimes->{{3.763592482614771*^9, 3.763592496231509*^9}, 
   3.7733250485452023`*^9}],

Cell[BoxData[
 RowBox[{"-", "0.004513767517248746`"}]], "Output",
 CellChangeTimes->{3.763592498744191*^9, 3.773325052166556*^9},
 Background->RGBColor[1, 1, 0.85]]
}, Open  ]],

Cell["\<\
text error for above is 0.0148, greater than yellow. Again, in posting a \
smaller error, the linear interpolation of the Mathematica method shows its \
superiority.\
\>", "Text",
 CellChangeTimes->{{3.7635926095050507`*^9, 3.7635926333606377`*^9}, {
  3.769337170503889*^9, 3.769337218183261*^9}, {3.773325076310748*^9, 
  3.7733251030703707`*^9}}],

Cell[TextData[StyleBox["Supposing it is okay to recognize this as Exp, or to \
something resembling it, there is another way to do this with FindFit",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.763589848224079*^9, 3.763589867158687*^9}, {
  3.763629914825523*^9, 3.763629930211321*^9}, {3.76363243955265*^9, 
  3.763632440008437*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[TextData[{
 "same data used in this little isolated section on experimental method of ",
 StyleBox["FindFit", "Input"]
}], "Text",
 CellChangeTimes->{{3.763592662944728*^9, 3.7635926654876547`*^9}, {
  3.763593378092305*^9, 3.763593405448626*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5`", ",", "0.6065306597126334`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       FractionBox["1", "\[ExponentialE]"]}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{3.763589924175205*^9}],

Cell["a model is chosen similar to the appearance of the data,", "Text",
 CellChangeTimes->{{3.763592676119141*^9, 3.763592701102661*^9}, 
   3.763650104517188*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"model", "=", 
   RowBox[{"a", " ", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "k"}], " ", "t"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.76359038439223*^9, 3.763590410853951*^9}}],

Cell["\<\
and parameters are solved for, which might make the model usefully compliant.\
\
\>", "Text",
 CellChangeTimes->{{3.76359271523567*^9, 3.7635927374535933`*^9}, {
  3.763630017936721*^9, 3.7636300375251637`*^9}, {3.763650101605052*^9, 
  3.763650108909175*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fit", "=", 
  RowBox[{"FindFit", "[", 
   RowBox[{"data", ",", "model", ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "k"}], "}"}], ",", "t"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindFit", "::", "fmgz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered a gradient that is effectively zero. The \
result returned may not be a minimum; it may be a maximum or a saddle point. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindFit/fmgz\\\", \
ButtonNote -> \\\"FindFit::fmgz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.763590257593141*^9, {3.763590403322713*^9, 3.763590415083482*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", "\[Rule]", "1.`"}], ",", 
   RowBox[{"k", "\[Rule]", "1.`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.763590257601124*^9, {3.763590403389028*^9, 3.7635904150962353`*^9}}]
}, Open  ]],

Cell["\<\
The model is calculated, resulting in a curve function description.\
\>", "Text",
 CellChangeTimes->{{3.7635927466447887`*^9, 3.763592766996606*^9}, 
   3.763650082232638*^9, {3.76365011568476*^9, 3.7636501165571213`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"modelf", "=", 
  RowBox[{"Function", "[", 
   RowBox[{
    RowBox[{"{", "t", "}"}], ",", 
    RowBox[{"Evaluate", "[", 
     RowBox[{"model", "/.", "fit"}], "]"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{
   RowBox[{"{", "t", "}"}], ",", 
   RowBox[{"1.`", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "1.`"}], " ", "t"}]]}]}], "]"}]], "Output",
 CellChangeTimes->{3.763589994601509*^9, 3.763590026378961*^9, 
  3.76359026622619*^9, 3.763590423590124*^9}]
}, Open  ]],

Cell["\<\
With only trivial parameters in this case, the method does not show to \
advantage.\
\>", "Text",
 CellChangeTimes->{{3.763592790841806*^9, 3.763592815435013*^9}, {
  3.763650085709776*^9, 3.763650092749422*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"modelf", "[", "t", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"Map", "[", 
     RowBox[{"Point", ",", "data"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.763590077818568*^9, 3.763590078120345*^9}, {
  3.763590280475588*^9, 3.7635902867219543`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwVjnk01AkAxx1t0eBZx+hXoTKTTSlPsauWb4eopGKIjp3tYLZiHRttVnZX
Vi/bhI7XbqWeGiR57kru34wcWwxzGI/JbdQYBrmaxW/bPz7v88fnn8/qU+G+
wTpaWlren/nf+4Lft9Z8CHZzBl1JUWoM5R0+1U24w+wyc+STRg06TZpcTPjh
ptqsbHJKjY0uZpkPiCA4cs0LVcNqbG3ZXHCTiIIgz9ZYIVOj5r7A6TrxB6Jn
Ri8s5KuREH/t4p/EbQwa6tFen1AjKEpNJBEZkCki4h7XjkLv9t5HY+MleGV5
/VLkpRG8bHH09LSqxku2Q9yxwyoEJsg7BNdqUR5dGmq3Yxjhheft/55shJPG
KipylRITqW0N2tpCxITn99ZZfkADWVct/FaEj9adhRXG73E2Zq/hEZUEo2f6
pcmmQyD1HancH2WoZ9uwGhwUyOLVLixndmCF4KBNifsgttMrH7Py5ChqKL+z
IXIA9vXy0jq7bhy8ELfQ8LQfku2s0aejPQivOypZ0tGH0KUhIqlDHzjxj4yG
rfvwpj2g0ii5H9W2D2Ue7F6wPAJ7BwYGYGTKNFqa3QPn9GsB6QwFQu0vGooW
9aBn4ZbkzG9DkFossy563oXBvUIeXfAezwrXtVknvkPB3e6Y1tVKvDisivth
jxyZV3WT1v0yjE6z3QTbqhNTp48qOeUqLFFu3Mox7QDN/YpvocUo2sSLY5Pm
23HJeNCg97gaY+vLcpIXtcOgar2WzHsMXL9BRg8hg+uFg/MCzRg2WhS4cpht
SMvg8mzSxpFTNO9+cp8UbP8tTfpeE+ikeX3D5UjwXBp8q2p6Aga6QjBSxXB5
W6CjuPMRzJq12stbRFi1mzN1y33y83eG61d6IjhtcbpRophEZnHKVR3/VnRP
XG/kJU5hIFLHhJHbAtVmn0TCcRqJ/SNdrFkh1g7bK7XF06hy85ylVTajlhEt
ioifwYawZpPZqCakSKSnfRmzGNzZLdQceAs1q+aGTu0sFnn46fS5vEGRv/ku
l8hP6HwS676H+Ae8poQHfSYalOr5/VRKb8RM/fFYE74G0sgcrlC/AT03qqeM
w/6Fa/RxLb5BPaZbtxGXjeZg27LNx8KuDhG319TEVMzBRE81xnB7DYumNcYD
7HlYOseXlJ2rBUuaO7dyYR4ju8bPnecJMPH9o1B5zgLKK80NJWI+qk/kJxrt
p5Ad6/BUQvBRJgz16jpAgTBFdhadjxdudl/m+VDwLvByjjHlI3dlZpp3AIXG
K5oFa0M+7rXfK+ae+tw5Y4jS4iP60JXepTEUZJFHzn09RGL99u9cl2RRCBMq
i2yfk1ibv1xXlk1hzD3oJK2IxBqr9oasZxRKImruq/NILJvz9fMopJCUUVX8
KpvE4tI9IYkVFGLjbcL80kj0btpyV1dMYegQc4aXQEL+cJwtllJwER0ITP2d
RLthPoPXTkHRJ94VF0eieXhdwc4uCk9+TXkV+DOJiifW9fEfKLxmMC3pISRK
6e+4PioKllcTmhefIVGceM93tZqC5+VY/dkgEjmnzbtqJimkp8hWyNkkMkUi
XuoMhZcBtI/Nx0ik70g9e0JDIWTVRRY/kERagfcmh3kK9c1fuL7wJ/GXNW2K
oihY7E/Lz/El8R+GxXhk
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.1},
  DisplayFunction->Identity,
  Epilog->{
    PointBox[{0, 1}], 
    PointBox[{0.5, 0.6065306597126334}], 
    PointBox[
     NCache[{1, E^(-1)}, {1, 0.36787944117144233`}]]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 2}, {0.1353352887605019, 0.9999999591836743}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.76359005937643*^9, 3.763590078918439*^9}, {
  3.763590270915565*^9, 3.763590287520689*^9}}]
}, Open  ]],

Cell[TextData[{
 "If I got this far I would be able to look at ",
 Cell[BoxData[
  StyleBox[
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", "t", "}"}], ",", 
     StyleBox[
      RowBox[{"1.`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "1.`"}], " ", "t"}]]}],
      Background->RGBColor[1, 1, 0.85]]}], "]"}],
   Background->RGBColor[1, 1, 0.85]]],
  CellChangeTimes->{3.763589994601509*^9, 3.763590026378961*^9, 
   3.76359026622619*^9, 3.763590423590124*^9}],
 " and understand that that function would put points on the curve, then \
define it directly."
}], "Text",
 CellChangeTimes->{{3.763590612208515*^9, 3.763590629431007*^9}, {
  3.763591445527978*^9, 3.763591485548266*^9}, {3.763591542994619*^9, 
  3.763591549330468*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"m", "[", "t_", "]"}], "=", 
  RowBox[{"Exp", "[", 
   RowBox[{"-", "t"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7635906335961246`*^9, 3.763590648430238*^9}}],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  RowBox[{"-", "t"}]]], "Output",
 CellChangeTimes->{3.763590649864686*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"m", "[", "0.25", "]"}]], "Input",
 CellChangeTimes->{{3.763590654783252*^9, 3.763590664893982*^9}}],

Cell[BoxData["0.7788007830714049`"], "Output",
 CellChangeTimes->{3.763590666242043*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"0.7788007830714049`", "-", "0.7788007830714049`"}]], "Input",
 CellChangeTimes->{3.769337387010145*^9}],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{3.769337390113535*^9},
 Background->RGBColor[1, 1, 0.85]]
}, Open  ]],

Cell[TextData[{
 "In the scenario imagined, there would be no error with ",
 StyleBox["FindFit", "Input"],
 "."
}], "Text",
 CellChangeTimes->{{3.76933745862988*^9, 3.769337508898636*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"m", "[", "0.75", "]"}]], "Input",
 CellChangeTimes->{{3.763590669031311*^9, 3.763590675837743*^9}}],

Cell[BoxData["0.4723665527410147`"], "Output",
 CellChangeTimes->{3.763590676641217*^9}]
}, Open  ]],

Cell[TextData[{
 "A barrel of shot fish. But the modeling part is intriguing. If I could \
recognize a curve, get reasonable k and a values, it might be a good way to \
do an interpolation. From the documentation I see that ",
 StyleBox["WorkingPrecision", "Input"],
 ", ",
 StyleBox["PrecisionGoal", "Input"],
 ", and ",
 StyleBox["AccuracyGoal", "Input"],
 " are options for ",
 StyleBox["FindFit", "Input"],
 ", unlike ",
 StyleBox["InterpolatingPolynomial", "Input"],
 ", which could mean better performance. In problem 9 I will return to ",
 StyleBox["FindFit", "Input"],
 "."
}], "Text",
 CellChangeTimes->{{3.763590739875222*^9, 3.763590745963244*^9}, {
  3.763590784834086*^9, 3.7635908422884607`*^9}, {3.763591271260466*^9, 
  3.763591324401483*^9}, {3.763592835546206*^9, 3.763592838490616*^9}, {
  3.7636300917383947`*^9, 3.763630092850078*^9}, {3.7636301435446672`*^9, 
  3.763630150814992*^9}, {3.76365015287814*^9, 3.7636501627317953`*^9}}],

Cell[TextData[{
 "7.  Interpolation and extrapolation. Find the quadratic polynomial that \
agrees with Sin[x] at x=0, ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    FractionBox["\[Pi]", "4"],
    FontSize->21], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    FractionBox["\[Pi]", "2"],
    FontSize->21], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", and use it for the interpolation and extrapolation of Sin[x] at x = ",
 Cell[BoxData[
  FormBox["-", TraditionalForm]],
  FormatType->"TraditionalForm"],
 Cell[BoxData[
  FormBox[
   StyleBox[
    FractionBox["\[Pi]", "8"],
    FontSize->21], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ",",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox[" ",
     FontSize->21], 
    RowBox[{
     StyleBox[
      FractionBox["\[Pi]", "8"],
      FontSize->21], ","}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    FractionBox[
     RowBox[{"3", "  ", "\[Pi]"}], "8"],
    FontSize->21], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ",",
 Cell[BoxData[
  FormBox[
   StyleBox[
    FractionBox[
     RowBox[{"5", "  ", "\[Pi]"}], "8"],
    FontSize->21], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". Compute the errors."
}], "Text",
 CellChangeTimes->{{3.763493115284623*^9, 3.76349325069352*^9}, {
  3.763493301880241*^9, 3.763493319967943*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[TextData[{
 "First I try the ",
 StyleBox["Interpolation", "Input"],
 " command in Mathematica, which works well, but has one significant \
drawback. I can\[CloseCurlyQuote]t get the actual equation for the curve \
which Mathematic creates. There are two methods of interpolating that are \
built in, spline and hermite. I test them both out on the problem points."
}], "Text",
 CellChangeTimes->{{3.763504237475486*^9, 3.763504339263658*^9}, {
   3.763505399486781*^9, 3.763505447037593*^9}, {3.763583935335877*^9, 
   3.763583949733082*^9}, {3.763630173317607*^9, 3.763630212707347*^9}, {
   3.7636487314648867`*^9, 3.7636487644851503`*^9}, 3.763656187735627*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "=", 
  RowBox[{"Interpolation", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"Sin", "[", "0", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        FractionBox["\[Pi]", "4"], ",", 
        RowBox[{"Sin", "[", 
         FractionBox["\[Pi]", "4"], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        FractionBox["\[Pi]", "2"], ",", 
        RowBox[{"Sin", "[", 
         FractionBox["\[Pi]", "2"], "]"}]}], "}"}]}], "}"}], " ", ",", 
    RowBox[{"Method", "\[Rule]", "\"\<Spline\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.763500554091956*^9, 3.76350064029597*^9}, {
  3.763500815172566*^9, 3.7635008155949373`*^9}, {3.763502451074669*^9, 
  3.763502466144794*^9}, {3.7635026476228*^9, 3.7635026537004137`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Interpolation", "::", "inhr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Requested order is too high; order has been reduced to \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"2\\\", \\\"}\\\"}]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Interpolation/inhr\\\", \
ButtonNote -> \\\"Interpolation::inhr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.763500641627458*^9, 3.76350081676492*^9, {3.763502455926716*^9, 
   3.763502467067993*^9}, 3.763502656258195*^9, 3.763505649688731*^9}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["InterpolatingFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> 
               False, Background -> GrayLevel[0.93], Frame -> True, 
               FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    FractionBox["\[Pi]", "2"]}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> 
               False, Background -> GrayLevel[0.93], Frame -> True, 
               FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    FractionBox["\[Pi]", "2"]}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"BSpline\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "                           Pi\nInterpolatingFunction[{{0, --}}, <>]\n    \
                       2"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.763500641702414*^9, 3.763500816779797*^9, {3.763502455981097*^9, 
   3.763502467081491*^9}, 3.763502656292285*^9, 3.763505649704043*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"Interpolation", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"Sin", "[", "0", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        FractionBox["\[Pi]", "4"], ",", 
        RowBox[{"Sin", "[", 
         FractionBox["\[Pi]", "4"], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        FractionBox["\[Pi]", "2"], ",", 
        RowBox[{"Sin", "[", 
         FractionBox["\[Pi]", "2"], "]"}]}], "}"}]}], "}"}], " ", ",", 
    RowBox[{"Method", "\[Rule]", "\"\<Hermite\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.763502675523649*^9, 3.7635026855861483`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Interpolation", "::", "inhr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Requested order is too high; order has been reduced to \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"2\\\", \\\"}\\\"}]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Interpolation/inhr\\\", \
ButtonNote -> \\\"Interpolation::inhr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.763502687788418*^9, 3.7635056522476254`*^9}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["InterpolatingFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> 
               False, Background -> GrayLevel[0.93], Frame -> True, 
               FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    FractionBox["\[Pi]", "2"]}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> 
               False, Background -> GrayLevel[0.93], Frame -> True, 
               FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    FractionBox["\[Pi]", "2"]}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "                           Pi\nInterpolatingFunction[{{0, --}}, <>]\n    \
                       2"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7635026878008966`*^9, 3.7635056522625093`*^9}]
}, Open  ]],

Cell["\<\
I plot the results of my tests with the two methods of interpolation. There \
is no visible difference between them for this set of points.\
\>", "Text",
 CellChangeTimes->{{3.7635044486929283`*^9, 3.763504483930971*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p1", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"f", "[", "x", "]"}], ",", 
      RowBox[{"g", "[", "x", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "1", ",", "6"}], "}"}], ",", " ", 
    RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Blue", ",", 
         RowBox[{"Thickness", "[", "0.02", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"White", ",", 
         RowBox[{"Thickness", "[", "0.005", "]"}]}], "}"}]}], "}"}]}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", " ", 
    RowBox[{"AxesOrigin", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.763501527878895*^9, 3.7635015350929337`*^9}, {
  3.763502697473998*^9, 3.7635028038624496`*^9}, {3.763505549346752*^9, 
  3.7635055635942593`*^9}, {3.7635056275217*^9, 3.763505630144199*^9}, {
  3.763505675296447*^9, 3.7635056890959797`*^9}, {3.7635057520142183`*^9, 
  3.763505767843981*^9}, {3.763506029461182*^9, 3.76350603019448*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 0, 1], Thickness[0.02], Opacity[1.], LineBox[CompressedData["
1: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
+6lY07QuRyikoU0mYz0+IVTsfwTALh4=
     "]]}, 
   {GrayLevel[1], Thickness[0.005], Opacity[1.], LineBox[CompressedData["
1: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
jCabz6di/xiO93gFU/D/AbD3L7U=
     "]]}},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0., 6}, {-5.1028817730371525`, 1.0088834544320735`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.763505632190668*^9, 3.763505656673189*^9}, 
   3.763505690290028*^9, 3.7635057693849688`*^9, 3.763506030874411*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7635056172647467`*^9, 3.763505618000448*^9}}],

Cell["\<\
I put the points into a list for a linear model fit with a second order \
polynomial. The theory I saw on StackExchange was that the number of points \
indicated the necessary degree of the polynomial. With three points I would \
then need a cubic polynomial. But I got error messages when trying to use a \
cubic, and the text answer only used a square.\
\>", "Text",
 CellChangeTimes->{{3.763504495442563*^9, 3.763504646142453*^9}, {
  3.763649448792577*^9, 3.763649452272606*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"Sin", "[", "0", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      FractionBox["\[Pi]", "4"], ",", 
      RowBox[{"Sin", "[", 
       FractionBox["\[Pi]", "4"], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      FractionBox["\[Pi]", "2"], ",", 
      RowBox[{"Sin", "[", 
       FractionBox["\[Pi]", "2"], "]"}]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7635032040273447`*^9, 3.763503205370328*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["\[Pi]", "4"], ",", 
     FractionBox["1", 
      SqrtBox["2"]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["\[Pi]", "2"], ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.763503206177335*^9, 3.763506085178524*^9}]
}, Open  ]],

Cell["\<\
So now I call for a square polynomial, and plot it. The plots of the two \
approaches to interpolating show different sections of the real domain, and \
would be a little trouble to overlay them. \
\>", "Text",
 CellChangeTimes->{{3.763504654973522*^9, 3.763504717828003*^9}, {
  3.763505241246409*^9, 3.763505251667399*^9}, {3.763505960256402*^9, 
  3.763505986556926*^9}, {3.763506121426008*^9, 3.763506158751503*^9}, {
  3.763506316021522*^9, 3.763506316722764*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"lm", "=", 
   RowBox[{"LinearModelFit", "[", 
    RowBox[{"data", ",", 
     RowBox[{"{", 
      RowBox[{
       SuperscriptBox["x", "2"], ",", "x"}], "}"}], ",", "x"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"data", ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
     RowBox[{"Filling", "\[Rule]", "Bottom"}]}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"lm", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "125"}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "250"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.763503250822063*^9, 3.763503256920801*^9}, {
  3.7635033322788563`*^9, 3.763503368725222*^9}, {3.763504673221884*^9, 
  3.763504675917117*^9}, {3.763506049940963*^9, 3.7635060714035273`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, 
    GraphicsComplexBox[{{0., 0.}, {0.7853981633974483, 0.7071067811865476}, {
     1.5707963267948966`, 1.}, {0.7853981633974483, 0.}, {1.5707963267948966`,
      0.}, {0., 0.}, {0.7853981633974483, 0.7071067811865476}, {
     1.5707963267948966`, 1.}}, {{{}, {}, {}, {}, 
       {RGBColor[1, 0, 0], Opacity[0.3], LineBox[{4, 2}], 
        LineBox[{5, 3}]}}, {{}, 
       {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], 
        AbsoluteThickness[1.6], PointBox[{6, 7, 8}]}, {}}}], {}}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->250,
  Method->{},
  PlotRange->{{0, 1.5707963267948966`}, {0, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7635032607203417`*^9, {3.763503336938505*^9, 3.763503369588326*^9}, 
   3.7635046772916393`*^9, {3.763506072735703*^9, 3.763506094077474*^9}}]
}, Open  ]],

Cell["\<\
It is easy to acquire the equation for the linear model fit polynomial, which \
has to be a significant advantage. Except for the first, very negligible \
term, the equation matches the text answer, and I\[CloseCurlyQuote]m going to \
go green on it.\
\>", "Text",
 CellChangeTimes->{{3.763504726211391*^9, 3.763504839904339*^9}, {
  3.76350634513764*^9, 3.763506347097777*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "[", "lm", "]"}]], "Input",
 CellChangeTimes->{{3.7635034084894943`*^9, 3.763503412325329*^9}}],

Cell[BoxData[
 RowBox[{"1.5484310538296716`*^-15", "+", 
  RowBox[{"1.164012859946624`", " ", "x"}], "-", 
  RowBox[{"0.33574886736280646`", " ", 
   SuperscriptBox["x", "2"]}]}]], "Output",
 CellChangeTimes->{3.763503413015128*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["\<\
Now I summarize my experience with the two forms of fitting by placing them \
both in a grid, along with test values. The test values require the function \
to act as extrapolating, as will as interpolating, functions.\
\>", "Text",
 CellChangeTimes->{{3.763504870510829*^9, 3.763504890062524*^9}, {
  3.763506192174428*^9, 3.763506195222447*^9}, {3.763506227549233*^9, 
  3.763506255324583*^9}, {3.763506541486313*^9, 3.763506581539111*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"g1", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<x\>\"", ",", "\"\<Interpola\>\"", ",", "\"\<Sin[x]\>\"", ",", 
     "\"\<Error\>\"", ",", "\"\<LinModFit\>\"", ",", "\"\<Error\>\""}], 
    "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.763503836792158*^9, 3.7635038440067997`*^9}, {
   3.763503896086739*^9, 3.7635039503959923`*^9}, 3.7635040578740683`*^9, {
   3.770325833664057*^9, 3.770325880315933*^9}, 3.7703259481554728`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"g2", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"N", "[", 
        RowBox[{"f", "[", "x", "]"}], "]"}], ",", 
       RowBox[{"N", "[", 
        RowBox[{"Sin", "[", "x", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"N", "[", 
         RowBox[{"Sin", "[", "x", "]"}], "]"}], "-", 
        RowBox[{"N", "[", 
         RowBox[{"f", "[", "x", "]"}], "]"}]}], ",", 
       RowBox[{"lm", "[", "x", "]"}], ",", 
       RowBox[{
        RowBox[{"N", "[", 
         RowBox[{"Sin", "[", "x", "]"}], "]"}], "-", 
        RowBox[{"lm", "[", "x", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["\[Pi]", "8"]}], ",", 
         FractionBox["\[Pi]", "8"], ",", 
         FractionBox[
          RowBox[{"3", " ", "\[Pi]"}], "8"], ",", 
         FractionBox[
          RowBox[{"5", " ", "\[Pi]"}], "8"]}], "}"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.763503686261077*^9, 3.763503698515399*^9}, {
   3.763503732004456*^9, 3.7635037491169558`*^9}, 3.7635040616028347`*^9, {
   3.7703258869320507`*^9, 3.7703258956678047`*^9}, 3.770325953290207*^9}],

Cell["\<\
The interpolated function and the linear fitted polynomial, in this case, \
produce exactly the same results, both in terms of calculated values, and in \
terms of calculated errors.\
\>", "Text",
 CellChangeTimes->{{3.763505009827712*^9, 3.7635050932800713`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Prepend", "[", 
    RowBox[{"g2", ",", "g1"}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7703259103387957`*^9, 3.770325932562155*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"x\"\>", "\<\"Interpola\"\>", "\<\"Sin[x]\"\>", "\<\"Error\"\>", "\<\
\"LinModFit\"\>", "\<\"Error\"\>"},
    {
     RowBox[{"-", 
      FractionBox["\[Pi]", "8"]}], 
     RowBox[{"f", "[", 
      RowBox[{"-", "0.39269908169872414`"}], "]"}], 
     RowBox[{"-", "0.3826834323650898`"}], 
     RowBox[{
      RowBox[{"-", "0.3826834323650898`"}], "-", 
      RowBox[{"f", "[", 
       RowBox[{"-", "0.39269908169872414`"}], "]"}]}], 
     RowBox[{"lm", "[", 
      RowBox[{"-", 
       FractionBox["\[Pi]", "8"]}], "]"}], 
     RowBox[{
      RowBox[{"-", "0.3826834323650898`"}], "-", 
      RowBox[{"lm", "[", 
       RowBox[{"-", 
        FractionBox["\[Pi]", "8"]}], "]"}]}]},
    {
     FractionBox["\[Pi]", "8"], 
     RowBox[{"f", "[", "0.39269908169872414`", "]"}], "0.3826834323650898`", 
     RowBox[{"0.3826834323650898`", "\[VeryThinSpace]", "-", 
      RowBox[{"f", "[", "0.39269908169872414`", "]"}]}], 
     RowBox[{"lm", "[", 
      FractionBox["\[Pi]", "8"], "]"}], 
     RowBox[{"0.3826834323650898`", "\[VeryThinSpace]", "-", 
      RowBox[{"lm", "[", 
       FractionBox["\[Pi]", "8"], "]"}]}]},
    {
     FractionBox[
      RowBox[{"3", " ", "\[Pi]"}], "8"], 
     RowBox[{"f", "[", "1.1780972450961724`", "]"}], "0.9238795325112867`", 
     RowBox[{"0.9238795325112867`", "\[VeryThinSpace]", "-", 
      RowBox[{"f", "[", "1.1780972450961724`", "]"}]}], 
     RowBox[{"lm", "[", 
      FractionBox[
       RowBox[{"3", " ", "\[Pi]"}], "8"], "]"}], 
     RowBox[{"0.9238795325112867`", "\[VeryThinSpace]", "-", 
      RowBox[{"lm", "[", 
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "8"], "]"}]}]},
    {
     FractionBox[
      RowBox[{"5", " ", "\[Pi]"}], "8"], 
     RowBox[{"f", "[", "1.9634954084936207`", "]"}], "0.9238795325112867`", 
     RowBox[{"0.9238795325112867`", "\[VeryThinSpace]", "-", 
      RowBox[{"f", "[", "1.9634954084936207`", "]"}]}], 
     RowBox[{"lm", "[", 
      FractionBox[
       RowBox[{"5", " ", "\[Pi]"}], "8"], "]"}], 
     RowBox[{"0.9238795325112867`", "\[VeryThinSpace]", "-", 
      RowBox[{"lm", "[", 
       FractionBox[
        RowBox[{"5", " ", "\[Pi]"}], "8"], "]"}]}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.763504981983086*^9, {3.770325933766429*^9, 3.770325957277014*^9}}]
}, Open  ]],

Cell["\<\
All the cells in the grid above match the corresponding numbers in the text \
answer.\
\>", "Text",
 CellChangeTimes->{{3.7635051082556133`*^9, 3.763505139214806*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[TextData[{
 "9.  Error function (35) in appendix A3.1. Calculate the Lagrange polynomial \
",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["p", "2"], "[", "x", "]"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " for the 5S-values f[0.25] = 0.27633, f[0.5] = 0.52050, f[1.0] = 0.84270 \
and from ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["p", "2"], "[", "x", "]"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " an approximation of f[0.75] (= 0.71116)."
}], "Text",
 CellChangeTimes->{{3.763493327842944*^9, 3.763493483102512*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[TextData[{
 "This one is kind of a disappointment. Granted, being given only three \
points makes it challenging for any interpolation method, but I guess what \
bothers me is that the text seems to do better with the three points than ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " does. \n\nI start off with the interpolating polynomial."
}], "Text",
 CellChangeTimes->{{3.7635832723625107`*^9, 3.763583310296454*^9}, {
  3.763630374954033*^9, 3.7636303965527973`*^9}, {3.773332849391447*^9, 
  3.773332877736073*^9}, {3.773333033177093*^9, 3.773333038079624*^9}, {
  3.7733332806111298`*^9, 3.773333285297496*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"inpp", "[", "x_", "]"}], "=", 
  RowBox[{"InterpolatingPolynomial", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.25", ",", "0.27633"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "0.52050"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.0", ",", "0.84270"}], "}"}]}], "}"}], ",", "x"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.763579929358286*^9, 3.7635799835543423`*^9}, {
  3.763581497168047*^9, 3.763581504705143*^9}, {3.763581664852861*^9, 
  3.763581670153994*^9}, {3.7635817030351143`*^9, 3.763581707481509*^9}, {
  3.763586465593856*^9, 3.763586470903874*^9}, {3.7635865551671*^9, 
  3.76358656961292*^9}}],

Cell[BoxData[
 RowBox[{"0.8427`", "\[VeryThinSpace]", "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"0.75516`", "\[VeryThinSpace]", "-", 
     RowBox[{"0.44303999999999943`", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "0.25`"}], "+", "x"}], ")"}]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1.`"}], "+", "x"}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.7635865707037907`*^9}]
}, Open  ]],

Cell["\<\
A plot shows the problem. On the left below, things look well, the IP is \
tracking the Erf function in what looks like a close manner, with just a hint \
of the underlying blue IP in the range of the problem values. But on the \
right, where a zoomed inset of the problem-specific value is shown, the IP is \
doing what turns out to be a poor job.\
\>", "Text",
 CellChangeTimes->{{3.763583325968894*^9, 3.76358345368393*^9}, {
  3.763630419535469*^9, 3.76363044716606*^9}, {3.763649518961246*^9, 
  3.763649519222672*^9}, {3.773332938766714*^9, 3.773332941908998*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p1", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"inpp", "[", "x", "]"}], ",", 
       RowBox[{"Erf", "[", "x", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1.05"}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Blue", ",", 
          RowBox[{"Thickness", "[", "0.004", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Orange", ",", 
          RowBox[{"Thickness", "[", "0.004", "]"}]}], "}"}]}], "}"}]}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.76358008143976*^9, 3.76358008224587*^9}, {
   3.763582730620723*^9, 3.763582866526067*^9}, {3.763582957061055*^9, 
   3.763582958364998*^9}, 3.763583207405416*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p2", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"inpp", "[", "x", "]"}], ",", 
       RowBox[{"Erf", "[", "x", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1.05"}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.745", ",", "0.755"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.68", ",", "0.73"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Blue", ",", 
          RowBox[{"Thickness", "[", "0.004", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Orange", ",", 
          RowBox[{"Thickness", "[", "0.004", "]"}]}], "}"}]}], "}"}]}], ",", 
     RowBox[{"Epilog", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Blue", ",", 
          RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
          RowBox[{"Point", "[", 
           RowBox[{"{", 
            RowBox[{"0.75", ",", "0.70929"}], "}"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", 
          RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
          RowBox[{"Point", "[", 
           RowBox[{"{", 
            RowBox[{"0.75", ",", "0.71116"}], "}"}], "]"}]}], "}"}]}], 
       "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.763582987267694*^9, 3.763583013980423*^9}, {
   3.763583066002726*^9, 3.763583078167742*^9}, {3.763583165206069*^9, 
   3.763583166622224*^9}, 3.763583213155904*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{"p1", ",", "p2"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.763583226890094*^9, 3.763583235652032*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 0, 1], 
        Thickness[0.004]], 
       LineBox[CompressedData["
1:eJwVkGs0lAkAhsdQjtTU2XY7mkSGKJdWi0o1vYOooyw7pLSkE4qEES0ls5Tk
usllhsrurCG11NZGUjRuaQrjNnKLMca4faWPtLQr1v54z/Pj+fOcV+9ECNuP
SqFQnBb3Pz+pWt5lUg/viTmZTn6u54vQWphqvM4KVdOi1xeP8EWdXNPEObo9
WD/nNC8Z54mEHRPxSvohHE908TBewRNpqLQs6aH7oYojOVPpmimq4LHspfRz
qErVyNQcTBNlyWd9W+lXwFr4XH9taZyIqt4x3UzPAkVm3fQvMwghvYY/acwX
gNVnZfv2ggD1A2ZtB9wfYMDn5Nz76Xu4rK/SXZVeitkY51rd6FJo74ufa2M9
QwtbzSYjtAIjXcKK9w5ViNNLvVV6uhrFXK9ElmEtStyjeSva6+CY8tHJePYF
xOkpfLv1YoRXGuFajhh3dBakxowGaMpKnteENaAkL8no9FEJzAwGToeulyCv
FhJOYQsyRsOu9nq2QOu181nG123Ytz1f4PeyFdpz5eML2e2o5uu73FvbjhLx
7v7gL1Kc5TQ7eCZIUWx8o6sp8g1o0QHl7mQHSrJ/0DYe7gTnJruGxuoEK0hw
kGfZDY3v/L/aUtwF1uTqgoDsHvj3NM4uo/Qg4YOwdWV/L+b/8TJ05vQi1rCQ
kG3vQ4xzX3N/91tkWamet4nrh7i0aKWpST+GaGoqfz+SwSHzNm8gWwbteGvC
IGoA9razHpsjBlA9Jtt+lCaHl1umYYKOHCblgeq3bsqRllfPo0vlMP/8YnnQ
1kHcPr+hLTl6EFbJkRfVng6iK2XVQ3MrBTjiC59SHBWgPJ1xihpToPq+IF4p
VUCTs/Rx/vUhyOsO0erYQ9h6oqhaZb8SDLp5j6RzCDv7IrKZU0rUGETsqnZR
wvrsLjPdnGFkKm5NOdQp4WqX5Wf5/QhOHOtUt94zDJfcNQGbZkbg/7DHoql4
GAEWW1a53B8FZdKJaq43Aj920CV3jzEcjbOZ4SWNwD1Z+BdVZRwC/w1PeiZG
4EPhxA8+HsekTpmb6ZFRuM77bPz9OAH5ij/DmGWjOLZj4lSG1jtsXqk3V0kf
g3dKiL9J0zvQBFoN/ZFjsAvQssw79x47Rbpz3KYx2F46LDxoOoEkzcKoVxvH
YWDwvK/jzQS8Tm0z+hQ+jjnZujdq3A/Yd2j3vTjROGYJ9fJHa0nQwgft55cT
8CnOOuMWTEKT6StbzSZQGL/gJAkhIfDzcbZxJUAcD/h2fyiJhfIbscFuBMK+
YU7tCiehM/zQVOxO4DJ3KEL/AgnZgUu5kT8SELpYXJ66QiLQqWisyZeAYrol
Jy2XROEmHVPHCAJGzTujlv1Ggv+aoQiJJBB4N98zTkCCne3tmXWewEevSN1I
IYlNZbFZsigCqi91C7zvkjhC9WeExhDQzwl+sKWURJWk4nZCIoFTYV3X7zwm
4WW2N/aPJAJFTrZhjCck6stUdRqTCVhQ12xb84zErLPJr7RfCNgFVj77UrXY
m6pdnpZO4Kq9UW5EDYl2R7+CBxkEGnSvcydrSWRYDLu2ZBJwlfraKOtJhCWk
zdD4BPj3JQxv8aKfLn9nlk2gN2GHWvcrEtyUdfkHcwjo+uQp2Q0kLF1K1wfe
WPyXufxlYyOJUlz1SLxJ4D+KnXGa
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[1, 0.5, 0], 
        Thickness[0.004]], 
       LineBox[CompressedData["
1:eJwVkH081AcAxs/LkpdJKnEVLS+N0iqqi/R4GWoSnTAr4+OlmBY5OmWzYt6W
1JU7rN0qd6fEzGqZujL0IYZzx3l/ueNc5/yk31D5bMrsj+fz/PV8n8/zfBQR
T4/WpFAovkv6319rOZa5aAbvj7/8r+TUm5D9kNy5bLduF6a09AmJeA9607bm
LlA9YV1aL+WKvcHrns5SUgMRfqyQliEOhq6G+IMBajSMHE6XMsQn8YTj6iml
JuNEjXF7hJgJ9uh8lISaCWHsLYvd4mxo6nTPdVDZEHSK/srvKET8oM1Z3fcC
yHR++ELddhdNcvtOn6AqsM9Z75bE3EeGpUZ/3bWHcFmWtF7vYA3We2ctdLoK
sdzYR3+4pBaqPt6Tl151KKPN+t35tAEVaaG5rjbPYG7Gs7mR2IjP8mZ97eYb
EcqJuheX14ykp5txpbgZKuODUxfjWqEv+722gdGKOWQc+TBdBHsr+VdnNoig
aWzdJqgU4/oEI3vwuBiulcupN1d2wnsP/1b0cwmG16o7ivK7UF9o6f+LWRdq
6dX7FS+lSEzo8DqeI13iskpF0T0w/Db2URDZjblpri1f0ouEG/QGQ9deCML2
Hl6xsR+6O2OMt1X04ciab9rtMwcQM9A2r0cZwFR4qptu+yDe/xNq45cwiB9v
cz2odsO44DfcMdI/BEY/zynw/AiaH5av2LplBHXdK+10K2XwKijlyItkkEUI
3VPPy+HpPh9iy5TD3qxZR7FiFKFHC2xyzEfBXzxkdODmKK6WNHGo0lHU+KTM
Bu4ZQ+m5jZ2Xvh1Do4xLU9SPoS/P6LftuxTIe+Wjf+yoApTHb31T1QpoOxq+
CZUroJ+wrJrPGseQR0FLXtg4dkSU12scUKK8hSJ+rByH0zCzyGVGiZi9zlJG
mBJ7E53tLYpfgL9vlVdylxIBHuxox8MqfN7MoXF9X8CfaxL78VsVYoYWZ0yf
vECswzYj/8oJJE2lnDDerkI0/ev0oBA1SD07ubhIhaBLvPuaGpPQY1WKdy6o
EElJyBqrnsSJ7sA2etQEAt5HWt8OJxBidu3PNQ0T+JI2ffK66RR+FXkf1rBS
IywvPmZL+xRWurVYJl9QwyPW1LEk+SVYg75zSV1quKcH8w5tnUbwq/yAedtJ
WFnVDnf3TKNnZLEwkzmJBdm6Hu20V1gmYLM4dZOYJ3QePTAjYVsSsPwnAwKR
FexTR0+TCOUbPsr3J3Ana9FXFE/CnJdw748jBIjw2E8OnCGRu5AfKacTYKxx
mXFOIvGz41r7HYEEMtLGmZbnSWibz24QhxDg+TtkzGSSqBI2pWpFElDMiYuv
ckmw3jH9XJMJbO5wStW7SeK7qUCPiLME4sr4x7+/RcLlrGAxg0lgNjTFIoW3
lKdVSZrOEdB6biEIKyNxRbh66GAaAcvi01XbHpIwDTO/4plN4CSjj3W3mkRj
VaNBVA6Bcl93xqYaEnmJTgHpuQQcNE12mwhJqIN4TrWXCHjEPRW+qyPh7LY6
yeEqgWzPzVxmw1JfRTPNn0Wg1YKV9vczEiZPU5pOXSMQII1yUzYt7X89tk9Q
QKCwUrQprJnE6IO71vVsAoM5NO3+FhJ1Hhd7hzgELCJLlPRWEnaJifT5wqV/
XQyet7WRGDNI56wqJvAfSklpoA==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 1.05}, {-0.023219971950857232`, 0.862736391887657}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],
   GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 0, 1], 
        Thickness[0.004]], 
       LineBox[{{0.7058888231886711, 0.68}, {0.7061916240159639, 
        0.6802096117527179}, {0.7282964691204178, 0.695095553698547}, {
        0.748920636416111, 0.7085939419535352}, {0.7712784114861339, 
        0.7228012127884824}, {0.7829591370710849, 0.73}}]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[1, 0.5, 0], 
        Thickness[0.004]], 
       LineBox[{{0.7032242234140685, 0.68}, {0.7061916240159639, 
        0.6820627564101369}, {0.7282964691204178, 0.696974382901554}, {
        0.748920636416111, 0.7104611154635565}, {0.7712784114861339, 
        0.7246181489384882}, {0.7800658519193558, 0.73}}]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.746, 0.68}, DisplayFunction :> 
     Identity, Epilog -> {{
        RGBColor[0, 0, 1], 
        PointSize[0.02], 
        PointBox[{0.75, 0.70929}]}, {
        RGBColor[0, 0, 1], 
        PointSize[0.02], 
        PointBox[{0.75, 0.71116}]}}, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 200, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0.745, 0.755}, {0.68, 0.73}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}]},
  
  "RowDefault"]], "Output",
 CellChangeTimes->{
  3.763583236889378*^9, {3.7635864895413857`*^9, 3.7635865048073273`*^9}, 
   3.763586581246921*^9}]
}, Open  ]],

Cell["\<\
The two cells below tell the tale. Only one digit of significance agreement \
(or I guess two, if I rounded that far). I tried several other interpolation \
devices, but could not improve it much until I entered the Erf points for x = \
0.7 and x = 0.8. Then I got agreement to four significant digits. Which seems \
pretty lame, contrived. If the interpolated function is not a known one, then \
it looks like I\[CloseCurlyQuote]m kind of walking in the dark.\
\>", "Text",
 CellChangeTimes->{{3.763583514675111*^9, 3.763583648782301*^9}, {
  3.7635837430990877`*^9, 3.763583750130884*^9}, {3.763583854073174*^9, 
  3.7635838841829*^9}, {3.7636495548644333`*^9, 3.763649593076562*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"inpp", "[", "0.75", "]"}]], "Input",
 CellChangeTimes->{{3.763580030076882*^9, 3.7635800420231953`*^9}}],

Cell[BoxData["0.70929`"], "Output",
 CellChangeTimes->{3.76358004334824*^9, 3.763580110545999*^9, 
  3.7635865293990517`*^9, 3.763586598135951*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"n", ",", 
     RowBox[{"Erf", "[", "n", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", 
     RowBox[{"{", 
      RowBox[{"0.25", ",", "0.5", ",", "0.75", ",", "1.0"}], "}"}]}], "}"}]}],
   "]"}]], "Input",
 CellChangeTimes->{{3.773325825807446*^9, 3.773325893223144*^9}, {
  3.773332986300047*^9, 3.77333298901832*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.25`", ",", "0.27632639016823696`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "0.5204998778130466`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.75`", ",", "0.7111556336535152`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "0.8427007929497149`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.773325893924767*^9, 3.773332990945547*^9}]
}, Open  ]],

Cell[TextData[{
 "I decided to look into this further with ",
 StyleBox["FindFit", "Input"],
 "."
}], "Text",
 CellChangeTimes->{{3.763645459215845*^9, 3.763645471334197*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell["\<\
Here taking the trouble to put in longer versions of the values of the model \
function.\
\>", "Text",
 CellChangeTimes->{{3.763645488965015*^9, 3.763645522091351*^9}, {
  3.763646577950714*^9, 3.763646582134472*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"datai", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0.25", ",", "0.27632639016823696`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.5", ",", "0.5204998778130466`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1.0", ",", "0.8427007929497149`"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.763643433348152*^9, 3.763643435218409*^9}, {
  3.7636448502426233`*^9, 3.7636448693458138`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.25`", ",", "0.27632639016823696`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "0.5204998778130466`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "0.8427007929497149`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7636434358673573`*^9, 3.763644570530858*^9, 
  3.7636448740572*^9, 3.763645543518496*^9, 3.763645670938096*^9, 
  3.7636459373318*^9, 3.763646585087722*^9, 3.7636697425101767`*^9}]
}, Open  ]],

Cell["\<\
Here building a Interpolation function from the more precise values.\
\>", "Text",
 CellChangeTimes->{{3.7636455484099083`*^9, 3.763645577376328*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "=", 
  RowBox[{"Interpolation", "[", "datai", "]"}]}]], "Input",
 CellChangeTimes->{{3.7636434413118*^9, 3.763643457177155*^9}, {
  3.7636697491913977`*^9, 3.763669783197085*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Interpolation", "::", "inhr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Requested order is too high; order has been reduced to \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"2\\\", \\\"}\\\"}]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Interpolation/inhr\\\", \
ButtonNote -> \\\"Interpolation::inhr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.763643447415324*^9, 3.7636434624683037`*^9}, 
   3.763644572859325*^9, 3.7636448769003963`*^9, 3.763645581184312*^9, 
   3.763645673897738*^9, 3.763645940673768*^9, 3.763646589431806*^9, {
   3.763669756884574*^9, 3.763669784305057*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["InterpolatingFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{{}, {}, {
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  LineBox[CompressedData["
1:eJwVj380FAYAx29Hy89WEj0bc3VkExKNmPueeB2xza96PXEJe5o5x3tFsaWz
yra0xJ4SY9bJkuhNeti6rVd+1Hl2dw7nHO73z+5uzG8Psz++7/PH5/PPl5TO
TPicSCAQPt7c/zQfum9PIPDwhG0zk9TOx3ekBFPcAA+Vkto5x28FiOQm0Iob
+ciMFLXX5Q2DwmkuDs8R4LpT0/u5NCEYpPhs+4BhlL1K9ZI6j+DZkc/4v9kI
8WFvSVzl4ghiHzXunBsWYsE0P7+jbxSrI1FD29pGELiyTku/NwZpbmSE35VR
SL4iN3oViWAZ/2OVIWYMVLGCEUEdR9RMcAqLLMKf4bojbEcxBsX+hA7TZme0
SKoXiXE1sISufzKOFzL/tdvVE6DHkg6tXhfDpsr1Qly6BIWPnDXNSROoIwrv
eLhN4vFg+g5fXwnWpqezjmkm4ZZCXOi2mMSZ8munIlumMBi40Cl7PYkTyX7l
stRp3OVSTPJfpkDZ/4njnnek+PXhxFuXc6YhnuiM7c+SwsBWHy3eK8WBCasv
bvdJ4dpqnd39g3Tzh/yDnD0ymMZGi3pnpdCV5jOWCmTgpQ/RKKdlePn7LXI2
X4Z4hzzi1ZcytEp4/E6yHMbl0LtD++TYPnjWJua8HDXUg6YrVXKwOC5rLK4c
qocCP+slOcpsPbuELgqEF/zks5KpQFGD7Te3mAp0Xai0Mv2tQFqzT3XpcwWG
Gvz57QFKcPLYYoGdEnMeq8enGpRw33LRTEtVooeXOyC2VOHgbEkFpVmJ2g67
3eIsFVpZl/zaTEqUzwv3Hh1Wwb2J6rQRooJrCs31cpAaZKbWeydLBQ5JKfBk
q0Fx5b7N56qwYetdUGutAX2XV9W57Wok+9YtODA0uPe0d7ElQY3e9qCARZEG
68lz0bQaNXjHv059EKYFOT8ozFashiHZGDHQokXRYeqpNTcNSHfKtup36eAR
YL+FcUaDxWVu1/hFHf7qiR6l1Wsw2RPi+ZFah2u1dedspzXI+DmRlRajxz+7
z7JTXLSw4FR332jTw1FlHZiXqEVHiGXbPhcDsDCn86rY9JJ3K25eMsC7+cuZ
x/1aZEhSfTMNBpw/6XzlPlGHKcfXD0JPvIHnyajD0aE6LOdLHWTdb+BkFlWv
5+pA9iUF/+thROgKN0HSpINpm13M8PdG3HSqszKP6fDqU5KL+5IRzOeF4bN2
enD60vqYGSaMHcjv+AN6JGYcS7vRb4KglPhig6HHEp3+1DnQjGCfZ+PGej3C
St5bYdaYcZoaubWQq4eVav/yxoYZhSF0dtaiHv8BH8rt8w==
                   "]]}}}, {
               DisplayFunction -> Identity, AspectRatio -> 1, 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0.2, 0.22}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                  AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                PlotRange -> {{0.25, 1.}, {0.2763264039918554, 
                 0.8427007875742011}}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.25`", ",", "1.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{{}, {}, {
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  LineBox[CompressedData["
1:eJwVj380FAYAx29Hy89WEj0bc3VkExKNmPueeB2xza96PXEJe5o5x3tFsaWz
yra0xJ4SY9bJkuhNeti6rVd+1Hl2dw7nHO73z+5uzG8Psz++7/PH5/PPl5TO
TPicSCAQPt7c/zQfum9PIPDwhG0zk9TOx3ekBFPcAA+Vkto5x28FiOQm0Iob
+ciMFLXX5Q2DwmkuDs8R4LpT0/u5NCEYpPhs+4BhlL1K9ZI6j+DZkc/4v9kI
8WFvSVzl4ghiHzXunBsWYsE0P7+jbxSrI1FD29pGELiyTku/NwZpbmSE35VR
SL4iN3oViWAZ/2OVIWYMVLGCEUEdR9RMcAqLLMKf4bojbEcxBsX+hA7TZme0
SKoXiXE1sISufzKOFzL/tdvVE6DHkg6tXhfDpsr1Qly6BIWPnDXNSROoIwrv
eLhN4vFg+g5fXwnWpqezjmkm4ZZCXOi2mMSZ8munIlumMBi40Cl7PYkTyX7l
stRp3OVSTPJfpkDZ/4njnnek+PXhxFuXc6YhnuiM7c+SwsBWHy3eK8WBCasv
bvdJ4dpqnd39g3Tzh/yDnD0ymMZGi3pnpdCV5jOWCmTgpQ/RKKdlePn7LXI2
X4Z4hzzi1ZcytEp4/E6yHMbl0LtD++TYPnjWJua8HDXUg6YrVXKwOC5rLK4c
qocCP+slOcpsPbuELgqEF/zks5KpQFGD7Te3mAp0Xai0Mv2tQFqzT3XpcwWG
Gvz57QFKcPLYYoGdEnMeq8enGpRw33LRTEtVooeXOyC2VOHgbEkFpVmJ2g67
3eIsFVpZl/zaTEqUzwv3Hh1Wwb2J6rQRooJrCs31cpAaZKbWeydLBQ5JKfBk
q0Fx5b7N56qwYetdUGutAX2XV9W57Wok+9YtODA0uPe0d7ElQY3e9qCARZEG
68lz0bQaNXjHv059EKYFOT8ozFashiHZGDHQokXRYeqpNTcNSHfKtup36eAR
YL+FcUaDxWVu1/hFHf7qiR6l1Wsw2RPi+ZFah2u1dedspzXI+DmRlRajxz+7
z7JTXLSw4FR332jTw1FlHZiXqEVHiGXbPhcDsDCn86rY9JJ3K25eMsC7+cuZ
x/1aZEhSfTMNBpw/6XzlPlGHKcfXD0JPvIHnyajD0aE6LOdLHWTdb+BkFlWv
5+pA9iUF/+thROgKN0HSpINpm13M8PdG3HSqszKP6fDqU5KL+5IRzOeF4bN2
enD60vqYGSaMHcjv+AN6JGYcS7vRb4KglPhig6HHEp3+1DnQjGCfZ+PGej3C
St5bYdaYcZoaubWQq4eVav/yxoYZhSF0dtaiHv8BH8rt8w==
                   "]]}}}, {
               DisplayFunction -> Identity, AspectRatio -> 1, 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0.2, 0.22}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                  AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                PlotRange -> {{0.25, 1.}, {0.2763264039918554, 
                 0.8427007875742011}}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.25`", ",", "1.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("InterpolatingFunction[{{0.25, 1.}}, <>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.763643447465499*^9, 3.763643462482538*^9}, 
   3.763644572873654*^9, 3.76364487691411*^9, 3.763645581199012*^9, 
   3.763645673950568*^9, 3.763645940687889*^9, 3.763646589445759*^9, {
   3.763669756936573*^9, 3.7636697843559093`*^9}}]
}, Open  ]],

Cell["Here getting the same old imprecision.", "Text",
 CellChangeTimes->{{3.763645589616826*^9, 3.763645597854927*^9}, {
  3.763646593118333*^9, 3.763646596159347*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", ".75", "]"}]], "Input",
 CellChangeTimes->{{3.763643465004834*^9, 3.763643477687984*^9}}],

Cell[BoxData["0.7092913454068726`"], "Output",
 CellChangeTimes->{
  3.763643478438197*^9, 3.7636448799448223`*^9, 3.763645584109695*^9, 
   3.76364567688027*^9, {3.763645931459041*^9, 3.763645943761228*^9}, 
   3.763646598638444*^9, {3.7636697666568823`*^9, 3.763669789710589*^9}}]
}, Open  ]],

Cell["Getting a solution for the sine try.", "Text",
 CellChangeTimes->{{3.7636456103999043`*^9, 3.763645656556279*^9}, {
  3.76364786432864*^9, 3.763647884902898*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ffd", "=", 
  RowBox[{"FindFit", "[", 
   RowBox[{"datai", ",", 
    RowBox[{"a", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"b", " ", "x"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], ",", "x"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"using", " ", "sine"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.763643569921237*^9, 3.76364361767299*^9}, {
  3.763646961427712*^9, 3.76364697109186*^9}},
 Background->RGBColor[1, 0.925, 0.925]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", "\[Rule]", "0.8844174815516758`"}], ",", 
   RowBox[{"b", "\[Rule]", "1.2619134491291153`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.763643599166485*^9, 3.763643618352157*^9}, 
   3.76364457915129*^9, 3.763644893531743*^9, 3.763645691414846*^9, 
   3.7636459519703617`*^9, 3.763646607404649*^9}]
}, Open  ]],

Cell["Getting a solution for the parabola try.", "Text",
 CellChangeTimes->{{3.763647894374675*^9, 3.763647901766581*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ffp", "=", 
  RowBox[{"FindFit", "[", 
   RowBox[{"datai", ",", 
    RowBox[{"a", " ", "+", 
     RowBox[{"b", " ", "x"}], "+", 
     RowBox[{"c", " ", 
      SuperscriptBox["x", "2"]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "x", ",", 
    RowBox[{"WorkingPrecision", "\[Rule]", "20"}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"using", " ", "parabola"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.76364411652011*^9, 3.763644132349688*^9}, {
  3.763644177253471*^9, 3.763644177611042*^9}, {3.763645018288271*^9, 
  3.763645023103697*^9}, {3.763646974250463*^9, 3.7636469843062773`*^9}},
 Background->RGBColor[1, 0.925, 0.925]],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindFit", "::", "precw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The precision of the data and model function \
(\[NoBreak]\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\)\[NoBreak]) is less \
than the specified WorkingPrecision \
(\[NoBreak]\\!\\(\\*RowBox[{\\\"20\\\"}]\\)\[NoBreak]). \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/precw\\\", ButtonNote -> \
\\\"FindFit::precw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.763645024340659*^9, 3.763645699561154*^9, 
  3.7636457669858093`*^9, 3.763645956166176*^9, 3.763646610295135*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", "\[Rule]", 
    RowBox[{
    "-", "0.0232291175275564087954194292251486331232322306082285708689`20."}]}\
], ",", 
   RowBox[{
   "b", "\[Rule]", 
    "1.3089860708851408510611236124532297253618828340786412697562`20."}], ",", 
   RowBox[{"c", "\[Rule]", 
    RowBox[{
    "-", "0.4430561604078695481234717590268701314905913797433497845776`20."}]}\
]}], "}"}]], "Output",
 CellChangeTimes->{3.763644133480693*^9, 3.763644178234866*^9, 
  3.763644581882279*^9, 3.763644902931136*^9, 3.763645024347288*^9, 
  3.7636456995703697`*^9, 3.763645766995481*^9, 3.763645956175786*^9, 
  3.7636466103049793`*^9}]
}, Open  ]],

Cell["Getting a solution for the exponential try.", "Text",
 CellChangeTimes->{{3.76364790829423*^9, 3.763647915197948*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ffe", "=", 
  RowBox[{"FindFit", "[", 
   RowBox[{"datai", ",", 
    RowBox[{"a", " ", "+", 
     RowBox[{"b", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "c"}], " ", "x"}]]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "x", ",", 
    RowBox[{"WorkingPrecision", "\[Rule]", "20"}]}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"using", " ", "exponential"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.763646428986473*^9, 3.763646463721393*^9}, 
   3.763646549753064*^9, 3.763646724587729*^9, {3.76364698745004*^9, 
   3.763647001313435*^9}},
 Background->RGBColor[1, 0.925, 0.925]],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindFit", "::", "precw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The precision of the data and model function \
(\[NoBreak]\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\)\[NoBreak]) is less \
than the specified WorkingPrecision \
(\[NoBreak]\\!\\(\\*RowBox[{\\\"20\\\"}]\\)\[NoBreak]). \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/precw\\\", ButtonNote -> \
\\\"FindFit::precw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.76364647076478*^9, 3.763646551594006*^9, 
  3.763646614763961*^9, 3.763646725448514*^9, 3.763648315955559*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
   "a", "\[Rule]", 
    "1.2641621447600258633826662088703013408502493800233056750939`20."}], ",", 
   RowBox[{"b", "\[Rule]", 
    RowBox[{
    "-", "1.3121809743770445164132764560080587451161751536628277667149`20."}]}\
], ",", 
   RowBox[{
   "c", "\[Rule]", 
    "1.1357178165686667904505421743546779928779713927415879630267`20."}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.763646470771452*^9, 3.763646551664315*^9, 
  3.763646614826254*^9, 3.7636467254577436`*^9, 3.763648315964541*^9}]
}, Open  ]],

Cell["The exponential function", "Text",
 CellChangeTimes->{{3.7636479352291317`*^9, 3.763647939821432*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"te", "[", "x_", "]"}], "=", 
  RowBox[{
  "1.2641621447600258633826662088703013408502493800233056750939`20.", "+", 
   RowBox[{
    RowBox[{
    "-", "1.3121809743770445164132764560080587451161751536628277667149`20.1"}]\
, 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{
      "-", "1.1357178165686667904505421743546779928779713927415879630267`20."}\
], "x"}]]}]}]}]], "Input",
 CellChangeTimes->{{3.763646492213934*^9, 3.7636465373602943`*^9}, {
  3.7636466494948063`*^9, 3.7636466762764*^9}, {3.7636467415965977`*^9, 
  3.763646809952703*^9}}],

Cell[BoxData[
 RowBox[{"1.2641621447600258633826662088703013408502493800233056750939`20.", 
  "-", 
  RowBox[{
  "1.3121809743770445164132764560080587451161751536628277667149`20.1", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{
     "-", "1.1357178165686667904505421743546779928779713927415879630267`20."}]\
, " ", "x"}]]}]}]], "Output",
 CellChangeTimes->{3.763646679871881*^9, 3.76364681151444*^9}]
}, Open  ]],

Cell["fails to give an accurate answer.", "Text",
 CellChangeTimes->{{3.763647943033265*^9, 3.763647968724559*^9}}],

Cell[BoxData[
 RowBox[{"te", "[", "0.75", "]"}]], "Input",
 CellChangeTimes->{{3.7636466920641413`*^9, 3.763646698186254*^9}}],

Cell[BoxData[
 RowBox[{"0.7043185020187743`", " ", 
  RowBox[{"(*", " ", 
   RowBox[{"exponential", " ", "fails"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.763647088600067*^9, 3.763647097726372*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{"p4", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"te", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "2"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Green", ",", 
        RowBox[{"Thickness", "[", "0.003", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.763646847583547*^9, 3.76364686598952*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p1", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"datai", ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7636436375197573`*^9, 3.7636436573505087`*^9}, {
   3.763643904883306*^9, 3.7636439136010237`*^9}, 3.763645246507976*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"tr", "[", "x_", "]"}], "=", 
  RowBox[{"0.8844174815516758`", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"1.2619134491291153`", " ", "x"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.763643796287623*^9, 3.763643824445622*^9}, {
  3.7636449273405523`*^9, 3.7636449354428167`*^9}, {3.7636457252682743`*^9, 
  3.763645740162982*^9}, {3.763645900952476*^9, 3.76364590239124*^9}}],

Cell[BoxData[
 RowBox[{"0.8844174815516758`", " ", 
  RowBox[{"Sin", "[", 
   RowBox[{"1.2619134491291153`", " ", "x"}], "]"}]}]], "Output",
 CellChangeTimes->{
  3.763643827423808*^9, 3.7636446017941227`*^9, 3.763644936447809*^9, 
   3.7636457448726797`*^9, {3.7636459034046803`*^9, 3.763645913492531*^9}, 
   3.7636459672242527`*^9, {3.763646239206953*^9, 3.763646264107929*^9}, 
   3.7636468739895887`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"p3", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"tr", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "2"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Thickness", "[", "0.003", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7636452992134657`*^9, 3.76364536520568*^9}, {
  3.7636462144413347`*^9, 3.763646218529983*^9}, {3.763646292551476*^9, 
  3.763646293182322*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"fp", "[", "x_", "]"}], "=", 
  RowBox[{
   RowBox[{
   "-", "0.0232291175275564087954194292251486331232322306082285708689`20."}], 
   "+", 
   RowBox[{
   "1.3089860708851408510611236124532297253618828340786412697562`20.", " ", 
    "x"}], " ", "-", 
   RowBox[{
   "0.4430561604078695481234717590268701314905913797433497845776`20.", " ", 
    SuperscriptBox["x", "2"]}]}]}]], "Input",
 CellChangeTimes->{{3.7636442184942636`*^9, 3.763644263398378*^9}, {
  3.76364454776832*^9, 3.763644549087182*^9}, {3.763645178153002*^9, 
  3.7636451994481077`*^9}, {3.763645780601213*^9, 3.763645804894114*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "-", "0.0232291175275564087954194292251486331232322306082285708689`20."}], 
  "+", 
  RowBox[{
  "1.3089860708851408510611236124532297253618828340786412697562`20.", " ", 
   "x"}], "-", 
  RowBox[{
  "0.4430561604078695481234717590268701314905913797433497845776`20.", " ", 
   SuperscriptBox["x", "2"]}]}]], "Output",
 CellChangeTimes->{3.7636452009032793`*^9, 3.763645806794804*^9, 
  3.7636459731059847`*^9, 3.763646879805418*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"p2", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"fp", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "2"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Thickness", "[", "0.003", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.763644190079528*^9, 3.763644208001439*^9}, 
   3.763644457598777*^9, {3.763644648083802*^9, 3.763644648978101*^9}, 
   3.7636452535539303`*^9, {3.763645377732463*^9, 3.763645384698883*^9}, {
   3.7636461835474863`*^9, 3.763646195833437*^9}}],

Cell[BoxData[
 RowBox[{"fp", "[", "0.75", "]"}]], "Input",
 CellChangeTimes->{{3.763644522756898*^9, 3.7636445275122423`*^9}}],

Cell[BoxData[
 RowBox[{"0.7092913454068726`", " ", 
  RowBox[{"(*", " ", 
   RowBox[{"parabola", " ", "fails"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.763647133037169*^9, 3.763647143589163*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[
 RowBox[{"tr", "[", "0.75", "]"}]], "Input",
 CellChangeTimes->{{3.763645841608953*^9, 3.763645869018161*^9}}],

Cell[BoxData[
 RowBox[{"0.7175603527695268`", " ", 
  RowBox[{"(*", " ", 
   RowBox[{"sine", " ", "fails"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.7636471636119823`*^9, 3.7636471705563087`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[TextData[{
 "Nothing I tried could produce the desired accuracy based on only three \
points. I also tried a double exponential, of the form a+b ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "c"}], " ", 
     SuperscriptBox["x", 
      RowBox[{"-", "d"}]]}]], TraditionalForm]]],
 " which is actually fairly close to the Erf function, but the result was \
even worse than any of the others."
}], "Text",
 CellChangeTimes->{{3.763648008828437*^9, 3.763648025506783*^9}, {
  3.7636481262558413`*^9, 3.7636481292717457`*^9}, {3.763648523333276*^9, 
  3.763648627528702*^9}, {3.76364965793223*^9, 3.763649663906432*^9}, {
  3.763656491237817*^9, 3.763656494193652*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"p1", ",", "p2", ",", "p3", ",", "p4"}], "]"}]], "Input",
 CellChangeTimes->{{3.763644468154076*^9, 3.763644474932399*^9}, {
  3.7636452918079557`*^9, 3.763645293287757*^9}, {3.763646887030406*^9, 
  3.763646888276802*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      PointBox[{{0.25, 0.27632639016823696`}, {0.5, 0.5204998778130466}, {1., 
       0.8427007929497149}}]}, {}}, {}}, {{}, {}, 
    {RGBColor[0, 0, 1], Thickness[0.003], Opacity[1.], LineBox[CompressedData["
1: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

      "]]}}, {{}, {}, 
    {RGBColor[1, 0, 0], Thickness[0.003], Opacity[1.], LineBox[CompressedData["
1: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
      "]]}}, {{}, {}, 
    {RGBColor[0, 1, 0], Thickness[0.003], Opacity[1.], LineBox[CompressedData["
1:eJwVyHk41AkAxnFHKvdQyXiKlFodErGS8qpECuWunlZW2JXZphZb7CoST5aK
2NpEace1shrlmC01ik0HYVxTydUQY5j5/TBpML+d/nif7/N5TYOZ3qEqSkpK
Hop97d7Q4dbakVBHpcqlicI/irmfyvyDe+nO6Dvl4WdmXMw10Oy4/IDui/h/
RQmRhUXcjfaLC3LpIQgK3/jeq7qQu7VlM/sqPQq19V6rdN7lc2tv1tleol9A
XqmIk7DqDjcxIfXM7/QsOFWNrIlOy+SGRInpKfR8xFctF5zuOo+FWW53JEQF
+ticDdzEclS3WLu6GnPBTk22EqhxcTCx+11daj32cIxeKfP/A7M80uLPyZcw
PFTluPWHRpDpnS+UlZvBKJWyi01a8eLpc27zNh72fnTX+H51O8Jj3LQPidpx
nJ4r3f+lE0/VranSn7owzKpstjz7FoWsernR6ne4PxW3oIXeDSeDx3/5lHUj
zKoons3ogUVDN+f5ul6ULO7WtffoQ7uTz/jf4304ZBrLsT3RD4ZGBK9j0wC2
bF9kWMIcwGt+wGOdyx+hZ/eoSCv2I3xcDvYLBAKc7mKbH4gU4Nu81IA8syHI
GwssA7wG0SfPbP/x3CewPxyP3mM3hEG3ZpZB3TAINW0T83mK/0ZvTKupEGr6
Rqvn8T+h4KJqytrYUWhEvOY43BrG1LHDwrBHIsyfC77S7DkCTedk7/Kl47Du
nSYz1YT4jTao1X9EDF/NuBRmsRBaT9YrdXlIILg8yzPZMYrtv+yfq5NJQFi6
qh3oHUVOfhprVQ4B2etKqSNDhEA/myb1fSR6zMud1OUiVHaEZj6RkjA/LlSN
TB6DfSNbZejaBKIqfV2k1BhW7A6bynSeRNoZh+CGuHHY2thmVAxNokp40HBg
bBy95KWXrKQp5M0780juL4Zos1cS3VqK+kDfzPE6MdaMWgiV26TQZWsy4/Ql
qDeL5p1M+Ax5e6NNhbMEV9o7jnmbTeNaih498pQEYp/aDJX6aXhSRxF2U4L7
fkt22Z/6AuP0TbVvn0vAakrMHdCXwSHXdX/6mASfG478qv9Mhtnr/2zIXkKg
L4M7RTsxgy2DZZ40BwLSVgf6eZ1Z3C5i7mQeIXAya2VtTM0stNdf75GdJbC0
aSVNEDiHoU478bNcAj4dpbPL5HOwcu3/5vZDAuTRO4zuEjmqZ8tTkvkEuEH3
knTcKQS5dFavmyDwsJmxr8eTgvfmXfJbClc5rtMr86Kg3xJnsWiSQOmyghyP
AAp12SdcZhTO5mc/SAumwGniBr+SEog+kNyvEUMhJMLcLURGYL3Td9sXFFJ4
GLdiLFmZxJp7RqpdxRQ8hOb+0wqvNOa/KLxLYcIvozhchYThrLevSzmF83ZZ
6u6qJOZz9kQk1VDId++r0VUj0W9pc0O1jcLjxfGiqwtJdN8iAts6KHxZnj+m
ok6Cr33PjMWnwCCZ/J8VfjO6lr2zh0JFCy3CW4NETZFJQ8IIhaiZiQs0LRIc
gw9pXiIKNnO8tnMKP0jK9jYVU8g9HKclVrjk2JKe2kkKb3p3OzRpkyjg8Vjp
nyks6mdYbdMhkbcjPTxIRmFGclLvrsI5bA/LTXMUaLH+7+m6JK6baE5RFAXZ
oOmViwr/D/HEhDc=
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.23828125000000003`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->400,
  Method->{},
  PlotRange->{{0.25, 1.}, {0, 0.8427007929497149}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.763644475493911*^9, 3.763644656596712*^9, 3.763645004523041*^9, 
   3.763645389180381*^9, 3.763645821243622*^9, {3.763646224144285*^9, 
   3.763646297635981*^9}, 3.763646889823243*^9}]
}, Open  ]],

Cell["In one final stab, I add two extra points.", "Text",
 CellChangeTimes->{{3.773333378533279*^9, 3.773333393490996*^9}, {
  3.773333943349594*^9, 3.773333948851774*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"n", ",", 
     RowBox[{"Erf", "[", "n", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", 
     RowBox[{"{", 
      RowBox[{"0.0", ",", "0.25", ",", "0.5", ",", "0.8", ",", "1.0"}], 
      "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.773333402468128*^9, 3.7733334080104923`*^9}, {
   3.773333577258713*^9, 3.773333594600149*^9}, 3.773333644135212*^9, {
   3.773333755528673*^9, 3.773333757638794*^9}, {3.773333822260845*^9, 
   3.773333826075034*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.25`", ",", "0.27632639016823696`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "0.5204998778130466`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.8`", ",", "0.7421009647076605`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "0.8427007929497149`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7733333972517*^9, 3.773333409287307*^9}, 
   3.773333551050859*^9, {3.773333583086952*^9, 3.773333596140359*^9}, 
   3.7733336462758512`*^9, 3.77333375897444*^9, 3.773333826855694*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"inppe", "[", "x_", "]"}], "=", 
   RowBox[{"InterpolatingPolynomial", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.`", ",", "0.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.25`", ",", "0.27632639016823696`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.5`", ",", "0.5204998778130466`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.8`", ",", "0.7421009647076605`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.`", ",", "0.8427007929497149`"}], "}"}]}], "}"}], ",", 
     "x"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.773333454713421*^9, 3.773333530859763*^9}, 
   3.773333612442596*^9, {3.773333662215584*^9, 3.773333686150258*^9}, 
   3.773333771913535*^9, 3.7733338379898357`*^9, 3.773333873538176*^9, 
   3.7733339135776043`*^9, 3.7733339604114933`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"inppe", "[", "0.75", "]"}]], "Input",
 CellChangeTimes->{{3.7733335023467216`*^9, 3.773333507188676*^9}}],

Cell[BoxData["0.7111610192852691`"], "Output",
 CellChangeTimes->{{3.773333508878132*^9, 3.773333562955701*^9}, 
   3.7733336214547462`*^9, {3.77333366696557*^9, 3.773333691050927*^9}, 
   3.773333776929388*^9, 3.7733338428687963`*^9, 3.7733338782716513`*^9, 
   3.773333919109074*^9}]
}, Open  ]],

Cell["\<\
And arriving at essentially the same result which the text claims for its \
poly, based on three values of 5S. I think the following cells show the basic \
problem with this quest. The requested order cannot effectively be greater \
than n-1, where n is the number of points considered in interpolation. With \
only the three points given in the problem, the fit, a square, can\
\[CloseCurlyQuote]t be very good. (Note that in the first try \
\[OpenCurlyQuote]rh\[CloseCurlyQuote], the added points are outside the span \
of interest.)\
\>", "Text",
 CellChangeTimes->{{3.773333966962658*^9, 3.773334010928084*^9}, {
   3.7733342142847223`*^9, 3.773334254002356*^9}, 3.773334348221141*^9, {
   3.77427559128465*^9, 3.774275748905308*^9}, {3.7742765334284563`*^9, 
   3.7742765598407297`*^9}, {3.774276643996356*^9, 3.77427664680422*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rh", "=", 
  RowBox[{"Interpolation", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.1", ",", 
        RowBox[{"Erf", "[", "0.1", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.25", ",", 
        RowBox[{"Erf", "[", "0.25", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.50", ",", 
        RowBox[{"Erf", "[", "0.50", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.0", ",", 
        RowBox[{"Erf", "[", "1.0", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.5", ",", 
        RowBox[{"Erf", "[", "1.5", "]"}]}], "}"}]}], "}"}], ",", 
    RowBox[{"Method", "\[Rule]", "Spline"}], ",", 
    RowBox[{"InterpolationOrder", "\[Rule]", "5"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.774275104369179*^9, 3.7742752232426023`*^9}, {
  3.774275268488131*^9, 3.774275284118824*^9}, {3.774275329940292*^9, 
  3.77427537013092*^9}, {3.774275436383423*^9, 3.774275445102333*^9}, {
  3.774275510338478*^9, 3.774275551629985*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Interpolation", "::", "inhr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Requested order is too high; order has been reduced to \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"4\\\", \\\"}\\\"}]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Interpolation/inhr\\\", \
ButtonNote -> \\\"Interpolation::inhr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.77427520145042*^9, 3.774275224078619*^9}, 
   3.77427528664191*^9, 3.7742753362682533`*^9, 3.774275371475564*^9, {
   3.774275446765006*^9, 3.774275459081624*^9}, {3.7742755284760227`*^9, 
   3.7742755536687*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["InterpolatingFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> 
               False, Background -> GrayLevel[0.93], Frame -> True, 
               FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.1`", ",", "1.5`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> 
               False, Background -> GrayLevel[0.93], Frame -> True, 
               FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.1`", ",", "1.5`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"BSpline\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("InterpolatingFunction[{{0.1, 1.5}}, <>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.774275201629374*^9, 3.774275224093596*^9}, 
   3.774275286675971*^9, 3.7742753362998*^9, 3.774275371484918*^9, {
   3.774275446780285*^9, 3.774275459094942*^9}, {3.7742755284908667`*^9, 
   3.774275553682098*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rh", "[", "0.75", "]"}]], "Input",
 CellChangeTimes->{{3.774275228184327*^9, 3.774275232785717*^9}}],

Cell[BoxData["0.7116232687542102`"], "Output",
 CellChangeTimes->{3.7742752335180483`*^9, 3.774275291119046*^9, 
  3.774275342976253*^9, 3.774275462222096*^9, 3.774275562324379*^9}]
}, Open  ]],

Cell["Compare with", "Text",
 CellChangeTimes->{{3.774275766404603*^9, 3.774275772767551*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rh3", "=", 
  RowBox[{"Interpolation", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.25", ",", 
        RowBox[{"Erf", "[", "0.25", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.50", ",", 
        RowBox[{"Erf", "[", "0.50", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.0", ",", 
        RowBox[{"Erf", "[", "1.0", "]"}]}], "}"}]}], "}"}], ",", 
    RowBox[{"Method", "\[Rule]", "Spline"}], ",", 
    RowBox[{"InterpolationOrder", "\[Rule]", "5"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.774275787096499*^9, 3.774275815461947*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Interpolation", "::", "inhr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Requested order is too high; order has been reduced to \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"2\\\", \\\"}\\\"}]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Interpolation/inhr\\\", \
ButtonNote -> \\\"Interpolation::inhr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.774275804455016*^9, 3.77427581617663*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["InterpolatingFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> 
               False, Background -> GrayLevel[0.93], Frame -> True, 
               FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.25`", ",", "1.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> 
               False, Background -> GrayLevel[0.93], Frame -> True, 
               FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.25`", ",", "1.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"BSpline\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("InterpolatingFunction[{{0.25, 1.}}, <>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.774275804467929*^9, 3.7742758161898737`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rh3", "[", "0.75", "]"}]], "Input",
 CellChangeTimes->{{3.774275821769582*^9, 3.77427582892421*^9}}],

Cell[BoxData["0.7092913454068726`"], "Output",
 CellChangeTimes->{3.774275830007863*^9}]
}, Open  ]],

Cell["which gives the familiar degree of imprecision.", "Text",
 CellChangeTimes->{{3.774275841331049*^9, 3.77427585161852*^9}}],

Cell[TextData[{
 "11. Cubic Lagrange interpolation. Bessel function ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["J", "0"], TraditionalForm]]],
 ". Calculate and graph ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["L", "0"], ","}], TraditionalForm]]],
 " ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["L", "1"], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["L", "2"], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["L", "3"], TraditionalForm]]],
 " with ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "0"], TraditionalForm]]],
 " = 0, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "1"], " "}], TraditionalForm]]],
 "=1, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "2"], TraditionalForm]]],
 " =2, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "3"], TraditionalForm]]],
 " = 3 on common axes. Find ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "3"], TraditionalForm]]],
 "[x] for the data (0,1), (1, 0.765198), (2, 0.223891), (3, -0.260052) (",
 StyleBox["values of the Bessel function ",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["J", "0"], TraditionalForm]],
  FontSlant->"Italic"],
 StyleBox["[x]",
  FontSlant->"Italic"],
 "). Find ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "3"], TraditionalForm]]],
 " for x = 0.5, 1.5, 2.5, and compare with the 6S-exact values 0.938470, \
0.511828, ",
 Cell[BoxData[
  FormBox["-", TraditionalForm]]],
 "0.048384."
}], "Text",
 CellChangeTimes->{{3.7634935219903708`*^9, 3.76349381805757*^9}, {
  3.76359468218694*^9, 3.76359468276105*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[TextData[{
 "Examples 1 and 2 in the text deal with the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["L", "n"], TraditionalForm]]],
 " quantities that hallmark Lagrange interpolation. A bit labor intensive for \
me. I will proceed using ",
 StyleBox["InterpolatingPolynomial", "Input"],
 ", I think."
}], "Text",
 CellChangeTimes->{{3.763631174686102*^9, 3.763631212771783*^9}, {
  3.7636312755191708`*^9, 3.763631310037243*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0.765198"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "0.223891"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", 
      RowBox[{"-", "0.260052"}]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.763631349671947*^9, 3.7636313908966722`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0.765198`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0.223891`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     RowBox[{"-", "0.260052`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.763631392037018*^9, 3.7636314056378613`*^9}, 
   3.763669659383853*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"inpp", "[", "x_", "]"}], "=", 
  RowBox[{"InterpolatingPolynomial", "[", 
   RowBox[{"data", ",", "x"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.260052`"}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "3"}], "+", "x"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "0.4200173333333333`"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "0.09260766666666667`"}], "+", 
        RowBox[{"0.06064483333333334`", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "x"}], ")"}]}]}], ")"}], " ", "x"}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{3.7636314206961937`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"p1", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"inpp", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", 
         RowBox[{"Thickness", "[", "0.004", "]"}]}], "}"}], "}"}]}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{3.763632224676176*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gh", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"inpp", "[", "x", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "data"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.763631465626875*^9, 3.7636315413203506`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.`", ",", "0.765198`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0.765198`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.765198`", ",", "0.8613193338521825`"}], "}"}]}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "0.223891`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.22389099999999995`", ",", "0.9927761050584918`"}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", 
       RowBox[{"-", "0.260052`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.260052`"}], ",", "0.9659312513604374`"}], "}"}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.763631511460747*^9, 3.7636315420426064`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"inpp", "[", "0.5", "]"}]], "Input",
 CellChangeTimes->{{3.763631738035986*^9, 3.763631746524537*^9}}],

Cell[BoxData["0.9436539374999999`"], "Output",
 CellChangeTimes->{3.763631747166567*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"inpp", "[", "1.5", "]"}]], "Input",
 CellChangeTimes->{{3.7636317524649153`*^9, 3.763631757355979*^9}}],

Cell[BoxData["0.5101158125`"], "Output",
 CellChangeTimes->{3.763631758453923*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"inpp", "[", "2.5", "]"}]], "Input",
 CellChangeTimes->{{3.763631767504796*^9, 3.763631773563064*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.04799281250000004`", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"text", " ", "answer", " ", "was"}], " ", "-", "0.047991"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.763632020821741*^9, 3.76363204876442*^9}, 
   3.763632207486034*^9},
 Background->RGBColor[1, 1, 0.85]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gk", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0.5", ",", "0.943654"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1.5", ",", "0.510116"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2.5", ",", 
      RowBox[{"-", "0.0479928"}]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.763631953639773*^9, 3.7636320167342176`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "0.943654`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.5`", ",", "0.510116`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.5`", ",", 
     RowBox[{"-", "0.0479928`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.763632077281143*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"p3", "=", 
   RowBox[{"ListPlot", "[", "gk", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.763632066928132*^9, 3.763632070755315*^9}, {
  3.7636321213227882`*^9, 3.76363214678522*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"p1", ",", "p3"}], "]"}]], "Input",
 CellChangeTimes->{{3.763632091839177*^9, 3.763632129584653*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0, 0, 1], Thickness[0.004], Opacity[1.], LineBox[CompressedData["
1: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
NPR/e9Ugbw==
      "]]}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      PointBox[{{0.5, 0.943654}, {1.5, 0.510116}, {
       2.5, -0.0479928}}]}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-4, 4}, {-8.403221080459105, 1.001190426165104}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.763632101775961*^9, 3.763632130452359*^9}}]
}, Open  ]],

Cell["The curve fit looks pretty good to me.", "Text",
 CellChangeTimes->{{3.763632248362137*^9, 3.7636322533860083`*^9}, {
  3.763656552503932*^9, 3.763656561005447*^9}}],

Cell["\<\
13.  Lower degree. Find the degree of the interpolation polynomial for the \
data (-4, 50), (-2, 18), (0, 2), (2, 2), (4, 18), using a difference table. \
Find the polynomial.\
\>", "Text",
 CellChangeTimes->{{3.763493833836976*^9, 3.763493919041247*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell["Needless to say, I don\[CloseCurlyQuote]t use a difference table on \
this one.", "Text",
 CellChangeTimes->{{3.763630504714444*^9, 3.763630516770018*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "4"}], ",", "50"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2"}], ",", "18"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "18"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.763593551369316*^9, 3.7635935981389227`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4"}], ",", "50"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "18"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7635936004830437`*^9, 3.7635937529290543`*^9, 
  3.7636305816582127`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"inpp", "[", "x_", "]"}], "=", 
  RowBox[{"InterpolatingPolynomial", "[", 
   RowBox[{"data", ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.763593628755356*^9, 3.763593630521762*^9}}],

Cell[BoxData[
 RowBox[{"50", "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"4", "+", "x"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "16"}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", "x"}], ")"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.763593631841461*^9, 3.7635937553385487`*^9, 
  3.7636305844049587`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p1", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"inpp", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Thickness", "[", "0.004", "]"}]}], "}"}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.76359367793771*^9, 3.7635936984011517`*^9}, {
   3.7635937907747583`*^9, 3.763593796428714*^9}, 3.763630574833564*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 0, 1], Thickness[0.004], Opacity[1.], LineBox[CompressedData["

1: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
Hl3TxqboMBtYIUBv3SPUeQ4756KkkvIjYAaGf4jwxLYPkPl5KRDatQb8jUKx
XXPyL5Q8BMmopzyv3mKzJKmP//GHIIvx+UcSI0Awb1NQ4V14wWtYuFcJm6aW
eVnZC8pfxt+a0cWWm/lDKrwNiySTKQcnbn3O8nxVd1jLeJ4r5YPNple9Wn0N
tK7MuX6OxKYkp2372xXcalKGtZnYRHr25LQjhHj9SR9t4uaCxrSc8/Cv8jHn
5EGufbftSnaAypZ/lax5RrHVs1zT7OB7AM+PFWu4jo046G0FPFqWyR+2ca0v
PFl1HGR/ZJ29o49NKJCuB5rDnqf8G9QtuaYYP/Y5BJb7T7N/XOZaJar7qwHc
mMqNj/Pj+rlQ0S49CKcL21g847pVYVmUBmQftV8rnM317yUd6hao4SloKSnn
Wstd7cpaGMgRi3Zv5dr+m52AAAjYnzuhPPbf++4+ONmlF/7QRmSMdwybqPHQ
f6kn1xUwUC32n9PCKmf0sjTzq5Kl/vO44G8J0A3pekFR4LpYt+ilAtT0iTy0
VuXa8Z5ItRpY6Wpe0NTmunNTULg29Eee2f+XAdfyAqrS+nBzKFhxyJRrI2nm
MUPgM3izrPIU1/0mC15HIILa25OI/yMExZt1tdICNkyKv79zlZuXB70+YAk5
xrsTT3pyvb/pyx4b0Ht+nqJ+H5tJfLO3OAM1c6F2YqHY6I5Y2b5zYGVerNcf
w81XPyJdvQgDqT/WlSVz168xO9DkDAKWeu2332LTjKy0t7hBZLbTW4sP2Pbm
W/I1roOC4JMY1S/Yco4ySTY3AL0etPzO4a5XeqVX0BM+i63RYoxjs/k+qwfe
AZvz+mtifnPzE+Yzm33Ac9WzpiMS4/h7XtkzansPXJad6HKTwUbtz2uZfnB6
QmIgYhO2GUvUd/t9AFbw76+7sVna7Y47AoAvmKJgfxabJuGk0xQCvzx1Ve5d
xraMKew1DQWO07xm0i3sWbQyUjsMPh50N+5/hD1marBzQwSELHN0c83Hrroc
54GiwGdC0Su8hLufrZWrLaPBtbvbP78KO8e7QubmM7BgWEfPtmOz+8ClggpS
XkcYFP4JIKLbVt+3pAF9QlMs7AR2ce7o5s5kiOyelMyzx96ml2YSlwIPWDly
Tc7Y51bVpti9AMcsZQ1pH2ytRIuF4VRQdZa1TnyBbaZzeiM5A95086e9nOX2
F2eWpL6ENNb73AbeSSDUv53+LZ8LMQyf4l+i2PHSpY2xuXA3bq5OWx47STTt
eFQe6J8ani41wnbMm45KeAU1rEaD+hhs9rJA2T+F8Pq0lVZpEvbYkX7Zf4og
sb9ra04Wti2aTZN9CzeJQYmQ99inxZXtDxSDnBpPt9FP7GrbJpPUErjxWOVu
qfYUEKWOySvbSsF+bZ5rzj7sMrKV0/b3YPxC61zCYewpk4v+/u9BjrHv0N0z
2ByPIBFyGVSPnJLWDsTmy5o6EVEOsqYPXuV8w1b1sRy7UwlCrcvTEnqwlV3C
qR2VMHk+LDZkCPt4mqIoVEHV3Vi/S8QvIHbLHNXl+wjXM3PNlZSwoZ3VFVUN
VaJdwwm3sDUrbDZ+rwW3T7s2PZacBuJSnNWpgHq4tzTpe0Iee7dkqXp1PYTv
yOlYtw3ba+44RbQB8qlKTzL2TgPFcknkdngDzLpI81Vfwr4r9LyF3gjeogvd
fGW43m2F//n2Zgg6XBLneXUGKEvTa2hJbUD19Zzb64mtV3JoaaoNMl5pHhe+
PwPE+Ghm/f52qF2XLRodg/0y/E9TfzusGEnwelWB62OaPppqdEJUiO+psbWz
QAQrPfJ3ZUNSncHqC1WzwDz9GFiGvSBFDae612N/tz+y8kYvPLrAlvdrnwU0
0ToWkNgL1/54qdLGZoESV9W/fKEX9m7NO9gqNQfEzqAM15zv0PlA3tPUaQ6Y
jil+rxQ5IKW32KkpMg9Er77rth0DEJxRkCposoDPi6L76n6MwiY5naiREwvA
fHqugikxBswI5v2mMwtgTyJoBeQxmPT86EC/tQCU1ssei3guWRm1yQAd+5vi
u7HhMdjCWQy9OY/7rxMBF0fH4cP6Ax59qb+BtunK1nihKeCJaDQq418EOW+F
tO2Rs7AY99NhnLQI6H5bwlDBLMynEnfW/42to+hT1jYLUyXbsrxUF4FWeHGm
RGEOOD/9JTROLgIx8frzUP4c1OjvbEtKXQTmqZtSiu3zED3x5NKDQ0tA4/OQ
4tH7A2vS0iuTDAm04vuB80WbeVAznt78ATyIVbjrrtJrAWSdrvzgWg8voqzv
0DKLF0M6VME9FRv50OyxW3y81yRQ7+PCaUV/fuT60YKz2CSJ8hV8BuXbBVDo
+vO8cjFrEZt+S51vnRAysdjMp7tbDtUr7adM3hZGp1mhZVGrFND6mP1yVe9E
kJqqrVXt5Eb09N9Tc9q/lyPXf3Y2hE0roQaGfsub42LIUCXdm3VtG3IptV2+
Lloc+R83F5z+sR05JLQ8LY4TRxllTzJaZrYjq7vHNpymi6Mk1bbn7GVqyFDb
WJuaJY4shT9s+bxSDSm+3HlRukIcaZWVjzB3qKF2mmjZ6glx1Gh44Ti/uxoy
oRR5ipuQUABV+4nwtBraZ7tTIMuchDQC45N3L6qh3To5YYdPklB48Hj2ZQEy
UppNTg12IKErjWdyWyTJiM81rFnEg4TiHV2ufNxFRu/sHNUFU0h4mm8oE/Qk
o3zd3ncp6SRUP+h4zfIeGWWstTU68JKEvI3j1qYHkVHMVwv7+8UkNGLIsj5B
JaObR/CIbiChA8Z2EeXFZHRZpUia/o2EOpGkxMYKMjq3fGeyficJqR5+G/Sw
loyOVioX+w6QUH9KndPRTjIySk4+KD9KQken9FhFHDJCfnINzCkScj8Zq7Zx
lIx2naHa2s+TkAnrR1DYDBn9//4CNdrKdy0tkdH/ADCO7Wk=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-4, 4}, {0., 49.99999673469393}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.763593689474724*^9, 3.76359369897817*^9}, 
   3.7635937578205853`*^9, 3.763593797389887*^9, {3.763630577930263*^9, 
   3.763630587170024*^9}}]
}, Open  ]],

Cell["\<\
I have the equation of the interpolation function, and it looks like the \
degree is 2. No test points here though. Working with five seeds points, it \
might indicate likelihood of good agreement and small errors.\
\>", "Text",
 CellChangeTimes->{{3.763593898122198*^9, 3.763593939096057*^9}, {
  3.763632316398734*^9, 3.763632330182149*^9}, {3.763649744266473*^9, 
  3.763649758695616*^9}, {3.763656629860297*^9, 3.7636566483443317`*^9}}],

Cell[TextData[{
 "15. Divided differences. Obtain ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "2"], TraditionalForm]]],
 " in example 2 from numbered line (10), p. 814."
}], "Text",
 CellChangeTimes->{{3.7634939684692297`*^9, 3.763494001630862*^9}, {
  3.769297109582292*^9, 3.7692971199722843`*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[TextData[{
 "There is a notebook with specific code of NDD at ",
 StyleBox["http://nm.mathforcollege.com/topics/newton_divided_difference_\
method.html",
  FontSize->14,
  FontSlant->"Italic"],
 ", but since it is from 2002, I would be surprised if it worked out of the \
box. It does look specific though. There is a very modern but maybe too \
extensive SEMma discussion at ",
 StyleBox["http://nm.mathforcollege.com/topics/newton_divided_difference_\
method.html",
  FontSize->14,
  FontSlant->"Italic"],
 ". I don\[CloseCurlyQuote]t currently have the necessary curiosity to delve \
into how NDD can be used in Mathematica."
}], "Text",
 CellChangeTimes->{{3.763640548897444*^9, 3.7636406158871937`*^9}, {
  3.763640707115601*^9, 3.763640796469941*^9}}],

Cell[TextData[{
 "17.  Backward difference formula (18). Use ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["p", "2"], "[", "x", "]"}], TraditionalForm]]],
 " in numbered line (18), p. 818, and the values of erf x, x = 0.2, 0.4, 0.6 \
in table A4 of appendix 5, compute erf[0.3] and the error. (4S-exact erf[0.3] \
= 0.3286)."
}], "Text",
 CellChangeTimes->{{3.763494004914114*^9, 3.763494106963889*^9}, {
  3.769297145429097*^9, 3.769297156915098*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[TextData[{
 "I will avoid the backward difference and just go with ",
 StyleBox["InterpolatingPolynomial", "Input"],
 "."
}], "Text",
 CellChangeTimes->{{3.763640879568727*^9, 3.763640912749547*^9}, {
  3.7636503315984507`*^9, 3.763650334614283*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"Erf", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"{", 
      RowBox[{"0.2", ",", "0.4", ",", "0.6"}], "}"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7636347254526987`*^9, 3.763634764568516*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.2`", ",", "0.22270258921047847`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4`", ",", "0.42839235504666856`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6`", ",", "0.603856090847926`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.763634757785293*^9, 3.763634765577538*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0.2`", ",", "0.22270258921047847`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.4`", ",", "0.42839235504666856`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.6`", ",", "0.603856090847926`"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.763634774914752*^9, 3.763634784585047*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.2`", ",", "0.22270258921047847`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4`", ",", "0.42839235504666856`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6`", ",", "0.603856090847926`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.763634823947422*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"inpp", "[", "x_", "]"}], "=", 
  RowBox[{"InterpolatingPolynomial", "[", 
   RowBox[{"data", ",", "x"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"0.603856090847926`", "\[VeryThinSpace]", "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"0.9528837540936189`", "\[VeryThinSpace]", "-", 
     RowBox[{"0.3778253754366574`", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "0.2`"}], "+", "x"}], ")"}]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "0.6`"}], "+", "x"}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.763634816219062*^9, 3.7636348273614817`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"va", "=", 
  RowBox[{"inpp", "[", "0.3", "]"}]}]], "Input",
 CellChangeTimes->{{3.763634968809746*^9, 3.763634998500313*^9}}],

Cell[BoxData["0.32932572588294007`"], "Output",
 CellChangeTimes->{{3.7636349777474546`*^9, 3.763634999066009*^9}},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vb", "=", 
  RowBox[{"Erf", "[", "0.3", "]"}]}]], "Input",
 CellChangeTimes->{{3.7636349797402687`*^9, 3.763635003684209*^9}}],

Cell[BoxData["0.32862675945912745`"], "Output",
 CellChangeTimes->{{3.763634984279544*^9, 3.763635004413945*^9}}]
}, Open  ]],

Cell["with an error the size of", "Text",
 CellChangeTimes->{{3.763635135203155*^9, 3.763635140949607*^9}, {
  3.7636566888963947`*^9, 3.763656703612962*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vb", "-", "va"}]], "Input",
 CellChangeTimes->{{3.763635010526567*^9, 3.763635012779632*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.0006989664238126192`"}]], "Output",
 CellChangeTimes->{3.763635013934095*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "\[CloseCurlyQuote]s ",
 StyleBox["InterpolatingPolynomial", "Input"],
 " came up with the same answer as the text."
}], "Text",
 CellChangeTimes->{{3.763635094504848*^9, 3.763635130726069*^9}, {
  3.7636567246678667`*^9, 3.763656733987311*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p1", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"inpp", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Thickness", "[", "0.004", "]"}]}], "}"}], "}"}]}], ",", 
    RowBox[{"Epilog", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Red", ",", 
       RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
       RowBox[{"Point", "[", 
        RowBox[{"{", 
         RowBox[{"0.3", ",", "0.329326"}], "}"}], "]"}]}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.763634871484125*^9, {3.7636351965888853`*^9, 3.76363526453615*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 0, 1], Thickness[0.004], Opacity[1.], LineBox[CompressedData["

1:eJwt2Hk0VO//APChISEjnzYt9jRSCmml901K1pBsIUuylZAlIqFUUlkSWVKh
lCWFiuJeJEtIQpZSiLHMcm0zZsbyu99zfn/d8zp3Ofe8t+e5V97looWbIIlE
ogiQSP87qsHa8aUlCjZS6LbkR1XGLL223uLyKNiUqEmKlKIyFpq8T3l6loKd
jemuL9msjNVP2LmMTFCwoO6+KY6UMuaUmtXb/JOCuYwl+d5c2IIlTFK/PnpN
wY5VNYrWtm/BZrIPFmieoWDGu40rCsK3YBUizj7uVRKYoXmBkGGnEhbR0jVR
7bwSm8ttpDv7KmJjudLr9m4Sx+YyvwsiOxSwbX+Or6D8FsXs4yZ2TnHlsJz/
smd6olZgtjtfZvr6yGK1p5vuoiCCiUc3pghSN2ObsjbJpQ4IY9GWaibxXzZg
RkdOh/y4LYTJhrMCtGPWY7L8c9dUDMiYer5WvdG1tdiOosxr/gxBTCzlIyZ9
djX2N+CpWleeAPZaZYsKM0IK88xIyM7wImHKVnlxWz9IYjZXbRULFBZR+yab
T7cqV2LUCZXTlo/5qJhJbGSDnyjmbWp2Y3BoDr1x0t7BT3Q5ZnfphM6ePWy0
8brVs9b+ZVgSOmqGvptGizqtL0xLCmAg2G2lJjCJtsbKD5Bc5lGv7hrf3Gk6
Kil8rVbHkoNqP4pcX3GZhg7kGmo+VZ9CPX5P9tmuG0SPV0dfubk4jp74u72w
QakXXcvjJzO6B9E9aPrP8eut6Az7XEzCmU50P+7g2u9aisbntK9797ASVY1m
iWKBJSCS+cPn65VSeF3PfBlh8w060kquHHT6DpUGTfsO1PTA8Kl76QEJfTDx
6pmnqc0gzPlmJK9+OgjsXg/BuguD4Pu66FzJ20Egie1MPxg9CIEvhq30Pw/C
Wu+PzdSiQVD+XP3AlDYIuqodO5eRh0CuWCOmd/sQpOYLsd+/HoIQCw6Mlg2B
XoFHlPzyYajCxCh96D/ILFRLnymjwYMjzhtlSkbAR3z9bW4jDRoCZT3J1SNw
yFsgePE3DWRE5JCB1hHop3ZYiAiPwm6T0dtXx0dALidEdJPVKIjYJsfpy9Mg
J+1zyBH2KBgEO5v+d5cGBTftbBL3jMP21uraBIdR+OQcs2bXezqEDT8L3DY4
Bj2Sv38MN9NBZ/AkqYA5BmxUMzF9kA6b/jR4KvDHYJfMgMRyCQbs6VnsZvw3
Dtm9B0X6zzKgozWNuqQ3DrEnJ3l3pJhQhSbGieWOg81R+7+0Cyww+hDl/tV+
AgJn3j7OjGZB14eSplH3CUjMXuFw8hELrpbnifP9J6BZ4H1P1WcWbPvYv33x
1gTI/bk11rQSByYa2n+1dAKS0ocGn57FQeGbv7DXCjqErn7UeUJqEvTIrp60
V3TwXmb1x2/TJBw4MOnNL6GD/ZTUWJLyJIzGvf4oVEkHaIub/3lgEvxufdJd
aKUDOe6aopPrJFC717GCp+hwb5mHn2/pJKj3/sDS9zIge2rPygSrKXjn4Xw8
s4IBDwam15Y4TQGqNY2H1jAgpq1YrtNrCqJky0ZMmxjgUbRtt3TEFOw0aCzv
6WGAmpfM6acvpkBjVmMxdI4BHwaEXr6Zm4L212IkuiYTmts69NrTpuHG63ba
zWwmvLO321edMw0Ph2k1K18x4enoH9XiommIzxAwji1mQhBpQupezTTAXV0P
90omyO0SGDAYJ86H8BredDEh8P6O8Or9MzAbrqt6czkLZExjyoq7Z6BVS/PS
bhcWiPSKvcwanAHx290S8e4smHZLyLhHnwENhyibwfMsaAjPiD5PmoVDt4Zm
vYJZcKnwrTmVOgu6Y3024nHEefE/jKzgWZD6mYPeL2GB39e9yvfXsok6SpF8
xGdB1NJ0pJU8GwQ45vlSJBwSNYt/b97OBscdr8xPCuJQmk5NLjjMhjovM+pn
YRzmvKXJTefZcJQasOBKweGqOH+AXMuG1UXr9TNkcbiPvNdpbmFDG0cnK1Ye
hycBlx4ldbOhXr0s9JIiDtW/JswUmGxwCXr0cfdWHMiFv1CQ5oCh7n63QDUc
Yk2qMkMvEr32r9OadRCH9MhQ7uFQDoDGhuEbOjgUlO05teIGB9ouFs+uBRxa
Nr8WT03jwOOP7U+oujhIMrOulNVxgJnMlBE9joO8gv3PsDYOSLnVfAkwwEHD
ar2mXh8HLiqNTvYY4mBZFT/ejnOg+5JKe5IJDin3Im3xjXNgfyq6os4Ch7wa
nbL3ynNg8nwkjGyJwwc2VzJCfQ6Caek1Oqdw6HX0b1ipPwchB+Z/ZlnjILPT
da+q/xyoKz7YpmCPw05X2aSpsDlgzcYs13LAAUnpY5bfnAPah6/uuo44OC+d
fH48cw6iKUZvjZ1wyPmmt+ZcwxxcXJK7KEv0zfr0xPSA9jmIwsalOYTvnPsr
H/1rDrTbaQuNbjj4L1xRe4LPwSvaFT9ndxwOq5bo967ngnOv2HJrLyJ/bFLr
qAIXSuR8r4h440CtMbXkbOdCwfvlKmWEJW3HnVYf5kLyz7adpAs49MfIh5p6
cuHYn6YJ+4s4WFhcJDlc4kLXq0aVUcJ1mytjvMO5IFHPf+LjS+Sj1CbpVgIX
Aia5By744SB37bl0SjoXspfqHIYJPzCaycrN5UKoY125jT8OVwbvF9SUc0FW
wnGz+iViThT+1vheywW6I0fpIWGXENXyPy1ccCF9dmMTNpSsr5sf4MJRLU5i
XgAOVX2rjcXoXHjb4BDBI6z+wqVdms2FhgJOjn4gEa9Di/17RHkwdq4u/Qfh
uBXGbkdX82BWm3teKgiHpY5HEydlePDK1SnYmLD/E5qfC5UHQn28ikjCI95a
c74aPFiR3bD3LWG7vdFXI7R5UPqxkfGbcKvgd/K9YzwQ2bL4ixyMg26rzJ0M
Mx6Q/7gJbSVc9uj8qnw7HrwYI7nrEaa6VaSUn+XBpN43AQfCGbtEZBp8ePAP
b+v0JSw5fyqn6zIPrjKEhiIIX6/P3jYcxQPsgI9KLOG5xMni6TjifbtXvLxP
2NsR9gqm8EC7vts5nnC/yt1Kyac8CBTuOxlH2GK294hsPg+sHkpGRBP+glGb
dpTx4G9QyFAg4f1xQWbaKA9W5a2JdCVcYP25y7CRiJfKsLUxYTlFKQfbHzzw
mqe57yL8gHlmyP03DxJlZd5QCItUFHoG0XjgknRTc5yIR9gNPuv6JA96rZVY
KGGWmUFQEp8HvPMzQ/GEXTalzD8V4kN1O2eVA+Eu2r+oYgofdt1WC1EibFii
sQKV5oN+fKo0jchX1dVr91sU+SA8qjWdQ1jDsHXNrx18OB8vLOxIOHfNpozx
vXwIuy1qIfW//Ba8z1tuzIf7FwqSzxP1oCynncK04gMlXeOzKGEsCbvR6cyH
F2ffncom6mk6tNElO5gPCs3vntYS9RjHNDGPjeLDMi9NeyPCyi7t4HeXD4vZ
hSEtRP3aGfRtgmw+aNPTfmNEvc98OiOmXMSHa7yVShqE7+36xxUv58PvnKst
mUR/1KxjdPW28uFvi43BWR8cVEYW44N4fJDww/8VEv1WYxsd4SA0D+uczI5M
Ef1p37LcR09yHvZNFJLVCceXShpJKc/D507n4kwPIv9RCkJF5vNAni/I1yT6
PZH9fPqB/Tx8/8qVNyLmwXYv1cEr7vPwfq8e394VhzPmu1GD8HloHvreddGZ
yL/ssZDhvHmQudumbkHMH6ekJvfmknko1hHFtIn5xBM+YVVSNQ92sYffyJ/G
QY1prRnZMQ9cTt6nXhsckj95MjaRFsBB6XTwCmL+qe1i9i0TW4CSssjN9cR8
bMj2bxpfswAKQ7nKEeY4zMdeefFBdQEMpWjO/aY4nLW962xpvQBYtXGYLTF/
F5tXmR10WYA+TacD4/o4pCIPDylcWAAJXb/Tgcdw+Lo1ayMetQCoRtyX0CNE
/tnFnXeKFkDfLRfRJea/QFKHQa3QIkxLuH2u3Uk8L3PcZZKyCB4NdEVpYv3g
5ZHCZDcQLg997LmdyFfV9qIraouwdPjlPz6V6O/x61K7rRfhIcOsbJhYn5p1
tfpy8hbhXFGTe6sUDo0mRjPtb4n7/5YFd0oS8bNxXilQuQi4wYtnPyVwQH3u
gsP3RXhcm2HQIorD27Th7DW8RXA2b+8LJ9bL1Knk8zFGSyBZ+E1hdIAFyQv5
N0pPLQFV8EK27W8WJIrUPB48swRmX9baVXez4I4Ms+1QwBJ0p9/3vPSN2FcZ
HtPiZCxB6ZW1q1w+scD1GXvBnbkEbyVCojwfsGDdy/z6nOMk5HVkAlNOhwVS
CxsMnpmQkFdfswyD9rJA3Dy2KcuChFQYLztUo84CQa5HS5o9CZGcaRzXUWYB
87jyj3hfEvLk5yn7zxIs+DL6pD8slYQYT7lnrewn9ivUh7OWoySkLzAwNyGQ
CX5hQsEWDBKy+9k2erkPE863BcydmCIhz4S0mrrdmeBy+STfcJ6ElPoZGPNs
mWDaIClwWFIA+dTv69GswwRljzviO/YJIPbiFaTCZUzoenFNUeiWANJWpvXm
zC0G/Dsh1uNzVwAhHeA/KIhgwBQn+V53ogDy1qjhHDOIARLH87n5mQJIzrqQ
DjM3Bhwb7fxmUSKAvDLX6o4/zID3VNWwJ/0CiLnp+sgFDh1SX3Z2HNQSRES9
btnctqfD6fxtMf6DgoiS6ioZb/IEbJBdbIugCSI+mbE577nj0Jv4feNduiBi
d/lSDI85Dnahl9+8YBPXeyTZu/YQ+2GDL79+iS5DInaKW1QXjoMlzVlTX3MZ
ou0w4FxkOQ7Gio/+bry+DOnYvWGNSfoYaKcvP1i3hYyEddQ1ZoiNgoQru/yQ
KhkxEzlAO7dAg4Ftw/s+7CIj8Rp1b7awaBBTUbMn/yAZOe0lZxrZToPvPeEa
CeZkRNJ9PLs4lQbn1s+oOISTEXJycy1LgQbxyX/Xz3aQEZHaxg6W2ggM3S9n
K10XQqLdXxzkKP2DUsWICflfwojSfM3ADeQP/M0O1iBvFkGCUqQOZqV0Qjv1
6LXpyysQ9pnH7pl3a0E27ahcQ6UoYiaV7eKzOQd9+MqWu39eDNkFYdv0w7+h
P1Ddng+nViKlgsI2v7z/oN7VjmKbUyUQqcer/SCXhrpk9Tz8lCmBHKNUbhFt
oqF24ZYK9tkSSKJAT/NfJg09vt9wf3qRBGLh6T31Zt8oqvRGy126TgJJPcpL
G2oeRX89Ea9dMyWB+Kpjztc5Y6jxtYpQCWMKItlFr/t4io4ecdQSLjKnID6e
Qo3kMDp6QLs4wcSagvSHJ1TZPqOj1LncvDgXCsJUIUduZdFRsm9Cl2gIBem9
d9LV4jYDrTzjobH8OQUhxaVlDqNMtFRnqPJ5PgXx3zVRzxhhogUbHQ2OvaEg
i6de/xOQYKFpP0863fhEQfYpJc6a2BNL2gniE+MHBbnaUh0QyGWhF3ZUSGd3
UxAdHetHPpI4elZMK1e3n4LoWd70oyrhqEX9tk+RYxRkrPbByiIjHDXIzdWX
Z1GQ2E3+30PO4CgSLfcDm6EgJVq37xldwtG9zumOTjwKco7Sq6d4E0f///8G
8uTl2RlSOo7+H5rkuWg=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    RGBColor[1, 0, 0], 
    PointSize[0.03], 
    PointBox[{0.3, 0.329326}]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-4, 4}, {-11.078994733011267`, 1.0291904279842603`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.763634872976577*^9, {3.763635252042511*^9, 3.7636352653271723`*^9}}]
}, Open  ]],

Cell["\<\
This problem dealt with interpolation of the Erf function , the same as in \
problem 9. There the Efr function was an embarrassing incident, but here it \
gives less trouble, with a reassuringly small error.\
\>", "Text",
 CellChangeTimes->{{3.7636352783108253`*^9, 3.763635346332212*^9}, {
  3.7636567601244297`*^9, 3.763656814118537*^9}, {3.769337719242854*^9, 
  3.76933772800231*^9}}],

Cell[TextData[{
 "General comments on Interpolation.\n1. My go-to method is ",
 StyleBox["InterpolatingPolynomial", "Input"],
 ". (as in problem 17).\n2. If IP seems to fall short, ",
 StyleBox["FindFit", "Input"],
 " should be looked at. (as discussed in problems 5 and 9).\n3. If these two \
approaches don\[CloseCurlyQuote]t work, a custom ",
 StyleBox["Fit", "Input"],
 " function, (using the method described in the Intro), may be worth a try."
}], "Text",
 CellChangeTimes->{{3.763635368675156*^9, 3.76363567658869*^9}, {
  3.763649833399569*^9, 3.763649867964389*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.763635387312953*^9, 3.763635389082267*^9}, {
  3.763635543946837*^9, 3.763635545114873*^9}}]
},
WindowSize->{1366, 843},
WindowMargins->{{4, Automatic}, {Automatic, 4}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
Magnification:>1.5 Inherited,
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 10, \
2015)",
StyleDefinitions->"Charter1.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 223, 5, 51, "Text",
 Evaluatable->False],
Cell[626, 20, 73, 1, 45, "Input"],
Cell[702, 23, 1094, 16, 224, "Text"],
Cell[CellGroupData[{
Cell[1821, 43, 484, 15, 45, "Input"],
Cell[2308, 60, 498, 15, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2843, 80, 207, 4, 45, "Input"],
Cell[3053, 86, 11080, 222, 93, "Output"]
}, Open  ]],
Cell[14148, 311, 459, 13, 45, "Input"],
Cell[14610, 326, 188, 4, 51, "Text"],
Cell[14801, 332, 314, 7, 45, "Input"],
Cell[CellGroupData[{
Cell[15140, 343, 1345, 31, 91, "Input"],
Cell[16488, 376, 1649, 41, 114, "Output"]
}, Open  ]],
Cell[18152, 420, 419, 12, 54, "Input"],
Cell[18574, 434, 493, 10, 45, "Input"],
Cell[19070, 446, 945, 20, 45, "Input"],
Cell[20018, 468, 788, 18, 45, "Input"],
Cell[20809, 488, 960, 20, 45, "Input"],
Cell[21772, 510, 518, 14, 45, "Input"],
Cell[22293, 526, 549, 15, 45, "Input"],
Cell[22845, 543, 1075, 16, 189, "Text"],
Cell[CellGroupData[{
Cell[23945, 563, 660, 14, 45, "Input"],
Cell[24608, 579, 35161, 609, 382, "Output"]
}, Open  ]],
Cell[59784, 1191, 378, 11, 77, "Text"],
Cell[60165, 1204, 73, 1, 45, "Input"],
Cell[60241, 1207, 323, 6, 86, "Text"],
Cell[60567, 1215, 113, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[60705, 1220, 211, 6, 45, "Input"],
Cell[60919, 1228, 117, 2, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61073, 1235, 176, 4, 45, "Input"],
Cell[61252, 1241, 91, 1, 45, "Output"]
}, Open  ]],
Cell[61358, 1245, 140, 1, 51, "Text"],
Cell[61501, 1248, 588, 13, 146, "Text"],
Cell[62092, 1263, 217, 5, 51, "Text"],
Cell[62312, 1270, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[62410, 1275, 525, 15, 47, "Input"],
Cell[62938, 1292, 477, 14, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63452, 1311, 1910, 49, 220, "Input"],
Cell[65365, 1362, 3109, 74, 309, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68511, 1441, 126, 2, 45, "Input"],
Cell[68640, 1445, 116, 2, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68793, 1452, 128, 2, 45, "Input"],
Cell[68924, 1456, 114, 2, 69, "Output"]
}, Open  ]],
Cell[69053, 1461, 254, 5, 51, "Text"],
Cell[69310, 1468, 1539, 56, 113, "Text"],
Cell[70852, 1526, 73, 1, 45, "Input"],
Cell[70928, 1529, 130, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[71083, 1534, 252, 6, 48, "Input"],
Cell[71338, 1542, 172, 4, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71547, 1551, 123, 2, 45, "Input"],
Cell[71673, 1555, 110, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71820, 1561, 125, 2, 45, "Input"],
Cell[71948, 1565, 110, 1, 45, "Output"]
}, Open  ]],
Cell[72073, 1569, 235, 5, 51, "Text"],
Cell[CellGroupData[{
Cell[72333, 1578, 340, 10, 45, "Input"],
Cell[72676, 1590, 378, 11, 76, "Output"]
}, Open  ]],
Cell[73069, 1604, 420, 7, 86, "Text"],
Cell[CellGroupData[{
Cell[73514, 1615, 633, 18, 76, "Input"],
Cell[74150, 1635, 406, 12, 76, "Output"]
}, Open  ]],
Cell[74571, 1650, 556, 9, 120, "Text"],
Cell[CellGroupData[{
Cell[75152, 1663, 907, 25, 90, "Input"],
Cell[76062, 1690, 8456, 154, 308, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84555, 1849, 103, 2, 45, "Input"],
Cell[84661, 1853, 137, 2, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84835, 1860, 155, 2, 45, "Input"],
Cell[84993, 1864, 177, 3, 69, "Output"]
}, Open  ]],
Cell[85185, 1870, 305, 6, 51, "Text"],
Cell[CellGroupData[{
Cell[85515, 1880, 205, 3, 45, "Input"],
Cell[85723, 1885, 138, 2, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85898, 1892, 161, 3, 45, "Input"],
Cell[86062, 1897, 164, 3, 69, "Output"]
}, Open  ]],
Cell[86241, 1903, 359, 7, 86, "Text"],
Cell[86603, 1912, 344, 5, 86, "Text"],
Cell[86950, 1919, 73, 1, 45, "Input"],
Cell[87026, 1922, 252, 5, 51, "Text"],
Cell[87281, 1929, 394, 13, 76, "Input"],
Cell[87678, 1944, 164, 2, 51, "Text"],
Cell[87845, 1948, 240, 7, 45, "Input"],
Cell[88088, 1957, 270, 6, 51, "Text"],
Cell[CellGroupData[{
Cell[88383, 1967, 187, 5, 45, "Input"],
Cell[88573, 1974, 560, 11, 34, "Message"],
Cell[89136, 1987, 230, 6, 45, "Output"]
}, Open  ]],
Cell[89381, 1996, 232, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[89638, 2004, 208, 6, 45, "Input"],
Cell[89849, 2012, 335, 9, 54, "Output"]
}, Open  ]],
Cell[90199, 2024, 222, 5, 51, "Text"],
Cell[CellGroupData[{
Cell[90446, 2033, 450, 11, 45, "Input"],
Cell[90899, 2046, 2876, 62, 213, "Output"]
}, Open  ]],
Cell[93790, 2111, 791, 21, 90, "Text"],
Cell[CellGroupData[{
Cell[94606, 2136, 195, 5, 47, "Input"],
Cell[94804, 2143, 125, 3, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94966, 2151, 123, 2, 45, "Input"],
Cell[95092, 2155, 88, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95217, 2161, 127, 2, 45, "Input"],
Cell[95347, 2165, 107, 2, 69, "Output"]
}, Open  ]],
Cell[95469, 2170, 188, 5, 51, "Text"],
Cell[CellGroupData[{
Cell[95682, 2179, 123, 2, 45, "Input"],
Cell[95808, 2183, 88, 1, 45, "Output"]
}, Open  ]],
Cell[95911, 2187, 954, 21, 155, "Text"],
Cell[96868, 2210, 1476, 57, 144, "Text"],
Cell[98347, 2269, 73, 1, 45, "Input"],
Cell[98423, 2272, 670, 11, 120, "Text"],
Cell[CellGroupData[{
Cell[99118, 2287, 838, 22, 70, "Input"],
Cell[99959, 2311, 647, 12, 34, "Message"],
Cell[100609, 2325, 9191, 190, 105, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109837, 2520, 696, 20, 70, "Input"],
Cell[110536, 2542, 553, 10, 34, "Message"],
Cell[111092, 2554, 9098, 188, 105, "Output"]
}, Open  ]],
Cell[120205, 2745, 231, 4, 86, "Text"],
Cell[CellGroupData[{
Cell[120461, 2753, 1173, 28, 104, "Input"],
Cell[121637, 2783, 12144, 212, 306, "Output"]
}, Open  ]],
Cell[133796, 2998, 94, 1, 45, "Input"],
Cell[133893, 3001, 493, 8, 155, "Text"],
Cell[CellGroupData[{
Cell[134411, 3013, 550, 17, 70, "Input"],
Cell[134964, 3032, 390, 13, 86, "Output"]
}, Open  ]],
Cell[135369, 3048, 479, 8, 86, "Text"],
Cell[CellGroupData[{
Cell[135873, 3060, 923, 24, 112, "Input"],
Cell[136799, 3086, 5651, 105, 260, "Output"]
}, Open  ]],
Cell[142465, 3194, 388, 7, 86, "Text"],
Cell[CellGroupData[{
Cell[142878, 3205, 128, 2, 45, "Input"],
Cell[143009, 3209, 270, 6, 73, "Output"]
}, Open  ]],
Cell[143294, 3218, 452, 7, 86, "Text"],
Cell[143749, 3227, 468, 10, 45, "Input"],
Cell[144220, 3239, 1258, 35, 127, "Input"],
Cell[145481, 3276, 274, 5, 86, "Text"],
Cell[CellGroupData[{
Cell[145780, 3285, 246, 6, 45, "Input"],
Cell[146029, 3293, 2467, 64, 236, "Output"]
}, Open  ]],
Cell[148511, 3360, 215, 5, 75, "Text"],
Cell[148729, 3367, 618, 18, 114, "Text"],
Cell[149350, 3387, 73, 1, 45, "Input"],
Cell[149426, 3390, 630, 11, 189, "Text"],
Cell[CellGroupData[{
Cell[150081, 3405, 719, 18, 47, "Input"],
Cell[150803, 3425, 419, 12, 45, "Output"]
}, Open  ]],
Cell[151237, 3440, 580, 9, 120, "Text"],
Cell[151820, 3451, 885, 24, 75, "Input"],
Cell[152708, 3477, 1685, 46, 162, "Input"],
Cell[CellGroupData[{
Cell[154418, 3527, 171, 4, 45, "Input"],
Cell[154592, 3533, 6628, 132, 294, "Output"]
}, Open  ]],
Cell[161235, 3668, 696, 10, 155, "Text"],
Cell[CellGroupData[{
Cell[161956, 3682, 128, 2, 45, "Input"],
Cell[162087, 3686, 147, 2, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162271, 3693, 412, 12, 45, "Input"],
Cell[162686, 3707, 439, 11, 45, "Output"]
}, Open  ]],
Cell[163140, 3721, 175, 5, 51, "Text"],
Cell[163318, 3728, 73, 1, 45, "Input"],
Cell[163394, 3731, 227, 5, 51, "Text"],
Cell[CellGroupData[{
Cell[163646, 3740, 444, 11, 75, "Input"],
Cell[164093, 3753, 496, 11, 45, "Output"]
}, Open  ]],
Cell[164604, 3767, 160, 3, 51, "Text"],
Cell[CellGroupData[{
Cell[164789, 3774, 208, 4, 45, "Input"],
Cell[165000, 3780, 747, 13, 34, "Message"],
Cell[165750, 3795, 11166, 221, 93, "Output"]
}, Open  ]],
Cell[176931, 4019, 169, 2, 51, "Text"],
Cell[CellGroupData[{
Cell[177125, 4025, 122, 2, 45, "Input"],
Cell[177250, 4029, 282, 4, 45, "Output"]
}, Open  ]],
Cell[177547, 4036, 168, 2, 51, "Text"],
Cell[CellGroupData[{
Cell[177740, 4042, 498, 13, 69, "Input"],
Cell[178241, 4057, 354, 7, 45, "Output"]
}, Open  ]],
Cell[178610, 4067, 122, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[178757, 4072, 697, 16, 107, "Input"],
Cell[179457, 4090, 695, 13, 34, "Message"],
Cell[180155, 4105, 656, 17, 45, "Output"]
}, Open  ]],
Cell[180826, 4125, 124, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[180975, 4130, 687, 17, 107, "Input"],
Cell[181665, 4149, 692, 13, 34, "Message"],
Cell[182360, 4164, 545, 15, 45, "Output"]
}, Open  ]],
Cell[182920, 4182, 108, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[183053, 4187, 601, 16, 108, "Input"],
Cell[183657, 4205, 425, 10, 49, "Output"]
}, Open  ]],
Cell[184097, 4218, 115, 1, 51, "Text"],
Cell[184215, 4221, 126, 2, 45, "Input"],
Cell[184344, 4225, 247, 5, 69, "Input"],
Cell[184594, 4232, 443, 13, 45, "Input"],
Cell[185040, 4247, 319, 7, 45, "Input"],
Cell[CellGroupData[{
Cell[185384, 4258, 409, 8, 47, "Input"],
Cell[185796, 4268, 409, 8, 45, "Output"]
}, Open  ]],
Cell[186220, 4279, 543, 15, 45, "Input"],
Cell[CellGroupData[{
Cell[186788, 4298, 633, 15, 107, "Input"],
Cell[187424, 4315, 469, 12, 49, "Output"]
}, Open  ]],
Cell[187908, 4330, 641, 16, 45, "Input"],
Cell[188552, 4348, 126, 2, 45, "Input"],
Cell[188681, 4352, 244, 5, 69, "Input"],
Cell[188928, 4359, 124, 2, 45, "Input"],
Cell[189055, 4363, 244, 5, 69, "Input"],
Cell[189302, 4370, 722, 16, 124, "Text"],
Cell[CellGroupData[{
Cell[190049, 4390, 270, 5, 45, "Input"],
Cell[190322, 4397, 13863, 241, 394, "Output"]
}, Open  ]],
Cell[204200, 4641, 173, 2, 51, "Text"],
Cell[CellGroupData[{
Cell[204398, 4647, 553, 14, 45, "Input"],
Cell[204954, 4663, 644, 15, 45, "Output"]
}, Open  ]],
Cell[205613, 4681, 902, 22, 104, "Input"],
Cell[CellGroupData[{
Cell[206540, 4707, 129, 2, 45, "Input"],
Cell[206672, 4711, 285, 4, 45, "Output"]
}, Open  ]],
Cell[206972, 4718, 847, 13, 155, "Text"],
Cell[CellGroupData[{
Cell[207844, 4735, 1033, 26, 75, "Input"],
Cell[208880, 4763, 723, 13, 34, "Message"],
Cell[209606, 4778, 9083, 185, 93, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[218726, 4968, 124, 2, 45, "Input"],
Cell[218853, 4972, 181, 2, 45, "Output"]
}, Open  ]],
Cell[219049, 4977, 94, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[219168, 4982, 630, 17, 75, "Input"],
Cell[219801, 5001, 552, 10, 34, "Message"],
Cell[220356, 5013, 8915, 182, 93, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[229308, 5200, 124, 2, 45, "Input"],
Cell[229435, 5204, 88, 1, 45, "Output"]
}, Open  ]],
Cell[229538, 5208, 128, 1, 51, "Text"],
Cell[229669, 5211, 1638, 64, 186, "Text"],
Cell[231310, 5277, 434, 11, 87, "Text"],
Cell[231747, 5290, 73, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[231845, 5295, 434, 13, 45, "Input"],
Cell[232282, 5310, 428, 13, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[232747, 5328, 158, 4, 47, "Input"],
Cell[232908, 5334, 566, 19, 45, "Output"]
}, Open  ]],
Cell[233489, 5356, 528, 16, 45, "Input"],
Cell[CellGroupData[{
Cell[234042, 5376, 314, 9, 45, "Input"],
Cell[234359, 5387, 962, 32, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[235358, 5424, 125, 2, 45, "Input"],
Cell[235486, 5428, 126, 2, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[235649, 5435, 127, 2, 45, "Input"],
Cell[235779, 5439, 120, 2, 69, "Output"]
}, Open  ]],
Cell[235914, 5444, 125, 2, 45, "Input"],
Cell[236042, 5448, 319, 8, 69, "Input"],
Cell[CellGroupData[{
Cell[236386, 5460, 378, 11, 45, "Input"],
Cell[236767, 5473, 327, 10, 45, "Output"]
}, Open  ]],
Cell[237109, 5486, 221, 5, 45, "Input"],
Cell[CellGroupData[{
Cell[237355, 5495, 148, 3, 45, "Input"],
Cell[237506, 5500, 9750, 172, 207, "Output"]
}, Open  ]],
Cell[247271, 5675, 171, 2, 51, "Text"],
Cell[247445, 5679, 301, 6, 110, "Text"],
Cell[247749, 5687, 73, 1, 45, "Input"],
Cell[247825, 5690, 161, 2, 51, "Text"],
Cell[CellGroupData[{
Cell[248011, 5696, 499, 16, 45, "Input"],
Cell[248513, 5714, 488, 16, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[249038, 5735, 224, 5, 47, "Input"],
Cell[249265, 5742, 368, 12, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[249670, 5759, 596, 16, 67, "Input"],
Cell[250269, 5777, 6481, 119, 328, "Output"]
}, Open  ]],
Cell[256765, 5899, 450, 7, 129, "Text"],
Cell[257218, 5908, 342, 9, 115, "Text"],
Cell[257563, 5919, 762, 17, 283, "Text"],
Cell[258328, 5938, 500, 12, 168, "Text"],
Cell[258831, 5952, 255, 6, 76, "Text"],
Cell[259089, 5960, 73, 1, 67, "Input"],
Cell[CellGroupData[{
Cell[259187, 5965, 352, 11, 67, "Input"],
Cell[259542, 5978, 360, 9, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[259939, 5992, 392, 10, 112, "Input"],
Cell[260334, 6004, 336, 9, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[260707, 6018, 158, 4, 70, "Input"],
Cell[260868, 6024, 464, 12, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[261369, 6041, 149, 3, 67, "Input"],
Cell[261521, 6046, 153, 2, 103, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[261711, 6053, 150, 3, 67, "Input"],
Cell[261864, 6058, 113, 1, 67, "Output"]
}, Open  ]],
Cell[261992, 6062, 158, 2, 76, "Text"],
Cell[CellGroupData[{
Cell[262175, 6068, 117, 2, 67, "Input"],
Cell[262295, 6072, 108, 2, 67, "Output"]
}, Open  ]],
Cell[262418, 6077, 311, 8, 76, "Text"],
Cell[CellGroupData[{
Cell[262754, 6089, 807, 23, 112, "Input"],
Cell[263564, 6114, 6735, 126, 310, "Output"]
}, Open  ]],
Cell[270314, 6243, 398, 7, 129, "Text"],
Cell[270715, 6252, 575, 11, 283, "Text"],
Cell[271293, 6265, 141, 2, 67, "Input"]
}
]
*)

